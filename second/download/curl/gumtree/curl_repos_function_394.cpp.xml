<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_394.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">Curl_http_output_auth<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">connectdata<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">conn<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">request<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">path<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="5" pos:column="23">bool<pos:position pos:line="5" pos:column="27"/></name></type> <name pos:line="5" pos:column="28">proxytunnel<pos:position pos:line="5" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="40"/></parameter_list> <comment type="block" pos:line="5" pos:column="41">/* TRUE if this is the request setting
                                           up the proxy tunnel */</comment>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name pos:line="8" pos:column="21">CURLE_OK<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">SessionHandle<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">data<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">conn<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">data<pos:position pos:line="9" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">auth<pos:position pos:line="10" pos:column="13"/></name><init pos:line="10" pos:column="13">=<expr><name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">auth<pos:position pos:line="11" pos:column="14"/></name></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">authhost<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">auth<pos:position pos:line="12" pos:column="14"/></name></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">authproxy<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">curlassert<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">data<pos:position pos:line="14" pos:column="18"/></name></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">authhost<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">&amp;<pos:position pos:line="16" pos:column="19"/></operator><name><name pos:line="16" pos:column="15">data<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">state<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">authhost<pos:position pos:line="16" pos:column="35"/></name></name></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">authproxy<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">&amp;<pos:position pos:line="17" pos:column="20"/></operator><name><name pos:line="17" pos:column="16">data<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">state<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">authproxy<pos:position pos:line="17" pos:column="37"/></name></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">(<pos:position pos:line="19" pos:column="7"/></operator><name><name pos:line="19" pos:column="7">conn<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">bits<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">httpproxy<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">&amp;&amp;<pos:position pos:line="19" pos:column="38"/></operator> <name><name pos:line="19" pos:column="31">conn<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">bits<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">proxy_user_passwd<pos:position pos:line="19" pos:column="59"/></name></name><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator> <operator pos:line="19" pos:column="61">||<pos:position pos:line="19" pos:column="63"/></operator>
     <name><name pos:line="20" pos:column="6">conn<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">bits<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">user_passwd<pos:position pos:line="20" pos:column="28"/></name></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
    <comment type="block" pos:line="21" pos:column="5">/* continue please */</comment> <block type="pseudo"><empty_stmt pos:line="21" pos:column="27">;<pos:position pos:line="21" pos:column="28"/></empty_stmt></block></then>
  <else pos:line="22" pos:column="3">else <block pos:line="22" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">authhost<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">done<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">TRUE<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">authproxy<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">done<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">TRUE<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">CURLE_OK<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return> <comment type="block" pos:line="25" pos:column="22">/* no authentication with no user or password */</comment>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name><name pos:line="28" pos:column="6">authhost<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">want<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">&amp;&amp;<pos:position pos:line="28" pos:column="31"/></operator> <operator pos:line="28" pos:column="24">!<pos:position pos:line="28" pos:column="25"/></operator><name><name pos:line="28" pos:column="25">authhost<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">picked<pos:position pos:line="28" pos:column="41"/></name></name></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42">
    <comment type="block" pos:line="29" pos:column="5">/* The app has selected one or more methods, but none has been picked
       so far by a server round-trip. Then we set the picked one to the
       want one, and if this is one single bit it'll be used instantly. */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="5">authhost<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">picked<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name><name pos:line="32" pos:column="24">authhost<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">want<pos:position pos:line="32" pos:column="38"/></name></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt></block></then></if>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name><name pos:line="34" pos:column="6">authproxy<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">want<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">&amp;&amp;<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="25">!<pos:position pos:line="34" pos:column="26"/></operator><name><name pos:line="34" pos:column="26">authproxy<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">picked<pos:position pos:line="34" pos:column="43"/></name></name></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44">
    <comment type="block" pos:line="35" pos:column="5">/* The app has selected one or more methods, but none has been picked so
       far by a proxy round-trip. Then we set the picked one to the want one,
       and if this is one single bit it'll be used instantly. */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="5">authproxy<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">picked<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <name><name pos:line="38" pos:column="25">authproxy<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">want<pos:position pos:line="38" pos:column="40"/></name></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* Send proxy authentication header if needed */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name><name pos:line="41" pos:column="7">conn<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">bits<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">.<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">httpproxy<pos:position pos:line="41" pos:column="27"/></name></name> <operator pos:line="41" pos:column="28">&amp;&amp;<pos:position pos:line="41" pos:column="38"/></operator>
      <operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><name><name pos:line="42" pos:column="8">conn<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">bits<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">.<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">tunnel_proxy<pos:position pos:line="42" pos:column="31"/></name></name> <operator pos:line="42" pos:column="32">==<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="35">proxytunnel<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">)<pos:position pos:line="42" pos:column="47"/></operator></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48"> <block pos:line="42" pos:column="49">{
<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">USE_NTLM<pos:position pos:line="43" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name><name pos:line="44" pos:column="8">authproxy<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">picked<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">==<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">CURLAUTH_NTLM<pos:position pos:line="44" pos:column="42"/></name></expr>)<pos:position pos:line="44" pos:column="43"/></condition><then pos:line="44" pos:column="43"> <block pos:line="44" pos:column="44">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">auth<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">char<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">*<pos:position pos:line="45" pos:column="19"/></operator><operator pos:line="45" pos:column="19">)<pos:position pos:line="45" pos:column="20"/></operator><literal type="string" pos:line="45" pos:column="20">"NTLM"<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">result<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">Curl_output_ntlm<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">conn<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">TRUE<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">(<expr><name pos:line="47" pos:column="10">result<pos:position pos:line="47" pos:column="16"/></name></expr>)<pos:position pos:line="47" pos:column="17"/></condition><then pos:line="47" pos:column="17">
        <block type="pseudo"><return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">result<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then>
    <elseif pos:line="50" pos:column="5">else
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="52" pos:column="7">if<condition pos:line="52" pos:column="9">(<expr><name><name pos:line="52" pos:column="10">authproxy<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">picked<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">==<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="31">CURLAUTH_BASIC<pos:position pos:line="52" pos:column="45"/></name></expr>)<pos:position pos:line="52" pos:column="46"/></condition><then pos:line="52" pos:column="46"> <block pos:line="52" pos:column="47">{
        <comment type="block" pos:line="53" pos:column="9">/* Basic */</comment>
        <if pos:line="54" pos:column="9">if<condition pos:line="54" pos:column="11">(<expr><name><name pos:line="54" pos:column="12">conn<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">bits<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">.<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">proxy_user_passwd<pos:position pos:line="54" pos:column="40"/></name></name> <operator pos:line="54" pos:column="41">&amp;&amp;<pos:position pos:line="54" pos:column="51"/></operator>
           <operator pos:line="55" pos:column="12">!<pos:position pos:line="55" pos:column="13"/></operator><call><name pos:line="55" pos:column="13">checkheaders<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">data<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="32">"Proxy-authorization:"<pos:position pos:line="55" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56"> <block pos:line="55" pos:column="57">{
          <expr_stmt><expr><name pos:line="56" pos:column="11">auth<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">char<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">*<pos:position pos:line="56" pos:column="23"/></operator><operator pos:line="56" pos:column="23">)<pos:position pos:line="56" pos:column="24"/></operator><literal type="string" pos:line="56" pos:column="24">"Basic"<pos:position pos:line="56" pos:column="31"/></literal></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
          <expr_stmt><expr><name pos:line="57" pos:column="11">result<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <call><name pos:line="57" pos:column="20">Curl_output_basic<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name pos:line="57" pos:column="38">conn<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="44">TRUE<pos:position pos:line="57" pos:column="48"/></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
          <if pos:line="58" pos:column="11">if<condition pos:line="58" pos:column="13">(<expr><name pos:line="58" pos:column="14">result<pos:position pos:line="58" pos:column="20"/></name></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21">
            <block type="pseudo"><return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">result<pos:position pos:line="59" pos:column="26"/></name></expr>;<pos:position pos:line="59" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="61" pos:column="9">/* NOTE: Curl_output_basic() should set 'done' TRUE, as the other auth
           functions work that way */</comment>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">authproxy<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">done<pos:position pos:line="63" pos:column="24"/></name></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">TRUE<pos:position pos:line="63" pos:column="31"/></name></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if></elseif>
<cpp:ifndef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifndef<pos:position pos:line="65" pos:column="8"/></cpp:directive> <name pos:line="65" pos:column="9">CURL_DISABLE_CRYPTO_AUTH<pos:position pos:line="65" pos:column="33"/></name></cpp:ifndef>
      <elseif pos:line="66" pos:column="7">else <if pos:line="66" pos:column="12">if<condition pos:line="66" pos:column="14">(<expr><name><name pos:line="66" pos:column="15">authproxy<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">picked<pos:position pos:line="66" pos:column="32"/></name></name> <operator pos:line="66" pos:column="33">==<pos:position pos:line="66" pos:column="35"/></operator> <name pos:line="66" pos:column="36">CURLAUTH_DIGEST<pos:position pos:line="66" pos:column="51"/></name></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52"> <block pos:line="66" pos:column="53">{
        <expr_stmt><expr><name pos:line="67" pos:column="9">auth<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator><operator pos:line="67" pos:column="14">(<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">char<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">*<pos:position pos:line="67" pos:column="21"/></operator><operator pos:line="67" pos:column="21">)<pos:position pos:line="67" pos:column="22"/></operator><literal type="string" pos:line="67" pos:column="22">"Digest"<pos:position pos:line="67" pos:column="30"/></literal></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">result<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <call><name pos:line="68" pos:column="18">Curl_output_digest<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><name pos:line="68" pos:column="37">conn<pos:position pos:line="68" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><name pos:line="69" pos:column="37">TRUE<pos:position pos:line="69" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="69" pos:column="43">/* proxy */</comment>
                                    <argument><expr><operator pos:line="70" pos:column="37">(<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="38">unsigned<pos:position pos:line="70" pos:column="46"/></name> <name pos:line="70" pos:column="47">char<pos:position pos:line="70" pos:column="51"/></name> <operator pos:line="70" pos:column="52">*<pos:position pos:line="70" pos:column="53"/></operator><operator pos:line="70" pos:column="53">)<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="54">request<pos:position pos:line="70" pos:column="61"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="71" pos:column="37">(<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="38">unsigned<pos:position pos:line="71" pos:column="46"/></name> <name pos:line="71" pos:column="47">char<pos:position pos:line="71" pos:column="51"/></name> <operator pos:line="71" pos:column="52">*<pos:position pos:line="71" pos:column="53"/></operator><operator pos:line="71" pos:column="53">)<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="54">path<pos:position pos:line="71" pos:column="58"/></name></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt>
        <if pos:line="72" pos:column="9">if<condition pos:line="72" pos:column="11">(<expr><name pos:line="72" pos:column="12">result<pos:position pos:line="72" pos:column="18"/></name></expr>)<pos:position pos:line="72" pos:column="19"/></condition><then pos:line="72" pos:column="19">
          <block type="pseudo"><return pos:line="73" pos:column="11">return <expr><name pos:line="73" pos:column="18">result<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if></elseif></if>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="76" pos:column="7">if<condition pos:line="76" pos:column="9">(<expr><name pos:line="76" pos:column="10">auth<pos:position pos:line="76" pos:column="14"/></name></expr>)<pos:position pos:line="76" pos:column="15"/></condition><then pos:line="76" pos:column="15"> <block pos:line="76" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">infof<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><name pos:line="77" pos:column="15">data<pos:position pos:line="77" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="21">"Proxy auth using %s with user '%s'\n"<pos:position pos:line="77" pos:column="59"/></literal></expr></argument>,
              <argument><expr><name pos:line="78" pos:column="15">auth<pos:position pos:line="78" pos:column="19"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="78" pos:column="21">conn<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">proxyuser<pos:position pos:line="78" pos:column="36"/></name></name></expr>?<pos:position pos:line="78" pos:column="37"/></condition><then><expr><name><name pos:line="78" pos:column="37">conn<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">proxyuser<pos:position pos:line="78" pos:column="52"/></name></name></expr></then><else pos:line="78" pos:column="52">:<expr><literal type="string" pos:line="78" pos:column="53">""<pos:position pos:line="78" pos:column="55"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="78" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">authproxy<pos:position pos:line="79" pos:column="18"/></name><operator pos:line="79" pos:column="18">-&gt;<pos:position pos:line="79" pos:column="23"/></operator><name pos:line="79" pos:column="20">multi<pos:position pos:line="79" pos:column="25"/></name></name> <operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator> <operator pos:line="79" pos:column="28">!<pos:position pos:line="79" pos:column="29"/></operator><name><name pos:line="79" pos:column="29">authproxy<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">-&gt;<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="40">done<pos:position pos:line="79" pos:column="44"/></name></name></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></then>
      <else pos:line="81" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="9">authproxy<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">multi<pos:position pos:line="82" pos:column="25"/></name></name> <operator pos:line="82" pos:column="26">=<pos:position pos:line="82" pos:column="27"/></operator> <name pos:line="82" pos:column="28">FALSE<pos:position pos:line="82" pos:column="33"/></name></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt></block></else></if>
    }<pos:position pos:line="83" pos:column="6"/></block></then>
  <else pos:line="84" pos:column="3">else
    <comment type="block" pos:line="85" pos:column="5">/* we have no proxy so let's pretend we're done authenticating
       with it */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="5">authproxy<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">done<pos:position pos:line="87" pos:column="20"/></name></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <name pos:line="87" pos:column="23">TRUE<pos:position pos:line="87" pos:column="27"/></name></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="89" pos:column="3">/* To prevent the user+password to get sent to other than the original
     host due to a location-follow, we do some weirdo checks here */</comment>
  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">(<expr><operator pos:line="91" pos:column="6">!<pos:position pos:line="91" pos:column="7"/></operator><name><name pos:line="91" pos:column="7">data<pos:position pos:line="91" pos:column="11"/></name><operator pos:line="91" pos:column="11">-&gt;<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="13">state<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">.<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">this_is_a_follow<pos:position pos:line="91" pos:column="35"/></name></name> <operator pos:line="91" pos:column="36">||<pos:position pos:line="91" pos:column="38"/></operator>
     <name><name pos:line="92" pos:column="6">conn<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">bits<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">.<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="17">netrc<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">||<pos:position pos:line="92" pos:column="25"/></operator>
     <operator pos:line="93" pos:column="6">!<pos:position pos:line="93" pos:column="7"/></operator><name><name pos:line="93" pos:column="7">data<pos:position pos:line="93" pos:column="11"/></name><operator pos:line="93" pos:column="11">-&gt;<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="13">state<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">.<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="19">first_host<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">||<pos:position pos:line="93" pos:column="32"/></operator>
     <call><name pos:line="94" pos:column="6">curl_strequal<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><name><name pos:line="94" pos:column="20">data<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">-&gt;<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="26">state<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">.<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="32">first_host<pos:position pos:line="94" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="44">conn<pos:position pos:line="94" pos:column="48"/></name><operator pos:line="94" pos:column="48">-&gt;<pos:position pos:line="94" pos:column="53"/></operator><name pos:line="94" pos:column="50">host<pos:position pos:line="94" pos:column="54"/></name><operator pos:line="94" pos:column="54">.<pos:position pos:line="94" pos:column="55"/></operator><name pos:line="94" pos:column="55">name<pos:position pos:line="94" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="60"/></argument_list></call> <operator pos:line="94" pos:column="61">||<pos:position pos:line="94" pos:column="63"/></operator>
     <name><name pos:line="95" pos:column="6">data<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">set<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">.<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="16">http_disable_hostname_check_before_authentication<pos:position pos:line="95" pos:column="65"/></name></name></expr>)<pos:position pos:line="95" pos:column="66"/></condition><then pos:line="95" pos:column="66"> <block pos:line="95" pos:column="67">{

    <comment type="block" pos:line="97" pos:column="5">/* Send web authentication header if needed */</comment>
    <block pos:line="98" pos:column="5">{
      <expr_stmt><expr><name pos:line="99" pos:column="7">auth<pos:position pos:line="99" pos:column="11"/></name> <operator pos:line="99" pos:column="12">=<pos:position pos:line="99" pos:column="13"/></operator> <name pos:line="99" pos:column="14">NULL<pos:position pos:line="99" pos:column="18"/></name></expr>;<pos:position pos:line="99" pos:column="19"/></expr_stmt>
<cpp:ifdef pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">ifdef<pos:position pos:line="100" pos:column="7"/></cpp:directive> <name pos:line="100" pos:column="8">HAVE_GSSAPI<pos:position pos:line="100" pos:column="19"/></name></cpp:ifdef>
      <if pos:line="101" pos:column="7">if<condition pos:line="101" pos:column="9">(<expr><operator pos:line="101" pos:column="10">(<pos:position pos:line="101" pos:column="11"/></operator><name><name pos:line="101" pos:column="11">authhost<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">-&gt;<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="21">picked<pos:position pos:line="101" pos:column="27"/></name></name> <operator pos:line="101" pos:column="28">==<pos:position pos:line="101" pos:column="30"/></operator> <name pos:line="101" pos:column="31">CURLAUTH_GSSNEGOTIATE<pos:position pos:line="101" pos:column="52"/></name><operator pos:line="101" pos:column="52">)<pos:position pos:line="101" pos:column="53"/></operator> <operator pos:line="101" pos:column="54">&amp;&amp;<pos:position pos:line="101" pos:column="64"/></operator>
         <name><name pos:line="102" pos:column="10">data<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">state<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">.<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="22">negotiate<pos:position pos:line="102" pos:column="31"/></name><operator pos:line="102" pos:column="31">.<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="32">context<pos:position pos:line="102" pos:column="39"/></name></name> <operator pos:line="102" pos:column="40">&amp;&amp;<pos:position pos:line="102" pos:column="50"/></operator>
         <operator pos:line="103" pos:column="10">!<pos:position pos:line="103" pos:column="11"/></operator><call><name pos:line="103" pos:column="11">GSS_ERROR<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name><name pos:line="103" pos:column="21">data<pos:position pos:line="103" pos:column="25"/></name><operator pos:line="103" pos:column="25">-&gt;<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="27">state<pos:position pos:line="103" pos:column="32"/></name><operator pos:line="103" pos:column="32">.<pos:position pos:line="103" pos:column="33"/></operator><name pos:line="103" pos:column="33">negotiate<pos:position pos:line="103" pos:column="42"/></name><operator pos:line="103" pos:column="42">.<pos:position pos:line="103" pos:column="43"/></operator><name pos:line="103" pos:column="43">status<pos:position pos:line="103" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="51"/></condition><then pos:line="103" pos:column="51"> <block pos:line="103" pos:column="52">{
        <expr_stmt><expr><name pos:line="104" pos:column="9">auth<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">=<pos:position pos:line="104" pos:column="14"/></operator><operator pos:line="104" pos:column="14">(<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="15">char<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">*<pos:position pos:line="104" pos:column="21"/></operator><operator pos:line="104" pos:column="21">)<pos:position pos:line="104" pos:column="22"/></operator><literal type="string" pos:line="104" pos:column="22">"GSS-Negotiate"<pos:position pos:line="104" pos:column="37"/></literal></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="105" pos:column="9">result<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <call><name pos:line="105" pos:column="18">Curl_output_negotiate<pos:position pos:line="105" pos:column="39"/></name><argument_list pos:line="105" pos:column="39">(<argument><expr><name pos:line="105" pos:column="40">conn<pos:position pos:line="105" pos:column="44"/></name></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>
        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">result<pos:position pos:line="106" pos:column="19"/></name></expr>)<pos:position pos:line="106" pos:column="20"/></condition><then pos:line="106" pos:column="20">
          <block type="pseudo"><return pos:line="107" pos:column="11">return <expr><name pos:line="107" pos:column="18">result<pos:position pos:line="107" pos:column="24"/></name></expr>;<pos:position pos:line="107" pos:column="25"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="108" pos:column="9">authhost<pos:position pos:line="108" pos:column="17"/></name><operator pos:line="108" pos:column="17">-&gt;<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="19">done<pos:position pos:line="108" pos:column="23"/></name></name> <operator pos:line="108" pos:column="24">=<pos:position pos:line="108" pos:column="25"/></operator> <name pos:line="108" pos:column="26">TRUE<pos:position pos:line="108" pos:column="30"/></name></expr>;<pos:position pos:line="108" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="109" pos:column="8"/></block></then>
      <elseif pos:line="110" pos:column="7">else
<cpp:endif pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">endif<pos:position pos:line="111" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">ifdef<pos:position pos:line="112" pos:column="7"/></cpp:directive> <name pos:line="112" pos:column="8">USE_NTLM<pos:position pos:line="112" pos:column="16"/></name></cpp:ifdef>
      <if pos:line="113" pos:column="7">if<condition pos:line="113" pos:column="9">(<expr><name><name pos:line="113" pos:column="10">authhost<pos:position pos:line="113" pos:column="18"/></name><operator pos:line="113" pos:column="18">-&gt;<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="20">picked<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">==<pos:position pos:line="113" pos:column="29"/></operator> <name pos:line="113" pos:column="30">CURLAUTH_NTLM<pos:position pos:line="113" pos:column="43"/></name></expr>)<pos:position pos:line="113" pos:column="44"/></condition><then pos:line="113" pos:column="44"> <block pos:line="113" pos:column="45">{
        <expr_stmt><expr><name pos:line="114" pos:column="9">auth<pos:position pos:line="114" pos:column="13"/></name><operator pos:line="114" pos:column="13">=<pos:position pos:line="114" pos:column="14"/></operator><operator pos:line="114" pos:column="14">(<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="15">char<pos:position pos:line="114" pos:column="19"/></name> <operator pos:line="114" pos:column="20">*<pos:position pos:line="114" pos:column="21"/></operator><operator pos:line="114" pos:column="21">)<pos:position pos:line="114" pos:column="22"/></operator><literal type="string" pos:line="114" pos:column="22">"NTLM"<pos:position pos:line="114" pos:column="28"/></literal></expr>;<pos:position pos:line="114" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="115" pos:column="9">result<pos:position pos:line="115" pos:column="15"/></name> <operator pos:line="115" pos:column="16">=<pos:position pos:line="115" pos:column="17"/></operator> <call><name pos:line="115" pos:column="18">Curl_output_ntlm<pos:position pos:line="115" pos:column="34"/></name><argument_list pos:line="115" pos:column="34">(<argument><expr><name pos:line="115" pos:column="35">conn<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="41">FALSE<pos:position pos:line="115" pos:column="46"/></name></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt>
        <if pos:line="116" pos:column="9">if<condition pos:line="116" pos:column="11">(<expr><name pos:line="116" pos:column="12">result<pos:position pos:line="116" pos:column="18"/></name></expr>)<pos:position pos:line="116" pos:column="19"/></condition><then pos:line="116" pos:column="19">
          <block type="pseudo"><return pos:line="117" pos:column="11">return <expr><name pos:line="117" pos:column="18">result<pos:position pos:line="117" pos:column="24"/></name></expr>;<pos:position pos:line="117" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="118" pos:column="8"/></block></then></if></elseif>
      <else pos:line="119" pos:column="7">else
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif<pos:position pos:line="120" pos:column="7"/></cpp:directive></cpp:endif>
      <block pos:line="121" pos:column="7">{
<cpp:ifndef pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">ifndef<pos:position pos:line="122" pos:column="8"/></cpp:directive> <name pos:line="122" pos:column="9">CURL_DISABLE_CRYPTO_AUTH<pos:position pos:line="122" pos:column="33"/></name></cpp:ifndef>
        <if pos:line="123" pos:column="9">if<condition pos:line="123" pos:column="11">(<expr><name><name pos:line="123" pos:column="12">authhost<pos:position pos:line="123" pos:column="20"/></name><operator pos:line="123" pos:column="20">-&gt;<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="22">picked<pos:position pos:line="123" pos:column="28"/></name></name> <operator pos:line="123" pos:column="29">==<pos:position pos:line="123" pos:column="31"/></operator> <name pos:line="123" pos:column="32">CURLAUTH_DIGEST<pos:position pos:line="123" pos:column="47"/></name></expr>)<pos:position pos:line="123" pos:column="48"/></condition><then pos:line="123" pos:column="48"> <block pos:line="123" pos:column="49">{
          <expr_stmt><expr><name pos:line="124" pos:column="11">auth<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">=<pos:position pos:line="124" pos:column="16"/></operator><operator pos:line="124" pos:column="16">(<pos:position pos:line="124" pos:column="17"/></operator><name pos:line="124" pos:column="17">char<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">*<pos:position pos:line="124" pos:column="23"/></operator><operator pos:line="124" pos:column="23">)<pos:position pos:line="124" pos:column="24"/></operator><literal type="string" pos:line="124" pos:column="24">"Digest"<pos:position pos:line="124" pos:column="32"/></literal></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><name pos:line="125" pos:column="11">result<pos:position pos:line="125" pos:column="17"/></name> <operator pos:line="125" pos:column="18">=<pos:position pos:line="125" pos:column="19"/></operator> <call><name pos:line="125" pos:column="20">Curl_output_digest<pos:position pos:line="125" pos:column="38"/></name><argument_list pos:line="125" pos:column="38">(<argument><expr><name pos:line="125" pos:column="39">conn<pos:position pos:line="125" pos:column="43"/></name></expr></argument>,
                                      <argument><expr><name pos:line="126" pos:column="39">FALSE<pos:position pos:line="126" pos:column="44"/></name></expr></argument>, <comment type="block" pos:line="126" pos:column="46">/* not a proxy */</comment>
                                      <argument><expr><operator pos:line="127" pos:column="39">(<pos:position pos:line="127" pos:column="40"/></operator><name pos:line="127" pos:column="40">unsigned<pos:position pos:line="127" pos:column="48"/></name> <name pos:line="127" pos:column="49">char<pos:position pos:line="127" pos:column="53"/></name> <operator pos:line="127" pos:column="54">*<pos:position pos:line="127" pos:column="55"/></operator><operator pos:line="127" pos:column="55">)<pos:position pos:line="127" pos:column="56"/></operator><name pos:line="127" pos:column="56">request<pos:position pos:line="127" pos:column="63"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="128" pos:column="39">(<pos:position pos:line="128" pos:column="40"/></operator><name pos:line="128" pos:column="40">unsigned<pos:position pos:line="128" pos:column="48"/></name> <name pos:line="128" pos:column="49">char<pos:position pos:line="128" pos:column="53"/></name> <operator pos:line="128" pos:column="54">*<pos:position pos:line="128" pos:column="55"/></operator><operator pos:line="128" pos:column="55">)<pos:position pos:line="128" pos:column="56"/></operator><name pos:line="128" pos:column="56">path<pos:position pos:line="128" pos:column="60"/></name></expr></argument>)<pos:position pos:line="128" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="62"/></expr_stmt>
          <if pos:line="129" pos:column="11">if<condition pos:line="129" pos:column="13">(<expr><name pos:line="129" pos:column="14">result<pos:position pos:line="129" pos:column="20"/></name></expr>)<pos:position pos:line="129" pos:column="21"/></condition><then pos:line="129" pos:column="21">
            <block type="pseudo"><return pos:line="130" pos:column="13">return <expr><name pos:line="130" pos:column="20">result<pos:position pos:line="130" pos:column="26"/></name></expr>;<pos:position pos:line="130" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="131" pos:column="10"/></block></then> <elseif pos:line="131" pos:column="11">else
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif<pos:position pos:line="132" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="133" pos:column="9">if<condition pos:line="133" pos:column="11">(<expr><name><name pos:line="133" pos:column="12">authhost<pos:position pos:line="133" pos:column="20"/></name><operator pos:line="133" pos:column="20">-&gt;<pos:position pos:line="133" pos:column="25"/></operator><name pos:line="133" pos:column="22">picked<pos:position pos:line="133" pos:column="28"/></name></name> <operator pos:line="133" pos:column="29">==<pos:position pos:line="133" pos:column="31"/></operator> <name pos:line="133" pos:column="32">CURLAUTH_BASIC<pos:position pos:line="133" pos:column="46"/></name></expr>)<pos:position pos:line="133" pos:column="47"/></condition><then pos:line="133" pos:column="47"> <block pos:line="133" pos:column="48">{
          <if pos:line="134" pos:column="11">if<condition pos:line="134" pos:column="13">(<expr><name><name pos:line="134" pos:column="14">conn<pos:position pos:line="134" pos:column="18"/></name><operator pos:line="134" pos:column="18">-&gt;<pos:position pos:line="134" pos:column="23"/></operator><name pos:line="134" pos:column="20">bits<pos:position pos:line="134" pos:column="24"/></name><operator pos:line="134" pos:column="24">.<pos:position pos:line="134" pos:column="25"/></operator><name pos:line="134" pos:column="25">user_passwd<pos:position pos:line="134" pos:column="36"/></name></name> <operator pos:line="134" pos:column="37">&amp;&amp;<pos:position pos:line="134" pos:column="47"/></operator>
             <operator pos:line="135" pos:column="14">!<pos:position pos:line="135" pos:column="15"/></operator><call><name pos:line="135" pos:column="15">checkheaders<pos:position pos:line="135" pos:column="27"/></name><argument_list pos:line="135" pos:column="27">(<argument><expr><name pos:line="135" pos:column="28">data<pos:position pos:line="135" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="34">"Authorization:"<pos:position pos:line="135" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="52"/></condition><then pos:line="135" pos:column="52"> <block pos:line="135" pos:column="53">{
            <expr_stmt><expr><name pos:line="136" pos:column="13">auth<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">=<pos:position pos:line="136" pos:column="18"/></operator><operator pos:line="136" pos:column="18">(<pos:position pos:line="136" pos:column="19"/></operator><name pos:line="136" pos:column="19">char<pos:position pos:line="136" pos:column="23"/></name> <operator pos:line="136" pos:column="24">*<pos:position pos:line="136" pos:column="25"/></operator><operator pos:line="136" pos:column="25">)<pos:position pos:line="136" pos:column="26"/></operator><literal type="string" pos:line="136" pos:column="26">"Basic"<pos:position pos:line="136" pos:column="33"/></literal></expr>;<pos:position pos:line="136" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="137" pos:column="13">result<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <call><name pos:line="137" pos:column="22">Curl_output_basic<pos:position pos:line="137" pos:column="39"/></name><argument_list pos:line="137" pos:column="39">(<argument><expr><name pos:line="137" pos:column="40">conn<pos:position pos:line="137" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="46">FALSE<pos:position pos:line="137" pos:column="51"/></name></expr></argument>)<pos:position pos:line="137" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="53"/></expr_stmt>
            <if pos:line="138" pos:column="13">if<condition pos:line="138" pos:column="15">(<expr><name pos:line="138" pos:column="16">result<pos:position pos:line="138" pos:column="22"/></name></expr>)<pos:position pos:line="138" pos:column="23"/></condition><then pos:line="138" pos:column="23">
              <block type="pseudo"><return pos:line="139" pos:column="15">return <expr><name pos:line="139" pos:column="22">result<pos:position pos:line="139" pos:column="28"/></name></expr>;<pos:position pos:line="139" pos:column="29"/></return></block></then></if>
          }<pos:position pos:line="140" pos:column="12"/></block></then></if>
          <comment type="block" pos:line="141" pos:column="11">/* basic is always ready */</comment>
          <expr_stmt><expr><name><name pos:line="142" pos:column="11">authhost<pos:position pos:line="142" pos:column="19"/></name><operator pos:line="142" pos:column="19">-&gt;<pos:position pos:line="142" pos:column="24"/></operator><name pos:line="142" pos:column="21">done<pos:position pos:line="142" pos:column="25"/></name></name> <operator pos:line="142" pos:column="26">=<pos:position pos:line="142" pos:column="27"/></operator> <name pos:line="142" pos:column="28">TRUE<pos:position pos:line="142" pos:column="32"/></name></expr>;<pos:position pos:line="142" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="143" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="144" pos:column="8"/></block></else></if>
      <if pos:line="145" pos:column="7">if<condition pos:line="145" pos:column="9">(<expr><name pos:line="145" pos:column="10">auth<pos:position pos:line="145" pos:column="14"/></name></expr>)<pos:position pos:line="145" pos:column="15"/></condition><then pos:line="145" pos:column="15"> <block pos:line="145" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="146" pos:column="9">infof<pos:position pos:line="146" pos:column="14"/></name><argument_list pos:line="146" pos:column="14">(<argument><expr><name pos:line="146" pos:column="15">data<pos:position pos:line="146" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="21">"Server auth using %s with user '%s'\n"<pos:position pos:line="146" pos:column="60"/></literal></expr></argument>,
              <argument><expr><name pos:line="147" pos:column="15">auth<pos:position pos:line="147" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="21">conn<pos:position pos:line="147" pos:column="25"/></name><operator pos:line="147" pos:column="25">-&gt;<pos:position pos:line="147" pos:column="30"/></operator><name pos:line="147" pos:column="27">user<pos:position pos:line="147" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="149" pos:column="9">authhost<pos:position pos:line="149" pos:column="17"/></name><operator pos:line="149" pos:column="17">-&gt;<pos:position pos:line="149" pos:column="22"/></operator><name pos:line="149" pos:column="19">multi<pos:position pos:line="149" pos:column="24"/></name></name> <operator pos:line="149" pos:column="25">=<pos:position pos:line="149" pos:column="26"/></operator> <operator pos:line="149" pos:column="27">!<pos:position pos:line="149" pos:column="28"/></operator><name><name pos:line="149" pos:column="28">authhost<pos:position pos:line="149" pos:column="36"/></name><operator pos:line="149" pos:column="36">-&gt;<pos:position pos:line="149" pos:column="41"/></operator><name pos:line="149" pos:column="38">done<pos:position pos:line="149" pos:column="42"/></name></name></expr>;<pos:position pos:line="149" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="150" pos:column="8"/></block></then>
      <else pos:line="151" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="152" pos:column="9">authhost<pos:position pos:line="152" pos:column="17"/></name><operator pos:line="152" pos:column="17">-&gt;<pos:position pos:line="152" pos:column="22"/></operator><name pos:line="152" pos:column="19">multi<pos:position pos:line="152" pos:column="24"/></name></name> <operator pos:line="152" pos:column="25">=<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">FALSE<pos:position pos:line="152" pos:column="32"/></name></expr>;<pos:position pos:line="152" pos:column="33"/></expr_stmt></block></else></if>
    }<pos:position pos:line="153" pos:column="6"/></block>
  }<pos:position pos:line="154" pos:column="4"/></block></then>
  <else pos:line="155" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="156" pos:column="5">authhost<pos:position pos:line="156" pos:column="13"/></name><operator pos:line="156" pos:column="13">-&gt;<pos:position pos:line="156" pos:column="18"/></operator><name pos:line="156" pos:column="15">done<pos:position pos:line="156" pos:column="19"/></name></name> <operator pos:line="156" pos:column="20">=<pos:position pos:line="156" pos:column="21"/></operator> <name pos:line="156" pos:column="22">TRUE<pos:position pos:line="156" pos:column="26"/></name></expr>;<pos:position pos:line="156" pos:column="27"/></expr_stmt></block></else></if>

  <return pos:line="158" pos:column="3">return <expr><name pos:line="158" pos:column="10">result<pos:position pos:line="158" pos:column="16"/></name></expr>;<pos:position pos:line="158" pos:column="17"/></return>
}<pos:position pos:line="159" pos:column="2"/></block></function></unit>

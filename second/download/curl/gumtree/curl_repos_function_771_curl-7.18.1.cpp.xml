<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_771_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLMcode<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">multi_runsingle<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">Curl_multi<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">multi<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">Curl_one_easy<pos:position pos:line="2" pos:column="54"/></name></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">easy<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_message<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">msg<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bool<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">connected<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">bool<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">async<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">protocol_connect<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">FALSE<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">dophase_done<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">bool<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">done<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLMcode<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">result<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">CURLM_OK<pos:position pos:line="10" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">SingleRequest<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">k<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><call><name pos:line="13" pos:column="7">GOOD_EASY_HANDLE<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">easy<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">easy_handle<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">CURLM_BAD_EASY_HANDLE<pos:position pos:line="14" pos:column="33"/></name></expr>;<pos:position pos:line="14" pos:column="34"/></return></block></then></if>

  <do pos:line="16" pos:column="3">do <block pos:line="16" pos:column="6">{
    <comment type="block" pos:line="17" pos:column="5">/* this is a do-while loop just to allow a break to skip to the end
       of it */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">bool<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">disconnect_conn<pos:position pos:line="19" pos:column="25"/></name> <init pos:line="19" pos:column="26">= <expr><name pos:line="19" pos:column="28">FALSE<pos:position pos:line="19" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Handle the case when the pipe breaks, i.e., the connection
       we're using gets cleaned up and we're left with nothing. */</comment>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name><name pos:line="23" pos:column="8">easy<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">easy_handle<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">state<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">.<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">pipe_broke<pos:position pos:line="23" pos:column="43"/></name></name></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">infof<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name><name pos:line="24" pos:column="13">easy<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">easy_handle<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"Pipe broke: handle 0x%x, url = %s\n"<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>,
            <argument><expr><name pos:line="25" pos:column="13">easy<pos:position pos:line="25" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="19">easy<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">easy_handle<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">state<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">path<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>

      <if pos:line="27" pos:column="7">if<condition pos:line="27" pos:column="9">(<expr><name><name pos:line="27" pos:column="10">easy<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">state<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">!=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">CURLM_STATE_COMPLETED<pos:position pos:line="27" pos:column="46"/></name></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47"> <block pos:line="27" pos:column="48">{
        <comment type="block" pos:line="28" pos:column="9">/* Head back to the CONNECT state */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">multistate<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">easy<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="26">CURLM_STATE_CONNECT<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">result<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">easy<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">result<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">CURLE_OK<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="34" pos:column="7">easy<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">easy_handle<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">state<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">pipe_broke<pos:position pos:line="34" pos:column="42"/></name></name> <operator pos:line="34" pos:column="43">=<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">FALSE<pos:position pos:line="34" pos:column="50"/></name></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">easy<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">easy_conn<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">NULL<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name><name pos:line="39" pos:column="8">easy<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">state<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">&gt;<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="22">CURLM_STATE_CONNECT<pos:position pos:line="39" pos:column="41"/></name> <operator pos:line="39" pos:column="42">&amp;&amp;<pos:position pos:line="39" pos:column="52"/></operator>
       <name><name pos:line="40" pos:column="8">easy<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">state<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">&lt;<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="22">CURLM_STATE_COMPLETED<pos:position pos:line="40" pos:column="43"/></name></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44">
      <comment type="block" pos:line="41" pos:column="7">/* Make sure we set the connection's current owner */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="7">easy<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">easy_conn<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">data<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <name><name pos:line="42" pos:column="31">easy<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">easy_handle<pos:position pos:line="42" pos:column="48"/></name></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt></block></then></if>

    <switch pos:line="44" pos:column="5">switch<condition pos:line="44" pos:column="11">(<expr><name><name pos:line="44" pos:column="12">easy<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">state<pos:position pos:line="44" pos:column="23"/></name></name></expr>)<pos:position pos:line="44" pos:column="24"/></condition> <block pos:line="44" pos:column="25">{
    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">CURLM_STATE_INIT<pos:position pos:line="45" pos:column="26"/></name></expr>:<pos:position pos:line="45" pos:column="27"/></case>
      <comment type="block" pos:line="46" pos:column="7">/* init this transfer. */</comment>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">easy<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">result<pos:position pos:line="47" pos:column="19"/></name></name><operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator><call><name pos:line="47" pos:column="20">Curl_pretransfer<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name><name pos:line="47" pos:column="37">easy<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">-&gt;<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="43">easy_handle<pos:position pos:line="47" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>

      <if pos:line="49" pos:column="7">if<condition pos:line="49" pos:column="9">(<expr><name pos:line="49" pos:column="10">CURLE_OK<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">==<pos:position pos:line="49" pos:column="21"/></operator> <name><name pos:line="49" pos:column="22">easy<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">result<pos:position pos:line="49" pos:column="34"/></name></name></expr>)<pos:position pos:line="49" pos:column="35"/></condition><then pos:line="49" pos:column="35"> <block pos:line="49" pos:column="36">{
        <comment type="block" pos:line="50" pos:column="9">/* after init, go CONNECT */</comment>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">multistate<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">easy<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="26">CURLM_STATE_CONNECT<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">result<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="52" pos:column="42"/></name></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="54" pos:column="9">easy<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">easy_handle<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">state<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">.<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="34">used_interface<pos:position pos:line="54" pos:column="48"/></name></name> <operator pos:line="54" pos:column="49">=<pos:position pos:line="54" pos:column="50"/></operator> <name pos:line="54" pos:column="51">Curl_if_multi<pos:position pos:line="54" pos:column="64"/></name></expr>;<pos:position pos:line="54" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>

    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">CURLM_STATE_CONNECT<pos:position pos:line="58" pos:column="29"/></name></expr>:<pos:position pos:line="58" pos:column="30"/></case>
      <comment type="block" pos:line="59" pos:column="7">/* Connect. We get a connection identifier filled in. */</comment>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">Curl_pgrsTime<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><name><name pos:line="60" pos:column="21">easy<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">easy_handle<pos:position pos:line="60" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="40">TIMER_STARTSINGLE<pos:position pos:line="60" pos:column="57"/></name></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">easy<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">result<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <call><name pos:line="61" pos:column="22">Curl_connect<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name><name pos:line="61" pos:column="35">easy<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">-&gt;<pos:position pos:line="61" pos:column="44"/></operator><name pos:line="61" pos:column="41">easy_handle<pos:position pos:line="61" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="54">&amp;<pos:position pos:line="61" pos:column="59"/></operator><name><name pos:line="61" pos:column="55">easy<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">-&gt;<pos:position pos:line="61" pos:column="64"/></operator><name pos:line="61" pos:column="61">easy_conn<pos:position pos:line="61" pos:column="70"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="62" pos:column="35">&amp;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="36">async<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="43">&amp;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="44">protocol_connect<pos:position pos:line="62" pos:column="60"/></name></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>

      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><name pos:line="64" pos:column="10">CURLE_OK<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">==<pos:position pos:line="64" pos:column="21"/></operator> <name><name pos:line="64" pos:column="22">easy<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">result<pos:position pos:line="64" pos:column="34"/></name></name></expr>)<pos:position pos:line="64" pos:column="35"/></condition><then pos:line="64" pos:column="35"> <block pos:line="64" pos:column="36">{
        <comment type="block" pos:line="65" pos:column="9">/* Add this handle to the send or pend pipeline */</comment>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">easy<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">-&gt;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="15">result<pos:position pos:line="66" pos:column="21"/></name></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <call><name pos:line="66" pos:column="24">addHandleToSendOrPendPipeline<pos:position pos:line="66" pos:column="53"/></name><argument_list pos:line="66" pos:column="53">(<argument><expr><name><name pos:line="66" pos:column="54">easy<pos:position pos:line="66" pos:column="58"/></name><operator pos:line="66" pos:column="58">-&gt;<pos:position pos:line="66" pos:column="63"/></operator><name pos:line="66" pos:column="60">easy_handle<pos:position pos:line="66" pos:column="71"/></name></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="67" pos:column="54">easy<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">-&gt;<pos:position pos:line="67" pos:column="63"/></operator><name pos:line="67" pos:column="60">easy_conn<pos:position pos:line="67" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>
        <if pos:line="68" pos:column="9">if<condition pos:line="68" pos:column="11">(<expr><name pos:line="68" pos:column="12">CURLE_OK<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">==<pos:position pos:line="68" pos:column="23"/></operator> <name><name pos:line="68" pos:column="24">easy<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">-&gt;<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="30">result<pos:position pos:line="68" pos:column="36"/></name></name></expr>)<pos:position pos:line="68" pos:column="37"/></condition><then pos:line="68" pos:column="37"> <block pos:line="68" pos:column="38">{
          <if pos:line="69" pos:column="11">if<condition pos:line="69" pos:column="13">(<expr><name pos:line="69" pos:column="14">async<pos:position pos:line="69" pos:column="19"/></name></expr>)<pos:position pos:line="69" pos:column="20"/></condition><then pos:line="69" pos:column="20">
            <comment type="block" pos:line="70" pos:column="13">/* We're now waiting for an asynchronous name lookup */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="13">multistate<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">easy<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">CURLM_STATE_WAITRESOLVE<pos:position pos:line="71" pos:column="53"/></name></expr></argument>)<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt></block></then>
          <else pos:line="72" pos:column="11">else <block pos:line="72" pos:column="16">{
            <comment type="block" pos:line="73" pos:column="13">/* after the connect has been sent off, go WAITCONNECT unless the
               protocol connect is already done and we can go directly to
               WAITDO! */</comment>
            <expr_stmt><expr><name pos:line="76" pos:column="13">result<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="76" pos:column="46"/></name></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt>

            <if pos:line="78" pos:column="13">if<condition pos:line="78" pos:column="15">(<expr><name pos:line="78" pos:column="16">protocol_connect<pos:position pos:line="78" pos:column="32"/></name></expr>)<pos:position pos:line="78" pos:column="33"/></condition><then pos:line="78" pos:column="33">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="15">multistate<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">easy<pos:position pos:line="79" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="32">CURLM_STATE_WAITDO<pos:position pos:line="79" pos:column="50"/></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="52"/></expr_stmt></block></then>
            <else pos:line="80" pos:column="13">else <block pos:line="80" pos:column="18">{
<cpp:ifndef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifndef<pos:position pos:line="81" pos:column="8"/></cpp:directive> <name pos:line="81" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="81" pos:column="26"/></name></cpp:ifndef>
              <if pos:line="82" pos:column="15">if<condition pos:line="82" pos:column="17">(<expr><name><name pos:line="82" pos:column="18">easy<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">-&gt;<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="24">easy_conn<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">-&gt;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="35">bits<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">.<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">tunnel_connecting<pos:position pos:line="82" pos:column="57"/></name></name></expr>)<pos:position pos:line="82" pos:column="58"/></condition><then pos:line="82" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="17">multistate<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name pos:line="83" pos:column="28">easy<pos:position pos:line="83" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="34">CURLM_STATE_WAITPROXYCONNECT<pos:position pos:line="83" pos:column="62"/></name></expr></argument>)<pos:position pos:line="83" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="64"/></expr_stmt></block></then>
              <else pos:line="84" pos:column="15">else
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="17">multistate<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><name pos:line="86" pos:column="28">easy<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="34">CURLM_STATE_WAITCONNECT<pos:position pos:line="86" pos:column="57"/></name></expr></argument>)<pos:position pos:line="86" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="59"/></expr_stmt></block></else></if>
            }<pos:position pos:line="87" pos:column="14"/></block></else></if>
          }<pos:position pos:line="88" pos:column="12"/></block></else></if>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
      }<pos:position pos:line="90" pos:column="8"/></block></then></if>
      <break pos:line="91" pos:column="7">break;<pos:position pos:line="91" pos:column="13"/></break>

    <case pos:line="93" pos:column="5">case <expr><name pos:line="93" pos:column="10">CURLM_STATE_WAITRESOLVE<pos:position pos:line="93" pos:column="33"/></name></expr>:<pos:position pos:line="93" pos:column="34"/></case>
      <comment type="block" pos:line="94" pos:column="7">/* awaiting an asynch name resolve to complete */</comment>
    <block pos:line="95" pos:column="5">{
      <decl_stmt><decl><type><name><name pos:line="96" pos:column="7">struct<pos:position pos:line="96" pos:column="13"/></name> <name pos:line="96" pos:column="14">Curl_dns_entry<pos:position pos:line="96" pos:column="28"/></name></name> <modifier pos:line="96" pos:column="29">*<pos:position pos:line="96" pos:column="30"/></modifier></type><name pos:line="96" pos:column="30">dns<pos:position pos:line="96" pos:column="33"/></name> <init pos:line="96" pos:column="34">= <expr><name pos:line="96" pos:column="36">NULL<pos:position pos:line="96" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="96" pos:column="41"/></decl_stmt>

      <comment type="block" pos:line="98" pos:column="7">/* check if we have the name resolved by now */</comment>
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">easy<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">-&gt;<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="13">result<pos:position pos:line="99" pos:column="19"/></name></name> <operator pos:line="99" pos:column="20">=<pos:position pos:line="99" pos:column="21"/></operator> <call><name pos:line="99" pos:column="22">Curl_is_resolved<pos:position pos:line="99" pos:column="38"/></name><argument_list pos:line="99" pos:column="38">(<argument><expr><name><name pos:line="99" pos:column="39">easy<pos:position pos:line="99" pos:column="43"/></name><operator pos:line="99" pos:column="43">-&gt;<pos:position pos:line="99" pos:column="48"/></operator><name pos:line="99" pos:column="45">easy_conn<pos:position pos:line="99" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="56">&amp;<pos:position pos:line="99" pos:column="61"/></operator><name pos:line="99" pos:column="57">dns<pos:position pos:line="99" pos:column="60"/></name></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt>

      <if pos:line="101" pos:column="7">if<condition pos:line="101" pos:column="9">(<expr><name pos:line="101" pos:column="10">dns<pos:position pos:line="101" pos:column="13"/></name></expr>)<pos:position pos:line="101" pos:column="14"/></condition><then pos:line="101" pos:column="14"> <block pos:line="101" pos:column="15">{
        <comment type="block" pos:line="102" pos:column="9">/* Perform the next step in the connection phase, and then move on
           to the WAITCONNECT state */</comment>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">easy<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">-&gt;<pos:position pos:line="104" pos:column="18"/></operator><name pos:line="104" pos:column="15">result<pos:position pos:line="104" pos:column="21"/></name></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <call><name pos:line="104" pos:column="24">Curl_async_resolved<pos:position pos:line="104" pos:column="43"/></name><argument_list pos:line="104" pos:column="43">(<argument><expr><name><name pos:line="104" pos:column="44">easy<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">-&gt;<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="50">easy_conn<pos:position pos:line="104" pos:column="59"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="105" pos:column="44">&amp;<pos:position pos:line="105" pos:column="49"/></operator><name pos:line="105" pos:column="45">protocol_connect<pos:position pos:line="105" pos:column="61"/></name></expr></argument>)<pos:position pos:line="105" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="63"/></expr_stmt>

        <if pos:line="107" pos:column="9">if<condition pos:line="107" pos:column="11">(<expr><name pos:line="107" pos:column="12">CURLE_OK<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">!=<pos:position pos:line="107" pos:column="23"/></operator> <name><name pos:line="107" pos:column="24">easy<pos:position pos:line="107" pos:column="28"/></name><operator pos:line="107" pos:column="28">-&gt;<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="30">result<pos:position pos:line="107" pos:column="36"/></name></name></expr>)<pos:position pos:line="107" pos:column="37"/></condition><then pos:line="107" pos:column="37">
          <comment type="block" pos:line="108" pos:column="11">/* if Curl_async_resolved() returns failure, the connection struct
             is already freed and gone */</comment>
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="110" pos:column="11">easy<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">-&gt;<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="17">easy_conn<pos:position pos:line="110" pos:column="26"/></name></name> <operator pos:line="110" pos:column="27">=<pos:position pos:line="110" pos:column="28"/></operator> <name pos:line="110" pos:column="29">NULL<pos:position pos:line="110" pos:column="33"/></name></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt></block></then>           <comment type="block" pos:line="110" pos:column="45">/* no more connection */</comment>
        <else pos:line="111" pos:column="9">else <block pos:line="111" pos:column="14">{
          <comment type="block" pos:line="112" pos:column="11">/* call again please so that we get the next socket setup */</comment>
          <expr_stmt><expr><name pos:line="113" pos:column="11">result<pos:position pos:line="113" pos:column="17"/></name> <operator pos:line="113" pos:column="18">=<pos:position pos:line="113" pos:column="19"/></operator> <name pos:line="113" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="113" pos:column="44"/></name></expr>;<pos:position pos:line="113" pos:column="45"/></expr_stmt>
          <if pos:line="114" pos:column="11">if<condition pos:line="114" pos:column="13">(<expr><name pos:line="114" pos:column="14">protocol_connect<pos:position pos:line="114" pos:column="30"/></name></expr>)<pos:position pos:line="114" pos:column="31"/></condition><then pos:line="114" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="13">multistate<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><name pos:line="115" pos:column="24">easy<pos:position pos:line="115" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="30">CURLM_STATE_WAITDO<pos:position pos:line="115" pos:column="48"/></name></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="50"/></expr_stmt></block></then>
          <else pos:line="116" pos:column="11">else <block pos:line="116" pos:column="16">{
<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef<pos:position pos:line="117" pos:column="8"/></cpp:directive> <name pos:line="117" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="117" pos:column="26"/></name></cpp:ifndef>
            <if pos:line="118" pos:column="13">if<condition pos:line="118" pos:column="15">(<expr><name><name pos:line="118" pos:column="16">easy<pos:position pos:line="118" pos:column="20"/></name><operator pos:line="118" pos:column="20">-&gt;<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="22">easy_conn<pos:position pos:line="118" pos:column="31"/></name><operator pos:line="118" pos:column="31">-&gt;<pos:position pos:line="118" pos:column="36"/></operator><name pos:line="118" pos:column="33">bits<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">.<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="38">tunnel_connecting<pos:position pos:line="118" pos:column="55"/></name></name></expr>)<pos:position pos:line="118" pos:column="56"/></condition><then pos:line="118" pos:column="56">
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="15">multistate<pos:position pos:line="119" pos:column="25"/></name><argument_list pos:line="119" pos:column="25">(<argument><expr><name pos:line="119" pos:column="26">easy<pos:position pos:line="119" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="32">CURLM_STATE_WAITPROXYCONNECT<pos:position pos:line="119" pos:column="60"/></name></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="62"/></expr_stmt></block></then>
            <else pos:line="120" pos:column="13">else
<cpp:endif pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">endif<pos:position pos:line="121" pos:column="7"/></cpp:directive></cpp:endif>
              <block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="15">multistate<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">(<argument><expr><name pos:line="122" pos:column="26">easy<pos:position pos:line="122" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="32">CURLM_STATE_WAITCONNECT<pos:position pos:line="122" pos:column="55"/></name></expr></argument>)<pos:position pos:line="122" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="57"/></expr_stmt></block></else></if>
          }<pos:position pos:line="123" pos:column="12"/></block></else></if>
        }<pos:position pos:line="124" pos:column="10"/></block></else></if>
      }<pos:position pos:line="125" pos:column="8"/></block></then></if>

      <if pos:line="127" pos:column="7">if<condition pos:line="127" pos:column="9">(<expr><name pos:line="127" pos:column="10">CURLE_OK<pos:position pos:line="127" pos:column="18"/></name> <operator pos:line="127" pos:column="19">!=<pos:position pos:line="127" pos:column="21"/></operator> <name><name pos:line="127" pos:column="22">easy<pos:position pos:line="127" pos:column="26"/></name><operator pos:line="127" pos:column="26">-&gt;<pos:position pos:line="127" pos:column="31"/></operator><name pos:line="127" pos:column="28">result<pos:position pos:line="127" pos:column="34"/></name></name></expr>)<pos:position pos:line="127" pos:column="35"/></condition><then pos:line="127" pos:column="35"> <block pos:line="127" pos:column="36">{
        <comment type="block" pos:line="128" pos:column="9">/* failure detected */</comment>
        <expr_stmt><expr><name pos:line="129" pos:column="9">disconnect_conn<pos:position pos:line="129" pos:column="24"/></name> <operator pos:line="129" pos:column="25">=<pos:position pos:line="129" pos:column="26"/></operator> <name pos:line="129" pos:column="27">TRUE<pos:position pos:line="129" pos:column="31"/></name></expr>;<pos:position pos:line="129" pos:column="32"/></expr_stmt>
        <break pos:line="130" pos:column="9">break;<pos:position pos:line="130" pos:column="15"/></break>
      }<pos:position pos:line="131" pos:column="8"/></block></then></if>
    }<pos:position pos:line="132" pos:column="6"/></block>
    <break pos:line="133" pos:column="5">break;<pos:position pos:line="133" pos:column="11"/></break>

<cpp:ifndef pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">ifndef<pos:position pos:line="135" pos:column="8"/></cpp:directive> <name pos:line="135" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="135" pos:column="26"/></name></cpp:ifndef>
    <case pos:line="136" pos:column="5">case <expr><name pos:line="136" pos:column="10">CURLM_STATE_WAITPROXYCONNECT<pos:position pos:line="136" pos:column="38"/></name></expr>:<pos:position pos:line="136" pos:column="39"/></case>
      <comment type="block" pos:line="137" pos:column="7">/* this is HTTP-specific, but sending CONNECT to a proxy is HTTP... */</comment>
      <expr_stmt><expr><name><name pos:line="138" pos:column="7">easy<pos:position pos:line="138" pos:column="11"/></name><operator pos:line="138" pos:column="11">-&gt;<pos:position pos:line="138" pos:column="16"/></operator><name pos:line="138" pos:column="13">result<pos:position pos:line="138" pos:column="19"/></name></name> <operator pos:line="138" pos:column="20">=<pos:position pos:line="138" pos:column="21"/></operator> <call><name pos:line="138" pos:column="22">Curl_http_connect<pos:position pos:line="138" pos:column="39"/></name><argument_list pos:line="138" pos:column="39">(<argument><expr><name><name pos:line="138" pos:column="40">easy<pos:position pos:line="138" pos:column="44"/></name><operator pos:line="138" pos:column="44">-&gt;<pos:position pos:line="138" pos:column="49"/></operator><name pos:line="138" pos:column="46">easy_conn<pos:position pos:line="138" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="57">&amp;<pos:position pos:line="138" pos:column="62"/></operator><name pos:line="138" pos:column="58">protocol_connect<pos:position pos:line="138" pos:column="74"/></name></expr></argument>)<pos:position pos:line="138" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="76"/></expr_stmt>

      <if pos:line="140" pos:column="7">if<condition pos:line="140" pos:column="9">(<expr><name pos:line="140" pos:column="10">CURLE_OK<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">==<pos:position pos:line="140" pos:column="21"/></operator> <name><name pos:line="140" pos:column="22">easy<pos:position pos:line="140" pos:column="26"/></name><operator pos:line="140" pos:column="26">-&gt;<pos:position pos:line="140" pos:column="31"/></operator><name pos:line="140" pos:column="28">result<pos:position pos:line="140" pos:column="34"/></name></name></expr>)<pos:position pos:line="140" pos:column="35"/></condition><then pos:line="140" pos:column="35"> <block pos:line="140" pos:column="36">{
        <if pos:line="141" pos:column="9">if<condition pos:line="141" pos:column="11">(<expr><operator pos:line="141" pos:column="12">!<pos:position pos:line="141" pos:column="13"/></operator><name><name pos:line="141" pos:column="13">easy<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">-&gt;<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="19">easy_conn<pos:position pos:line="141" pos:column="28"/></name><operator pos:line="141" pos:column="28">-&gt;<pos:position pos:line="141" pos:column="33"/></operator><name pos:line="141" pos:column="30">bits<pos:position pos:line="141" pos:column="34"/></name><operator pos:line="141" pos:column="34">.<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="35">tunnel_connecting<pos:position pos:line="141" pos:column="52"/></name></name></expr>)<pos:position pos:line="141" pos:column="53"/></condition><then pos:line="141" pos:column="53">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="11">multistate<pos:position pos:line="142" pos:column="21"/></name><argument_list pos:line="142" pos:column="21">(<argument><expr><name pos:line="142" pos:column="22">easy<pos:position pos:line="142" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="28">CURLM_STATE_WAITCONNECT<pos:position pos:line="142" pos:column="51"/></name></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="53"/></expr_stmt></block></then></if>
      }<pos:position pos:line="143" pos:column="8"/></block></then></if>
      <break pos:line="144" pos:column="7">break;<pos:position pos:line="144" pos:column="13"/></break>
<cpp:endif pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">endif<pos:position pos:line="145" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="147" pos:column="5">case <expr><name pos:line="147" pos:column="10">CURLM_STATE_WAITCONNECT<pos:position pos:line="147" pos:column="33"/></name></expr>:<pos:position pos:line="147" pos:column="34"/></case>
      <comment type="block" pos:line="148" pos:column="7">/* awaiting a completion of an asynch connect */</comment>
      <expr_stmt><expr><name><name pos:line="149" pos:column="7">easy<pos:position pos:line="149" pos:column="11"/></name><operator pos:line="149" pos:column="11">-&gt;<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="13">result<pos:position pos:line="149" pos:column="19"/></name></name> <operator pos:line="149" pos:column="20">=<pos:position pos:line="149" pos:column="21"/></operator> <call><name pos:line="149" pos:column="22">Curl_is_connected<pos:position pos:line="149" pos:column="39"/></name><argument_list pos:line="149" pos:column="39">(<argument><expr><name><name pos:line="149" pos:column="40">easy<pos:position pos:line="149" pos:column="44"/></name><operator pos:line="149" pos:column="44">-&gt;<pos:position pos:line="149" pos:column="49"/></operator><name pos:line="149" pos:column="46">easy_conn<pos:position pos:line="149" pos:column="55"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="150" pos:column="40">FIRSTSOCKET<pos:position pos:line="150" pos:column="51"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="151" pos:column="40">&amp;<pos:position pos:line="151" pos:column="45"/></operator><name pos:line="151" pos:column="41">connected<pos:position pos:line="151" pos:column="50"/></name></expr></argument>)<pos:position pos:line="151" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="52"/></expr_stmt>
      <if pos:line="152" pos:column="7">if<condition pos:line="152" pos:column="9">(<expr><name pos:line="152" pos:column="10">connected<pos:position pos:line="152" pos:column="19"/></name></expr>)<pos:position pos:line="152" pos:column="20"/></condition><then pos:line="152" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="9">easy<pos:position pos:line="153" pos:column="13"/></name><operator pos:line="153" pos:column="13">-&gt;<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="15">result<pos:position pos:line="153" pos:column="21"/></name></name> <operator pos:line="153" pos:column="22">=<pos:position pos:line="153" pos:column="23"/></operator> <call><name pos:line="153" pos:column="24">Curl_protocol_connect<pos:position pos:line="153" pos:column="45"/></name><argument_list pos:line="153" pos:column="45">(<argument><expr><name><name pos:line="153" pos:column="46">easy<pos:position pos:line="153" pos:column="50"/></name><operator pos:line="153" pos:column="50">-&gt;<pos:position pos:line="153" pos:column="55"/></operator><name pos:line="153" pos:column="52">easy_conn<pos:position pos:line="153" pos:column="61"/></name></name></expr></argument>,
                                             <argument><expr><operator pos:line="154" pos:column="46">&amp;<pos:position pos:line="154" pos:column="51"/></operator><name pos:line="154" pos:column="47">protocol_connect<pos:position pos:line="154" pos:column="63"/></name></expr></argument>)<pos:position pos:line="154" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="65"/></expr_stmt></block></then></if>

      <if pos:line="156" pos:column="7">if<condition pos:line="156" pos:column="9">(<expr><name pos:line="156" pos:column="10">CURLE_OK<pos:position pos:line="156" pos:column="18"/></name> <operator pos:line="156" pos:column="19">!=<pos:position pos:line="156" pos:column="21"/></operator> <name><name pos:line="156" pos:column="22">easy<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">-&gt;<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="28">result<pos:position pos:line="156" pos:column="34"/></name></name></expr>)<pos:position pos:line="156" pos:column="35"/></condition><then pos:line="156" pos:column="35"> <block pos:line="156" pos:column="36">{
        <comment type="block" pos:line="157" pos:column="9">/* failure detected */</comment>
        <comment type="block" pos:line="158" pos:column="9">/* Just break, the cleaning up is handled all in one place */</comment>
        <expr_stmt><expr><name pos:line="159" pos:column="9">disconnect_conn<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">=<pos:position pos:line="159" pos:column="26"/></operator> <name pos:line="159" pos:column="27">TRUE<pos:position pos:line="159" pos:column="31"/></name></expr>;<pos:position pos:line="159" pos:column="32"/></expr_stmt>
        <break pos:line="160" pos:column="9">break;<pos:position pos:line="160" pos:column="15"/></break>
      }<pos:position pos:line="161" pos:column="8"/></block></then></if>

      <if pos:line="163" pos:column="7">if<condition pos:line="163" pos:column="9">(<expr><name pos:line="163" pos:column="10">connected<pos:position pos:line="163" pos:column="19"/></name></expr>)<pos:position pos:line="163" pos:column="20"/></condition><then pos:line="163" pos:column="20"> <block pos:line="163" pos:column="21">{
        <if pos:line="164" pos:column="9">if<condition pos:line="164" pos:column="11">(<expr><operator pos:line="164" pos:column="12">!<pos:position pos:line="164" pos:column="13"/></operator><name pos:line="164" pos:column="13">protocol_connect<pos:position pos:line="164" pos:column="29"/></name></expr>)<pos:position pos:line="164" pos:column="30"/></condition><then pos:line="164" pos:column="30"> <block pos:line="164" pos:column="31">{
          <comment type="block" pos:line="165" pos:column="11">/* We have a TCP connection, but 'protocol_connect' may be false
             and then we continue to 'STATE_PROTOCONNECT'. If protocol
             connect is TRUE, we move on to STATE_DO.
             BUT if we are using a proxy we must change to WAITPROXYCONNECT
             */</comment>
<cpp:ifndef pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">ifndef<pos:position pos:line="170" pos:column="8"/></cpp:directive> <name pos:line="170" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="170" pos:column="26"/></name></cpp:ifndef>
          <if pos:line="171" pos:column="11">if<condition pos:line="171" pos:column="13">(<expr><name><name pos:line="171" pos:column="14">easy<pos:position pos:line="171" pos:column="18"/></name><operator pos:line="171" pos:column="18">-&gt;<pos:position pos:line="171" pos:column="23"/></operator><name pos:line="171" pos:column="20">easy_conn<pos:position pos:line="171" pos:column="29"/></name><operator pos:line="171" pos:column="29">-&gt;<pos:position pos:line="171" pos:column="34"/></operator><name pos:line="171" pos:column="31">bits<pos:position pos:line="171" pos:column="35"/></name><operator pos:line="171" pos:column="35">.<pos:position pos:line="171" pos:column="36"/></operator><name pos:line="171" pos:column="36">tunnel_connecting<pos:position pos:line="171" pos:column="53"/></name></name></expr>)<pos:position pos:line="171" pos:column="54"/></condition><then pos:line="171" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="13">multistate<pos:position pos:line="172" pos:column="23"/></name><argument_list pos:line="172" pos:column="23">(<argument><expr><name pos:line="172" pos:column="24">easy<pos:position pos:line="172" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="30">CURLM_STATE_WAITPROXYCONNECT<pos:position pos:line="172" pos:column="58"/></name></expr></argument>)<pos:position pos:line="172" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="60"/></expr_stmt></block></then>
          <else pos:line="173" pos:column="11">else
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif<pos:position pos:line="174" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="13">multistate<pos:position pos:line="175" pos:column="23"/></name><argument_list pos:line="175" pos:column="23">(<argument><expr><name pos:line="175" pos:column="24">easy<pos:position pos:line="175" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="30">CURLM_STATE_PROTOCONNECT<pos:position pos:line="175" pos:column="54"/></name></expr></argument>)<pos:position pos:line="175" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="56"/></expr_stmt></block></else></if>
        }<pos:position pos:line="176" pos:column="10"/></block></then>
        <else pos:line="177" pos:column="9">else <block pos:line="177" pos:column="14">{
          <comment type="block" pos:line="178" pos:column="11">/* after the connect has completed, go WAITDO */</comment>
          <expr_stmt><expr><call><name pos:line="179" pos:column="11">multistate<pos:position pos:line="179" pos:column="21"/></name><argument_list pos:line="179" pos:column="21">(<argument><expr><name pos:line="179" pos:column="22">easy<pos:position pos:line="179" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="28">CURLM_STATE_WAITDO<pos:position pos:line="179" pos:column="46"/></name></expr></argument>)<pos:position pos:line="179" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="48"/></expr_stmt>

          <expr_stmt><expr><name pos:line="181" pos:column="11">result<pos:position pos:line="181" pos:column="17"/></name> <operator pos:line="181" pos:column="18">=<pos:position pos:line="181" pos:column="19"/></operator> <name pos:line="181" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="181" pos:column="44"/></name></expr>;<pos:position pos:line="181" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="182" pos:column="10"/></block></else></if>
      }<pos:position pos:line="183" pos:column="8"/></block></then></if>
      <break pos:line="184" pos:column="7">break;<pos:position pos:line="184" pos:column="13"/></break>

    <case pos:line="186" pos:column="5">case <expr><name pos:line="186" pos:column="10">CURLM_STATE_PROTOCONNECT<pos:position pos:line="186" pos:column="34"/></name></expr>:<pos:position pos:line="186" pos:column="35"/></case>
      <comment type="block" pos:line="187" pos:column="7">/* protocol-specific connect phase */</comment>
      <expr_stmt><expr><name><name pos:line="188" pos:column="7">easy<pos:position pos:line="188" pos:column="11"/></name><operator pos:line="188" pos:column="11">-&gt;<pos:position pos:line="188" pos:column="16"/></operator><name pos:line="188" pos:column="13">result<pos:position pos:line="188" pos:column="19"/></name></name> <operator pos:line="188" pos:column="20">=<pos:position pos:line="188" pos:column="21"/></operator> <call><name pos:line="188" pos:column="22">Curl_protocol_connecting<pos:position pos:line="188" pos:column="46"/></name><argument_list pos:line="188" pos:column="46">(<argument><expr><name><name pos:line="188" pos:column="47">easy<pos:position pos:line="188" pos:column="51"/></name><operator pos:line="188" pos:column="51">-&gt;<pos:position pos:line="188" pos:column="56"/></operator><name pos:line="188" pos:column="53">easy_conn<pos:position pos:line="188" pos:column="62"/></name></name></expr></argument>,
                                              <argument><expr><operator pos:line="189" pos:column="47">&amp;<pos:position pos:line="189" pos:column="52"/></operator><name pos:line="189" pos:column="48">protocol_connect<pos:position pos:line="189" pos:column="64"/></name></expr></argument>)<pos:position pos:line="189" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="66"/></expr_stmt>
      <if pos:line="190" pos:column="7">if<condition pos:line="190" pos:column="9">(<expr><operator pos:line="190" pos:column="10">(<pos:position pos:line="190" pos:column="11"/></operator><name><name pos:line="190" pos:column="11">easy<pos:position pos:line="190" pos:column="15"/></name><operator pos:line="190" pos:column="15">-&gt;<pos:position pos:line="190" pos:column="20"/></operator><name pos:line="190" pos:column="17">result<pos:position pos:line="190" pos:column="23"/></name></name> <operator pos:line="190" pos:column="24">==<pos:position pos:line="190" pos:column="26"/></operator> <name pos:line="190" pos:column="27">CURLE_OK<pos:position pos:line="190" pos:column="35"/></name><operator pos:line="190" pos:column="35">)<pos:position pos:line="190" pos:column="36"/></operator> <operator pos:line="190" pos:column="37">&amp;&amp;<pos:position pos:line="190" pos:column="47"/></operator> <name pos:line="190" pos:column="40">protocol_connect<pos:position pos:line="190" pos:column="56"/></name></expr>)<pos:position pos:line="190" pos:column="57"/></condition><then pos:line="190" pos:column="57"> <block pos:line="190" pos:column="58">{
        <comment type="block" pos:line="191" pos:column="9">/* after the connect has completed, go WAITDO */</comment>
        <expr_stmt><expr><call><name pos:line="192" pos:column="9">multistate<pos:position pos:line="192" pos:column="19"/></name><argument_list pos:line="192" pos:column="19">(<argument><expr><name pos:line="192" pos:column="20">easy<pos:position pos:line="192" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="26">CURLM_STATE_WAITDO<pos:position pos:line="192" pos:column="44"/></name></expr></argument>)<pos:position pos:line="192" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="193" pos:column="9">result<pos:position pos:line="193" pos:column="15"/></name> <operator pos:line="193" pos:column="16">=<pos:position pos:line="193" pos:column="17"/></operator> <name pos:line="193" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="193" pos:column="42"/></name></expr>;<pos:position pos:line="193" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="194" pos:column="8"/></block></then>
      <elseif pos:line="195" pos:column="7">else <if pos:line="195" pos:column="12">if<condition pos:line="195" pos:column="14">(<expr><name><name pos:line="195" pos:column="15">easy<pos:position pos:line="195" pos:column="19"/></name><operator pos:line="195" pos:column="19">-&gt;<pos:position pos:line="195" pos:column="24"/></operator><name pos:line="195" pos:column="21">result<pos:position pos:line="195" pos:column="27"/></name></name></expr>)<pos:position pos:line="195" pos:column="28"/></condition><then pos:line="195" pos:column="28"> <block pos:line="195" pos:column="29">{
        <comment type="block" pos:line="196" pos:column="9">/* failure detected */</comment>
        <expr_stmt><expr><call><name pos:line="197" pos:column="9">Curl_posttransfer<pos:position pos:line="197" pos:column="26"/></name><argument_list pos:line="197" pos:column="26">(<argument><expr><name><name pos:line="197" pos:column="27">easy<pos:position pos:line="197" pos:column="31"/></name><operator pos:line="197" pos:column="31">-&gt;<pos:position pos:line="197" pos:column="36"/></operator><name pos:line="197" pos:column="33">easy_handle<pos:position pos:line="197" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="198" pos:column="9">Curl_done<pos:position pos:line="198" pos:column="18"/></name><argument_list pos:line="198" pos:column="18">(<argument><expr><operator pos:line="198" pos:column="19">&amp;<pos:position pos:line="198" pos:column="24"/></operator><name><name pos:line="198" pos:column="20">easy<pos:position pos:line="198" pos:column="24"/></name><operator pos:line="198" pos:column="24">-&gt;<pos:position pos:line="198" pos:column="29"/></operator><name pos:line="198" pos:column="26">easy_conn<pos:position pos:line="198" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="37">easy<pos:position pos:line="198" pos:column="41"/></name><operator pos:line="198" pos:column="41">-&gt;<pos:position pos:line="198" pos:column="46"/></operator><name pos:line="198" pos:column="43">result<pos:position pos:line="198" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="51">FALSE<pos:position pos:line="198" pos:column="56"/></name></expr></argument>)<pos:position pos:line="198" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="199" pos:column="9">disconnect_conn<pos:position pos:line="199" pos:column="24"/></name> <operator pos:line="199" pos:column="25">=<pos:position pos:line="199" pos:column="26"/></operator> <name pos:line="199" pos:column="27">TRUE<pos:position pos:line="199" pos:column="31"/></name></expr>;<pos:position pos:line="199" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="200" pos:column="8"/></block></then></if></elseif></if>
      <break pos:line="201" pos:column="7">break;<pos:position pos:line="201" pos:column="13"/></break>

    <case pos:line="203" pos:column="5">case <expr><name pos:line="203" pos:column="10">CURLM_STATE_WAITDO<pos:position pos:line="203" pos:column="28"/></name></expr>:<pos:position pos:line="203" pos:column="29"/></case>
      <comment type="block" pos:line="204" pos:column="7">/* Wait for our turn to DO when we're pipelining requests */</comment>
<cpp:ifdef pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">ifdef<pos:position pos:line="205" pos:column="7"/></cpp:directive> <name pos:line="205" pos:column="8">CURLDEBUG<pos:position pos:line="205" pos:column="17"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="206" pos:column="7">infof<pos:position pos:line="206" pos:column="12"/></name><argument_list pos:line="206" pos:column="12">(<argument><expr><name><name pos:line="206" pos:column="13">easy<pos:position pos:line="206" pos:column="17"/></name><operator pos:line="206" pos:column="17">-&gt;<pos:position pos:line="206" pos:column="22"/></operator><name pos:line="206" pos:column="19">easy_handle<pos:position pos:line="206" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="32">"Conn %d send pipe %d inuse %d athead %d\n"<pos:position pos:line="206" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="207" pos:column="13">easy<pos:position pos:line="207" pos:column="17"/></name><operator pos:line="207" pos:column="17">-&gt;<pos:position pos:line="207" pos:column="22"/></operator><name pos:line="207" pos:column="19">easy_conn<pos:position pos:line="207" pos:column="28"/></name><operator pos:line="207" pos:column="28">-&gt;<pos:position pos:line="207" pos:column="33"/></operator><name pos:line="207" pos:column="30">connectindex<pos:position pos:line="207" pos:column="42"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="208" pos:column="13">easy<pos:position pos:line="208" pos:column="17"/></name><operator pos:line="208" pos:column="17">-&gt;<pos:position pos:line="208" pos:column="22"/></operator><name pos:line="208" pos:column="19">easy_conn<pos:position pos:line="208" pos:column="28"/></name><operator pos:line="208" pos:column="28">-&gt;<pos:position pos:line="208" pos:column="33"/></operator><name pos:line="208" pos:column="30">send_pipe<pos:position pos:line="208" pos:column="39"/></name><operator pos:line="208" pos:column="39">-&gt;<pos:position pos:line="208" pos:column="44"/></operator><name pos:line="208" pos:column="41">size<pos:position pos:line="208" pos:column="45"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="209" pos:column="13">easy<pos:position pos:line="209" pos:column="17"/></name><operator pos:line="209" pos:column="17">-&gt;<pos:position pos:line="209" pos:column="22"/></operator><name pos:line="209" pos:column="19">easy_conn<pos:position pos:line="209" pos:column="28"/></name><operator pos:line="209" pos:column="28">-&gt;<pos:position pos:line="209" pos:column="33"/></operator><name pos:line="209" pos:column="30">writechannel_inuse<pos:position pos:line="209" pos:column="48"/></name></name></expr></argument>,
            <argument><expr><call><name pos:line="210" pos:column="13">isHandleAtHead<pos:position pos:line="210" pos:column="27"/></name><argument_list pos:line="210" pos:column="27">(<argument><expr><name><name pos:line="210" pos:column="28">easy<pos:position pos:line="210" pos:column="32"/></name><operator pos:line="210" pos:column="32">-&gt;<pos:position pos:line="210" pos:column="37"/></operator><name pos:line="210" pos:column="34">easy_handle<pos:position pos:line="210" pos:column="45"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="211" pos:column="28">easy<pos:position pos:line="211" pos:column="32"/></name><operator pos:line="211" pos:column="32">-&gt;<pos:position pos:line="211" pos:column="37"/></operator><name pos:line="211" pos:column="34">easy_conn<pos:position pos:line="211" pos:column="43"/></name><operator pos:line="211" pos:column="43">-&gt;<pos:position pos:line="211" pos:column="48"/></operator><name pos:line="211" pos:column="45">send_pipe<pos:position pos:line="211" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="211" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">endif<pos:position pos:line="212" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="213" pos:column="7">if<condition pos:line="213" pos:column="9">(<expr><operator pos:line="213" pos:column="10">!<pos:position pos:line="213" pos:column="11"/></operator><name><name pos:line="213" pos:column="11">easy<pos:position pos:line="213" pos:column="15"/></name><operator pos:line="213" pos:column="15">-&gt;<pos:position pos:line="213" pos:column="20"/></operator><name pos:line="213" pos:column="17">easy_conn<pos:position pos:line="213" pos:column="26"/></name><operator pos:line="213" pos:column="26">-&gt;<pos:position pos:line="213" pos:column="31"/></operator><name pos:line="213" pos:column="28">writechannel_inuse<pos:position pos:line="213" pos:column="46"/></name></name> <operator pos:line="213" pos:column="47">&amp;&amp;<pos:position pos:line="213" pos:column="57"/></operator>
         <call><name pos:line="214" pos:column="10">isHandleAtHead<pos:position pos:line="214" pos:column="24"/></name><argument_list pos:line="214" pos:column="24">(<argument><expr><name><name pos:line="214" pos:column="25">easy<pos:position pos:line="214" pos:column="29"/></name><operator pos:line="214" pos:column="29">-&gt;<pos:position pos:line="214" pos:column="34"/></operator><name pos:line="214" pos:column="31">easy_handle<pos:position pos:line="214" pos:column="42"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="215" pos:column="25">easy<pos:position pos:line="215" pos:column="29"/></name><operator pos:line="215" pos:column="29">-&gt;<pos:position pos:line="215" pos:column="34"/></operator><name pos:line="215" pos:column="31">easy_conn<pos:position pos:line="215" pos:column="40"/></name><operator pos:line="215" pos:column="40">-&gt;<pos:position pos:line="215" pos:column="45"/></operator><name pos:line="215" pos:column="42">send_pipe<pos:position pos:line="215" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="53"/></condition><then pos:line="215" pos:column="53"> <block pos:line="215" pos:column="54">{
        <comment type="block" pos:line="216" pos:column="9">/* Grab the channel */</comment>
        <expr_stmt><expr><name><name pos:line="217" pos:column="9">easy<pos:position pos:line="217" pos:column="13"/></name><operator pos:line="217" pos:column="13">-&gt;<pos:position pos:line="217" pos:column="18"/></operator><name pos:line="217" pos:column="15">easy_conn<pos:position pos:line="217" pos:column="24"/></name><operator pos:line="217" pos:column="24">-&gt;<pos:position pos:line="217" pos:column="29"/></operator><name pos:line="217" pos:column="26">writechannel_inuse<pos:position pos:line="217" pos:column="44"/></name></name> <operator pos:line="217" pos:column="45">=<pos:position pos:line="217" pos:column="46"/></operator> <name pos:line="217" pos:column="47">TRUE<pos:position pos:line="217" pos:column="51"/></name></expr>;<pos:position pos:line="217" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="218" pos:column="9">multistate<pos:position pos:line="218" pos:column="19"/></name><argument_list pos:line="218" pos:column="19">(<argument><expr><name pos:line="218" pos:column="20">easy<pos:position pos:line="218" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="26">CURLM_STATE_DO<pos:position pos:line="218" pos:column="40"/></name></expr></argument>)<pos:position pos:line="218" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="219" pos:column="9">result<pos:position pos:line="219" pos:column="15"/></name> <operator pos:line="219" pos:column="16">=<pos:position pos:line="219" pos:column="17"/></operator> <name pos:line="219" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="219" pos:column="42"/></name></expr>;<pos:position pos:line="219" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="220" pos:column="8"/></block></then></if>
      <break pos:line="221" pos:column="7">break;<pos:position pos:line="221" pos:column="13"/></break>

    <case pos:line="223" pos:column="5">case <expr><name pos:line="223" pos:column="10">CURLM_STATE_DO<pos:position pos:line="223" pos:column="24"/></name></expr>:<pos:position pos:line="223" pos:column="25"/></case>
      <if pos:line="224" pos:column="7">if<condition pos:line="224" pos:column="9">(<expr><name><name pos:line="224" pos:column="10">easy<pos:position pos:line="224" pos:column="14"/></name><operator pos:line="224" pos:column="14">-&gt;<pos:position pos:line="224" pos:column="19"/></operator><name pos:line="224" pos:column="16">easy_handle<pos:position pos:line="224" pos:column="27"/></name><operator pos:line="224" pos:column="27">-&gt;<pos:position pos:line="224" pos:column="32"/></operator><name pos:line="224" pos:column="29">set<pos:position pos:line="224" pos:column="32"/></name><operator pos:line="224" pos:column="32">.<pos:position pos:line="224" pos:column="33"/></operator><name pos:line="224" pos:column="33">connect_only<pos:position pos:line="224" pos:column="45"/></name></name></expr>)<pos:position pos:line="224" pos:column="46"/></condition><then pos:line="224" pos:column="46"> <block pos:line="224" pos:column="47">{
        <comment type="block" pos:line="225" pos:column="9">/* keep connection open for application to use the socket */</comment>
        <expr_stmt><expr><name><name pos:line="226" pos:column="9">easy<pos:position pos:line="226" pos:column="13"/></name><operator pos:line="226" pos:column="13">-&gt;<pos:position pos:line="226" pos:column="18"/></operator><name pos:line="226" pos:column="15">easy_conn<pos:position pos:line="226" pos:column="24"/></name><operator pos:line="226" pos:column="24">-&gt;<pos:position pos:line="226" pos:column="29"/></operator><name pos:line="226" pos:column="26">bits<pos:position pos:line="226" pos:column="30"/></name><operator pos:line="226" pos:column="30">.<pos:position pos:line="226" pos:column="31"/></operator><name pos:line="226" pos:column="31">close<pos:position pos:line="226" pos:column="36"/></name></name> <operator pos:line="226" pos:column="37">=<pos:position pos:line="226" pos:column="38"/></operator> <name pos:line="226" pos:column="39">FALSE<pos:position pos:line="226" pos:column="44"/></name></expr>;<pos:position pos:line="226" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="227" pos:column="9">multistate<pos:position pos:line="227" pos:column="19"/></name><argument_list pos:line="227" pos:column="19">(<argument><expr><name pos:line="227" pos:column="20">easy<pos:position pos:line="227" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="26">CURLM_STATE_DONE<pos:position pos:line="227" pos:column="42"/></name></expr></argument>)<pos:position pos:line="227" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="228" pos:column="9">easy<pos:position pos:line="228" pos:column="13"/></name><operator pos:line="228" pos:column="13">-&gt;<pos:position pos:line="228" pos:column="18"/></operator><name pos:line="228" pos:column="15">result<pos:position pos:line="228" pos:column="21"/></name></name> <operator pos:line="228" pos:column="22">=<pos:position pos:line="228" pos:column="23"/></operator> <name pos:line="228" pos:column="24">CURLE_OK<pos:position pos:line="228" pos:column="32"/></name></expr>;<pos:position pos:line="228" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="229" pos:column="9">result<pos:position pos:line="229" pos:column="15"/></name> <operator pos:line="229" pos:column="16">=<pos:position pos:line="229" pos:column="17"/></operator> <name pos:line="229" pos:column="18">CURLM_OK<pos:position pos:line="229" pos:column="26"/></name></expr>;<pos:position pos:line="229" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="230" pos:column="8"/></block></then>
      <else pos:line="231" pos:column="7">else <block pos:line="231" pos:column="12">{
        <comment type="block" pos:line="232" pos:column="9">/* Perform the protocol's DO action */</comment>
        <expr_stmt><expr><name><name pos:line="233" pos:column="9">easy<pos:position pos:line="233" pos:column="13"/></name><operator pos:line="233" pos:column="13">-&gt;<pos:position pos:line="233" pos:column="18"/></operator><name pos:line="233" pos:column="15">result<pos:position pos:line="233" pos:column="21"/></name></name> <operator pos:line="233" pos:column="22">=<pos:position pos:line="233" pos:column="23"/></operator> <call><name pos:line="233" pos:column="24">Curl_do<pos:position pos:line="233" pos:column="31"/></name><argument_list pos:line="233" pos:column="31">(<argument><expr><operator pos:line="233" pos:column="32">&amp;<pos:position pos:line="233" pos:column="37"/></operator><name><name pos:line="233" pos:column="33">easy<pos:position pos:line="233" pos:column="37"/></name><operator pos:line="233" pos:column="37">-&gt;<pos:position pos:line="233" pos:column="42"/></operator><name pos:line="233" pos:column="39">easy_conn<pos:position pos:line="233" pos:column="48"/></name></name></expr></argument>,
                               <argument><expr><operator pos:line="234" pos:column="32">&amp;<pos:position pos:line="234" pos:column="37"/></operator><name pos:line="234" pos:column="33">dophase_done<pos:position pos:line="234" pos:column="45"/></name></expr></argument>)<pos:position pos:line="234" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="47"/></expr_stmt>

        <if pos:line="236" pos:column="9">if<condition pos:line="236" pos:column="11">(<expr><name pos:line="236" pos:column="12">CURLE_OK<pos:position pos:line="236" pos:column="20"/></name> <operator pos:line="236" pos:column="21">==<pos:position pos:line="236" pos:column="23"/></operator> <name><name pos:line="236" pos:column="24">easy<pos:position pos:line="236" pos:column="28"/></name><operator pos:line="236" pos:column="28">-&gt;<pos:position pos:line="236" pos:column="33"/></operator><name pos:line="236" pos:column="30">result<pos:position pos:line="236" pos:column="36"/></name></name></expr>)<pos:position pos:line="236" pos:column="37"/></condition><then pos:line="236" pos:column="37"> <block pos:line="236" pos:column="38">{

          <if pos:line="238" pos:column="11">if<condition pos:line="238" pos:column="13">(<expr><operator pos:line="238" pos:column="14">!<pos:position pos:line="238" pos:column="15"/></operator><name pos:line="238" pos:column="15">dophase_done<pos:position pos:line="238" pos:column="27"/></name></expr>)<pos:position pos:line="238" pos:column="28"/></condition><then pos:line="238" pos:column="28"> <block pos:line="238" pos:column="29">{
            <comment type="block" pos:line="239" pos:column="13">/* DO was not completed in one function call, we must continue
               DOING... */</comment>
            <expr_stmt><expr><call><name pos:line="241" pos:column="13">multistate<pos:position pos:line="241" pos:column="23"/></name><argument_list pos:line="241" pos:column="23">(<argument><expr><name pos:line="241" pos:column="24">easy<pos:position pos:line="241" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="30">CURLM_STATE_DOING<pos:position pos:line="241" pos:column="47"/></name></expr></argument>)<pos:position pos:line="241" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="242" pos:column="13">result<pos:position pos:line="242" pos:column="19"/></name> <operator pos:line="242" pos:column="20">=<pos:position pos:line="242" pos:column="21"/></operator> <name pos:line="242" pos:column="22">CURLM_OK<pos:position pos:line="242" pos:column="30"/></name></expr>;<pos:position pos:line="242" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="243" pos:column="12"/></block></then>

          <comment type="block" pos:line="245" pos:column="11">/* after DO, go DO_DONE... or DO_MORE */</comment>
          <elseif pos:line="246" pos:column="11">else <if pos:line="246" pos:column="16">if<condition pos:line="246" pos:column="18">(<expr><name><name pos:line="246" pos:column="19">easy<pos:position pos:line="246" pos:column="23"/></name><operator pos:line="246" pos:column="23">-&gt;<pos:position pos:line="246" pos:column="28"/></operator><name pos:line="246" pos:column="25">easy_conn<pos:position pos:line="246" pos:column="34"/></name><operator pos:line="246" pos:column="34">-&gt;<pos:position pos:line="246" pos:column="39"/></operator><name pos:line="246" pos:column="36">bits<pos:position pos:line="246" pos:column="40"/></name><operator pos:line="246" pos:column="40">.<pos:position pos:line="246" pos:column="41"/></operator><name pos:line="246" pos:column="41">do_more<pos:position pos:line="246" pos:column="48"/></name></name></expr>)<pos:position pos:line="246" pos:column="49"/></condition><then pos:line="246" pos:column="49"> <block pos:line="246" pos:column="50">{
            <comment type="block" pos:line="247" pos:column="13">/* we're supposed to do more, but we need to sit down, relax
               and wait a little while first */</comment>
            <expr_stmt><expr><call><name pos:line="249" pos:column="13">multistate<pos:position pos:line="249" pos:column="23"/></name><argument_list pos:line="249" pos:column="23">(<argument><expr><name pos:line="249" pos:column="24">easy<pos:position pos:line="249" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="30">CURLM_STATE_DO_MORE<pos:position pos:line="249" pos:column="49"/></name></expr></argument>)<pos:position pos:line="249" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="250" pos:column="13">result<pos:position pos:line="250" pos:column="19"/></name> <operator pos:line="250" pos:column="20">=<pos:position pos:line="250" pos:column="21"/></operator> <name pos:line="250" pos:column="22">CURLM_OK<pos:position pos:line="250" pos:column="30"/></name></expr>;<pos:position pos:line="250" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="251" pos:column="12"/></block></then></if></elseif>
          <else pos:line="252" pos:column="11">else <block pos:line="252" pos:column="16">{
            <comment type="block" pos:line="253" pos:column="13">/* we're done with the DO, now DO_DONE */</comment>
            <expr_stmt><expr><call><name pos:line="254" pos:column="13">multistate<pos:position pos:line="254" pos:column="23"/></name><argument_list pos:line="254" pos:column="23">(<argument><expr><name pos:line="254" pos:column="24">easy<pos:position pos:line="254" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="30">CURLM_STATE_DO_DONE<pos:position pos:line="254" pos:column="49"/></name></expr></argument>)<pos:position pos:line="254" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="255" pos:column="13">result<pos:position pos:line="255" pos:column="19"/></name> <operator pos:line="255" pos:column="20">=<pos:position pos:line="255" pos:column="21"/></operator> <name pos:line="255" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="255" pos:column="46"/></name></expr>;<pos:position pos:line="255" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="256" pos:column="12"/></block></else></if>
        }<pos:position pos:line="257" pos:column="10"/></block></then>
        <else pos:line="258" pos:column="9">else <block pos:line="258" pos:column="14">{
          <comment type="block" pos:line="259" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="260" pos:column="11">Curl_posttransfer<pos:position pos:line="260" pos:column="28"/></name><argument_list pos:line="260" pos:column="28">(<argument><expr><name><name pos:line="260" pos:column="29">easy<pos:position pos:line="260" pos:column="33"/></name><operator pos:line="260" pos:column="33">-&gt;<pos:position pos:line="260" pos:column="38"/></operator><name pos:line="260" pos:column="35">easy_handle<pos:position pos:line="260" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="260" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="261" pos:column="11">Curl_done<pos:position pos:line="261" pos:column="20"/></name><argument_list pos:line="261" pos:column="20">(<argument><expr><operator pos:line="261" pos:column="21">&amp;<pos:position pos:line="261" pos:column="26"/></operator><name><name pos:line="261" pos:column="22">easy<pos:position pos:line="261" pos:column="26"/></name><operator pos:line="261" pos:column="26">-&gt;<pos:position pos:line="261" pos:column="31"/></operator><name pos:line="261" pos:column="28">easy_conn<pos:position pos:line="261" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="261" pos:column="39">easy<pos:position pos:line="261" pos:column="43"/></name><operator pos:line="261" pos:column="43">-&gt;<pos:position pos:line="261" pos:column="48"/></operator><name pos:line="261" pos:column="45">result<pos:position pos:line="261" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="53">FALSE<pos:position pos:line="261" pos:column="58"/></name></expr></argument>)<pos:position pos:line="261" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="60"/></expr_stmt>
          <expr_stmt><expr><name pos:line="262" pos:column="11">disconnect_conn<pos:position pos:line="262" pos:column="26"/></name> <operator pos:line="262" pos:column="27">=<pos:position pos:line="262" pos:column="28"/></operator> <name pos:line="262" pos:column="29">TRUE<pos:position pos:line="262" pos:column="33"/></name></expr>;<pos:position pos:line="262" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="263" pos:column="10"/></block></else></if>
      }<pos:position pos:line="264" pos:column="8"/></block></else></if>
      <break pos:line="265" pos:column="7">break;<pos:position pos:line="265" pos:column="13"/></break>

    <case pos:line="267" pos:column="5">case <expr><name pos:line="267" pos:column="10">CURLM_STATE_DOING<pos:position pos:line="267" pos:column="27"/></name></expr>:<pos:position pos:line="267" pos:column="28"/></case>
      <comment type="block" pos:line="268" pos:column="7">/* we continue DOING until the DO phase is complete */</comment>
      <expr_stmt><expr><name><name pos:line="269" pos:column="7">easy<pos:position pos:line="269" pos:column="11"/></name><operator pos:line="269" pos:column="11">-&gt;<pos:position pos:line="269" pos:column="16"/></operator><name pos:line="269" pos:column="13">result<pos:position pos:line="269" pos:column="19"/></name></name> <operator pos:line="269" pos:column="20">=<pos:position pos:line="269" pos:column="21"/></operator> <call><name pos:line="269" pos:column="22">Curl_protocol_doing<pos:position pos:line="269" pos:column="41"/></name><argument_list pos:line="269" pos:column="41">(<argument><expr><name><name pos:line="269" pos:column="42">easy<pos:position pos:line="269" pos:column="46"/></name><operator pos:line="269" pos:column="46">-&gt;<pos:position pos:line="269" pos:column="51"/></operator><name pos:line="269" pos:column="48">easy_conn<pos:position pos:line="269" pos:column="57"/></name></name></expr></argument>,
                                         <argument><expr><operator pos:line="270" pos:column="42">&amp;<pos:position pos:line="270" pos:column="47"/></operator><name pos:line="270" pos:column="43">dophase_done<pos:position pos:line="270" pos:column="55"/></name></expr></argument>)<pos:position pos:line="270" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="57"/></expr_stmt>
      <if pos:line="271" pos:column="7">if<condition pos:line="271" pos:column="9">(<expr><name pos:line="271" pos:column="10">CURLE_OK<pos:position pos:line="271" pos:column="18"/></name> <operator pos:line="271" pos:column="19">==<pos:position pos:line="271" pos:column="21"/></operator> <name><name pos:line="271" pos:column="22">easy<pos:position pos:line="271" pos:column="26"/></name><operator pos:line="271" pos:column="26">-&gt;<pos:position pos:line="271" pos:column="31"/></operator><name pos:line="271" pos:column="28">result<pos:position pos:line="271" pos:column="34"/></name></name></expr>)<pos:position pos:line="271" pos:column="35"/></condition><then pos:line="271" pos:column="35"> <block pos:line="271" pos:column="36">{
        <if pos:line="272" pos:column="9">if<condition pos:line="272" pos:column="11">(<expr><name pos:line="272" pos:column="12">dophase_done<pos:position pos:line="272" pos:column="24"/></name></expr>)<pos:position pos:line="272" pos:column="25"/></condition><then pos:line="272" pos:column="25"> <block pos:line="272" pos:column="26">{
          <comment type="block" pos:line="273" pos:column="11">/* after DO, go PERFORM... or DO_MORE */</comment>
          <if pos:line="274" pos:column="11">if<condition pos:line="274" pos:column="13">(<expr><name><name pos:line="274" pos:column="14">easy<pos:position pos:line="274" pos:column="18"/></name><operator pos:line="274" pos:column="18">-&gt;<pos:position pos:line="274" pos:column="23"/></operator><name pos:line="274" pos:column="20">easy_conn<pos:position pos:line="274" pos:column="29"/></name><operator pos:line="274" pos:column="29">-&gt;<pos:position pos:line="274" pos:column="34"/></operator><name pos:line="274" pos:column="31">bits<pos:position pos:line="274" pos:column="35"/></name><operator pos:line="274" pos:column="35">.<pos:position pos:line="274" pos:column="36"/></operator><name pos:line="274" pos:column="36">do_more<pos:position pos:line="274" pos:column="43"/></name></name></expr>)<pos:position pos:line="274" pos:column="44"/></condition><then pos:line="274" pos:column="44"> <block pos:line="274" pos:column="45">{
            <comment type="block" pos:line="275" pos:column="13">/* we're supposed to do more, but we need to sit down, relax
               and wait a little while first */</comment>
            <expr_stmt><expr><call><name pos:line="277" pos:column="13">multistate<pos:position pos:line="277" pos:column="23"/></name><argument_list pos:line="277" pos:column="23">(<argument><expr><name pos:line="277" pos:column="24">easy<pos:position pos:line="277" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="30">CURLM_STATE_DO_MORE<pos:position pos:line="277" pos:column="49"/></name></expr></argument>)<pos:position pos:line="277" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="278" pos:column="13">result<pos:position pos:line="278" pos:column="19"/></name> <operator pos:line="278" pos:column="20">=<pos:position pos:line="278" pos:column="21"/></operator> <name pos:line="278" pos:column="22">CURLM_OK<pos:position pos:line="278" pos:column="30"/></name></expr>;<pos:position pos:line="278" pos:column="31"/></expr_stmt>
          }<pos:position pos:line="279" pos:column="12"/></block></then>
          <else pos:line="280" pos:column="11">else <block pos:line="280" pos:column="16">{
            <comment type="block" pos:line="281" pos:column="13">/* we're done with the DO, now DO_DONE */</comment>
            <expr_stmt><expr><call><name pos:line="282" pos:column="13">multistate<pos:position pos:line="282" pos:column="23"/></name><argument_list pos:line="282" pos:column="23">(<argument><expr><name pos:line="282" pos:column="24">easy<pos:position pos:line="282" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="282" pos:column="30">CURLM_STATE_DO_DONE<pos:position pos:line="282" pos:column="49"/></name></expr></argument>)<pos:position pos:line="282" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="283" pos:column="13">result<pos:position pos:line="283" pos:column="19"/></name> <operator pos:line="283" pos:column="20">=<pos:position pos:line="283" pos:column="21"/></operator> <name pos:line="283" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="283" pos:column="46"/></name></expr>;<pos:position pos:line="283" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="284" pos:column="12"/></block></else></if>
        }<pos:position pos:line="285" pos:column="10"/></block></then></if> <comment type="block" pos:line="285" pos:column="11">/* dophase_done */</comment>
      }<pos:position pos:line="286" pos:column="8"/></block></then>
      <else pos:line="287" pos:column="7">else <block pos:line="287" pos:column="12">{
        <comment type="block" pos:line="288" pos:column="9">/* failure detected */</comment>
        <expr_stmt><expr><call><name pos:line="289" pos:column="9">Curl_posttransfer<pos:position pos:line="289" pos:column="26"/></name><argument_list pos:line="289" pos:column="26">(<argument><expr><name><name pos:line="289" pos:column="27">easy<pos:position pos:line="289" pos:column="31"/></name><operator pos:line="289" pos:column="31">-&gt;<pos:position pos:line="289" pos:column="36"/></operator><name pos:line="289" pos:column="33">easy_handle<pos:position pos:line="289" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="289" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="290" pos:column="9">Curl_done<pos:position pos:line="290" pos:column="18"/></name><argument_list pos:line="290" pos:column="18">(<argument><expr><operator pos:line="290" pos:column="19">&amp;<pos:position pos:line="290" pos:column="24"/></operator><name><name pos:line="290" pos:column="20">easy<pos:position pos:line="290" pos:column="24"/></name><operator pos:line="290" pos:column="24">-&gt;<pos:position pos:line="290" pos:column="29"/></operator><name pos:line="290" pos:column="26">easy_conn<pos:position pos:line="290" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="37">easy<pos:position pos:line="290" pos:column="41"/></name><operator pos:line="290" pos:column="41">-&gt;<pos:position pos:line="290" pos:column="46"/></operator><name pos:line="290" pos:column="43">result<pos:position pos:line="290" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="290" pos:column="51">FALSE<pos:position pos:line="290" pos:column="56"/></name></expr></argument>)<pos:position pos:line="290" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="291" pos:column="9">disconnect_conn<pos:position pos:line="291" pos:column="24"/></name> <operator pos:line="291" pos:column="25">=<pos:position pos:line="291" pos:column="26"/></operator> <name pos:line="291" pos:column="27">TRUE<pos:position pos:line="291" pos:column="31"/></name></expr>;<pos:position pos:line="291" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="292" pos:column="8"/></block></else></if>
      <break pos:line="293" pos:column="7">break;<pos:position pos:line="293" pos:column="13"/></break>

    <case pos:line="295" pos:column="5">case <expr><name pos:line="295" pos:column="10">CURLM_STATE_DO_MORE<pos:position pos:line="295" pos:column="29"/></name></expr>:<pos:position pos:line="295" pos:column="30"/></case>
      <comment type="block" pos:line="296" pos:column="7">/* Ready to do more? */</comment>
      <expr_stmt><expr><name><name pos:line="297" pos:column="7">easy<pos:position pos:line="297" pos:column="11"/></name><operator pos:line="297" pos:column="11">-&gt;<pos:position pos:line="297" pos:column="16"/></operator><name pos:line="297" pos:column="13">result<pos:position pos:line="297" pos:column="19"/></name></name> <operator pos:line="297" pos:column="20">=<pos:position pos:line="297" pos:column="21"/></operator> <call><name pos:line="297" pos:column="22">Curl_is_connected<pos:position pos:line="297" pos:column="39"/></name><argument_list pos:line="297" pos:column="39">(<argument><expr><name><name pos:line="297" pos:column="40">easy<pos:position pos:line="297" pos:column="44"/></name><operator pos:line="297" pos:column="44">-&gt;<pos:position pos:line="297" pos:column="49"/></operator><name pos:line="297" pos:column="46">easy_conn<pos:position pos:line="297" pos:column="55"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="298" pos:column="40">SECONDARYSOCKET<pos:position pos:line="298" pos:column="55"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="299" pos:column="40">&amp;<pos:position pos:line="299" pos:column="45"/></operator><name pos:line="299" pos:column="41">connected<pos:position pos:line="299" pos:column="50"/></name></expr></argument>)<pos:position pos:line="299" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="52"/></expr_stmt>
      <if pos:line="300" pos:column="7">if<condition pos:line="300" pos:column="9">(<expr><name pos:line="300" pos:column="10">connected<pos:position pos:line="300" pos:column="19"/></name></expr>)<pos:position pos:line="300" pos:column="20"/></condition><then pos:line="300" pos:column="20"> <block pos:line="300" pos:column="21">{
        <comment type="block" pos:line="301" pos:column="9">/*
         * When we are connected, DO MORE and then go DO_DONE
         */</comment>
        <expr_stmt><expr><name><name pos:line="304" pos:column="9">easy<pos:position pos:line="304" pos:column="13"/></name><operator pos:line="304" pos:column="13">-&gt;<pos:position pos:line="304" pos:column="18"/></operator><name pos:line="304" pos:column="15">result<pos:position pos:line="304" pos:column="21"/></name></name> <operator pos:line="304" pos:column="22">=<pos:position pos:line="304" pos:column="23"/></operator> <call><name pos:line="304" pos:column="24">Curl_do_more<pos:position pos:line="304" pos:column="36"/></name><argument_list pos:line="304" pos:column="36">(<argument><expr><name><name pos:line="304" pos:column="37">easy<pos:position pos:line="304" pos:column="41"/></name><operator pos:line="304" pos:column="41">-&gt;<pos:position pos:line="304" pos:column="46"/></operator><name pos:line="304" pos:column="43">easy_conn<pos:position pos:line="304" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="304" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="306" pos:column="9">/* No need to remove ourselves from the send pipeline here since that
           is done for us in Curl_done() */</comment>

        <if pos:line="309" pos:column="9">if<condition pos:line="309" pos:column="11">(<expr><name pos:line="309" pos:column="12">CURLE_OK<pos:position pos:line="309" pos:column="20"/></name> <operator pos:line="309" pos:column="21">==<pos:position pos:line="309" pos:column="23"/></operator> <name><name pos:line="309" pos:column="24">easy<pos:position pos:line="309" pos:column="28"/></name><operator pos:line="309" pos:column="28">-&gt;<pos:position pos:line="309" pos:column="33"/></operator><name pos:line="309" pos:column="30">result<pos:position pos:line="309" pos:column="36"/></name></name></expr>)<pos:position pos:line="309" pos:column="37"/></condition><then pos:line="309" pos:column="37"> <block pos:line="309" pos:column="38">{
          <expr_stmt><expr><call><name pos:line="310" pos:column="11">multistate<pos:position pos:line="310" pos:column="21"/></name><argument_list pos:line="310" pos:column="21">(<argument><expr><name pos:line="310" pos:column="22">easy<pos:position pos:line="310" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="28">CURLM_STATE_DO_DONE<pos:position pos:line="310" pos:column="47"/></name></expr></argument>)<pos:position pos:line="310" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="49"/></expr_stmt>
          <expr_stmt><expr><name pos:line="311" pos:column="11">result<pos:position pos:line="311" pos:column="17"/></name> <operator pos:line="311" pos:column="18">=<pos:position pos:line="311" pos:column="19"/></operator> <name pos:line="311" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="311" pos:column="44"/></name></expr>;<pos:position pos:line="311" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="312" pos:column="10"/></block></then>
        <else pos:line="313" pos:column="9">else <block pos:line="313" pos:column="14">{
          <comment type="block" pos:line="314" pos:column="11">/* failure detected */</comment>
          <expr_stmt><expr><call><name pos:line="315" pos:column="11">Curl_posttransfer<pos:position pos:line="315" pos:column="28"/></name><argument_list pos:line="315" pos:column="28">(<argument><expr><name><name pos:line="315" pos:column="29">easy<pos:position pos:line="315" pos:column="33"/></name><operator pos:line="315" pos:column="33">-&gt;<pos:position pos:line="315" pos:column="38"/></operator><name pos:line="315" pos:column="35">easy_handle<pos:position pos:line="315" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="315" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="316" pos:column="11">Curl_done<pos:position pos:line="316" pos:column="20"/></name><argument_list pos:line="316" pos:column="20">(<argument><expr><operator pos:line="316" pos:column="21">&amp;<pos:position pos:line="316" pos:column="26"/></operator><name><name pos:line="316" pos:column="22">easy<pos:position pos:line="316" pos:column="26"/></name><operator pos:line="316" pos:column="26">-&gt;<pos:position pos:line="316" pos:column="31"/></operator><name pos:line="316" pos:column="28">easy_conn<pos:position pos:line="316" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="316" pos:column="39">easy<pos:position pos:line="316" pos:column="43"/></name><operator pos:line="316" pos:column="43">-&gt;<pos:position pos:line="316" pos:column="48"/></operator><name pos:line="316" pos:column="45">result<pos:position pos:line="316" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="53">FALSE<pos:position pos:line="316" pos:column="58"/></name></expr></argument>)<pos:position pos:line="316" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="60"/></expr_stmt>
          <expr_stmt><expr><name pos:line="317" pos:column="11">disconnect_conn<pos:position pos:line="317" pos:column="26"/></name> <operator pos:line="317" pos:column="27">=<pos:position pos:line="317" pos:column="28"/></operator> <name pos:line="317" pos:column="29">TRUE<pos:position pos:line="317" pos:column="33"/></name></expr>;<pos:position pos:line="317" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="318" pos:column="10"/></block></else></if>
      }<pos:position pos:line="319" pos:column="8"/></block></then></if>
      <break pos:line="320" pos:column="7">break;<pos:position pos:line="320" pos:column="13"/></break>

    <case pos:line="322" pos:column="5">case <expr><name pos:line="322" pos:column="10">CURLM_STATE_DO_DONE<pos:position pos:line="322" pos:column="29"/></name></expr>:<pos:position pos:line="322" pos:column="30"/></case>
      <comment type="block" pos:line="323" pos:column="7">/* Move ourselves from the send to recv pipeline */</comment>
      <expr_stmt><expr><call><name pos:line="324" pos:column="7">moveHandleFromSendToRecvPipeline<pos:position pos:line="324" pos:column="39"/></name><argument_list pos:line="324" pos:column="39">(<argument><expr><name><name pos:line="324" pos:column="40">easy<pos:position pos:line="324" pos:column="44"/></name><operator pos:line="324" pos:column="44">-&gt;<pos:position pos:line="324" pos:column="49"/></operator><name pos:line="324" pos:column="46">easy_handle<pos:position pos:line="324" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="324" pos:column="59">easy<pos:position pos:line="324" pos:column="63"/></name><operator pos:line="324" pos:column="63">-&gt;<pos:position pos:line="324" pos:column="68"/></operator><name pos:line="324" pos:column="65">easy_conn<pos:position pos:line="324" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="324" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="76"/></expr_stmt>
      <comment type="block" pos:line="325" pos:column="7">/* Check if we can move pending requests to send pipe */</comment>
      <expr_stmt><expr><call><name pos:line="326" pos:column="7">checkPendPipeline<pos:position pos:line="326" pos:column="24"/></name><argument_list pos:line="326" pos:column="24">(<argument><expr><name><name pos:line="326" pos:column="25">easy<pos:position pos:line="326" pos:column="29"/></name><operator pos:line="326" pos:column="29">-&gt;<pos:position pos:line="326" pos:column="34"/></operator><name pos:line="326" pos:column="31">easy_conn<pos:position pos:line="326" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="326" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="327" pos:column="7">multistate<pos:position pos:line="327" pos:column="17"/></name><argument_list pos:line="327" pos:column="17">(<argument><expr><name pos:line="327" pos:column="18">easy<pos:position pos:line="327" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="24">CURLM_STATE_WAITPERFORM<pos:position pos:line="327" pos:column="47"/></name></expr></argument>)<pos:position pos:line="327" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name pos:line="328" pos:column="7">result<pos:position pos:line="328" pos:column="13"/></name> <operator pos:line="328" pos:column="14">=<pos:position pos:line="328" pos:column="15"/></operator> <name pos:line="328" pos:column="16">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="328" pos:column="40"/></name></expr>;<pos:position pos:line="328" pos:column="41"/></expr_stmt>
      <break pos:line="329" pos:column="7">break;<pos:position pos:line="329" pos:column="13"/></break>

    <case pos:line="331" pos:column="5">case <expr><name pos:line="331" pos:column="10">CURLM_STATE_WAITPERFORM<pos:position pos:line="331" pos:column="33"/></name></expr>:<pos:position pos:line="331" pos:column="34"/></case>
<cpp:ifdef pos:line="332" pos:column="1">#<cpp:directive pos:line="332" pos:column="2">ifdef<pos:position pos:line="332" pos:column="7"/></cpp:directive> <name pos:line="332" pos:column="8">CURLDEBUG<pos:position pos:line="332" pos:column="17"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="333" pos:column="7">infof<pos:position pos:line="333" pos:column="12"/></name><argument_list pos:line="333" pos:column="12">(<argument><expr><name><name pos:line="333" pos:column="13">easy<pos:position pos:line="333" pos:column="17"/></name><operator pos:line="333" pos:column="17">-&gt;<pos:position pos:line="333" pos:column="22"/></operator><name pos:line="333" pos:column="19">easy_handle<pos:position pos:line="333" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="32">"Conn %d recv pipe %d inuse %d athead %d\n"<pos:position pos:line="333" pos:column="75"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="334" pos:column="13">easy<pos:position pos:line="334" pos:column="17"/></name><operator pos:line="334" pos:column="17">-&gt;<pos:position pos:line="334" pos:column="22"/></operator><name pos:line="334" pos:column="19">easy_conn<pos:position pos:line="334" pos:column="28"/></name><operator pos:line="334" pos:column="28">-&gt;<pos:position pos:line="334" pos:column="33"/></operator><name pos:line="334" pos:column="30">connectindex<pos:position pos:line="334" pos:column="42"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="335" pos:column="13">easy<pos:position pos:line="335" pos:column="17"/></name><operator pos:line="335" pos:column="17">-&gt;<pos:position pos:line="335" pos:column="22"/></operator><name pos:line="335" pos:column="19">easy_conn<pos:position pos:line="335" pos:column="28"/></name><operator pos:line="335" pos:column="28">-&gt;<pos:position pos:line="335" pos:column="33"/></operator><name pos:line="335" pos:column="30">recv_pipe<pos:position pos:line="335" pos:column="39"/></name><operator pos:line="335" pos:column="39">-&gt;<pos:position pos:line="335" pos:column="44"/></operator><name pos:line="335" pos:column="41">size<pos:position pos:line="335" pos:column="45"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="336" pos:column="13">easy<pos:position pos:line="336" pos:column="17"/></name><operator pos:line="336" pos:column="17">-&gt;<pos:position pos:line="336" pos:column="22"/></operator><name pos:line="336" pos:column="19">easy_conn<pos:position pos:line="336" pos:column="28"/></name><operator pos:line="336" pos:column="28">-&gt;<pos:position pos:line="336" pos:column="33"/></operator><name pos:line="336" pos:column="30">readchannel_inuse<pos:position pos:line="336" pos:column="47"/></name></name></expr></argument>,
            <argument><expr><call><name pos:line="337" pos:column="13">isHandleAtHead<pos:position pos:line="337" pos:column="27"/></name><argument_list pos:line="337" pos:column="27">(<argument><expr><name><name pos:line="337" pos:column="28">easy<pos:position pos:line="337" pos:column="32"/></name><operator pos:line="337" pos:column="32">-&gt;<pos:position pos:line="337" pos:column="37"/></operator><name pos:line="337" pos:column="34">easy_handle<pos:position pos:line="337" pos:column="45"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="338" pos:column="28">easy<pos:position pos:line="338" pos:column="32"/></name><operator pos:line="338" pos:column="32">-&gt;<pos:position pos:line="338" pos:column="37"/></operator><name pos:line="338" pos:column="34">easy_conn<pos:position pos:line="338" pos:column="43"/></name><operator pos:line="338" pos:column="43">-&gt;<pos:position pos:line="338" pos:column="48"/></operator><name pos:line="338" pos:column="45">recv_pipe<pos:position pos:line="338" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="338" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="338" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="339" pos:column="1">#<cpp:directive pos:line="339" pos:column="2">endif<pos:position pos:line="339" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="340" pos:column="7">/* Wait for our turn to PERFORM */</comment>
      <if pos:line="341" pos:column="7">if<condition pos:line="341" pos:column="9">(<expr><operator pos:line="341" pos:column="10">!<pos:position pos:line="341" pos:column="11"/></operator><name><name pos:line="341" pos:column="11">easy<pos:position pos:line="341" pos:column="15"/></name><operator pos:line="341" pos:column="15">-&gt;<pos:position pos:line="341" pos:column="20"/></operator><name pos:line="341" pos:column="17">easy_conn<pos:position pos:line="341" pos:column="26"/></name><operator pos:line="341" pos:column="26">-&gt;<pos:position pos:line="341" pos:column="31"/></operator><name pos:line="341" pos:column="28">readchannel_inuse<pos:position pos:line="341" pos:column="45"/></name></name> <operator pos:line="341" pos:column="46">&amp;&amp;<pos:position pos:line="341" pos:column="56"/></operator>
         <call><name pos:line="342" pos:column="10">isHandleAtHead<pos:position pos:line="342" pos:column="24"/></name><argument_list pos:line="342" pos:column="24">(<argument><expr><name><name pos:line="342" pos:column="25">easy<pos:position pos:line="342" pos:column="29"/></name><operator pos:line="342" pos:column="29">-&gt;<pos:position pos:line="342" pos:column="34"/></operator><name pos:line="342" pos:column="31">easy_handle<pos:position pos:line="342" pos:column="42"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="343" pos:column="25">easy<pos:position pos:line="343" pos:column="29"/></name><operator pos:line="343" pos:column="29">-&gt;<pos:position pos:line="343" pos:column="34"/></operator><name pos:line="343" pos:column="31">easy_conn<pos:position pos:line="343" pos:column="40"/></name><operator pos:line="343" pos:column="40">-&gt;<pos:position pos:line="343" pos:column="45"/></operator><name pos:line="343" pos:column="42">recv_pipe<pos:position pos:line="343" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="343" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="343" pos:column="53"/></condition><then pos:line="343" pos:column="53"> <block pos:line="343" pos:column="54">{
        <comment type="block" pos:line="344" pos:column="9">/* Grab the channel */</comment>
        <expr_stmt><expr><name><name pos:line="345" pos:column="9">easy<pos:position pos:line="345" pos:column="13"/></name><operator pos:line="345" pos:column="13">-&gt;<pos:position pos:line="345" pos:column="18"/></operator><name pos:line="345" pos:column="15">easy_conn<pos:position pos:line="345" pos:column="24"/></name><operator pos:line="345" pos:column="24">-&gt;<pos:position pos:line="345" pos:column="29"/></operator><name pos:line="345" pos:column="26">readchannel_inuse<pos:position pos:line="345" pos:column="43"/></name></name> <operator pos:line="345" pos:column="44">=<pos:position pos:line="345" pos:column="45"/></operator> <name pos:line="345" pos:column="46">TRUE<pos:position pos:line="345" pos:column="50"/></name></expr>;<pos:position pos:line="345" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="346" pos:column="9">multistate<pos:position pos:line="346" pos:column="19"/></name><argument_list pos:line="346" pos:column="19">(<argument><expr><name pos:line="346" pos:column="20">easy<pos:position pos:line="346" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="346" pos:column="26">CURLM_STATE_PERFORM<pos:position pos:line="346" pos:column="45"/></name></expr></argument>)<pos:position pos:line="346" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="347" pos:column="9">result<pos:position pos:line="347" pos:column="15"/></name> <operator pos:line="347" pos:column="16">=<pos:position pos:line="347" pos:column="17"/></operator> <name pos:line="347" pos:column="18">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="347" pos:column="42"/></name></expr>;<pos:position pos:line="347" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="348" pos:column="8"/></block></then></if>
      <break pos:line="349" pos:column="7">break;<pos:position pos:line="349" pos:column="13"/></break>

    <case pos:line="351" pos:column="5">case <expr><name pos:line="351" pos:column="10">CURLM_STATE_TOOFAST<pos:position pos:line="351" pos:column="29"/></name></expr>:<pos:position pos:line="351" pos:column="30"/></case> <comment type="block" pos:line="351" pos:column="31">/* limit-rate exceeded in either direction */</comment>
      <comment type="block" pos:line="352" pos:column="7">/* if both rates are within spec, resume transfer */</comment>
      <expr_stmt><expr><call><name pos:line="353" pos:column="7">Curl_pgrsUpdate<pos:position pos:line="353" pos:column="22"/></name><argument_list pos:line="353" pos:column="22">(<argument><expr><name><name pos:line="353" pos:column="23">easy<pos:position pos:line="353" pos:column="27"/></name><operator pos:line="353" pos:column="27">-&gt;<pos:position pos:line="353" pos:column="32"/></operator><name pos:line="353" pos:column="29">easy_conn<pos:position pos:line="353" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="353" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="40"/></expr_stmt>
      <if pos:line="354" pos:column="7">if<condition pos:line="354" pos:column="9">( <expr><operator pos:line="354" pos:column="11">(<pos:position pos:line="354" pos:column="12"/></operator> <operator pos:line="354" pos:column="13">(<pos:position pos:line="354" pos:column="14"/></operator> <name><name pos:line="354" pos:column="15">easy<pos:position pos:line="354" pos:column="19"/></name><operator pos:line="354" pos:column="19">-&gt;<pos:position pos:line="354" pos:column="24"/></operator><name pos:line="354" pos:column="21">easy_handle<pos:position pos:line="354" pos:column="32"/></name><operator pos:line="354" pos:column="32">-&gt;<pos:position pos:line="354" pos:column="37"/></operator><name pos:line="354" pos:column="34">set<pos:position pos:line="354" pos:column="37"/></name><operator pos:line="354" pos:column="37">.<pos:position pos:line="354" pos:column="38"/></operator><name pos:line="354" pos:column="38">max_send_speed<pos:position pos:line="354" pos:column="52"/></name></name> <operator pos:line="354" pos:column="53">==<pos:position pos:line="354" pos:column="55"/></operator> <literal type="number" pos:line="354" pos:column="56">0<pos:position pos:line="354" pos:column="57"/></literal> <operator pos:line="354" pos:column="58">)<pos:position pos:line="354" pos:column="59"/></operator> <operator pos:line="354" pos:column="60">||<pos:position pos:line="354" pos:column="62"/></operator>
             <operator pos:line="355" pos:column="14">(<pos:position pos:line="355" pos:column="15"/></operator> <name><name pos:line="355" pos:column="16">easy<pos:position pos:line="355" pos:column="20"/></name><operator pos:line="355" pos:column="20">-&gt;<pos:position pos:line="355" pos:column="25"/></operator><name pos:line="355" pos:column="22">easy_handle<pos:position pos:line="355" pos:column="33"/></name><operator pos:line="355" pos:column="33">-&gt;<pos:position pos:line="355" pos:column="38"/></operator><name pos:line="355" pos:column="35">progress<pos:position pos:line="355" pos:column="43"/></name><operator pos:line="355" pos:column="43">.<pos:position pos:line="355" pos:column="44"/></operator><name pos:line="355" pos:column="44">ulspeed<pos:position pos:line="355" pos:column="51"/></name></name> <operator pos:line="355" pos:column="52">&lt;<pos:position pos:line="355" pos:column="56"/></operator>
               <name><name pos:line="356" pos:column="16">easy<pos:position pos:line="356" pos:column="20"/></name><operator pos:line="356" pos:column="20">-&gt;<pos:position pos:line="356" pos:column="25"/></operator><name pos:line="356" pos:column="22">easy_handle<pos:position pos:line="356" pos:column="33"/></name><operator pos:line="356" pos:column="33">-&gt;<pos:position pos:line="356" pos:column="38"/></operator><name pos:line="356" pos:column="35">set<pos:position pos:line="356" pos:column="38"/></name><operator pos:line="356" pos:column="38">.<pos:position pos:line="356" pos:column="39"/></operator><name pos:line="356" pos:column="39">max_send_speed<pos:position pos:line="356" pos:column="53"/></name></name> <operator pos:line="356" pos:column="54">)<pos:position pos:line="356" pos:column="55"/></operator> <operator pos:line="356" pos:column="56">)<pos:position pos:line="356" pos:column="57"/></operator>  <operator pos:line="356" pos:column="59">&amp;&amp;<pos:position pos:line="356" pos:column="69"/></operator>
           <operator pos:line="357" pos:column="12">(<pos:position pos:line="357" pos:column="13"/></operator> <operator pos:line="357" pos:column="14">(<pos:position pos:line="357" pos:column="15"/></operator> <name><name pos:line="357" pos:column="16">easy<pos:position pos:line="357" pos:column="20"/></name><operator pos:line="357" pos:column="20">-&gt;<pos:position pos:line="357" pos:column="25"/></operator><name pos:line="357" pos:column="22">easy_handle<pos:position pos:line="357" pos:column="33"/></name><operator pos:line="357" pos:column="33">-&gt;<pos:position pos:line="357" pos:column="38"/></operator><name pos:line="357" pos:column="35">set<pos:position pos:line="357" pos:column="38"/></name><operator pos:line="357" pos:column="38">.<pos:position pos:line="357" pos:column="39"/></operator><name pos:line="357" pos:column="39">max_recv_speed<pos:position pos:line="357" pos:column="53"/></name></name> <operator pos:line="357" pos:column="54">==<pos:position pos:line="357" pos:column="56"/></operator> <literal type="number" pos:line="357" pos:column="57">0<pos:position pos:line="357" pos:column="58"/></literal> <operator pos:line="357" pos:column="59">)<pos:position pos:line="357" pos:column="60"/></operator> <operator pos:line="357" pos:column="61">||<pos:position pos:line="357" pos:column="63"/></operator>
             <operator pos:line="358" pos:column="14">(<pos:position pos:line="358" pos:column="15"/></operator> <name><name pos:line="358" pos:column="16">easy<pos:position pos:line="358" pos:column="20"/></name><operator pos:line="358" pos:column="20">-&gt;<pos:position pos:line="358" pos:column="25"/></operator><name pos:line="358" pos:column="22">easy_handle<pos:position pos:line="358" pos:column="33"/></name><operator pos:line="358" pos:column="33">-&gt;<pos:position pos:line="358" pos:column="38"/></operator><name pos:line="358" pos:column="35">progress<pos:position pos:line="358" pos:column="43"/></name><operator pos:line="358" pos:column="43">.<pos:position pos:line="358" pos:column="44"/></operator><name pos:line="358" pos:column="44">dlspeed<pos:position pos:line="358" pos:column="51"/></name></name> <operator pos:line="358" pos:column="52">&lt;<pos:position pos:line="358" pos:column="56"/></operator>
               <name><name pos:line="359" pos:column="16">easy<pos:position pos:line="359" pos:column="20"/></name><operator pos:line="359" pos:column="20">-&gt;<pos:position pos:line="359" pos:column="25"/></operator><name pos:line="359" pos:column="22">easy_handle<pos:position pos:line="359" pos:column="33"/></name><operator pos:line="359" pos:column="33">-&gt;<pos:position pos:line="359" pos:column="38"/></operator><name pos:line="359" pos:column="35">set<pos:position pos:line="359" pos:column="38"/></name><operator pos:line="359" pos:column="38">.<pos:position pos:line="359" pos:column="39"/></operator><name pos:line="359" pos:column="39">max_recv_speed<pos:position pos:line="359" pos:column="53"/></name></name> <operator pos:line="359" pos:column="54">)<pos:position pos:line="359" pos:column="55"/></operator> <operator pos:line="359" pos:column="56">)<pos:position pos:line="359" pos:column="57"/></operator></expr>
        )<pos:position pos:line="360" pos:column="10"/></condition><then pos:line="360" pos:column="10">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="361" pos:column="7">multistate<pos:position pos:line="361" pos:column="17"/></name><argument_list pos:line="361" pos:column="17">(<argument><expr><name pos:line="361" pos:column="18">easy<pos:position pos:line="361" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="24">CURLM_STATE_PERFORM<pos:position pos:line="361" pos:column="43"/></name></expr></argument>)<pos:position pos:line="361" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="45"/></expr_stmt></block></then></if>
      <break pos:line="362" pos:column="7">break;<pos:position pos:line="362" pos:column="13"/></break>

    <case pos:line="364" pos:column="5">case <expr><name pos:line="364" pos:column="10">CURLM_STATE_PERFORM<pos:position pos:line="364" pos:column="29"/></name></expr>:<pos:position pos:line="364" pos:column="30"/></case>
      <comment type="block" pos:line="365" pos:column="7">/* check if over speed */</comment>
      <if pos:line="366" pos:column="7">if<condition pos:line="366" pos:column="9">( <expr><operator pos:line="366" pos:column="11">(<pos:position pos:line="366" pos:column="12"/></operator>  <operator pos:line="366" pos:column="14">(<pos:position pos:line="366" pos:column="15"/></operator> <name><name pos:line="366" pos:column="16">easy<pos:position pos:line="366" pos:column="20"/></name><operator pos:line="366" pos:column="20">-&gt;<pos:position pos:line="366" pos:column="25"/></operator><name pos:line="366" pos:column="22">easy_handle<pos:position pos:line="366" pos:column="33"/></name><operator pos:line="366" pos:column="33">-&gt;<pos:position pos:line="366" pos:column="38"/></operator><name pos:line="366" pos:column="35">set<pos:position pos:line="366" pos:column="38"/></name><operator pos:line="366" pos:column="38">.<pos:position pos:line="366" pos:column="39"/></operator><name pos:line="366" pos:column="39">max_send_speed<pos:position pos:line="366" pos:column="53"/></name></name> <operator pos:line="366" pos:column="54">&gt;<pos:position pos:line="366" pos:column="58"/></operator> <literal type="number" pos:line="366" pos:column="56">0<pos:position pos:line="366" pos:column="57"/></literal> <operator pos:line="366" pos:column="58">)<pos:position pos:line="366" pos:column="59"/></operator> <operator pos:line="366" pos:column="60">&amp;&amp;<pos:position pos:line="366" pos:column="70"/></operator>
              <operator pos:line="367" pos:column="15">(<pos:position pos:line="367" pos:column="16"/></operator> <name><name pos:line="367" pos:column="17">easy<pos:position pos:line="367" pos:column="21"/></name><operator pos:line="367" pos:column="21">-&gt;<pos:position pos:line="367" pos:column="26"/></operator><name pos:line="367" pos:column="23">easy_handle<pos:position pos:line="367" pos:column="34"/></name><operator pos:line="367" pos:column="34">-&gt;<pos:position pos:line="367" pos:column="39"/></operator><name pos:line="367" pos:column="36">progress<pos:position pos:line="367" pos:column="44"/></name><operator pos:line="367" pos:column="44">.<pos:position pos:line="367" pos:column="45"/></operator><name pos:line="367" pos:column="45">ulspeed<pos:position pos:line="367" pos:column="52"/></name></name> <operator pos:line="367" pos:column="53">&gt;<pos:position pos:line="367" pos:column="57"/></operator>
                <name><name pos:line="368" pos:column="17">easy<pos:position pos:line="368" pos:column="21"/></name><operator pos:line="368" pos:column="21">-&gt;<pos:position pos:line="368" pos:column="26"/></operator><name pos:line="368" pos:column="23">easy_handle<pos:position pos:line="368" pos:column="34"/></name><operator pos:line="368" pos:column="34">-&gt;<pos:position pos:line="368" pos:column="39"/></operator><name pos:line="368" pos:column="36">set<pos:position pos:line="368" pos:column="39"/></name><operator pos:line="368" pos:column="39">.<pos:position pos:line="368" pos:column="40"/></operator><name pos:line="368" pos:column="40">max_send_speed<pos:position pos:line="368" pos:column="54"/></name></name> <operator pos:line="368" pos:column="55">)<pos:position pos:line="368" pos:column="56"/></operator> <operator pos:line="368" pos:column="57">)<pos:position pos:line="368" pos:column="58"/></operator>  <operator pos:line="368" pos:column="60">||<pos:position pos:line="368" pos:column="62"/></operator>
           <operator pos:line="369" pos:column="12">(<pos:position pos:line="369" pos:column="13"/></operator>  <operator pos:line="369" pos:column="15">(<pos:position pos:line="369" pos:column="16"/></operator> <name><name pos:line="369" pos:column="17">easy<pos:position pos:line="369" pos:column="21"/></name><operator pos:line="369" pos:column="21">-&gt;<pos:position pos:line="369" pos:column="26"/></operator><name pos:line="369" pos:column="23">easy_handle<pos:position pos:line="369" pos:column="34"/></name><operator pos:line="369" pos:column="34">-&gt;<pos:position pos:line="369" pos:column="39"/></operator><name pos:line="369" pos:column="36">set<pos:position pos:line="369" pos:column="39"/></name><operator pos:line="369" pos:column="39">.<pos:position pos:line="369" pos:column="40"/></operator><name pos:line="369" pos:column="40">max_recv_speed<pos:position pos:line="369" pos:column="54"/></name></name> <operator pos:line="369" pos:column="55">&gt;<pos:position pos:line="369" pos:column="59"/></operator> <literal type="number" pos:line="369" pos:column="57">0<pos:position pos:line="369" pos:column="58"/></literal> <operator pos:line="369" pos:column="59">)<pos:position pos:line="369" pos:column="60"/></operator> <operator pos:line="369" pos:column="61">&amp;&amp;<pos:position pos:line="369" pos:column="71"/></operator>
              <operator pos:line="370" pos:column="15">(<pos:position pos:line="370" pos:column="16"/></operator> <name><name pos:line="370" pos:column="17">easy<pos:position pos:line="370" pos:column="21"/></name><operator pos:line="370" pos:column="21">-&gt;<pos:position pos:line="370" pos:column="26"/></operator><name pos:line="370" pos:column="23">easy_handle<pos:position pos:line="370" pos:column="34"/></name><operator pos:line="370" pos:column="34">-&gt;<pos:position pos:line="370" pos:column="39"/></operator><name pos:line="370" pos:column="36">progress<pos:position pos:line="370" pos:column="44"/></name><operator pos:line="370" pos:column="44">.<pos:position pos:line="370" pos:column="45"/></operator><name pos:line="370" pos:column="45">dlspeed<pos:position pos:line="370" pos:column="52"/></name></name> <operator pos:line="370" pos:column="53">&gt;<pos:position pos:line="370" pos:column="57"/></operator>
                <name><name pos:line="371" pos:column="17">easy<pos:position pos:line="371" pos:column="21"/></name><operator pos:line="371" pos:column="21">-&gt;<pos:position pos:line="371" pos:column="26"/></operator><name pos:line="371" pos:column="23">easy_handle<pos:position pos:line="371" pos:column="34"/></name><operator pos:line="371" pos:column="34">-&gt;<pos:position pos:line="371" pos:column="39"/></operator><name pos:line="371" pos:column="36">set<pos:position pos:line="371" pos:column="39"/></name><operator pos:line="371" pos:column="39">.<pos:position pos:line="371" pos:column="40"/></operator><name pos:line="371" pos:column="40">max_recv_speed<pos:position pos:line="371" pos:column="54"/></name></name> <operator pos:line="371" pos:column="55">)<pos:position pos:line="371" pos:column="56"/></operator> <operator pos:line="371" pos:column="57">)<pos:position pos:line="371" pos:column="58"/></operator></expr>
        )<pos:position pos:line="372" pos:column="10"/></condition><then pos:line="372" pos:column="10"> <block pos:line="372" pos:column="11">{
        <comment type="block" pos:line="373" pos:column="9">/* Transfer is over the speed limit. Change state.  TODO: Call
         * Curl_expire() with the time left until we're targeted to be below
         * the speed limit again. */</comment>
        <expr_stmt><expr><call><name pos:line="376" pos:column="9">multistate<pos:position pos:line="376" pos:column="19"/></name><argument_list pos:line="376" pos:column="19">(<argument><expr><name pos:line="376" pos:column="20">easy<pos:position pos:line="376" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="26">CURLM_STATE_TOOFAST<pos:position pos:line="376" pos:column="45"/></name></expr></argument> )<pos:position pos:line="376" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="48"/></expr_stmt>
        <break pos:line="377" pos:column="9">break;<pos:position pos:line="377" pos:column="15"/></break>
      }<pos:position pos:line="378" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="380" pos:column="7">/* read/write data if it is ready to do so */</comment>
      <expr_stmt><expr><name><name pos:line="381" pos:column="7">easy<pos:position pos:line="381" pos:column="11"/></name><operator pos:line="381" pos:column="11">-&gt;<pos:position pos:line="381" pos:column="16"/></operator><name pos:line="381" pos:column="13">result<pos:position pos:line="381" pos:column="19"/></name></name> <operator pos:line="381" pos:column="20">=<pos:position pos:line="381" pos:column="21"/></operator> <call><name pos:line="381" pos:column="22">Curl_readwrite<pos:position pos:line="381" pos:column="36"/></name><argument_list pos:line="381" pos:column="36">(<argument><expr><name><name pos:line="381" pos:column="37">easy<pos:position pos:line="381" pos:column="41"/></name><operator pos:line="381" pos:column="41">-&gt;<pos:position pos:line="381" pos:column="46"/></operator><name pos:line="381" pos:column="43">easy_conn<pos:position pos:line="381" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="381" pos:column="54">&amp;<pos:position pos:line="381" pos:column="59"/></operator><name pos:line="381" pos:column="55">done<pos:position pos:line="381" pos:column="59"/></name></expr></argument>)<pos:position pos:line="381" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="61"/></expr_stmt>

      <expr_stmt><expr><name pos:line="383" pos:column="7">k<pos:position pos:line="383" pos:column="8"/></name> <operator pos:line="383" pos:column="9">=<pos:position pos:line="383" pos:column="10"/></operator> <operator pos:line="383" pos:column="11">&amp;<pos:position pos:line="383" pos:column="16"/></operator><name><name pos:line="383" pos:column="12">easy<pos:position pos:line="383" pos:column="16"/></name><operator pos:line="383" pos:column="16">-&gt;<pos:position pos:line="383" pos:column="21"/></operator><name pos:line="383" pos:column="18">easy_handle<pos:position pos:line="383" pos:column="29"/></name><operator pos:line="383" pos:column="29">-&gt;<pos:position pos:line="383" pos:column="34"/></operator><name pos:line="383" pos:column="31">req<pos:position pos:line="383" pos:column="34"/></name></name></expr>;<pos:position pos:line="383" pos:column="35"/></expr_stmt>

      <if pos:line="385" pos:column="7">if<condition pos:line="385" pos:column="9">(<expr><operator pos:line="385" pos:column="10">!<pos:position pos:line="385" pos:column="11"/></operator><operator pos:line="385" pos:column="11">(<pos:position pos:line="385" pos:column="12"/></operator><name><name pos:line="385" pos:column="12">k<pos:position pos:line="385" pos:column="13"/></name><operator pos:line="385" pos:column="13">-&gt;<pos:position pos:line="385" pos:column="18"/></operator><name pos:line="385" pos:column="15">keepon<pos:position pos:line="385" pos:column="21"/></name></name> <operator pos:line="385" pos:column="22">&amp;<pos:position pos:line="385" pos:column="27"/></operator> <name pos:line="385" pos:column="24">KEEP_READ<pos:position pos:line="385" pos:column="33"/></name><operator pos:line="385" pos:column="33">)<pos:position pos:line="385" pos:column="34"/></operator></expr>)<pos:position pos:line="385" pos:column="35"/></condition><then pos:line="385" pos:column="35"> <block pos:line="385" pos:column="36">{
        <comment type="block" pos:line="386" pos:column="9">/* We're done reading */</comment>
        <expr_stmt><expr><name><name pos:line="387" pos:column="9">easy<pos:position pos:line="387" pos:column="13"/></name><operator pos:line="387" pos:column="13">-&gt;<pos:position pos:line="387" pos:column="18"/></operator><name pos:line="387" pos:column="15">easy_conn<pos:position pos:line="387" pos:column="24"/></name><operator pos:line="387" pos:column="24">-&gt;<pos:position pos:line="387" pos:column="29"/></operator><name pos:line="387" pos:column="26">readchannel_inuse<pos:position pos:line="387" pos:column="43"/></name></name> <operator pos:line="387" pos:column="44">=<pos:position pos:line="387" pos:column="45"/></operator> <name pos:line="387" pos:column="46">FALSE<pos:position pos:line="387" pos:column="51"/></name></expr>;<pos:position pos:line="387" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="388" pos:column="8"/></block></then></if>

      <if pos:line="390" pos:column="7">if<condition pos:line="390" pos:column="9">(<expr><operator pos:line="390" pos:column="10">!<pos:position pos:line="390" pos:column="11"/></operator><operator pos:line="390" pos:column="11">(<pos:position pos:line="390" pos:column="12"/></operator><name><name pos:line="390" pos:column="12">k<pos:position pos:line="390" pos:column="13"/></name><operator pos:line="390" pos:column="13">-&gt;<pos:position pos:line="390" pos:column="18"/></operator><name pos:line="390" pos:column="15">keepon<pos:position pos:line="390" pos:column="21"/></name></name> <operator pos:line="390" pos:column="22">&amp;<pos:position pos:line="390" pos:column="27"/></operator> <name pos:line="390" pos:column="24">KEEP_WRITE<pos:position pos:line="390" pos:column="34"/></name><operator pos:line="390" pos:column="34">)<pos:position pos:line="390" pos:column="35"/></operator></expr>)<pos:position pos:line="390" pos:column="36"/></condition><then pos:line="390" pos:column="36"> <block pos:line="390" pos:column="37">{
        <comment type="block" pos:line="391" pos:column="9">/* We're done writing */</comment>
        <expr_stmt><expr><name><name pos:line="392" pos:column="9">easy<pos:position pos:line="392" pos:column="13"/></name><operator pos:line="392" pos:column="13">-&gt;<pos:position pos:line="392" pos:column="18"/></operator><name pos:line="392" pos:column="15">easy_conn<pos:position pos:line="392" pos:column="24"/></name><operator pos:line="392" pos:column="24">-&gt;<pos:position pos:line="392" pos:column="29"/></operator><name pos:line="392" pos:column="26">writechannel_inuse<pos:position pos:line="392" pos:column="44"/></name></name> <operator pos:line="392" pos:column="45">=<pos:position pos:line="392" pos:column="46"/></operator> <name pos:line="392" pos:column="47">FALSE<pos:position pos:line="392" pos:column="52"/></name></expr>;<pos:position pos:line="392" pos:column="53"/></expr_stmt>
      }<pos:position pos:line="393" pos:column="8"/></block></then></if>

      <if pos:line="395" pos:column="7">if<condition pos:line="395" pos:column="9">(<expr><name><name pos:line="395" pos:column="10">easy<pos:position pos:line="395" pos:column="14"/></name><operator pos:line="395" pos:column="14">-&gt;<pos:position pos:line="395" pos:column="19"/></operator><name pos:line="395" pos:column="16">result<pos:position pos:line="395" pos:column="22"/></name></name></expr>)<pos:position pos:line="395" pos:column="23"/></condition><then pos:line="395" pos:column="23">  <block pos:line="395" pos:column="25">{
        <comment type="block" pos:line="396" pos:column="9">/* The transfer phase returned error, we mark the connection to get
         * closed to prevent being re-used. This is because we can't
         * possibly know if the connection is in a good shape or not now. */</comment>
        <expr_stmt><expr><name><name pos:line="399" pos:column="9">easy<pos:position pos:line="399" pos:column="13"/></name><operator pos:line="399" pos:column="13">-&gt;<pos:position pos:line="399" pos:column="18"/></operator><name pos:line="399" pos:column="15">easy_conn<pos:position pos:line="399" pos:column="24"/></name><operator pos:line="399" pos:column="24">-&gt;<pos:position pos:line="399" pos:column="29"/></operator><name pos:line="399" pos:column="26">bits<pos:position pos:line="399" pos:column="30"/></name><operator pos:line="399" pos:column="30">.<pos:position pos:line="399" pos:column="31"/></operator><name pos:line="399" pos:column="31">close<pos:position pos:line="399" pos:column="36"/></name></name> <operator pos:line="399" pos:column="37">=<pos:position pos:line="399" pos:column="38"/></operator> <name pos:line="399" pos:column="39">TRUE<pos:position pos:line="399" pos:column="43"/></name></expr>;<pos:position pos:line="399" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="400" pos:column="9">Curl_removeHandleFromPipeline<pos:position pos:line="400" pos:column="38"/></name><argument_list pos:line="400" pos:column="38">(<argument><expr><name><name pos:line="400" pos:column="39">easy<pos:position pos:line="400" pos:column="43"/></name><operator pos:line="400" pos:column="43">-&gt;<pos:position pos:line="400" pos:column="48"/></operator><name pos:line="400" pos:column="45">easy_handle<pos:position pos:line="400" pos:column="56"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="401" pos:column="39">easy<pos:position pos:line="401" pos:column="43"/></name><operator pos:line="401" pos:column="43">-&gt;<pos:position pos:line="401" pos:column="48"/></operator><name pos:line="401" pos:column="45">easy_conn<pos:position pos:line="401" pos:column="54"/></name><operator pos:line="401" pos:column="54">-&gt;<pos:position pos:line="401" pos:column="59"/></operator><name pos:line="401" pos:column="56">recv_pipe<pos:position pos:line="401" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="401" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="67"/></expr_stmt>

        <if pos:line="403" pos:column="9">if<condition pos:line="403" pos:column="11">(<expr><name pos:line="403" pos:column="12">CURL_SOCKET_BAD<pos:position pos:line="403" pos:column="27"/></name> <operator pos:line="403" pos:column="28">!=<pos:position pos:line="403" pos:column="30"/></operator> <name><name pos:line="403" pos:column="31">easy<pos:position pos:line="403" pos:column="35"/></name><operator pos:line="403" pos:column="35">-&gt;<pos:position pos:line="403" pos:column="40"/></operator><name pos:line="403" pos:column="37">easy_conn<pos:position pos:line="403" pos:column="46"/></name><operator pos:line="403" pos:column="46">-&gt;<pos:position pos:line="403" pos:column="51"/></operator><name pos:line="403" pos:column="48">sock<pos:position pos:line="403" pos:column="52"/></name><index pos:line="403" pos:column="52">[<expr><name pos:line="403" pos:column="53">SECONDARYSOCKET<pos:position pos:line="403" pos:column="68"/></name></expr>]<pos:position pos:line="403" pos:column="69"/></index></name></expr>)<pos:position pos:line="403" pos:column="70"/></condition><then pos:line="403" pos:column="70"> <block pos:line="403" pos:column="71">{
          <comment type="block" pos:line="404" pos:column="11">/* if we failed anywhere, we must clean up the secondary socket if
             it was used */</comment>
          <expr_stmt><expr><call><name pos:line="406" pos:column="11">sclose<pos:position pos:line="406" pos:column="17"/></name><argument_list pos:line="406" pos:column="17">(<argument><expr><name><name pos:line="406" pos:column="18">easy<pos:position pos:line="406" pos:column="22"/></name><operator pos:line="406" pos:column="22">-&gt;<pos:position pos:line="406" pos:column="27"/></operator><name pos:line="406" pos:column="24">easy_conn<pos:position pos:line="406" pos:column="33"/></name><operator pos:line="406" pos:column="33">-&gt;<pos:position pos:line="406" pos:column="38"/></operator><name pos:line="406" pos:column="35">sock<pos:position pos:line="406" pos:column="39"/></name><index pos:line="406" pos:column="39">[<expr><name pos:line="406" pos:column="40">SECONDARYSOCKET<pos:position pos:line="406" pos:column="55"/></name></expr>]<pos:position pos:line="406" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="406" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="407" pos:column="11">easy<pos:position pos:line="407" pos:column="15"/></name><operator pos:line="407" pos:column="15">-&gt;<pos:position pos:line="407" pos:column="20"/></operator><name pos:line="407" pos:column="17">easy_conn<pos:position pos:line="407" pos:column="26"/></name><operator pos:line="407" pos:column="26">-&gt;<pos:position pos:line="407" pos:column="31"/></operator><name pos:line="407" pos:column="28">sock<pos:position pos:line="407" pos:column="32"/></name><index pos:line="407" pos:column="32">[<expr><name pos:line="407" pos:column="33">SECONDARYSOCKET<pos:position pos:line="407" pos:column="48"/></name></expr>]<pos:position pos:line="407" pos:column="49"/></index></name> <operator pos:line="407" pos:column="50">=<pos:position pos:line="407" pos:column="51"/></operator> <name pos:line="407" pos:column="52">CURL_SOCKET_BAD<pos:position pos:line="407" pos:column="67"/></name></expr>;<pos:position pos:line="407" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="408" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="409" pos:column="9">Curl_posttransfer<pos:position pos:line="409" pos:column="26"/></name><argument_list pos:line="409" pos:column="26">(<argument><expr><name><name pos:line="409" pos:column="27">easy<pos:position pos:line="409" pos:column="31"/></name><operator pos:line="409" pos:column="31">-&gt;<pos:position pos:line="409" pos:column="36"/></operator><name pos:line="409" pos:column="33">easy_handle<pos:position pos:line="409" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="409" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="410" pos:column="9">Curl_done<pos:position pos:line="410" pos:column="18"/></name><argument_list pos:line="410" pos:column="18">(<argument><expr><operator pos:line="410" pos:column="19">&amp;<pos:position pos:line="410" pos:column="24"/></operator><name><name pos:line="410" pos:column="20">easy<pos:position pos:line="410" pos:column="24"/></name><operator pos:line="410" pos:column="24">-&gt;<pos:position pos:line="410" pos:column="29"/></operator><name pos:line="410" pos:column="26">easy_conn<pos:position pos:line="410" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="410" pos:column="37">easy<pos:position pos:line="410" pos:column="41"/></name><operator pos:line="410" pos:column="41">-&gt;<pos:position pos:line="410" pos:column="46"/></operator><name pos:line="410" pos:column="43">result<pos:position pos:line="410" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="410" pos:column="51">FALSE<pos:position pos:line="410" pos:column="56"/></name></expr></argument>)<pos:position pos:line="410" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="58"/></expr_stmt>
      }<pos:position pos:line="411" pos:column="8"/></block></then>
      <elseif pos:line="412" pos:column="7">else <if pos:line="412" pos:column="12">if<condition pos:line="412" pos:column="14">(<expr><name pos:line="412" pos:column="15">TRUE<pos:position pos:line="412" pos:column="19"/></name> <operator pos:line="412" pos:column="20">==<pos:position pos:line="412" pos:column="22"/></operator> <name pos:line="412" pos:column="23">done<pos:position pos:line="412" pos:column="27"/></name></expr>)<pos:position pos:line="412" pos:column="28"/></condition><then pos:line="412" pos:column="28"> <block pos:line="412" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="413" pos:column="9">char<pos:position pos:line="413" pos:column="13"/></name> <modifier pos:line="413" pos:column="14">*<pos:position pos:line="413" pos:column="15"/></modifier></type><name pos:line="413" pos:column="15">newurl<pos:position pos:line="413" pos:column="21"/></name></decl>;<pos:position pos:line="413" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="414" pos:column="9">bool<pos:position pos:line="414" pos:column="13"/></name></type> <name pos:line="414" pos:column="14">retry<pos:position pos:line="414" pos:column="19"/></name> <init pos:line="414" pos:column="20">= <expr><call><name pos:line="414" pos:column="22">Curl_retry_request<pos:position pos:line="414" pos:column="40"/></name><argument_list pos:line="414" pos:column="40">(<argument><expr><name><name pos:line="414" pos:column="41">easy<pos:position pos:line="414" pos:column="45"/></name><operator pos:line="414" pos:column="45">-&gt;<pos:position pos:line="414" pos:column="50"/></operator><name pos:line="414" pos:column="47">easy_conn<pos:position pos:line="414" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="414" pos:column="58">&amp;<pos:position pos:line="414" pos:column="63"/></operator><name pos:line="414" pos:column="59">newurl<pos:position pos:line="414" pos:column="65"/></name></expr></argument>)<pos:position pos:line="414" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="414" pos:column="67"/></decl_stmt>

        <comment type="block" pos:line="416" pos:column="9">/* call this even if the readwrite function returned error */</comment>
        <expr_stmt><expr><call><name pos:line="417" pos:column="9">Curl_posttransfer<pos:position pos:line="417" pos:column="26"/></name><argument_list pos:line="417" pos:column="26">(<argument><expr><name><name pos:line="417" pos:column="27">easy<pos:position pos:line="417" pos:column="31"/></name><operator pos:line="417" pos:column="31">-&gt;<pos:position pos:line="417" pos:column="36"/></operator><name pos:line="417" pos:column="33">easy_handle<pos:position pos:line="417" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="417" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="46"/></expr_stmt>

        <comment type="block" pos:line="419" pos:column="9">/* When we follow redirects, must to go back to the CONNECT state */</comment>
        <if pos:line="420" pos:column="9">if<condition pos:line="420" pos:column="11">(<expr><name><name pos:line="420" pos:column="12">easy<pos:position pos:line="420" pos:column="16"/></name><operator pos:line="420" pos:column="16">-&gt;<pos:position pos:line="420" pos:column="21"/></operator><name pos:line="420" pos:column="18">easy_handle<pos:position pos:line="420" pos:column="29"/></name><operator pos:line="420" pos:column="29">-&gt;<pos:position pos:line="420" pos:column="34"/></operator><name pos:line="420" pos:column="31">req<pos:position pos:line="420" pos:column="34"/></name><operator pos:line="420" pos:column="34">.<pos:position pos:line="420" pos:column="35"/></operator><name pos:line="420" pos:column="35">newurl<pos:position pos:line="420" pos:column="41"/></name></name> <operator pos:line="420" pos:column="42">||<pos:position pos:line="420" pos:column="44"/></operator> <name pos:line="420" pos:column="45">retry<pos:position pos:line="420" pos:column="50"/></name></expr>)<pos:position pos:line="420" pos:column="51"/></condition><then pos:line="420" pos:column="51"> <block pos:line="420" pos:column="52">{
          <expr_stmt><expr><call><name pos:line="421" pos:column="11">Curl_removeHandleFromPipeline<pos:position pos:line="421" pos:column="40"/></name><argument_list pos:line="421" pos:column="40">(<argument><expr><name><name pos:line="421" pos:column="41">easy<pos:position pos:line="421" pos:column="45"/></name><operator pos:line="421" pos:column="45">-&gt;<pos:position pos:line="421" pos:column="50"/></operator><name pos:line="421" pos:column="47">easy_handle<pos:position pos:line="421" pos:column="58"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="422" pos:column="41">easy<pos:position pos:line="422" pos:column="45"/></name><operator pos:line="422" pos:column="45">-&gt;<pos:position pos:line="422" pos:column="50"/></operator><name pos:line="422" pos:column="47">easy_conn<pos:position pos:line="422" pos:column="56"/></name><operator pos:line="422" pos:column="56">-&gt;<pos:position pos:line="422" pos:column="61"/></operator><name pos:line="422" pos:column="58">recv_pipe<pos:position pos:line="422" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="422" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="69"/></expr_stmt>
          <comment type="block" pos:line="423" pos:column="11">/* Check if we can move pending requests to send pipe */</comment>
          <expr_stmt><expr><call><name pos:line="424" pos:column="11">checkPendPipeline<pos:position pos:line="424" pos:column="28"/></name><argument_list pos:line="424" pos:column="28">(<argument><expr><name><name pos:line="424" pos:column="29">easy<pos:position pos:line="424" pos:column="33"/></name><operator pos:line="424" pos:column="33">-&gt;<pos:position pos:line="424" pos:column="38"/></operator><name pos:line="424" pos:column="35">easy_conn<pos:position pos:line="424" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="424" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="46"/></expr_stmt>

          <if pos:line="426" pos:column="11">if<condition pos:line="426" pos:column="13">(<expr><operator pos:line="426" pos:column="14">!<pos:position pos:line="426" pos:column="15"/></operator><name pos:line="426" pos:column="15">retry<pos:position pos:line="426" pos:column="20"/></name></expr>)<pos:position pos:line="426" pos:column="21"/></condition><then pos:line="426" pos:column="21"> <block pos:line="426" pos:column="22">{
            <comment type="block" pos:line="427" pos:column="13">/* if the URL is a follow-location and not just a retried request
               then figure out the URL here */</comment>
            <expr_stmt><expr><name pos:line="429" pos:column="13">newurl<pos:position pos:line="429" pos:column="19"/></name> <operator pos:line="429" pos:column="20">=<pos:position pos:line="429" pos:column="21"/></operator> <name><name pos:line="429" pos:column="22">easy<pos:position pos:line="429" pos:column="26"/></name><operator pos:line="429" pos:column="26">-&gt;<pos:position pos:line="429" pos:column="31"/></operator><name pos:line="429" pos:column="28">easy_handle<pos:position pos:line="429" pos:column="39"/></name><operator pos:line="429" pos:column="39">-&gt;<pos:position pos:line="429" pos:column="44"/></operator><name pos:line="429" pos:column="41">req<pos:position pos:line="429" pos:column="44"/></name><operator pos:line="429" pos:column="44">.<pos:position pos:line="429" pos:column="45"/></operator><name pos:line="429" pos:column="45">newurl<pos:position pos:line="429" pos:column="51"/></name></name></expr>;<pos:position pos:line="429" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="430" pos:column="13">easy<pos:position pos:line="430" pos:column="17"/></name><operator pos:line="430" pos:column="17">-&gt;<pos:position pos:line="430" pos:column="22"/></operator><name pos:line="430" pos:column="19">easy_handle<pos:position pos:line="430" pos:column="30"/></name><operator pos:line="430" pos:column="30">-&gt;<pos:position pos:line="430" pos:column="35"/></operator><name pos:line="430" pos:column="32">req<pos:position pos:line="430" pos:column="35"/></name><operator pos:line="430" pos:column="35">.<pos:position pos:line="430" pos:column="36"/></operator><name pos:line="430" pos:column="36">newurl<pos:position pos:line="430" pos:column="42"/></name></name> <operator pos:line="430" pos:column="43">=<pos:position pos:line="430" pos:column="44"/></operator> <name pos:line="430" pos:column="45">NULL<pos:position pos:line="430" pos:column="49"/></name></expr>;<pos:position pos:line="430" pos:column="50"/></expr_stmt>
          }<pos:position pos:line="431" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name><name pos:line="432" pos:column="11">easy<pos:position pos:line="432" pos:column="15"/></name><operator pos:line="432" pos:column="15">-&gt;<pos:position pos:line="432" pos:column="20"/></operator><name pos:line="432" pos:column="17">result<pos:position pos:line="432" pos:column="23"/></name></name> <operator pos:line="432" pos:column="24">=<pos:position pos:line="432" pos:column="25"/></operator> <call><name pos:line="432" pos:column="26">Curl_done<pos:position pos:line="432" pos:column="35"/></name><argument_list pos:line="432" pos:column="35">(<argument><expr><operator pos:line="432" pos:column="36">&amp;<pos:position pos:line="432" pos:column="41"/></operator><name><name pos:line="432" pos:column="37">easy<pos:position pos:line="432" pos:column="41"/></name><operator pos:line="432" pos:column="41">-&gt;<pos:position pos:line="432" pos:column="46"/></operator><name pos:line="432" pos:column="43">easy_conn<pos:position pos:line="432" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="54">CURLE_OK<pos:position pos:line="432" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="64">FALSE<pos:position pos:line="432" pos:column="69"/></name></expr></argument>)<pos:position pos:line="432" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="71"/></expr_stmt>
          <if pos:line="433" pos:column="11">if<condition pos:line="433" pos:column="13">(<expr><name><name pos:line="433" pos:column="14">easy<pos:position pos:line="433" pos:column="18"/></name><operator pos:line="433" pos:column="18">-&gt;<pos:position pos:line="433" pos:column="23"/></operator><name pos:line="433" pos:column="20">result<pos:position pos:line="433" pos:column="26"/></name></name> <operator pos:line="433" pos:column="27">==<pos:position pos:line="433" pos:column="29"/></operator> <name pos:line="433" pos:column="30">CURLE_OK<pos:position pos:line="433" pos:column="38"/></name></expr>)<pos:position pos:line="433" pos:column="39"/></condition><then pos:line="433" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="434" pos:column="13">easy<pos:position pos:line="434" pos:column="17"/></name><operator pos:line="434" pos:column="17">-&gt;<pos:position pos:line="434" pos:column="22"/></operator><name pos:line="434" pos:column="19">result<pos:position pos:line="434" pos:column="25"/></name></name> <operator pos:line="434" pos:column="26">=<pos:position pos:line="434" pos:column="27"/></operator> <call><name pos:line="434" pos:column="28">Curl_follow<pos:position pos:line="434" pos:column="39"/></name><argument_list pos:line="434" pos:column="39">(<argument><expr><name><name pos:line="434" pos:column="40">easy<pos:position pos:line="434" pos:column="44"/></name><operator pos:line="434" pos:column="44">-&gt;<pos:position pos:line="434" pos:column="49"/></operator><name pos:line="434" pos:column="46">easy_handle<pos:position pos:line="434" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="59">newurl<pos:position pos:line="434" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="67">retry<pos:position pos:line="434" pos:column="72"/></name></expr></argument>)<pos:position pos:line="434" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="74"/></expr_stmt></block></then></if>
          <if pos:line="435" pos:column="11">if<condition pos:line="435" pos:column="13">(<expr><name pos:line="435" pos:column="14">CURLE_OK<pos:position pos:line="435" pos:column="22"/></name> <operator pos:line="435" pos:column="23">==<pos:position pos:line="435" pos:column="25"/></operator> <name><name pos:line="435" pos:column="26">easy<pos:position pos:line="435" pos:column="30"/></name><operator pos:line="435" pos:column="30">-&gt;<pos:position pos:line="435" pos:column="35"/></operator><name pos:line="435" pos:column="32">result<pos:position pos:line="435" pos:column="38"/></name></name></expr>)<pos:position pos:line="435" pos:column="39"/></condition><then pos:line="435" pos:column="39"> <block pos:line="435" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="436" pos:column="13">multistate<pos:position pos:line="436" pos:column="23"/></name><argument_list pos:line="436" pos:column="23">(<argument><expr><name pos:line="436" pos:column="24">easy<pos:position pos:line="436" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="436" pos:column="30">CURLM_STATE_CONNECT<pos:position pos:line="436" pos:column="49"/></name></expr></argument>)<pos:position pos:line="436" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="436" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="437" pos:column="13">result<pos:position pos:line="437" pos:column="19"/></name> <operator pos:line="437" pos:column="20">=<pos:position pos:line="437" pos:column="21"/></operator> <name pos:line="437" pos:column="22">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="437" pos:column="46"/></name></expr>;<pos:position pos:line="437" pos:column="47"/></expr_stmt>
          }<pos:position pos:line="438" pos:column="12"/></block></then>
          <else pos:line="439" pos:column="11">else
            <comment type="block" pos:line="440" pos:column="13">/* Since we "took it", we are in charge of freeing this on
               failure */</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="442" pos:column="13">free<pos:position pos:line="442" pos:column="17"/></name><argument_list pos:line="442" pos:column="17">(<argument><expr><name pos:line="442" pos:column="18">newurl<pos:position pos:line="442" pos:column="24"/></name></expr></argument>)<pos:position pos:line="442" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="26"/></expr_stmt></block></else></if>
        }<pos:position pos:line="443" pos:column="10"/></block></then>
        <else pos:line="444" pos:column="9">else <block pos:line="444" pos:column="14">{
          <comment type="block" pos:line="445" pos:column="11">/* after the transfer is done, go DONE */</comment>
          <expr_stmt><expr><call><name pos:line="446" pos:column="11">multistate<pos:position pos:line="446" pos:column="21"/></name><argument_list pos:line="446" pos:column="21">(<argument><expr><name pos:line="446" pos:column="22">easy<pos:position pos:line="446" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="28">CURLM_STATE_DONE<pos:position pos:line="446" pos:column="44"/></name></expr></argument>)<pos:position pos:line="446" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="46"/></expr_stmt>
          <expr_stmt><expr><name pos:line="447" pos:column="11">result<pos:position pos:line="447" pos:column="17"/></name> <operator pos:line="447" pos:column="18">=<pos:position pos:line="447" pos:column="19"/></operator> <name pos:line="447" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="447" pos:column="44"/></name></expr>;<pos:position pos:line="447" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="448" pos:column="10"/></block></else></if>
      }<pos:position pos:line="449" pos:column="8"/></block></then></if></elseif></if>

      <break pos:line="451" pos:column="7">break;<pos:position pos:line="451" pos:column="13"/></break>

    <case pos:line="453" pos:column="5">case <expr><name pos:line="453" pos:column="10">CURLM_STATE_DONE<pos:position pos:line="453" pos:column="26"/></name></expr>:<pos:position pos:line="453" pos:column="27"/></case>
      <comment type="block" pos:line="454" pos:column="7">/* Remove ourselves from the receive pipeline */</comment>
      <expr_stmt><expr><call><name pos:line="455" pos:column="7">Curl_removeHandleFromPipeline<pos:position pos:line="455" pos:column="36"/></name><argument_list pos:line="455" pos:column="36">(<argument><expr><name><name pos:line="455" pos:column="37">easy<pos:position pos:line="455" pos:column="41"/></name><operator pos:line="455" pos:column="41">-&gt;<pos:position pos:line="455" pos:column="46"/></operator><name pos:line="455" pos:column="43">easy_handle<pos:position pos:line="455" pos:column="54"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="456" pos:column="37">easy<pos:position pos:line="456" pos:column="41"/></name><operator pos:line="456" pos:column="41">-&gt;<pos:position pos:line="456" pos:column="46"/></operator><name pos:line="456" pos:column="43">easy_conn<pos:position pos:line="456" pos:column="52"/></name><operator pos:line="456" pos:column="52">-&gt;<pos:position pos:line="456" pos:column="57"/></operator><name pos:line="456" pos:column="54">recv_pipe<pos:position pos:line="456" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="456" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="65"/></expr_stmt>
      <comment type="block" pos:line="457" pos:column="7">/* Check if we can move pending requests to send pipe */</comment>
      <expr_stmt><expr><call><name pos:line="458" pos:column="7">checkPendPipeline<pos:position pos:line="458" pos:column="24"/></name><argument_list pos:line="458" pos:column="24">(<argument><expr><name><name pos:line="458" pos:column="25">easy<pos:position pos:line="458" pos:column="29"/></name><operator pos:line="458" pos:column="29">-&gt;<pos:position pos:line="458" pos:column="34"/></operator><name pos:line="458" pos:column="31">easy_conn<pos:position pos:line="458" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="458" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="42"/></expr_stmt>

      <if pos:line="460" pos:column="7">if<condition pos:line="460" pos:column="9">(<expr><name><name pos:line="460" pos:column="10">easy<pos:position pos:line="460" pos:column="14"/></name><operator pos:line="460" pos:column="14">-&gt;<pos:position pos:line="460" pos:column="19"/></operator><name pos:line="460" pos:column="16">easy_conn<pos:position pos:line="460" pos:column="25"/></name><operator pos:line="460" pos:column="25">-&gt;<pos:position pos:line="460" pos:column="30"/></operator><name pos:line="460" pos:column="27">bits<pos:position pos:line="460" pos:column="31"/></name><operator pos:line="460" pos:column="31">.<pos:position pos:line="460" pos:column="32"/></operator><name pos:line="460" pos:column="32">stream_was_rewound<pos:position pos:line="460" pos:column="50"/></name></name></expr>)<pos:position pos:line="460" pos:column="51"/></condition><then pos:line="460" pos:column="51"> <block pos:line="460" pos:column="52">{
          <comment type="block" pos:line="461" pos:column="11">/* This request read past its response boundary so we quickly
             let the other requests consume those bytes since there is no
             guarantee that the socket will become active again */</comment>
          <expr_stmt><expr><name pos:line="464" pos:column="11">result<pos:position pos:line="464" pos:column="17"/></name> <operator pos:line="464" pos:column="18">=<pos:position pos:line="464" pos:column="19"/></operator> <name pos:line="464" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="464" pos:column="44"/></name></expr>;<pos:position pos:line="464" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="465" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="467" pos:column="7">/* post-transfer command */</comment>
      <expr_stmt><expr><name><name pos:line="468" pos:column="7">easy<pos:position pos:line="468" pos:column="11"/></name><operator pos:line="468" pos:column="11">-&gt;<pos:position pos:line="468" pos:column="16"/></operator><name pos:line="468" pos:column="13">result<pos:position pos:line="468" pos:column="19"/></name></name> <operator pos:line="468" pos:column="20">=<pos:position pos:line="468" pos:column="21"/></operator> <call><name pos:line="468" pos:column="22">Curl_done<pos:position pos:line="468" pos:column="31"/></name><argument_list pos:line="468" pos:column="31">(<argument><expr><operator pos:line="468" pos:column="32">&amp;<pos:position pos:line="468" pos:column="37"/></operator><name><name pos:line="468" pos:column="33">easy<pos:position pos:line="468" pos:column="37"/></name><operator pos:line="468" pos:column="37">-&gt;<pos:position pos:line="468" pos:column="42"/></operator><name pos:line="468" pos:column="39">easy_conn<pos:position pos:line="468" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="50">CURLE_OK<pos:position pos:line="468" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="60">FALSE<pos:position pos:line="468" pos:column="65"/></name></expr></argument>)<pos:position pos:line="468" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="67"/></expr_stmt>

      <comment type="block" pos:line="470" pos:column="7">/* after we have DONE what we're supposed to do, go COMPLETED, and
         it doesn't matter what the Curl_done() returned! */</comment>
      <expr_stmt><expr><call><name pos:line="472" pos:column="7">multistate<pos:position pos:line="472" pos:column="17"/></name><argument_list pos:line="472" pos:column="17">(<argument><expr><name pos:line="472" pos:column="18">easy<pos:position pos:line="472" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="472" pos:column="24">CURLM_STATE_COMPLETED<pos:position pos:line="472" pos:column="45"/></name></expr></argument>)<pos:position pos:line="472" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="472" pos:column="47"/></expr_stmt>

      <break pos:line="474" pos:column="7">break;<pos:position pos:line="474" pos:column="13"/></break>

    <case pos:line="476" pos:column="5">case <expr><name pos:line="476" pos:column="10">CURLM_STATE_COMPLETED<pos:position pos:line="476" pos:column="31"/></name></expr>:<pos:position pos:line="476" pos:column="32"/></case>
      <comment type="block" pos:line="477" pos:column="7">/* this is a completed transfer, it is likely to still be connected */</comment>

      <comment type="block" pos:line="479" pos:column="7">/* This node should be delinked from the list now and we should post
         an information message that we are complete. */</comment>

      <comment type="block" pos:line="482" pos:column="7">/* Important: reset the conn pointer so that we don't point to memory
         that could be freed anytime */</comment>
      <expr_stmt><expr><name><name pos:line="484" pos:column="7">easy<pos:position pos:line="484" pos:column="11"/></name><operator pos:line="484" pos:column="11">-&gt;<pos:position pos:line="484" pos:column="16"/></operator><name pos:line="484" pos:column="13">easy_conn<pos:position pos:line="484" pos:column="22"/></name></name> <operator pos:line="484" pos:column="23">=<pos:position pos:line="484" pos:column="24"/></operator> <name pos:line="484" pos:column="25">NULL<pos:position pos:line="484" pos:column="29"/></name></expr>;<pos:position pos:line="484" pos:column="30"/></expr_stmt>
      <break pos:line="485" pos:column="7">break;<pos:position pos:line="485" pos:column="13"/></break>

    <default pos:line="487" pos:column="5">default:<pos:position pos:line="487" pos:column="13"/></default>
      <return pos:line="488" pos:column="7">return <expr><name pos:line="488" pos:column="14">CURLM_INTERNAL_ERROR<pos:position pos:line="488" pos:column="34"/></name></expr>;<pos:position pos:line="488" pos:column="35"/></return>
    }<pos:position pos:line="489" pos:column="6"/></block></switch>

    <if pos:line="491" pos:column="5">if<condition pos:line="491" pos:column="7">(<expr><name pos:line="491" pos:column="8">CURLM_STATE_COMPLETED<pos:position pos:line="491" pos:column="29"/></name> <operator pos:line="491" pos:column="30">!=<pos:position pos:line="491" pos:column="32"/></operator> <name><name pos:line="491" pos:column="33">easy<pos:position pos:line="491" pos:column="37"/></name><operator pos:line="491" pos:column="37">-&gt;<pos:position pos:line="491" pos:column="42"/></operator><name pos:line="491" pos:column="39">state<pos:position pos:line="491" pos:column="44"/></name></name></expr>)<pos:position pos:line="491" pos:column="45"/></condition><then pos:line="491" pos:column="45"> <block pos:line="491" pos:column="46">{
      <if pos:line="492" pos:column="7">if<condition pos:line="492" pos:column="9">(<expr><name pos:line="492" pos:column="10">CURLE_OK<pos:position pos:line="492" pos:column="18"/></name> <operator pos:line="492" pos:column="19">!=<pos:position pos:line="492" pos:column="21"/></operator> <name><name pos:line="492" pos:column="22">easy<pos:position pos:line="492" pos:column="26"/></name><operator pos:line="492" pos:column="26">-&gt;<pos:position pos:line="492" pos:column="31"/></operator><name pos:line="492" pos:column="28">result<pos:position pos:line="492" pos:column="34"/></name></name></expr>)<pos:position pos:line="492" pos:column="35"/></condition><then pos:line="492" pos:column="35"> <block pos:line="492" pos:column="36">{
        <comment type="block" pos:line="493" pos:column="9">/*
         * If an error was returned, and we aren't in completed state now,
         * then we go to completed and consider this transfer aborted.
         */</comment>

        <comment type="block" pos:line="498" pos:column="9">/* NOTE: no attempt to disconnect connections must be made
           in the case blocks above - cleanup happens only here */</comment>

        <expr_stmt><expr><name><name pos:line="501" pos:column="9">easy<pos:position pos:line="501" pos:column="13"/></name><operator pos:line="501" pos:column="13">-&gt;<pos:position pos:line="501" pos:column="18"/></operator><name pos:line="501" pos:column="15">easy_handle<pos:position pos:line="501" pos:column="26"/></name><operator pos:line="501" pos:column="26">-&gt;<pos:position pos:line="501" pos:column="31"/></operator><name pos:line="501" pos:column="28">state<pos:position pos:line="501" pos:column="33"/></name><operator pos:line="501" pos:column="33">.<pos:position pos:line="501" pos:column="34"/></operator><name pos:line="501" pos:column="34">pipe_broke<pos:position pos:line="501" pos:column="44"/></name></name> <operator pos:line="501" pos:column="45">=<pos:position pos:line="501" pos:column="46"/></operator> <name pos:line="501" pos:column="47">FALSE<pos:position pos:line="501" pos:column="52"/></name></expr>;<pos:position pos:line="501" pos:column="53"/></expr_stmt>

        <if pos:line="503" pos:column="9">if<condition pos:line="503" pos:column="11">(<expr><name><name pos:line="503" pos:column="12">easy<pos:position pos:line="503" pos:column="16"/></name><operator pos:line="503" pos:column="16">-&gt;<pos:position pos:line="503" pos:column="21"/></operator><name pos:line="503" pos:column="18">easy_conn<pos:position pos:line="503" pos:column="27"/></name></name></expr>)<pos:position pos:line="503" pos:column="28"/></condition><then pos:line="503" pos:column="28"> <block pos:line="503" pos:column="29">{
          <comment type="block" pos:line="504" pos:column="11">/* if this has a connection, unsubscribe from the pipelines */</comment>
          <expr_stmt><expr><name><name pos:line="505" pos:column="11">easy<pos:position pos:line="505" pos:column="15"/></name><operator pos:line="505" pos:column="15">-&gt;<pos:position pos:line="505" pos:column="20"/></operator><name pos:line="505" pos:column="17">easy_conn<pos:position pos:line="505" pos:column="26"/></name><operator pos:line="505" pos:column="26">-&gt;<pos:position pos:line="505" pos:column="31"/></operator><name pos:line="505" pos:column="28">writechannel_inuse<pos:position pos:line="505" pos:column="46"/></name></name> <operator pos:line="505" pos:column="47">=<pos:position pos:line="505" pos:column="48"/></operator> <name pos:line="505" pos:column="49">FALSE<pos:position pos:line="505" pos:column="54"/></name></expr>;<pos:position pos:line="505" pos:column="55"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="506" pos:column="11">easy<pos:position pos:line="506" pos:column="15"/></name><operator pos:line="506" pos:column="15">-&gt;<pos:position pos:line="506" pos:column="20"/></operator><name pos:line="506" pos:column="17">easy_conn<pos:position pos:line="506" pos:column="26"/></name><operator pos:line="506" pos:column="26">-&gt;<pos:position pos:line="506" pos:column="31"/></operator><name pos:line="506" pos:column="28">readchannel_inuse<pos:position pos:line="506" pos:column="45"/></name></name> <operator pos:line="506" pos:column="46">=<pos:position pos:line="506" pos:column="47"/></operator> <name pos:line="506" pos:column="48">FALSE<pos:position pos:line="506" pos:column="53"/></name></expr>;<pos:position pos:line="506" pos:column="54"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="507" pos:column="11">Curl_removeHandleFromPipeline<pos:position pos:line="507" pos:column="40"/></name><argument_list pos:line="507" pos:column="40">(<argument><expr><name><name pos:line="507" pos:column="41">easy<pos:position pos:line="507" pos:column="45"/></name><operator pos:line="507" pos:column="45">-&gt;<pos:position pos:line="507" pos:column="50"/></operator><name pos:line="507" pos:column="47">easy_handle<pos:position pos:line="507" pos:column="58"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="508" pos:column="41">easy<pos:position pos:line="508" pos:column="45"/></name><operator pos:line="508" pos:column="45">-&gt;<pos:position pos:line="508" pos:column="50"/></operator><name pos:line="508" pos:column="47">easy_conn<pos:position pos:line="508" pos:column="56"/></name><operator pos:line="508" pos:column="56">-&gt;<pos:position pos:line="508" pos:column="61"/></operator><name pos:line="508" pos:column="58">send_pipe<pos:position pos:line="508" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="508" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="69"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="509" pos:column="11">Curl_removeHandleFromPipeline<pos:position pos:line="509" pos:column="40"/></name><argument_list pos:line="509" pos:column="40">(<argument><expr><name><name pos:line="509" pos:column="41">easy<pos:position pos:line="509" pos:column="45"/></name><operator pos:line="509" pos:column="45">-&gt;<pos:position pos:line="509" pos:column="50"/></operator><name pos:line="509" pos:column="47">easy_handle<pos:position pos:line="509" pos:column="58"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="510" pos:column="41">easy<pos:position pos:line="510" pos:column="45"/></name><operator pos:line="510" pos:column="45">-&gt;<pos:position pos:line="510" pos:column="50"/></operator><name pos:line="510" pos:column="47">easy_conn<pos:position pos:line="510" pos:column="56"/></name><operator pos:line="510" pos:column="56">-&gt;<pos:position pos:line="510" pos:column="61"/></operator><name pos:line="510" pos:column="58">recv_pipe<pos:position pos:line="510" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="510" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="510" pos:column="69"/></expr_stmt>
          <comment type="block" pos:line="511" pos:column="11">/* Check if we can move pending requests to send pipe */</comment>
          <expr_stmt><expr><call><name pos:line="512" pos:column="11">checkPendPipeline<pos:position pos:line="512" pos:column="28"/></name><argument_list pos:line="512" pos:column="28">(<argument><expr><name><name pos:line="512" pos:column="29">easy<pos:position pos:line="512" pos:column="33"/></name><operator pos:line="512" pos:column="33">-&gt;<pos:position pos:line="512" pos:column="38"/></operator><name pos:line="512" pos:column="35">easy_conn<pos:position pos:line="512" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="512" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="513" pos:column="10"/></block></then></if>

        <if pos:line="515" pos:column="9">if<condition pos:line="515" pos:column="11">(<expr><name pos:line="515" pos:column="12">disconnect_conn<pos:position pos:line="515" pos:column="27"/></name></expr>)<pos:position pos:line="515" pos:column="28"/></condition><then pos:line="515" pos:column="28"> <block pos:line="515" pos:column="29">{
          <expr_stmt><expr><call><name pos:line="516" pos:column="11">Curl_disconnect<pos:position pos:line="516" pos:column="26"/></name><argument_list pos:line="516" pos:column="26">(<argument><expr><name><name pos:line="516" pos:column="27">easy<pos:position pos:line="516" pos:column="31"/></name><operator pos:line="516" pos:column="31">-&gt;<pos:position pos:line="516" pos:column="36"/></operator><name pos:line="516" pos:column="33">easy_conn<pos:position pos:line="516" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="516" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="44"/></expr_stmt> <comment type="block" pos:line="516" pos:column="45">/* disconnect properly */</comment>

          <comment type="block" pos:line="518" pos:column="11">/* This is where we make sure that the easy_conn pointer is reset.
             We don't have to do this in every case block above where a
             failure is detected */</comment>
          <expr_stmt><expr><name><name pos:line="521" pos:column="11">easy<pos:position pos:line="521" pos:column="15"/></name><operator pos:line="521" pos:column="15">-&gt;<pos:position pos:line="521" pos:column="20"/></operator><name pos:line="521" pos:column="17">easy_conn<pos:position pos:line="521" pos:column="26"/></name></name> <operator pos:line="521" pos:column="27">=<pos:position pos:line="521" pos:column="28"/></operator> <name pos:line="521" pos:column="29">NULL<pos:position pos:line="521" pos:column="33"/></name></expr>;<pos:position pos:line="521" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="522" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="524" pos:column="9">multistate<pos:position pos:line="524" pos:column="19"/></name><argument_list pos:line="524" pos:column="19">(<argument><expr><name pos:line="524" pos:column="20">easy<pos:position pos:line="524" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="524" pos:column="26">CURLM_STATE_COMPLETED<pos:position pos:line="524" pos:column="47"/></name></expr></argument>)<pos:position pos:line="524" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="525" pos:column="8"/></block></then></if>
    }<pos:position pos:line="526" pos:column="6"/></block></then></if>
  }<pos:position pos:line="527" pos:column="4"/></block> while<condition pos:line="527" pos:column="10">(<expr><literal type="number" pos:line="527" pos:column="11">0<pos:position pos:line="527" pos:column="12"/></literal></expr>)<pos:position pos:line="527" pos:column="13"/></condition>;<pos:position pos:line="527" pos:column="14"/></do>
  <if pos:line="528" pos:column="3">if<condition pos:line="528" pos:column="5">(<expr><operator pos:line="528" pos:column="6">(<pos:position pos:line="528" pos:column="7"/></operator><name pos:line="528" pos:column="7">CURLM_STATE_COMPLETED<pos:position pos:line="528" pos:column="28"/></name> <operator pos:line="528" pos:column="29">==<pos:position pos:line="528" pos:column="31"/></operator> <name><name pos:line="528" pos:column="32">easy<pos:position pos:line="528" pos:column="36"/></name><operator pos:line="528" pos:column="36">-&gt;<pos:position pos:line="528" pos:column="41"/></operator><name pos:line="528" pos:column="38">state<pos:position pos:line="528" pos:column="43"/></name></name><operator pos:line="528" pos:column="43">)<pos:position pos:line="528" pos:column="44"/></operator> <operator pos:line="528" pos:column="45">&amp;&amp;<pos:position pos:line="528" pos:column="55"/></operator> <operator pos:line="528" pos:column="48">!<pos:position pos:line="528" pos:column="49"/></operator><name><name pos:line="528" pos:column="49">easy<pos:position pos:line="528" pos:column="53"/></name><operator pos:line="528" pos:column="53">-&gt;<pos:position pos:line="528" pos:column="58"/></operator><name pos:line="528" pos:column="55">msg<pos:position pos:line="528" pos:column="58"/></name></name></expr>)<pos:position pos:line="528" pos:column="59"/></condition><then pos:line="528" pos:column="59"> <block pos:line="528" pos:column="60">{
    <if pos:line="529" pos:column="5">if<condition pos:line="529" pos:column="7">(<expr><name><name pos:line="529" pos:column="8">easy<pos:position pos:line="529" pos:column="12"/></name><operator pos:line="529" pos:column="12">-&gt;<pos:position pos:line="529" pos:column="17"/></operator><name pos:line="529" pos:column="14">easy_handle<pos:position pos:line="529" pos:column="25"/></name><operator pos:line="529" pos:column="25">-&gt;<pos:position pos:line="529" pos:column="30"/></operator><name pos:line="529" pos:column="27">dns<pos:position pos:line="529" pos:column="30"/></name><operator pos:line="529" pos:column="30">.<pos:position pos:line="529" pos:column="31"/></operator><name pos:line="529" pos:column="31">hostcachetype<pos:position pos:line="529" pos:column="44"/></name></name> <operator pos:line="529" pos:column="45">==<pos:position pos:line="529" pos:column="47"/></operator> <name pos:line="529" pos:column="48">HCACHE_MULTI<pos:position pos:line="529" pos:column="60"/></name></expr>)<pos:position pos:line="529" pos:column="61"/></condition><then pos:line="529" pos:column="61"> <block pos:line="529" pos:column="62">{
      <comment type="block" pos:line="530" pos:column="7">/* clear out the usage of the shared DNS cache */</comment>
      <expr_stmt><expr><name><name pos:line="531" pos:column="7">easy<pos:position pos:line="531" pos:column="11"/></name><operator pos:line="531" pos:column="11">-&gt;<pos:position pos:line="531" pos:column="16"/></operator><name pos:line="531" pos:column="13">easy_handle<pos:position pos:line="531" pos:column="24"/></name><operator pos:line="531" pos:column="24">-&gt;<pos:position pos:line="531" pos:column="29"/></operator><name pos:line="531" pos:column="26">dns<pos:position pos:line="531" pos:column="29"/></name><operator pos:line="531" pos:column="29">.<pos:position pos:line="531" pos:column="30"/></operator><name pos:line="531" pos:column="30">hostcache<pos:position pos:line="531" pos:column="39"/></name></name> <operator pos:line="531" pos:column="40">=<pos:position pos:line="531" pos:column="41"/></operator> <name pos:line="531" pos:column="42">NULL<pos:position pos:line="531" pos:column="46"/></name></expr>;<pos:position pos:line="531" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="532" pos:column="7">easy<pos:position pos:line="532" pos:column="11"/></name><operator pos:line="532" pos:column="11">-&gt;<pos:position pos:line="532" pos:column="16"/></operator><name pos:line="532" pos:column="13">easy_handle<pos:position pos:line="532" pos:column="24"/></name><operator pos:line="532" pos:column="24">-&gt;<pos:position pos:line="532" pos:column="29"/></operator><name pos:line="532" pos:column="26">dns<pos:position pos:line="532" pos:column="29"/></name><operator pos:line="532" pos:column="29">.<pos:position pos:line="532" pos:column="30"/></operator><name pos:line="532" pos:column="30">hostcachetype<pos:position pos:line="532" pos:column="43"/></name></name> <operator pos:line="532" pos:column="44">=<pos:position pos:line="532" pos:column="45"/></operator> <name pos:line="532" pos:column="46">HCACHE_NONE<pos:position pos:line="532" pos:column="57"/></name></expr>;<pos:position pos:line="532" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="533" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="535" pos:column="5">/* now add a node to the Curl_message linked list with this info */</comment>
    <expr_stmt><expr><name pos:line="536" pos:column="5">msg<pos:position pos:line="536" pos:column="8"/></name> <operator pos:line="536" pos:column="9">=<pos:position pos:line="536" pos:column="10"/></operator> <operator pos:line="536" pos:column="11">(<pos:position pos:line="536" pos:column="12"/></operator>struct <name pos:line="536" pos:column="19">Curl_message<pos:position pos:line="536" pos:column="31"/></name> <operator pos:line="536" pos:column="32">*<pos:position pos:line="536" pos:column="33"/></operator><operator pos:line="536" pos:column="33">)<pos:position pos:line="536" pos:column="34"/></operator><call><name pos:line="536" pos:column="34">malloc<pos:position pos:line="536" pos:column="40"/></name><argument_list pos:line="536" pos:column="40">(<argument><expr><sizeof pos:line="536" pos:column="41">sizeof<argument_list pos:line="536" pos:column="47">(<argument><expr pos:line="536" pos:column="48">struct <name pos:line="536" pos:column="55">Curl_message<pos:position pos:line="536" pos:column="67"/></name></expr></argument>)<pos:position pos:line="536" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="536" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="536" pos:column="70"/></expr_stmt>

    <if pos:line="538" pos:column="5">if<condition pos:line="538" pos:column="7">(<expr><operator pos:line="538" pos:column="8">!<pos:position pos:line="538" pos:column="9"/></operator><name pos:line="538" pos:column="9">msg<pos:position pos:line="538" pos:column="12"/></name></expr>)<pos:position pos:line="538" pos:column="13"/></condition><then pos:line="538" pos:column="13">
      <block type="pseudo"><return pos:line="539" pos:column="7">return <expr><name pos:line="539" pos:column="14">CURLM_OUT_OF_MEMORY<pos:position pos:line="539" pos:column="33"/></name></expr>;<pos:position pos:line="539" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="541" pos:column="5">msg<pos:position pos:line="541" pos:column="8"/></name><operator pos:line="541" pos:column="8">-&gt;<pos:position pos:line="541" pos:column="13"/></operator><name pos:line="541" pos:column="10">extmsg<pos:position pos:line="541" pos:column="16"/></name><operator pos:line="541" pos:column="16">.<pos:position pos:line="541" pos:column="17"/></operator><name pos:line="541" pos:column="17">msg<pos:position pos:line="541" pos:column="20"/></name></name> <operator pos:line="541" pos:column="21">=<pos:position pos:line="541" pos:column="22"/></operator> <name pos:line="541" pos:column="23">CURLMSG_DONE<pos:position pos:line="541" pos:column="35"/></name></expr>;<pos:position pos:line="541" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="542" pos:column="5">msg<pos:position pos:line="542" pos:column="8"/></name><operator pos:line="542" pos:column="8">-&gt;<pos:position pos:line="542" pos:column="13"/></operator><name pos:line="542" pos:column="10">extmsg<pos:position pos:line="542" pos:column="16"/></name><operator pos:line="542" pos:column="16">.<pos:position pos:line="542" pos:column="17"/></operator><name pos:line="542" pos:column="17">easy_handle<pos:position pos:line="542" pos:column="28"/></name></name> <operator pos:line="542" pos:column="29">=<pos:position pos:line="542" pos:column="30"/></operator> <name><name pos:line="542" pos:column="31">easy<pos:position pos:line="542" pos:column="35"/></name><operator pos:line="542" pos:column="35">-&gt;<pos:position pos:line="542" pos:column="40"/></operator><name pos:line="542" pos:column="37">easy_handle<pos:position pos:line="542" pos:column="48"/></name></name></expr>;<pos:position pos:line="542" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="543" pos:column="5">msg<pos:position pos:line="543" pos:column="8"/></name><operator pos:line="543" pos:column="8">-&gt;<pos:position pos:line="543" pos:column="13"/></operator><name pos:line="543" pos:column="10">extmsg<pos:position pos:line="543" pos:column="16"/></name><operator pos:line="543" pos:column="16">.<pos:position pos:line="543" pos:column="17"/></operator><name pos:line="543" pos:column="17">data<pos:position pos:line="543" pos:column="21"/></name><operator pos:line="543" pos:column="21">.<pos:position pos:line="543" pos:column="22"/></operator><name pos:line="543" pos:column="22">result<pos:position pos:line="543" pos:column="28"/></name></name> <operator pos:line="543" pos:column="29">=<pos:position pos:line="543" pos:column="30"/></operator> <name><name pos:line="543" pos:column="31">easy<pos:position pos:line="543" pos:column="35"/></name><operator pos:line="543" pos:column="35">-&gt;<pos:position pos:line="543" pos:column="40"/></operator><name pos:line="543" pos:column="37">result<pos:position pos:line="543" pos:column="43"/></name></name></expr>;<pos:position pos:line="543" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="544" pos:column="5">msg<pos:position pos:line="544" pos:column="8"/></name><operator pos:line="544" pos:column="8">-&gt;<pos:position pos:line="544" pos:column="13"/></operator><name pos:line="544" pos:column="10">next<pos:position pos:line="544" pos:column="14"/></name></name> <operator pos:line="544" pos:column="15">=<pos:position pos:line="544" pos:column="16"/></operator> <name pos:line="544" pos:column="17">NULL<pos:position pos:line="544" pos:column="21"/></name></expr>;<pos:position pos:line="544" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="546" pos:column="5">easy<pos:position pos:line="546" pos:column="9"/></name><operator pos:line="546" pos:column="9">-&gt;<pos:position pos:line="546" pos:column="14"/></operator><name pos:line="546" pos:column="11">msg<pos:position pos:line="546" pos:column="14"/></name></name> <operator pos:line="546" pos:column="15">=<pos:position pos:line="546" pos:column="16"/></operator> <name pos:line="546" pos:column="17">msg<pos:position pos:line="546" pos:column="20"/></name></expr>;<pos:position pos:line="546" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="547" pos:column="5">easy<pos:position pos:line="547" pos:column="9"/></name><operator pos:line="547" pos:column="9">-&gt;<pos:position pos:line="547" pos:column="14"/></operator><name pos:line="547" pos:column="11">msg_num<pos:position pos:line="547" pos:column="18"/></name></name> <operator pos:line="547" pos:column="19">=<pos:position pos:line="547" pos:column="20"/></operator> <literal type="number" pos:line="547" pos:column="21">1<pos:position pos:line="547" pos:column="22"/></literal></expr>;<pos:position pos:line="547" pos:column="23"/></expr_stmt> <comment type="block" pos:line="547" pos:column="24">/* there is one unread message here */</comment>

    <expr_stmt><expr><name><name pos:line="549" pos:column="5">multi<pos:position pos:line="549" pos:column="10"/></name><operator pos:line="549" pos:column="10">-&gt;<pos:position pos:line="549" pos:column="15"/></operator><name pos:line="549" pos:column="12">num_msgs<pos:position pos:line="549" pos:column="20"/></name></name><operator pos:line="549" pos:column="20">++<pos:position pos:line="549" pos:column="22"/></operator></expr>;<pos:position pos:line="549" pos:column="23"/></expr_stmt> <comment type="block" pos:line="549" pos:column="24">/* increase message counter */</comment>
  }<pos:position pos:line="550" pos:column="4"/></block></then></if>

  <if pos:line="552" pos:column="3">if<condition pos:line="552" pos:column="5">(<expr><name pos:line="552" pos:column="6">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="552" pos:column="30"/></name> <operator pos:line="552" pos:column="31">==<pos:position pos:line="552" pos:column="33"/></operator> <name pos:line="552" pos:column="34">result<pos:position pos:line="552" pos:column="40"/></name></expr>)<pos:position pos:line="552" pos:column="41"/></condition><then pos:line="552" pos:column="41">
    <comment type="block" pos:line="553" pos:column="5">/* Set the timeout for this handle to expire really soon so that it will
       be taken care of even when this handle is added in the midst of
       operation when only the curl_multi_socket() API is used. During that
       flow, only sockets that time-out or have actions will be dealt
       with. Since this handle has no action yet, we make sure it times out to
       get things to happen. Also, this makes it less important for callers of
       the curl_multi_* functions to bother about the CURLM_CALL_MULTI_PERFORM
       return code, as long as they deal with the timeouts properly. */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="561" pos:column="5">Curl_expire<pos:position pos:line="561" pos:column="16"/></name><argument_list pos:line="561" pos:column="16">(<argument><expr><name><name pos:line="561" pos:column="17">easy<pos:position pos:line="561" pos:column="21"/></name><operator pos:line="561" pos:column="21">-&gt;<pos:position pos:line="561" pos:column="26"/></operator><name pos:line="561" pos:column="23">easy_handle<pos:position pos:line="561" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="561" pos:column="36">10<pos:position pos:line="561" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="561" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="40"/></expr_stmt></block></then></if>

  <return pos:line="563" pos:column="3">return <expr><name pos:line="563" pos:column="10">result<pos:position pos:line="563" pos:column="16"/></name></expr>;<pos:position pos:line="563" pos:column="17"/></return>
}<pos:position pos:line="564" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2320_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_nss_random<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">SessionHandle<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">data<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">unsigned<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">entropy<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">size_t<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">length<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">data<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">Curl_nss_seed<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">data<pos:position pos:line="6" pos:column="23"/></name></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt></block></then></if>  <comment type="block" pos:line="6" pos:column="27">/* Initiate the seed if not already done */</comment>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">SECSuccess<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">!=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">PK11_GenerateRandom<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">entropy<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="49">curlx_uztosi<pos:position pos:line="8" pos:column="61"/></name><argument_list pos:line="8" pos:column="61">(<argument><expr><name pos:line="8" pos:column="62">length<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="71"/></condition><then pos:line="8" pos:column="71"> <block pos:line="8" pos:column="72">{
    <comment type="block" pos:line="9" pos:column="5">/* no way to signal a failure from here, we have to abort */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">failf<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">data<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="17">"PK11_GenerateRandom() failed, calling abort()..."<pos:position pos:line="10" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">abort<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">()<pos:position pos:line="11" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <return pos:line="14" pos:column="3">return <expr><literal type="number" pos:line="14" pos:column="10">0<pos:position pos:line="14" pos:column="11"/></literal></expr>;<pos:position pos:line="14" pos:column="12"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

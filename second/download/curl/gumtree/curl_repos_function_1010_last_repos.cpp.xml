<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1010_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">nosigpipe<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">curl_socket_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">sockfd<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">onoff<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">1<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><call><name pos:line="6" pos:column="6">setsockopt<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">sockfd<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="25">SOL_SOCKET<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">SO_NOSIGPIPE<pos:position pos:line="6" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="51">(<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="52">void<pos:position pos:line="6" pos:column="56"/></name> <operator pos:line="6" pos:column="57">*<pos:position pos:line="6" pos:column="58"/></operator><operator pos:line="6" pos:column="58">)<pos:position pos:line="6" pos:column="59"/></operator><operator pos:line="6" pos:column="59">&amp;<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="60">onoff<pos:position pos:line="6" pos:column="65"/></name></expr></argument>,
                <argument><expr><sizeof pos:line="7" pos:column="17">sizeof<argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">onoff<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call> <operator pos:line="7" pos:column="32">&lt;<pos:position pos:line="7" pos:column="36"/></operator> <literal type="number" pos:line="7" pos:column="34">0<pos:position pos:line="7" pos:column="35"/></literal></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="5">infof<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">data<pos:position pos:line="8" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="17">"Could not set SO_NOSIGPIPE: %s\n"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="9" pos:column="11">Curl_strerror<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">conn<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">SOCKERRNO<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1422_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">parse_connect_to_slist<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">Curl_easy<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">data<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">connectdata<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">conn<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                       <parameter><decl><type><name><name pos:line="3" pos:column="40">struct<pos:position pos:line="3" pos:column="46"/></name> <name pos:line="3" pos:column="47">curl_slist<pos:position pos:line="3" pos:column="57"/></name></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">conn_to_host<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_OK<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">host<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">port<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <while pos:line="9" pos:column="3">while<condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">conn_to_host<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&amp;&amp;<pos:position pos:line="9" pos:column="32"/></operator> <operator pos:line="9" pos:column="25">!<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">host<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition> <block pos:line="9" pos:column="32">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">parse_connect_to_string<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">data<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">conn<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="50">conn_to_host<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">-&gt;<pos:position pos:line="10" pos:column="67"/></operator><name pos:line="10" pos:column="64">data<pos:position pos:line="10" pos:column="68"/></name></name></expr></argument>,
                                     <argument><expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="39">host<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="46">port<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">result<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">result<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">host<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">&amp;&amp;<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">host<pos:position pos:line="15" pos:column="21"/></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="16" pos:column="7">bool<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">ipv6host<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">conn<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">conn_to_host<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">rawalloc<pos:position pos:line="17" pos:column="34"/></name></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">host<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="18" pos:column="7">conn<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">conn_to_host<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">name<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">host<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">conn<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">bits<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">conn_to_host<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">TRUE<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>

      <expr_stmt><expr><name pos:line="21" pos:column="7">ipv6host<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">strchr<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">host<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="31">':'<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call> <operator pos:line="21" pos:column="36">!=<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">NULL<pos:position pos:line="21" pos:column="43"/></name></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">infof<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">data<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"Connecting to hostname: %s%s%s\n"<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="13">ipv6host<pos:position pos:line="23" pos:column="21"/></name></expr> ?<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23"> <expr><literal type="string" pos:line="23" pos:column="24">"["<pos:position pos:line="23" pos:column="27"/></literal></expr> <pos:position pos:line="23" pos:column="28"/></then><else pos:line="23" pos:column="28">: <expr><literal type="string" pos:line="23" pos:column="30">""<pos:position pos:line="23" pos:column="32"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">host<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="23" pos:column="40">ipv6host<pos:position pos:line="23" pos:column="48"/></name></expr> ?<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <expr><literal type="string" pos:line="23" pos:column="51">"]"<pos:position pos:line="23" pos:column="54"/></literal></expr> <pos:position pos:line="23" pos:column="55"/></then><else pos:line="23" pos:column="55">: <expr><literal type="string" pos:line="23" pos:column="57">""<pos:position pos:line="23" pos:column="59"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
      <comment type="block" pos:line="26" pos:column="7">/* no "connect to host" */</comment>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">conn<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">bits<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">conn_to_host<pos:position pos:line="27" pos:column="30"/></name></name> <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="33">FALSE<pos:position pos:line="27" pos:column="38"/></name></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">free<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">host<pos:position pos:line="28" pos:column="16"/></name></expr></argument>)<pos:position pos:line="28" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><name pos:line="31" pos:column="8">port<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">&gt;=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18"> <block pos:line="31" pos:column="19">{
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">conn<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">conn_to_port<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">port<pos:position pos:line="32" pos:column="32"/></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">conn<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">bits<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">conn_to_port<pos:position pos:line="33" pos:column="30"/></name></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <name pos:line="33" pos:column="33">TRUE<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">infof<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">data<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"Connecting to port: %d\n"<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">port<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{
      <comment type="block" pos:line="37" pos:column="7">/* no "connect to port" */</comment>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">conn<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">bits<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">conn_to_port<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="33">FALSE<pos:position pos:line="38" pos:column="38"/></name></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">conn_to_host<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name><name pos:line="41" pos:column="20">conn_to_host<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">next<pos:position pos:line="41" pos:column="38"/></name></name></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></while>

  <return pos:line="44" pos:column="3">return <expr><name pos:line="44" pos:column="10">result<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

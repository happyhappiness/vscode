<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_63_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">name<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><ternary><condition><expr><name pos:line="3" pos:column="22">argc<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">&gt;<pos:position pos:line="3" pos:column="31"/></operator> <literal type="number" pos:line="3" pos:column="29">1<pos:position pos:line="3" pos:column="30"/></literal></expr> ?<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <expr><name><name pos:line="3" pos:column="33">argv<pos:position pos:line="3" pos:column="37"/></name><index pos:line="3" pos:column="37">[<expr><literal type="number" pos:line="3" pos:column="38">1<pos:position pos:line="3" pos:column="39"/></literal></expr>]<pos:position pos:line="3" pos:column="40"/></index></name></expr> <pos:position pos:line="3" pos:column="41"/></then><else pos:line="3" pos:column="41">: <expr><literal type="string" pos:line="3" pos:column="43">"openssl"<pos:position pos:line="3" pos:column="52"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLsslset<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">result<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><call><name pos:line="6" pos:column="7">strcmp<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><literal type="string" pos:line="6" pos:column="14">"list"<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="22">name<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">curl_ssl_backend<pos:position pos:line="7" pos:column="27"/></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier><modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">list<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">curl_global_sslset<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><operator pos:line="10" pos:column="33">-<pos:position pos:line="10" pos:column="34"/></operator><literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="43">&amp;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="44">list<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">CURLSSLSET_UNKNOWN_BACKEND<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>

    <for pos:line="13" pos:column="5">for<control pos:line="13" pos:column="8">(<init><expr><name pos:line="13" pos:column="9">i<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></init> <condition><expr><name><name pos:line="13" pos:column="16">list<pos:position pos:line="13" pos:column="20"/></name><index pos:line="13" pos:column="20">[<expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name></expr>]<pos:position pos:line="13" pos:column="23"/></index></name></expr>;<pos:position pos:line="13" pos:column="24"/></condition> <incr><expr><name pos:line="13" pos:column="25">i<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">++<pos:position pos:line="13" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="29"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="7">printf<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><literal type="string" pos:line="14" pos:column="14">"SSL backend #%d: '%s' (ID: %d)\n"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>,
             <argument><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="17">list<pos:position pos:line="15" pos:column="21"/></name><index pos:line="15" pos:column="21">[<expr><name pos:line="15" pos:column="22">i<pos:position pos:line="15" pos:column="23"/></name></expr>]<pos:position pos:line="15" pos:column="24"/></index></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">name<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="32">list<pos:position pos:line="15" pos:column="36"/></name><index pos:line="15" pos:column="36">[<expr><name pos:line="15" pos:column="37">i<pos:position pos:line="15" pos:column="38"/></name></expr>]<pos:position pos:line="15" pos:column="39"/></index></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">id<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt></block></for>

    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <elseif pos:line="19" pos:column="3">else <if pos:line="19" pos:column="8">if<condition pos:line="19" pos:column="10">(<expr><call><name pos:line="19" pos:column="11">isdigit<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><operator pos:line="19" pos:column="19">*<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">name<pos:position pos:line="19" pos:column="24"/></name></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26"> <block pos:line="19" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">curl_sslbackend<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">id<pos:position pos:line="20" pos:column="23"/></name> <init pos:line="20" pos:column="24">= <expr><operator pos:line="20" pos:column="26">(<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">curl_sslbackend<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator><call><name pos:line="20" pos:column="43">atoi<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">name<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="54"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">result<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">curl_global_sslset<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">id<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">NULL<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="43">NULL<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if></elseif>
  <else pos:line="24" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="5">result<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">curl_global_sslset<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">-<pos:position pos:line="25" pos:column="34"/></operator><literal type="number" pos:line="25" pos:column="34">1<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">name<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt></block></else></if>

  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name pos:line="27" pos:column="6">result<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">==<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">CURLSSLSET_UNKNOWN_BACKEND<pos:position pos:line="27" pos:column="42"/></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">fprintf<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">stderr<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"Unknown SSL backend id: %s\n"<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">name<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><literal type="number" pos:line="29" pos:column="12">1<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">assert<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><name pos:line="32" pos:column="10">result<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">==<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">CURLSSLSET_OK<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">printf<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><literal type="string" pos:line="34" pos:column="10">"Version with SSL backend '%s':\n\n\t%s\n"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">name<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="60">curl_version<pos:position pos:line="34" pos:column="72"/></name><argument_list pos:line="34" pos:column="72">()<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>

  <return pos:line="36" pos:column="3">return <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>;<pos:position pos:line="36" pos:column="12"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

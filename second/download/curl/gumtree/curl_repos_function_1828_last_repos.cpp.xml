<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1828_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">copySubstring<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">to<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">from<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* Copy at most 64-characters, terminate with a newline and returns the
     effective number of stored characters. */</comment>

  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <literal type="number" pos:line="8" pos:column="11">0<pos:position pos:line="8" pos:column="12"/></literal></expr>;<pos:position pos:line="8" pos:column="13"/></init> <condition><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&lt;<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="18">64<pos:position pos:line="8" pos:column="20"/></literal></expr>;<pos:position pos:line="8" pos:column="21"/></condition> <incr><expr><name pos:line="8" pos:column="22">i<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">++<pos:position pos:line="8" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="26"/></control> <block pos:line="8" pos:column="27">{
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">to<pos:position pos:line="9" pos:column="7"/></name><index pos:line="9" pos:column="7">[<expr><name pos:line="9" pos:column="8">i<pos:position pos:line="9" pos:column="9"/></name></expr>]<pos:position pos:line="9" pos:column="10"/></index></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">from<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">!<pos:position pos:line="10" pos:column="9"/></operator><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">from<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">++<pos:position pos:line="10" pos:column="16"/></operator></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
      <block type="pseudo"><break pos:line="11" pos:column="7">break;<pos:position pos:line="11" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="12" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">to<pos:position pos:line="14" pos:column="5"/></name><index pos:line="14" pos:column="5">[<expr><name pos:line="14" pos:column="6">i<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">++<pos:position pos:line="14" pos:column="9"/></operator></expr>]<pos:position pos:line="14" pos:column="10"/></index></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="char" pos:line="14" pos:column="13">'\n'<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

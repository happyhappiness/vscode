<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1111_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">http2_recv<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">sockindex<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">mem<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">CURLcode<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">err<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ssize_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">rv<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">http_conn<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">httpc<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">proto<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">httpc<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_easy<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">data<pos:position pos:line="8" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">HTTP<pos:position pos:line="9" pos:column="14"/></name></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">stream<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><name><name pos:line="9" pos:column="25">data<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">req<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">protop<pos:position pos:line="9" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="11" pos:column="3">(<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">void<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">)<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">sockindex<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt> <comment type="block" pos:line="11" pos:column="20">/* we always do HTTP2 on sockindex 0 */</comment>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><call><name pos:line="13" pos:column="6">should_close_session<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">httpc<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34"> <block pos:line="13" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">DEBUGF<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><call><name pos:line="14" pos:column="12">infof<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">data<pos:position pos:line="14" pos:column="22"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="15" pos:column="18">"http2_recv: nothing to do in this session\n"<pos:position pos:line="15" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">err<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <name pos:line="16" pos:column="12">CURLE_HTTP2<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* Nullify here because we call nghttp2_session_send() and they
     might refer to the old buffer. */</comment>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">stream<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">upload_mem<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">stream<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">upload_len<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/*
   * At this point 'stream' is just in the Curl_easy the connection
   * identifies as its owner at this time.
   */</comment>

  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name><name pos:line="30" pos:column="6">stream<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">bodystarted<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">&amp;&amp;<pos:position pos:line="30" pos:column="36"/></operator>
     <name><name pos:line="31" pos:column="6">stream<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">nread_header_recvbuf<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">&lt;<pos:position pos:line="31" pos:column="39"/></operator> <name><name pos:line="31" pos:column="37">stream<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">header_recvbuf<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">-&gt;<pos:position pos:line="31" pos:column="64"/></operator><name pos:line="31" pos:column="61">size_used<pos:position pos:line="31" pos:column="70"/></name></name></expr>)<pos:position pos:line="31" pos:column="71"/></condition><then pos:line="31" pos:column="71"> <block pos:line="31" pos:column="72">{
    <comment type="block" pos:line="32" pos:column="5">/* If there is body data pending for this stream to return, do that */</comment>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">size_t<pos:position pos:line="33" pos:column="11"/></name></type> <name pos:line="33" pos:column="12">left<pos:position pos:line="33" pos:column="16"/></name> <init pos:line="33" pos:column="17">=
      <expr><name><name pos:line="34" pos:column="7">stream<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">header_recvbuf<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">size_used<pos:position pos:line="34" pos:column="40"/></name></name> <operator pos:line="34" pos:column="41">-<pos:position pos:line="34" pos:column="42"/></operator> <name><name pos:line="34" pos:column="43">stream<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">nread_header_recvbuf<pos:position pos:line="34" pos:column="71"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="72"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">size_t<pos:position pos:line="35" pos:column="11"/></name></type> <name pos:line="35" pos:column="12">ncopy<pos:position pos:line="35" pos:column="17"/></name> <init pos:line="35" pos:column="18">= <expr><call><name pos:line="35" pos:column="20">MIN<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">len<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">left<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memcpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">mem<pos:position pos:line="36" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="17">stream<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">header_recvbuf<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">-&gt;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="41">buffer<pos:position pos:line="36" pos:column="47"/></name></name> <operator pos:line="36" pos:column="48">+<pos:position pos:line="36" pos:column="49"/></operator> <name><name pos:line="36" pos:column="50">stream<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">-&gt;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="58">nread_header_recvbuf<pos:position pos:line="36" pos:column="78"/></name></name></expr></argument>,
           <argument><expr><name pos:line="37" pos:column="12">ncopy<pos:position pos:line="37" pos:column="17"/></name></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">stream<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">nread_header_recvbuf<pos:position pos:line="38" pos:column="33"/></name></name> <operator pos:line="38" pos:column="34">+=<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="37">ncopy<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">DEBUGF<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><call><name pos:line="40" pos:column="12">infof<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">data<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="24">"http2_recv: Got %d bytes from header_recvbuf\n"<pos:position pos:line="40" pos:column="72"/></literal></expr></argument>,
                 <argument><expr><operator pos:line="41" pos:column="18">(<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">int<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">ncopy<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">ncopy<pos:position pos:line="42" pos:column="17"/></name></expr>;<pos:position pos:line="42" pos:column="18"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">DEBUGF<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">(<argument><expr><call><name pos:line="45" pos:column="10">infof<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">data<pos:position pos:line="45" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="22">"http2_recv: easy %p (stream %u)\n"<pos:position pos:line="45" pos:column="57"/></literal></expr></argument>,
               <argument><expr><name pos:line="46" pos:column="16">data<pos:position pos:line="46" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="22">stream<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">stream_id<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="42"/></expr_stmt>

  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><operator pos:line="48" pos:column="6">(<pos:position pos:line="48" pos:column="7"/></operator><name><name pos:line="48" pos:column="7">data<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">-&gt;<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="13">state<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">.<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">drain<pos:position pos:line="48" pos:column="24"/></name></name><operator pos:line="48" pos:column="24">)<pos:position pos:line="48" pos:column="25"/></operator> <operator pos:line="48" pos:column="26">&amp;&amp;<pos:position pos:line="48" pos:column="36"/></operator> <name><name pos:line="48" pos:column="29">stream<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">memlen<pos:position pos:line="48" pos:column="43"/></name></name></expr>)<pos:position pos:line="48" pos:column="44"/></condition><then pos:line="48" pos:column="44"> <block pos:line="48" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">DEBUGF<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><call><name pos:line="49" pos:column="12">infof<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">data<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="24">"http2_recv: DRAIN %zu bytes stream %u!! (%p =&gt; %p)\n"<pos:position pos:line="49" pos:column="81"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="50" pos:column="18">stream<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">memlen<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="34">stream<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">stream_id<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>,
                 <argument><expr><name><name pos:line="51" pos:column="18">stream<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">mem<pos:position pos:line="51" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">mem<pos:position pos:line="51" pos:column="34"/></name></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
    <if pos:line="52" pos:column="5">if<condition pos:line="52" pos:column="7">(<expr><name pos:line="52" pos:column="8">mem<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">!=<pos:position pos:line="52" pos:column="14"/></operator> <name><name pos:line="52" pos:column="15">stream<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">mem<pos:position pos:line="52" pos:column="26"/></name></name></expr>)<pos:position pos:line="52" pos:column="27"/></condition><then pos:line="52" pos:column="27"> <block pos:line="52" pos:column="28">{
      <comment type="block" pos:line="53" pos:column="7">/* if we didn't get the same buffer this time, we must move the data to
         the beginning */</comment>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">memmove<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">mem<pos:position pos:line="55" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="20">stream<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">mem<pos:position pos:line="55" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="33">stream<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">memlen<pos:position pos:line="55" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="56" pos:column="7">stream<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">len<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">len<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">-<pos:position pos:line="56" pos:column="26"/></operator> <name><name pos:line="56" pos:column="27">stream<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">memlen<pos:position pos:line="56" pos:column="41"/></name></name></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="57" pos:column="7">stream<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">-&gt;<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="15">mem<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">mem<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name><name pos:line="59" pos:column="8">httpc<pos:position pos:line="59" pos:column="13"/></name><operator pos:line="59" pos:column="13">-&gt;<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="15">pause_stream_id<pos:position pos:line="59" pos:column="30"/></name></name> <operator pos:line="59" pos:column="31">==<pos:position pos:line="59" pos:column="33"/></operator> <name><name pos:line="59" pos:column="34">stream<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">stream_id<pos:position pos:line="59" pos:column="51"/></name></name> <operator pos:line="59" pos:column="52">&amp;&amp;<pos:position pos:line="59" pos:column="62"/></operator> <operator pos:line="59" pos:column="55">!<pos:position pos:line="59" pos:column="56"/></operator><name><name pos:line="59" pos:column="56">stream<pos:position pos:line="59" pos:column="62"/></name><operator pos:line="59" pos:column="62">-&gt;<pos:position pos:line="59" pos:column="67"/></operator><name pos:line="59" pos:column="64">pausedata<pos:position pos:line="59" pos:column="73"/></name></name></expr>)<pos:position pos:line="59" pos:column="74"/></condition><then pos:line="59" pos:column="74"> <block pos:line="59" pos:column="75">{
      <comment type="block" pos:line="60" pos:column="7">/* We have paused nghttp2, but we have no pause data (see
         on_data_chunk_recv). */</comment>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">httpc<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">pause_stream_id<pos:position pos:line="62" pos:column="29"/></name></name> <operator pos:line="62" pos:column="30">=<pos:position pos:line="62" pos:column="31"/></operator> <literal type="number" pos:line="62" pos:column="32">0<pos:position pos:line="62" pos:column="33"/></literal></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><call><name pos:line="63" pos:column="10">h2_process_pending_input<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">data<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="41">httpc<pos:position pos:line="63" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="48">&amp;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="49">result<pos:position pos:line="63" pos:column="55"/></name></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call> <operator pos:line="63" pos:column="57">!=<pos:position pos:line="63" pos:column="59"/></operator> <literal type="number" pos:line="63" pos:column="60">0<pos:position pos:line="63" pos:column="61"/></literal></expr>)<pos:position pos:line="63" pos:column="62"/></condition><then pos:line="63" pos:column="62"> <block pos:line="63" pos:column="63">{
        <expr_stmt><expr><operator pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">err<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">result<pos:position pos:line="64" pos:column="22"/></name></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><operator pos:line="65" pos:column="16">-<pos:position pos:line="65" pos:column="17"/></operator><literal type="number" pos:line="65" pos:column="17">1<pos:position pos:line="65" pos:column="18"/></literal></expr>;<pos:position pos:line="65" pos:column="19"/></return>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></then>
  <elseif pos:line="69" pos:column="3">else <if pos:line="69" pos:column="8">if<condition pos:line="69" pos:column="10">(<expr><name><name pos:line="69" pos:column="11">stream<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">-&gt;<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="19">pausedata<pos:position pos:line="69" pos:column="28"/></name></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29"> <block pos:line="69" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">DEBUGASSERT<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name><name pos:line="70" pos:column="17">httpc<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">-&gt;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="24">pause_stream_id<pos:position pos:line="70" pos:column="39"/></name></name> <operator pos:line="70" pos:column="40">==<pos:position pos:line="70" pos:column="42"/></operator> <name><name pos:line="70" pos:column="43">stream<pos:position pos:line="70" pos:column="49"/></name><operator pos:line="70" pos:column="49">-&gt;<pos:position pos:line="70" pos:column="54"/></operator><name pos:line="70" pos:column="51">stream_id<pos:position pos:line="70" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="71" pos:column="5">nread<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">=<pos:position pos:line="71" pos:column="12"/></operator> <call><name pos:line="71" pos:column="13">MIN<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">len<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="22">stream<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">-&gt;<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="30">pauselen<pos:position pos:line="71" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">memcpy<pos:position pos:line="72" pos:column="11"/></name><argument_list pos:line="72" pos:column="11">(<argument><expr><name pos:line="72" pos:column="12">mem<pos:position pos:line="72" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="17">stream<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">pausedata<pos:position pos:line="72" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">nread<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="74" pos:column="5">stream<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">pausedata<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">+=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">nread<pos:position pos:line="74" pos:column="31"/></name></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">stream<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">-&gt;<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="13">pauselen<pos:position pos:line="75" pos:column="21"/></name></name> <operator pos:line="75" pos:column="22">-=<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">nread<pos:position pos:line="75" pos:column="30"/></name></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">infof<pos:position pos:line="77" pos:column="10"/></name><argument_list pos:line="77" pos:column="10">(<argument><expr><name pos:line="77" pos:column="11">data<pos:position pos:line="77" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="17">"%zu data bytes written\n"<pos:position pos:line="77" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="45">nread<pos:position pos:line="77" pos:column="50"/></name></expr></argument>)<pos:position pos:line="77" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
    <if pos:line="78" pos:column="5">if<condition pos:line="78" pos:column="7">(<expr><name><name pos:line="78" pos:column="8">stream<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">pauselen<pos:position pos:line="78" pos:column="24"/></name></name> <operator pos:line="78" pos:column="25">==<pos:position pos:line="78" pos:column="27"/></operator> <literal type="number" pos:line="78" pos:column="28">0<pos:position pos:line="78" pos:column="29"/></literal></expr>)<pos:position pos:line="78" pos:column="30"/></condition><then pos:line="78" pos:column="30"> <block pos:line="78" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">DEBUGF<pos:position pos:line="79" pos:column="13"/></name><argument_list pos:line="79" pos:column="13">(<argument><expr><call><name pos:line="79" pos:column="14">infof<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">data<pos:position pos:line="79" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="26">"Unpaused by stream %u\n"<pos:position pos:line="79" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="53">stream<pos:position pos:line="79" pos:column="59"/></name><operator pos:line="79" pos:column="59">-&gt;<pos:position pos:line="79" pos:column="64"/></operator><name pos:line="79" pos:column="61">stream_id<pos:position pos:line="79" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">DEBUGASSERT<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name><name pos:line="80" pos:column="19">httpc<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">pause_stream_id<pos:position pos:line="80" pos:column="41"/></name></name> <operator pos:line="80" pos:column="42">==<pos:position pos:line="80" pos:column="44"/></operator> <name><name pos:line="80" pos:column="45">stream<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">-&gt;<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="53">stream_id<pos:position pos:line="80" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="81" pos:column="7">httpc<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">pause_stream_id<pos:position pos:line="81" pos:column="29"/></name></name> <operator pos:line="81" pos:column="30">=<pos:position pos:line="81" pos:column="31"/></operator> <literal type="number" pos:line="81" pos:column="32">0<pos:position pos:line="81" pos:column="33"/></literal></expr>;<pos:position pos:line="81" pos:column="34"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="83" pos:column="7">stream<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">pausedata<pos:position pos:line="83" pos:column="24"/></name></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <name pos:line="83" pos:column="27">NULL<pos:position pos:line="83" pos:column="31"/></name></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="84" pos:column="7">stream<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">-&gt;<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="15">pauselen<pos:position pos:line="84" pos:column="23"/></name></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <literal type="number" pos:line="84" pos:column="26">0<pos:position pos:line="84" pos:column="27"/></literal></expr>;<pos:position pos:line="84" pos:column="28"/></expr_stmt>

      <comment type="block" pos:line="86" pos:column="7">/* When NGHTTP2_ERR_PAUSE is returned from
         data_source_read_callback, we might not process DATA frame
         fully.  Calling nghttp2_session_mem_recv() again will
         continue to process DATA frame, but if there is no incoming
         frames, then we have to call it again with 0-length data.
         Without this, on_stream_close callback will not be called,
         and stream could be hanged. */</comment>
      <if pos:line="93" pos:column="7">if<condition pos:line="93" pos:column="9">(<expr><call><name pos:line="93" pos:column="10">h2_process_pending_input<pos:position pos:line="93" pos:column="34"/></name><argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">data<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="41">httpc<pos:position pos:line="93" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="48">&amp;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="49">result<pos:position pos:line="93" pos:column="55"/></name></expr></argument>)<pos:position pos:line="93" pos:column="56"/></argument_list></call> <operator pos:line="93" pos:column="57">!=<pos:position pos:line="93" pos:column="59"/></operator> <literal type="number" pos:line="93" pos:column="60">0<pos:position pos:line="93" pos:column="61"/></literal></expr>)<pos:position pos:line="93" pos:column="62"/></condition><then pos:line="93" pos:column="62"> <block pos:line="93" pos:column="63">{
        <expr_stmt><expr><operator pos:line="94" pos:column="9">*<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">err<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <name pos:line="94" pos:column="16">result<pos:position pos:line="94" pos:column="22"/></name></expr>;<pos:position pos:line="94" pos:column="23"/></expr_stmt>
        <return pos:line="95" pos:column="9">return <expr><operator pos:line="95" pos:column="16">-<pos:position pos:line="95" pos:column="17"/></operator><literal type="number" pos:line="95" pos:column="17">1<pos:position pos:line="95" pos:column="18"/></literal></expr>;<pos:position pos:line="95" pos:column="19"/></return>
      }<pos:position pos:line="96" pos:column="8"/></block></then></if>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">DEBUGF<pos:position pos:line="98" pos:column="11"/></name><argument_list pos:line="98" pos:column="11">(<argument><expr><call><name pos:line="98" pos:column="12">infof<pos:position pos:line="98" pos:column="17"/></name><argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">data<pos:position pos:line="98" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="24">"http2_recv: returns unpaused %zd bytes on stream %u\n"<pos:position pos:line="98" pos:column="79"/></literal></expr></argument>,
                 <argument><expr><name pos:line="99" pos:column="18">nread<pos:position pos:line="99" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="25">stream<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">-&gt;<pos:position pos:line="99" pos:column="36"/></operator><name pos:line="99" pos:column="33">stream_id<pos:position pos:line="99" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
    <return pos:line="100" pos:column="5">return <expr><name pos:line="100" pos:column="12">nread<pos:position pos:line="100" pos:column="17"/></name></expr>;<pos:position pos:line="100" pos:column="18"/></return>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="102" pos:column="3">else <if pos:line="102" pos:column="8">if<condition pos:line="102" pos:column="10">(<expr><name><name pos:line="102" pos:column="11">httpc<pos:position pos:line="102" pos:column="16"/></name><operator pos:line="102" pos:column="16">-&gt;<pos:position pos:line="102" pos:column="21"/></operator><name pos:line="102" pos:column="18">pause_stream_id<pos:position pos:line="102" pos:column="33"/></name></name></expr>)<pos:position pos:line="102" pos:column="34"/></condition><then pos:line="102" pos:column="34"> <block pos:line="102" pos:column="35">{
    <comment type="block" pos:line="103" pos:column="5">/* If a stream paused nghttp2_session_mem_recv previously, and has
       not processed all data, it still refers to the buffer in
       nghttp2_session.  If we call nghttp2_session_mem_recv(), we may
       overwrite that buffer.  To avoid that situation, just return
       here with CURLE_AGAIN.  This could be busy loop since data in
       socket is not read.  But it seems that usually streams are
       notified with its drain property, and socket is read again
       quickly. */</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">DEBUGF<pos:position pos:line="111" pos:column="11"/></name><argument_list pos:line="111" pos:column="11">(<argument><expr><call><name pos:line="111" pos:column="12">infof<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">data<pos:position pos:line="111" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="24">"stream %x is paused, pause id: %x\n"<pos:position pos:line="111" pos:column="61"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="112" pos:column="18">stream<pos:position pos:line="112" pos:column="24"/></name><operator pos:line="112" pos:column="24">-&gt;<pos:position pos:line="112" pos:column="29"/></operator><name pos:line="112" pos:column="26">stream_id<pos:position pos:line="112" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="37">httpc<pos:position pos:line="112" pos:column="42"/></name><operator pos:line="112" pos:column="42">-&gt;<pos:position pos:line="112" pos:column="47"/></operator><name pos:line="112" pos:column="44">pause_stream_id<pos:position pos:line="112" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="113" pos:column="5">*<pos:position pos:line="113" pos:column="6"/></operator><name pos:line="113" pos:column="6">err<pos:position pos:line="113" pos:column="9"/></name> <operator pos:line="113" pos:column="10">=<pos:position pos:line="113" pos:column="11"/></operator> <name pos:line="113" pos:column="12">CURLE_AGAIN<pos:position pos:line="113" pos:column="23"/></name></expr>;<pos:position pos:line="113" pos:column="24"/></expr_stmt>
    <return pos:line="114" pos:column="5">return <expr><operator pos:line="114" pos:column="12">-<pos:position pos:line="114" pos:column="13"/></operator><literal type="number" pos:line="114" pos:column="13">1<pos:position pos:line="114" pos:column="14"/></literal></expr>;<pos:position pos:line="114" pos:column="15"/></return>
  }<pos:position pos:line="115" pos:column="4"/></block></then></if></elseif>
  <else pos:line="116" pos:column="3">else <block pos:line="116" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="117" pos:column="5">char<pos:position pos:line="117" pos:column="9"/></name> <modifier pos:line="117" pos:column="10">*<pos:position pos:line="117" pos:column="11"/></modifier></type><name pos:line="117" pos:column="11">inbuf<pos:position pos:line="117" pos:column="16"/></name></decl>;<pos:position pos:line="117" pos:column="17"/></decl_stmt>
    <comment type="block" pos:line="118" pos:column="5">/* remember where to store incoming data for this stream and how big the
       buffer is */</comment>
    <expr_stmt><expr><name><name pos:line="120" pos:column="5">stream<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">-&gt;<pos:position pos:line="120" pos:column="16"/></operator><name pos:line="120" pos:column="13">mem<pos:position pos:line="120" pos:column="16"/></name></name> <operator pos:line="120" pos:column="17">=<pos:position pos:line="120" pos:column="18"/></operator> <name pos:line="120" pos:column="19">mem<pos:position pos:line="120" pos:column="22"/></name></expr>;<pos:position pos:line="120" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="121" pos:column="5">stream<pos:position pos:line="121" pos:column="11"/></name><operator pos:line="121" pos:column="11">-&gt;<pos:position pos:line="121" pos:column="16"/></operator><name pos:line="121" pos:column="13">len<pos:position pos:line="121" pos:column="16"/></name></name> <operator pos:line="121" pos:column="17">=<pos:position pos:line="121" pos:column="18"/></operator> <name pos:line="121" pos:column="19">len<pos:position pos:line="121" pos:column="22"/></name></expr>;<pos:position pos:line="121" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="122" pos:column="5">stream<pos:position pos:line="122" pos:column="11"/></name><operator pos:line="122" pos:column="11">-&gt;<pos:position pos:line="122" pos:column="16"/></operator><name pos:line="122" pos:column="13">memlen<pos:position pos:line="122" pos:column="19"/></name></name> <operator pos:line="122" pos:column="20">=<pos:position pos:line="122" pos:column="21"/></operator> <literal type="number" pos:line="122" pos:column="22">0<pos:position pos:line="122" pos:column="23"/></literal></expr>;<pos:position pos:line="122" pos:column="24"/></expr_stmt>

    <if pos:line="124" pos:column="5">if<condition pos:line="124" pos:column="7">(<expr><name><name pos:line="124" pos:column="8">httpc<pos:position pos:line="124" pos:column="13"/></name><operator pos:line="124" pos:column="13">-&gt;<pos:position pos:line="124" pos:column="18"/></operator><name pos:line="124" pos:column="15">inbuflen<pos:position pos:line="124" pos:column="23"/></name></name> <operator pos:line="124" pos:column="24">==<pos:position pos:line="124" pos:column="26"/></operator> <literal type="number" pos:line="124" pos:column="27">0<pos:position pos:line="124" pos:column="28"/></literal></expr>)<pos:position pos:line="124" pos:column="29"/></condition><then pos:line="124" pos:column="29"> <block pos:line="124" pos:column="30">{
      <expr_stmt><expr><name pos:line="125" pos:column="7">nread<pos:position pos:line="125" pos:column="12"/></name> <operator pos:line="125" pos:column="13">=<pos:position pos:line="125" pos:column="14"/></operator> <operator pos:line="125" pos:column="15">(<pos:position pos:line="125" pos:column="16"/></operator><operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="17">Curl_recv<pos:position pos:line="125" pos:column="26"/></name> <operator pos:line="125" pos:column="27">*<pos:position pos:line="125" pos:column="28"/></operator><operator pos:line="125" pos:column="28">)<pos:position pos:line="125" pos:column="29"/></operator><name><name pos:line="125" pos:column="29">httpc<pos:position pos:line="125" pos:column="34"/></name><operator pos:line="125" pos:column="34">-&gt;<pos:position pos:line="125" pos:column="39"/></operator><name pos:line="125" pos:column="36">recv_underlying<pos:position pos:line="125" pos:column="51"/></name></name><operator pos:line="125" pos:column="51">)<pos:position pos:line="125" pos:column="52"/></operator><operator pos:line="125" pos:column="52">(<pos:position pos:line="125" pos:column="53"/></operator>
          <name pos:line="126" pos:column="11">conn<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">,<pos:position pos:line="126" pos:column="16"/></operator> <name pos:line="126" pos:column="17">FIRSTSOCKET<pos:position pos:line="126" pos:column="28"/></name><operator pos:line="126" pos:column="28">,<pos:position pos:line="126" pos:column="29"/></operator> <name><name pos:line="126" pos:column="30">httpc<pos:position pos:line="126" pos:column="35"/></name><operator pos:line="126" pos:column="35">-&gt;<pos:position pos:line="126" pos:column="40"/></operator><name pos:line="126" pos:column="37">inbuf<pos:position pos:line="126" pos:column="42"/></name></name><operator pos:line="126" pos:column="42">,<pos:position pos:line="126" pos:column="43"/></operator> <name pos:line="126" pos:column="44">H2_BUFSIZE<pos:position pos:line="126" pos:column="54"/></name><operator pos:line="126" pos:column="54">,<pos:position pos:line="126" pos:column="55"/></operator> <operator pos:line="126" pos:column="56">&amp;<pos:position pos:line="126" pos:column="61"/></operator><name pos:line="126" pos:column="57">result<pos:position pos:line="126" pos:column="63"/></name><operator pos:line="126" pos:column="63">)<pos:position pos:line="126" pos:column="64"/></operator></expr>;<pos:position pos:line="126" pos:column="65"/></expr_stmt>

      <if pos:line="128" pos:column="7">if<condition pos:line="128" pos:column="9">(<expr><name pos:line="128" pos:column="10">nread<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">==<pos:position pos:line="128" pos:column="18"/></operator> <operator pos:line="128" pos:column="19">-<pos:position pos:line="128" pos:column="20"/></operator><literal type="number" pos:line="128" pos:column="20">1<pos:position pos:line="128" pos:column="21"/></literal></expr>)<pos:position pos:line="128" pos:column="22"/></condition><then pos:line="128" pos:column="22"> <block pos:line="128" pos:column="23">{
        <if pos:line="129" pos:column="9">if<condition pos:line="129" pos:column="11">(<expr><name pos:line="129" pos:column="12">result<pos:position pos:line="129" pos:column="18"/></name> <operator pos:line="129" pos:column="19">!=<pos:position pos:line="129" pos:column="21"/></operator> <name pos:line="129" pos:column="22">CURLE_AGAIN<pos:position pos:line="129" pos:column="33"/></name></expr>)<pos:position pos:line="129" pos:column="34"/></condition><then pos:line="129" pos:column="34">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="11">failf<pos:position pos:line="130" pos:column="16"/></name><argument_list pos:line="130" pos:column="16">(<argument><expr><name pos:line="130" pos:column="17">data<pos:position pos:line="130" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="23">"Failed receiving HTTP2 data"<pos:position pos:line="130" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="54"/></expr_stmt></block></then>
        <elseif pos:line="131" pos:column="9">else <if pos:line="131" pos:column="14">if<condition pos:line="131" pos:column="16">(<expr><name><name pos:line="131" pos:column="17">stream<pos:position pos:line="131" pos:column="23"/></name><operator pos:line="131" pos:column="23">-&gt;<pos:position pos:line="131" pos:column="28"/></operator><name pos:line="131" pos:column="25">closed<pos:position pos:line="131" pos:column="31"/></name></name></expr>)<pos:position pos:line="131" pos:column="32"/></condition><then pos:line="131" pos:column="32">
          <comment type="block" pos:line="132" pos:column="11">/* received when the stream was already closed! */</comment>
          <block type="pseudo"><return pos:line="133" pos:column="11">return <expr><call><name pos:line="133" pos:column="18">http2_handle_stream_close<pos:position pos:line="133" pos:column="43"/></name><argument_list pos:line="133" pos:column="43">(<argument><expr><name pos:line="133" pos:column="44">conn<pos:position pos:line="133" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="50">data<pos:position pos:line="133" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="56">stream<pos:position pos:line="133" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="64">err<pos:position pos:line="133" pos:column="67"/></name></expr></argument>)<pos:position pos:line="133" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="69"/></return></block></then></if></elseif></if>

        <expr_stmt><expr><operator pos:line="135" pos:column="9">*<pos:position pos:line="135" pos:column="10"/></operator><name pos:line="135" pos:column="10">err<pos:position pos:line="135" pos:column="13"/></name> <operator pos:line="135" pos:column="14">=<pos:position pos:line="135" pos:column="15"/></operator> <name pos:line="135" pos:column="16">result<pos:position pos:line="135" pos:column="22"/></name></expr>;<pos:position pos:line="135" pos:column="23"/></expr_stmt>
        <return pos:line="136" pos:column="9">return <expr><operator pos:line="136" pos:column="16">-<pos:position pos:line="136" pos:column="17"/></operator><literal type="number" pos:line="136" pos:column="17">1<pos:position pos:line="136" pos:column="18"/></literal></expr>;<pos:position pos:line="136" pos:column="19"/></return>
      }<pos:position pos:line="137" pos:column="8"/></block></then></if>

      <if pos:line="139" pos:column="7">if<condition pos:line="139" pos:column="9">(<expr><name pos:line="139" pos:column="10">nread<pos:position pos:line="139" pos:column="15"/></name> <operator pos:line="139" pos:column="16">==<pos:position pos:line="139" pos:column="18"/></operator> <literal type="number" pos:line="139" pos:column="19">0<pos:position pos:line="139" pos:column="20"/></literal></expr>)<pos:position pos:line="139" pos:column="21"/></condition><then pos:line="139" pos:column="21"> <block pos:line="139" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">failf<pos:position pos:line="140" pos:column="14"/></name><argument_list pos:line="140" pos:column="14">(<argument><expr><name pos:line="140" pos:column="15">data<pos:position pos:line="140" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="21">"Unexpected EOF"<pos:position pos:line="140" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="141" pos:column="9">*<pos:position pos:line="141" pos:column="10"/></operator><name pos:line="141" pos:column="10">err<pos:position pos:line="141" pos:column="13"/></name> <operator pos:line="141" pos:column="14">=<pos:position pos:line="141" pos:column="15"/></operator> <name pos:line="141" pos:column="16">CURLE_RECV_ERROR<pos:position pos:line="141" pos:column="32"/></name></expr>;<pos:position pos:line="141" pos:column="33"/></expr_stmt>
        <return pos:line="142" pos:column="9">return <expr><operator pos:line="142" pos:column="16">-<pos:position pos:line="142" pos:column="17"/></operator><literal type="number" pos:line="142" pos:column="17">1<pos:position pos:line="142" pos:column="18"/></literal></expr>;<pos:position pos:line="142" pos:column="19"/></return>
      }<pos:position pos:line="143" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="145" pos:column="7">DEBUGF<pos:position pos:line="145" pos:column="13"/></name><argument_list pos:line="145" pos:column="13">(<argument><expr><call><name pos:line="145" pos:column="14">infof<pos:position pos:line="145" pos:column="19"/></name><argument_list pos:line="145" pos:column="19">(<argument><expr><name pos:line="145" pos:column="20">data<pos:position pos:line="145" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="26">"nread=%zd\n"<pos:position pos:line="145" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="41">nread<pos:position pos:line="145" pos:column="46"/></name></expr></argument>)<pos:position pos:line="145" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="145" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="49"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="147" pos:column="7">httpc<pos:position pos:line="147" pos:column="12"/></name><operator pos:line="147" pos:column="12">-&gt;<pos:position pos:line="147" pos:column="17"/></operator><name pos:line="147" pos:column="14">inbuflen<pos:position pos:line="147" pos:column="22"/></name></name> <operator pos:line="147" pos:column="23">=<pos:position pos:line="147" pos:column="24"/></operator> <name pos:line="147" pos:column="25">nread<pos:position pos:line="147" pos:column="30"/></name></expr>;<pos:position pos:line="147" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="148" pos:column="7">inbuf<pos:position pos:line="148" pos:column="12"/></name> <operator pos:line="148" pos:column="13">=<pos:position pos:line="148" pos:column="14"/></operator> <name><name pos:line="148" pos:column="15">httpc<pos:position pos:line="148" pos:column="20"/></name><operator pos:line="148" pos:column="20">-&gt;<pos:position pos:line="148" pos:column="25"/></operator><name pos:line="148" pos:column="22">inbuf<pos:position pos:line="148" pos:column="27"/></name></name></expr>;<pos:position pos:line="148" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then>
    <else pos:line="150" pos:column="5">else <block pos:line="150" pos:column="10">{
      <expr_stmt><expr><name pos:line="151" pos:column="7">nread<pos:position pos:line="151" pos:column="12"/></name> <operator pos:line="151" pos:column="13">=<pos:position pos:line="151" pos:column="14"/></operator> <name><name pos:line="151" pos:column="15">httpc<pos:position pos:line="151" pos:column="20"/></name><operator pos:line="151" pos:column="20">-&gt;<pos:position pos:line="151" pos:column="25"/></operator><name pos:line="151" pos:column="22">inbuflen<pos:position pos:line="151" pos:column="30"/></name></name> <operator pos:line="151" pos:column="31">-<pos:position pos:line="151" pos:column="32"/></operator> <name><name pos:line="151" pos:column="33">httpc<pos:position pos:line="151" pos:column="38"/></name><operator pos:line="151" pos:column="38">-&gt;<pos:position pos:line="151" pos:column="43"/></operator><name pos:line="151" pos:column="40">nread_inbuf<pos:position pos:line="151" pos:column="51"/></name></name></expr>;<pos:position pos:line="151" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="152" pos:column="7">inbuf<pos:position pos:line="152" pos:column="12"/></name> <operator pos:line="152" pos:column="13">=<pos:position pos:line="152" pos:column="14"/></operator> <name><name pos:line="152" pos:column="15">httpc<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">-&gt;<pos:position pos:line="152" pos:column="25"/></operator><name pos:line="152" pos:column="22">inbuf<pos:position pos:line="152" pos:column="27"/></name></name> <operator pos:line="152" pos:column="28">+<pos:position pos:line="152" pos:column="29"/></operator> <name><name pos:line="152" pos:column="30">httpc<pos:position pos:line="152" pos:column="35"/></name><operator pos:line="152" pos:column="35">-&gt;<pos:position pos:line="152" pos:column="40"/></operator><name pos:line="152" pos:column="37">nread_inbuf<pos:position pos:line="152" pos:column="48"/></name></name></expr>;<pos:position pos:line="152" pos:column="49"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="154" pos:column="7">DEBUGF<pos:position pos:line="154" pos:column="13"/></name><argument_list pos:line="154" pos:column="13">(<argument><expr><call><name pos:line="154" pos:column="14">infof<pos:position pos:line="154" pos:column="19"/></name><argument_list pos:line="154" pos:column="19">(<argument><expr><name pos:line="154" pos:column="20">data<pos:position pos:line="154" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="26">"Use data left in connection buffer, nread=%zd\n"<pos:position pos:line="154" pos:column="75"/></literal></expr></argument>,
                   <argument><expr><name pos:line="155" pos:column="20">nread<pos:position pos:line="155" pos:column="25"/></name></expr></argument>)<pos:position pos:line="155" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="155" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="156" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="157" pos:column="5">rv<pos:position pos:line="157" pos:column="7"/></name> <operator pos:line="157" pos:column="8">=<pos:position pos:line="157" pos:column="9"/></operator> <call><name pos:line="157" pos:column="10">nghttp2_session_mem_recv<pos:position pos:line="157" pos:column="34"/></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name><name pos:line="157" pos:column="35">httpc<pos:position pos:line="157" pos:column="40"/></name><operator pos:line="157" pos:column="40">-&gt;<pos:position pos:line="157" pos:column="45"/></operator><name pos:line="157" pos:column="42">h2<pos:position pos:line="157" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="157" pos:column="46">(<pos:position pos:line="157" pos:column="47"/></operator><specifier pos:line="157" pos:column="47">const<pos:position pos:line="157" pos:column="52"/></specifier> <name pos:line="157" pos:column="53">uint8_t<pos:position pos:line="157" pos:column="60"/></name> <operator pos:line="157" pos:column="61">*<pos:position pos:line="157" pos:column="62"/></operator><operator pos:line="157" pos:column="62">)<pos:position pos:line="157" pos:column="63"/></operator><name pos:line="157" pos:column="63">inbuf<pos:position pos:line="157" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="70">nread<pos:position pos:line="157" pos:column="75"/></name></expr></argument>)<pos:position pos:line="157" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="77"/></expr_stmt>

    <if pos:line="159" pos:column="5">if<condition pos:line="159" pos:column="7">(<expr><call><name pos:line="159" pos:column="8">nghttp2_is_fatal<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><operator pos:line="159" pos:column="25">(<pos:position pos:line="159" pos:column="26"/></operator><name pos:line="159" pos:column="26">int<pos:position pos:line="159" pos:column="29"/></name><operator pos:line="159" pos:column="29">)<pos:position pos:line="159" pos:column="30"/></operator><name pos:line="159" pos:column="30">rv<pos:position pos:line="159" pos:column="32"/></name></expr></argument>)<pos:position pos:line="159" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="34"/></condition><then pos:line="159" pos:column="34"> <block pos:line="159" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="160" pos:column="7">failf<pos:position pos:line="160" pos:column="12"/></name><argument_list pos:line="160" pos:column="12">(<argument><expr><name pos:line="160" pos:column="13">data<pos:position pos:line="160" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="19">"nghttp2_session_mem_recv() returned %d:%s\n"<pos:position pos:line="160" pos:column="64"/></literal></expr></argument>,
            <argument><expr><name pos:line="161" pos:column="13">rv<pos:position pos:line="161" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="161" pos:column="17">nghttp2_strerror<pos:position pos:line="161" pos:column="33"/></name><argument_list pos:line="161" pos:column="33">(<argument><expr><operator pos:line="161" pos:column="34">(<pos:position pos:line="161" pos:column="35"/></operator><name pos:line="161" pos:column="35">int<pos:position pos:line="161" pos:column="38"/></name><operator pos:line="161" pos:column="38">)<pos:position pos:line="161" pos:column="39"/></operator><name pos:line="161" pos:column="39">rv<pos:position pos:line="161" pos:column="41"/></name></expr></argument>)<pos:position pos:line="161" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="161" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="162" pos:column="7">*<pos:position pos:line="162" pos:column="8"/></operator><name pos:line="162" pos:column="8">err<pos:position pos:line="162" pos:column="11"/></name> <operator pos:line="162" pos:column="12">=<pos:position pos:line="162" pos:column="13"/></operator> <name pos:line="162" pos:column="14">CURLE_RECV_ERROR<pos:position pos:line="162" pos:column="30"/></name></expr>;<pos:position pos:line="162" pos:column="31"/></expr_stmt>
      <return pos:line="163" pos:column="7">return <expr><operator pos:line="163" pos:column="14">-<pos:position pos:line="163" pos:column="15"/></operator><literal type="number" pos:line="163" pos:column="15">1<pos:position pos:line="163" pos:column="16"/></literal></expr>;<pos:position pos:line="163" pos:column="17"/></return>
    }<pos:position pos:line="164" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="165" pos:column="5">DEBUGF<pos:position pos:line="165" pos:column="11"/></name><argument_list pos:line="165" pos:column="11">(<argument><expr><call><name pos:line="165" pos:column="12">infof<pos:position pos:line="165" pos:column="17"/></name><argument_list pos:line="165" pos:column="17">(<argument><expr><name pos:line="165" pos:column="18">data<pos:position pos:line="165" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="24">"nghttp2_session_mem_recv() returns %zd\n"<pos:position pos:line="165" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="68">rv<pos:position pos:line="165" pos:column="70"/></name></expr></argument>)<pos:position pos:line="165" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="165" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="73"/></expr_stmt>
    <if pos:line="166" pos:column="5">if<condition pos:line="166" pos:column="7">(<expr><name pos:line="166" pos:column="8">nread<pos:position pos:line="166" pos:column="13"/></name> <operator pos:line="166" pos:column="14">==<pos:position pos:line="166" pos:column="16"/></operator> <name pos:line="166" pos:column="17">rv<pos:position pos:line="166" pos:column="19"/></name></expr>)<pos:position pos:line="166" pos:column="20"/></condition><then pos:line="166" pos:column="20"> <block pos:line="166" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="167" pos:column="7">DEBUGF<pos:position pos:line="167" pos:column="13"/></name><argument_list pos:line="167" pos:column="13">(<argument><expr><call><name pos:line="167" pos:column="14">infof<pos:position pos:line="167" pos:column="19"/></name><argument_list pos:line="167" pos:column="19">(<argument><expr><name pos:line="167" pos:column="20">data<pos:position pos:line="167" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="26">"All data in connection buffer processed\n"<pos:position pos:line="167" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="167" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="168" pos:column="7">httpc<pos:position pos:line="168" pos:column="12"/></name><operator pos:line="168" pos:column="12">-&gt;<pos:position pos:line="168" pos:column="17"/></operator><name pos:line="168" pos:column="14">inbuflen<pos:position pos:line="168" pos:column="22"/></name></name> <operator pos:line="168" pos:column="23">=<pos:position pos:line="168" pos:column="24"/></operator> <literal type="number" pos:line="168" pos:column="25">0<pos:position pos:line="168" pos:column="26"/></literal></expr>;<pos:position pos:line="168" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="169" pos:column="7">httpc<pos:position pos:line="169" pos:column="12"/></name><operator pos:line="169" pos:column="12">-&gt;<pos:position pos:line="169" pos:column="17"/></operator><name pos:line="169" pos:column="14">nread_inbuf<pos:position pos:line="169" pos:column="25"/></name></name> <operator pos:line="169" pos:column="26">=<pos:position pos:line="169" pos:column="27"/></operator> <literal type="number" pos:line="169" pos:column="28">0<pos:position pos:line="169" pos:column="29"/></literal></expr>;<pos:position pos:line="169" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="170" pos:column="6"/></block></then>
    <else pos:line="171" pos:column="5">else <block pos:line="171" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="172" pos:column="7">httpc<pos:position pos:line="172" pos:column="12"/></name><operator pos:line="172" pos:column="12">-&gt;<pos:position pos:line="172" pos:column="17"/></operator><name pos:line="172" pos:column="14">nread_inbuf<pos:position pos:line="172" pos:column="25"/></name></name> <operator pos:line="172" pos:column="26">+=<pos:position pos:line="172" pos:column="28"/></operator> <name pos:line="172" pos:column="29">rv<pos:position pos:line="172" pos:column="31"/></name></expr>;<pos:position pos:line="172" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="173" pos:column="7">DEBUGF<pos:position pos:line="173" pos:column="13"/></name><argument_list pos:line="173" pos:column="13">(<argument><expr><call><name pos:line="173" pos:column="14">infof<pos:position pos:line="173" pos:column="19"/></name><argument_list pos:line="173" pos:column="19">(<argument><expr><name pos:line="173" pos:column="20">data<pos:position pos:line="173" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="26">"%zu bytes left in connection buffer\n"<pos:position pos:line="173" pos:column="65"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="174" pos:column="20">httpc<pos:position pos:line="174" pos:column="25"/></name><operator pos:line="174" pos:column="25">-&gt;<pos:position pos:line="174" pos:column="30"/></operator><name pos:line="174" pos:column="27">inbuflen<pos:position pos:line="174" pos:column="35"/></name></name> <operator pos:line="174" pos:column="36">-<pos:position pos:line="174" pos:column="37"/></operator> <name><name pos:line="174" pos:column="38">httpc<pos:position pos:line="174" pos:column="43"/></name><operator pos:line="174" pos:column="43">-&gt;<pos:position pos:line="174" pos:column="48"/></operator><name pos:line="174" pos:column="45">nread_inbuf<pos:position pos:line="174" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="174" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="175" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="176" pos:column="5">/* Always send pending frames in nghttp2 session, because
       nghttp2_session_mem_recv() may queue new frame */</comment>
    <expr_stmt><expr><name pos:line="178" pos:column="5">rv<pos:position pos:line="178" pos:column="7"/></name> <operator pos:line="178" pos:column="8">=<pos:position pos:line="178" pos:column="9"/></operator> <call><name pos:line="178" pos:column="10">h2_session_send<pos:position pos:line="178" pos:column="25"/></name><argument_list pos:line="178" pos:column="25">(<argument><expr><name pos:line="178" pos:column="26">data<pos:position pos:line="178" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="32">httpc<pos:position pos:line="178" pos:column="37"/></name><operator pos:line="178" pos:column="37">-&gt;<pos:position pos:line="178" pos:column="42"/></operator><name pos:line="178" pos:column="39">h2<pos:position pos:line="178" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="43"/></expr_stmt>
    <if pos:line="179" pos:column="5">if<condition pos:line="179" pos:column="7">(<expr><name pos:line="179" pos:column="8">rv<pos:position pos:line="179" pos:column="10"/></name> <operator pos:line="179" pos:column="11">!=<pos:position pos:line="179" pos:column="13"/></operator> <literal type="number" pos:line="179" pos:column="14">0<pos:position pos:line="179" pos:column="15"/></literal></expr>)<pos:position pos:line="179" pos:column="16"/></condition><then pos:line="179" pos:column="16"> <block pos:line="179" pos:column="17">{
      <expr_stmt><expr><operator pos:line="180" pos:column="7">*<pos:position pos:line="180" pos:column="8"/></operator><name pos:line="180" pos:column="8">err<pos:position pos:line="180" pos:column="11"/></name> <operator pos:line="180" pos:column="12">=<pos:position pos:line="180" pos:column="13"/></operator> <name pos:line="180" pos:column="14">CURLE_SEND_ERROR<pos:position pos:line="180" pos:column="30"/></name></expr>;<pos:position pos:line="180" pos:column="31"/></expr_stmt>
      <return pos:line="181" pos:column="7">return <expr><operator pos:line="181" pos:column="14">-<pos:position pos:line="181" pos:column="15"/></operator><literal type="number" pos:line="181" pos:column="15">1<pos:position pos:line="181" pos:column="16"/></literal></expr>;<pos:position pos:line="181" pos:column="17"/></return>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>

    <if pos:line="184" pos:column="5">if<condition pos:line="184" pos:column="7">(<expr><call><name pos:line="184" pos:column="8">should_close_session<pos:position pos:line="184" pos:column="28"/></name><argument_list pos:line="184" pos:column="28">(<argument><expr><name pos:line="184" pos:column="29">httpc<pos:position pos:line="184" pos:column="34"/></name></expr></argument>)<pos:position pos:line="184" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="36"/></condition><then pos:line="184" pos:column="36"> <block pos:line="184" pos:column="37">{
      <expr_stmt><expr><call><name pos:line="185" pos:column="7">DEBUGF<pos:position pos:line="185" pos:column="13"/></name><argument_list pos:line="185" pos:column="13">(<argument><expr><call><name pos:line="185" pos:column="14">infof<pos:position pos:line="185" pos:column="19"/></name><argument_list pos:line="185" pos:column="19">(<argument><expr><name pos:line="185" pos:column="20">data<pos:position pos:line="185" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="26">"http2_recv: nothing to do in this session\n"<pos:position pos:line="185" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="185" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="186" pos:column="7">*<pos:position pos:line="186" pos:column="8"/></operator><name pos:line="186" pos:column="8">err<pos:position pos:line="186" pos:column="11"/></name> <operator pos:line="186" pos:column="12">=<pos:position pos:line="186" pos:column="13"/></operator> <name pos:line="186" pos:column="14">CURLE_HTTP2<pos:position pos:line="186" pos:column="25"/></name></expr>;<pos:position pos:line="186" pos:column="26"/></expr_stmt>
      <return pos:line="187" pos:column="7">return <expr><operator pos:line="187" pos:column="14">-<pos:position pos:line="187" pos:column="15"/></operator><literal type="number" pos:line="187" pos:column="15">1<pos:position pos:line="187" pos:column="16"/></literal></expr>;<pos:position pos:line="187" pos:column="17"/></return>
    }<pos:position pos:line="188" pos:column="6"/></block></then></if>
  }<pos:position pos:line="189" pos:column="4"/></block></else></if>
  <if pos:line="190" pos:column="3">if<condition pos:line="190" pos:column="5">(<expr><name><name pos:line="190" pos:column="6">stream<pos:position pos:line="190" pos:column="12"/></name><operator pos:line="190" pos:column="12">-&gt;<pos:position pos:line="190" pos:column="17"/></operator><name pos:line="190" pos:column="14">memlen<pos:position pos:line="190" pos:column="20"/></name></name></expr>)<pos:position pos:line="190" pos:column="21"/></condition><then pos:line="190" pos:column="21"> <block pos:line="190" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="191" pos:column="5">ssize_t<pos:position pos:line="191" pos:column="12"/></name></type> <name pos:line="191" pos:column="13">retlen<pos:position pos:line="191" pos:column="19"/></name> <init pos:line="191" pos:column="20">= <expr><name><name pos:line="191" pos:column="22">stream<pos:position pos:line="191" pos:column="28"/></name><operator pos:line="191" pos:column="28">-&gt;<pos:position pos:line="191" pos:column="33"/></operator><name pos:line="191" pos:column="30">memlen<pos:position pos:line="191" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="191" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="192" pos:column="5">DEBUGF<pos:position pos:line="192" pos:column="11"/></name><argument_list pos:line="192" pos:column="11">(<argument><expr><call><name pos:line="192" pos:column="12">infof<pos:position pos:line="192" pos:column="17"/></name><argument_list pos:line="192" pos:column="17">(<argument><expr><name pos:line="192" pos:column="18">data<pos:position pos:line="192" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="24">"http2_recv: returns %zd for stream %u\n"<pos:position pos:line="192" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><name pos:line="193" pos:column="18">retlen<pos:position pos:line="193" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="26">stream<pos:position pos:line="193" pos:column="32"/></name><operator pos:line="193" pos:column="32">-&gt;<pos:position pos:line="193" pos:column="37"/></operator><name pos:line="193" pos:column="34">stream_id<pos:position pos:line="193" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="193" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="193" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="194" pos:column="5">stream<pos:position pos:line="194" pos:column="11"/></name><operator pos:line="194" pos:column="11">-&gt;<pos:position pos:line="194" pos:column="16"/></operator><name pos:line="194" pos:column="13">memlen<pos:position pos:line="194" pos:column="19"/></name></name> <operator pos:line="194" pos:column="20">=<pos:position pos:line="194" pos:column="21"/></operator> <literal type="number" pos:line="194" pos:column="22">0<pos:position pos:line="194" pos:column="23"/></literal></expr>;<pos:position pos:line="194" pos:column="24"/></expr_stmt>

    <if pos:line="196" pos:column="5">if<condition pos:line="196" pos:column="7">(<expr><name><name pos:line="196" pos:column="8">httpc<pos:position pos:line="196" pos:column="13"/></name><operator pos:line="196" pos:column="13">-&gt;<pos:position pos:line="196" pos:column="18"/></operator><name pos:line="196" pos:column="15">pause_stream_id<pos:position pos:line="196" pos:column="30"/></name></name> <operator pos:line="196" pos:column="31">==<pos:position pos:line="196" pos:column="33"/></operator> <name><name pos:line="196" pos:column="34">stream<pos:position pos:line="196" pos:column="40"/></name><operator pos:line="196" pos:column="40">-&gt;<pos:position pos:line="196" pos:column="45"/></operator><name pos:line="196" pos:column="42">stream_id<pos:position pos:line="196" pos:column="51"/></name></name></expr>)<pos:position pos:line="196" pos:column="52"/></condition><then pos:line="196" pos:column="52"> <block pos:line="196" pos:column="53">{
      <comment type="block" pos:line="197" pos:column="7">/* data for this stream is returned now, but this stream caused a pause
         already so we need it called again asap */</comment>
      <expr_stmt><expr><call><name pos:line="199" pos:column="7">DEBUGF<pos:position pos:line="199" pos:column="13"/></name><argument_list pos:line="199" pos:column="13">(<argument><expr><call><name pos:line="199" pos:column="14">infof<pos:position pos:line="199" pos:column="19"/></name><argument_list pos:line="199" pos:column="19">(<argument><expr><name pos:line="199" pos:column="20">data<pos:position pos:line="199" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="26">"Data returned for PAUSED stream %u\n"<pos:position pos:line="199" pos:column="64"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="200" pos:column="20">stream<pos:position pos:line="200" pos:column="26"/></name><operator pos:line="200" pos:column="26">-&gt;<pos:position pos:line="200" pos:column="31"/></operator><name pos:line="200" pos:column="28">stream_id<pos:position pos:line="200" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="200" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="201" pos:column="6"/></block></then>
    <elseif pos:line="202" pos:column="5">else <if pos:line="202" pos:column="10">if<condition pos:line="202" pos:column="12">(<expr><operator pos:line="202" pos:column="13">!<pos:position pos:line="202" pos:column="14"/></operator><name><name pos:line="202" pos:column="14">stream<pos:position pos:line="202" pos:column="20"/></name><operator pos:line="202" pos:column="20">-&gt;<pos:position pos:line="202" pos:column="25"/></operator><name pos:line="202" pos:column="22">closed<pos:position pos:line="202" pos:column="28"/></name></name></expr>)<pos:position pos:line="202" pos:column="29"/></condition><then pos:line="202" pos:column="29"> <block pos:line="202" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="203" pos:column="7">DEBUGASSERT<pos:position pos:line="203" pos:column="18"/></name><argument_list pos:line="203" pos:column="18">(<argument><expr><name><name pos:line="203" pos:column="19">httpc<pos:position pos:line="203" pos:column="24"/></name><operator pos:line="203" pos:column="24">-&gt;<pos:position pos:line="203" pos:column="29"/></operator><name pos:line="203" pos:column="26">drain_total<pos:position pos:line="203" pos:column="37"/></name></name> <operator pos:line="203" pos:column="38">&gt;=<pos:position pos:line="203" pos:column="43"/></operator> <name><name pos:line="203" pos:column="41">data<pos:position pos:line="203" pos:column="45"/></name><operator pos:line="203" pos:column="45">-&gt;<pos:position pos:line="203" pos:column="50"/></operator><name pos:line="203" pos:column="47">state<pos:position pos:line="203" pos:column="52"/></name><operator pos:line="203" pos:column="52">.<pos:position pos:line="203" pos:column="53"/></operator><name pos:line="203" pos:column="53">drain<pos:position pos:line="203" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="204" pos:column="7">httpc<pos:position pos:line="204" pos:column="12"/></name><operator pos:line="204" pos:column="12">-&gt;<pos:position pos:line="204" pos:column="17"/></operator><name pos:line="204" pos:column="14">drain_total<pos:position pos:line="204" pos:column="25"/></name></name> <operator pos:line="204" pos:column="26">-=<pos:position pos:line="204" pos:column="28"/></operator> <name><name pos:line="204" pos:column="29">data<pos:position pos:line="204" pos:column="33"/></name><operator pos:line="204" pos:column="33">-&gt;<pos:position pos:line="204" pos:column="38"/></operator><name pos:line="204" pos:column="35">state<pos:position pos:line="204" pos:column="40"/></name><operator pos:line="204" pos:column="40">.<pos:position pos:line="204" pos:column="41"/></operator><name pos:line="204" pos:column="41">drain<pos:position pos:line="204" pos:column="46"/></name></name></expr>;<pos:position pos:line="204" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="205" pos:column="7">data<pos:position pos:line="205" pos:column="11"/></name><operator pos:line="205" pos:column="11">-&gt;<pos:position pos:line="205" pos:column="16"/></operator><name pos:line="205" pos:column="13">state<pos:position pos:line="205" pos:column="18"/></name><operator pos:line="205" pos:column="18">.<pos:position pos:line="205" pos:column="19"/></operator><name pos:line="205" pos:column="19">drain<pos:position pos:line="205" pos:column="24"/></name></name> <operator pos:line="205" pos:column="25">=<pos:position pos:line="205" pos:column="26"/></operator> <literal type="number" pos:line="205" pos:column="27">0<pos:position pos:line="205" pos:column="28"/></literal></expr>;<pos:position pos:line="205" pos:column="29"/></expr_stmt> <comment type="block" pos:line="205" pos:column="30">/* this stream is hereby drained */</comment>
    }<pos:position pos:line="206" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="208" pos:column="5">return <expr><name pos:line="208" pos:column="12">retlen<pos:position pos:line="208" pos:column="18"/></name></expr>;<pos:position pos:line="208" pos:column="19"/></return>
  }<pos:position pos:line="209" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="210" pos:column="3">/* If stream is closed, return 0 to signal the http routine to close
     the connection */</comment>
  <if pos:line="212" pos:column="3">if<condition pos:line="212" pos:column="5">(<expr><name><name pos:line="212" pos:column="6">stream<pos:position pos:line="212" pos:column="12"/></name><operator pos:line="212" pos:column="12">-&gt;<pos:position pos:line="212" pos:column="17"/></operator><name pos:line="212" pos:column="14">closed<pos:position pos:line="212" pos:column="20"/></name></name></expr>)<pos:position pos:line="212" pos:column="21"/></condition><then pos:line="212" pos:column="21"> <block pos:line="212" pos:column="22">{
    <return pos:line="213" pos:column="5">return <expr><call><name pos:line="213" pos:column="12">http2_handle_stream_close<pos:position pos:line="213" pos:column="37"/></name><argument_list pos:line="213" pos:column="37">(<argument><expr><name pos:line="213" pos:column="38">conn<pos:position pos:line="213" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="44">data<pos:position pos:line="213" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="50">stream<pos:position pos:line="213" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="58">err<pos:position pos:line="213" pos:column="61"/></name></expr></argument>)<pos:position pos:line="213" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="63"/></return>
  }<pos:position pos:line="214" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="215" pos:column="3">*<pos:position pos:line="215" pos:column="4"/></operator><name pos:line="215" pos:column="4">err<pos:position pos:line="215" pos:column="7"/></name> <operator pos:line="215" pos:column="8">=<pos:position pos:line="215" pos:column="9"/></operator> <name pos:line="215" pos:column="10">CURLE_AGAIN<pos:position pos:line="215" pos:column="21"/></name></expr>;<pos:position pos:line="215" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="216" pos:column="3">DEBUGF<pos:position pos:line="216" pos:column="9"/></name><argument_list pos:line="216" pos:column="9">(<argument><expr><call><name pos:line="216" pos:column="10">infof<pos:position pos:line="216" pos:column="15"/></name><argument_list pos:line="216" pos:column="15">(<argument><expr><name pos:line="216" pos:column="16">data<pos:position pos:line="216" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="22">"http2_recv returns AGAIN for stream %u\n"<pos:position pos:line="216" pos:column="64"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="217" pos:column="16">stream<pos:position pos:line="217" pos:column="22"/></name><operator pos:line="217" pos:column="22">-&gt;<pos:position pos:line="217" pos:column="27"/></operator><name pos:line="217" pos:column="24">stream_id<pos:position pos:line="217" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="217" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="36"/></expr_stmt>
  <return pos:line="218" pos:column="3">return <expr><operator pos:line="218" pos:column="10">-<pos:position pos:line="218" pos:column="11"/></operator><literal type="number" pos:line="218" pos:column="11">1<pos:position pos:line="218" pos:column="12"/></literal></expr>;<pos:position pos:line="218" pos:column="13"/></return>
}<pos:position pos:line="219" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_381.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">Curl_FormBoundary<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">retstring<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">randomizer<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>   <comment type="block" pos:line="4" pos:column="28">/* this is just so that two boundaries within
                              the same form won't be identical */</comment>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="8" pos:column="3">static<pos:position pos:line="8" pos:column="9"/></specifier> <type><specifier pos:line="8" pos:column="10">const<pos:position pos:line="8" pos:column="15"/></specifier> <name pos:line="8" pos:column="16">char<pos:position pos:line="8" pos:column="20"/></name></type> <name><name pos:line="8" pos:column="21">table16<pos:position pos:line="8" pos:column="28"/></name><index pos:line="8" pos:column="28">[]<pos:position pos:line="8" pos:column="30"/></index></name><init pos:line="8" pos:column="30">=<expr><literal type="string" pos:line="8" pos:column="31">"abcdef0123456789"<pos:position pos:line="8" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">retstring<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">char<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator><call><name pos:line="10" pos:column="23">malloc<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">BOUNDARY_LENGTH<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">+<pos:position pos:line="10" pos:column="46"/></operator><literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">retstring<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="13" pos:column="18">/* failed */</comment>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">srand<pos:position pos:line="15" pos:column="8"/></name><argument_list pos:line="15" pos:column="8">(<argument><expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">unsigned<pos:position pos:line="15" pos:column="18"/></name> <name pos:line="15" pos:column="19">int<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">)<pos:position pos:line="15" pos:column="23"/></operator><call><name pos:line="15" pos:column="23">time<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call><operator pos:line="15" pos:column="33">+<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">randomizer<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">++<pos:position pos:line="15" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt> <comment type="block" pos:line="15" pos:column="49">/* seed */</comment>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">strcpy<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><name pos:line="17" pos:column="10">retstring<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="21">"----------------------------"<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>

  <for pos:line="19" pos:column="3">for<control pos:line="19" pos:column="6">(<init><expr><name pos:line="19" pos:column="7">i<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator><call><name pos:line="19" pos:column="9">strlen<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">retstring<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></init> <condition><expr><name pos:line="19" pos:column="28">i<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">&lt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">BOUNDARY_LENGTH<pos:position pos:line="19" pos:column="45"/></name></expr>;<pos:position pos:line="19" pos:column="46"/></condition> <incr><expr><name pos:line="19" pos:column="47">i<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">++<pos:position pos:line="19" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="51"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="5">retstring<pos:position pos:line="20" pos:column="14"/></name><index pos:line="20" pos:column="14">[<expr><name pos:line="20" pos:column="15">i<pos:position pos:line="20" pos:column="16"/></name></expr>]<pos:position pos:line="20" pos:column="17"/></index></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name><name pos:line="20" pos:column="20">table16<pos:position pos:line="20" pos:column="27"/></name><index pos:line="20" pos:column="27">[<expr><call><name pos:line="20" pos:column="28">rand<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">()<pos:position pos:line="20" pos:column="34"/></argument_list></call><operator pos:line="20" pos:column="34">%<pos:position pos:line="20" pos:column="35"/></operator><literal type="number" pos:line="20" pos:column="35">16<pos:position pos:line="20" pos:column="37"/></literal></expr>]<pos:position pos:line="20" pos:column="38"/></index></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt></block></for>

  <comment type="block" pos:line="22" pos:column="3">/* 28 dashes and 12 hexadecimal digits makes 12^16 (184884258895036416)
     combinations */</comment>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">retstring<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><name pos:line="24" pos:column="13">BOUNDARY_LENGTH<pos:position pos:line="24" pos:column="28"/></name></expr>]<pos:position pos:line="24" pos:column="29"/></index></name><operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt> <comment type="block" pos:line="24" pos:column="33">/* zero terminate */</comment>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">retstring<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_778_curl-7.35.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">GlobCode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">glob_parse<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">URLGlob<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">glob<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">pattern<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">pos<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">unsigned<pos:position pos:line="2" pos:column="48"/></name> <name pos:line="2" pos:column="49">long<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">amount<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* processes a literal string component of a URL
     special characters '{' and '[' branch to set/range processing functions
   */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">GlobCode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">res<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">GLOB_OK<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">globindex<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt> <comment type="block" pos:line="8" pos:column="22">/* count "actual" globs */</comment>

  <expr_stmt><expr><operator pos:line="10" pos:column="3">*<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">amount<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>

  <while pos:line="12" pos:column="3">while<condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">pattern<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&amp;&amp;<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">res<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition> <block pos:line="12" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">buf<pos:position pos:line="13" pos:column="14"/></name> <init pos:line="13" pos:column="15">= <expr><name><name pos:line="13" pos:column="17">glob<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">glob_buffer<pos:position pos:line="13" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">sublen<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <while pos:line="15" pos:column="5">while<condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">pattern<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&amp;&amp;<pos:position pos:line="15" pos:column="30"/></operator> <operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">pattern<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">!=<pos:position pos:line="15" pos:column="34"/></operator> <literal type="char" pos:line="15" pos:column="35">'{'<pos:position pos:line="15" pos:column="38"/></literal> <operator pos:line="15" pos:column="39">&amp;&amp;<pos:position pos:line="15" pos:column="49"/></operator> <operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">pattern<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">!=<pos:position pos:line="15" pos:column="53"/></operator> <literal type="char" pos:line="15" pos:column="54">'['<pos:position pos:line="15" pos:column="57"/></literal></expr>)<pos:position pos:line="15" pos:column="58"/></condition> <block pos:line="15" pos:column="59">{
      <if pos:line="16" pos:column="7">if<condition pos:line="16" pos:column="9">(<expr><operator pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">pattern<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <literal type="char" pos:line="16" pos:column="22">'}'<pos:position pos:line="16" pos:column="25"/></literal> <operator pos:line="16" pos:column="26">||<pos:position pos:line="16" pos:column="28"/></operator> <operator pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">pattern<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <literal type="char" pos:line="16" pos:column="41">']'<pos:position pos:line="16" pos:column="44"/></literal></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">GLOBERROR<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"unmatched close brace/bracket"<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">pos<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">GLOB_ERROR<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></return></block></then></if>

      <comment type="block" pos:line="19" pos:column="7">/* only allow \ to escape known "special letters" */</comment>
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><operator pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">pattern<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <literal type="char" pos:line="20" pos:column="22">'\\'<pos:position pos:line="20" pos:column="26"/></literal> <operator pos:line="20" pos:column="27">&amp;&amp;<pos:position pos:line="20" pos:column="37"/></operator>
         <operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></operator><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">pattern<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">+<pos:position pos:line="21" pos:column="21"/></operator><literal type="number" pos:line="21" pos:column="21">1<pos:position pos:line="21" pos:column="22"/></literal><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">==<pos:position pos:line="21" pos:column="26"/></operator> <literal type="char" pos:line="21" pos:column="27">'{'<pos:position pos:line="21" pos:column="30"/></literal> <operator pos:line="21" pos:column="31">||<pos:position pos:line="21" pos:column="33"/></operator> <operator pos:line="21" pos:column="34">*<pos:position pos:line="21" pos:column="35"/></operator><operator pos:line="21" pos:column="35">(<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">pattern<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">+<pos:position pos:line="21" pos:column="44"/></operator><literal type="number" pos:line="21" pos:column="44">1<pos:position pos:line="21" pos:column="45"/></literal><operator pos:line="21" pos:column="45">)<pos:position pos:line="21" pos:column="46"/></operator> <operator pos:line="21" pos:column="47">==<pos:position pos:line="21" pos:column="49"/></operator> <literal type="char" pos:line="21" pos:column="50">'['<pos:position pos:line="21" pos:column="53"/></literal> <operator pos:line="21" pos:column="54">||<pos:position pos:line="21" pos:column="56"/></operator>
          <operator pos:line="22" pos:column="11">*<pos:position pos:line="22" pos:column="12"/></operator><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">pattern<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">+<pos:position pos:line="22" pos:column="21"/></operator><literal type="number" pos:line="22" pos:column="21">1<pos:position pos:line="22" pos:column="22"/></literal><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">==<pos:position pos:line="22" pos:column="26"/></operator> <literal type="char" pos:line="22" pos:column="27">'}'<pos:position pos:line="22" pos:column="30"/></literal> <operator pos:line="22" pos:column="31">||<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="34">*<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">(<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">pattern<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">+<pos:position pos:line="22" pos:column="44"/></operator><literal type="number" pos:line="22" pos:column="44">1<pos:position pos:line="22" pos:column="45"/></literal><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator> <operator pos:line="22" pos:column="47">==<pos:position pos:line="22" pos:column="49"/></operator> <literal type="char" pos:line="22" pos:column="50">']'<pos:position pos:line="22" pos:column="53"/></literal><operator pos:line="22" pos:column="53">)<pos:position pos:line="22" pos:column="54"/></operator></expr> )<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56"> <block pos:line="22" pos:column="57">{

        <comment type="block" pos:line="24" pos:column="9">/* escape character, skip '\' */</comment>
        <expr_stmt><expr><operator pos:line="25" pos:column="9">++<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">pattern<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">++<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">pos<pos:position pos:line="26" pos:column="14"/></name></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="28" pos:column="7">*<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">buf<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">++<pos:position pos:line="28" pos:column="13"/></operator> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <operator pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">pattern<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">++<pos:position pos:line="28" pos:column="26"/></operator></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt> <comment type="block" pos:line="28" pos:column="28">/* copy character to literal */</comment>
      <expr_stmt><expr><operator pos:line="29" pos:column="7">++<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">pos<pos:position pos:line="29" pos:column="12"/></name></expr>;<pos:position pos:line="29" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">sublen<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></while>
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name pos:line="32" pos:column="8">sublen<pos:position pos:line="32" pos:column="14"/></name></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15"> <block pos:line="32" pos:column="16">{
      <comment type="block" pos:line="33" pos:column="7">/* we got a literal string, add it as a single-item list */</comment>
      <expr_stmt><expr><operator pos:line="34" pos:column="7">*<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">buf<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="char" pos:line="34" pos:column="14">'\0'<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">res<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">glob_fixed<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">glob<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="30">glob<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">glob_buffer<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">sublen<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
      <switch pos:line="38" pos:column="7">switch <condition pos:line="38" pos:column="14">(<expr><operator pos:line="38" pos:column="15">*<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">pattern<pos:position pos:line="38" pos:column="23"/></name></expr>)<pos:position pos:line="38" pos:column="24"/></condition> <block pos:line="38" pos:column="25">{
      <case pos:line="39" pos:column="7">case <expr><literal type="char" pos:line="39" pos:column="12">'\0'<pos:position pos:line="39" pos:column="16"/></literal></expr>:<pos:position pos:line="39" pos:column="17"/></case> <comment type="block" pos:line="39" pos:column="18">/* done  */</comment>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>

      <case pos:line="42" pos:column="7">case <expr><literal type="char" pos:line="42" pos:column="12">'{'<pos:position pos:line="42" pos:column="15"/></literal></expr>:<pos:position pos:line="42" pos:column="16"/></case>
        <comment type="block" pos:line="43" pos:column="9">/* process set pattern */</comment>
        <expr_stmt><expr><name pos:line="44" pos:column="9">pattern<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">++<pos:position pos:line="44" pos:column="18"/></operator></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">pos<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">++<pos:position pos:line="45" pos:column="14"/></operator></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">res<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">glob_set<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">glob<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="30">&amp;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="31">pattern<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="41">pos<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">amount<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="54">globindex<pos:position pos:line="46" pos:column="63"/></name><operator pos:line="46" pos:column="63">++<pos:position pos:line="46" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>

      <case pos:line="49" pos:column="7">case <expr><literal type="char" pos:line="49" pos:column="12">'['<pos:position pos:line="49" pos:column="15"/></literal></expr>:<pos:position pos:line="49" pos:column="16"/></case>
        <comment type="block" pos:line="50" pos:column="9">/* process range pattern */</comment>
        <expr_stmt><expr><name pos:line="51" pos:column="9">pattern<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">++<pos:position pos:line="51" pos:column="18"/></operator></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">pos<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">++<pos:position pos:line="52" pos:column="14"/></operator></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">res<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">glob_range<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">glob<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="33">pattern<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="42">&amp;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="43">pos<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">amount<pos:position pos:line="53" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="56">globindex<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">++<pos:position pos:line="53" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="69"/></expr_stmt>
        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>
      }<pos:position pos:line="55" pos:column="8"/></block></switch>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>

    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><operator pos:line="58" pos:column="8">++<pos:position pos:line="58" pos:column="10"/></operator><name><name pos:line="58" pos:column="10">glob<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">size<pos:position pos:line="58" pos:column="20"/></name></name> <operator pos:line="58" pos:column="21">&gt;<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="23">GLOB_PATTERN_NUM<pos:position pos:line="58" pos:column="39"/></name></expr>)<pos:position pos:line="58" pos:column="40"/></condition><then pos:line="58" pos:column="40">
      <block type="pseudo"><return pos:line="59" pos:column="7">return <expr><call><name pos:line="59" pos:column="14">GLOBERROR<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><literal type="string" pos:line="59" pos:column="24">"too many globs"<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">pos<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">GLOB_ERROR<pos:position pos:line="59" pos:column="57"/></name></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></return></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></while>
  <return pos:line="61" pos:column="3">return <expr><name pos:line="61" pos:column="10">res<pos:position pos:line="61" pos:column="13"/></name></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

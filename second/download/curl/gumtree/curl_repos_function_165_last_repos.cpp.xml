<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_165_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">conn<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">code<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">std<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">::<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">string<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">title<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <comment type="line" pos:line="7" pos:column="3">// Ensure one argument is given</comment>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">argc<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">!=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">2<pos:position pos:line="9" pos:column="15"/></literal></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16"> <block pos:line="9" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stderr<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="21">"Usage: %s &lt;url&gt;\n"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="42">argv<pos:position pos:line="10" pos:column="46"/></name><index pos:line="10" pos:column="46">[<expr><literal type="number" pos:line="10" pos:column="47">0<pos:position pos:line="10" pos:column="48"/></literal></expr>]<pos:position pos:line="10" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">exit<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">EXIT_FAILURE<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">curl_global_init<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">CURL_GLOBAL_DEFAULT<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>

  <comment type="line" pos:line="16" pos:column="3">// Initialize CURL connection</comment>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><call><name pos:line="18" pos:column="7">init<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">conn<pos:position pos:line="18" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="18">argv<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><literal type="number" pos:line="18" pos:column="23">1<pos:position pos:line="18" pos:column="24"/></literal></expr>]<pos:position pos:line="18" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">fprintf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">stderr<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="21">"Connection initializion failed\n"<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">exit<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">EXIT_FAILURE<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="line" pos:line="23" pos:column="3">// Retrieve content for the URL</comment>

  <expr_stmt><expr><name pos:line="25" pos:column="3">code<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">curl_easy_perform<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">conn<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">curl_easy_cleanup<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">conn<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name pos:line="28" pos:column="6">code<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">!=<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">CURLE_OK<pos:position pos:line="28" pos:column="22"/></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">fprintf<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">stderr<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="21">"Failed to get '%s' [%s]\n"<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="50">argv<pos:position pos:line="29" pos:column="54"/></name><index pos:line="29" pos:column="54">[<expr><literal type="number" pos:line="29" pos:column="55">1<pos:position pos:line="29" pos:column="56"/></literal></expr>]<pos:position pos:line="29" pos:column="57"/></index></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">errorBuffer<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">exit<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name pos:line="30" pos:column="10">EXIT_FAILURE<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <comment type="line" pos:line="33" pos:column="3">// Parse the (assumed) HTML code</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">parseHtml<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">buffer<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="21">title<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>

  <comment type="line" pos:line="36" pos:column="3">// Display the extracted title</comment>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">printf<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><literal type="string" pos:line="37" pos:column="10">"Title: %s\n"<pos:position pos:line="37" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="37" pos:column="25">title<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">.<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">c_str<pos:position pos:line="37" pos:column="36"/></name></name><argument_list pos:line="37" pos:column="36">()<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>

  <return pos:line="39" pos:column="3">return <expr><name pos:line="39" pos:column="10">EXIT_SUCCESS<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_769_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multi_getsock<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">Curl_one_easy<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">easy<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">curl_socket_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">socks<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="48">/* points to numsocks number
                                                 of sockets */</comment>
                         <parameter><decl><type><name pos:line="4" pos:column="26">int<pos:position pos:line="4" pos:column="29"/></name></type> <name pos:line="4" pos:column="30">numsocks<pos:position pos:line="4" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="39"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <comment type="block" pos:line="6" pos:column="3">/* If the pipe broke, or if there's no connection left for this easy handle,
     then we MUST bail out now with no bitmask set. The no connection case can
     happen when this is called from curl_multi_remove_handle() =&gt;
     singlesocket() =&gt; multi_getsock().
  */</comment>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name><name pos:line="12" pos:column="6">easy<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">easy_handle<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">state<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">pipe_broke<pos:position pos:line="12" pos:column="41"/></name></name> <operator pos:line="12" pos:column="42">||<pos:position pos:line="12" pos:column="44"/></operator>
      <operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name><name pos:line="13" pos:column="8">easy<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">easy_conn<pos:position pos:line="13" pos:column="23"/></name></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
    <return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name><name pos:line="17" pos:column="6">easy<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">state<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">&gt;<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="20">CURLM_STATE_CONNECT<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">&amp;&amp;<pos:position pos:line="17" pos:column="50"/></operator>
      <name><name pos:line="18" pos:column="7">easy<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">state<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">&lt;<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="21">CURLM_STATE_COMPLETED<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
    <comment type="block" pos:line="19" pos:column="5">/* Set up ownership correctly */</comment>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">easy<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">easy_conn<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">data<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name><name pos:line="20" pos:column="29">easy<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">easy_handle<pos:position pos:line="20" pos:column="46"/></name></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <switch pos:line="23" pos:column="3">switch<condition pos:line="23" pos:column="9">(<expr><name><name pos:line="23" pos:column="10">easy<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">state<pos:position pos:line="23" pos:column="21"/></name></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition> <block pos:line="23" pos:column="23">{
  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">CURLM_STATE_TOOFAST<pos:position pos:line="24" pos:column="27"/></name></expr>:<pos:position pos:line="24" pos:column="28"/></case>  <comment type="block" pos:line="24" pos:column="30">/* returns 0, so will not select. */</comment>
  <default pos:line="25" pos:column="3">default:<pos:position pos:line="25" pos:column="11"/></default>
    <comment type="block" pos:line="26" pos:column="5">/* this will get called with CURLM_STATE_COMPLETED when a handle is
       removed */</comment>
    <return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return>

  <case pos:line="30" pos:column="3">case <expr><name pos:line="30" pos:column="8">CURLM_STATE_WAITRESOLVE<pos:position pos:line="30" pos:column="31"/></name></expr>:<pos:position pos:line="30" pos:column="32"/></case>
    <return pos:line="31" pos:column="5">return <expr><call><name pos:line="31" pos:column="12">Curl_resolv_getsock<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">easy<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">easy_conn<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">socks<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">numsocks<pos:position pos:line="31" pos:column="64"/></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></return>

  <case pos:line="33" pos:column="3">case <expr><name pos:line="33" pos:column="8">CURLM_STATE_PROTOCONNECT<pos:position pos:line="33" pos:column="32"/></name></expr>:<pos:position pos:line="33" pos:column="33"/></case>
    <return pos:line="34" pos:column="5">return <expr><call><name pos:line="34" pos:column="12">Curl_protocol_getsock<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name><name pos:line="34" pos:column="34">easy<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">easy_conn<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">socks<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">numsocks<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></return>

  <case pos:line="36" pos:column="3">case <expr><name pos:line="36" pos:column="8">CURLM_STATE_DOING<pos:position pos:line="36" pos:column="25"/></name></expr>:<pos:position pos:line="36" pos:column="26"/></case>
    <return pos:line="37" pos:column="5">return <expr><call><name pos:line="37" pos:column="12">Curl_doing_getsock<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name><name pos:line="37" pos:column="31">easy<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">easy_conn<pos:position pos:line="37" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">socks<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">numsocks<pos:position pos:line="37" pos:column="63"/></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></return>

  <case pos:line="39" pos:column="3">case <expr><name pos:line="39" pos:column="8">CURLM_STATE_WAITPROXYCONNECT<pos:position pos:line="39" pos:column="36"/></name></expr>:<pos:position pos:line="39" pos:column="37"/></case>
  <case pos:line="40" pos:column="3">case <expr><name pos:line="40" pos:column="8">CURLM_STATE_WAITCONNECT<pos:position pos:line="40" pos:column="31"/></name></expr>:<pos:position pos:line="40" pos:column="32"/></case>
    <return pos:line="41" pos:column="5">return <expr><call><name pos:line="41" pos:column="12">waitconnect_getsock<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name><name pos:line="41" pos:column="32">easy<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">-&gt;<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="38">easy_conn<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">socks<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">numsocks<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></return>

  <case pos:line="43" pos:column="3">case <expr><name pos:line="43" pos:column="8">CURLM_STATE_DO_MORE<pos:position pos:line="43" pos:column="27"/></name></expr>:<pos:position pos:line="43" pos:column="28"/></case>
    <return pos:line="44" pos:column="5">return <expr><call><name pos:line="44" pos:column="12">domore_getsock<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">easy<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">easy_conn<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">socks<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">numsocks<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></return>

  <case pos:line="46" pos:column="3">case <expr><name pos:line="46" pos:column="8">CURLM_STATE_PERFORM<pos:position pos:line="46" pos:column="27"/></name></expr>:<pos:position pos:line="46" pos:column="28"/></case>
  <case pos:line="47" pos:column="3">case <expr><name pos:line="47" pos:column="8">CURLM_STATE_WAITPERFORM<pos:position pos:line="47" pos:column="31"/></name></expr>:<pos:position pos:line="47" pos:column="32"/></case>
    <return pos:line="48" pos:column="5">return <expr><call><name pos:line="48" pos:column="12">Curl_single_getsock<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name><name pos:line="48" pos:column="32">easy<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">-&gt;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="38">easy_conn<pos:position pos:line="48" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">socks<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">numsocks<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></switch>

}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

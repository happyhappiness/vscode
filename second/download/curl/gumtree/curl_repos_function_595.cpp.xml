<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_595.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Curl_sec_login<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">struct<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">connectdata<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">conn<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">Curl_sec_client_mech<pos:position pos:line="5" pos:column="36"/></name></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier> <specifier pos:line="5" pos:column="39">const<pos:position pos:line="5" pos:column="44"/></specifier> <modifier pos:line="5" pos:column="45">*<pos:position pos:line="5" pos:column="46"/></modifier></type><name pos:line="5" pos:column="46">m<pos:position pos:line="5" pos:column="47"/></name></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name><init pos:line="7" pos:column="29">=<expr><name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">data<pos:position pos:line="7" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ftpcode<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <for pos:line="10" pos:column="3">for<control pos:line="10" pos:column="6">(<init><expr><name pos:line="10" pos:column="7">m<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name pos:line="10" pos:column="11">mechs<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></init> <condition><expr><operator pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">m<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">m<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">name<pos:position pos:line="10" pos:column="34"/></name></name></expr>;<pos:position pos:line="10" pos:column="35"/></condition> <incr><expr><name pos:line="10" pos:column="36">m<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">++<pos:position pos:line="10" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="40"/></control> <block pos:line="10" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">void<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">tmp<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">tmp<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">realloc<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">conn<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">app_data<pos:position pos:line="13" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><operator pos:line="13" pos:column="35">(<pos:position pos:line="13" pos:column="36"/></operator><operator pos:line="13" pos:column="36">*<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">m<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">)<pos:position pos:line="13" pos:column="39"/></operator><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">size<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">tmp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">failf<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">data<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="20">"realloc %u failed"<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>, <argument><expr><name><operator pos:line="15" pos:column="41">(<pos:position pos:line="15" pos:column="42"/></operator><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">m<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">)<pos:position pos:line="15" pos:column="45"/></operator><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">size<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">conn<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">app_data<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">tmp<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>

    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name><operator pos:line="20" pos:column="8">(<pos:position pos:line="20" pos:column="9"/></operator><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">m<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">)<pos:position pos:line="20" pos:column="12"/></operator><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">init<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">&amp;&amp;<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><operator pos:line="20" pos:column="23">*<pos:position pos:line="20" pos:column="24"/></operator><name><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">m<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">init<pos:position pos:line="20" pos:column="34"/></name></name><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator><operator pos:line="20" pos:column="35">(<pos:position pos:line="20" pos:column="36"/></operator><name><name pos:line="20" pos:column="36">conn<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">app_data<pos:position pos:line="20" pos:column="50"/></name></name><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator> <operator pos:line="20" pos:column="52">!=<pos:position pos:line="20" pos:column="54"/></operator> <literal type="number" pos:line="20" pos:column="55">0<pos:position pos:line="20" pos:column="56"/></literal></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57"> <block pos:line="20" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">infof<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">data<pos:position pos:line="21" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="19">"Skipping %s...\n"<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>, <argument><expr><name><operator pos:line="21" pos:column="39">(<pos:position pos:line="21" pos:column="40"/></operator><operator pos:line="21" pos:column="40">*<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">m<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">)<pos:position pos:line="21" pos:column="43"/></operator><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">name<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
      <continue pos:line="22" pos:column="7">continue;<pos:position pos:line="22" pos:column="16"/></continue>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">infof<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">data<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="17">"Trying %s...\n"<pos:position pos:line="24" pos:column="33"/></literal></expr></argument>, <argument><expr><name><operator pos:line="24" pos:column="35">(<pos:position pos:line="24" pos:column="36"/></operator><operator pos:line="24" pos:column="36">*<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">m<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">name<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>

    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><call><name pos:line="26" pos:column="8">Curl_ftpsendf<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">conn<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">"AUTH %s"<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>, <argument><expr><name><operator pos:line="26" pos:column="39">(<pos:position pos:line="26" pos:column="40"/></operator><operator pos:line="26" pos:column="40">*<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">m<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">)<pos:position pos:line="26" pos:column="43"/></operator><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">name<pos:position pos:line="26" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51">
      <block type="pseudo"><return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return></block></then></if>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><call><name pos:line="29" pos:column="8">Curl_GetFTPResponse<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="29">nread<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">conn<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="43">ftpcode<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="52"/></condition><then pos:line="29" pos:column="52">
      <block type="pseudo"><return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></return></block></then></if>

    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><name><name pos:line="32" pos:column="8">conn<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">data<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">state<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">.<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">buffer<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr>]<pos:position pos:line="32" pos:column="35"/></index></name> <operator pos:line="32" pos:column="36">!=<pos:position pos:line="32" pos:column="38"/></operator> <literal type="char" pos:line="32" pos:column="39">'3'<pos:position pos:line="32" pos:column="42"/></literal></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then><block pos:line="32" pos:column="43">{
      <switch pos:line="33" pos:column="7">switch<condition pos:line="33" pos:column="13">(<expr><name pos:line="33" pos:column="14">ftpcode<pos:position pos:line="33" pos:column="21"/></name></expr>)<pos:position pos:line="33" pos:column="22"/></condition> <block pos:line="33" pos:column="23">{
      <case pos:line="34" pos:column="7">case <expr><literal type="number" pos:line="34" pos:column="12">504<pos:position pos:line="34" pos:column="15"/></literal></expr>:<pos:position pos:line="34" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">infof<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">data<pos:position pos:line="35" pos:column="19"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="36" pos:column="15">"%s is not supported by the server.\n"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><name><operator pos:line="36" pos:column="55">(<pos:position pos:line="36" pos:column="56"/></operator><operator pos:line="36" pos:column="56">*<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">m<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">)<pos:position pos:line="36" pos:column="59"/></operator><operator pos:line="36" pos:column="59">-&gt;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="61">name<pos:position pos:line="36" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
        <break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>
      <case pos:line="38" pos:column="7">case <expr><literal type="number" pos:line="38" pos:column="12">534<pos:position pos:line="38" pos:column="15"/></literal></expr>:<pos:position pos:line="38" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">infof<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">data<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="21">"%s rejected as security mechanism.\n"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><name><operator pos:line="39" pos:column="61">(<pos:position pos:line="39" pos:column="62"/></operator><operator pos:line="39" pos:column="62">*<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">m<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">)<pos:position pos:line="39" pos:column="65"/></operator><operator pos:line="39" pos:column="65">-&gt;<pos:position pos:line="39" pos:column="70"/></operator><name pos:line="39" pos:column="67">name<pos:position pos:line="39" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="73"/></expr_stmt>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>
      <default pos:line="41" pos:column="7">default:<pos:position pos:line="41" pos:column="15"/></default>
        <if pos:line="42" pos:column="9">if<condition pos:line="42" pos:column="11">(<expr><name><name pos:line="42" pos:column="12">conn<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">data<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">state<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">.<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">buffer<pos:position pos:line="42" pos:column="36"/></name><index pos:line="42" pos:column="36">[<expr><literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal></expr>]<pos:position pos:line="42" pos:column="39"/></index></name> <operator pos:line="42" pos:column="40">==<pos:position pos:line="42" pos:column="42"/></operator> <literal type="char" pos:line="42" pos:column="43">'5'<pos:position pos:line="42" pos:column="46"/></literal></expr>)<pos:position pos:line="42" pos:column="47"/></condition><then pos:line="42" pos:column="47"> <block pos:line="42" pos:column="48">{
          <expr_stmt><expr><call><name pos:line="43" pos:column="11">infof<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">data<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="23">"The server doesn't support the FTP "<pos:position pos:line="43" pos:column="60"/></literal>
                <literal type="string" pos:line="44" pos:column="17">"security extensions.\n"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
          <return pos:line="45" pos:column="11">return <expr><operator pos:line="45" pos:column="18">-<pos:position pos:line="45" pos:column="19"/></operator><literal type="number" pos:line="45" pos:column="19">1<pos:position pos:line="45" pos:column="20"/></literal></expr>;<pos:position pos:line="45" pos:column="21"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>
      }<pos:position pos:line="48" pos:column="8"/></block></switch>
      <continue pos:line="49" pos:column="7">continue;<pos:position pos:line="49" pos:column="16"/></continue>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">ret<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <operator pos:line="52" pos:column="11">(<pos:position pos:line="52" pos:column="12"/></operator><operator pos:line="52" pos:column="12">*<pos:position pos:line="52" pos:column="13"/></operator><name><operator pos:line="52" pos:column="13">(<pos:position pos:line="52" pos:column="14"/></operator><operator pos:line="52" pos:column="14">*<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">m<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">)<pos:position pos:line="52" pos:column="17"/></operator><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">auth<pos:position pos:line="52" pos:column="23"/></name></name><operator pos:line="52" pos:column="23">)<pos:position pos:line="52" pos:column="24"/></operator><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><name><name pos:line="52" pos:column="25">conn<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">app_data<pos:position pos:line="52" pos:column="39"/></name></name><operator pos:line="52" pos:column="39">,<pos:position pos:line="52" pos:column="40"/></operator> <name pos:line="52" pos:column="41">conn<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">)<pos:position pos:line="52" pos:column="46"/></operator></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>

    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">ret<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">==<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">AUTH_CONTINUE<pos:position pos:line="54" pos:column="28"/></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29">
      <block type="pseudo"><continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue></block></then>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if<condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">ret<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">!=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">AUTH_OK<pos:position pos:line="56" pos:column="27"/></name></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then><block pos:line="56" pos:column="28">{
      <comment type="block" pos:line="57" pos:column="7">/* mechanism is supposed to output error string */</comment>
      <return pos:line="58" pos:column="7">return <expr><operator pos:line="58" pos:column="14">-<pos:position pos:line="58" pos:column="15"/></operator><literal type="number" pos:line="58" pos:column="15">1<pos:position pos:line="58" pos:column="16"/></literal></expr>;<pos:position pos:line="58" pos:column="17"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">conn<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">-&gt;<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="11">mech<pos:position pos:line="60" pos:column="15"/></name></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <operator pos:line="60" pos:column="18">*<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="19">m<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">conn<pos:position pos:line="61" pos:column="9"/></name><operator pos:line="61" pos:column="9">-&gt;<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="11">sec_complete<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <literal type="number" pos:line="61" pos:column="26">1<pos:position pos:line="61" pos:column="27"/></literal></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">conn<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">command_prot<pos:position pos:line="62" pos:column="23"/></name></name> <operator pos:line="62" pos:column="24">=<pos:position pos:line="62" pos:column="25"/></operator> <name pos:line="62" pos:column="26">prot_safe<pos:position pos:line="62" pos:column="35"/></name></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>
    <break pos:line="63" pos:column="5">break;<pos:position pos:line="63" pos:column="11"/></break>
  }<pos:position pos:line="64" pos:column="4"/></block></for>

  <return pos:line="66" pos:column="3">return <expr><operator pos:line="66" pos:column="10">*<pos:position pos:line="66" pos:column="11"/></operator><name pos:line="66" pos:column="11">m<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">==<pos:position pos:line="66" pos:column="15"/></operator> <name pos:line="66" pos:column="16">NULL<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

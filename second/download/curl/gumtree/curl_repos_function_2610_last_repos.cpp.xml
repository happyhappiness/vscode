<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2610_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multissl_init<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">Curl_ssl<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">backend<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">env<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">Curl_ssl<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">!=<pos:position pos:line="6" pos:column="17"/></operator> <operator pos:line="6" pos:column="18">&amp;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="19">Curl_ssl_multi<pos:position pos:line="6" pos:column="33"/></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">backend<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14"> <block pos:line="9" pos:column="15">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">Curl_ssl<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">backend<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">!<pos:position pos:line="14" pos:column="7"/></operator><name><name pos:line="14" pos:column="7">available_backends<pos:position pos:line="14" pos:column="25"/></name><index pos:line="14" pos:column="25">[<expr><literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>]<pos:position pos:line="14" pos:column="28"/></index></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">env<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">getenv<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"CURL_SSL_BACKEND"<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">CURL_DEFAULT_SSL_BACKEND<pos:position pos:line="18" pos:column="32"/></name></cpp:ifdef>
  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><operator pos:line="19" pos:column="6">!<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">env<pos:position pos:line="19" pos:column="10"/></name></expr>)<pos:position pos:line="19" pos:column="11"/></condition><then pos:line="19" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="5">env<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name pos:line="20" pos:column="11">CURL_DEFAULT_SSL_BACKEND<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">env<pos:position pos:line="22" pos:column="9"/></name></expr>)<pos:position pos:line="22" pos:column="10"/></condition><then pos:line="22" pos:column="10"> <block pos:line="22" pos:column="11">{
    <for pos:line="23" pos:column="5">for<control pos:line="23" pos:column="8">(<init><expr><name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></init> <condition><expr><name><name pos:line="23" pos:column="16">available_backends<pos:position pos:line="23" pos:column="34"/></name><index pos:line="23" pos:column="34">[<expr><name pos:line="23" pos:column="35">i<pos:position pos:line="23" pos:column="36"/></name></expr>]<pos:position pos:line="23" pos:column="37"/></index></name></expr>;<pos:position pos:line="23" pos:column="38"/></condition> <incr><expr><name pos:line="23" pos:column="39">i<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">++<pos:position pos:line="23" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="43"/></control> <block pos:line="23" pos:column="44">{
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><call><name pos:line="24" pos:column="10">strcasecompare<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">env<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="30">available_backends<pos:position pos:line="24" pos:column="48"/></name><index pos:line="24" pos:column="48">[<expr><name pos:line="24" pos:column="49">i<pos:position pos:line="24" pos:column="50"/></name></expr>]<pos:position pos:line="24" pos:column="51"/></index></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name><name pos:line="24" pos:column="53">info<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">.<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="58">name<pos:position pos:line="24" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="64"/></condition><then pos:line="24" pos:column="64"> <block pos:line="24" pos:column="65">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">Curl_ssl<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name><name pos:line="25" pos:column="20">available_backends<pos:position pos:line="25" pos:column="38"/></name><index pos:line="25" pos:column="38">[<expr><name pos:line="25" pos:column="39">i<pos:position pos:line="25" pos:column="40"/></name></expr>]<pos:position pos:line="25" pos:column="41"/></index></name></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></for>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* Fall back to first available backend */</comment>
  <expr_stmt><expr><name pos:line="32" pos:column="3">Curl_ssl<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <name><name pos:line="32" pos:column="14">available_backends<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr>]<pos:position pos:line="32" pos:column="35"/></index></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
  <return pos:line="33" pos:column="3">return <expr><literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr>;<pos:position pos:line="33" pos:column="12"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2253_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">inet_pton6<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">src<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">dst<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">xdigits_l<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[]<pos:position pos:line="4" pos:column="32"/></index></name> <init pos:line="4" pos:column="33">= <expr><literal type="string" pos:line="4" pos:column="35">"0123456789abcdef"<pos:position pos:line="4" pos:column="53"/></literal></expr></init></decl>,
    <decl><type ref="prev"/><name><name pos:line="5" pos:column="5">xdigits_u<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[]<pos:position pos:line="5" pos:column="16"/></index></name> <init pos:line="5" pos:column="17">= <expr><literal type="string" pos:line="5" pos:column="19">"0123456789ABCDEF"<pos:position pos:line="5" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">tmp<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><name pos:line="6" pos:column="21">IN6ADDRSZ<pos:position pos:line="6" pos:column="30"/></name></expr>]<pos:position pos:line="6" pos:column="31"/></index></name></decl>, <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="34">tp<pos:position pos:line="6" pos:column="36"/></name></decl>, <modifier pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="39">endp<pos:position pos:line="6" pos:column="43"/></name></decl>, <modifier pos:line="6" pos:column="45">*<pos:position pos:line="6" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="46">colonp<pos:position pos:line="6" pos:column="52"/></name></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">xdigits<pos:position pos:line="7" pos:column="22"/></name></decl>, <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="25">curtok<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ch<pos:position pos:line="8" pos:column="9"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="11">saw_xdigit<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">val<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">tp<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">tmp<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">IN6ADDRSZ<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">endp<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">tp<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">+<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">IN6ADDRSZ<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">colonp<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">NULL<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
  <comment type="block" pos:line="14" pos:column="3">/* Leading :: requires some special handling. */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">*<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">src<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <literal type="char" pos:line="15" pos:column="14">':'<pos:position pos:line="15" pos:column="17"/></literal></expr>)<pos:position pos:line="15" pos:column="18"/></condition><then pos:line="15" pos:column="18">
    <block type="pseudo"><if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></operator><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">src<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">!=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="char" pos:line="16" pos:column="18">':'<pos:position pos:line="16" pos:column="21"/></literal></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator></expr>;<pos:position pos:line="17" pos:column="18"/></return></block></then></if></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">curtok<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">src<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">saw_xdigit<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">val<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <literal type="number" pos:line="20" pos:column="9">0<pos:position pos:line="20" pos:column="10"/></literal></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt>
  <while pos:line="21" pos:column="3">while<condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">ch<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <operator pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">src<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">!=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="char" pos:line="21" pos:column="26">'\0'<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition> <block pos:line="21" pos:column="32">{
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">char<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">pch<pos:position pos:line="22" pos:column="20"/></name></decl>;<pos:position pos:line="22" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">pch<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <call><name pos:line="24" pos:column="11">strchr<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><operator pos:line="24" pos:column="18">(<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">xdigits<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">xdigits_l<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">ch<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><operator pos:line="25" pos:column="8">!<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">pch<pos:position pos:line="25" pos:column="12"/></name></expr>)<pos:position pos:line="25" pos:column="13"/></condition><then pos:line="25" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">pch<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">strchr<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">xdigits<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">xdigits_u<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">ch<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then></if>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name pos:line="27" pos:column="8">pch<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">!=<pos:position pos:line="27" pos:column="14"/></operator> <name pos:line="27" pos:column="15">NULL<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20"> <block pos:line="27" pos:column="21">{
      <expr_stmt><expr><name pos:line="28" pos:column="7">val<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">&lt;&lt;=<pos:position pos:line="28" pos:column="20"/></operator> <literal type="number" pos:line="28" pos:column="15">4<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">val<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">|=<pos:position pos:line="29" pos:column="13"/></operator> <operator pos:line="29" pos:column="14">(<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">pch<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">-<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">xdigits<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">)<pos:position pos:line="29" pos:column="29"/></operator></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><operator pos:line="30" pos:column="10">++<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">saw_xdigit<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&gt;<pos:position pos:line="30" pos:column="27"/></operator> <literal type="number" pos:line="30" pos:column="25">4<pos:position pos:line="30" pos:column="26"/></literal></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal><operator pos:line="31" pos:column="18">)<pos:position pos:line="31" pos:column="19"/></operator></expr>;<pos:position pos:line="31" pos:column="20"/></return></block></then></if>
      <continue pos:line="32" pos:column="7">continue;<pos:position pos:line="32" pos:column="16"/></continue>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">ch<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">==<pos:position pos:line="34" pos:column="13"/></operator> <literal type="char" pos:line="34" pos:column="14">':'<pos:position pos:line="34" pos:column="17"/></literal></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18"> <block pos:line="34" pos:column="19">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">curtok<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">src<pos:position pos:line="35" pos:column="19"/></name></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><operator pos:line="36" pos:column="10">!<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">saw_xdigit<pos:position pos:line="36" pos:column="21"/></name></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
        <if pos:line="37" pos:column="9">if<condition pos:line="37" pos:column="11">(<expr><name pos:line="37" pos:column="12">colonp<pos:position pos:line="37" pos:column="18"/></name></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19">
          <block type="pseudo"><return pos:line="38" pos:column="11">return <expr><operator pos:line="38" pos:column="18">(<pos:position pos:line="38" pos:column="19"/></operator><literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal><operator pos:line="38" pos:column="20">)<pos:position pos:line="38" pos:column="21"/></operator></expr>;<pos:position pos:line="38" pos:column="22"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="39" pos:column="9">colonp<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">tp<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
        <continue pos:line="40" pos:column="9">continue;<pos:position pos:line="40" pos:column="18"/></continue>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><name pos:line="42" pos:column="10">tp<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">+<pos:position pos:line="42" pos:column="14"/></operator> <name pos:line="42" pos:column="15">INT16SZ<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&gt;<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="25">endp<pos:position pos:line="42" pos:column="29"/></name></expr>)<pos:position pos:line="42" pos:column="30"/></condition><then pos:line="42" pos:column="30">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="44" pos:column="7">*<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">tp<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">++<pos:position pos:line="44" pos:column="12"/></operator> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call pos:line="44" pos:column="15">(<name pos:line="44" pos:column="16">unsigned<pos:position pos:line="44" pos:column="24"/></name> <name pos:line="44" pos:column="25">char<pos:position pos:line="44" pos:column="29"/></name>) <argument_list pos:line="44" pos:column="31">(<argument><expr><operator pos:line="44" pos:column="32">(<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">val<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">&gt;&gt;<pos:position pos:line="44" pos:column="42"/></operator> <literal type="number" pos:line="44" pos:column="40">8<pos:position pos:line="44" pos:column="41"/></literal><operator pos:line="44" pos:column="41">)<pos:position pos:line="44" pos:column="42"/></operator> <operator pos:line="44" pos:column="43">&amp;<pos:position pos:line="44" pos:column="48"/></operator> <literal type="number" pos:line="44" pos:column="45">0xff<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="45" pos:column="7">*<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">tp<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">++<pos:position pos:line="45" pos:column="12"/></operator> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <call pos:line="45" pos:column="15">(<name pos:line="45" pos:column="16">unsigned<pos:position pos:line="45" pos:column="24"/></name> <name pos:line="45" pos:column="25">char<pos:position pos:line="45" pos:column="29"/></name>) <argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">val<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">&amp;<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="38">0xff<pos:position pos:line="45" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">saw_xdigit<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <literal type="number" pos:line="46" pos:column="20">0<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="47" pos:column="7">val<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <literal type="number" pos:line="47" pos:column="13">0<pos:position pos:line="47" pos:column="14"/></literal></expr>;<pos:position pos:line="47" pos:column="15"/></expr_stmt>
      <continue pos:line="48" pos:column="7">continue;<pos:position pos:line="48" pos:column="16"/></continue>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name pos:line="50" pos:column="8">ch<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">==<pos:position pos:line="50" pos:column="13"/></operator> <literal type="char" pos:line="50" pos:column="14">'.'<pos:position pos:line="50" pos:column="17"/></literal> <operator pos:line="50" pos:column="18">&amp;&amp;<pos:position pos:line="50" pos:column="28"/></operator> <operator pos:line="50" pos:column="21">(<pos:position pos:line="50" pos:column="22"/></operator><operator pos:line="50" pos:column="22">(<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">tp<pos:position pos:line="50" pos:column="25"/></name> <operator pos:line="50" pos:column="26">+<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">INADDRSZ<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">)<pos:position pos:line="50" pos:column="37"/></operator> <operator pos:line="50" pos:column="38">&lt;=<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="41">endp<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">)<pos:position pos:line="50" pos:column="46"/></operator> <operator pos:line="50" pos:column="47">&amp;&amp;<pos:position pos:line="50" pos:column="57"/></operator>
        <call><name pos:line="51" pos:column="9">inet_pton4<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">curtok<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="28">tp<pos:position pos:line="51" pos:column="30"/></name></expr></argument>)<pos:position pos:line="51" pos:column="31"/></argument_list></call> <operator pos:line="51" pos:column="32">&gt;<pos:position pos:line="51" pos:column="36"/></operator> <literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>)<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36"> <block pos:line="51" pos:column="37">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">tp<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">+=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">INADDRSZ<pos:position pos:line="52" pos:column="21"/></name></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">saw_xdigit<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <literal type="number" pos:line="53" pos:column="20">0<pos:position pos:line="53" pos:column="21"/></literal></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
      <break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break>    <comment type="block" pos:line="54" pos:column="17">/* '\0' was seen by inet_pton4(). */</comment>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><literal type="number" pos:line="56" pos:column="13">0<pos:position pos:line="56" pos:column="14"/></literal><operator pos:line="56" pos:column="14">)<pos:position pos:line="56" pos:column="15"/></operator></expr>;<pos:position pos:line="56" pos:column="16"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></while>
  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><name pos:line="58" pos:column="6">saw_xdigit<pos:position pos:line="58" pos:column="16"/></name></expr>)<pos:position pos:line="58" pos:column="17"/></condition><then pos:line="58" pos:column="17"> <block pos:line="58" pos:column="18">{
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name pos:line="59" pos:column="8">tp<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">+<pos:position pos:line="59" pos:column="12"/></operator> <name pos:line="59" pos:column="13">INT16SZ<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">&gt;<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="23">endp<pos:position pos:line="59" pos:column="27"/></name></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28">
      <block type="pseudo"><return pos:line="60" pos:column="7">return <expr><operator pos:line="60" pos:column="14">(<pos:position pos:line="60" pos:column="15"/></operator><literal type="number" pos:line="60" pos:column="15">0<pos:position pos:line="60" pos:column="16"/></literal><operator pos:line="60" pos:column="16">)<pos:position pos:line="60" pos:column="17"/></operator></expr>;<pos:position pos:line="60" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">tp<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">++<pos:position pos:line="61" pos:column="10"/></operator> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <call pos:line="61" pos:column="13">(<name pos:line="61" pos:column="14">unsigned<pos:position pos:line="61" pos:column="22"/></name> <name pos:line="61" pos:column="23">char<pos:position pos:line="61" pos:column="27"/></name>) <argument_list pos:line="61" pos:column="29">(<argument><expr><operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="31">val<pos:position pos:line="61" pos:column="34"/></name> <operator pos:line="61" pos:column="35">&gt;&gt;<pos:position pos:line="61" pos:column="40"/></operator> <literal type="number" pos:line="61" pos:column="38">8<pos:position pos:line="61" pos:column="39"/></literal><operator pos:line="61" pos:column="39">)<pos:position pos:line="61" pos:column="40"/></operator> <operator pos:line="61" pos:column="41">&amp;<pos:position pos:line="61" pos:column="46"/></operator> <literal type="number" pos:line="61" pos:column="43">0xff<pos:position pos:line="61" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="62" pos:column="5">*<pos:position pos:line="62" pos:column="6"/></operator><name pos:line="62" pos:column="6">tp<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">++<pos:position pos:line="62" pos:column="10"/></operator> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <call pos:line="62" pos:column="13">(<name pos:line="62" pos:column="14">unsigned<pos:position pos:line="62" pos:column="22"/></name> <name pos:line="62" pos:column="23">char<pos:position pos:line="62" pos:column="27"/></name>) <argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">val<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">&amp;<pos:position pos:line="62" pos:column="39"/></operator> <literal type="number" pos:line="62" pos:column="36">0xff<pos:position pos:line="62" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>
  <if pos:line="64" pos:column="3">if<condition pos:line="64" pos:column="5">(<expr><name pos:line="64" pos:column="6">colonp<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">!=<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">NULL<pos:position pos:line="64" pos:column="20"/></name></expr>)<pos:position pos:line="64" pos:column="21"/></condition><then pos:line="64" pos:column="21"> <block pos:line="64" pos:column="22">{
    <comment type="block" pos:line="65" pos:column="5">/*
     * Since some memmove()'s erroneously fail to handle
     * overlapping regions, we'll do the shift by hand.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="69" pos:column="5">const<pos:position pos:line="69" pos:column="10"/></specifier> <name pos:line="69" pos:column="11">ssize_t<pos:position pos:line="69" pos:column="18"/></name></type> <name pos:line="69" pos:column="19">n<pos:position pos:line="69" pos:column="20"/></name> <init pos:line="69" pos:column="21">= <expr><name pos:line="69" pos:column="23">tp<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">-<pos:position pos:line="69" pos:column="27"/></operator> <name pos:line="69" pos:column="28">colonp<pos:position pos:line="69" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">ssize_t<pos:position pos:line="70" pos:column="12"/></name></type> <name pos:line="70" pos:column="13">i<pos:position pos:line="70" pos:column="14"/></name></decl>;<pos:position pos:line="70" pos:column="15"/></decl_stmt>

    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><name pos:line="72" pos:column="8">tp<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">==<pos:position pos:line="72" pos:column="13"/></operator> <name pos:line="72" pos:column="14">endp<pos:position pos:line="72" pos:column="18"/></name></expr>)<pos:position pos:line="72" pos:column="19"/></condition><then pos:line="72" pos:column="19">
      <block type="pseudo"><return pos:line="73" pos:column="7">return <expr><operator pos:line="73" pos:column="14">(<pos:position pos:line="73" pos:column="15"/></operator><literal type="number" pos:line="73" pos:column="15">0<pos:position pos:line="73" pos:column="16"/></literal><operator pos:line="73" pos:column="16">)<pos:position pos:line="73" pos:column="17"/></operator></expr>;<pos:position pos:line="73" pos:column="18"/></return></block></then></if>
    <for pos:line="74" pos:column="5">for<control pos:line="74" pos:column="8">(<init><expr><name pos:line="74" pos:column="9">i<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <literal type="number" pos:line="74" pos:column="13">1<pos:position pos:line="74" pos:column="14"/></literal></expr>;<pos:position pos:line="74" pos:column="15"/></init> <condition><expr><name pos:line="74" pos:column="16">i<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">&lt;=<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="21">n<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></condition> <incr><expr><name pos:line="74" pos:column="24">i<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">++<pos:position pos:line="74" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="74" pos:column="28"/></control> <block pos:line="74" pos:column="29">{
      <expr_stmt><expr><operator pos:line="75" pos:column="7">*<pos:position pos:line="75" pos:column="8"/></operator><operator pos:line="75" pos:column="8">(<pos:position pos:line="75" pos:column="9"/></operator><name pos:line="75" pos:column="9">endp<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">-<pos:position pos:line="75" pos:column="15"/></operator> <name pos:line="75" pos:column="16">i<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">)<pos:position pos:line="75" pos:column="18"/></operator> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><operator pos:line="75" pos:column="22">(<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="23">colonp<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">+<pos:position pos:line="75" pos:column="31"/></operator> <name pos:line="75" pos:column="32">n<pos:position pos:line="75" pos:column="33"/></name> <operator pos:line="75" pos:column="34">-<pos:position pos:line="75" pos:column="35"/></operator> <name pos:line="75" pos:column="36">i<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">)<pos:position pos:line="75" pos:column="38"/></operator></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="76" pos:column="7">*<pos:position pos:line="76" pos:column="8"/></operator><operator pos:line="76" pos:column="8">(<pos:position pos:line="76" pos:column="9"/></operator><name pos:line="76" pos:column="9">colonp<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">+<pos:position pos:line="76" pos:column="17"/></operator> <name pos:line="76" pos:column="18">n<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">-<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">i<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">)<pos:position pos:line="76" pos:column="24"/></operator> <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <literal type="number" pos:line="76" pos:column="27">0<pos:position pos:line="76" pos:column="28"/></literal></expr>;<pos:position pos:line="76" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="78" pos:column="5">tp<pos:position pos:line="78" pos:column="7"/></name> <operator pos:line="78" pos:column="8">=<pos:position pos:line="78" pos:column="9"/></operator> <name pos:line="78" pos:column="10">endp<pos:position pos:line="78" pos:column="14"/></name></expr>;<pos:position pos:line="78" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>
  <if pos:line="80" pos:column="3">if<condition pos:line="80" pos:column="5">(<expr><name pos:line="80" pos:column="6">tp<pos:position pos:line="80" pos:column="8"/></name> <operator pos:line="80" pos:column="9">!=<pos:position pos:line="80" pos:column="11"/></operator> <name pos:line="80" pos:column="12">endp<pos:position pos:line="80" pos:column="16"/></name></expr>)<pos:position pos:line="80" pos:column="17"/></condition><then pos:line="80" pos:column="17">
    <block type="pseudo"><return pos:line="81" pos:column="5">return <expr><operator pos:line="81" pos:column="12">(<pos:position pos:line="81" pos:column="13"/></operator><literal type="number" pos:line="81" pos:column="13">0<pos:position pos:line="81" pos:column="14"/></literal><operator pos:line="81" pos:column="14">)<pos:position pos:line="81" pos:column="15"/></operator></expr>;<pos:position pos:line="81" pos:column="16"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">memcpy<pos:position pos:line="82" pos:column="9"/></name><argument_list pos:line="82" pos:column="9">(<argument><expr><name pos:line="82" pos:column="10">dst<pos:position pos:line="82" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="15">tmp<pos:position pos:line="82" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="20">IN6ADDRSZ<pos:position pos:line="82" pos:column="29"/></name></expr></argument>)<pos:position pos:line="82" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
  <return pos:line="83" pos:column="3">return <expr><operator pos:line="83" pos:column="10">(<pos:position pos:line="83" pos:column="11"/></operator><literal type="number" pos:line="83" pos:column="11">1<pos:position pos:line="83" pos:column="12"/></literal><operator pos:line="83" pos:column="12">)<pos:position pos:line="83" pos:column="13"/></operator></expr>;<pos:position pos:line="83" pos:column="14"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

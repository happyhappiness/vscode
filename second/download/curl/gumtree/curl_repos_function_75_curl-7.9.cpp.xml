<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_75_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_pgrsDone<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><operator pos:line="4" pos:column="6">!<pos:position pos:line="4" pos:column="7"/></operator><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name><name pos:line="4" pos:column="8">data<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">progress<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">flags<pos:position pos:line="4" pos:column="28"/></name></name> <operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="31">PGRS_HIDE<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator></expr>)<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42"> <block pos:line="4" pos:column="43">{
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">data<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">progress<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">lastshow<pos:position pos:line="5" pos:column="28"/></name></name><operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Curl_pgrsUpdate<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">conn<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt> <comment type="block" pos:line="6" pos:column="28">/* the final (forced) update */</comment>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><operator pos:line="7" pos:column="8">!<pos:position pos:line="7" pos:column="9"/></operator><name><name pos:line="7" pos:column="9">data<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">progress<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">callback<pos:position pos:line="7" pos:column="32"/></name></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
      <comment type="block" pos:line="8" pos:column="7">/* only output if we don't use progress callback */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">fprintf<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name><name pos:line="9" pos:column="15">data<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">set<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">err<pos:position pos:line="9" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="30">"\n"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2192_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_sasl_cleanup<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">connectdata<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">conn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">authused<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">USE_KERBEROS5<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="4" pos:column="3">/* Cleanup the gssapi structure */</comment>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">authused<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">SASL_MECH_GSSAPI<pos:position pos:line="5" pos:column="34"/></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Curl_auth_gssapi_cleanup<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name><name pos:line="6" pos:column="31">conn<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">krb5<pos:position pos:line="6" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><call><name pos:line="10" pos:column="5">defined<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">USE_NTLM<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="11" pos:column="3">/* Cleanup the NTLM structure */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">authused<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">SASL_MECH_NTLM<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Curl_auth_ntlm_cleanup<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name><name pos:line="13" pos:column="29">conn<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">ntlm<pos:position pos:line="13" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><operator pos:line="17" pos:column="5">!<pos:position pos:line="17" pos:column="6"/></operator><call><name pos:line="17" pos:column="6">defined<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">USE_KERBEROS5<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call> <operator pos:line="17" pos:column="29">&amp;&amp;<pos:position pos:line="17" pos:column="39"/></operator> <operator pos:line="17" pos:column="32">!<pos:position pos:line="17" pos:column="33"/></operator><call><name pos:line="17" pos:column="33">defined<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">USE_NTLM<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="18" pos:column="3">/* Reserved for future use */</comment>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">void<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">)<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">conn<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">(<pos:position pos:line="20" pos:column="4"/></operator><name pos:line="20" pos:column="4">void<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">)<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">authused<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

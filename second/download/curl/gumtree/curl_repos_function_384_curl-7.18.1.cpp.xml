<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_384_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">trynextip<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">sockindex<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="3" pos:column="23">bool<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">connected<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">curl_socket_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">sockfd<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">Curl_addrinfo<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">ai<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* first close the failed socket */</comment>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">sclose<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name><name pos:line="9" pos:column="10">conn<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">sock<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><name pos:line="9" pos:column="21">sockindex<pos:position pos:line="9" pos:column="30"/></name></expr>]<pos:position pos:line="9" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">conn<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">sock<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><name pos:line="10" pos:column="14">sockindex<pos:position pos:line="10" pos:column="23"/></name></expr>]<pos:position pos:line="10" pos:column="24"/></index></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">CURL_SOCKET_BAD<pos:position pos:line="10" pos:column="42"/></name></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">connected<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">FALSE<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">sockindex<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">FIRSTSOCKET<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">TRUE<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="14" pos:column="18">/* no next */</comment>

  <comment type="block" pos:line="16" pos:column="3">/* try the next address */</comment>
  <expr_stmt><expr><name pos:line="17" pos:column="3">ai<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <name><name pos:line="17" pos:column="8">conn<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">ip_addr<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">ai_next<pos:position pos:line="17" pos:column="30"/></name></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>

  <while pos:line="19" pos:column="3">while<condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">ai<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition> <block pos:line="19" pos:column="13">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">sockfd<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">singleipconnect<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">conn<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">ai<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="40">0L<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">connected<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">sockfd<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">!=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">CURL_SOCKET_BAD<pos:position pos:line="21" pos:column="33"/></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
      <comment type="block" pos:line="22" pos:column="7">/* store the new socket descriptor */</comment>
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">conn<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">sock<pos:position pos:line="23" pos:column="17"/></name><index pos:line="23" pos:column="17">[<expr><name pos:line="23" pos:column="18">sockindex<pos:position pos:line="23" pos:column="27"/></name></expr>]<pos:position pos:line="23" pos:column="28"/></index></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">sockfd<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">conn<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">ip_addr<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">ai<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="26" pos:column="7">Curl_store_ip_addr<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">conn<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><name pos:line="27" pos:column="14">FALSE<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">ai<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <name><name pos:line="29" pos:column="10">ai<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">ai_next<pos:position pos:line="29" pos:column="21"/></name></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></while>
  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">TRUE<pos:position pos:line="31" pos:column="14"/></name></expr>;<pos:position pos:line="31" pos:column="15"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1023_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_ssl_close<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">connectdata<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">conn<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">sockindex<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">DEBUGASSERT<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">(<argument><expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">sockindex<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&lt;=<pos:position pos:line="3" pos:column="31"/></operator> <literal type="number" pos:line="3" pos:column="29">1<pos:position pos:line="3" pos:column="30"/></literal><operator pos:line="3" pos:column="30">)<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="32">&amp;&amp;<pos:position pos:line="3" pos:column="42"/></operator> <operator pos:line="3" pos:column="35">(<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">sockindex<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">&gt;=<pos:position pos:line="3" pos:column="51"/></operator> <operator pos:line="3" pos:column="49">-<pos:position pos:line="3" pos:column="50"/></operator><literal type="number" pos:line="3" pos:column="50">1<pos:position pos:line="3" pos:column="51"/></literal><operator pos:line="3" pos:column="51">)<pos:position pos:line="3" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="54"/></expr_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">USE_SSLEAY<pos:position pos:line="5" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">Curl_ossl_close<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">conn<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="25">sockindex<pos:position pos:line="6" pos:column="34"/></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="7" pos:column="8">/* USE_SSLEAY */</comment>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">USE_GNUTLS<pos:position pos:line="8" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">Curl_gtls_close<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">conn<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">sockindex<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="10" pos:column="8">/* USE_GNUTLS */</comment>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_NSS<pos:position pos:line="11" pos:column="15"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">Curl_nss_close<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">conn<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="24">sockindex<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="13" pos:column="8">/* USE_NSS */</comment>
<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">USE_QSOSSL<pos:position pos:line="14" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">Curl_qsossl_close<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">conn<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="27">sockindex<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="16" pos:column="8">/* USE_QSOSSL */</comment>
<cpp:ifndef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifndef<pos:position pos:line="17" pos:column="8"/></cpp:directive> <name pos:line="17" pos:column="9">USE_SSL<pos:position pos:line="17" pos:column="16"/></name></cpp:ifndef>
  <expr_stmt><expr><operator pos:line="18" pos:column="3">(<pos:position pos:line="18" pos:column="4"/></operator><name pos:line="18" pos:column="4">void<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">)<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">conn<pos:position pos:line="18" pos:column="13"/></name></expr>;<pos:position pos:line="18" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">void<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">)<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">sockindex<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="20" pos:column="8">/* !USE_SSL */</comment>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

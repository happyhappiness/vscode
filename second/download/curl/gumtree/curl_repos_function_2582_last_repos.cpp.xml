<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2582_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ssl_push_certinfo_len<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">Curl_easy<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">data<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">certnum<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">label<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="4" pos:column="37">const<pos:position pos:line="4" pos:column="42"/></specifier> <name pos:line="4" pos:column="43">char<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">value<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="5" pos:column="37">size_t<pos:position pos:line="5" pos:column="43"/></name></type> <name pos:line="5" pos:column="44">valuelen<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="53"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_certinfo<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">ci<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name><name pos:line="7" pos:column="31">data<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">info<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">certs<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">output<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curl_slist<pos:position pos:line="9" pos:column="20"/></name></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">nl<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">CURLE_OK<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">labellen<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><call><name pos:line="11" pos:column="21">strlen<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">label<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">outlen<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><name pos:line="12" pos:column="19">labellen<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">+<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="30">1<pos:position pos:line="12" pos:column="31"/></literal> <operator pos:line="12" pos:column="32">+<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">valuelen<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">+<pos:position pos:line="12" pos:column="44"/></operator> <literal type="number" pos:line="12" pos:column="45">1<pos:position pos:line="12" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt> <comment type="block" pos:line="12" pos:column="48">/* label:value\0 */</comment>

  <expr_stmt><expr><name pos:line="14" pos:column="3">output<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">malloc<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">outlen<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">output<pos:position pos:line="15" pos:column="13"/></name></expr>)<pos:position pos:line="15" pos:column="14"/></condition><then pos:line="15" pos:column="14">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* sprintf the label and colon */</comment>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">snprintf<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">output<pos:position pos:line="19" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="20">outlen<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="28">"%s:"<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">label<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* memcpy the value (it might not be zero terminated) */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">memcpy<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><operator pos:line="22" pos:column="10">&amp;<pos:position pos:line="22" pos:column="15"/></operator><name><name pos:line="22" pos:column="11">output<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><name pos:line="22" pos:column="18">labellen<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">+<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">1<pos:position pos:line="22" pos:column="30"/></literal></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">value<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="40">valuelen<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* zero terminate the output */</comment>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">output<pos:position pos:line="25" pos:column="9"/></name><index pos:line="25" pos:column="9">[<expr><name pos:line="25" pos:column="10">labellen<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">+<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">1<pos:position pos:line="25" pos:column="22"/></literal> <operator pos:line="25" pos:column="23">+<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">valuelen<pos:position pos:line="25" pos:column="33"/></name></expr>]<pos:position pos:line="25" pos:column="34"/></index></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <literal type="number" pos:line="25" pos:column="37">0<pos:position pos:line="25" pos:column="38"/></literal></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">nl<pos:position pos:line="27" pos:column="5"/></name> <operator pos:line="27" pos:column="6">=<pos:position pos:line="27" pos:column="7"/></operator> <call><name pos:line="27" pos:column="8">Curl_slist_append_nodup<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name><name pos:line="27" pos:column="32">ci<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">certinfo<pos:position pos:line="27" pos:column="44"/></name><index pos:line="27" pos:column="44">[<expr><name pos:line="27" pos:column="45">certnum<pos:position pos:line="27" pos:column="52"/></name></expr>]<pos:position pos:line="27" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">output<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">nl<pos:position pos:line="28" pos:column="9"/></name></expr>)<pos:position pos:line="28" pos:column="10"/></condition><then pos:line="28" pos:column="10"> <block pos:line="28" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">free<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name pos:line="29" pos:column="10">output<pos:position pos:line="29" pos:column="16"/></name></expr></argument>)<pos:position pos:line="29" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">curl_slist_free_all<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">ci<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">certinfo<pos:position pos:line="30" pos:column="37"/></name><index pos:line="30" pos:column="37">[<expr><name pos:line="30" pos:column="38">certnum<pos:position pos:line="30" pos:column="45"/></name></expr>]<pos:position pos:line="30" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">result<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="34" pos:column="3">ci<pos:position pos:line="34" pos:column="5"/></name><operator pos:line="34" pos:column="5">-&gt;<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="7">certinfo<pos:position pos:line="34" pos:column="15"/></name><index pos:line="34" pos:column="15">[<expr><name pos:line="34" pos:column="16">certnum<pos:position pos:line="34" pos:column="23"/></name></expr>]<pos:position pos:line="34" pos:column="24"/></index></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">nl<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">result<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

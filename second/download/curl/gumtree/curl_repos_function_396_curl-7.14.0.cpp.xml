<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_396_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_http_should_fail<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_transfer_keeper<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">k<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">curlassert<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">conn<pos:position pos:line="6" pos:column="18"/></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">data<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <name><name pos:line="7" pos:column="10">conn<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">data<pos:position pos:line="7" pos:column="20"/></name></name></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">curlassert<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">data<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/*
  ** For readability
  */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">k<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <operator pos:line="13" pos:column="7">&amp;<pos:position pos:line="13" pos:column="12"/></operator><name><name pos:line="13" pos:column="8">conn<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">keep<pos:position pos:line="13" pos:column="18"/></name></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="15" pos:column="3">/*
  ** If we haven't been asked to fail on error,
  ** don't fail.
  */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">data<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">set<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">http_fail_on_error<pos:position pos:line="19" pos:column="36"/></name></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/*
  ** Any code &lt; 400 is never terminal.
  */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">k<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">httpcode<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="21">400<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></return></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">conn<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">resume_from<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">&amp;&amp;<pos:position pos:line="28" pos:column="35"/></operator>
      <operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name><name pos:line="29" pos:column="8">data<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">set<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">httpreq<pos:position pos:line="29" pos:column="25"/></name></name><operator pos:line="29" pos:column="25">==<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">HTTPREQ_GET<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">)<pos:position pos:line="29" pos:column="39"/></operator> <operator pos:line="29" pos:column="40">&amp;&amp;<pos:position pos:line="29" pos:column="50"/></operator>
      <operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><name><name pos:line="30" pos:column="8">k<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">httpcode<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="23">416<pos:position pos:line="30" pos:column="26"/></literal><operator pos:line="30" pos:column="26">)<pos:position pos:line="30" pos:column="27"/></operator></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28"> <block pos:line="30" pos:column="29">{
    <comment type="block" pos:line="31" pos:column="5">/* "Requested Range Not Satisfiable", just proceed and
       pretend this is no error */</comment>
    <return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="36" pos:column="3">/*
  ** Any code &gt;= 400 that's not 401 or 407 is always
  ** a terminal error
  */</comment>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name><name pos:line="40" pos:column="8">k<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">httpcode<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">!=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">401<pos:position pos:line="40" pos:column="26"/></literal><operator pos:line="40" pos:column="26">)<pos:position pos:line="40" pos:column="27"/></operator> <operator pos:line="40" pos:column="28">&amp;&amp;<pos:position pos:line="40" pos:column="38"/></operator>
      <operator pos:line="41" pos:column="7">(<pos:position pos:line="41" pos:column="8"/></operator><name><name pos:line="41" pos:column="8">k<pos:position pos:line="41" pos:column="9"/></name><operator pos:line="41" pos:column="9">-&gt;<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="11">httpcode<pos:position pos:line="41" pos:column="19"/></name></name> <operator pos:line="41" pos:column="20">!=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="23">407<pos:position pos:line="41" pos:column="26"/></literal><operator pos:line="41" pos:column="26">)<pos:position pos:line="41" pos:column="27"/></operator></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28">
    <block type="pseudo"><return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">1<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="44" pos:column="3">/*
  ** All we have left to deal with is 401 and 407
  */</comment>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">curlassert<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><operator pos:line="47" pos:column="14">(<pos:position pos:line="47" pos:column="15"/></operator><name><name pos:line="47" pos:column="15">k<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">httpcode<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">==<pos:position pos:line="47" pos:column="29"/></operator> <literal type="number" pos:line="47" pos:column="30">401<pos:position pos:line="47" pos:column="33"/></literal><operator pos:line="47" pos:column="33">)<pos:position pos:line="47" pos:column="34"/></operator> <operator pos:line="47" pos:column="35">||<pos:position pos:line="47" pos:column="37"/></operator> <operator pos:line="47" pos:column="38">(<pos:position pos:line="47" pos:column="39"/></operator><name><name pos:line="47" pos:column="39">k<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">httpcode<pos:position pos:line="47" pos:column="50"/></name></name> <operator pos:line="47" pos:column="51">==<pos:position pos:line="47" pos:column="53"/></operator> <literal type="number" pos:line="47" pos:column="54">407<pos:position pos:line="47" pos:column="57"/></literal><operator pos:line="47" pos:column="57">)<pos:position pos:line="47" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>

  <comment type="block" pos:line="49" pos:column="3">/*
  ** Examine the current authentication state to see if this
  ** is an error.  The idea is for this function to get
  ** called after processing all the headers in a response
  ** message.  So, if we've been to asked to authenticate a
  ** particular stage, and we've done it, we're OK.  But, if
  ** we're already completely authenticated, it's not OK to
  ** get another 401 or 407.
  **
  ** It is possible for authentication to go stale such that
  ** the client needs to reauthenticate.  Once that info is
  ** available, use it here.
  */</comment>
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="62" pos:column="5">0<pos:position pos:line="62" pos:column="6"/></literal></expr></cpp:if> <comment type="block" pos:line="62" pos:column="7">/* set to 1 when debugging this functionality */</comment>
  infof(data,"%s: authstage = %d\n",__FUNCTION__,data-&gt;state.authstage);
  infof(data,"%s: authwant = 0x%08x\n",__FUNCTION__,data-&gt;state.authwant);
  infof(data,"%s: authavail = 0x%08x\n",__FUNCTION__,data-&gt;state.authavail);
  infof(data,"%s: httpcode = %d\n",__FUNCTION__,k-&gt;httpcode);
  infof(data,"%s: authdone = %d\n",__FUNCTION__,data-&gt;state.authdone);
  infof(data,"%s: newurl = %s\n",__FUNCTION__,conn-&gt;newurl ? conn-&gt;newurl : "(null)");
  infof(data,"%s: authproblem = %d\n",__FUNCTION__,data-&gt;state.authproblem);
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="72" pos:column="3">/*
  ** Either we're not authenticating, or we're supposed to
  ** be authenticating something else.  This is an error.
  */</comment>
  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><operator pos:line="76" pos:column="6">(<pos:position pos:line="76" pos:column="7"/></operator><name><name pos:line="76" pos:column="7">k<pos:position pos:line="76" pos:column="8"/></name><operator pos:line="76" pos:column="8">-&gt;<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="10">httpcode<pos:position pos:line="76" pos:column="18"/></name></name> <operator pos:line="76" pos:column="19">==<pos:position pos:line="76" pos:column="21"/></operator> <literal type="number" pos:line="76" pos:column="22">401<pos:position pos:line="76" pos:column="25"/></literal><operator pos:line="76" pos:column="25">)<pos:position pos:line="76" pos:column="26"/></operator> <operator pos:line="76" pos:column="27">&amp;&amp;<pos:position pos:line="76" pos:column="37"/></operator> <operator pos:line="76" pos:column="30">!<pos:position pos:line="76" pos:column="31"/></operator><name><name pos:line="76" pos:column="31">conn<pos:position pos:line="76" pos:column="35"/></name><operator pos:line="76" pos:column="35">-&gt;<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="37">bits<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">.<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="42">user_passwd<pos:position pos:line="76" pos:column="53"/></name></name></expr>)<pos:position pos:line="76" pos:column="54"/></condition><then pos:line="76" pos:column="54">
    <block type="pseudo"><return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">TRUE<pos:position pos:line="77" pos:column="16"/></name></expr>;<pos:position pos:line="77" pos:column="17"/></return></block></then></if>
  <if pos:line="78" pos:column="3">if<condition pos:line="78" pos:column="5">(<expr><operator pos:line="78" pos:column="6">(<pos:position pos:line="78" pos:column="7"/></operator><name><name pos:line="78" pos:column="7">k<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">-&gt;<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="10">httpcode<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">==<pos:position pos:line="78" pos:column="21"/></operator> <literal type="number" pos:line="78" pos:column="22">407<pos:position pos:line="78" pos:column="25"/></literal><operator pos:line="78" pos:column="25">)<pos:position pos:line="78" pos:column="26"/></operator> <operator pos:line="78" pos:column="27">&amp;&amp;<pos:position pos:line="78" pos:column="37"/></operator> <operator pos:line="78" pos:column="30">!<pos:position pos:line="78" pos:column="31"/></operator><name><name pos:line="78" pos:column="31">conn<pos:position pos:line="78" pos:column="35"/></name><operator pos:line="78" pos:column="35">-&gt;<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="37">bits<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">.<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="42">proxy_user_passwd<pos:position pos:line="78" pos:column="59"/></name></name></expr>)<pos:position pos:line="78" pos:column="60"/></condition><then pos:line="78" pos:column="60">
    <block type="pseudo"><return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">TRUE<pos:position pos:line="79" pos:column="16"/></name></expr>;<pos:position pos:line="79" pos:column="17"/></return></block></then></if>

  <return pos:line="81" pos:column="3">return <expr><name><name pos:line="81" pos:column="10">data<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">-&gt;<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="16">state<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">.<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">authproblem<pos:position pos:line="81" pos:column="33"/></name></name></expr>;<pos:position pos:line="81" pos:column="34"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

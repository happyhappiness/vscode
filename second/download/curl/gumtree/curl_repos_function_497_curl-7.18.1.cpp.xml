<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_497_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">ossl_connect_common<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name><name pos:line="2" pos:column="21">struct<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">connectdata<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">conn<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">int<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">sockindex<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="4" pos:column="21">bool<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">nonblocking<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="5" pos:column="21">bool<pos:position pos:line="5" pos:column="25"/></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">done<pos:position pos:line="5" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="32"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">retcode<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">SessionHandle<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name><name pos:line="8" pos:column="32">conn<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">data<pos:position pos:line="8" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">ssl_connect_data<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">connssl<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator><name><name pos:line="9" pos:column="39">conn<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">-&gt;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="45">ssl<pos:position pos:line="9" pos:column="48"/></name><index pos:line="9" pos:column="48">[<expr><name pos:line="9" pos:column="49">sockindex<pos:position pos:line="9" pos:column="58"/></name></expr>]<pos:position pos:line="9" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_socket_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">sockfd<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name><name pos:line="10" pos:column="26">conn<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">sock<pos:position pos:line="10" pos:column="36"/></name><index pos:line="10" pos:column="36">[<expr><name pos:line="10" pos:column="37">sockindex<pos:position pos:line="10" pos:column="46"/></name></expr>]<pos:position pos:line="10" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">long<pos:position pos:line="11" pos:column="7"/></name></type> <name pos:line="11" pos:column="8">timeout_ms<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">ssl_connect_1<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator><name><name pos:line="13" pos:column="21">connssl<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">connecting_state<pos:position pos:line="13" pos:column="46"/></name></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <block pos:line="13" pos:column="48">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">retcode<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">ossl_connect_step1<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">conn<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">sockindex<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><name pos:line="15" pos:column="8">retcode<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">retcode<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></return></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">timeout_ms<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
  <while pos:line="20" pos:column="3">while<condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">ssl_connect_2<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="26">connssl<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">connecting_state<pos:position pos:line="20" pos:column="51"/></name></name> <operator pos:line="20" pos:column="52">||<pos:position pos:line="20" pos:column="54"/></operator>
        <name pos:line="21" pos:column="9">ssl_connect_2_reading<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">==<pos:position pos:line="21" pos:column="33"/></operator> <name><name pos:line="21" pos:column="34">connssl<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">connecting_state<pos:position pos:line="21" pos:column="59"/></name></name> <operator pos:line="21" pos:column="60">||<pos:position pos:line="21" pos:column="62"/></operator>
        <name pos:line="22" pos:column="9">ssl_connect_2_writing<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="34">connssl<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">connecting_state<pos:position pos:line="22" pos:column="59"/></name></name></expr>)<pos:position pos:line="22" pos:column="60"/></condition> <block pos:line="22" pos:column="61">{

    <comment type="block" pos:line="24" pos:column="5">/* if ssl is expecting something, check if it's available. */</comment>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">connssl<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">connecting_state<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">ssl_connect_2_reading<pos:position pos:line="25" pos:column="58"/></name>
        <operator pos:line="26" pos:column="9">||<pos:position pos:line="26" pos:column="11"/></operator> <name><name pos:line="26" pos:column="12">connssl<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">connecting_state<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">==<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">ssl_connect_2_writing<pos:position pos:line="26" pos:column="62"/></name></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63"> <block pos:line="26" pos:column="64">{

      <decl_stmt><decl><type><name pos:line="28" pos:column="7">int<pos:position pos:line="28" pos:column="10"/></name></type> <name pos:line="28" pos:column="11">writefd<pos:position pos:line="28" pos:column="18"/></name> <init pos:line="28" pos:column="19">= <expr><ternary><condition><expr><name pos:line="28" pos:column="21">ssl_connect_2_writing<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator>
        <name><name pos:line="29" pos:column="9">connssl<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">connecting_state<pos:position pos:line="29" pos:column="34"/></name></name></expr>?<pos:position pos:line="29" pos:column="35"/></condition><then><expr><name pos:line="29" pos:column="35">sockfd<pos:position pos:line="29" pos:column="41"/></name></expr></then><else pos:line="29" pos:column="41">:<expr><name pos:line="29" pos:column="42">CURL_SOCKET_BAD<pos:position pos:line="29" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="29" pos:column="58"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="30" pos:column="7">int<pos:position pos:line="30" pos:column="10"/></name></type> <name pos:line="30" pos:column="11">readfd<pos:position pos:line="30" pos:column="17"/></name> <init pos:line="30" pos:column="18">= <expr><ternary><condition><expr><name pos:line="30" pos:column="20">ssl_connect_2_reading<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">==<pos:position pos:line="30" pos:column="43"/></operator>
        <name><name pos:line="31" pos:column="9">connssl<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">connecting_state<pos:position pos:line="31" pos:column="34"/></name></name></expr>?<pos:position pos:line="31" pos:column="35"/></condition><then><expr><name pos:line="31" pos:column="35">sockfd<pos:position pos:line="31" pos:column="41"/></name></expr></then><else pos:line="31" pos:column="41">:<expr><name pos:line="31" pos:column="42">CURL_SOCKET_BAD<pos:position pos:line="31" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="31" pos:column="58"/></decl_stmt>

      <while pos:line="33" pos:column="7">while<condition pos:line="33" pos:column="12">(<expr><literal type="number" pos:line="33" pos:column="13">1<pos:position pos:line="33" pos:column="14"/></literal></expr>)<pos:position pos:line="33" pos:column="15"/></condition> <block pos:line="33" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">int<pos:position pos:line="34" pos:column="12"/></name></type> <name pos:line="34" pos:column="13">what<pos:position pos:line="34" pos:column="17"/></name> <init pos:line="34" pos:column="18">= <expr><call><name pos:line="34" pos:column="20">Curl_socket_ready<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">readfd<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">writefd<pos:position pos:line="34" pos:column="53"/></name></expr></argument>,
                                     <argument><expr><ternary><condition><expr><name pos:line="35" pos:column="38">nonblocking<pos:position pos:line="35" pos:column="49"/></name></expr>?<pos:position pos:line="35" pos:column="50"/></condition><then><expr><literal type="number" pos:line="35" pos:column="50">0<pos:position pos:line="35" pos:column="51"/></literal></expr></then><else pos:line="35" pos:column="51">:<expr><operator pos:line="35" pos:column="52">(<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">int<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">)<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="57">timeout_ms<pos:position pos:line="35" pos:column="67"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="69"/></decl_stmt>
        <if pos:line="36" pos:column="9">if<condition pos:line="36" pos:column="11">(<expr><name pos:line="36" pos:column="12">what<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&gt;<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21">
          <comment type="block" pos:line="37" pos:column="11">/* readable or writable, go loop in the outer loop */</comment>
          <block type="pseudo"><break pos:line="38" pos:column="11">break;<pos:position pos:line="38" pos:column="17"/></break></block></then>
        <elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if<condition pos:line="39" pos:column="16">(<expr><literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal> <operator pos:line="39" pos:column="19">==<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">what<pos:position pos:line="39" pos:column="26"/></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27"> <block pos:line="39" pos:column="28">{
          <if pos:line="40" pos:column="11">if<condition pos:line="40" pos:column="13">(<expr><name pos:line="40" pos:column="14">nonblocking<pos:position pos:line="40" pos:column="25"/></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
            <expr_stmt><expr><operator pos:line="41" pos:column="13">*<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">done<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">FALSE<pos:position pos:line="41" pos:column="26"/></name></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
            <return pos:line="42" pos:column="13">return <expr><name pos:line="42" pos:column="20">CURLE_OK<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></return>
          }<pos:position pos:line="43" pos:column="12"/></block></then>
          <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
            <comment type="block" pos:line="45" pos:column="13">/* timeout */</comment>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">failf<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">data<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="25">"SSL connection timeout"<pos:position pos:line="46" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="47" pos:column="44"/></name></expr>;<pos:position pos:line="47" pos:column="45"/></return>
          }<pos:position pos:line="48" pos:column="12"/></block></else></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif>
        <else pos:line="50" pos:column="9">else <block pos:line="50" pos:column="14">{
          <comment type="block" pos:line="51" pos:column="11">/* anything that gets here is fatally bad */</comment>
          <expr_stmt><expr><call><name pos:line="52" pos:column="11">failf<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">data<pos:position pos:line="52" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">"select/poll on SSL socket, errno: %d"<pos:position pos:line="52" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="63">SOCKERRNO<pos:position pos:line="52" pos:column="72"/></name></expr></argument>)<pos:position pos:line="52" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="74"/></expr_stmt>
          <return pos:line="53" pos:column="11">return <expr><name pos:line="53" pos:column="18">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="53" pos:column="41"/></name></expr>;<pos:position pos:line="53" pos:column="42"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></else></if>
      }<pos:position pos:line="55" pos:column="8"/></block></while> <comment type="block" pos:line="55" pos:column="9">/* while()-loop for the select() */</comment>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/* get the timeout from step2 to avoid computing it twice. */</comment>
    <expr_stmt><expr><name pos:line="59" pos:column="5">retcode<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <call><name pos:line="59" pos:column="15">ossl_connect_step2<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">conn<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">sockindex<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="51">&amp;<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="52">timeout_ms<pos:position pos:line="59" pos:column="62"/></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><name pos:line="60" pos:column="8">retcode<pos:position pos:line="60" pos:column="15"/></name></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16">
      <block type="pseudo"><return pos:line="61" pos:column="7">return <expr><name pos:line="61" pos:column="14">retcode<pos:position pos:line="61" pos:column="21"/></name></expr>;<pos:position pos:line="61" pos:column="22"/></return></block></then></if>

  }<pos:position pos:line="63" pos:column="4"/></block></while> <comment type="block" pos:line="63" pos:column="5">/* repeat step2 until all transactions are done. */</comment>


  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name pos:line="66" pos:column="6">ssl_connect_3<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">==<pos:position pos:line="66" pos:column="21"/></operator><name><name pos:line="66" pos:column="21">connssl<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">connecting_state<pos:position pos:line="66" pos:column="46"/></name></name></expr>)<pos:position pos:line="66" pos:column="47"/></condition><then pos:line="66" pos:column="47"> <block pos:line="66" pos:column="48">{
    <expr_stmt><expr><name pos:line="67" pos:column="5">retcode<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <call><name pos:line="67" pos:column="15">ossl_connect_step3<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">(<argument><expr><name pos:line="67" pos:column="34">conn<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">sockindex<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><name pos:line="68" pos:column="8">retcode<pos:position pos:line="68" pos:column="15"/></name></expr>)<pos:position pos:line="68" pos:column="16"/></condition><then pos:line="68" pos:column="16">
      <block type="pseudo"><return pos:line="69" pos:column="7">return <expr><name pos:line="69" pos:column="14">retcode<pos:position pos:line="69" pos:column="21"/></name></expr>;<pos:position pos:line="69" pos:column="22"/></return></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">(<expr><name pos:line="72" pos:column="6">ssl_connect_done<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">==<pos:position pos:line="72" pos:column="24"/></operator><name><name pos:line="72" pos:column="24">connssl<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">-&gt;<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="33">connecting_state<pos:position pos:line="72" pos:column="49"/></name></name></expr>)<pos:position pos:line="72" pos:column="50"/></condition><then pos:line="72" pos:column="50"> <block pos:line="72" pos:column="51">{
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">connssl<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">state<pos:position pos:line="73" pos:column="19"/></name></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">ssl_connection_complete<pos:position pos:line="73" pos:column="45"/></name></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="74" pos:column="5">*<pos:position pos:line="74" pos:column="6"/></operator><name pos:line="74" pos:column="6">done<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">=<pos:position pos:line="74" pos:column="12"/></operator> <name pos:line="74" pos:column="13">TRUE<pos:position pos:line="74" pos:column="17"/></name></expr>;<pos:position pos:line="74" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></then>
  <else pos:line="76" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="5">*<pos:position pos:line="77" pos:column="6"/></operator><name pos:line="77" pos:column="6">done<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">=<pos:position pos:line="77" pos:column="12"/></operator> <name pos:line="77" pos:column="13">FALSE<pos:position pos:line="77" pos:column="18"/></name></expr>;<pos:position pos:line="77" pos:column="19"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="79" pos:column="3">/* Reset our connect state machine */</comment>
  <expr_stmt><expr><name><name pos:line="80" pos:column="3">connssl<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">-&gt;<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="12">connecting_state<pos:position pos:line="80" pos:column="28"/></name></name> <operator pos:line="80" pos:column="29">=<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="31">ssl_connect_1<pos:position pos:line="80" pos:column="44"/></name></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>

  <return pos:line="82" pos:column="3">return <expr><name pos:line="82" pos:column="10">CURLE_OK<pos:position pos:line="82" pos:column="18"/></name></expr>;<pos:position pos:line="82" pos:column="19"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

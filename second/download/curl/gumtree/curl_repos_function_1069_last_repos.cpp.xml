<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1069_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_follow<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">Curl_easy<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">newurl<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>,    <comment type="block" pos:line="2" pos:column="39">/* the Location: string */</comment>
                     <parameter><decl><type><name pos:line="3" pos:column="22">followtype<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">type<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="38"/></parameter_list> <comment type="block" pos:line="3" pos:column="39">/* see transfer.h */</comment>
<block pos:line="4" pos:column="1">{
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">CURL_DISABLE_HTTP<pos:position pos:line="5" pos:column="25"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">void<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">)<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">data<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">newurl<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="8" pos:column="3">(<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">void<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">)<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">type<pos:position pos:line="8" pos:column="13"/></name></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
  <comment type="block" pos:line="9" pos:column="3">/* Location: following will not happen when HTTP is disabled */</comment>
  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">CURLE_TOO_MANY_REDIRECTS<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></return>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>

  <comment type="block" pos:line="13" pos:column="3">/* Location: redirect */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">bool<pos:position pos:line="14" pos:column="7"/></name></type> <name pos:line="14" pos:column="8">disallowport<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><name pos:line="14" pos:column="23">FALSE<pos:position pos:line="14" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">bool<pos:position pos:line="15" pos:column="7"/></name></type> <name pos:line="15" pos:column="8">reachedmax<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><name pos:line="15" pos:column="21">FALSE<pos:position pos:line="15" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">type<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">==<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">FOLLOW_REDIR<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><operator pos:line="18" pos:column="8">(<pos:position pos:line="18" pos:column="9"/></operator><name><name pos:line="18" pos:column="9">data<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">set<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">maxredirs<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator> <operator pos:line="18" pos:column="36">&amp;&amp;<pos:position pos:line="18" pos:column="46"/></operator>
       <operator pos:line="19" pos:column="8">(<pos:position pos:line="19" pos:column="9"/></operator><name><name pos:line="19" pos:column="9">data<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">set<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">followlocation<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">&gt;=<pos:position pos:line="19" pos:column="39"/></operator> <name><name pos:line="19" pos:column="37">data<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">set<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">.<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">maxredirs<pos:position pos:line="19" pos:column="56"/></name></name><operator pos:line="19" pos:column="56">)<pos:position pos:line="19" pos:column="57"/></operator></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">reachedmax<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">TRUE<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">type<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">FOLLOW_FAKE<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt> <comment type="block" pos:line="21" pos:column="27">/* switch to fake to store the would-be-redirected
                             to URL */</comment>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <else pos:line="24" pos:column="5">else <block pos:line="24" pos:column="10">{
      <comment type="block" pos:line="25" pos:column="7">/* mark the next request as a followed location: */</comment>
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">data<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">state<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">this_is_a_follow<pos:position pos:line="26" pos:column="35"/></name></name> <operator pos:line="26" pos:column="36">=<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">TRUE<pos:position pos:line="26" pos:column="42"/></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="28" pos:column="7">data<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">set<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">followlocation<pos:position pos:line="28" pos:column="31"/></name></name><operator pos:line="28" pos:column="31">++<pos:position pos:line="28" pos:column="33"/></operator></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt> <comment type="block" pos:line="28" pos:column="35">/* count location-followers */</comment>

      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><name><name pos:line="30" pos:column="10">data<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">set<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">http_auto_referer<pos:position pos:line="30" pos:column="37"/></name></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38"> <block pos:line="30" pos:column="39">{
        <comment type="block" pos:line="31" pos:column="9">/* We are asked to automatically set the previous URL as the referer
           when we get the next URL. We pick the -&gt;url field, which may or may
           not be 100% correct */</comment>

        <if pos:line="35" pos:column="9">if<condition pos:line="35" pos:column="11">(<expr><name><name pos:line="35" pos:column="12">data<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">change<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">referer_alloc<pos:position pos:line="35" pos:column="38"/></name></name></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39"> <block pos:line="35" pos:column="40">{
          <expr_stmt><expr><call><name pos:line="36" pos:column="11">Curl_safefree<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name><name pos:line="36" pos:column="25">data<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">change<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">.<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">referer<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="37" pos:column="11">data<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">change<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">referer_alloc<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">=<pos:position pos:line="37" pos:column="39"/></operator> <name pos:line="37" pos:column="40">FALSE<pos:position pos:line="37" pos:column="45"/></name></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="40" pos:column="9">data<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">change<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">referer<pos:position pos:line="40" pos:column="29"/></name></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <call><name pos:line="40" pos:column="32">strdup<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name><name pos:line="40" pos:column="39">data<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">change<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">.<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="52">url<pos:position pos:line="40" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
        <if pos:line="41" pos:column="9">if<condition pos:line="41" pos:column="11">(<expr><operator pos:line="41" pos:column="12">!<pos:position pos:line="41" pos:column="13"/></operator><name><name pos:line="41" pos:column="13">data<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">change<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">.<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">referer<pos:position pos:line="41" pos:column="33"/></name></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34">
          <block type="pseudo"><return pos:line="42" pos:column="11">return <expr><name pos:line="42" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="42" pos:column="37"/></name></expr>;<pos:position pos:line="42" pos:column="38"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">data<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">change<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">referer_alloc<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <name pos:line="43" pos:column="38">TRUE<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt> <comment type="block" pos:line="43" pos:column="44">/* yes, free this later */</comment>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><operator pos:line="48" pos:column="6">!<pos:position pos:line="48" pos:column="7"/></operator><call><name pos:line="48" pos:column="7">is_absolute_url<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">newurl<pos:position pos:line="48" pos:column="29"/></name></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="31"/></condition><then pos:line="48" pos:column="31"> <block pos:line="48" pos:column="32">{
    <comment type="block" format="doxygen" pos:line="49" pos:column="5">/***
     *DANG* this is an RFC 2068 violation. The URL is supposed
     to be absolute and this doesn't seem to be that!
     */</comment>
    <decl_stmt><decl><type><name pos:line="53" pos:column="5">char<pos:position pos:line="53" pos:column="9"/></name> <modifier pos:line="53" pos:column="10">*<pos:position pos:line="53" pos:column="11"/></modifier></type><name pos:line="53" pos:column="11">absolute<pos:position pos:line="53" pos:column="19"/></name> <init pos:line="53" pos:column="20">= <expr><call><name pos:line="53" pos:column="22">concat_url<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name><name pos:line="53" pos:column="33">data<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">-&gt;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="39">change<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">.<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="46">url<pos:position pos:line="53" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="51">newurl<pos:position pos:line="53" pos:column="57"/></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="59"/></decl_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">absolute<pos:position pos:line="54" pos:column="17"/></name></expr>)<pos:position pos:line="54" pos:column="18"/></condition><then pos:line="54" pos:column="18">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="56" pos:column="5">newurl<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <name pos:line="56" pos:column="14">absolute<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then>
  <else pos:line="58" pos:column="3">else <block pos:line="58" pos:column="8">{
    <comment type="block" pos:line="59" pos:column="5">/* The new URL MAY contain space or high byte values, that means a mighty
       stupid redirect URL but we still make an effort to do "right". */</comment>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">char<pos:position pos:line="61" pos:column="9"/></name> <modifier pos:line="61" pos:column="10">*<pos:position pos:line="61" pos:column="11"/></modifier></type><name pos:line="61" pos:column="11">newest<pos:position pos:line="61" pos:column="17"/></name></decl>;<pos:position pos:line="61" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">size_t<pos:position pos:line="62" pos:column="11"/></name></type> <name pos:line="62" pos:column="12">newlen<pos:position pos:line="62" pos:column="18"/></name> <init pos:line="62" pos:column="19">= <expr><call><name pos:line="62" pos:column="21">strlen_url<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">newurl<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="40">FALSE<pos:position pos:line="62" pos:column="45"/></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="47"/></decl_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* This is an absolute URL, don't allow the custom port number */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">disallowport<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">TRUE<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">newest<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <call><name pos:line="67" pos:column="14">malloc<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">newlen<pos:position pos:line="67" pos:column="27"/></name> <operator pos:line="67" pos:column="28">+<pos:position pos:line="67" pos:column="29"/></operator> <literal type="number" pos:line="67" pos:column="30">1<pos:position pos:line="67" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt> <comment type="block" pos:line="67" pos:column="34">/* get memory for this */</comment>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><operator pos:line="68" pos:column="8">!<pos:position pos:line="68" pos:column="9"/></operator><name pos:line="68" pos:column="9">newest<pos:position pos:line="68" pos:column="15"/></name></expr>)<pos:position pos:line="68" pos:column="16"/></condition><then pos:line="68" pos:column="16">
      <block type="pseudo"><return pos:line="69" pos:column="7">return <expr><name pos:line="69" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">strcpy_url<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">newest<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="24">newurl<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="32">FALSE<pos:position pos:line="71" pos:column="37"/></name></expr></argument>)<pos:position pos:line="71" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt> <comment type="block" pos:line="71" pos:column="40">/* create a space-free URL */</comment>
    <expr_stmt><expr><name pos:line="72" pos:column="5">newurl<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <name pos:line="72" pos:column="14">newest<pos:position pos:line="72" pos:column="20"/></name></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt> <comment type="block" pos:line="72" pos:column="22">/* use this instead now */</comment>

  }<pos:position pos:line="74" pos:column="4"/></block></else></if>

  <if pos:line="76" pos:column="3">if<condition pos:line="76" pos:column="5">(<expr><name pos:line="76" pos:column="6">type<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">==<pos:position pos:line="76" pos:column="13"/></operator> <name pos:line="76" pos:column="14">FOLLOW_FAKE<pos:position pos:line="76" pos:column="25"/></name></expr>)<pos:position pos:line="76" pos:column="26"/></condition><then pos:line="76" pos:column="26"> <block pos:line="76" pos:column="27">{
    <comment type="block" pos:line="77" pos:column="5">/* we're only figuring out the new url if we would've followed locations
       but now we're done so we can get out! */</comment>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">data<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">info<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">.<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="16">wouldredirect<pos:position pos:line="79" pos:column="29"/></name></name> <operator pos:line="79" pos:column="30">=<pos:position pos:line="79" pos:column="31"/></operator> <name pos:line="79" pos:column="32">newurl<pos:position pos:line="79" pos:column="38"/></name></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>

    <if pos:line="81" pos:column="5">if<condition pos:line="81" pos:column="7">(<expr><name pos:line="81" pos:column="8">reachedmax<pos:position pos:line="81" pos:column="18"/></name></expr>)<pos:position pos:line="81" pos:column="19"/></condition><then pos:line="81" pos:column="19"> <block pos:line="81" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">failf<pos:position pos:line="82" pos:column="12"/></name><argument_list pos:line="82" pos:column="12">(<argument><expr><name pos:line="82" pos:column="13">data<pos:position pos:line="82" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="19">"Maximum (%ld) redirects followed"<pos:position pos:line="82" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="55">data<pos:position pos:line="82" pos:column="59"/></name><operator pos:line="82" pos:column="59">-&gt;<pos:position pos:line="82" pos:column="64"/></operator><name pos:line="82" pos:column="61">set<pos:position pos:line="82" pos:column="64"/></name><operator pos:line="82" pos:column="64">.<pos:position pos:line="82" pos:column="65"/></operator><name pos:line="82" pos:column="65">maxredirs<pos:position pos:line="82" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="76"/></expr_stmt>
      <return pos:line="83" pos:column="7">return <expr><name pos:line="83" pos:column="14">CURLE_TOO_MANY_REDIRECTS<pos:position pos:line="83" pos:column="38"/></name></expr>;<pos:position pos:line="83" pos:column="39"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">CURLE_OK<pos:position pos:line="85" pos:column="20"/></name></expr>;<pos:position pos:line="85" pos:column="21"/></return>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><name pos:line="88" pos:column="6">disallowport<pos:position pos:line="88" pos:column="18"/></name></expr>)<pos:position pos:line="88" pos:column="19"/></condition><then pos:line="88" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="89" pos:column="5">data<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">-&gt;<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="11">state<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">.<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">allow_port<pos:position pos:line="89" pos:column="27"/></name></name> <operator pos:line="89" pos:column="28">=<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">FALSE<pos:position pos:line="89" pos:column="35"/></name></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt></block></then></if>

  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">(<expr><name><name pos:line="91" pos:column="6">data<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">-&gt;<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="12">change<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">.<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">url_alloc<pos:position pos:line="91" pos:column="28"/></name></name></expr>)<pos:position pos:line="91" pos:column="29"/></condition><then pos:line="91" pos:column="29"> <block pos:line="91" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">Curl_safefree<pos:position pos:line="92" pos:column="18"/></name><argument_list pos:line="92" pos:column="18">(<argument><expr><name><name pos:line="92" pos:column="19">data<pos:position pos:line="92" pos:column="23"/></name><operator pos:line="92" pos:column="23">-&gt;<pos:position pos:line="92" pos:column="28"/></operator><name pos:line="92" pos:column="25">change<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">.<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="32">url<pos:position pos:line="92" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="93" pos:column="5">data<pos:position pos:line="93" pos:column="9"/></name><operator pos:line="93" pos:column="9">-&gt;<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="11">change<pos:position pos:line="93" pos:column="17"/></name><operator pos:line="93" pos:column="17">.<pos:position pos:line="93" pos:column="18"/></operator><name pos:line="93" pos:column="18">url_alloc<pos:position pos:line="93" pos:column="27"/></name></name> <operator pos:line="93" pos:column="28">=<pos:position pos:line="93" pos:column="29"/></operator> <name pos:line="93" pos:column="30">FALSE<pos:position pos:line="93" pos:column="35"/></name></expr>;<pos:position pos:line="93" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="96" pos:column="3">data<pos:position pos:line="96" pos:column="7"/></name><operator pos:line="96" pos:column="7">-&gt;<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="9">change<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">.<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">url<pos:position pos:line="96" pos:column="19"/></name></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <name pos:line="96" pos:column="22">newurl<pos:position pos:line="96" pos:column="28"/></name></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="97" pos:column="3">data<pos:position pos:line="97" pos:column="7"/></name><operator pos:line="97" pos:column="7">-&gt;<pos:position pos:line="97" pos:column="12"/></operator><name pos:line="97" pos:column="9">change<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">.<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">url_alloc<pos:position pos:line="97" pos:column="25"/></name></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <name pos:line="97" pos:column="28">TRUE<pos:position pos:line="97" pos:column="32"/></name></expr>;<pos:position pos:line="97" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="99" pos:column="3">infof<pos:position pos:line="99" pos:column="8"/></name><argument_list pos:line="99" pos:column="8">(<argument><expr><name pos:line="99" pos:column="9">data<pos:position pos:line="99" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="15">"Issue another request to this URL: '%s'\n"<pos:position pos:line="99" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="60">data<pos:position pos:line="99" pos:column="64"/></name><operator pos:line="99" pos:column="64">-&gt;<pos:position pos:line="99" pos:column="69"/></operator><name pos:line="99" pos:column="66">change<pos:position pos:line="99" pos:column="72"/></name><operator pos:line="99" pos:column="72">.<pos:position pos:line="99" pos:column="73"/></operator><name pos:line="99" pos:column="73">url<pos:position pos:line="99" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt>

  <comment type="block" pos:line="101" pos:column="3">/*
   * We get here when the HTTP code is 300-399 (and 401). We need to perform
   * differently based on exactly what return code there was.
   *
   * News from 7.10.6: we can also get here on a 401 or 407, in case we act on
   * a HTTP (proxy-) authentication scheme other than Basic.
   */</comment>
  <switch pos:line="108" pos:column="3">switch<condition pos:line="108" pos:column="9">(<expr><name><name pos:line="108" pos:column="10">data<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">-&gt;<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="16">info<pos:position pos:line="108" pos:column="20"/></name><operator pos:line="108" pos:column="20">.<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="21">httpcode<pos:position pos:line="108" pos:column="29"/></name></name></expr>)<pos:position pos:line="108" pos:column="30"/></condition> <block pos:line="108" pos:column="31">{
    <comment type="block" pos:line="109" pos:column="5">/* 401 - Act on a WWW-Authenticate, we keep on moving and do the
       Authorization: XXXX header in the HTTP request code snippet */</comment>
    <comment type="block" pos:line="111" pos:column="5">/* 407 - Act on a Proxy-Authenticate, we keep on moving and do the
       Proxy-Authorization: XXXX header in the HTTP request code snippet */</comment>
    <comment type="block" pos:line="113" pos:column="5">/* 300 - Multiple Choices */</comment>
    <comment type="block" pos:line="114" pos:column="5">/* 306 - Not used */</comment>
    <comment type="block" pos:line="115" pos:column="5">/* 307 - Temporary Redirect */</comment>
  <default pos:line="116" pos:column="3">default:<pos:position pos:line="116" pos:column="11"/></default>  <comment type="block" pos:line="116" pos:column="13">/* for all above (and the unknown ones) */</comment>
    <comment type="block" pos:line="117" pos:column="5">/* Some codes are explicitly mentioned since I've checked RFC2616 and they
     * seem to be OK to POST to.
     */</comment>
    <break pos:line="120" pos:column="5">break;<pos:position pos:line="120" pos:column="11"/></break>
  <case pos:line="121" pos:column="3">case <expr><literal type="number" pos:line="121" pos:column="8">301<pos:position pos:line="121" pos:column="11"/></literal></expr>:<pos:position pos:line="121" pos:column="12"/></case> <comment type="block" pos:line="121" pos:column="13">/* Moved Permanently */</comment>
    <comment type="block" pos:line="122" pos:column="5">/* (quote from RFC7231, section 6.4.2)
     *
     * Note: For historical reasons, a user agent MAY change the request
     * method from POST to GET for the subsequent request.  If this
     * behavior is undesired, the 307 (Temporary Redirect) status code
     * can be used instead.
     *
     * ----
     *
     * Many webservers expect this, so these servers often answers to a POST
     * request with an error page. To be sure that libcurl gets the page that
     * most user agents would get, libcurl has to force GET.
     *
     * This behaviour is forbidden by RFC1945 and the obsolete RFC2616, and
     * can be overridden with CURLOPT_POSTREDIR.
     */</comment>
    <if pos:line="138" pos:column="5">if<condition pos:line="138" pos:column="7">(<expr><operator pos:line="138" pos:column="8">(<pos:position pos:line="138" pos:column="9"/></operator><name><name pos:line="138" pos:column="9">data<pos:position pos:line="138" pos:column="13"/></name><operator pos:line="138" pos:column="13">-&gt;<pos:position pos:line="138" pos:column="18"/></operator><name pos:line="138" pos:column="15">set<pos:position pos:line="138" pos:column="18"/></name><operator pos:line="138" pos:column="18">.<pos:position pos:line="138" pos:column="19"/></operator><name pos:line="138" pos:column="19">httpreq<pos:position pos:line="138" pos:column="26"/></name></name> <operator pos:line="138" pos:column="27">==<pos:position pos:line="138" pos:column="29"/></operator> <name pos:line="138" pos:column="30">HTTPREQ_POST<pos:position pos:line="138" pos:column="42"/></name>
        <operator pos:line="139" pos:column="9">||<pos:position pos:line="139" pos:column="11"/></operator> <name><name pos:line="139" pos:column="12">data<pos:position pos:line="139" pos:column="16"/></name><operator pos:line="139" pos:column="16">-&gt;<pos:position pos:line="139" pos:column="21"/></operator><name pos:line="139" pos:column="18">set<pos:position pos:line="139" pos:column="21"/></name><operator pos:line="139" pos:column="21">.<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="22">httpreq<pos:position pos:line="139" pos:column="29"/></name></name> <operator pos:line="139" pos:column="30">==<pos:position pos:line="139" pos:column="32"/></operator> <name pos:line="139" pos:column="33">HTTPREQ_POST_FORM<pos:position pos:line="139" pos:column="50"/></name>
        <operator pos:line="140" pos:column="9">||<pos:position pos:line="140" pos:column="11"/></operator> <name><name pos:line="140" pos:column="12">data<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">-&gt;<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="18">set<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">.<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="22">httpreq<pos:position pos:line="140" pos:column="29"/></name></name> <operator pos:line="140" pos:column="30">==<pos:position pos:line="140" pos:column="32"/></operator> <name pos:line="140" pos:column="33">HTTPREQ_POST_MIME<pos:position pos:line="140" pos:column="50"/></name><operator pos:line="140" pos:column="50">)<pos:position pos:line="140" pos:column="51"/></operator>
       <operator pos:line="141" pos:column="8">&amp;&amp;<pos:position pos:line="141" pos:column="18"/></operator> <operator pos:line="141" pos:column="11">!<pos:position pos:line="141" pos:column="12"/></operator><operator pos:line="141" pos:column="12">(<pos:position pos:line="141" pos:column="13"/></operator><name><name pos:line="141" pos:column="13">data<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">-&gt;<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="19">set<pos:position pos:line="141" pos:column="22"/></name><operator pos:line="141" pos:column="22">.<pos:position pos:line="141" pos:column="23"/></operator><name pos:line="141" pos:column="23">keep_post<pos:position pos:line="141" pos:column="32"/></name></name> <operator pos:line="141" pos:column="33">&amp;<pos:position pos:line="141" pos:column="38"/></operator> <name pos:line="141" pos:column="35">CURL_REDIR_POST_301<pos:position pos:line="141" pos:column="54"/></name><operator pos:line="141" pos:column="54">)<pos:position pos:line="141" pos:column="55"/></operator></expr>)<pos:position pos:line="141" pos:column="56"/></condition><then pos:line="141" pos:column="56"> <block pos:line="141" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="142" pos:column="7">infof<pos:position pos:line="142" pos:column="12"/></name><argument_list pos:line="142" pos:column="12">(<argument><expr><name pos:line="142" pos:column="13">data<pos:position pos:line="142" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="19">"Switch from POST to GET\n"<pos:position pos:line="142" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="143" pos:column="7">data<pos:position pos:line="143" pos:column="11"/></name><operator pos:line="143" pos:column="11">-&gt;<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="13">set<pos:position pos:line="143" pos:column="16"/></name><operator pos:line="143" pos:column="16">.<pos:position pos:line="143" pos:column="17"/></operator><name pos:line="143" pos:column="17">httpreq<pos:position pos:line="143" pos:column="24"/></name></name> <operator pos:line="143" pos:column="25">=<pos:position pos:line="143" pos:column="26"/></operator> <name pos:line="143" pos:column="27">HTTPREQ_GET<pos:position pos:line="143" pos:column="38"/></name></expr>;<pos:position pos:line="143" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>
    <break pos:line="145" pos:column="5">break;<pos:position pos:line="145" pos:column="11"/></break>
  <case pos:line="146" pos:column="3">case <expr><literal type="number" pos:line="146" pos:column="8">302<pos:position pos:line="146" pos:column="11"/></literal></expr>:<pos:position pos:line="146" pos:column="12"/></case> <comment type="block" pos:line="146" pos:column="13">/* Found */</comment>
    <comment type="block" pos:line="147" pos:column="5">/* (quote from RFC7231, section 6.4.3)
     *
     * Note: For historical reasons, a user agent MAY change the request
     * method from POST to GET for the subsequent request.  If this
     * behavior is undesired, the 307 (Temporary Redirect) status code
     * can be used instead.
     *
     * ----
     *
     * Many webservers expect this, so these servers often answers to a POST
     * request with an error page. To be sure that libcurl gets the page that
     * most user agents would get, libcurl has to force GET.
     *
     * This behaviour is forbidden by RFC1945 and the obsolete RFC2616, and
     * can be overridden with CURLOPT_POSTREDIR.
     */</comment>
    <if pos:line="163" pos:column="5">if<condition pos:line="163" pos:column="7">(<expr><operator pos:line="163" pos:column="8">(<pos:position pos:line="163" pos:column="9"/></operator><name><name pos:line="163" pos:column="9">data<pos:position pos:line="163" pos:column="13"/></name><operator pos:line="163" pos:column="13">-&gt;<pos:position pos:line="163" pos:column="18"/></operator><name pos:line="163" pos:column="15">set<pos:position pos:line="163" pos:column="18"/></name><operator pos:line="163" pos:column="18">.<pos:position pos:line="163" pos:column="19"/></operator><name pos:line="163" pos:column="19">httpreq<pos:position pos:line="163" pos:column="26"/></name></name> <operator pos:line="163" pos:column="27">==<pos:position pos:line="163" pos:column="29"/></operator> <name pos:line="163" pos:column="30">HTTPREQ_POST<pos:position pos:line="163" pos:column="42"/></name>
        <operator pos:line="164" pos:column="9">||<pos:position pos:line="164" pos:column="11"/></operator> <name><name pos:line="164" pos:column="12">data<pos:position pos:line="164" pos:column="16"/></name><operator pos:line="164" pos:column="16">-&gt;<pos:position pos:line="164" pos:column="21"/></operator><name pos:line="164" pos:column="18">set<pos:position pos:line="164" pos:column="21"/></name><operator pos:line="164" pos:column="21">.<pos:position pos:line="164" pos:column="22"/></operator><name pos:line="164" pos:column="22">httpreq<pos:position pos:line="164" pos:column="29"/></name></name> <operator pos:line="164" pos:column="30">==<pos:position pos:line="164" pos:column="32"/></operator> <name pos:line="164" pos:column="33">HTTPREQ_POST_FORM<pos:position pos:line="164" pos:column="50"/></name>
        <operator pos:line="165" pos:column="9">||<pos:position pos:line="165" pos:column="11"/></operator> <name><name pos:line="165" pos:column="12">data<pos:position pos:line="165" pos:column="16"/></name><operator pos:line="165" pos:column="16">-&gt;<pos:position pos:line="165" pos:column="21"/></operator><name pos:line="165" pos:column="18">set<pos:position pos:line="165" pos:column="21"/></name><operator pos:line="165" pos:column="21">.<pos:position pos:line="165" pos:column="22"/></operator><name pos:line="165" pos:column="22">httpreq<pos:position pos:line="165" pos:column="29"/></name></name> <operator pos:line="165" pos:column="30">==<pos:position pos:line="165" pos:column="32"/></operator> <name pos:line="165" pos:column="33">HTTPREQ_POST_MIME<pos:position pos:line="165" pos:column="50"/></name><operator pos:line="165" pos:column="50">)<pos:position pos:line="165" pos:column="51"/></operator>
       <operator pos:line="166" pos:column="8">&amp;&amp;<pos:position pos:line="166" pos:column="18"/></operator> <operator pos:line="166" pos:column="11">!<pos:position pos:line="166" pos:column="12"/></operator><operator pos:line="166" pos:column="12">(<pos:position pos:line="166" pos:column="13"/></operator><name><name pos:line="166" pos:column="13">data<pos:position pos:line="166" pos:column="17"/></name><operator pos:line="166" pos:column="17">-&gt;<pos:position pos:line="166" pos:column="22"/></operator><name pos:line="166" pos:column="19">set<pos:position pos:line="166" pos:column="22"/></name><operator pos:line="166" pos:column="22">.<pos:position pos:line="166" pos:column="23"/></operator><name pos:line="166" pos:column="23">keep_post<pos:position pos:line="166" pos:column="32"/></name></name> <operator pos:line="166" pos:column="33">&amp;<pos:position pos:line="166" pos:column="38"/></operator> <name pos:line="166" pos:column="35">CURL_REDIR_POST_302<pos:position pos:line="166" pos:column="54"/></name><operator pos:line="166" pos:column="54">)<pos:position pos:line="166" pos:column="55"/></operator></expr>)<pos:position pos:line="166" pos:column="56"/></condition><then pos:line="166" pos:column="56"> <block pos:line="166" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="167" pos:column="7">infof<pos:position pos:line="167" pos:column="12"/></name><argument_list pos:line="167" pos:column="12">(<argument><expr><name pos:line="167" pos:column="13">data<pos:position pos:line="167" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="19">"Switch from POST to GET\n"<pos:position pos:line="167" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="168" pos:column="7">data<pos:position pos:line="168" pos:column="11"/></name><operator pos:line="168" pos:column="11">-&gt;<pos:position pos:line="168" pos:column="16"/></operator><name pos:line="168" pos:column="13">set<pos:position pos:line="168" pos:column="16"/></name><operator pos:line="168" pos:column="16">.<pos:position pos:line="168" pos:column="17"/></operator><name pos:line="168" pos:column="17">httpreq<pos:position pos:line="168" pos:column="24"/></name></name> <operator pos:line="168" pos:column="25">=<pos:position pos:line="168" pos:column="26"/></operator> <name pos:line="168" pos:column="27">HTTPREQ_GET<pos:position pos:line="168" pos:column="38"/></name></expr>;<pos:position pos:line="168" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="169" pos:column="6"/></block></then></if>
    <break pos:line="170" pos:column="5">break;<pos:position pos:line="170" pos:column="11"/></break>

  <case pos:line="172" pos:column="3">case <expr><literal type="number" pos:line="172" pos:column="8">303<pos:position pos:line="172" pos:column="11"/></literal></expr>:<pos:position pos:line="172" pos:column="12"/></case> <comment type="block" pos:line="172" pos:column="13">/* See Other */</comment>
    <comment type="block" pos:line="173" pos:column="5">/* Disable both types of POSTs, unless the user explicitly
       asks for POST after POST */</comment>
    <if pos:line="175" pos:column="5">if<condition pos:line="175" pos:column="7">(<expr><name><name pos:line="175" pos:column="8">data<pos:position pos:line="175" pos:column="12"/></name><operator pos:line="175" pos:column="12">-&gt;<pos:position pos:line="175" pos:column="17"/></operator><name pos:line="175" pos:column="14">set<pos:position pos:line="175" pos:column="17"/></name><operator pos:line="175" pos:column="17">.<pos:position pos:line="175" pos:column="18"/></operator><name pos:line="175" pos:column="18">httpreq<pos:position pos:line="175" pos:column="25"/></name></name> <operator pos:line="175" pos:column="26">!=<pos:position pos:line="175" pos:column="28"/></operator> <name pos:line="175" pos:column="29">HTTPREQ_GET<pos:position pos:line="175" pos:column="40"/></name>
      <operator pos:line="176" pos:column="7">&amp;&amp;<pos:position pos:line="176" pos:column="17"/></operator> <operator pos:line="176" pos:column="10">!<pos:position pos:line="176" pos:column="11"/></operator><operator pos:line="176" pos:column="11">(<pos:position pos:line="176" pos:column="12"/></operator><name><name pos:line="176" pos:column="12">data<pos:position pos:line="176" pos:column="16"/></name><operator pos:line="176" pos:column="16">-&gt;<pos:position pos:line="176" pos:column="21"/></operator><name pos:line="176" pos:column="18">set<pos:position pos:line="176" pos:column="21"/></name><operator pos:line="176" pos:column="21">.<pos:position pos:line="176" pos:column="22"/></operator><name pos:line="176" pos:column="22">keep_post<pos:position pos:line="176" pos:column="31"/></name></name> <operator pos:line="176" pos:column="32">&amp;<pos:position pos:line="176" pos:column="37"/></operator> <name pos:line="176" pos:column="34">CURL_REDIR_POST_303<pos:position pos:line="176" pos:column="53"/></name><operator pos:line="176" pos:column="53">)<pos:position pos:line="176" pos:column="54"/></operator></expr>)<pos:position pos:line="176" pos:column="55"/></condition><then pos:line="176" pos:column="55"> <block pos:line="176" pos:column="56">{
      <expr_stmt><expr><name><name pos:line="177" pos:column="7">data<pos:position pos:line="177" pos:column="11"/></name><operator pos:line="177" pos:column="11">-&gt;<pos:position pos:line="177" pos:column="16"/></operator><name pos:line="177" pos:column="13">set<pos:position pos:line="177" pos:column="16"/></name><operator pos:line="177" pos:column="16">.<pos:position pos:line="177" pos:column="17"/></operator><name pos:line="177" pos:column="17">httpreq<pos:position pos:line="177" pos:column="24"/></name></name> <operator pos:line="177" pos:column="25">=<pos:position pos:line="177" pos:column="26"/></operator> <name pos:line="177" pos:column="27">HTTPREQ_GET<pos:position pos:line="177" pos:column="38"/></name></expr>;<pos:position pos:line="177" pos:column="39"/></expr_stmt> <comment type="block" pos:line="177" pos:column="40">/* enforce GET request */</comment>
      <expr_stmt><expr><call><name pos:line="178" pos:column="7">infof<pos:position pos:line="178" pos:column="12"/></name><argument_list pos:line="178" pos:column="12">(<argument><expr><name pos:line="178" pos:column="13">data<pos:position pos:line="178" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="19">"Disables POST, goes with %s\n"<pos:position pos:line="178" pos:column="50"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="179" pos:column="13">data<pos:position pos:line="179" pos:column="17"/></name><operator pos:line="179" pos:column="17">-&gt;<pos:position pos:line="179" pos:column="22"/></operator><name pos:line="179" pos:column="19">set<pos:position pos:line="179" pos:column="22"/></name><operator pos:line="179" pos:column="22">.<pos:position pos:line="179" pos:column="23"/></operator><name pos:line="179" pos:column="23">opt_no_body<pos:position pos:line="179" pos:column="34"/></name></name></expr>?<pos:position pos:line="179" pos:column="35"/></condition><then><expr><literal type="string" pos:line="179" pos:column="35">"HEAD"<pos:position pos:line="179" pos:column="41"/></literal></expr></then><else pos:line="179" pos:column="41">:<expr><literal type="string" pos:line="179" pos:column="42">"GET"<pos:position pos:line="179" pos:column="47"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="179" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="180" pos:column="6"/></block></then></if>
    <break pos:line="181" pos:column="5">break;<pos:position pos:line="181" pos:column="11"/></break>
  <case pos:line="182" pos:column="3">case <expr><literal type="number" pos:line="182" pos:column="8">304<pos:position pos:line="182" pos:column="11"/></literal></expr>:<pos:position pos:line="182" pos:column="12"/></case> <comment type="block" pos:line="182" pos:column="13">/* Not Modified */</comment>
    <comment type="block" pos:line="183" pos:column="5">/* 304 means we did a conditional request and it was "Not modified".
     * We shouldn't get any Location: header in this response!
     */</comment>
    <break pos:line="186" pos:column="5">break;<pos:position pos:line="186" pos:column="11"/></break>
  <case pos:line="187" pos:column="3">case <expr><literal type="number" pos:line="187" pos:column="8">305<pos:position pos:line="187" pos:column="11"/></literal></expr>:<pos:position pos:line="187" pos:column="12"/></case> <comment type="block" pos:line="187" pos:column="13">/* Use Proxy */</comment>
    <comment type="block" pos:line="188" pos:column="5">/* (quote from RFC2616, section 10.3.6):
     * "The requested resource MUST be accessed through the proxy given
     * by the Location field. The Location field gives the URI of the
     * proxy.  The recipient is expected to repeat this single request
     * via the proxy. 305 responses MUST only be generated by origin
     * servers."
     */</comment>
    <break pos:line="195" pos:column="5">break;<pos:position pos:line="195" pos:column="11"/></break>
  }<pos:position pos:line="196" pos:column="4"/></block></switch>
  <expr_stmt><expr><call><name pos:line="197" pos:column="3">Curl_pgrsTime<pos:position pos:line="197" pos:column="16"/></name><argument_list pos:line="197" pos:column="16">(<argument><expr><name pos:line="197" pos:column="17">data<pos:position pos:line="197" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="23">TIMER_REDIRECT<pos:position pos:line="197" pos:column="37"/></name></expr></argument>)<pos:position pos:line="197" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="198" pos:column="3">Curl_pgrsResetTransferSizes<pos:position pos:line="198" pos:column="30"/></name><argument_list pos:line="198" pos:column="30">(<argument><expr><name pos:line="198" pos:column="31">data<pos:position pos:line="198" pos:column="35"/></name></expr></argument>)<pos:position pos:line="198" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="37"/></expr_stmt>

  <return pos:line="200" pos:column="3">return <expr><name pos:line="200" pos:column="10">CURLE_OK<pos:position pos:line="200" pos:column="18"/></name></expr>;<pos:position pos:line="200" pos:column="19"/></return>
<cpp:endif pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">endif<pos:position pos:line="201" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="201" pos:column="8">/* CURL_DISABLE_HTTP */</comment>
}<pos:position pos:line="202" pos:column="2"/></block></function></unit>

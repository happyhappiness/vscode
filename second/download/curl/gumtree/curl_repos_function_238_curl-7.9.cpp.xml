<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_238_curl-7.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">yylex<pos:position pos:line="2" pos:column="6"/></name> <parameter_list pos:line="2" pos:column="7">()<pos:position pos:line="2" pos:column="9"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">register<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">unsigned<pos:position pos:line="4" pos:column="20"/></name> <name pos:line="4" pos:column="21">char<pos:position pos:line="4" pos:column="25"/></name></type> <name pos:line="4" pos:column="26">c<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">register<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">p<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buff<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><literal type="number" pos:line="6" pos:column="13">20<pos:position pos:line="6" pos:column="15"/></literal></expr>]<pos:position pos:line="6" pos:column="16"/></index></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">Count<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">sign<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init pos:line="10" pos:column="8">;<pos:position pos:line="10" pos:column="9"/></init><condition pos:line="10" pos:column="9">;<pos:position pos:line="10" pos:column="10"/></condition><incr/>)<pos:position pos:line="10" pos:column="11"/></control>
    <block pos:line="11" pos:column="5">{
      <while pos:line="12" pos:column="7">while <condition pos:line="12" pos:column="13">(<expr><call><name pos:line="12" pos:column="14">ISSPACE<pos:position pos:line="12" pos:column="21"/></name> <argument_list pos:line="12" pos:column="22">(<argument><expr><operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">unsigned<pos:position pos:line="12" pos:column="32"/></name> <name pos:line="12" pos:column="33">char<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator> <operator pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">yyInput<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="49"/></condition>
	<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">yyInput<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">++<pos:position pos:line="13" pos:column="18"/></operator></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt></block></while>

      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><call><name pos:line="15" pos:column="11">ISDIGIT<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">c<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">yyInput<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">||<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">c<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">==<pos:position pos:line="15" pos:column="41"/></operator> <literal type="char" pos:line="15" pos:column="42">'-'<pos:position pos:line="15" pos:column="45"/></literal> <operator pos:line="15" pos:column="46">||<pos:position pos:line="15" pos:column="48"/></operator> <name pos:line="15" pos:column="49">c<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">==<pos:position pos:line="15" pos:column="53"/></operator> <literal type="char" pos:line="15" pos:column="54">'+'<pos:position pos:line="15" pos:column="57"/></literal></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58">
	<block pos:line="16" pos:column="9">{
	  <if pos:line="17" pos:column="11">if <condition pos:line="17" pos:column="14">(<expr><name pos:line="17" pos:column="15">c<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">==<pos:position pos:line="17" pos:column="19"/></operator> <literal type="char" pos:line="17" pos:column="20">'-'<pos:position pos:line="17" pos:column="23"/></literal> <operator pos:line="17" pos:column="24">||<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">c<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <literal type="char" pos:line="17" pos:column="32">'+'<pos:position pos:line="17" pos:column="35"/></literal></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
	    <block pos:line="18" pos:column="13">{
	      <expr_stmt><expr><name pos:line="19" pos:column="15">sign<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="22">c<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">==<pos:position pos:line="19" pos:column="26"/></operator> <literal type="char" pos:line="19" pos:column="27">'-'<pos:position pos:line="19" pos:column="30"/></literal></expr> ?<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <expr><operator pos:line="19" pos:column="33">-<pos:position pos:line="19" pos:column="34"/></operator><literal type="number" pos:line="19" pos:column="34">1<pos:position pos:line="19" pos:column="35"/></literal></expr> <pos:position pos:line="19" pos:column="36"/></then><else pos:line="19" pos:column="36">: <expr><literal type="number" pos:line="19" pos:column="38">1<pos:position pos:line="19" pos:column="39"/></literal></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
	      <if pos:line="20" pos:column="15">if <condition pos:line="20" pos:column="18">(<expr><operator pos:line="20" pos:column="19">!<pos:position pos:line="20" pos:column="20"/></operator><call><name pos:line="20" pos:column="20">ISDIGIT<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator><operator pos:line="20" pos:column="30">++<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">yyInput<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
		<comment type="block" pos:line="21" pos:column="17">/* skip the '-' sign */</comment>
		<block type="pseudo"><continue pos:line="22" pos:column="17">continue;<pos:position pos:line="22" pos:column="26"/></continue></block></then></if>
	    }<pos:position pos:line="23" pos:column="14"/></block></then>
	  <else pos:line="24" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">sign<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt></block></else></if>
	  <for pos:line="26" pos:column="11">for <control pos:line="26" pos:column="15">(<init><expr><name><name pos:line="26" pos:column="16">yylval<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">Number<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></init> <condition><expr><call><name pos:line="26" pos:column="35">ISDIGIT<pos:position pos:line="26" pos:column="42"/></name> <argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">c<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">=<pos:position pos:line="26" pos:column="47"/></operator> <operator pos:line="26" pos:column="48">*<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">yyInput<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">++<pos:position pos:line="26" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></condition><incr/>)<pos:position pos:line="26" pos:column="61"/></control>
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="13">yylval<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">Number<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="29">10<pos:position pos:line="27" pos:column="31"/></literal> <operator pos:line="27" pos:column="32">*<pos:position pos:line="27" pos:column="33"/></operator> <name><name pos:line="27" pos:column="34">yylval<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">.<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">Number<pos:position pos:line="27" pos:column="47"/></name></name> <operator pos:line="27" pos:column="48">+<pos:position pos:line="27" pos:column="49"/></operator> <name pos:line="27" pos:column="50">c<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">-<pos:position pos:line="27" pos:column="53"/></operator> <literal type="char" pos:line="27" pos:column="54">'0'<pos:position pos:line="27" pos:column="57"/></literal></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt></block></for>
	  <expr_stmt><expr><name pos:line="28" pos:column="11">yyInput<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">--<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
	  <if pos:line="29" pos:column="11">if <condition pos:line="29" pos:column="14">(<expr><name pos:line="29" pos:column="15">sign<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">&lt;<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="22">0<pos:position pos:line="29" pos:column="23"/></literal></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="13">yylval<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">Number<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <operator pos:line="30" pos:column="29">-<pos:position pos:line="30" pos:column="30"/></operator><name><name pos:line="30" pos:column="30">yylval<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">.<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">Number<pos:position pos:line="30" pos:column="43"/></name></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt></block></then></if>
	  <return pos:line="31" pos:column="11">return <expr><ternary><condition><expr><name pos:line="31" pos:column="18">sign<pos:position pos:line="31" pos:column="22"/></name></expr> ?<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <expr><name pos:line="31" pos:column="25">tSNUMBER<pos:position pos:line="31" pos:column="33"/></name></expr> <pos:position pos:line="31" pos:column="34"/></then><else pos:line="31" pos:column="34">: <expr><name pos:line="31" pos:column="36">tUNUMBER<pos:position pos:line="31" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="45"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><call><name pos:line="33" pos:column="11">ISALPHA<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">c<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23">
	<block pos:line="34" pos:column="9">{
	  <for pos:line="35" pos:column="11">for <control pos:line="35" pos:column="15">(<init><expr><name pos:line="35" pos:column="16">p<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">buff<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></init> <condition><expr><operator pos:line="35" pos:column="26">(<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">c<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <operator pos:line="35" pos:column="31">*<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">yyInput<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">++<pos:position pos:line="35" pos:column="41"/></operator><operator pos:line="35" pos:column="41">,<pos:position pos:line="35" pos:column="42"/></operator> <call><name pos:line="35" pos:column="43">ISALPHA<pos:position pos:line="35" pos:column="50"/></name> <argument_list pos:line="35" pos:column="51">(<argument><expr><name pos:line="35" pos:column="52">c<pos:position pos:line="35" pos:column="53"/></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call><operator pos:line="35" pos:column="54">)<pos:position pos:line="35" pos:column="55"/></operator> <operator pos:line="35" pos:column="56">||<pos:position pos:line="35" pos:column="58"/></operator> <name pos:line="35" pos:column="59">c<pos:position pos:line="35" pos:column="60"/></name> <operator pos:line="35" pos:column="61">==<pos:position pos:line="35" pos:column="63"/></operator> <literal type="char" pos:line="35" pos:column="64">'.'<pos:position pos:line="35" pos:column="67"/></literal></expr>;<pos:position pos:line="35" pos:column="68"/></condition><incr/>)<pos:position pos:line="35" pos:column="69"/></control>
	    <block type="pseudo"><if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">p<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&lt;<pos:position pos:line="36" pos:column="23"/></operator> <operator pos:line="36" pos:column="21">&amp;<pos:position pos:line="36" pos:column="26"/></operator><name><name pos:line="36" pos:column="22">buff<pos:position pos:line="36" pos:column="26"/></name><index pos:line="36" pos:column="26">[<expr><sizeof pos:line="36" pos:column="27">sizeof <name pos:line="36" pos:column="34">buff<pos:position pos:line="36" pos:column="38"/></name></sizeof> <operator pos:line="36" pos:column="39">-<pos:position pos:line="36" pos:column="40"/></operator> <literal type="number" pos:line="36" pos:column="41">1<pos:position pos:line="36" pos:column="42"/></literal></expr>]<pos:position pos:line="36" pos:column="43"/></index></name></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44">
	      <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="15">*<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">p<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">++<pos:position pos:line="37" pos:column="19"/></operator> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">c<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt></block></then></if></block></for>
	  <expr_stmt><expr><operator pos:line="38" pos:column="11">*<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">p<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <literal type="char" pos:line="38" pos:column="16">'\0'<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="39" pos:column="11">yyInput<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">--<pos:position pos:line="39" pos:column="20"/></operator></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
	  <return pos:line="40" pos:column="11">return <expr><call><name pos:line="40" pos:column="18">LookupWord<pos:position pos:line="40" pos:column="28"/></name> <argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">buff<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name pos:line="42" pos:column="11">c<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">!=<pos:position pos:line="42" pos:column="15"/></operator> <literal type="char" pos:line="42" pos:column="16">'('<pos:position pos:line="42" pos:column="19"/></literal></expr>)<pos:position pos:line="42" pos:column="20"/></condition><then pos:line="42" pos:column="20">
	<block type="pseudo"><return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">yyInput<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">++<pos:position pos:line="43" pos:column="26"/></operator></expr>;<pos:position pos:line="43" pos:column="27"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="44" pos:column="7">Count<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <literal type="number" pos:line="44" pos:column="15">0<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
      <do pos:line="45" pos:column="7">do
	<block pos:line="46" pos:column="9">{
	  <expr_stmt><expr><name pos:line="47" pos:column="11">c<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <operator pos:line="47" pos:column="15">*<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">yyInput<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">++<pos:position pos:line="47" pos:column="25"/></operator></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
	  <if pos:line="48" pos:column="11">if <condition pos:line="48" pos:column="14">(<expr><name pos:line="48" pos:column="15">c<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">==<pos:position pos:line="48" pos:column="19"/></operator> <literal type="char" pos:line="48" pos:column="20">'\0'<pos:position pos:line="48" pos:column="24"/></literal></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
	    <block type="pseudo"><return pos:line="49" pos:column="13">return <expr><name pos:line="49" pos:column="20">c<pos:position pos:line="49" pos:column="21"/></name></expr>;<pos:position pos:line="49" pos:column="22"/></return></block></then></if>
	  <if pos:line="50" pos:column="11">if <condition pos:line="50" pos:column="14">(<expr><name pos:line="50" pos:column="15">c<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <literal type="char" pos:line="50" pos:column="20">'('<pos:position pos:line="50" pos:column="23"/></literal></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="13">Count<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">++<pos:position pos:line="51" pos:column="20"/></operator></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt></block></then>
	  <elseif pos:line="52" pos:column="11">else <if pos:line="52" pos:column="16">if <condition pos:line="52" pos:column="19">(<expr><name pos:line="52" pos:column="20">c<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">==<pos:position pos:line="52" pos:column="24"/></operator> <literal type="char" pos:line="52" pos:column="25">')'<pos:position pos:line="52" pos:column="28"/></literal></expr>)<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="13">Count<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">--<pos:position pos:line="53" pos:column="20"/></operator></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="54" pos:column="10"/></block>
      while <condition pos:line="55" pos:column="13">(<expr><name pos:line="55" pos:column="14">Count<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">&gt;<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="22">0<pos:position pos:line="55" pos:column="23"/></literal></expr>)<pos:position pos:line="55" pos:column="24"/></condition>;<pos:position pos:line="55" pos:column="25"/></do>
    }<pos:position pos:line="56" pos:column="6"/></block></for>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

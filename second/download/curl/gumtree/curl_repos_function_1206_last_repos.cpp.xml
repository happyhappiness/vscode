<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1206_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">kbd_callback<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">name<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">name_len<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">instruction<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">instruction_len<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">num_prompts<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
             <parameter><decl><type><specifier pos:line="4" pos:column="14">const<pos:position pos:line="4" pos:column="19"/></specifier> <name pos:line="4" pos:column="20">LIBSSH2_USERAUTH_KBDINT_PROMPT<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">prompts<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="5" pos:column="14">LIBSSH2_USERAUTH_KBDINT_RESPONSE<pos:position pos:line="5" pos:column="46"/></name> <modifier pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></modifier></type><name pos:line="5" pos:column="48">responses<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="6" pos:column="14">void<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">abstract<pos:position pos:line="6" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="30"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">connectdata<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">conn<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator>struct <name pos:line="8" pos:column="38">connectdata<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></operator><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator><operator pos:line="8" pos:column="52">*<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">abstract<pos:position pos:line="8" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">CURL_LIBSSH2_DEBUG<pos:position pos:line="10" pos:column="26"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">fprintf<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">stderr<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"name=%s\n"<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">name<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">fprintf<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">stderr<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"name_len=%d\n"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">name_len<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">fprintf<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">stderr<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"instruction=%s\n"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">instruction<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">fprintf<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">stderr<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"instruction_len=%d\n"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">instruction_len<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">fprintf<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">stderr<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"num_prompts=%d\n"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">num_prompts<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><operator pos:line="17" pos:column="3">(<pos:position pos:line="17" pos:column="4"/></operator><name pos:line="17" pos:column="4">void<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">)<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">name<pos:position pos:line="17" pos:column="13"/></name></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="18" pos:column="3">(<pos:position pos:line="18" pos:column="4"/></operator><name pos:line="18" pos:column="4">void<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">)<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">name_len<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">(<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">void<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">)<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">instruction<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="20" pos:column="3">(<pos:position pos:line="20" pos:column="4"/></operator><name pos:line="20" pos:column="4">void<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">)<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">instruction_len<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="21" pos:column="9">/* CURL_LIBSSH2_DEBUG */</comment>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">num_prompts<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">1<pos:position pos:line="22" pos:column="22"/></literal></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">responses<pos:position pos:line="23" pos:column="14"/></name><index pos:line="23" pos:column="14">[<expr><literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>]<pos:position pos:line="23" pos:column="17"/></index></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">text<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <call><name pos:line="23" pos:column="25">strdup<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name><name pos:line="23" pos:column="32">conn<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">passwd<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">responses<pos:position pos:line="24" pos:column="14"/></name><index pos:line="24" pos:column="14">[<expr><literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr>]<pos:position pos:line="24" pos:column="17"/></index></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">length<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">curlx_uztoui<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><call><name pos:line="24" pos:column="40">strlen<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name><name pos:line="24" pos:column="47">conn<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">passwd<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="26" pos:column="3">(<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">void<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">)<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">prompts<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="27" pos:column="3">(<pos:position pos:line="27" pos:column="4"/></operator><name pos:line="27" pos:column="4">void<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">)<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">abstract<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_684_curl-7.18.1.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">conncache<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">Curl_mk_connc<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">type<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="2" pos:column="33">long<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">amount<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <comment type="block" pos:line="2" pos:column="46">/* set -1 to use default */</comment>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* It is subject for debate how many default connections to have for a multi
     connection cache... */</comment>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">conncache<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">c<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">long<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">default_amount<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">type<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">CONNCACHE_PRIVATE<pos:position pos:line="10" pos:column="31"/></name></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <block pos:line="10" pos:column="33">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">default_amount<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <ternary><condition><expr><operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">amount<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">&lt;<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator></expr> ?<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <expr><literal type="number" pos:line="11" pos:column="37">5<pos:position pos:line="11" pos:column="38"/></literal></expr> <pos:position pos:line="11" pos:column="39"/></then><else pos:line="11" pos:column="39">: <expr><name pos:line="11" pos:column="41">amount<pos:position pos:line="11" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then>
  <else pos:line="13" pos:column="3">else <block pos:line="13" pos:column="8">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">default_amount<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <ternary><condition><expr><operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">amount<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&lt;<pos:position pos:line="14" pos:column="34"/></operator> <literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal><operator pos:line="14" pos:column="33">)<pos:position pos:line="14" pos:column="34"/></operator></expr> ?<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <expr><literal type="number" pos:line="14" pos:column="37">10<pos:position pos:line="14" pos:column="39"/></literal></expr> <pos:position pos:line="14" pos:column="40"/></then><else pos:line="14" pos:column="40">: <expr><name pos:line="14" pos:column="42">amount<pos:position pos:line="14" pos:column="48"/></name></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">c<pos:position pos:line="17" pos:column="4"/></name><operator pos:line="17" pos:column="4">=<pos:position pos:line="17" pos:column="5"/></operator> <call><name pos:line="17" pos:column="6">calloc<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><sizeof pos:line="17" pos:column="13">sizeof<argument_list pos:line="17" pos:column="19">(<argument><expr pos:line="17" pos:column="20">struct <name pos:line="17" pos:column="27">conncache<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="39">1<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">c<pos:position pos:line="18" pos:column="8"/></name></expr>)<pos:position pos:line="18" pos:column="9"/></condition><then pos:line="18" pos:column="9">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <if pos:line="21" pos:column="3">if<condition pos:line="21" pos:column="5">(<expr><call pos:line="21" pos:column="6">(<name pos:line="21" pos:column="7">size_t<pos:position pos:line="21" pos:column="13"/></name>)<argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">default_amount<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call> <operator pos:line="21" pos:column="31">&gt;<pos:position pos:line="21" pos:column="35"/></operator> <operator pos:line="21" pos:column="33">(<pos:position pos:line="21" pos:column="34"/></operator><operator pos:line="21" pos:column="34">(<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">size_t<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator><operator pos:line="21" pos:column="42">-<pos:position pos:line="21" pos:column="43"/></operator><literal type="number" pos:line="21" pos:column="43">1<pos:position pos:line="21" pos:column="44"/></literal><operator pos:line="21" pos:column="44">)<pos:position pos:line="21" pos:column="45"/></operator> <operator pos:line="21" pos:column="46">/<pos:position pos:line="21" pos:column="47"/></operator> <sizeof pos:line="21" pos:column="48">sizeof<argument_list pos:line="21" pos:column="54">(<argument><expr pos:line="21" pos:column="55">struct <name pos:line="21" pos:column="62">connectdata<pos:position pos:line="21" pos:column="73"/></name> <operator pos:line="21" pos:column="74">*<pos:position pos:line="21" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></sizeof></expr>)<pos:position pos:line="21" pos:column="77"/></condition><then pos:line="21" pos:column="77">
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">default_amount<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">size_t<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator><operator pos:line="22" pos:column="31">-<pos:position pos:line="22" pos:column="32"/></operator><literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">/<pos:position pos:line="22" pos:column="36"/></operator> <sizeof pos:line="22" pos:column="37">sizeof<argument_list pos:line="22" pos:column="43">(<argument><expr pos:line="22" pos:column="44">struct <name pos:line="22" pos:column="51">connectdata<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">*<pos:position pos:line="22" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">c<pos:position pos:line="24" pos:column="4"/></name><operator pos:line="24" pos:column="4">-&gt;<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="6">connects<pos:position pos:line="24" pos:column="14"/></name></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">calloc<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><sizeof pos:line="24" pos:column="24">sizeof<argument_list pos:line="24" pos:column="30">(<argument><expr pos:line="24" pos:column="31">struct <name pos:line="24" pos:column="38">connectdata<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">*<pos:position pos:line="24" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="24" pos:column="54">(<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="55">size_t<pos:position pos:line="24" pos:column="61"/></name><operator pos:line="24" pos:column="61">)<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="62">default_amount<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><operator pos:line="25" pos:column="6">!<pos:position pos:line="25" pos:column="7"/></operator><name><name pos:line="25" pos:column="7">c<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">connects<pos:position pos:line="25" pos:column="18"/></name></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">free<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">c<pos:position pos:line="26" pos:column="11"/></name></expr></argument>)<pos:position pos:line="26" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="13"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">NULL<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">c<pos:position pos:line="30" pos:column="4"/></name><operator pos:line="30" pos:column="4">-&gt;<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="6">num<pos:position pos:line="30" pos:column="9"/></name></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <name pos:line="30" pos:column="12">default_amount<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>

  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">c<pos:position pos:line="32" pos:column="11"/></name></expr>;<pos:position pos:line="32" pos:column="12"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

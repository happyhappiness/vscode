<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2105_curl-7.41.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">verifystatus<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">ssl_connect_data<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">connssl<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="10">ocsp_status<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">char<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">p<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">OCSP_RESPONSE<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">rsp<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">OCSP_BASICRESP<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">br<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">X509_STORE<pos:position pos:line="11" pos:column="13"/></name>     <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">st<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><name pos:line="11" pos:column="24">NULL<pos:position pos:line="11" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">STACK_OF<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">X509<pos:position pos:line="12" pos:column="16"/></name></expr></argument>)<pos:position pos:line="12" pos:column="17"/></argument_list></call> <operator pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">ch<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">long<pos:position pos:line="14" pos:column="7"/></name></type> <name pos:line="14" pos:column="8">len<pos:position pos:line="14" pos:column="11"/></name> <init pos:line="14" pos:column="12">= <expr><call><name pos:line="14" pos:column="14">SSL_get_tlsext_status_ocsp_resp<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">connssl<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">handle<pos:position pos:line="14" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="63">&amp;<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="64">p<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="67"/></decl_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">p<pos:position pos:line="16" pos:column="8"/></name></expr>)<pos:position pos:line="16" pos:column="9"/></condition><then pos:line="16" pos:column="9"> <block pos:line="16" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">failf<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">data<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="17">"No OCSP response received"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">result<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
    <goto pos:line="19" pos:column="5">goto <name pos:line="19" pos:column="10">end<pos:position pos:line="19" pos:column="13"/></name>;<pos:position pos:line="19" pos:column="14"/></goto>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">rsp<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">d2i_OCSP_RESPONSE<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">p<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">len<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">rsp<pos:position pos:line="23" pos:column="10"/></name></expr>)<pos:position pos:line="23" pos:column="11"/></condition><then pos:line="23" pos:column="11"> <block pos:line="23" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">failf<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">data<pos:position pos:line="24" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="17">"Invalid OCSP response"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">result<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="25" pos:column="41"/></name></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
    <goto pos:line="26" pos:column="5">goto <name pos:line="26" pos:column="10">end<pos:position pos:line="26" pos:column="13"/></name>;<pos:position pos:line="26" pos:column="14"/></goto>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="29" pos:column="3">ocsp_status<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">OCSP_response_status<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">rsp<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
  <if pos:line="30" pos:column="3">if<condition pos:line="30" pos:column="5">(<expr><name pos:line="30" pos:column="6">ocsp_status<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">!=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">OCSP_RESPONSE_STATUS_SUCCESSFUL<pos:position pos:line="30" pos:column="52"/></name></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53"> <block pos:line="30" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">failf<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">data<pos:position pos:line="31" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="17">"Invalid OCSP response status: %s (%d)"<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="32" pos:column="11">OCSP_response_status_str<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">ocsp_status<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">ocsp_status<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">result<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
    <goto pos:line="34" pos:column="5">goto <name pos:line="34" pos:column="10">end<pos:position pos:line="34" pos:column="13"/></name>;<pos:position pos:line="34" pos:column="14"/></goto>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="37" pos:column="3">br<pos:position pos:line="37" pos:column="5"/></name> <operator pos:line="37" pos:column="6">=<pos:position pos:line="37" pos:column="7"/></operator> <call><name pos:line="37" pos:column="8">OCSP_response_get1_basic<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">rsp<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><operator pos:line="38" pos:column="6">!<pos:position pos:line="38" pos:column="7"/></operator><name pos:line="38" pos:column="7">br<pos:position pos:line="38" pos:column="9"/></name></expr>)<pos:position pos:line="38" pos:column="10"/></condition><then pos:line="38" pos:column="10"> <block pos:line="38" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">failf<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name pos:line="39" pos:column="11">data<pos:position pos:line="39" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="17">"Invalid OCSP response"<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">result<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
    <goto pos:line="41" pos:column="5">goto <name pos:line="41" pos:column="10">end<pos:position pos:line="41" pos:column="13"/></name>;<pos:position pos:line="41" pos:column="14"/></goto>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="44" pos:column="3">ch<pos:position pos:line="44" pos:column="5"/></name> <operator pos:line="44" pos:column="6">=<pos:position pos:line="44" pos:column="7"/></operator> <call><name pos:line="44" pos:column="8">SSL_get_peer_cert_chain<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">connssl<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">-&gt;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="41">handle<pos:position pos:line="44" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="45" pos:column="3">st<pos:position pos:line="45" pos:column="5"/></name> <operator pos:line="45" pos:column="6">=<pos:position pos:line="45" pos:column="7"/></operator> <call><name pos:line="45" pos:column="8">SSL_CTX_get_cert_store<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name><name pos:line="45" pos:column="31">connssl<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">ctx<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="47" pos:column="3">/* The authorized responder cert in the OCSP response MUST be signed by the
     peer cert's issuer (see RFC6960 section 4.2.2.2). If that's a root cert,
     no problem, but if it's an intermediate cert OpenSSL has a bug where it
     expects this issuer to be present in the chain embedded in the OCSP
     response. So we add it if necessary. */</comment>

  <comment type="block" pos:line="53" pos:column="3">/* First make sure the peer cert chain includes both a peer and an issuer,
     and the OCSP response contains a responder cert. */</comment>
  <if pos:line="55" pos:column="3">if<condition pos:line="55" pos:column="5">(<expr><call><name pos:line="55" pos:column="6">sk_X509_num<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">ch<pos:position pos:line="55" pos:column="20"/></name></expr></argument>)<pos:position pos:line="55" pos:column="21"/></argument_list></call> <operator pos:line="55" pos:column="22">&gt;=<pos:position pos:line="55" pos:column="27"/></operator> <literal type="number" pos:line="55" pos:column="25">2<pos:position pos:line="55" pos:column="26"/></literal> <operator pos:line="55" pos:column="27">&amp;&amp;<pos:position pos:line="55" pos:column="37"/></operator> <call><name pos:line="55" pos:column="30">sk_X509_num<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name><name pos:line="55" pos:column="42">br<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">certs<pos:position pos:line="55" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call> <operator pos:line="55" pos:column="53">&gt;=<pos:position pos:line="55" pos:column="58"/></operator> <literal type="number" pos:line="55" pos:column="56">1<pos:position pos:line="55" pos:column="57"/></literal></expr>)<pos:position pos:line="55" pos:column="58"/></condition><then pos:line="55" pos:column="58"> <block pos:line="55" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">X509<pos:position pos:line="56" pos:column="9"/></name> <modifier pos:line="56" pos:column="10">*<pos:position pos:line="56" pos:column="11"/></modifier></type><name pos:line="56" pos:column="11">responder<pos:position pos:line="56" pos:column="20"/></name> <init pos:line="56" pos:column="21">= <expr><call><name pos:line="56" pos:column="23">sk_X509_value<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name><name pos:line="56" pos:column="37">br<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">certs<pos:position pos:line="56" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="48">sk_X509_num<pos:position pos:line="56" pos:column="59"/></name><argument_list pos:line="56" pos:column="59">(<argument><expr><name><name pos:line="56" pos:column="60">br<pos:position pos:line="56" pos:column="62"/></name><operator pos:line="56" pos:column="62">-&gt;<pos:position pos:line="56" pos:column="67"/></operator><name pos:line="56" pos:column="64">certs<pos:position pos:line="56" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call> <operator pos:line="56" pos:column="71">-<pos:position pos:line="56" pos:column="72"/></operator> <literal type="number" pos:line="56" pos:column="73">1<pos:position pos:line="56" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="76"/></decl_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* Find issuer of responder cert and add it to the OCSP response chain */</comment>
    <for pos:line="59" pos:column="5">for<control pos:line="59" pos:column="8">(<init><expr><name pos:line="59" pos:column="9">i<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <literal type="number" pos:line="59" pos:column="13">0<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></init> <condition><expr><name pos:line="59" pos:column="16">i<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">&lt;<pos:position pos:line="59" pos:column="22"/></operator> <call><name pos:line="59" pos:column="20">sk_X509_num<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">ch<pos:position pos:line="59" pos:column="34"/></name></expr></argument>)<pos:position pos:line="59" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="36"/></condition> <incr><expr><name pos:line="59" pos:column="37">i<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">++<pos:position pos:line="59" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="41"/></control> <block pos:line="59" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="60" pos:column="7">X509<pos:position pos:line="60" pos:column="11"/></name> <modifier pos:line="60" pos:column="12">*<pos:position pos:line="60" pos:column="13"/></modifier></type><name pos:line="60" pos:column="13">issuer<pos:position pos:line="60" pos:column="19"/></name> <init pos:line="60" pos:column="20">= <expr><call><name pos:line="60" pos:column="22">sk_X509_value<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">ch<pos:position pos:line="60" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="40">i<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="43"/></decl_stmt>
      <if pos:line="61" pos:column="7">if<condition pos:line="61" pos:column="9">(<expr><call><name pos:line="61" pos:column="10">X509_check_issued<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">issuer<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="36">responder<pos:position pos:line="61" pos:column="45"/></name></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call> <operator pos:line="61" pos:column="47">==<pos:position pos:line="61" pos:column="49"/></operator> <name pos:line="61" pos:column="50">X509_V_OK<pos:position pos:line="61" pos:column="59"/></name></expr>)<pos:position pos:line="61" pos:column="60"/></condition><then pos:line="61" pos:column="60"> <block pos:line="61" pos:column="61">{
        <if pos:line="62" pos:column="9">if<condition pos:line="62" pos:column="11">(<expr><operator pos:line="62" pos:column="12">!<pos:position pos:line="62" pos:column="13"/></operator><call><name pos:line="62" pos:column="13">OCSP_basic_add1_cert<pos:position pos:line="62" pos:column="33"/></name><argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">br<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="38">issuer<pos:position pos:line="62" pos:column="44"/></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="46"/></condition><then pos:line="62" pos:column="46"> <block pos:line="62" pos:column="47">{
          <expr_stmt><expr><call><name pos:line="63" pos:column="11">failf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">data<pos:position pos:line="63" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="23">"Could not add issuer cert to OCSP response"<pos:position pos:line="63" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt>
          <expr_stmt><expr><name pos:line="64" pos:column="11">result<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="64" pos:column="47"/></name></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
          <goto pos:line="65" pos:column="11">goto <name pos:line="65" pos:column="16">end<pos:position pos:line="65" pos:column="19"/></name>;<pos:position pos:line="65" pos:column="20"/></goto>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
    }<pos:position pos:line="68" pos:column="6"/></block></for>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><call><name pos:line="71" pos:column="6">OCSP_basic_verify<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">br<pos:position pos:line="71" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="28">ch<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="32">st<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="36">0<pos:position pos:line="71" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="38"/></argument_list></call> <operator pos:line="71" pos:column="39">&lt;=<pos:position pos:line="71" pos:column="44"/></operator> <literal type="number" pos:line="71" pos:column="42">0<pos:position pos:line="71" pos:column="43"/></literal></expr>)<pos:position pos:line="71" pos:column="44"/></condition><then pos:line="71" pos:column="44"> <block pos:line="71" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">failf<pos:position pos:line="72" pos:column="10"/></name><argument_list pos:line="72" pos:column="10">(<argument><expr><name pos:line="72" pos:column="11">data<pos:position pos:line="72" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="17">"OCSP response verification failed"<pos:position pos:line="72" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="73" pos:column="5">result<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <name pos:line="73" pos:column="14">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="73" pos:column="41"/></name></expr>;<pos:position pos:line="73" pos:column="42"/></expr_stmt>
    <goto pos:line="74" pos:column="5">goto <name pos:line="74" pos:column="10">end<pos:position pos:line="74" pos:column="13"/></name>;<pos:position pos:line="74" pos:column="14"/></goto>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <for pos:line="77" pos:column="3">for<control pos:line="77" pos:column="6">(<init><expr><name pos:line="77" pos:column="7">i<pos:position pos:line="77" pos:column="8"/></name> <operator pos:line="77" pos:column="9">=<pos:position pos:line="77" pos:column="10"/></operator> <literal type="number" pos:line="77" pos:column="11">0<pos:position pos:line="77" pos:column="12"/></literal></expr>;<pos:position pos:line="77" pos:column="13"/></init> <condition><expr><name pos:line="77" pos:column="14">i<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">&lt;<pos:position pos:line="77" pos:column="20"/></operator> <call><name pos:line="77" pos:column="18">sk_OCSP_SINGLERESP_num<pos:position pos:line="77" pos:column="40"/></name><argument_list pos:line="77" pos:column="40">(<argument><expr><name><name pos:line="77" pos:column="41">br<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">-&gt;<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="45">tbsResponseData<pos:position pos:line="77" pos:column="60"/></name><operator pos:line="77" pos:column="60">-&gt;<pos:position pos:line="77" pos:column="65"/></operator><name pos:line="77" pos:column="62">responses<pos:position pos:line="77" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="73"/></condition> <incr><expr><name pos:line="77" pos:column="74">i<pos:position pos:line="77" pos:column="75"/></name><operator pos:line="77" pos:column="75">++<pos:position pos:line="77" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="77" pos:column="78"/></control> <block pos:line="77" pos:column="79">{
    <decl_stmt><decl><type><name pos:line="78" pos:column="5">int<pos:position pos:line="78" pos:column="8"/></name></type> <name pos:line="78" pos:column="9">cert_status<pos:position pos:line="78" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="78" pos:column="22">crl_reason<pos:position pos:line="78" pos:column="32"/></name></decl>;<pos:position pos:line="78" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="79" pos:column="5">OCSP_SINGLERESP<pos:position pos:line="79" pos:column="20"/></name> <modifier pos:line="79" pos:column="21">*<pos:position pos:line="79" pos:column="22"/></modifier></type><name pos:line="79" pos:column="22">single<pos:position pos:line="79" pos:column="28"/></name> <init pos:line="79" pos:column="29">= <expr><name pos:line="79" pos:column="31">NULL<pos:position pos:line="79" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="79" pos:column="36"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="81" pos:column="5">ASN1_GENERALIZEDTIME<pos:position pos:line="81" pos:column="25"/></name> <modifier pos:line="81" pos:column="26">*<pos:position pos:line="81" pos:column="27"/></modifier></type><name pos:line="81" pos:column="27">rev<pos:position pos:line="81" pos:column="30"/></name></decl>, <modifier pos:line="81" pos:column="32">*<pos:position pos:line="81" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="81" pos:column="33">thisupd<pos:position pos:line="81" pos:column="40"/></name></decl>, <modifier pos:line="81" pos:column="42">*<pos:position pos:line="81" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="81" pos:column="43">nextupd<pos:position pos:line="81" pos:column="50"/></name></decl>;<pos:position pos:line="81" pos:column="51"/></decl_stmt>

    <if pos:line="83" pos:column="5">if<condition pos:line="83" pos:column="7">(<expr><operator pos:line="83" pos:column="8">!<pos:position pos:line="83" pos:column="9"/></operator><call><name pos:line="83" pos:column="9">sk_OCSP_SINGLERESP_value<pos:position pos:line="83" pos:column="33"/></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name><name pos:line="83" pos:column="34">br<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">-&gt;<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="38">tbsResponseData<pos:position pos:line="83" pos:column="53"/></name><operator pos:line="83" pos:column="53">-&gt;<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="55">responses<pos:position pos:line="83" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="66">i<pos:position pos:line="83" pos:column="67"/></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="69"/></condition><then pos:line="83" pos:column="69">
      <block type="pseudo"><continue pos:line="84" pos:column="7">continue;<pos:position pos:line="84" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="86" pos:column="5">single<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <call><name pos:line="86" pos:column="14">sk_OCSP_SINGLERESP_value<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name><name pos:line="86" pos:column="39">br<pos:position pos:line="86" pos:column="41"/></name><operator pos:line="86" pos:column="41">-&gt;<pos:position pos:line="86" pos:column="46"/></operator><name pos:line="86" pos:column="43">tbsResponseData<pos:position pos:line="86" pos:column="58"/></name><operator pos:line="86" pos:column="58">-&gt;<pos:position pos:line="86" pos:column="63"/></operator><name pos:line="86" pos:column="60">responses<pos:position pos:line="86" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="71">i<pos:position pos:line="86" pos:column="72"/></name></expr></argument>)<pos:position pos:line="86" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><name pos:line="88" pos:column="5">cert_status<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <call><name pos:line="88" pos:column="19">OCSP_single_get0_status<pos:position pos:line="88" pos:column="42"/></name><argument_list pos:line="88" pos:column="42">(<argument><expr><name pos:line="88" pos:column="43">single<pos:position pos:line="88" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="51">&amp;<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="52">crl_reason<pos:position pos:line="88" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="64">&amp;<pos:position pos:line="88" pos:column="69"/></operator><name pos:line="88" pos:column="65">rev<pos:position pos:line="88" pos:column="68"/></name></expr></argument>,
                                          <argument><expr><operator pos:line="89" pos:column="43">&amp;<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="44">thisupd<pos:position pos:line="89" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="53">&amp;<pos:position pos:line="89" pos:column="58"/></operator><name pos:line="89" pos:column="54">nextupd<pos:position pos:line="89" pos:column="61"/></name></expr></argument>)<pos:position pos:line="89" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="63"/></expr_stmt>

    <if pos:line="91" pos:column="5">if<condition pos:line="91" pos:column="7">(<expr><operator pos:line="91" pos:column="8">!<pos:position pos:line="91" pos:column="9"/></operator><call><name pos:line="91" pos:column="9">OCSP_check_validity<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">thisupd<pos:position pos:line="91" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="38">nextupd<pos:position pos:line="91" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="47">300L<pos:position pos:line="91" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="91" pos:column="53">-<pos:position pos:line="91" pos:column="54"/></operator><literal type="number" pos:line="91" pos:column="54">1L<pos:position pos:line="91" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="58"/></condition><then pos:line="91" pos:column="58"> <block pos:line="91" pos:column="59">{
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">failf<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">data<pos:position pos:line="92" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="19">"OCSP response has expired"<pos:position pos:line="92" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="93" pos:column="7">result<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <name pos:line="93" pos:column="16">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="93" pos:column="43"/></name></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
      <goto pos:line="94" pos:column="7">goto <name pos:line="94" pos:column="12">end<pos:position pos:line="94" pos:column="15"/></name>;<pos:position pos:line="94" pos:column="16"/></goto>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">infof<pos:position pos:line="97" pos:column="10"/></name><argument_list pos:line="97" pos:column="10">(<argument><expr><name pos:line="97" pos:column="11">data<pos:position pos:line="97" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="17">"SSL certificate status: %s (%d)\n"<pos:position pos:line="97" pos:column="52"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="98" pos:column="11">OCSP_cert_status_str<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">cert_status<pos:position pos:line="98" pos:column="43"/></name></expr></argument>)<pos:position pos:line="98" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="98" pos:column="46">cert_status<pos:position pos:line="98" pos:column="57"/></name></expr></argument>)<pos:position pos:line="98" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="59"/></expr_stmt>

    <switch pos:line="100" pos:column="5">switch<condition pos:line="100" pos:column="11">(<expr><name pos:line="100" pos:column="12">cert_status<pos:position pos:line="100" pos:column="23"/></name></expr>)<pos:position pos:line="100" pos:column="24"/></condition> <block pos:line="100" pos:column="25">{
      <case pos:line="101" pos:column="7">case <expr><name pos:line="101" pos:column="12">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="101" pos:column="34"/></name></expr>:<pos:position pos:line="101" pos:column="35"/></case>
        <break pos:line="102" pos:column="9">break;<pos:position pos:line="102" pos:column="15"/></break>

      <case pos:line="104" pos:column="7">case <expr><name pos:line="104" pos:column="12">V_OCSP_CERTSTATUS_REVOKED<pos:position pos:line="104" pos:column="37"/></name></expr>:<pos:position pos:line="104" pos:column="38"/></case>
        <expr_stmt><expr><name pos:line="105" pos:column="9">result<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <name pos:line="105" pos:column="18">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="105" pos:column="45"/></name></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="107" pos:column="9">failf<pos:position pos:line="107" pos:column="14"/></name><argument_list pos:line="107" pos:column="14">(<argument><expr><name pos:line="107" pos:column="15">data<pos:position pos:line="107" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="21">"SSL certificate revocation reason: %s (%d)"<pos:position pos:line="107" pos:column="65"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="108" pos:column="15">OCSP_crl_reason_str<pos:position pos:line="108" pos:column="34"/></name><argument_list pos:line="108" pos:column="34">(<argument><expr><name pos:line="108" pos:column="35">crl_reason<pos:position pos:line="108" pos:column="45"/></name></expr></argument>)<pos:position pos:line="108" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="108" pos:column="48">crl_reason<pos:position pos:line="108" pos:column="58"/></name></expr></argument>)<pos:position pos:line="108" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="60"/></expr_stmt>
        <goto pos:line="109" pos:column="9">goto <name pos:line="109" pos:column="14">end<pos:position pos:line="109" pos:column="17"/></name>;<pos:position pos:line="109" pos:column="18"/></goto>

      <case pos:line="111" pos:column="7">case <expr><name pos:line="111" pos:column="12">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="111" pos:column="37"/></name></expr>:<pos:position pos:line="111" pos:column="38"/></case>
        <expr_stmt><expr><name pos:line="112" pos:column="9">result<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator> <name pos:line="112" pos:column="18">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="112" pos:column="45"/></name></expr>;<pos:position pos:line="112" pos:column="46"/></expr_stmt>
        <goto pos:line="113" pos:column="9">goto <name pos:line="113" pos:column="14">end<pos:position pos:line="113" pos:column="17"/></name>;<pos:position pos:line="113" pos:column="18"/></goto>
    }<pos:position pos:line="114" pos:column="6"/></block></switch>
  }<pos:position pos:line="115" pos:column="4"/></block></for>

<label><name pos:line="117" pos:column="1">end<pos:position pos:line="117" pos:column="4"/></name>:<pos:position pos:line="117" pos:column="5"/></label>
  <if pos:line="118" pos:column="3">if<condition pos:line="118" pos:column="5">(<expr><name pos:line="118" pos:column="6">br<pos:position pos:line="118" pos:column="8"/></name></expr>)<pos:position pos:line="118" pos:column="9"/></condition><then pos:line="118" pos:column="9"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="10">OCSP_BASICRESP_free<pos:position pos:line="118" pos:column="29"/></name><argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">br<pos:position pos:line="118" pos:column="32"/></name></expr></argument>)<pos:position pos:line="118" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="34"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="119" pos:column="3">OCSP_RESPONSE_free<pos:position pos:line="119" pos:column="21"/></name><argument_list pos:line="119" pos:column="21">(<argument><expr><name pos:line="119" pos:column="22">rsp<pos:position pos:line="119" pos:column="25"/></name></expr></argument>)<pos:position pos:line="119" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt>

  <return pos:line="121" pos:column="3">return <expr><name pos:line="121" pos:column="10">result<pos:position pos:line="121" pos:column="16"/></name></expr>;<pos:position pos:line="121" pos:column="17"/></return>
}<pos:position pos:line="122" pos:column="2"/></block></function></unit>

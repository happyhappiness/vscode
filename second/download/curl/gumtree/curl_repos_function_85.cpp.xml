<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_85.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">http_connect<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">connectdata<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">conn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">UrlData<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">data<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">data<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator><name><name pos:line="5" pos:column="8">conn<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">data<pos:position pos:line="5" pos:column="18"/></name></name></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* If we are not using a proxy and we want a secure connection,
   * perform SSL initialization &amp; connection now.
   * If using a proxy with https, then we must tell the proxy to CONNECT
   * us to the host we want to talk to.  Only after the connect
   * has occured, can we start talking SSL
   */</comment>
   <if pos:line="13" pos:column="4">if <condition pos:line="13" pos:column="7">(<expr><name><name pos:line="13" pos:column="8">conn<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">protocol<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="25">PROT_HTTPS<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <block pos:line="13" pos:column="37">{
     <if pos:line="14" pos:column="6">if <condition pos:line="14" pos:column="9">(<expr><name><name pos:line="14" pos:column="10">data<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">bits<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">httpproxy<pos:position pos:line="14" pos:column="30"/></name></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <block pos:line="14" pos:column="32">{

        <comment type="block" pos:line="16" pos:column="9">/* OK, now send the connect statment */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">sendf<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">data<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">firstsocket<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">data<pos:position pos:line="17" pos:column="38"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="18" pos:column="15">"CONNECT %s:%d HTTP/1.0\015\012"<pos:position pos:line="18" pos:column="47"/></literal>
              <literal type="string" pos:line="19" pos:column="15">"%s"<pos:position pos:line="19" pos:column="19"/></literal>
	      <literal type="string" pos:line="20" pos:column="15">"%s"<pos:position pos:line="20" pos:column="19"/></literal>
              <literal type="string" pos:line="21" pos:column="15">"\r\n"<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="22" pos:column="15">data<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">hostname<pos:position pos:line="22" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="31">data<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">remote_port<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></operator><name><name pos:line="23" pos:column="16">data<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">bits<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">proxy_user_passwd<pos:position pos:line="23" pos:column="44"/></name></name><operator pos:line="23" pos:column="44">)<pos:position pos:line="23" pos:column="45"/></operator></expr>?<pos:position pos:line="23" pos:column="46"/></condition><then><expr><name><name pos:line="23" pos:column="46">data<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">ptr_proxyuserpwd<pos:position pos:line="23" pos:column="68"/></name></name></expr></then><else pos:line="23" pos:column="68">:<expr><literal type="string" pos:line="23" pos:column="69">""<pos:position pos:line="23" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><ternary><condition><expr><name><name pos:line="24" pos:column="16">data<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">useragent<pos:position pos:line="24" pos:column="31"/></name></name></expr>?<pos:position pos:line="24" pos:column="32"/></condition><then><expr><name><name pos:line="24" pos:column="32">data<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">ptr_uagent<pos:position pos:line="24" pos:column="48"/></name></name></expr></then><else pos:line="24" pos:column="48">:<expr><literal type="string" pos:line="24" pos:column="49">""<pos:position pos:line="24" pos:column="51"/></literal></expr></else></ternary><operator pos:line="24" pos:column="51">)<pos:position pos:line="24" pos:column="52"/></operator></expr></argument>
              )<pos:position pos:line="25" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>

        <comment type="block" pos:line="27" pos:column="9">/* wait for the proxy to send us a HTTP/1.0 200 OK header */</comment>
	<comment type="block" pos:line="28" pos:column="9">/* Daniel rewrote this part Nov 5 1998 to make it more obvious */</comment>
	<block pos:line="29" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="30" pos:column="11">int<pos:position pos:line="30" pos:column="14"/></name></type> <name pos:line="30" pos:column="15">httperror<pos:position pos:line="30" pos:column="24"/></name><init pos:line="30" pos:column="24">=<expr><literal type="number" pos:line="30" pos:column="25">0<pos:position pos:line="30" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="27"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="31" pos:column="11">int<pos:position pos:line="31" pos:column="14"/></name></type> <name pos:line="31" pos:column="15">subversion<pos:position pos:line="31" pos:column="25"/></name><init pos:line="31" pos:column="25">=<expr><literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="28"/></decl_stmt>
	  <while pos:line="32" pos:column="11">while<condition pos:line="32" pos:column="16">(<expr><call><name pos:line="32" pos:column="17">GetLine<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name><name pos:line="32" pos:column="25">data<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">firstsocket<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="44">data<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">buffer<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">data<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="64"/></condition> <block pos:line="32" pos:column="65">{
	    <if pos:line="33" pos:column="13">if<condition pos:line="33" pos:column="15">(<expr><literal type="char" pos:line="33" pos:column="16">'\r'<pos:position pos:line="33" pos:column="20"/></literal> <operator pos:line="33" pos:column="21">==<pos:position pos:line="33" pos:column="23"/></operator> <name><name pos:line="33" pos:column="24">data<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">buffer<pos:position pos:line="33" pos:column="36"/></name><index pos:line="33" pos:column="36">[<expr><literal type="number" pos:line="33" pos:column="37">0<pos:position pos:line="33" pos:column="38"/></literal></expr>]<pos:position pos:line="33" pos:column="39"/></index></name></expr>)<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40">
	      <block type="pseudo"><break pos:line="34" pos:column="15">break;<pos:position pos:line="34" pos:column="21"/></break></block></then></if> <comment type="block" pos:line="34" pos:column="22">/* end of headers */</comment>
	    <if pos:line="35" pos:column="13">if<condition pos:line="35" pos:column="15">(<expr><literal type="number" pos:line="35" pos:column="16">2<pos:position pos:line="35" pos:column="17"/></literal> <operator pos:line="35" pos:column="18">==<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">sscanf<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">data<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">buffer<pos:position pos:line="35" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="42">"HTTP/1.%d %d"<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>,
			   <argument><expr><operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="29">subversion<pos:position pos:line="36" pos:column="39"/></name></expr></argument>,
			   <argument><expr><operator pos:line="37" pos:column="28">&amp;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="29">httperror<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
	      <empty_stmt pos:line="38" pos:column="15">;<pos:position pos:line="38" pos:column="16"/></empty_stmt>
	    }<pos:position pos:line="39" pos:column="14"/></block></then></if>
	  }<pos:position pos:line="40" pos:column="12"/></block></while>
	  <if pos:line="41" pos:column="11">if<condition pos:line="41" pos:column="13">(<expr><literal type="number" pos:line="41" pos:column="14">200<pos:position pos:line="41" pos:column="17"/></literal> <operator pos:line="41" pos:column="18">!=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">httperror<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <block pos:line="41" pos:column="32">{
	    <if pos:line="42" pos:column="13">if<condition pos:line="42" pos:column="15">(<expr><literal type="number" pos:line="42" pos:column="16">407<pos:position pos:line="42" pos:column="19"/></literal> <operator pos:line="42" pos:column="20">==<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">httperror<pos:position pos:line="42" pos:column="32"/></name></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33">
	      <comment type="block" pos:line="43" pos:column="15">/* Added Nov 6 1998 */</comment>
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="15">failf<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">data<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"Proxy requires authorization!"<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt></block></then>
	    <else pos:line="45" pos:column="13">else 
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="15">failf<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">data<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="27">"Received error code %d from proxy"<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">httperror<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt></block></else></if>
	    <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">CURLE_READ_ERROR<pos:position pos:line="47" pos:column="36"/></name></expr>;<pos:position pos:line="47" pos:column="37"/></return>
	  }<pos:position pos:line="48" pos:column="12"/></block></then></if>
	}<pos:position pos:line="49" pos:column="10"/></block>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">infof<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">data<pos:position pos:line="50" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="22">"Proxy has replied to CONNECT request\n"<pos:position pos:line="50" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="64"/></expr_stmt>
     }<pos:position pos:line="51" pos:column="7"/></block></then></if>

      <comment type="block" pos:line="53" pos:column="7">/* now, perform the SSL initialization for this socket */</comment>
     <if pos:line="54" pos:column="6">if<condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">UrgSSLConnect<pos:position pos:line="54" pos:column="22"/></name> <argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">data<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30"> <block pos:line="54" pos:column="31">{
       <return pos:line="55" pos:column="8">return <expr><name pos:line="55" pos:column="15">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="55" pos:column="38"/></name></expr>;<pos:position pos:line="55" pos:column="39"/></return>
     }<pos:position pos:line="56" pos:column="7"/></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

   <if pos:line="59" pos:column="4">if<condition pos:line="59" pos:column="6">(<expr><name><name pos:line="59" pos:column="7">data<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">bits<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">user_passwd<pos:position pos:line="59" pos:column="29"/></name></name> <operator pos:line="59" pos:column="30">&amp;&amp;<pos:position pos:line="59" pos:column="40"/></operator> <operator pos:line="59" pos:column="33">!<pos:position pos:line="59" pos:column="34"/></operator><name><name pos:line="59" pos:column="34">data<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">-&gt;<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="40">bits<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">.<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="45">this_is_a_follow<pos:position pos:line="59" pos:column="61"/></name></name></expr>)<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62"> <block pos:line="59" pos:column="63">{
     <comment type="block" pos:line="60" pos:column="6">/* Authorization: is requested, this is not a followed location, get the
        original host name */</comment>
     <expr_stmt><expr><name><name pos:line="62" pos:column="6">data<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">auth_host<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <call><name pos:line="62" pos:column="24">strdup<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name><name pos:line="62" pos:column="31">data<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">hostname<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
   }<pos:position pos:line="63" pos:column="5"/></block></then></if>

   <return pos:line="65" pos:column="4">return <expr><name pos:line="65" pos:column="11">CURLE_OK<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

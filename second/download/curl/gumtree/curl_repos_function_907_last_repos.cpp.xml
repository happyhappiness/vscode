<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_907_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">operate<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">GlobalConfig<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">config<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">argc<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">argv_item_t<pos:position pos:line="1" pos:column="68"/></name></type> <name><name pos:line="1" pos:column="69">argv<pos:position pos:line="1" pos:column="73"/></name><index pos:line="1" pos:column="73">[]<pos:position pos:line="1" pos:column="75"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* Setup proper locale from environment */</comment>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_SETLOCALE<pos:position pos:line="6" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">setlocale<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">LC_ALL<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="21">""<pos:position pos:line="7" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="10" pos:column="3">/* Parse .curlrc if necessary */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">argc<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal><operator pos:line="11" pos:column="16">)<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">||<pos:position pos:line="11" pos:column="20"/></operator>
     <operator pos:line="12" pos:column="6">(<pos:position pos:line="12" pos:column="7"/></operator><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><call><name pos:line="12" pos:column="8">curl_strequal<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name><name pos:line="12" pos:column="22">argv<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><literal type="number" pos:line="12" pos:column="27">1<pos:position pos:line="12" pos:column="28"/></literal></expr>]<pos:position pos:line="12" pos:column="29"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"-q"<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">&amp;&amp;<pos:position pos:line="12" pos:column="47"/></operator>
      <operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><call><name pos:line="13" pos:column="8">curl_strequal<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name><name pos:line="13" pos:column="22">argv<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><literal type="number" pos:line="13" pos:column="27">1<pos:position pos:line="13" pos:column="28"/></literal></expr>]<pos:position pos:line="13" pos:column="29"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"--disable"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call><operator pos:line="13" pos:column="43">)<pos:position pos:line="13" pos:column="44"/></operator></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">parseconfig<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="23">config<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt> <comment type="block" pos:line="14" pos:column="32">/* ignore possible failure */</comment>

    <comment type="block" pos:line="16" pos:column="5">/* If we had no arguments then make sure a url was specified in .curlrc */</comment>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">argc<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">&lt;<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="16">2<pos:position pos:line="17" pos:column="17"/></literal><operator pos:line="17" pos:column="17">)<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">&amp;&amp;<pos:position pos:line="17" pos:column="29"/></operator> <operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">!<pos:position pos:line="17" pos:column="24"/></operator><name><name pos:line="17" pos:column="24">config<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">first<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">url_list<pos:position pos:line="17" pos:column="47"/></name></name><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">helpf<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name><name pos:line="18" pos:column="13">config<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">errors<pos:position pos:line="18" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">NULL<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">result<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">CURLE_FAILED_INIT<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">result<pos:position pos:line="23" pos:column="13"/></name></expr>)<pos:position pos:line="23" pos:column="14"/></condition><then pos:line="23" pos:column="14"> <block pos:line="23" pos:column="15">{
    <comment type="block" pos:line="24" pos:column="5">/* Parse the command line arguments */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">ParameterError<pos:position pos:line="25" pos:column="19"/></name></type> <name pos:line="25" pos:column="20">res<pos:position pos:line="25" pos:column="23"/></name> <init pos:line="25" pos:column="24">= <expr><call><name pos:line="25" pos:column="26">parse_args<pos:position pos:line="25" pos:column="36"/></name><argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">config<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">argc<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">argv<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="57"/></decl_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">res<pos:position pos:line="26" pos:column="11"/></name></expr>)<pos:position pos:line="26" pos:column="12"/></condition><then pos:line="26" pos:column="12"> <block pos:line="26" pos:column="13">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">result<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">CURLE_OK<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="29" pos:column="7">/* Check if we were asked for the help */</comment>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><name pos:line="30" pos:column="10">res<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">==<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">PARAM_HELP_REQUESTED<pos:position pos:line="30" pos:column="37"/></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">tool_help<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">()<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt></block></then>
      <comment type="block" pos:line="32" pos:column="7">/* Check if we were asked for the manual */</comment>
      <elseif pos:line="33" pos:column="7">else <if pos:line="33" pos:column="12">if<condition pos:line="33" pos:column="14">(<expr><name pos:line="33" pos:column="15">res<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">==<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">PARAM_MANUAL_REQUESTED<pos:position pos:line="33" pos:column="44"/></name></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="9">hugehelp<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">()<pos:position pos:line="34" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt></block></then></if></elseif>
      <comment type="block" pos:line="35" pos:column="7">/* Check if we were asked for the version information */</comment>
      <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if<condition pos:line="36" pos:column="14">(<expr><name pos:line="36" pos:column="15">res<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">PARAM_VERSION_INFO_REQUESTED<pos:position pos:line="36" pos:column="50"/></name></expr>)<pos:position pos:line="36" pos:column="51"/></condition><then pos:line="36" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">tool_version_info<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">()<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt></block></then></if></elseif>
      <comment type="block" pos:line="38" pos:column="7">/* Check if we were asked to list the SSL engines */</comment>
      <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if<condition pos:line="39" pos:column="14">(<expr><name pos:line="39" pos:column="15">res<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">==<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">PARAM_ENGINES_REQUESTED<pos:position pos:line="39" pos:column="45"/></name></expr>)<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="9">tool_list_engines<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name><name pos:line="40" pos:column="27">config<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">easy<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if<condition pos:line="41" pos:column="14">(<expr><name pos:line="41" pos:column="15">res<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">==<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">PARAM_LIBCURL_UNSUPPORTED_PROTOCOL<pos:position pos:line="41" pos:column="56"/></name></expr>)<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">result<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="42" pos:column="44"/></name></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt></block></then></if></elseif>
      <else pos:line="43" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="9">result<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <name pos:line="44" pos:column="18">CURLE_FAILED_INIT<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt></block></else></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <else pos:line="46" pos:column="5">else <block pos:line="46" pos:column="10">{
<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef<pos:position pos:line="47" pos:column="8"/></cpp:directive> <name pos:line="47" pos:column="9">CURL_DISABLE_LIBCURL_OPTION<pos:position pos:line="47" pos:column="36"/></name></cpp:ifndef>
      <if pos:line="48" pos:column="7">if<condition pos:line="48" pos:column="9">(<expr><name><name pos:line="48" pos:column="10">config<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">libcurl<pos:position pos:line="48" pos:column="25"/></name></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26"> <block pos:line="48" pos:column="27">{
        <comment type="block" pos:line="49" pos:column="9">/* Initialise the libcurl source output */</comment>
        <expr_stmt><expr><name pos:line="50" pos:column="9">result<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">easysrc_init<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">()<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="54" pos:column="7">/* Perform the main operations */</comment>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">(<expr><operator pos:line="55" pos:column="10">!<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">result<pos:position pos:line="55" pos:column="17"/></name></expr>)<pos:position pos:line="55" pos:column="18"/></condition><then pos:line="55" pos:column="18"> <block pos:line="55" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="56" pos:column="9">size_t<pos:position pos:line="56" pos:column="15"/></name></type> <name pos:line="56" pos:column="16">count<pos:position pos:line="56" pos:column="21"/></name> <init pos:line="56" pos:column="22">= <expr><literal type="number" pos:line="56" pos:column="24">0<pos:position pos:line="56" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="56" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="57" pos:column="9">struct<pos:position pos:line="57" pos:column="15"/></name> <name pos:line="57" pos:column="16">OperationConfig<pos:position pos:line="57" pos:column="31"/></name></name> <modifier pos:line="57" pos:column="32">*<pos:position pos:line="57" pos:column="33"/></modifier></type><name pos:line="57" pos:column="33">operation<pos:position pos:line="57" pos:column="42"/></name> <init pos:line="57" pos:column="43">= <expr><name><name pos:line="57" pos:column="45">config<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">-&gt;<pos:position pos:line="57" pos:column="56"/></operator><name pos:line="57" pos:column="53">first<pos:position pos:line="57" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="57" pos:column="59"/></decl_stmt>

        <comment type="block" pos:line="59" pos:column="9">/* Get the required aguments for each operation */</comment>
        <while pos:line="60" pos:column="9">while<condition pos:line="60" pos:column="14">(<expr><operator pos:line="60" pos:column="15">!<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="16">result<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">&amp;&amp;<pos:position pos:line="60" pos:column="33"/></operator> <name pos:line="60" pos:column="26">operation<pos:position pos:line="60" pos:column="35"/></name></expr>)<pos:position pos:line="60" pos:column="36"/></condition> <block pos:line="60" pos:column="37">{
          <expr_stmt><expr><name pos:line="61" pos:column="11">result<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <call><name pos:line="61" pos:column="20">get_args<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">operation<pos:position pos:line="61" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="40">count<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">++<pos:position pos:line="61" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>

          <expr_stmt><expr><name pos:line="63" pos:column="11">operation<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <name><name pos:line="63" pos:column="23">operation<pos:position pos:line="63" pos:column="32"/></name><operator pos:line="63" pos:column="32">-&gt;<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="34">next<pos:position pos:line="63" pos:column="38"/></name></name></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></while>

        <comment type="block" pos:line="66" pos:column="9">/* Set the current operation pointer */</comment>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">config<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">current<pos:position pos:line="67" pos:column="24"/></name></name> <operator pos:line="67" pos:column="25">=<pos:position pos:line="67" pos:column="26"/></operator> <name><name pos:line="67" pos:column="27">config<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">-&gt;<pos:position pos:line="67" pos:column="38"/></operator><name pos:line="67" pos:column="35">first<pos:position pos:line="67" pos:column="40"/></name></name></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* Perform each operation */</comment>
        <while pos:line="70" pos:column="9">while<condition pos:line="70" pos:column="14">(<expr><operator pos:line="70" pos:column="15">!<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="16">result<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">&amp;&amp;<pos:position pos:line="70" pos:column="33"/></operator> <name><name pos:line="70" pos:column="26">config<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">current<pos:position pos:line="70" pos:column="41"/></name></name></expr>)<pos:position pos:line="70" pos:column="42"/></condition> <block pos:line="70" pos:column="43">{
          <expr_stmt><expr><name pos:line="71" pos:column="11">result<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <call><name pos:line="71" pos:column="20">operate_do<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name pos:line="71" pos:column="31">config<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="39">config<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">current<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt>

          <expr_stmt><expr><name><name pos:line="73" pos:column="11">config<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">current<pos:position pos:line="73" pos:column="26"/></name></name> <operator pos:line="73" pos:column="27">=<pos:position pos:line="73" pos:column="28"/></operator> <name><name pos:line="73" pos:column="29">config<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">current<pos:position pos:line="73" pos:column="44"/></name><operator pos:line="73" pos:column="44">-&gt;<pos:position pos:line="73" pos:column="49"/></operator><name pos:line="73" pos:column="46">next<pos:position pos:line="73" pos:column="50"/></name></name></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>

          <if pos:line="75" pos:column="11">if<condition pos:line="75" pos:column="13">(<expr><name><name pos:line="75" pos:column="14">config<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">-&gt;<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="22">current<pos:position pos:line="75" pos:column="29"/></name></name> <operator pos:line="75" pos:column="30">&amp;&amp;<pos:position pos:line="75" pos:column="40"/></operator> <name><name pos:line="75" pos:column="33">config<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">current<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">-&gt;<pos:position pos:line="75" pos:column="53"/></operator><name pos:line="75" pos:column="50">easy<pos:position pos:line="75" pos:column="54"/></name></name></expr>)<pos:position pos:line="75" pos:column="55"/></condition><then pos:line="75" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="13">curl_easy_reset<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><name><name pos:line="76" pos:column="29">config<pos:position pos:line="76" pos:column="35"/></name><operator pos:line="76" pos:column="35">-&gt;<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="37">current<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">easy<pos:position pos:line="76" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="52"/></expr_stmt></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></while>

<cpp:ifndef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifndef<pos:position pos:line="79" pos:column="8"/></cpp:directive> <name pos:line="79" pos:column="9">CURL_DISABLE_LIBCURL_OPTION<pos:position pos:line="79" pos:column="36"/></name></cpp:ifndef>
        <if pos:line="80" pos:column="9">if<condition pos:line="80" pos:column="11">(<expr><name><name pos:line="80" pos:column="12">config<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">-&gt;<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="20">libcurl<pos:position pos:line="80" pos:column="27"/></name></name></expr>)<pos:position pos:line="80" pos:column="28"/></condition><then pos:line="80" pos:column="28"> <block pos:line="80" pos:column="29">{
          <comment type="block" pos:line="81" pos:column="11">/* Cleanup the libcurl source output */</comment>
          <expr_stmt><expr><call><name pos:line="82" pos:column="11">easysrc_cleanup<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">()<pos:position pos:line="82" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>

          <comment type="block" pos:line="84" pos:column="11">/* Dump the libcurl code if previously enabled */</comment>
          <expr_stmt><expr><call><name pos:line="85" pos:column="11">dumpeasysrc<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">config<pos:position pos:line="85" pos:column="29"/></name></expr></argument>)<pos:position pos:line="85" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
      }<pos:position pos:line="88" pos:column="8"/></block></then>
      <else pos:line="89" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="9">helpf<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><name><name pos:line="90" pos:column="15">config<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">errors<pos:position pos:line="90" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="31">"out of memory\n"<pos:position pos:line="90" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="50"/></expr_stmt></block></else></if>
    }<pos:position pos:line="91" pos:column="6"/></block></else></if>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <return pos:line="94" pos:column="3">return <expr><name pos:line="94" pos:column="10">result<pos:position pos:line="94" pos:column="16"/></name></expr>;<pos:position pos:line="94" pos:column="17"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

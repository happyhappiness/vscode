<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1326_curl-7.55.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_getformdata<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">Curl_easy<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="2" pos:column="27">struct<pos:position pos:line="2" pos:column="33"/></name> <name pos:line="2" pos:column="34">FormData<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">finalform<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                          <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">curl_httppost<pos:position pos:line="3" pos:column="47"/></name></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">post<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">char<pos:position pos:line="4" pos:column="37"/></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">custom_content_type<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="5" pos:column="27">curl_off_t<pos:position pos:line="5" pos:column="37"/></name> <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier></type><name pos:line="5" pos:column="39">sizep<pos:position pos:line="5" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="45"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">FormData<pos:position pos:line="7" pos:column="18"/></name></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">form<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">FormData<pos:position pos:line="8" pos:column="18"/></name></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">firstform<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">curl_httppost<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">file<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">CURLE_OK<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">curl_off_t<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">size<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt> <comment type="block" pos:line="11" pos:column="24">/* support potentially ENORMOUS formposts */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name></type> <name><name pos:line="12" pos:column="8">fileboundary<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><literal type="number" pos:line="12" pos:column="21">42<pos:position pos:line="12" pos:column="23"/></literal></expr>]<pos:position pos:line="12" pos:column="24"/></index></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">curl_slist<pos:position pos:line="13" pos:column="20"/></name></name> <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type><name pos:line="13" pos:column="22">curList<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">boundary<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><literal type="number" pos:line="14" pos:column="17">42<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="16" pos:column="3">*<pos:position pos:line="16" pos:column="4"/></operator><name pos:line="16" pos:column="4">finalform<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt> <comment type="block" pos:line="16" pos:column="22">/* default form is empty */</comment>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">post<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">result<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return></block></then></if> <comment type="block" pos:line="19" pos:column="20">/* no input =&gt; no output! */</comment>

  <expr_stmt><expr><name pos:line="21" pos:column="3">result<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">formboundary<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">data<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">boundary<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="41">sizeof<argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">boundary<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">result<pos:position pos:line="22" pos:column="12"/></name></expr>)<pos:position pos:line="22" pos:column="13"/></condition><then pos:line="22" pos:column="13">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">result<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="25" pos:column="3">/* Make the first line of the output */</comment>
  <expr_stmt><expr><name pos:line="26" pos:column="3">result<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">AddFormDataf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="26">form<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">NULL<pos:position pos:line="26" pos:column="36"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="27" pos:column="25">"%s; boundary=%s\r\n"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>,
                        <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="25">custom_content_type<pos:position pos:line="28" pos:column="44"/></name></expr>?<pos:position pos:line="28" pos:column="45"/></condition><then><expr><name pos:line="28" pos:column="45">custom_content_type<pos:position pos:line="28" pos:column="64"/></name></expr></then><else pos:line="28" pos:column="64">:
                        <expr><literal type="string" pos:line="29" pos:column="25">"Content-Type: multipart/form-data"<pos:position pos:line="29" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                        <argument><expr><name pos:line="30" pos:column="25">boundary<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

  <if pos:line="32" pos:column="3">if<condition pos:line="32" pos:column="5">(<expr><name pos:line="32" pos:column="6">result<pos:position pos:line="32" pos:column="12"/></name></expr>)<pos:position pos:line="32" pos:column="13"/></condition><then pos:line="32" pos:column="13"> <block pos:line="32" pos:column="14">{
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">result<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="35" pos:column="3">/* we DO NOT include that line in the total size of the POST, since it'll be
     part of the header! */</comment>

  <expr_stmt><expr><name pos:line="38" pos:column="3">firstform<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="15">form<pos:position pos:line="38" pos:column="19"/></name></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>

  <do pos:line="40" pos:column="3">do <block pos:line="40" pos:column="6">{

    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><name pos:line="42" pos:column="8">size<pos:position pos:line="42" pos:column="12"/></name></expr>)<pos:position pos:line="42" pos:column="13"/></condition><then pos:line="42" pos:column="13"> <block pos:line="42" pos:column="14">{
      <expr_stmt><expr><name pos:line="43" pos:column="7">result<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">AddFormDataf<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="30">form<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="37">size<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="43">"\r\n"<pos:position pos:line="43" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">result<pos:position pos:line="44" pos:column="16"/></name></expr>)<pos:position pos:line="44" pos:column="17"/></condition><then pos:line="44" pos:column="17">
        <block type="pseudo"><break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* boundary */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">result<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">AddFormDataf<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><operator pos:line="49" pos:column="27">&amp;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="28">form<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="35">size<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="41">"--%s\r\n"<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">boundary<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="63"/></expr_stmt>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name pos:line="50" pos:column="8">result<pos:position pos:line="50" pos:column="14"/></name></expr>)<pos:position pos:line="50" pos:column="15"/></condition><then pos:line="50" pos:column="15">
      <block type="pseudo"><break pos:line="51" pos:column="7">break;<pos:position pos:line="51" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* Maybe later this should be disabled when a custom_content_type is
       passed, since Content-Disposition is not meaningful for all multipart
       types.
    */</comment>
    <expr_stmt><expr><name pos:line="57" pos:column="5">result<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">AddFormDataf<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><operator pos:line="57" pos:column="27">&amp;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="28">form<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="34">&amp;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="35">size<pos:position pos:line="57" pos:column="39"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="58" pos:column="27">"Content-Disposition: form-data; name=\""<pos:position pos:line="58" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name pos:line="59" pos:column="8">result<pos:position pos:line="59" pos:column="14"/></name></expr>)<pos:position pos:line="59" pos:column="15"/></condition><then pos:line="59" pos:column="15">
      <block type="pseudo"><break pos:line="60" pos:column="7">break;<pos:position pos:line="60" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="62" pos:column="5">result<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">AddFormData<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><operator pos:line="62" pos:column="26">&amp;<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="27">form<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="33">FORM_DATA<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="44">post<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">-&gt;<pos:position pos:line="62" pos:column="53"/></operator><name pos:line="62" pos:column="50">name<pos:position pos:line="62" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="56">post<pos:position pos:line="62" pos:column="60"/></name><operator pos:line="62" pos:column="60">-&gt;<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="62">namelength<pos:position pos:line="62" pos:column="72"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="63" pos:column="26">&amp;<pos:position pos:line="63" pos:column="31"/></operator><name pos:line="63" pos:column="27">size<pos:position pos:line="63" pos:column="31"/></name></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><name pos:line="64" pos:column="8">result<pos:position pos:line="64" pos:column="14"/></name></expr>)<pos:position pos:line="64" pos:column="15"/></condition><then pos:line="64" pos:column="15">
      <block type="pseudo"><break pos:line="65" pos:column="7">break;<pos:position pos:line="65" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="67" pos:column="5">result<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <call><name pos:line="67" pos:column="14">AddFormDataf<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><operator pos:line="67" pos:column="27">&amp;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="28">form<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="34">&amp;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="35">size<pos:position pos:line="67" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="41">"\""<pos:position pos:line="67" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><name pos:line="68" pos:column="8">result<pos:position pos:line="68" pos:column="14"/></name></expr>)<pos:position pos:line="68" pos:column="15"/></condition><then pos:line="68" pos:column="15">
      <block type="pseudo"><break pos:line="69" pos:column="7">break;<pos:position pos:line="69" pos:column="13"/></break></block></then></if>

    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name><name pos:line="71" pos:column="8">post<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">more<pos:position pos:line="71" pos:column="18"/></name></name></expr>)<pos:position pos:line="71" pos:column="19"/></condition><then pos:line="71" pos:column="19"> <block pos:line="71" pos:column="20">{
      <comment type="block" pos:line="72" pos:column="7">/* If used, this is a link to more file names, we must then do
         the magic to include several files with the same field name */</comment>

      <expr_stmt><expr><name pos:line="75" pos:column="7">result<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">formboundary<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">data<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="35">fileboundary<pos:position pos:line="75" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="49">sizeof<argument_list pos:line="75" pos:column="55">(<argument><expr><name pos:line="75" pos:column="56">fileboundary<pos:position pos:line="75" pos:column="68"/></name></expr></argument>)<pos:position pos:line="75" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="71"/></expr_stmt>
      <if pos:line="76" pos:column="7">if<condition pos:line="76" pos:column="9">(<expr><name pos:line="76" pos:column="10">result<pos:position pos:line="76" pos:column="16"/></name></expr>)<pos:position pos:line="76" pos:column="17"/></condition><then pos:line="76" pos:column="17"> <block pos:line="76" pos:column="18">{
        <break pos:line="77" pos:column="9">break;<pos:position pos:line="77" pos:column="15"/></break>
      }<pos:position pos:line="78" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="80" pos:column="7">result<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">AddFormDataf<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><operator pos:line="80" pos:column="29">&amp;<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="30">form<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="36">&amp;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="37">size<pos:position pos:line="80" pos:column="41"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="81" pos:column="29">"\r\nContent-Type: multipart/mixed;"<pos:position pos:line="81" pos:column="65"/></literal>
                            <literal type="string" pos:line="82" pos:column="29">" boundary=%s\r\n"<pos:position pos:line="82" pos:column="47"/></literal></expr></argument>,
                            <argument><expr><name pos:line="83" pos:column="29">fileboundary<pos:position pos:line="83" pos:column="41"/></name></expr></argument>)<pos:position pos:line="83" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="43"/></expr_stmt>
      <if pos:line="84" pos:column="7">if<condition pos:line="84" pos:column="9">(<expr><name pos:line="84" pos:column="10">result<pos:position pos:line="84" pos:column="16"/></name></expr>)<pos:position pos:line="84" pos:column="17"/></condition><then pos:line="84" pos:column="17">
        <block type="pseudo"><break pos:line="85" pos:column="9">break;<pos:position pos:line="85" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="88" pos:column="5">file<pos:position pos:line="88" pos:column="9"/></name> <operator pos:line="88" pos:column="10">=<pos:position pos:line="88" pos:column="11"/></operator> <name pos:line="88" pos:column="12">post<pos:position pos:line="88" pos:column="16"/></name></expr>;<pos:position pos:line="88" pos:column="17"/></expr_stmt>

    <do pos:line="90" pos:column="5">do <block pos:line="90" pos:column="8">{

      <comment type="block" pos:line="92" pos:column="7">/* If 'showfilename' is set, that is a faked name passed on to us
         to use to in the formpost. If that is not set, the actually used
         local file name should be added. */</comment>

      <if pos:line="96" pos:column="7">if<condition pos:line="96" pos:column="9">(<expr><name><name pos:line="96" pos:column="10">post<pos:position pos:line="96" pos:column="14"/></name><operator pos:line="96" pos:column="14">-&gt;<pos:position pos:line="96" pos:column="19"/></operator><name pos:line="96" pos:column="16">more<pos:position pos:line="96" pos:column="20"/></name></name></expr>)<pos:position pos:line="96" pos:column="21"/></condition><then pos:line="96" pos:column="21"> <block pos:line="96" pos:column="22">{
        <comment type="block" pos:line="97" pos:column="9">/* if multiple-file */</comment>
        <expr_stmt><expr><name pos:line="98" pos:column="9">result<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <call><name pos:line="98" pos:column="18">AddFormDataf<pos:position pos:line="98" pos:column="30"/></name><argument_list pos:line="98" pos:column="30">(<argument><expr><operator pos:line="98" pos:column="31">&amp;<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="32">form<pos:position pos:line="98" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="38">&amp;<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="39">size<pos:position pos:line="98" pos:column="43"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="99" pos:column="31">"\r\n--%s\r\nContent-Disposition: "<pos:position pos:line="99" pos:column="66"/></literal>
                              <literal type="string" pos:line="100" pos:column="31">"attachment"<pos:position pos:line="100" pos:column="43"/></literal></expr></argument>,
                              <argument><expr><name pos:line="101" pos:column="31">fileboundary<pos:position pos:line="101" pos:column="43"/></name></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="45"/></expr_stmt>
        <if pos:line="102" pos:column="9">if<condition pos:line="102" pos:column="11">(<expr><name pos:line="102" pos:column="12">result<pos:position pos:line="102" pos:column="18"/></name></expr>)<pos:position pos:line="102" pos:column="19"/></condition><then pos:line="102" pos:column="19">
          <block type="pseudo"><break pos:line="103" pos:column="11">break;<pos:position pos:line="103" pos:column="17"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="104" pos:column="9">result<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <call><name pos:line="104" pos:column="18">formdata_add_filename<pos:position pos:line="104" pos:column="39"/></name><argument_list pos:line="104" pos:column="39">(<argument><expr><name pos:line="104" pos:column="40">file<pos:position pos:line="104" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="46">&amp;<pos:position pos:line="104" pos:column="51"/></operator><name pos:line="104" pos:column="47">form<pos:position pos:line="104" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="53">&amp;<pos:position pos:line="104" pos:column="58"/></operator><name pos:line="104" pos:column="54">size<pos:position pos:line="104" pos:column="58"/></name></expr></argument>)<pos:position pos:line="104" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="60"/></expr_stmt>
        <if pos:line="105" pos:column="9">if<condition pos:line="105" pos:column="11">(<expr><name pos:line="105" pos:column="12">result<pos:position pos:line="105" pos:column="18"/></name></expr>)<pos:position pos:line="105" pos:column="19"/></condition><then pos:line="105" pos:column="19">
          <block type="pseudo"><break pos:line="106" pos:column="11">break;<pos:position pos:line="106" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="107" pos:column="8"/></block></then>
      <elseif pos:line="108" pos:column="7">else <if pos:line="108" pos:column="12">if<condition pos:line="108" pos:column="14">(<expr><name><name pos:line="108" pos:column="15">post<pos:position pos:line="108" pos:column="19"/></name><operator pos:line="108" pos:column="19">-&gt;<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="21">flags<pos:position pos:line="108" pos:column="26"/></name></name> <operator pos:line="108" pos:column="27">&amp;<pos:position pos:line="108" pos:column="32"/></operator> <operator pos:line="108" pos:column="29">(<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="30">HTTPPOST_FILENAME<pos:position pos:line="108" pos:column="47"/></name><operator pos:line="108" pos:column="47">|<pos:position pos:line="108" pos:column="48"/></operator><name pos:line="108" pos:column="48">HTTPPOST_BUFFER<pos:position pos:line="108" pos:column="63"/></name><operator pos:line="108" pos:column="63">|<pos:position pos:line="108" pos:column="64"/></operator>
                             <name pos:line="109" pos:column="30">HTTPPOST_CALLBACK<pos:position pos:line="109" pos:column="47"/></name><operator pos:line="109" pos:column="47">)<pos:position pos:line="109" pos:column="48"/></operator></expr>)<pos:position pos:line="109" pos:column="49"/></condition><then pos:line="109" pos:column="49"> <block pos:line="109" pos:column="50">{
        <comment type="block" pos:line="110" pos:column="9">/* it should be noted that for the HTTPPOST_FILENAME and
           HTTPPOST_CALLBACK cases the -&gt;showfilename struct member is always
           assigned at this point */</comment>
        <if pos:line="113" pos:column="9">if<condition pos:line="113" pos:column="11">(<expr><name><name pos:line="113" pos:column="12">post<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">-&gt;<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="18">showfilename<pos:position pos:line="113" pos:column="30"/></name></name> <operator pos:line="113" pos:column="31">||<pos:position pos:line="113" pos:column="33"/></operator> <operator pos:line="113" pos:column="34">(<pos:position pos:line="113" pos:column="35"/></operator><name><name pos:line="113" pos:column="35">post<pos:position pos:line="113" pos:column="39"/></name><operator pos:line="113" pos:column="39">-&gt;<pos:position pos:line="113" pos:column="44"/></operator><name pos:line="113" pos:column="41">flags<pos:position pos:line="113" pos:column="46"/></name></name> <operator pos:line="113" pos:column="47">&amp;<pos:position pos:line="113" pos:column="52"/></operator> <name pos:line="113" pos:column="49">HTTPPOST_FILENAME<pos:position pos:line="113" pos:column="66"/></name><operator pos:line="113" pos:column="66">)<pos:position pos:line="113" pos:column="67"/></operator></expr>)<pos:position pos:line="113" pos:column="68"/></condition><then pos:line="113" pos:column="68"> <block pos:line="113" pos:column="69">{
          <expr_stmt><expr><name pos:line="114" pos:column="11">result<pos:position pos:line="114" pos:column="17"/></name> <operator pos:line="114" pos:column="18">=<pos:position pos:line="114" pos:column="19"/></operator> <call><name pos:line="114" pos:column="20">formdata_add_filename<pos:position pos:line="114" pos:column="41"/></name><argument_list pos:line="114" pos:column="41">(<argument><expr><name pos:line="114" pos:column="42">post<pos:position pos:line="114" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="48">&amp;<pos:position pos:line="114" pos:column="53"/></operator><name pos:line="114" pos:column="49">form<pos:position pos:line="114" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="55">&amp;<pos:position pos:line="114" pos:column="60"/></operator><name pos:line="114" pos:column="56">size<pos:position pos:line="114" pos:column="60"/></name></expr></argument>)<pos:position pos:line="114" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="115" pos:column="10"/></block></then></if>

        <if pos:line="117" pos:column="9">if<condition pos:line="117" pos:column="11">(<expr><name pos:line="117" pos:column="12">result<pos:position pos:line="117" pos:column="18"/></name></expr>)<pos:position pos:line="117" pos:column="19"/></condition><then pos:line="117" pos:column="19">
          <block type="pseudo"><break pos:line="118" pos:column="11">break;<pos:position pos:line="118" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="119" pos:column="8"/></block></then></if></elseif></if>

      <if pos:line="121" pos:column="7">if<condition pos:line="121" pos:column="9">(<expr><name><name pos:line="121" pos:column="10">file<pos:position pos:line="121" pos:column="14"/></name><operator pos:line="121" pos:column="14">-&gt;<pos:position pos:line="121" pos:column="19"/></operator><name pos:line="121" pos:column="16">contenttype<pos:position pos:line="121" pos:column="27"/></name></name></expr>)<pos:position pos:line="121" pos:column="28"/></condition><then pos:line="121" pos:column="28"> <block pos:line="121" pos:column="29">{
        <comment type="block" pos:line="122" pos:column="9">/* we have a specified type */</comment>
        <expr_stmt><expr><name pos:line="123" pos:column="9">result<pos:position pos:line="123" pos:column="15"/></name> <operator pos:line="123" pos:column="16">=<pos:position pos:line="123" pos:column="17"/></operator> <call><name pos:line="123" pos:column="18">AddFormDataf<pos:position pos:line="123" pos:column="30"/></name><argument_list pos:line="123" pos:column="30">(<argument><expr><operator pos:line="123" pos:column="31">&amp;<pos:position pos:line="123" pos:column="36"/></operator><name pos:line="123" pos:column="32">form<pos:position pos:line="123" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="38">&amp;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="39">size<pos:position pos:line="123" pos:column="43"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="124" pos:column="31">"\r\nContent-Type: %s"<pos:position pos:line="124" pos:column="53"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="125" pos:column="31">file<pos:position pos:line="125" pos:column="35"/></name><operator pos:line="125" pos:column="35">-&gt;<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="37">contenttype<pos:position pos:line="125" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="50"/></expr_stmt>
        <if pos:line="126" pos:column="9">if<condition pos:line="126" pos:column="11">(<expr><name pos:line="126" pos:column="12">result<pos:position pos:line="126" pos:column="18"/></name></expr>)<pos:position pos:line="126" pos:column="19"/></condition><then pos:line="126" pos:column="19">
          <block type="pseudo"><break pos:line="127" pos:column="11">break;<pos:position pos:line="127" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="128" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="130" pos:column="7">curList<pos:position pos:line="130" pos:column="14"/></name> <operator pos:line="130" pos:column="15">=<pos:position pos:line="130" pos:column="16"/></operator> <name><name pos:line="130" pos:column="17">file<pos:position pos:line="130" pos:column="21"/></name><operator pos:line="130" pos:column="21">-&gt;<pos:position pos:line="130" pos:column="26"/></operator><name pos:line="130" pos:column="23">contentheader<pos:position pos:line="130" pos:column="36"/></name></name></expr>;<pos:position pos:line="130" pos:column="37"/></expr_stmt>
      <while pos:line="131" pos:column="7">while<condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">curList<pos:position pos:line="131" pos:column="20"/></name></expr>)<pos:position pos:line="131" pos:column="21"/></condition> <block pos:line="131" pos:column="22">{
        <comment type="block" pos:line="132" pos:column="9">/* Process the additional headers specified for this form */</comment>
        <expr_stmt><expr><name pos:line="133" pos:column="9">result<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">=<pos:position pos:line="133" pos:column="17"/></operator> <call><name pos:line="133" pos:column="18">AddFormDataf<pos:position pos:line="133" pos:column="30"/></name><argument_list pos:line="133" pos:column="30">(<argument><expr><operator pos:line="133" pos:column="31">&amp;<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="32">form<pos:position pos:line="133" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="38">&amp;<pos:position pos:line="133" pos:column="43"/></operator><name pos:line="133" pos:column="39">size<pos:position pos:line="133" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="45">"\r\n%s"<pos:position pos:line="133" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="55">curList<pos:position pos:line="133" pos:column="62"/></name><operator pos:line="133" pos:column="62">-&gt;<pos:position pos:line="133" pos:column="67"/></operator><name pos:line="133" pos:column="64">data<pos:position pos:line="133" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="70"/></expr_stmt>
        <if pos:line="134" pos:column="9">if<condition pos:line="134" pos:column="11">(<expr><name pos:line="134" pos:column="12">result<pos:position pos:line="134" pos:column="18"/></name></expr>)<pos:position pos:line="134" pos:column="19"/></condition><then pos:line="134" pos:column="19">
          <block type="pseudo"><break pos:line="135" pos:column="11">break;<pos:position pos:line="135" pos:column="17"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="136" pos:column="9">curList<pos:position pos:line="136" pos:column="16"/></name> <operator pos:line="136" pos:column="17">=<pos:position pos:line="136" pos:column="18"/></operator> <name><name pos:line="136" pos:column="19">curList<pos:position pos:line="136" pos:column="26"/></name><operator pos:line="136" pos:column="26">-&gt;<pos:position pos:line="136" pos:column="31"/></operator><name pos:line="136" pos:column="28">next<pos:position pos:line="136" pos:column="32"/></name></name></expr>;<pos:position pos:line="136" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="137" pos:column="8"/></block></while>
      <if pos:line="138" pos:column="7">if<condition pos:line="138" pos:column="9">(<expr><name pos:line="138" pos:column="10">result<pos:position pos:line="138" pos:column="16"/></name></expr>)<pos:position pos:line="138" pos:column="17"/></condition><then pos:line="138" pos:column="17">
        <block type="pseudo"><break pos:line="139" pos:column="9">break;<pos:position pos:line="139" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="141" pos:column="7">result<pos:position pos:line="141" pos:column="13"/></name> <operator pos:line="141" pos:column="14">=<pos:position pos:line="141" pos:column="15"/></operator> <call><name pos:line="141" pos:column="16">AddFormDataf<pos:position pos:line="141" pos:column="28"/></name><argument_list pos:line="141" pos:column="28">(<argument><expr><operator pos:line="141" pos:column="29">&amp;<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="30">form<pos:position pos:line="141" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="36">&amp;<pos:position pos:line="141" pos:column="41"/></operator><name pos:line="141" pos:column="37">size<pos:position pos:line="141" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="43">"\r\n\r\n"<pos:position pos:line="141" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="55"/></expr_stmt>
      <if pos:line="142" pos:column="7">if<condition pos:line="142" pos:column="9">(<expr><name pos:line="142" pos:column="10">result<pos:position pos:line="142" pos:column="16"/></name></expr>)<pos:position pos:line="142" pos:column="17"/></condition><then pos:line="142" pos:column="17">
        <block type="pseudo"><break pos:line="143" pos:column="9">break;<pos:position pos:line="143" pos:column="15"/></break></block></then></if>

      <if pos:line="145" pos:column="7">if<condition pos:line="145" pos:column="9">(<expr><operator pos:line="145" pos:column="10">(<pos:position pos:line="145" pos:column="11"/></operator><name><name pos:line="145" pos:column="11">post<pos:position pos:line="145" pos:column="15"/></name><operator pos:line="145" pos:column="15">-&gt;<pos:position pos:line="145" pos:column="20"/></operator><name pos:line="145" pos:column="17">flags<pos:position pos:line="145" pos:column="22"/></name></name> <operator pos:line="145" pos:column="23">&amp;<pos:position pos:line="145" pos:column="28"/></operator> <name pos:line="145" pos:column="25">HTTPPOST_FILENAME<pos:position pos:line="145" pos:column="42"/></name><operator pos:line="145" pos:column="42">)<pos:position pos:line="145" pos:column="43"/></operator> <operator pos:line="145" pos:column="44">||<pos:position pos:line="145" pos:column="46"/></operator>
         <operator pos:line="146" pos:column="10">(<pos:position pos:line="146" pos:column="11"/></operator><name><name pos:line="146" pos:column="11">post<pos:position pos:line="146" pos:column="15"/></name><operator pos:line="146" pos:column="15">-&gt;<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="17">flags<pos:position pos:line="146" pos:column="22"/></name></name> <operator pos:line="146" pos:column="23">&amp;<pos:position pos:line="146" pos:column="28"/></operator> <name pos:line="146" pos:column="25">HTTPPOST_READFILE<pos:position pos:line="146" pos:column="42"/></name><operator pos:line="146" pos:column="42">)<pos:position pos:line="146" pos:column="43"/></operator></expr>)<pos:position pos:line="146" pos:column="44"/></condition><then pos:line="146" pos:column="44"> <block pos:line="146" pos:column="45">{
        <comment type="block" pos:line="147" pos:column="9">/* we should include the contents from the specified file */</comment>
        <decl_stmt><decl><type><name pos:line="148" pos:column="9">FILE<pos:position pos:line="148" pos:column="13"/></name> <modifier pos:line="148" pos:column="14">*<pos:position pos:line="148" pos:column="15"/></modifier></type><name pos:line="148" pos:column="15">fileread<pos:position pos:line="148" pos:column="23"/></name></decl>;<pos:position pos:line="148" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><name pos:line="150" pos:column="9">fileread<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">=<pos:position pos:line="150" pos:column="19"/></operator> <ternary><condition><expr><operator pos:line="150" pos:column="20">!<pos:position pos:line="150" pos:column="21"/></operator><call><name pos:line="150" pos:column="21">strcmp<pos:position pos:line="150" pos:column="27"/></name><argument_list pos:line="150" pos:column="27">(<argument><expr><literal type="string" pos:line="150" pos:column="28">"-"<pos:position pos:line="150" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="33">file<pos:position pos:line="150" pos:column="37"/></name><operator pos:line="150" pos:column="37">-&gt;<pos:position pos:line="150" pos:column="42"/></operator><name pos:line="150" pos:column="39">contents<pos:position pos:line="150" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="48"/></argument_list></call></expr>?<pos:position pos:line="150" pos:column="49"/></condition><then pos:line="150" pos:column="49">
          <expr><name pos:line="151" pos:column="11">stdin<pos:position pos:line="151" pos:column="16"/></name></expr></then><else pos:line="151" pos:column="16">:<expr><call><name pos:line="151" pos:column="17">fopen<pos:position pos:line="151" pos:column="22"/></name><argument_list pos:line="151" pos:column="22">(<argument><expr><name><name pos:line="151" pos:column="23">file<pos:position pos:line="151" pos:column="27"/></name><operator pos:line="151" pos:column="27">-&gt;<pos:position pos:line="151" pos:column="32"/></operator><name pos:line="151" pos:column="29">contents<pos:position pos:line="151" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="39">"rb"<pos:position pos:line="151" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="44"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="151" pos:column="45"/></expr_stmt> <comment type="block" pos:line="151" pos:column="46">/* binary read for win32  */</comment>

        <comment type="block" pos:line="153" pos:column="9">/*
         * VMS: This only allows for stream files on VMS.  Stream files are
         * OK, as are FIXED &amp; VAR files WITHOUT implied CC For implied CC,
         * every record needs to have a \n appended &amp; 1 added to SIZE
         */</comment>

        <if pos:line="159" pos:column="9">if<condition pos:line="159" pos:column="11">(<expr><name pos:line="159" pos:column="12">fileread<pos:position pos:line="159" pos:column="20"/></name></expr>)<pos:position pos:line="159" pos:column="21"/></condition><then pos:line="159" pos:column="21"> <block pos:line="159" pos:column="22">{
          <if pos:line="160" pos:column="11">if<condition pos:line="160" pos:column="13">(<expr><name pos:line="160" pos:column="14">fileread<pos:position pos:line="160" pos:column="22"/></name> <operator pos:line="160" pos:column="23">!=<pos:position pos:line="160" pos:column="25"/></operator> <name pos:line="160" pos:column="26">stdin<pos:position pos:line="160" pos:column="31"/></name></expr>)<pos:position pos:line="160" pos:column="32"/></condition><then pos:line="160" pos:column="32"> <block pos:line="160" pos:column="33">{
            <comment type="block" pos:line="161" pos:column="13">/* close the file */</comment>
            <expr_stmt><expr><call><name pos:line="162" pos:column="13">fclose<pos:position pos:line="162" pos:column="19"/></name><argument_list pos:line="162" pos:column="19">(<argument><expr><name pos:line="162" pos:column="20">fileread<pos:position pos:line="162" pos:column="28"/></name></expr></argument>)<pos:position pos:line="162" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="30"/></expr_stmt>
            <comment type="block" pos:line="163" pos:column="13">/* add the file name only - for later reading from this */</comment>
            <expr_stmt><expr><name pos:line="164" pos:column="13">result<pos:position pos:line="164" pos:column="19"/></name> <operator pos:line="164" pos:column="20">=<pos:position pos:line="164" pos:column="21"/></operator> <call><name pos:line="164" pos:column="22">AddFormData<pos:position pos:line="164" pos:column="33"/></name><argument_list pos:line="164" pos:column="33">(<argument><expr><operator pos:line="164" pos:column="34">&amp;<pos:position pos:line="164" pos:column="39"/></operator><name pos:line="164" pos:column="35">form<pos:position pos:line="164" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="41">FORM_FILE<pos:position pos:line="164" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="52">file<pos:position pos:line="164" pos:column="56"/></name><operator pos:line="164" pos:column="56">-&gt;<pos:position pos:line="164" pos:column="61"/></operator><name pos:line="164" pos:column="58">contents<pos:position pos:line="164" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="68">0<pos:position pos:line="164" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="164" pos:column="71">&amp;<pos:position pos:line="164" pos:column="76"/></operator><name pos:line="164" pos:column="72">size<pos:position pos:line="164" pos:column="76"/></name></expr></argument>)<pos:position pos:line="164" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="78"/></expr_stmt>
          }<pos:position pos:line="165" pos:column="12"/></block></then>
          <else pos:line="166" pos:column="11">else <block pos:line="166" pos:column="16">{
            <comment type="block" pos:line="167" pos:column="13">/* When uploading from stdin, we can't know the size of the file,
             * thus must read the full file as before. We *could* use chunked
             * transfer-encoding, but that only works for HTTP 1.1 and we
             * can't be sure we work with such a server.
             */</comment>
            <decl_stmt><decl><type><name pos:line="172" pos:column="13">size_t<pos:position pos:line="172" pos:column="19"/></name></type> <name pos:line="172" pos:column="20">nread<pos:position pos:line="172" pos:column="25"/></name></decl>;<pos:position pos:line="172" pos:column="26"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="173" pos:column="13">char<pos:position pos:line="173" pos:column="17"/></name></type> <name><name pos:line="173" pos:column="18">buffer<pos:position pos:line="173" pos:column="24"/></name><index pos:line="173" pos:column="24">[<expr><literal type="number" pos:line="173" pos:column="25">512<pos:position pos:line="173" pos:column="28"/></literal></expr>]<pos:position pos:line="173" pos:column="29"/></index></name></decl>;<pos:position pos:line="173" pos:column="30"/></decl_stmt>
            <while pos:line="174" pos:column="13">while<condition pos:line="174" pos:column="18">(<expr><operator pos:line="174" pos:column="19">(<pos:position pos:line="174" pos:column="20"/></operator><name pos:line="174" pos:column="20">nread<pos:position pos:line="174" pos:column="25"/></name> <operator pos:line="174" pos:column="26">=<pos:position pos:line="174" pos:column="27"/></operator> <call><name pos:line="174" pos:column="28">fread<pos:position pos:line="174" pos:column="33"/></name><argument_list pos:line="174" pos:column="33">(<argument><expr><name pos:line="174" pos:column="34">buffer<pos:position pos:line="174" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="42">1<pos:position pos:line="174" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="174" pos:column="45">sizeof<argument_list pos:line="174" pos:column="51">(<argument><expr><name pos:line="174" pos:column="52">buffer<pos:position pos:line="174" pos:column="58"/></name></expr></argument>)<pos:position pos:line="174" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="174" pos:column="61">fileread<pos:position pos:line="174" pos:column="69"/></name></expr></argument>)<pos:position pos:line="174" pos:column="70"/></argument_list></call><operator pos:line="174" pos:column="70">)<pos:position pos:line="174" pos:column="71"/></operator> <operator pos:line="174" pos:column="72">!=<pos:position pos:line="174" pos:column="74"/></operator> <literal type="number" pos:line="174" pos:column="75">0<pos:position pos:line="174" pos:column="76"/></literal></expr>)<pos:position pos:line="174" pos:column="77"/></condition> <block pos:line="174" pos:column="78">{
              <expr_stmt><expr><name pos:line="175" pos:column="15">result<pos:position pos:line="175" pos:column="21"/></name> <operator pos:line="175" pos:column="22">=<pos:position pos:line="175" pos:column="23"/></operator> <call><name pos:line="175" pos:column="24">AddFormData<pos:position pos:line="175" pos:column="35"/></name><argument_list pos:line="175" pos:column="35">(<argument><expr><operator pos:line="175" pos:column="36">&amp;<pos:position pos:line="175" pos:column="41"/></operator><name pos:line="175" pos:column="37">form<pos:position pos:line="175" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="43">FORM_CONTENT<pos:position pos:line="175" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="57">buffer<pos:position pos:line="175" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="65">nread<pos:position pos:line="175" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="175" pos:column="72">&amp;<pos:position pos:line="175" pos:column="77"/></operator><name pos:line="175" pos:column="73">size<pos:position pos:line="175" pos:column="77"/></name></expr></argument>)<pos:position pos:line="175" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="79"/></expr_stmt>
              <if pos:line="176" pos:column="15">if<condition pos:line="176" pos:column="17">(<expr><name pos:line="176" pos:column="18">result<pos:position pos:line="176" pos:column="24"/></name> <operator pos:line="176" pos:column="25">||<pos:position pos:line="176" pos:column="27"/></operator> <call><name pos:line="176" pos:column="28">feof<pos:position pos:line="176" pos:column="32"/></name><argument_list pos:line="176" pos:column="32">(<argument><expr><name pos:line="176" pos:column="33">fileread<pos:position pos:line="176" pos:column="41"/></name></expr></argument>)<pos:position pos:line="176" pos:column="42"/></argument_list></call> <operator pos:line="176" pos:column="43">||<pos:position pos:line="176" pos:column="45"/></operator> <call><name pos:line="176" pos:column="46">ferror<pos:position pos:line="176" pos:column="52"/></name><argument_list pos:line="176" pos:column="52">(<argument><expr><name pos:line="176" pos:column="53">fileread<pos:position pos:line="176" pos:column="61"/></name></expr></argument>)<pos:position pos:line="176" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="63"/></condition><then pos:line="176" pos:column="63">
                <block type="pseudo"><break pos:line="177" pos:column="17">break;<pos:position pos:line="177" pos:column="23"/></break></block></then></if>
            }<pos:position pos:line="178" pos:column="14"/></block></while>
          }<pos:position pos:line="179" pos:column="12"/></block></else></if>
        }<pos:position pos:line="180" pos:column="10"/></block></then>
        <else pos:line="181" pos:column="9">else <block pos:line="181" pos:column="14">{
          <if pos:line="182" pos:column="11">if<condition pos:line="182" pos:column="13">(<expr><name pos:line="182" pos:column="14">data<pos:position pos:line="182" pos:column="18"/></name></expr>)<pos:position pos:line="182" pos:column="19"/></condition><then pos:line="182" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="13">failf<pos:position pos:line="183" pos:column="18"/></name><argument_list pos:line="183" pos:column="18">(<argument><expr><name pos:line="183" pos:column="19">data<pos:position pos:line="183" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="25">"couldn't open file \"%s\""<pos:position pos:line="183" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="183" pos:column="54">file<pos:position pos:line="183" pos:column="58"/></name><operator pos:line="183" pos:column="58">-&gt;<pos:position pos:line="183" pos:column="63"/></operator><name pos:line="183" pos:column="60">contents<pos:position pos:line="183" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="183" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="70"/></expr_stmt></block></then></if>
          <expr_stmt><expr><operator pos:line="184" pos:column="11">*<pos:position pos:line="184" pos:column="12"/></operator><name pos:line="184" pos:column="12">finalform<pos:position pos:line="184" pos:column="21"/></name> <operator pos:line="184" pos:column="22">=<pos:position pos:line="184" pos:column="23"/></operator> <name pos:line="184" pos:column="24">NULL<pos:position pos:line="184" pos:column="28"/></name></expr>;<pos:position pos:line="184" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="185" pos:column="11">result<pos:position pos:line="185" pos:column="17"/></name> <operator pos:line="185" pos:column="18">=<pos:position pos:line="185" pos:column="19"/></operator> <name pos:line="185" pos:column="20">CURLE_READ_ERROR<pos:position pos:line="185" pos:column="36"/></name></expr>;<pos:position pos:line="185" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="186" pos:column="10"/></block></else></if>
      }<pos:position pos:line="187" pos:column="8"/></block></then>
      <elseif pos:line="188" pos:column="7">else <if pos:line="188" pos:column="12">if<condition pos:line="188" pos:column="14">(<expr><name><name pos:line="188" pos:column="15">post<pos:position pos:line="188" pos:column="19"/></name><operator pos:line="188" pos:column="19">-&gt;<pos:position pos:line="188" pos:column="24"/></operator><name pos:line="188" pos:column="21">flags<pos:position pos:line="188" pos:column="26"/></name></name> <operator pos:line="188" pos:column="27">&amp;<pos:position pos:line="188" pos:column="32"/></operator> <name pos:line="188" pos:column="29">HTTPPOST_BUFFER<pos:position pos:line="188" pos:column="44"/></name></expr>)<pos:position pos:line="188" pos:column="45"/></condition><then pos:line="188" pos:column="45">
        <comment type="block" pos:line="189" pos:column="9">/* include contents of buffer */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="190" pos:column="9">result<pos:position pos:line="190" pos:column="15"/></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <call><name pos:line="190" pos:column="18">AddFormData<pos:position pos:line="190" pos:column="29"/></name><argument_list pos:line="190" pos:column="29">(<argument><expr><operator pos:line="190" pos:column="30">&amp;<pos:position pos:line="190" pos:column="35"/></operator><name pos:line="190" pos:column="31">form<pos:position pos:line="190" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="37">FORM_CONTENT<pos:position pos:line="190" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="51">post<pos:position pos:line="190" pos:column="55"/></name><operator pos:line="190" pos:column="55">-&gt;<pos:position pos:line="190" pos:column="60"/></operator><name pos:line="190" pos:column="57">buffer<pos:position pos:line="190" pos:column="63"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="191" pos:column="30">post<pos:position pos:line="191" pos:column="34"/></name><operator pos:line="191" pos:column="34">-&gt;<pos:position pos:line="191" pos:column="39"/></operator><name pos:line="191" pos:column="36">bufferlength<pos:position pos:line="191" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="191" pos:column="50">&amp;<pos:position pos:line="191" pos:column="55"/></operator><name pos:line="191" pos:column="51">size<pos:position pos:line="191" pos:column="55"/></name></expr></argument>)<pos:position pos:line="191" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="57"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="192" pos:column="7">else <if pos:line="192" pos:column="12">if<condition pos:line="192" pos:column="14">(<expr><name><name pos:line="192" pos:column="15">post<pos:position pos:line="192" pos:column="19"/></name><operator pos:line="192" pos:column="19">-&gt;<pos:position pos:line="192" pos:column="24"/></operator><name pos:line="192" pos:column="21">flags<pos:position pos:line="192" pos:column="26"/></name></name> <operator pos:line="192" pos:column="27">&amp;<pos:position pos:line="192" pos:column="32"/></operator> <name pos:line="192" pos:column="29">HTTPPOST_CALLBACK<pos:position pos:line="192" pos:column="46"/></name></expr>)<pos:position pos:line="192" pos:column="47"/></condition><then pos:line="192" pos:column="47">
        <comment type="block" pos:line="193" pos:column="9">/* the contents should be read with the callback and the size is set
           with the contentslength */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="195" pos:column="9">result<pos:position pos:line="195" pos:column="15"/></name> <operator pos:line="195" pos:column="16">=<pos:position pos:line="195" pos:column="17"/></operator> <call><name pos:line="195" pos:column="18">AddFormData<pos:position pos:line="195" pos:column="29"/></name><argument_list pos:line="195" pos:column="29">(<argument><expr><operator pos:line="195" pos:column="30">&amp;<pos:position pos:line="195" pos:column="35"/></operator><name pos:line="195" pos:column="31">form<pos:position pos:line="195" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="37">FORM_CALLBACK<pos:position pos:line="195" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="52">post<pos:position pos:line="195" pos:column="56"/></name><operator pos:line="195" pos:column="56">-&gt;<pos:position pos:line="195" pos:column="61"/></operator><name pos:line="195" pos:column="58">userp<pos:position pos:line="195" pos:column="63"/></name></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="196" pos:column="30">post<pos:position pos:line="196" pos:column="34"/></name><operator pos:line="196" pos:column="34">-&gt;<pos:position pos:line="196" pos:column="39"/></operator><name pos:line="196" pos:column="36">flags<pos:position pos:line="196" pos:column="41"/></name></name><operator pos:line="196" pos:column="41">&amp;<pos:position pos:line="196" pos:column="46"/></operator><name pos:line="196" pos:column="42">CURL_HTTPPOST_LARGE<pos:position pos:line="196" pos:column="61"/></name></expr>?<pos:position pos:line="196" pos:column="62"/></condition><then pos:line="196" pos:column="62">
                             <expr><name><name pos:line="197" pos:column="30">post<pos:position pos:line="197" pos:column="34"/></name><operator pos:line="197" pos:column="34">-&gt;<pos:position pos:line="197" pos:column="39"/></operator><name pos:line="197" pos:column="36">contentlen<pos:position pos:line="197" pos:column="46"/></name></name></expr></then><else pos:line="197" pos:column="46">:<expr><name><name pos:line="197" pos:column="47">post<pos:position pos:line="197" pos:column="51"/></name><operator pos:line="197" pos:column="51">-&gt;<pos:position pos:line="197" pos:column="56"/></operator><name pos:line="197" pos:column="53">contentslength<pos:position pos:line="197" pos:column="67"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="197" pos:column="69">&amp;<pos:position pos:line="197" pos:column="74"/></operator><name pos:line="197" pos:column="70">size<pos:position pos:line="197" pos:column="74"/></name></expr></argument>)<pos:position pos:line="197" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="76"/></expr_stmt></block></then></if></elseif>
      <else pos:line="198" pos:column="7">else
        <comment type="block" pos:line="199" pos:column="9">/* include the contents we got */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="200" pos:column="9">result<pos:position pos:line="200" pos:column="15"/></name> <operator pos:line="200" pos:column="16">=<pos:position pos:line="200" pos:column="17"/></operator> <call><name pos:line="200" pos:column="18">AddFormData<pos:position pos:line="200" pos:column="29"/></name><argument_list pos:line="200" pos:column="29">(<argument><expr><operator pos:line="200" pos:column="30">&amp;<pos:position pos:line="200" pos:column="35"/></operator><name pos:line="200" pos:column="31">form<pos:position pos:line="200" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="37">FORM_CONTENT<pos:position pos:line="200" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="51">post<pos:position pos:line="200" pos:column="55"/></name><operator pos:line="200" pos:column="55">-&gt;<pos:position pos:line="200" pos:column="60"/></operator><name pos:line="200" pos:column="57">contents<pos:position pos:line="200" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="201" pos:column="30">post<pos:position pos:line="201" pos:column="34"/></name><operator pos:line="201" pos:column="34">-&gt;<pos:position pos:line="201" pos:column="39"/></operator><name pos:line="201" pos:column="36">flags<pos:position pos:line="201" pos:column="41"/></name></name><operator pos:line="201" pos:column="41">&amp;<pos:position pos:line="201" pos:column="46"/></operator><name pos:line="201" pos:column="42">CURL_HTTPPOST_LARGE<pos:position pos:line="201" pos:column="61"/></name></expr>?<pos:position pos:line="201" pos:column="62"/></condition><then pos:line="201" pos:column="62">
                             <expr><name><name pos:line="202" pos:column="30">post<pos:position pos:line="202" pos:column="34"/></name><operator pos:line="202" pos:column="34">-&gt;<pos:position pos:line="202" pos:column="39"/></operator><name pos:line="202" pos:column="36">contentlen<pos:position pos:line="202" pos:column="46"/></name></name></expr></then><else pos:line="202" pos:column="46">:<expr><name><name pos:line="202" pos:column="47">post<pos:position pos:line="202" pos:column="51"/></name><operator pos:line="202" pos:column="51">-&gt;<pos:position pos:line="202" pos:column="56"/></operator><name pos:line="202" pos:column="53">contentslength<pos:position pos:line="202" pos:column="67"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="202" pos:column="69">&amp;<pos:position pos:line="202" pos:column="74"/></operator><name pos:line="202" pos:column="70">size<pos:position pos:line="202" pos:column="74"/></name></expr></argument>)<pos:position pos:line="202" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="76"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="203" pos:column="7">file<pos:position pos:line="203" pos:column="11"/></name> <operator pos:line="203" pos:column="12">=<pos:position pos:line="203" pos:column="13"/></operator> <name><name pos:line="203" pos:column="14">file<pos:position pos:line="203" pos:column="18"/></name><operator pos:line="203" pos:column="18">-&gt;<pos:position pos:line="203" pos:column="23"/></operator><name pos:line="203" pos:column="20">more<pos:position pos:line="203" pos:column="24"/></name></name></expr>;<pos:position pos:line="203" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="204" pos:column="6"/></block> while<condition pos:line="204" pos:column="12">(<expr><name pos:line="204" pos:column="13">file<pos:position pos:line="204" pos:column="17"/></name> <operator pos:line="204" pos:column="18">&amp;&amp;<pos:position pos:line="204" pos:column="28"/></operator> <operator pos:line="204" pos:column="21">!<pos:position pos:line="204" pos:column="22"/></operator><name pos:line="204" pos:column="22">result<pos:position pos:line="204" pos:column="28"/></name></expr>)<pos:position pos:line="204" pos:column="29"/></condition>;<pos:position pos:line="204" pos:column="30"/></do> <comment type="block" pos:line="204" pos:column="31">/* for each specified file for this field */</comment>

    <if pos:line="206" pos:column="5">if<condition pos:line="206" pos:column="7">(<expr><name pos:line="206" pos:column="8">result<pos:position pos:line="206" pos:column="14"/></name></expr>)<pos:position pos:line="206" pos:column="15"/></condition><then pos:line="206" pos:column="15">
      <block type="pseudo"><break pos:line="207" pos:column="7">break;<pos:position pos:line="207" pos:column="13"/></break></block></then></if>

    <if pos:line="209" pos:column="5">if<condition pos:line="209" pos:column="7">(<expr><name><name pos:line="209" pos:column="8">post<pos:position pos:line="209" pos:column="12"/></name><operator pos:line="209" pos:column="12">-&gt;<pos:position pos:line="209" pos:column="17"/></operator><name pos:line="209" pos:column="14">more<pos:position pos:line="209" pos:column="18"/></name></name></expr>)<pos:position pos:line="209" pos:column="19"/></condition><then pos:line="209" pos:column="19"> <block pos:line="209" pos:column="20">{
      <comment type="block" pos:line="210" pos:column="7">/* this was a multiple-file inclusion, make a termination file
         boundary: */</comment>
      <expr_stmt><expr><name pos:line="212" pos:column="7">result<pos:position pos:line="212" pos:column="13"/></name> <operator pos:line="212" pos:column="14">=<pos:position pos:line="212" pos:column="15"/></operator> <call><name pos:line="212" pos:column="16">AddFormDataf<pos:position pos:line="212" pos:column="28"/></name><argument_list pos:line="212" pos:column="28">(<argument><expr><operator pos:line="212" pos:column="29">&amp;<pos:position pos:line="212" pos:column="34"/></operator><name pos:line="212" pos:column="30">form<pos:position pos:line="212" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="212" pos:column="36">&amp;<pos:position pos:line="212" pos:column="41"/></operator><name pos:line="212" pos:column="37">size<pos:position pos:line="212" pos:column="41"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="213" pos:column="28">"\r\n--%s--"<pos:position pos:line="213" pos:column="40"/></literal></expr></argument>,
                           <argument><expr><name pos:line="214" pos:column="28">fileboundary<pos:position pos:line="214" pos:column="40"/></name></expr></argument>)<pos:position pos:line="214" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="42"/></expr_stmt>
      <if pos:line="215" pos:column="7">if<condition pos:line="215" pos:column="9">(<expr><name pos:line="215" pos:column="10">result<pos:position pos:line="215" pos:column="16"/></name></expr>)<pos:position pos:line="215" pos:column="17"/></condition><then pos:line="215" pos:column="17">
        <block type="pseudo"><break pos:line="216" pos:column="9">break;<pos:position pos:line="216" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="217" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="218" pos:column="5">post<pos:position pos:line="218" pos:column="9"/></name> <operator pos:line="218" pos:column="10">=<pos:position pos:line="218" pos:column="11"/></operator> <name><name pos:line="218" pos:column="12">post<pos:position pos:line="218" pos:column="16"/></name><operator pos:line="218" pos:column="16">-&gt;<pos:position pos:line="218" pos:column="21"/></operator><name pos:line="218" pos:column="18">next<pos:position pos:line="218" pos:column="22"/></name></name></expr>;<pos:position pos:line="218" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="219" pos:column="4"/></block> while<condition pos:line="219" pos:column="10">(<expr><name pos:line="219" pos:column="11">post<pos:position pos:line="219" pos:column="15"/></name></expr>)<pos:position pos:line="219" pos:column="16"/></condition>;<pos:position pos:line="219" pos:column="17"/></do> <comment type="block" pos:line="219" pos:column="18">/* for each field */</comment>

  <comment type="block" pos:line="221" pos:column="3">/* end-boundary for everything */</comment>
  <if pos:line="222" pos:column="3">if<condition pos:line="222" pos:column="5">(<expr><operator pos:line="222" pos:column="6">!<pos:position pos:line="222" pos:column="7"/></operator><name pos:line="222" pos:column="7">result<pos:position pos:line="222" pos:column="13"/></name></expr>)<pos:position pos:line="222" pos:column="14"/></condition><then pos:line="222" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="223" pos:column="5">result<pos:position pos:line="223" pos:column="11"/></name> <operator pos:line="223" pos:column="12">=<pos:position pos:line="223" pos:column="13"/></operator> <call><name pos:line="223" pos:column="14">AddFormDataf<pos:position pos:line="223" pos:column="26"/></name><argument_list pos:line="223" pos:column="26">(<argument><expr><operator pos:line="223" pos:column="27">&amp;<pos:position pos:line="223" pos:column="32"/></operator><name pos:line="223" pos:column="28">form<pos:position pos:line="223" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="223" pos:column="34">&amp;<pos:position pos:line="223" pos:column="39"/></operator><name pos:line="223" pos:column="35">size<pos:position pos:line="223" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="41">"\r\n--%s--\r\n"<pos:position pos:line="223" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="223" pos:column="59">boundary<pos:position pos:line="223" pos:column="67"/></name></expr></argument>)<pos:position pos:line="223" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="69"/></expr_stmt></block></then></if>

  <if pos:line="225" pos:column="3">if<condition pos:line="225" pos:column="5">(<expr><name pos:line="225" pos:column="6">result<pos:position pos:line="225" pos:column="12"/></name></expr>)<pos:position pos:line="225" pos:column="13"/></condition><then pos:line="225" pos:column="13"> <block pos:line="225" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="226" pos:column="5">Curl_formclean<pos:position pos:line="226" pos:column="19"/></name><argument_list pos:line="226" pos:column="19">(<argument><expr><operator pos:line="226" pos:column="20">&amp;<pos:position pos:line="226" pos:column="25"/></operator><name pos:line="226" pos:column="21">firstform<pos:position pos:line="226" pos:column="30"/></name></expr></argument>)<pos:position pos:line="226" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="32"/></expr_stmt>
    <return pos:line="227" pos:column="5">return <expr><name pos:line="227" pos:column="12">result<pos:position pos:line="227" pos:column="18"/></name></expr>;<pos:position pos:line="227" pos:column="19"/></return>
  }<pos:position pos:line="228" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="230" pos:column="3">*<pos:position pos:line="230" pos:column="4"/></operator><name pos:line="230" pos:column="4">sizep<pos:position pos:line="230" pos:column="9"/></name> <operator pos:line="230" pos:column="10">=<pos:position pos:line="230" pos:column="11"/></operator> <name pos:line="230" pos:column="12">size<pos:position pos:line="230" pos:column="16"/></name></expr>;<pos:position pos:line="230" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="231" pos:column="3">*<pos:position pos:line="231" pos:column="4"/></operator><name pos:line="231" pos:column="4">finalform<pos:position pos:line="231" pos:column="13"/></name> <operator pos:line="231" pos:column="14">=<pos:position pos:line="231" pos:column="15"/></operator> <name pos:line="231" pos:column="16">firstform<pos:position pos:line="231" pos:column="25"/></name></expr>;<pos:position pos:line="231" pos:column="26"/></expr_stmt>

  <return pos:line="233" pos:column="3">return <expr><name pos:line="233" pos:column="10">result<pos:position pos:line="233" pos:column="16"/></name></expr>;<pos:position pos:line="233" pos:column="17"/></return>
}<pos:position pos:line="234" pos:column="2"/></block></function></unit>

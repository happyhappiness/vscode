<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2343_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_override_sspi_http_realm<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">chlg<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">SEC_WINNT_AUTH_IDENTITY<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">identity<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">xcharp_u<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">domain<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">dup_domain<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* If domain is blank or unset, check challenge message for realm */</comment>
  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">!<pos:position pos:line="7" pos:column="7"/></operator><name><name pos:line="7" pos:column="7">identity<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">Domain<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">||<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="27">!<pos:position pos:line="7" pos:column="28"/></operator><name><name pos:line="7" pos:column="28">identity<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">DomainLength<pos:position pos:line="7" pos:column="50"/></name></name></expr>)<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51"> <block pos:line="7" pos:column="52">{
    <for pos:line="8" pos:column="5">for<control pos:line="8" pos:column="8">(<init pos:line="8" pos:column="9">;<pos:position pos:line="8" pos:column="10"/></init><condition pos:line="8" pos:column="10">;<pos:position pos:line="8" pos:column="11"/></condition><incr/>)<pos:position pos:line="8" pos:column="12"/></control> <block pos:line="8" pos:column="13">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">char<pos:position pos:line="9" pos:column="11"/></name></type> <name><name pos:line="9" pos:column="12">value<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><name pos:line="9" pos:column="18">DIGEST_MAX_VALUE_LENGTH<pos:position pos:line="9" pos:column="41"/></name></expr>]<pos:position pos:line="9" pos:column="42"/></index></name></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">char<pos:position pos:line="10" pos:column="11"/></name></type> <name><name pos:line="10" pos:column="12">content<pos:position pos:line="10" pos:column="19"/></name><index pos:line="10" pos:column="19">[<expr><name pos:line="10" pos:column="20">DIGEST_MAX_CONTENT_LENGTH<pos:position pos:line="10" pos:column="45"/></name></expr>]<pos:position pos:line="10" pos:column="46"/></index></name></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>

      <comment type="block" pos:line="12" pos:column="7">/* Pass all additional spaces here */</comment>
      <while pos:line="13" pos:column="7">while<condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">chlg<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&amp;&amp;<pos:position pos:line="13" pos:column="29"/></operator> <call><name pos:line="13" pos:column="22">ISSPACE<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">chlg<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="37"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">chlg<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt></block></while>

      <comment type="block" pos:line="16" pos:column="7">/* Extract a value=content pair */</comment>
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><call><name pos:line="17" pos:column="10">Curl_auth_digest_get_pair<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">chlg<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">value<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">content<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">chlg<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65"> <block pos:line="17" pos:column="66">{
        <if pos:line="18" pos:column="9">if<condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">strcasecompare<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">value<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"realm"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{

          <comment type="block" pos:line="20" pos:column="11">/* Setup identity's domain and length */</comment>
          <expr_stmt><expr><name><name pos:line="21" pos:column="11">domain<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">tchar_ptr<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <call><name pos:line="21" pos:column="30">Curl_convert_UTF8_to_tchar<pos:position pos:line="21" pos:column="56"/></name><argument_list pos:line="21" pos:column="56">(<argument><expr><operator pos:line="21" pos:column="57">(<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">char<pos:position pos:line="21" pos:column="62"/></name> <operator pos:line="21" pos:column="63">*<pos:position pos:line="21" pos:column="64"/></operator><operator pos:line="21" pos:column="64">)<pos:position pos:line="21" pos:column="65"/></operator> <name pos:line="21" pos:column="66">content<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="75"/></expr_stmt>
          <if pos:line="22" pos:column="11">if<condition pos:line="22" pos:column="13">(<expr><operator pos:line="22" pos:column="14">!<pos:position pos:line="22" pos:column="15"/></operator><name><name pos:line="22" pos:column="15">domain<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">.<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">tchar_ptr<pos:position pos:line="22" pos:column="31"/></name></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
            <block type="pseudo"><return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></return></block></then></if>

          <expr_stmt><expr><name><name pos:line="25" pos:column="11">dup_domain<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">tchar_ptr<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <call><name pos:line="25" pos:column="34">_tcsdup<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">domain<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">.<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">tchar_ptr<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
          <if pos:line="26" pos:column="11">if<condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><name><name pos:line="26" pos:column="15">dup_domain<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">.<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">tchar_ptr<pos:position pos:line="26" pos:column="35"/></name></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">Curl_unicodefree<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name><name pos:line="27" pos:column="30">domain<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">tchar_ptr<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></return>
          }<pos:position pos:line="29" pos:column="12"/></block></then></if>

          <expr_stmt><expr><call><name pos:line="31" pos:column="11">free<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name><name pos:line="31" pos:column="16">identity<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">Domain<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="32" pos:column="11">identity<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">Domain<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name><name pos:line="32" pos:column="30">dup_domain<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">tbyte_ptr<pos:position pos:line="32" pos:column="50"/></name></name></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="33" pos:column="11">identity<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">DomainLength<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <call><name pos:line="33" pos:column="36">curlx_uztoul<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><call><name pos:line="33" pos:column="49">_tcslen<pos:position pos:line="33" pos:column="56"/></name><argument_list pos:line="33" pos:column="56">(<argument><expr><name><name pos:line="33" pos:column="57">dup_domain<pos:position pos:line="33" pos:column="67"/></name><operator pos:line="33" pos:column="67">.<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="68">tchar_ptr<pos:position pos:line="33" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="34" pos:column="11">dup_domain<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">tchar_ptr<pos:position pos:line="34" pos:column="31"/></name></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>

          <expr_stmt><expr><call><name pos:line="36" pos:column="11">Curl_unicodefree<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name><name pos:line="36" pos:column="28">domain<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">tchar_ptr<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then>
        <else pos:line="38" pos:column="9">else <block pos:line="38" pos:column="14">{
          <comment type="block" pos:line="39" pos:column="11">/* Unknown specifier, ignore it! */</comment>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>
      }<pos:position pos:line="41" pos:column="8"/></block></then>
      <else pos:line="42" pos:column="7">else
        <block type="pseudo"><break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break></block></else></if> <comment type="block" pos:line="43" pos:column="16">/* We're done here */</comment>

      <comment type="block" pos:line="45" pos:column="7">/* Pass all additional spaces here */</comment>
      <while pos:line="46" pos:column="7">while<condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">chlg<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">&amp;&amp;<pos:position pos:line="46" pos:column="29"/></operator> <call><name pos:line="46" pos:column="22">ISSPACE<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><operator pos:line="46" pos:column="30">*<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">chlg<pos:position pos:line="46" pos:column="35"/></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="37"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="9">chlg<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">++<pos:position pos:line="47" pos:column="15"/></operator></expr>;<pos:position pos:line="47" pos:column="16"/></expr_stmt></block></while>

      <comment type="block" pos:line="49" pos:column="7">/* Allow the list to be comma-separated */</comment>
      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">(<expr><literal type="char" pos:line="50" pos:column="10">','<pos:position pos:line="50" pos:column="13"/></literal> <operator pos:line="50" pos:column="14">==<pos:position pos:line="50" pos:column="16"/></operator> <operator pos:line="50" pos:column="17">*<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">chlg<pos:position pos:line="50" pos:column="22"/></name></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">chlg<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">++<pos:position pos:line="51" pos:column="15"/></operator></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><name pos:line="55" pos:column="10">CURLE_OK<pos:position pos:line="55" pos:column="18"/></name></expr>;<pos:position pos:line="55" pos:column="19"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

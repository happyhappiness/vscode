<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1353_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ContentTypeForFilename<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">filename<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                          <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">prevtype<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">contenttype<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <comment type="block" pos:line="6" pos:column="3">/*
   * No type was specified, we scan through a few well-known
   * extensions and pick the first we match!
   */</comment>
  <struct pos:line="10" pos:column="3">struct <name pos:line="10" pos:column="10">ContentType<pos:position pos:line="10" pos:column="21"/></name> <block pos:line="10" pos:column="22">{<public type="default" pos:line="10" pos:column="23">
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">extension<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">type<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
  <pos:position pos:line="13" pos:column="3"/></public>}<pos:position pos:line="13" pos:column="4"/></block>;<pos:position pos:line="13" pos:column="5"/></struct>
  <decl_stmt><decl><specifier pos:line="14" pos:column="3">static<pos:position pos:line="14" pos:column="9"/></specifier> <type><specifier pos:line="14" pos:column="10">const<pos:position pos:line="14" pos:column="15"/></specifier> <name><name pos:line="14" pos:column="16">struct<pos:position pos:line="14" pos:column="22"/></name> <name pos:line="14" pos:column="23">ContentType<pos:position pos:line="14" pos:column="34"/></name></name></type> <name><name pos:line="14" pos:column="35">ctts<pos:position pos:line="14" pos:column="39"/></name><index pos:line="14" pos:column="39">[]<pos:position pos:line="14" pos:column="41"/></index></name><init pos:line="14" pos:column="41">=<expr><block pos:line="14" pos:column="42">{
    <expr><block pos:line="15" pos:column="5">{<expr><literal type="string" pos:line="15" pos:column="6">".gif"<pos:position pos:line="15" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="15" pos:column="15">"image/gif"<pos:position pos:line="15" pos:column="26"/></literal></expr>}<pos:position pos:line="15" pos:column="27"/></block></expr>,
    <expr><block pos:line="16" pos:column="5">{<expr><literal type="string" pos:line="16" pos:column="6">".jpg"<pos:position pos:line="16" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="16" pos:column="15">"image/jpeg"<pos:position pos:line="16" pos:column="27"/></literal></expr>}<pos:position pos:line="16" pos:column="28"/></block></expr>,
    <expr><block pos:line="17" pos:column="5">{<expr><literal type="string" pos:line="17" pos:column="6">".jpeg"<pos:position pos:line="17" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="17" pos:column="15">"image/jpeg"<pos:position pos:line="17" pos:column="27"/></literal></expr>}<pos:position pos:line="17" pos:column="28"/></block></expr>,
    <expr><block pos:line="18" pos:column="5">{<expr><literal type="string" pos:line="18" pos:column="6">".txt"<pos:position pos:line="18" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="18" pos:column="15">"text/plain"<pos:position pos:line="18" pos:column="27"/></literal></expr>}<pos:position pos:line="18" pos:column="28"/></block></expr>,
    <expr><block pos:line="19" pos:column="5">{<expr><literal type="string" pos:line="19" pos:column="6">".html"<pos:position pos:line="19" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="19" pos:column="15">"text/html"<pos:position pos:line="19" pos:column="26"/></literal></expr>}<pos:position pos:line="19" pos:column="27"/></block></expr>,
    <expr><block pos:line="20" pos:column="5">{<expr><literal type="string" pos:line="20" pos:column="6">".xml"<pos:position pos:line="20" pos:column="12"/></literal></expr>, <expr><literal type="string" pos:line="20" pos:column="14">"application/xml"<pos:position pos:line="20" pos:column="31"/></literal></expr>}<pos:position pos:line="20" pos:column="32"/></block></expr>
  }<pos:position pos:line="21" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="5"/></decl_stmt>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name pos:line="23" pos:column="6">prevtype<pos:position pos:line="23" pos:column="14"/></name></expr>)<pos:position pos:line="23" pos:column="15"/></condition><then pos:line="23" pos:column="15">
    <comment type="block" pos:line="24" pos:column="5">/* default to the previously set/used! */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="5">contenttype<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">prevtype<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt></block></then>
  <else pos:line="26" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="5">contenttype<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">HTTPPOST_CONTENTTYPE_DEFAULT<pos:position pos:line="27" pos:column="47"/></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt></block></else></if>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name pos:line="29" pos:column="6">filename<pos:position pos:line="29" pos:column="14"/></name></expr>)<pos:position pos:line="29" pos:column="15"/></condition><then pos:line="29" pos:column="15"> <block pos:line="29" pos:column="16">{ <comment type="block" pos:line="29" pos:column="18">/* in case a NULL was passed in */</comment>
    <for pos:line="30" pos:column="5">for<control pos:line="30" pos:column="8">(<init><expr><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></init> <condition><expr><name pos:line="30" pos:column="16">i<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">&lt;<pos:position pos:line="30" pos:column="21"/></operator><sizeof pos:line="30" pos:column="18">sizeof<argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">ctts<pos:position pos:line="30" pos:column="29"/></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></sizeof><operator pos:line="30" pos:column="30">/<pos:position pos:line="30" pos:column="31"/></operator><sizeof pos:line="30" pos:column="31">sizeof<argument_list pos:line="30" pos:column="37">(<argument><expr><name><name pos:line="30" pos:column="38">ctts<pos:position pos:line="30" pos:column="42"/></name><index pos:line="30" pos:column="42">[<expr><literal type="number" pos:line="30" pos:column="43">0<pos:position pos:line="30" pos:column="44"/></literal></expr>]<pos:position pos:line="30" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></sizeof></expr>;<pos:position pos:line="30" pos:column="47"/></condition> <incr><expr><name pos:line="30" pos:column="48">i<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">++<pos:position pos:line="30" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="52"/></control> <block pos:line="30" pos:column="53">{
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><call><name pos:line="31" pos:column="10">strlen<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">filename<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call> <operator pos:line="31" pos:column="27">&gt;=<pos:position pos:line="31" pos:column="32"/></operator> <call><name pos:line="31" pos:column="30">strlen<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name><name pos:line="31" pos:column="37">ctts<pos:position pos:line="31" pos:column="41"/></name><index pos:line="31" pos:column="41">[<expr><name pos:line="31" pos:column="42">i<pos:position pos:line="31" pos:column="43"/></name></expr>]<pos:position pos:line="31" pos:column="44"/></index></name><operator pos:line="31" pos:column="44">.<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">extension<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <block pos:line="31" pos:column="57">{
        <if pos:line="32" pos:column="9">if<condition pos:line="32" pos:column="11">(<expr><call><name pos:line="32" pos:column="12">strcasecompare<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">filename<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">+<pos:position pos:line="32" pos:column="37"/></operator>
                          <call><name pos:line="33" pos:column="27">strlen<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">filename<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call> <operator pos:line="33" pos:column="44">-<pos:position pos:line="33" pos:column="45"/></operator> <call><name pos:line="33" pos:column="46">strlen<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr><name><name pos:line="33" pos:column="53">ctts<pos:position pos:line="33" pos:column="57"/></name><index pos:line="33" pos:column="57">[<expr><name pos:line="33" pos:column="58">i<pos:position pos:line="33" pos:column="59"/></name></expr>]<pos:position pos:line="33" pos:column="60"/></index></name><operator pos:line="33" pos:column="60">.<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="61">extension<pos:position pos:line="33" pos:column="70"/></name></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr></argument>,
                          <argument><expr><name><name pos:line="34" pos:column="27">ctts<pos:position pos:line="34" pos:column="31"/></name><index pos:line="34" pos:column="31">[<expr><name pos:line="34" pos:column="32">i<pos:position pos:line="34" pos:column="33"/></name></expr>]<pos:position pos:line="34" pos:column="34"/></index></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">extension<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
          <expr_stmt><expr><name pos:line="35" pos:column="11">contenttype<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name><name pos:line="35" pos:column="25">ctts<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><name pos:line="35" pos:column="30">i<pos:position pos:line="35" pos:column="31"/></name></expr>]<pos:position pos:line="35" pos:column="32"/></index></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">type<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
          <break pos:line="36" pos:column="11">break;<pos:position pos:line="36" pos:column="17"/></break>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></for>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="41" pos:column="3">/* we have a contenttype by now */</comment>
  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">contenttype<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

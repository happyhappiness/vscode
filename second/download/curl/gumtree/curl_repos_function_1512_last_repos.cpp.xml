<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1512_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">tftp_parse_option_ack<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">tftp_state_data_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">state<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">ptr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">len<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">tmp<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">ptr<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">state<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">conn<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">data<pos:position pos:line="5" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* if OACK doesn't contain blksize option, the default (512) must be used */</comment>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">state<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">blksize<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">TFTP_BLKSIZE_DEFAULT<pos:position pos:line="8" pos:column="40"/></name></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

  <while pos:line="10" pos:column="3">while<condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">tmp<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">&lt;<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="15">ptr<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">+<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">len<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition> <block pos:line="10" pos:column="26">{
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">option<pos:position pos:line="11" pos:column="23"/></name></decl>, <modifier pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="26">value<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">tmp<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">tftp_option_get<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">tmp<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">ptr<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">+<pos:position pos:line="13" pos:column="37"/></operator> <name pos:line="13" pos:column="38">len<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">-<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="44">tmp<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="49">&amp;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="50">option<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="58">&amp;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="59">value<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">tmp<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">==<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">NULL<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">failf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">data<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"Malformed ACK packet, rejecting"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">CURLE_TFTP_ILLEGAL<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">infof<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">data<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="17">"got option=(%s) value=(%s)\n"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">option<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">value<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><call><name pos:line="21" pos:column="8">checkprefix<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">option<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">TFTP_OPTION_BLKSIZE<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">long<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">blksize<pos:position pos:line="22" pos:column="19"/></name></decl>;<pos:position pos:line="22" pos:column="20"/></decl_stmt>

      <expr_stmt><expr><name pos:line="24" pos:column="7">blksize<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">strtol<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">value<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">NULL<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="37">10<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>

      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><operator pos:line="26" pos:column="10">!<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">blksize<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block pos:line="26" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">failf<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">data<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"invalid blocksize value in OACK packet"<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">CURLE_TFTP_ILLEGAL<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></return>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><name pos:line="30" pos:column="10">blksize<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&gt;<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="20">TFTP_BLKSIZE_MAX<pos:position pos:line="30" pos:column="36"/></name></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37"> <block pos:line="30" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">failf<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">data<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="21">"%s (%d)"<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="32">"blksize is larger than max supported"<pos:position pos:line="31" pos:column="70"/></literal></expr></argument>,
              <argument><expr><name pos:line="32" pos:column="15">TFTP_BLKSIZE_MAX<pos:position pos:line="32" pos:column="31"/></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">CURLE_TFTP_ILLEGAL<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then>
      <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if<condition pos:line="35" pos:column="14">(<expr><name pos:line="35" pos:column="15">blksize<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="25">TFTP_BLKSIZE_MIN<pos:position pos:line="35" pos:column="41"/></name></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">failf<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name pos:line="36" pos:column="15">data<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="21">"%s (%d)"<pos:position pos:line="36" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="32">"blksize is smaller than min supported"<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>,
              <argument><expr><name pos:line="37" pos:column="15">TFTP_BLKSIZE_MIN<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">CURLE_TFTP_ILLEGAL<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></return>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if<condition pos:line="40" pos:column="14">(<expr><name pos:line="40" pos:column="15">blksize<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&gt;<pos:position pos:line="40" pos:column="27"/></operator> <name><name pos:line="40" pos:column="25">state<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">requested_blksize<pos:position pos:line="40" pos:column="49"/></name></name></expr>)<pos:position pos:line="40" pos:column="50"/></condition><then pos:line="40" pos:column="50"> <block pos:line="40" pos:column="51">{
        <comment type="block" pos:line="41" pos:column="9">/* could realloc pkt buffers here, but the spec doesn't call out
         * support for the server requesting a bigger blksize than the client
         * requests */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">failf<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">data<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"%s (%ld)"<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>,
              <argument><expr><literal type="string" pos:line="45" pos:column="15">"server requested blksize larger than allocated"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">blksize<pos:position pos:line="45" pos:column="72"/></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="74"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">CURLE_TFTP_ILLEGAL<pos:position pos:line="46" pos:column="34"/></name></expr>;<pos:position pos:line="46" pos:column="35"/></return>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if></elseif></if>

      <expr_stmt><expr><name><name pos:line="49" pos:column="7">state<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">blksize<pos:position pos:line="49" pos:column="21"/></name></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="24">(<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">int<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">)<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="29">blksize<pos:position pos:line="49" pos:column="36"/></name></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">infof<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><name pos:line="50" pos:column="13">data<pos:position pos:line="50" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="19">"%s (%d) %s (%d)\n"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="40">"blksize parsed from OACK"<pos:position pos:line="50" pos:column="66"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="51" pos:column="13">state<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">blksize<pos:position pos:line="51" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="29">"requested"<pos:position pos:line="51" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="42">state<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">requested_blksize<pos:position pos:line="51" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if<condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">checkprefix<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">option<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">TFTP_OPTION_TSIZE<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="52"/></condition><then pos:line="53" pos:column="52"> <block pos:line="53" pos:column="53">{
      <decl_stmt><decl><type><name pos:line="54" pos:column="7">long<pos:position pos:line="54" pos:column="11"/></name></type> <name pos:line="54" pos:column="12">tsize<pos:position pos:line="54" pos:column="17"/></name> <init pos:line="54" pos:column="18">= <expr><literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="22"/></decl_stmt>

      <expr_stmt><expr><name pos:line="56" pos:column="7">tsize<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">strtol<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">value<pos:position pos:line="56" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="29">NULL<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="35">10<pos:position pos:line="56" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">infof<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><name pos:line="57" pos:column="13">data<pos:position pos:line="57" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="19">"%s (%ld)\n"<pos:position pos:line="57" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="33">"tsize parsed from OACK"<pos:position pos:line="57" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="59">tsize<pos:position pos:line="57" pos:column="64"/></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="66"/></expr_stmt>

      <comment type="block" pos:line="59" pos:column="7">/* tsize should be ignored on upload: Who cares about the size of the
         remote file? */</comment>
      <if pos:line="61" pos:column="7">if<condition pos:line="61" pos:column="9">(<expr><operator pos:line="61" pos:column="10">!<pos:position pos:line="61" pos:column="11"/></operator><name><name pos:line="61" pos:column="11">data<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">set<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">upload<pos:position pos:line="61" pos:column="27"/></name></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
        <if pos:line="62" pos:column="9">if<condition pos:line="62" pos:column="11">(<expr><operator pos:line="62" pos:column="12">!<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">tsize<pos:position pos:line="62" pos:column="18"/></name></expr>)<pos:position pos:line="62" pos:column="19"/></condition><then pos:line="62" pos:column="19"> <block pos:line="62" pos:column="20">{
          <expr_stmt><expr><call><name pos:line="63" pos:column="11">failf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">data<pos:position pos:line="63" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="23">"invalid tsize -:%s:- value in OACK packet"<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="68">value<pos:position pos:line="63" pos:column="73"/></name></expr></argument>)<pos:position pos:line="63" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="75"/></expr_stmt>
          <return pos:line="64" pos:column="11">return <expr><name pos:line="64" pos:column="18">CURLE_TFTP_ILLEGAL<pos:position pos:line="64" pos:column="36"/></name></expr>;<pos:position pos:line="64" pos:column="37"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">Curl_pgrsSetDownloadSize<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><name pos:line="66" pos:column="34">data<pos:position pos:line="66" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="40">tsize<pos:position pos:line="66" pos:column="45"/></name></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="69" pos:column="4"/></block></while>

  <return pos:line="71" pos:column="3">return <expr><name pos:line="71" pos:column="10">CURLE_OK<pos:position pos:line="71" pos:column="18"/></name></expr>;<pos:position pos:line="71" pos:column="19"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

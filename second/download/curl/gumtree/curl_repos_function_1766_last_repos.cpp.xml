<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1766_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_wait_ms<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">timeout_ms<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><operator pos:line="3" pos:column="5">!<pos:position pos:line="3" pos:column="6"/></operator><call><name pos:line="3" pos:column="6">defined<pos:position pos:line="3" pos:column="13"/></name><argument_list pos:line="3" pos:column="13">(<argument><expr><name pos:line="3" pos:column="14">MSDOS<pos:position pos:line="3" pos:column="19"/></name></expr></argument>)<pos:position pos:line="3" pos:column="20"/></argument_list></call> <operator pos:line="3" pos:column="21">&amp;&amp;<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="24">!<pos:position pos:line="3" pos:column="25"/></operator><call><name pos:line="3" pos:column="25">defined<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><name pos:line="3" pos:column="33">USE_WINSOCK<pos:position pos:line="3" pos:column="44"/></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></cpp:if>
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">HAVE_POLL_FINE<pos:position pos:line="4" pos:column="23"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">timeval<pos:position pos:line="5" pos:column="17"/></name></name></type> <name pos:line="5" pos:column="18">pending_tv<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curltime<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">initial_tv<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">pending_ms<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">error<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">r<pos:position pos:line="11" pos:column="8"/></name> <init pos:line="11" pos:column="9">= <expr><literal type="number" pos:line="11" pos:column="11">0<pos:position pos:line="11" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">timeout_ms<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">timeout_ms<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">SET_SOCKERRNO<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">EINVAL<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">-<pos:position pos:line="17" pos:column="13"/></operator><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><call><name pos:line="19" pos:column="5">defined<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">MSDOS<pos:position pos:line="19" pos:column="18"/></name></expr></argument>)<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">delay<pos:position pos:line="20" pos:column="8"/></name><argument_list pos:line="20" pos:column="8">(<argument><expr><name pos:line="20" pos:column="9">timeout_ms<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
<cpp:elif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">elif<pos:position pos:line="21" pos:column="6"/></cpp:directive> <expr><call><name pos:line="21" pos:column="7">defined<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">USE_WINSOCK<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr></cpp:elif>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">Sleep<pos:position pos:line="22" pos:column="8"/></name><argument_list pos:line="22" pos:column="8">(<argument><expr><name pos:line="22" pos:column="9">timeout_ms<pos:position pos:line="22" pos:column="19"/></name></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="24" pos:column="3">pending_ms<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">timeout_ms<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">initial_tv<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">curlx_tvnow<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">()<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
  <do pos:line="26" pos:column="3">do <block pos:line="26" pos:column="6">{
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><call><name pos:line="27" pos:column="5">defined<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">HAVE_POLL_FINE<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">r<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <call><name pos:line="28" pos:column="9">poll<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">NULL<pos:position pos:line="28" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="23">pending_ms<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">pending_tv<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">tv_sec<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">pending_ms<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">/<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="38">1000<pos:position pos:line="30" pos:column="42"/></literal></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">pending_tv<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">.<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">tv_usec<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <operator pos:line="31" pos:column="26">(<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">pending_ms<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">%<pos:position pos:line="31" pos:column="39"/></operator> <literal type="number" pos:line="31" pos:column="40">1000<pos:position pos:line="31" pos:column="44"/></literal><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="46">*<pos:position pos:line="31" pos:column="47"/></operator> <literal type="number" pos:line="31" pos:column="48">1000<pos:position pos:line="31" pos:column="52"/></literal></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">r<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <call><name pos:line="32" pos:column="9">select<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="19">NULL<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="25">NULL<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">NULL<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="37">&amp;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="38">pending_tv<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="33" pos:column="8">/* HAVE_POLL_FINE */</comment>
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name pos:line="34" pos:column="8">r<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">!=<pos:position pos:line="34" pos:column="12"/></operator> <operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16">
      <block type="pseudo"><break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="36" pos:column="5">error<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <name pos:line="36" pos:column="13">SOCKERRNO<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">error<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">&amp;&amp;<pos:position pos:line="37" pos:column="24"/></operator> <call><name pos:line="37" pos:column="17">ERROR_NOT_EINTR<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">error<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40">
      <block type="pseudo"><break pos:line="38" pos:column="7">break;<pos:position pos:line="38" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="39" pos:column="5">pending_ms<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">timeout_ms<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">-<pos:position pos:line="39" pos:column="30"/></operator> <call><name pos:line="39" pos:column="31">ELAPSED_MS<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">()<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">pending_ms<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">&lt;=<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24"> <block pos:line="40" pos:column="25">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">r<pos:position pos:line="41" pos:column="8"/></name> <operator pos:line="41" pos:column="9">=<pos:position pos:line="41" pos:column="10"/></operator> <literal type="number" pos:line="41" pos:column="11">0<pos:position pos:line="41" pos:column="12"/></literal></expr>;<pos:position pos:line="41" pos:column="13"/></expr_stmt>  <comment type="block" pos:line="41" pos:column="15">/* Simulate a "call timed out" case */</comment>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block> while<condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">r<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">==<pos:position pos:line="44" pos:column="15"/></operator> <operator pos:line="44" pos:column="16">-<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">1<pos:position pos:line="44" pos:column="18"/></literal></expr>)<pos:position pos:line="44" pos:column="19"/></condition>;<pos:position pos:line="44" pos:column="20"/></do>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="45" pos:column="8">/* USE_WINSOCK */</comment>
  <if pos:line="46" pos:column="3">if<condition pos:line="46" pos:column="5">(<expr><name pos:line="46" pos:column="6">r<pos:position pos:line="46" pos:column="7"/></name></expr>)<pos:position pos:line="46" pos:column="8"/></condition><then pos:line="46" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="5">r<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <operator pos:line="47" pos:column="9">-<pos:position pos:line="47" pos:column="10"/></operator><literal type="number" pos:line="47" pos:column="10">1<pos:position pos:line="47" pos:column="11"/></literal></expr>;<pos:position pos:line="47" pos:column="12"/></expr_stmt></block></then></if>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">r<pos:position pos:line="48" pos:column="11"/></name></expr>;<pos:position pos:line="48" pos:column="12"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

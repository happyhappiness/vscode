<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_493_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">ossl_connect_step1<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">connectdata<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">conn<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">sockindex<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">retcode<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">CURLE_OK<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">SessionHandle<pos:position pos:line="7" pos:column="23"/></name></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">data<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><name><name pos:line="7" pos:column="32">conn<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">data<pos:position pos:line="7" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">SSL_METHOD_QUAL<pos:position pos:line="8" pos:column="18"/></name> <name pos:line="8" pos:column="19">SSL_METHOD<pos:position pos:line="8" pos:column="29"/></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">req_method<pos:position pos:line="8" pos:column="41"/></name><init pos:line="8" pos:column="41">=<expr><name pos:line="8" pos:column="42">NULL<pos:position pos:line="8" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">void<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">ssl_sessionid<pos:position pos:line="9" pos:column="22"/></name><init pos:line="9" pos:column="22">=<expr><name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">curl_socket_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">sockfd<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name><name pos:line="10" pos:column="26">conn<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">sock<pos:position pos:line="10" pos:column="36"/></name><index pos:line="10" pos:column="36">[<expr><name pos:line="10" pos:column="37">sockindex<pos:position pos:line="10" pos:column="46"/></name></expr>]<pos:position pos:line="10" pos:column="47"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">ssl_connect_data<pos:position pos:line="11" pos:column="26"/></name></name> <modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type><name pos:line="11" pos:column="28">connssl<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name><name pos:line="11" pos:column="39">conn<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">ssl<pos:position pos:line="11" pos:column="48"/></name><index pos:line="11" pos:column="48">[<expr><name pos:line="11" pos:column="49">sockindex<pos:position pos:line="11" pos:column="58"/></name></expr>]<pos:position pos:line="11" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="60"/></decl_stmt>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">SSL_CTRL_SET_TLSEXT_HOSTNAME<pos:position pos:line="12" pos:column="36"/></name></cpp:ifdef>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">ENABLE_IPV6<pos:position pos:line="13" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">in6_addr<pos:position pos:line="14" pos:column="18"/></name></name></type> <name pos:line="14" pos:column="19">addr<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
<cpp:else pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">else<pos:position pos:line="15" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">struct<pos:position pos:line="16" pos:column="9"/></name> <name pos:line="16" pos:column="10">in_addr<pos:position pos:line="16" pos:column="17"/></name></name></type> <name pos:line="16" pos:column="18">addr<pos:position pos:line="16" pos:column="22"/></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">DEBUGASSERT<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">ssl_connect_1<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">==<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">connssl<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">connecting_state<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* Make funny stuff to get random input */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">Curl_ossl_seed<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">data<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* check to see if we've been told to use an explicit SSL/TLS version */</comment>
  <switch pos:line="26" pos:column="3">switch<condition pos:line="26" pos:column="9">(<expr><name><name pos:line="26" pos:column="10">data<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">set<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">ssl<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">version<pos:position pos:line="26" pos:column="31"/></name></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition> <block pos:line="26" pos:column="33">{
  <default pos:line="27" pos:column="3">default:<pos:position pos:line="27" pos:column="11"/></default>
  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="28" pos:column="31"/></name></expr>:<pos:position pos:line="28" pos:column="32"/></case>
    <comment type="block" pos:line="29" pos:column="5">/* we try to figure out version */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">req_method<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">SSLv23_client_method<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">()<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="32" pos:column="29"/></name></expr>:<pos:position pos:line="32" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="33" pos:column="5">req_method<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">TLSv1_client_method<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">()<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="35" pos:column="29"/></name></expr>:<pos:position pos:line="35" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="36" pos:column="5">req_method<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">SSLv2_client_method<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">()<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="38" pos:column="29"/></name></expr>:<pos:position pos:line="38" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">req_method<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">SSLv3_client_method<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">()<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  }<pos:position pos:line="41" pos:column="4"/></block></switch>

  <if pos:line="43" pos:column="3">if<condition pos:line="43" pos:column="5">(<expr><name><name pos:line="43" pos:column="6">connssl<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">ctx<pos:position pos:line="43" pos:column="18"/></name></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="5">SSL_CTX_free<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name><name pos:line="44" pos:column="18">connssl<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">ctx<pos:position pos:line="44" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">connssl<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">ctx<pos:position pos:line="45" pos:column="15"/></name></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">SSL_CTX_new<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">req_method<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>

  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><name><name pos:line="47" pos:column="7">connssl<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">ctx<pos:position pos:line="47" pos:column="19"/></name></name></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20"> <block pos:line="47" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">failf<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><name pos:line="48" pos:column="11">data<pos:position pos:line="48" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="17">"SSL: couldn't create a context!"<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">SSL_CTRL_SET_MSG_CALLBACK<pos:position pos:line="52" pos:column="33"/></name></cpp:ifdef>
  <if pos:line="53" pos:column="3">if<condition pos:line="53" pos:column="5">(<expr><name><name pos:line="53" pos:column="6">data<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">set<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">.<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">fdebug<pos:position pos:line="53" pos:column="22"/></name></name> <operator pos:line="53" pos:column="23">&amp;&amp;<pos:position pos:line="53" pos:column="33"/></operator> <name><name pos:line="53" pos:column="26">data<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">-&gt;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="32">set<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">.<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">verbose<pos:position pos:line="53" pos:column="43"/></name></name></expr>)<pos:position pos:line="53" pos:column="44"/></condition><then pos:line="53" pos:column="44"> <block pos:line="53" pos:column="45">{
    <comment type="block" pos:line="54" pos:column="5">/* the SSL trace callback is only used for verbose logging so we only
       inform about failures of setting it */</comment>
    <if pos:line="56" pos:column="5">if<condition pos:line="56" pos:column="7">(<expr><operator pos:line="56" pos:column="8">!<pos:position pos:line="56" pos:column="9"/></operator><call><name pos:line="56" pos:column="9">SSL_CTX_callback_ctrl<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name><name pos:line="56" pos:column="31">connssl<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">ctx<pos:position pos:line="56" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="45">SSL_CTRL_SET_MSG_CALLBACK<pos:position pos:line="56" pos:column="70"/></name></expr></argument>,
                               <argument><expr><operator pos:line="57" pos:column="32">(<pos:position pos:line="57" pos:column="33"/></operator><call><call><name pos:line="57" pos:column="33">void<pos:position pos:line="57" pos:column="37"/></name> <argument_list pos:line="57" pos:column="38">(<argument><expr><operator pos:line="57" pos:column="39">*<pos:position pos:line="57" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call><argument_list pos:line="57" pos:column="41">(<argument><expr><name pos:line="57" pos:column="42">void<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call><operator pos:line="57" pos:column="47">)<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="48">ssl_tls_trace<pos:position pos:line="57" pos:column="61"/></name></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="63"/></condition><then pos:line="57" pos:column="63"> <block pos:line="57" pos:column="64">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">infof<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><name pos:line="58" pos:column="13">data<pos:position pos:line="58" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="19">"SSL: couldn't set callback!\n"<pos:position pos:line="58" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then>
    <elseif pos:line="60" pos:column="5">else <if pos:line="60" pos:column="10">if<condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><call><name pos:line="60" pos:column="14">SSL_CTX_ctrl<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name><name pos:line="60" pos:column="27">connssl<pos:position pos:line="60" pos:column="34"/></name><operator pos:line="60" pos:column="34">-&gt;<pos:position pos:line="60" pos:column="39"/></operator><name pos:line="60" pos:column="36">ctx<pos:position pos:line="60" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="41">SSL_CTRL_SET_MSG_CALLBACK_ARG<pos:position pos:line="60" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="72">0<pos:position pos:line="60" pos:column="73"/></literal></expr></argument>,
                           <argument><expr><name pos:line="61" pos:column="28">conn<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="34"/></condition><then pos:line="61" pos:column="34"> <block pos:line="61" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">infof<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><name pos:line="62" pos:column="13">data<pos:position pos:line="62" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="19">"SSL: couldn't set callback argument!\n"<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="67" pos:column="3">/* OpenSSL contains code to work-around lots of bugs and flaws in various
     SSL-implementations. SSL_CTX_set_options() is used to enabled those
     work-arounds. The man page for this option states that SSL_OP_ALL enables
     all the work-arounds and that "It is usually safe to use SSL_OP_ALL to
     enable the bug workaround options if compatibility with somewhat broken
     implementations is desired."

  */</comment>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">SSL_CTX_set_options<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><name><name pos:line="75" pos:column="23">connssl<pos:position pos:line="75" pos:column="30"/></name><operator pos:line="75" pos:column="30">-&gt;<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="32">ctx<pos:position pos:line="75" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="37">SSL_OP_ALL<pos:position pos:line="75" pos:column="47"/></name></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="77" pos:column="3">/* disable SSLv2 in the default case (i.e. allow SSLv3 and TLSv1) */</comment>
  <if pos:line="78" pos:column="3">if<condition pos:line="78" pos:column="5">(<expr><name><name pos:line="78" pos:column="6">data<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">-&gt;<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="12">set<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">.<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="16">ssl<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">.<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">version<pos:position pos:line="78" pos:column="27"/></name></name> <operator pos:line="78" pos:column="28">==<pos:position pos:line="78" pos:column="30"/></operator> <name pos:line="78" pos:column="31">CURL_SSLVERSION_DEFAULT<pos:position pos:line="78" pos:column="54"/></name></expr>)<pos:position pos:line="78" pos:column="55"/></condition><then pos:line="78" pos:column="55">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="5">SSL_CTX_set_options<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><name><name pos:line="79" pos:column="25">connssl<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">-&gt;<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="34">ctx<pos:position pos:line="79" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="39">SSL_OP_NO_SSLv2<pos:position pos:line="79" pos:column="54"/></name></expr></argument>)<pos:position pos:line="79" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="56"/></expr_stmt></block></then></if>

<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if<pos:position pos:line="81" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="81" pos:column="5">0<pos:position pos:line="81" pos:column="6"/></literal></expr></cpp:if>
  <comment type="block" pos:line="82" pos:column="3">/*
   * Not sure it's needed to tell SSL_connect() that socket is
   * non-blocking. It doesn't seem to care, but just return with
   * SSL_ERROR_WANT_x.
   */</comment>
  if(data-&gt;state.used_interface == Curl_if_multi)
    SSL_CTX_ctrl(connssl-&gt;ctx, BIO_C_SET_NBIO, 1, NULL);
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">(<expr><name><name pos:line="91" pos:column="6">data<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">-&gt;<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="12">set<pos:position pos:line="91" pos:column="15"/></name><operator pos:line="91" pos:column="15">.<pos:position pos:line="91" pos:column="16"/></operator><name pos:line="91" pos:column="16">str<pos:position pos:line="91" pos:column="19"/></name><index pos:line="91" pos:column="19">[<expr><name pos:line="91" pos:column="20">STRING_CERT<pos:position pos:line="91" pos:column="31"/></name></expr>]<pos:position pos:line="91" pos:column="32"/></index></name></expr>)<pos:position pos:line="91" pos:column="33"/></condition><then pos:line="91" pos:column="33"> <block pos:line="91" pos:column="34">{
    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">(<expr><operator pos:line="92" pos:column="8">!<pos:position pos:line="92" pos:column="9"/></operator><call><name pos:line="92" pos:column="9">cert_stuff<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><name pos:line="92" pos:column="20">conn<pos:position pos:line="92" pos:column="24"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="93" pos:column="20">connssl<pos:position pos:line="93" pos:column="27"/></name><operator pos:line="93" pos:column="27">-&gt;<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="29">ctx<pos:position pos:line="93" pos:column="32"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="94" pos:column="20">data<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">-&gt;<pos:position pos:line="94" pos:column="29"/></operator><name pos:line="94" pos:column="26">set<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">.<pos:position pos:line="94" pos:column="30"/></operator><name pos:line="94" pos:column="30">str<pos:position pos:line="94" pos:column="33"/></name><index pos:line="94" pos:column="33">[<expr><name pos:line="94" pos:column="34">STRING_CERT<pos:position pos:line="94" pos:column="45"/></name></expr>]<pos:position pos:line="94" pos:column="46"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="95" pos:column="20">data<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">-&gt;<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="26">set<pos:position pos:line="95" pos:column="29"/></name><operator pos:line="95" pos:column="29">.<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="30">str<pos:position pos:line="95" pos:column="33"/></name><index pos:line="95" pos:column="33">[<expr><name pos:line="95" pos:column="34">STRING_CERT_TYPE<pos:position pos:line="95" pos:column="50"/></name></expr>]<pos:position pos:line="95" pos:column="51"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="96" pos:column="20">data<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">-&gt;<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="26">set<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">.<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="30">str<pos:position pos:line="96" pos:column="33"/></name><index pos:line="96" pos:column="33">[<expr><name pos:line="96" pos:column="34">STRING_KEY<pos:position pos:line="96" pos:column="44"/></name></expr>]<pos:position pos:line="96" pos:column="45"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="97" pos:column="20">data<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">-&gt;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="26">set<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">.<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="30">str<pos:position pos:line="97" pos:column="33"/></name><index pos:line="97" pos:column="33">[<expr><name pos:line="97" pos:column="34">STRING_KEY_TYPE<pos:position pos:line="97" pos:column="49"/></name></expr>]<pos:position pos:line="97" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="52"/></condition><then pos:line="97" pos:column="52"> <block pos:line="97" pos:column="53">{
      <comment type="block" pos:line="98" pos:column="7">/* failf() is already done in cert_stuff() */</comment>
      <return pos:line="99" pos:column="7">return <expr><name pos:line="99" pos:column="14">CURLE_SSL_CERTPROBLEM<pos:position pos:line="99" pos:column="35"/></name></expr>;<pos:position pos:line="99" pos:column="36"/></return>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
  }<pos:position pos:line="101" pos:column="4"/></block></then></if>

  <if pos:line="103" pos:column="3">if<condition pos:line="103" pos:column="5">(<expr><name><name pos:line="103" pos:column="6">data<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">set<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">.<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="16">str<pos:position pos:line="103" pos:column="19"/></name><index pos:line="103" pos:column="19">[<expr><name pos:line="103" pos:column="20">STRING_SSL_CIPHER_LIST<pos:position pos:line="103" pos:column="42"/></name></expr>]<pos:position pos:line="103" pos:column="43"/></index></name></expr>)<pos:position pos:line="103" pos:column="44"/></condition><then pos:line="103" pos:column="44"> <block pos:line="103" pos:column="45">{
    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><operator pos:line="104" pos:column="8">!<pos:position pos:line="104" pos:column="9"/></operator><call><name pos:line="104" pos:column="9">SSL_CTX_set_cipher_list<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name><name pos:line="104" pos:column="33">connssl<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">-&gt;<pos:position pos:line="104" pos:column="45"/></operator><name pos:line="104" pos:column="42">ctx<pos:position pos:line="104" pos:column="45"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="105" pos:column="33">data<pos:position pos:line="105" pos:column="37"/></name><operator pos:line="105" pos:column="37">-&gt;<pos:position pos:line="105" pos:column="42"/></operator><name pos:line="105" pos:column="39">set<pos:position pos:line="105" pos:column="42"/></name><operator pos:line="105" pos:column="42">.<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="43">str<pos:position pos:line="105" pos:column="46"/></name><index pos:line="105" pos:column="46">[<expr><name pos:line="105" pos:column="47">STRING_SSL_CIPHER_LIST<pos:position pos:line="105" pos:column="69"/></name></expr>]<pos:position pos:line="105" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="72"/></condition><then pos:line="105" pos:column="72"> <block pos:line="105" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">failf<pos:position pos:line="106" pos:column="12"/></name><argument_list pos:line="106" pos:column="12">(<argument><expr><name pos:line="106" pos:column="13">data<pos:position pos:line="106" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="19">"failed setting cipher list"<pos:position pos:line="106" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="49"/></expr_stmt>
      <return pos:line="107" pos:column="7">return <expr><name pos:line="107" pos:column="14">CURLE_SSL_CIPHER<pos:position pos:line="107" pos:column="30"/></name></expr>;<pos:position pos:line="107" pos:column="31"/></return>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>
  }<pos:position pos:line="109" pos:column="4"/></block></then></if>

  <if pos:line="111" pos:column="3">if<condition pos:line="111" pos:column="5">(<expr><name><name pos:line="111" pos:column="6">data<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">set<pos:position pos:line="111" pos:column="15"/></name><operator pos:line="111" pos:column="15">.<pos:position pos:line="111" pos:column="16"/></operator><name pos:line="111" pos:column="16">str<pos:position pos:line="111" pos:column="19"/></name><index pos:line="111" pos:column="19">[<expr><name pos:line="111" pos:column="20">STRING_SSL_CAFILE<pos:position pos:line="111" pos:column="37"/></name></expr>]<pos:position pos:line="111" pos:column="38"/></index></name> <operator pos:line="111" pos:column="39">||<pos:position pos:line="111" pos:column="41"/></operator> <name><name pos:line="111" pos:column="42">data<pos:position pos:line="111" pos:column="46"/></name><operator pos:line="111" pos:column="46">-&gt;<pos:position pos:line="111" pos:column="51"/></operator><name pos:line="111" pos:column="48">set<pos:position pos:line="111" pos:column="51"/></name><operator pos:line="111" pos:column="51">.<pos:position pos:line="111" pos:column="52"/></operator><name pos:line="111" pos:column="52">str<pos:position pos:line="111" pos:column="55"/></name><index pos:line="111" pos:column="55">[<expr><name pos:line="111" pos:column="56">STRING_SSL_CAPATH<pos:position pos:line="111" pos:column="73"/></name></expr>]<pos:position pos:line="111" pos:column="74"/></index></name></expr>)<pos:position pos:line="111" pos:column="75"/></condition><then pos:line="111" pos:column="75"> <block pos:line="111" pos:column="76">{
    <comment type="block" pos:line="112" pos:column="5">/* tell SSL where to find CA certificates that are used to verify
       the servers certificate. */</comment>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><operator pos:line="114" pos:column="8">!<pos:position pos:line="114" pos:column="9"/></operator><call><name pos:line="114" pos:column="9">SSL_CTX_load_verify_locations<pos:position pos:line="114" pos:column="38"/></name><argument_list pos:line="114" pos:column="38">(<argument><expr><name><name pos:line="114" pos:column="39">connssl<pos:position pos:line="114" pos:column="46"/></name><operator pos:line="114" pos:column="46">-&gt;<pos:position pos:line="114" pos:column="51"/></operator><name pos:line="114" pos:column="48">ctx<pos:position pos:line="114" pos:column="51"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="115" pos:column="40">data<pos:position pos:line="115" pos:column="44"/></name><operator pos:line="115" pos:column="44">-&gt;<pos:position pos:line="115" pos:column="49"/></operator><name pos:line="115" pos:column="46">set<pos:position pos:line="115" pos:column="49"/></name><operator pos:line="115" pos:column="49">.<pos:position pos:line="115" pos:column="50"/></operator><name pos:line="115" pos:column="50">str<pos:position pos:line="115" pos:column="53"/></name><index pos:line="115" pos:column="53">[<expr><name pos:line="115" pos:column="54">STRING_SSL_CAFILE<pos:position pos:line="115" pos:column="71"/></name></expr>]<pos:position pos:line="115" pos:column="72"/></index></name></expr></argument>,
                                       <argument><expr><name><name pos:line="116" pos:column="40">data<pos:position pos:line="116" pos:column="44"/></name><operator pos:line="116" pos:column="44">-&gt;<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="46">set<pos:position pos:line="116" pos:column="49"/></name><operator pos:line="116" pos:column="49">.<pos:position pos:line="116" pos:column="50"/></operator><name pos:line="116" pos:column="50">str<pos:position pos:line="116" pos:column="53"/></name><index pos:line="116" pos:column="53">[<expr><name pos:line="116" pos:column="54">STRING_SSL_CAPATH<pos:position pos:line="116" pos:column="71"/></name></expr>]<pos:position pos:line="116" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="116" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="74"/></condition><then pos:line="116" pos:column="74"> <block pos:line="116" pos:column="75">{
      <if pos:line="117" pos:column="7">if<condition pos:line="117" pos:column="9">(<expr><name><name pos:line="117" pos:column="10">data<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">-&gt;<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="16">set<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">.<pos:position pos:line="117" pos:column="20"/></operator><name pos:line="117" pos:column="20">ssl<pos:position pos:line="117" pos:column="23"/></name><operator pos:line="117" pos:column="23">.<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="24">verifypeer<pos:position pos:line="117" pos:column="34"/></name></name></expr>)<pos:position pos:line="117" pos:column="35"/></condition><then pos:line="117" pos:column="35"> <block pos:line="117" pos:column="36">{
        <comment type="block" pos:line="118" pos:column="9">/* Fail if we insist on successfully verifying the server. */</comment>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">failf<pos:position pos:line="119" pos:column="14"/></name><argument_list pos:line="119" pos:column="14">(<argument><expr><name pos:line="119" pos:column="15">data<pos:position pos:line="119" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="119" pos:column="20">"error setting certificate verify locations:\n"<pos:position pos:line="119" pos:column="67"/></literal>
              <literal type="string" pos:line="120" pos:column="15">"  CAfile: %s\n  CApath: %s\n"<pos:position pos:line="120" pos:column="45"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="121" pos:column="15">data<pos:position pos:line="121" pos:column="19"/></name><operator pos:line="121" pos:column="19">-&gt;<pos:position pos:line="121" pos:column="24"/></operator><name pos:line="121" pos:column="21">set<pos:position pos:line="121" pos:column="24"/></name><operator pos:line="121" pos:column="24">.<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="25">str<pos:position pos:line="121" pos:column="28"/></name><index pos:line="121" pos:column="28">[<expr><name pos:line="121" pos:column="29">STRING_SSL_CAFILE<pos:position pos:line="121" pos:column="46"/></name></expr>]<pos:position pos:line="121" pos:column="47"/></index></name></expr>?<pos:position pos:line="121" pos:column="48"/></condition><then pos:line="121" pos:column="48">
              <expr><name><name pos:line="122" pos:column="15">data<pos:position pos:line="122" pos:column="19"/></name><operator pos:line="122" pos:column="19">-&gt;<pos:position pos:line="122" pos:column="24"/></operator><name pos:line="122" pos:column="21">set<pos:position pos:line="122" pos:column="24"/></name><operator pos:line="122" pos:column="24">.<pos:position pos:line="122" pos:column="25"/></operator><name pos:line="122" pos:column="25">str<pos:position pos:line="122" pos:column="28"/></name><index pos:line="122" pos:column="28">[<expr><name pos:line="122" pos:column="29">STRING_SSL_CAFILE<pos:position pos:line="122" pos:column="46"/></name></expr>]<pos:position pos:line="122" pos:column="47"/></index></name></expr></then><else pos:line="122" pos:column="47">: <expr><literal type="string" pos:line="122" pos:column="49">"none"<pos:position pos:line="122" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="123" pos:column="15">data<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">-&gt;<pos:position pos:line="123" pos:column="24"/></operator><name pos:line="123" pos:column="21">set<pos:position pos:line="123" pos:column="24"/></name><operator pos:line="123" pos:column="24">.<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="25">str<pos:position pos:line="123" pos:column="28"/></name><index pos:line="123" pos:column="28">[<expr><name pos:line="123" pos:column="29">STRING_SSL_CAPATH<pos:position pos:line="123" pos:column="46"/></name></expr>]<pos:position pos:line="123" pos:column="47"/></index></name></expr>?<pos:position pos:line="123" pos:column="48"/></condition><then pos:line="123" pos:column="48">
              <expr><name><name pos:line="124" pos:column="15">data<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">-&gt;<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="21">set<pos:position pos:line="124" pos:column="24"/></name><operator pos:line="124" pos:column="24">.<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="25">str<pos:position pos:line="124" pos:column="28"/></name><index pos:line="124" pos:column="28">[<expr><name pos:line="124" pos:column="29">STRING_SSL_CAPATH<pos:position pos:line="124" pos:column="46"/></name></expr>]<pos:position pos:line="124" pos:column="47"/></index></name></expr> <pos:position pos:line="124" pos:column="48"/></then><else pos:line="124" pos:column="48">: <expr><literal type="string" pos:line="124" pos:column="50">"none"<pos:position pos:line="124" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="124" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="58"/></expr_stmt>
        <return pos:line="125" pos:column="9">return <expr><name pos:line="125" pos:column="16">CURLE_SSL_CACERT_BADFILE<pos:position pos:line="125" pos:column="40"/></name></expr>;<pos:position pos:line="125" pos:column="41"/></return>
      }<pos:position pos:line="126" pos:column="8"/></block></then>
      <else pos:line="127" pos:column="7">else <block pos:line="127" pos:column="12">{
        <comment type="block" pos:line="128" pos:column="9">/* Just continue with a warning if no strict  certificate verification
           is required. */</comment>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">infof<pos:position pos:line="130" pos:column="14"/></name><argument_list pos:line="130" pos:column="14">(<argument><expr><name pos:line="130" pos:column="15">data<pos:position pos:line="130" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="21">"error setting certificate verify locations,"<pos:position pos:line="130" pos:column="66"/></literal>
              <literal type="string" pos:line="131" pos:column="15">" continuing anyway:\n"<pos:position pos:line="131" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="132" pos:column="8"/></block></else></if>
    }<pos:position pos:line="133" pos:column="6"/></block></then>
    <else pos:line="134" pos:column="5">else <block pos:line="134" pos:column="10">{
      <comment type="block" pos:line="135" pos:column="7">/* Everything is fine. */</comment>
      <expr_stmt><expr><call><name pos:line="136" pos:column="7">infof<pos:position pos:line="136" pos:column="12"/></name><argument_list pos:line="136" pos:column="12">(<argument><expr><name pos:line="136" pos:column="13">data<pos:position pos:line="136" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="19">"successfully set certificate verify locations:\n"<pos:position pos:line="136" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">infof<pos:position pos:line="138" pos:column="10"/></name><argument_list pos:line="138" pos:column="10">(<argument><expr><name pos:line="138" pos:column="11">data<pos:position pos:line="138" pos:column="15"/></name></expr></argument>,
          <argument><expr><literal type="string" pos:line="139" pos:column="11">"  CAfile: %s\n"<pos:position pos:line="139" pos:column="27"/></literal>
          <literal type="string" pos:line="140" pos:column="11">"  CApath: %s\n"<pos:position pos:line="140" pos:column="27"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="141" pos:column="11">data<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">-&gt;<pos:position pos:line="141" pos:column="20"/></operator><name pos:line="141" pos:column="17">set<pos:position pos:line="141" pos:column="20"/></name><operator pos:line="141" pos:column="20">.<pos:position pos:line="141" pos:column="21"/></operator><name pos:line="141" pos:column="21">str<pos:position pos:line="141" pos:column="24"/></name><index pos:line="141" pos:column="24">[<expr><name pos:line="141" pos:column="25">STRING_SSL_CAFILE<pos:position pos:line="141" pos:column="42"/></name></expr>]<pos:position pos:line="141" pos:column="43"/></index></name></expr> ?<pos:position pos:line="141" pos:column="45"/></condition><then pos:line="141" pos:column="45"> <expr><name><name pos:line="141" pos:column="46">data<pos:position pos:line="141" pos:column="50"/></name><operator pos:line="141" pos:column="50">-&gt;<pos:position pos:line="141" pos:column="55"/></operator><name pos:line="141" pos:column="52">set<pos:position pos:line="141" pos:column="55"/></name><operator pos:line="141" pos:column="55">.<pos:position pos:line="141" pos:column="56"/></operator><name pos:line="141" pos:column="56">str<pos:position pos:line="141" pos:column="59"/></name><index pos:line="141" pos:column="59">[<expr><name pos:line="141" pos:column="60">STRING_SSL_CAFILE<pos:position pos:line="141" pos:column="77"/></name></expr>]<pos:position pos:line="141" pos:column="78"/></index></name></expr></then><else pos:line="141" pos:column="78">:
          <expr><literal type="string" pos:line="142" pos:column="11">"none"<pos:position pos:line="142" pos:column="17"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="143" pos:column="11">data<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">-&gt;<pos:position pos:line="143" pos:column="20"/></operator><name pos:line="143" pos:column="17">set<pos:position pos:line="143" pos:column="20"/></name><operator pos:line="143" pos:column="20">.<pos:position pos:line="143" pos:column="21"/></operator><name pos:line="143" pos:column="21">str<pos:position pos:line="143" pos:column="24"/></name><index pos:line="143" pos:column="24">[<expr><name pos:line="143" pos:column="25">STRING_SSL_CAPATH<pos:position pos:line="143" pos:column="42"/></name></expr>]<pos:position pos:line="143" pos:column="43"/></index></name></expr> ?<pos:position pos:line="143" pos:column="45"/></condition><then pos:line="143" pos:column="45"> <expr><name><name pos:line="143" pos:column="46">data<pos:position pos:line="143" pos:column="50"/></name><operator pos:line="143" pos:column="50">-&gt;<pos:position pos:line="143" pos:column="55"/></operator><name pos:line="143" pos:column="52">set<pos:position pos:line="143" pos:column="55"/></name><operator pos:line="143" pos:column="55">.<pos:position pos:line="143" pos:column="56"/></operator><name pos:line="143" pos:column="56">str<pos:position pos:line="143" pos:column="59"/></name><index pos:line="143" pos:column="59">[<expr><name pos:line="143" pos:column="60">STRING_SSL_CAPATH<pos:position pos:line="143" pos:column="77"/></name></expr>]<pos:position pos:line="143" pos:column="78"/></index></name></expr></then><else pos:line="143" pos:column="78">:
          <expr><literal type="string" pos:line="144" pos:column="11">"none"<pos:position pos:line="144" pos:column="17"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="144" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="145" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="146" pos:column="3">/* SSL always tries to verify the peer, this only says whether it should
   * fail to connect if the verification fails, or if it should continue
   * anyway. In the latter case the result of the verification is checked with
   * SSL_get_verify_result() below. */</comment>
  <expr_stmt><expr><call><name pos:line="150" pos:column="3">SSL_CTX_set_verify<pos:position pos:line="150" pos:column="21"/></name><argument_list pos:line="150" pos:column="21">(<argument><expr><name><name pos:line="150" pos:column="22">connssl<pos:position pos:line="150" pos:column="29"/></name><operator pos:line="150" pos:column="29">-&gt;<pos:position pos:line="150" pos:column="34"/></operator><name pos:line="150" pos:column="31">ctx<pos:position pos:line="150" pos:column="34"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="151" pos:column="22">data<pos:position pos:line="151" pos:column="26"/></name><operator pos:line="151" pos:column="26">-&gt;<pos:position pos:line="151" pos:column="31"/></operator><name pos:line="151" pos:column="28">set<pos:position pos:line="151" pos:column="31"/></name><operator pos:line="151" pos:column="31">.<pos:position pos:line="151" pos:column="32"/></operator><name pos:line="151" pos:column="32">ssl<pos:position pos:line="151" pos:column="35"/></name><operator pos:line="151" pos:column="35">.<pos:position pos:line="151" pos:column="36"/></operator><name pos:line="151" pos:column="36">verifypeer<pos:position pos:line="151" pos:column="46"/></name></name></expr>?<pos:position pos:line="151" pos:column="47"/></condition><then><expr><name pos:line="151" pos:column="47">SSL_VERIFY_PEER<pos:position pos:line="151" pos:column="62"/></name></expr></then><else pos:line="151" pos:column="62">:<expr><name pos:line="151" pos:column="63">SSL_VERIFY_NONE<pos:position pos:line="151" pos:column="78"/></name></expr></else></ternary></expr></argument>,
                     <argument><expr><name pos:line="152" pos:column="22">cert_verify_callback<pos:position pos:line="152" pos:column="42"/></name></expr></argument>)<pos:position pos:line="152" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="154" pos:column="3">/* give application a chance to interfere with SSL set up. */</comment>
  <if pos:line="155" pos:column="3">if<condition pos:line="155" pos:column="5">(<expr><name><name pos:line="155" pos:column="6">data<pos:position pos:line="155" pos:column="10"/></name><operator pos:line="155" pos:column="10">-&gt;<pos:position pos:line="155" pos:column="15"/></operator><name pos:line="155" pos:column="12">set<pos:position pos:line="155" pos:column="15"/></name><operator pos:line="155" pos:column="15">.<pos:position pos:line="155" pos:column="16"/></operator><name pos:line="155" pos:column="16">ssl<pos:position pos:line="155" pos:column="19"/></name><operator pos:line="155" pos:column="19">.<pos:position pos:line="155" pos:column="20"/></operator><name pos:line="155" pos:column="20">fsslctx<pos:position pos:line="155" pos:column="27"/></name></name></expr>)<pos:position pos:line="155" pos:column="28"/></condition><then pos:line="155" pos:column="28"> <block pos:line="155" pos:column="29">{
    <expr_stmt><expr><name pos:line="156" pos:column="5">retcode<pos:position pos:line="156" pos:column="12"/></name> <operator pos:line="156" pos:column="13">=<pos:position pos:line="156" pos:column="14"/></operator> <call pos:line="156" pos:column="15">(<modifier pos:line="156" pos:column="16">*<pos:position pos:line="156" pos:column="17"/></modifier><name><name pos:line="156" pos:column="17">data<pos:position pos:line="156" pos:column="21"/></name><operator pos:line="156" pos:column="21">-&gt;<pos:position pos:line="156" pos:column="26"/></operator><name pos:line="156" pos:column="23">set<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">.<pos:position pos:line="156" pos:column="27"/></operator><name pos:line="156" pos:column="27">ssl<pos:position pos:line="156" pos:column="30"/></name><operator pos:line="156" pos:column="30">.<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="31">fsslctx<pos:position pos:line="156" pos:column="38"/></name></name>)<argument_list pos:line="156" pos:column="39">(<argument><expr><name pos:line="156" pos:column="40">data<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="46">connssl<pos:position pos:line="156" pos:column="53"/></name><operator pos:line="156" pos:column="53">-&gt;<pos:position pos:line="156" pos:column="58"/></operator><name pos:line="156" pos:column="55">ctx<pos:position pos:line="156" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="157" pos:column="40">data<pos:position pos:line="157" pos:column="44"/></name><operator pos:line="157" pos:column="44">-&gt;<pos:position pos:line="157" pos:column="49"/></operator><name pos:line="157" pos:column="46">set<pos:position pos:line="157" pos:column="49"/></name><operator pos:line="157" pos:column="49">.<pos:position pos:line="157" pos:column="50"/></operator><name pos:line="157" pos:column="50">ssl<pos:position pos:line="157" pos:column="53"/></name><operator pos:line="157" pos:column="53">.<pos:position pos:line="157" pos:column="54"/></operator><name pos:line="157" pos:column="54">fsslctxp<pos:position pos:line="157" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="64"/></expr_stmt>
    <if pos:line="158" pos:column="5">if<condition pos:line="158" pos:column="7">(<expr><name pos:line="158" pos:column="8">retcode<pos:position pos:line="158" pos:column="15"/></name></expr>)<pos:position pos:line="158" pos:column="16"/></condition><then pos:line="158" pos:column="16"> <block pos:line="158" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="159" pos:column="7">failf<pos:position pos:line="159" pos:column="12"/></name><argument_list pos:line="159" pos:column="12">(<argument><expr><name pos:line="159" pos:column="13">data<pos:position pos:line="159" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="159" pos:column="18">"error signaled by ssl ctx callback"<pos:position pos:line="159" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="56"/></expr_stmt>
      <return pos:line="160" pos:column="7">return <expr><name pos:line="160" pos:column="14">retcode<pos:position pos:line="160" pos:column="21"/></name></expr>;<pos:position pos:line="160" pos:column="22"/></return>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>
  }<pos:position pos:line="162" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="164" pos:column="3">/* Lets make an SSL structure */</comment>
  <if pos:line="165" pos:column="3">if<condition pos:line="165" pos:column="5">(<expr><name><name pos:line="165" pos:column="6">connssl<pos:position pos:line="165" pos:column="13"/></name><operator pos:line="165" pos:column="13">-&gt;<pos:position pos:line="165" pos:column="18"/></operator><name pos:line="165" pos:column="15">handle<pos:position pos:line="165" pos:column="21"/></name></name></expr>)<pos:position pos:line="165" pos:column="22"/></condition><then pos:line="165" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="166" pos:column="5">SSL_free<pos:position pos:line="166" pos:column="13"/></name><argument_list pos:line="166" pos:column="13">(<argument><expr><name><name pos:line="166" pos:column="14">connssl<pos:position pos:line="166" pos:column="21"/></name><operator pos:line="166" pos:column="21">-&gt;<pos:position pos:line="166" pos:column="26"/></operator><name pos:line="166" pos:column="23">handle<pos:position pos:line="166" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="31"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="167" pos:column="3">connssl<pos:position pos:line="167" pos:column="10"/></name><operator pos:line="167" pos:column="10">-&gt;<pos:position pos:line="167" pos:column="15"/></operator><name pos:line="167" pos:column="12">handle<pos:position pos:line="167" pos:column="18"/></name></name> <operator pos:line="167" pos:column="19">=<pos:position pos:line="167" pos:column="20"/></operator> <call><name pos:line="167" pos:column="21">SSL_new<pos:position pos:line="167" pos:column="28"/></name><argument_list pos:line="167" pos:column="28">(<argument><expr><name><name pos:line="167" pos:column="29">connssl<pos:position pos:line="167" pos:column="36"/></name><operator pos:line="167" pos:column="36">-&gt;<pos:position pos:line="167" pos:column="41"/></operator><name pos:line="167" pos:column="38">ctx<pos:position pos:line="167" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="43"/></expr_stmt>
  <if pos:line="168" pos:column="3">if<condition pos:line="168" pos:column="5">(<expr><operator pos:line="168" pos:column="6">!<pos:position pos:line="168" pos:column="7"/></operator><name><name pos:line="168" pos:column="7">connssl<pos:position pos:line="168" pos:column="14"/></name><operator pos:line="168" pos:column="14">-&gt;<pos:position pos:line="168" pos:column="19"/></operator><name pos:line="168" pos:column="16">handle<pos:position pos:line="168" pos:column="22"/></name></name></expr>)<pos:position pos:line="168" pos:column="23"/></condition><then pos:line="168" pos:column="23"> <block pos:line="168" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="169" pos:column="5">failf<pos:position pos:line="169" pos:column="10"/></name><argument_list pos:line="169" pos:column="10">(<argument><expr><name pos:line="169" pos:column="11">data<pos:position pos:line="169" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="17">"SSL: couldn't create a context (handle)!"<pos:position pos:line="169" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="61"/></expr_stmt>
    <return pos:line="170" pos:column="5">return <expr><name pos:line="170" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="170" pos:column="31"/></name></expr>;<pos:position pos:line="170" pos:column="32"/></return>
  }<pos:position pos:line="171" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="172" pos:column="3">SSL_set_connect_state<pos:position pos:line="172" pos:column="24"/></name><argument_list pos:line="172" pos:column="24">(<argument><expr><name><name pos:line="172" pos:column="25">connssl<pos:position pos:line="172" pos:column="32"/></name><operator pos:line="172" pos:column="32">-&gt;<pos:position pos:line="172" pos:column="37"/></operator><name pos:line="172" pos:column="34">handle<pos:position pos:line="172" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="174" pos:column="3">connssl<pos:position pos:line="174" pos:column="10"/></name><operator pos:line="174" pos:column="10">-&gt;<pos:position pos:line="174" pos:column="15"/></operator><name pos:line="174" pos:column="12">server_cert<pos:position pos:line="174" pos:column="23"/></name></name> <operator pos:line="174" pos:column="24">=<pos:position pos:line="174" pos:column="25"/></operator> <literal type="number" pos:line="174" pos:column="26">0x0<pos:position pos:line="174" pos:column="29"/></literal></expr>;<pos:position pos:line="174" pos:column="30"/></expr_stmt>

<cpp:ifdef pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">ifdef<pos:position pos:line="176" pos:column="7"/></cpp:directive> <name pos:line="176" pos:column="8">SSL_CTRL_SET_TLSEXT_HOSTNAME<pos:position pos:line="176" pos:column="36"/></name></cpp:ifdef>
  <if pos:line="177" pos:column="3">if <condition pos:line="177" pos:column="6">(<expr><operator pos:line="177" pos:column="7">(<pos:position pos:line="177" pos:column="8"/></operator><literal type="number" pos:line="177" pos:column="8">0<pos:position pos:line="177" pos:column="9"/></literal> <operator pos:line="177" pos:column="10">==<pos:position pos:line="177" pos:column="12"/></operator> <call><name pos:line="177" pos:column="13">Curl_inet_pton<pos:position pos:line="177" pos:column="27"/></name><argument_list pos:line="177" pos:column="27">(<argument><expr><name pos:line="177" pos:column="28">AF_INET<pos:position pos:line="177" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="37">conn<pos:position pos:line="177" pos:column="41"/></name><operator pos:line="177" pos:column="41">-&gt;<pos:position pos:line="177" pos:column="46"/></operator><name pos:line="177" pos:column="43">host<pos:position pos:line="177" pos:column="47"/></name><operator pos:line="177" pos:column="47">.<pos:position pos:line="177" pos:column="48"/></operator><name pos:line="177" pos:column="48">name<pos:position pos:line="177" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="177" pos:column="54">&amp;<pos:position pos:line="177" pos:column="59"/></operator><name pos:line="177" pos:column="55">addr<pos:position pos:line="177" pos:column="59"/></name></expr></argument>)<pos:position pos:line="177" pos:column="60"/></argument_list></call><operator pos:line="177" pos:column="60">)<pos:position pos:line="177" pos:column="61"/></operator> <operator pos:line="177" pos:column="62">&amp;&amp;<pos:position pos:line="177" pos:column="72"/></operator>
<cpp:ifdef pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">ifdef<pos:position pos:line="178" pos:column="7"/></cpp:directive> <name pos:line="178" pos:column="8">ENABLE_IPV6<pos:position pos:line="178" pos:column="19"/></name></cpp:ifdef>
      <operator pos:line="179" pos:column="7">(<pos:position pos:line="179" pos:column="8"/></operator><literal type="number" pos:line="179" pos:column="8">0<pos:position pos:line="179" pos:column="9"/></literal> <operator pos:line="179" pos:column="10">==<pos:position pos:line="179" pos:column="12"/></operator> <call><name pos:line="179" pos:column="13">Curl_inet_pton<pos:position pos:line="179" pos:column="27"/></name><argument_list pos:line="179" pos:column="27">(<argument><expr><name pos:line="179" pos:column="28">AF_INET6<pos:position pos:line="179" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="179" pos:column="38">conn<pos:position pos:line="179" pos:column="42"/></name><operator pos:line="179" pos:column="42">-&gt;<pos:position pos:line="179" pos:column="47"/></operator><name pos:line="179" pos:column="44">host<pos:position pos:line="179" pos:column="48"/></name><operator pos:line="179" pos:column="48">.<pos:position pos:line="179" pos:column="49"/></operator><name pos:line="179" pos:column="49">name<pos:position pos:line="179" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="179" pos:column="55">&amp;<pos:position pos:line="179" pos:column="60"/></operator><name pos:line="179" pos:column="56">addr<pos:position pos:line="179" pos:column="60"/></name></expr></argument>)<pos:position pos:line="179" pos:column="61"/></argument_list></call><operator pos:line="179" pos:column="61">)<pos:position pos:line="179" pos:column="62"/></operator> <operator pos:line="179" pos:column="63">&amp;&amp;<pos:position pos:line="179" pos:column="73"/></operator>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif<pos:position pos:line="180" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="181" pos:column="7">!<pos:position pos:line="181" pos:column="8"/></operator><call><name pos:line="181" pos:column="8">SSL_set_tlsext_host_name<pos:position pos:line="181" pos:column="32"/></name><argument_list pos:line="181" pos:column="32">(<argument><expr><name><name pos:line="181" pos:column="33">connssl<pos:position pos:line="181" pos:column="40"/></name><operator pos:line="181" pos:column="40">-&gt;<pos:position pos:line="181" pos:column="45"/></operator><name pos:line="181" pos:column="42">handle<pos:position pos:line="181" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="50">conn<pos:position pos:line="181" pos:column="54"/></name><operator pos:line="181" pos:column="54">-&gt;<pos:position pos:line="181" pos:column="59"/></operator><name pos:line="181" pos:column="56">host<pos:position pos:line="181" pos:column="60"/></name><operator pos:line="181" pos:column="60">.<pos:position pos:line="181" pos:column="61"/></operator><name pos:line="181" pos:column="61">name<pos:position pos:line="181" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="67"/></condition><then pos:line="181" pos:column="67">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="182" pos:column="5">infof<pos:position pos:line="182" pos:column="10"/></name><argument_list pos:line="182" pos:column="10">(<argument><expr><name pos:line="182" pos:column="11">data<pos:position pos:line="182" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="17">"WARNING: failed to configure server name indication (SNI) "<pos:position pos:line="182" pos:column="77"/></literal>
          <literal type="string" pos:line="183" pos:column="11">"TLS extension\n"<pos:position pos:line="183" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="30"/></expr_stmt></block></then></if>
<cpp:endif pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">endif<pos:position pos:line="184" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="186" pos:column="3">/* Check if there's a cached ID we can/should use here! */</comment>
  <if pos:line="187" pos:column="3">if<condition pos:line="187" pos:column="5">(<expr><operator pos:line="187" pos:column="6">!<pos:position pos:line="187" pos:column="7"/></operator><call><name pos:line="187" pos:column="7">Curl_ssl_getsessionid<pos:position pos:line="187" pos:column="28"/></name><argument_list pos:line="187" pos:column="28">(<argument><expr><name pos:line="187" pos:column="29">conn<pos:position pos:line="187" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="187" pos:column="35">&amp;<pos:position pos:line="187" pos:column="40"/></operator><name pos:line="187" pos:column="36">ssl_sessionid<pos:position pos:line="187" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="51">NULL<pos:position pos:line="187" pos:column="55"/></name></expr></argument>)<pos:position pos:line="187" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="57"/></condition><then pos:line="187" pos:column="57"> <block pos:line="187" pos:column="58">{
    <comment type="block" pos:line="188" pos:column="5">/* we got a session id, use it! */</comment>
    <if pos:line="189" pos:column="5">if<condition pos:line="189" pos:column="7">(<expr><operator pos:line="189" pos:column="8">!<pos:position pos:line="189" pos:column="9"/></operator><call><name pos:line="189" pos:column="9">SSL_set_session<pos:position pos:line="189" pos:column="24"/></name><argument_list pos:line="189" pos:column="24">(<argument><expr><name><name pos:line="189" pos:column="25">connssl<pos:position pos:line="189" pos:column="32"/></name><operator pos:line="189" pos:column="32">-&gt;<pos:position pos:line="189" pos:column="37"/></operator><name pos:line="189" pos:column="34">handle<pos:position pos:line="189" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="42">ssl_sessionid<pos:position pos:line="189" pos:column="55"/></name></expr></argument>)<pos:position pos:line="189" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="189" pos:column="57"/></condition><then pos:line="189" pos:column="57"> <block pos:line="189" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="190" pos:column="7">failf<pos:position pos:line="190" pos:column="12"/></name><argument_list pos:line="190" pos:column="12">(<argument><expr><name pos:line="190" pos:column="13">data<pos:position pos:line="190" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="19">"SSL: SSL_set_session failed: %s"<pos:position pos:line="190" pos:column="52"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="191" pos:column="13">ERR_error_string<pos:position pos:line="191" pos:column="29"/></name><argument_list pos:line="191" pos:column="29">(<argument><expr><call><name pos:line="191" pos:column="30">ERR_get_error<pos:position pos:line="191" pos:column="43"/></name><argument_list pos:line="191" pos:column="43">()<pos:position pos:line="191" pos:column="45"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="191" pos:column="46">NULL<pos:position pos:line="191" pos:column="50"/></name></expr></argument>)<pos:position pos:line="191" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="191" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="53"/></expr_stmt>
      <return pos:line="192" pos:column="7">return <expr><name pos:line="192" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="192" pos:column="37"/></name></expr>;<pos:position pos:line="192" pos:column="38"/></return>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="194" pos:column="5">/* Informational message */</comment>
    <expr_stmt><expr><call><name pos:line="195" pos:column="5">infof<pos:position pos:line="195" pos:column="10"/></name> <argument_list pos:line="195" pos:column="11">(<argument><expr><name pos:line="195" pos:column="12">data<pos:position pos:line="195" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="18">"SSL re-using session ID\n"<pos:position pos:line="195" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="196" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="198" pos:column="3">/* pass the raw socket into the SSL layers */</comment>
  <if pos:line="199" pos:column="3">if<condition pos:line="199" pos:column="5">(<expr><operator pos:line="199" pos:column="6">!<pos:position pos:line="199" pos:column="7"/></operator><call><name pos:line="199" pos:column="7">SSL_set_fd<pos:position pos:line="199" pos:column="17"/></name><argument_list pos:line="199" pos:column="17">(<argument><expr><name><name pos:line="199" pos:column="18">connssl<pos:position pos:line="199" pos:column="25"/></name><operator pos:line="199" pos:column="25">-&gt;<pos:position pos:line="199" pos:column="30"/></operator><name pos:line="199" pos:column="27">handle<pos:position pos:line="199" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="35">sockfd<pos:position pos:line="199" pos:column="41"/></name></expr></argument>)<pos:position pos:line="199" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="199" pos:column="43"/></condition><then pos:line="199" pos:column="43"> <block pos:line="199" pos:column="44">{
     <expr_stmt><expr><call><name pos:line="200" pos:column="6">failf<pos:position pos:line="200" pos:column="11"/></name><argument_list pos:line="200" pos:column="11">(<argument><expr><name pos:line="200" pos:column="12">data<pos:position pos:line="200" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="18">"SSL: SSL_set_fd failed: %s"<pos:position pos:line="200" pos:column="46"/></literal></expr></argument>,
           <argument><expr><call><name pos:line="201" pos:column="12">ERR_error_string<pos:position pos:line="201" pos:column="28"/></name><argument_list pos:line="201" pos:column="28">(<argument><expr><call><name pos:line="201" pos:column="29">ERR_get_error<pos:position pos:line="201" pos:column="42"/></name><argument_list pos:line="201" pos:column="42">()<pos:position pos:line="201" pos:column="44"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="201" pos:column="45">NULL<pos:position pos:line="201" pos:column="49"/></name></expr></argument>)<pos:position pos:line="201" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="201" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="52"/></expr_stmt>
     <return pos:line="202" pos:column="6">return <expr><name pos:line="202" pos:column="13">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="202" pos:column="36"/></name></expr>;<pos:position pos:line="202" pos:column="37"/></return>
  }<pos:position pos:line="203" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="205" pos:column="3">connssl<pos:position pos:line="205" pos:column="10"/></name><operator pos:line="205" pos:column="10">-&gt;<pos:position pos:line="205" pos:column="15"/></operator><name pos:line="205" pos:column="12">connecting_state<pos:position pos:line="205" pos:column="28"/></name></name> <operator pos:line="205" pos:column="29">=<pos:position pos:line="205" pos:column="30"/></operator> <name pos:line="205" pos:column="31">ssl_connect_2<pos:position pos:line="205" pos:column="44"/></name></expr>;<pos:position pos:line="205" pos:column="45"/></expr_stmt>
  <return pos:line="206" pos:column="3">return <expr><name pos:line="206" pos:column="10">CURLE_OK<pos:position pos:line="206" pos:column="18"/></name></expr>;<pos:position pos:line="206" pos:column="19"/></return>
}<pos:position pos:line="207" pos:column="2"/></block></function></unit>

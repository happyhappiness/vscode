<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_74_curl-7.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">max5data<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">double<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">bytes<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">max5<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:define pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">define<pos:position pos:line="3" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="3" pos:column="9">ONE_KILOBYTE<pos:position pos:line="3" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="3" pos:column="22">1024<pos:position pos:line="3" pos:column="26"/></cpp:value></cpp:define>
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">ONE_MEGABYTE<pos:position pos:line="4" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="22">(1024*1024)<pos:position pos:line="4" pos:column="33"/></cpp:value></cpp:define>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">bytes<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="14">100000<pos:position pos:line="6" pos:column="20"/></literal></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> <block pos:line="6" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">sprintf<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">max5<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"%5d"<pos:position pos:line="7" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="26">(<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">int<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">bytes<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">max5<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">bytes<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">&lt;<pos:position pos:line="10" pos:column="16"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="15">9999<pos:position pos:line="10" pos:column="19"/></literal><operator pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">ONE_KILOBYTE<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">sprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">max5<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"%4dk"<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">int<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">bytes<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">/<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">ONE_KILOBYTE<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">max5<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">bytes<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">&lt;<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><literal type="number" pos:line="14" pos:column="15">100<pos:position pos:line="14" pos:column="18"/></literal><operator pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">ONE_MEGABYTE<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
    <comment type="block" pos:line="15" pos:column="5">/* 'XX.XM' is good as long as we're less than 100 megs */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">sprintf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">max5<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"%2.1fM"<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">bytes<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">/<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">ONE_MEGABYTE<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">max5<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sprintf<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">max5<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="17">"%4dM"<pos:position pos:line="19" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">int<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">)<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">bytes<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">/<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">ONE_MEGABYTE<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">max5<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

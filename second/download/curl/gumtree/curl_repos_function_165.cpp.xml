<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_165.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">telrcv<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name><name pos:line="1" pos:column="13">struct<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">UrlData<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">data<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>,
	    <parameter><decl><type><name pos:line="2" pos:column="13">unsigned<pos:position pos:line="2" pos:column="21"/></name> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">inbuf<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,	<comment type="block" pos:line="2" pos:column="41">/* Data received from socket */</comment>
	    <parameter><decl><type><name pos:line="3" pos:column="13">int<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">count<pos:position pos:line="3" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="23"/></parameter_list>			<comment type="block" pos:line="3" pos:column="41">/* Number of bytes received */</comment>
<block pos:line="4" pos:column="1">{
   <decl_stmt><decl><type><name pos:line="5" pos:column="4">unsigned<pos:position pos:line="5" pos:column="12"/></name> <name pos:line="5" pos:column="13">char<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">c<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
   <decl_stmt><decl><type><name pos:line="6" pos:column="4">int<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">index<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

   <while pos:line="8" pos:column="4">while<condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">count<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">--<pos:position pos:line="8" pos:column="17"/></operator></expr>)<pos:position pos:line="8" pos:column="18"/></condition>
   <block pos:line="9" pos:column="4">{
      <expr_stmt><expr><name pos:line="10" pos:column="7">c<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name><name pos:line="10" pos:column="11">inbuf<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><name pos:line="10" pos:column="17">index<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">++<pos:position pos:line="10" pos:column="24"/></operator></expr>]<pos:position pos:line="10" pos:column="25"/></index></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

      <switch pos:line="12" pos:column="7">switch <condition pos:line="12" pos:column="14">(<expr><name pos:line="12" pos:column="15">telrcv_state<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition>
      <block pos:line="13" pos:column="7">{
      <case pos:line="14" pos:column="7">case <expr><name pos:line="14" pos:column="12">TS_CR<pos:position pos:line="14" pos:column="17"/></name></expr>:<pos:position pos:line="14" pos:column="18"/></case>
	 <expr_stmt><expr><name pos:line="15" pos:column="10">telrcv_state<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">TS_DATA<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	 <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><name pos:line="16" pos:column="14">c<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <literal type="char" pos:line="16" pos:column="19">'\0'<pos:position pos:line="16" pos:column="23"/></literal></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
	 <block pos:line="17" pos:column="10">{
	    <break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break>   <comment type="block" pos:line="18" pos:column="22">/* Ignore \0 after CR */</comment>
	 }<pos:position pos:line="19" pos:column="11"/></block></then></if>
	 
	 <expr_stmt><expr><call><name><name pos:line="21" pos:column="10">data<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">fwrite<pos:position pos:line="21" pos:column="22"/></name></name><argument_list pos:line="21" pos:column="22">(<argument><expr><operator pos:line="21" pos:column="23">(<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">char<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">*<pos:position pos:line="21" pos:column="30"/></operator><operator pos:line="21" pos:column="30">)<pos:position pos:line="21" pos:column="31"/></operator><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">c<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="35">1<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="38">1<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="41">data<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">out<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
	 <continue pos:line="22" pos:column="10">continue;<pos:position pos:line="22" pos:column="19"/></continue>

      <case pos:line="24" pos:column="7">case <expr><name pos:line="24" pos:column="12">TS_DATA<pos:position pos:line="24" pos:column="19"/></name></expr>:<pos:position pos:line="24" pos:column="20"/></case>
	 <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><name pos:line="25" pos:column="14">c<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">IAC<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
	 <block pos:line="26" pos:column="10">{
	    <expr_stmt><expr><name pos:line="27" pos:column="13">telrcv_state<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="28">TS_IAC<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
	    <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>
	 }<pos:position pos:line="29" pos:column="11"/></block></then>
	 <elseif pos:line="30" pos:column="10">else <if pos:line="30" pos:column="15">if<condition pos:line="30" pos:column="17">(<expr><name pos:line="30" pos:column="18">c<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <literal type="char" pos:line="30" pos:column="23">'\r'<pos:position pos:line="30" pos:column="27"/></literal></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
	 <block pos:line="31" pos:column="10">{
	    <expr_stmt><expr><name pos:line="32" pos:column="13">telrcv_state<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">TS_CR<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
	 }<pos:position pos:line="33" pos:column="11"/></block></then></if></elseif></if>

	 <expr_stmt><expr><call><name><name pos:line="35" pos:column="10">data<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">fwrite<pos:position pos:line="35" pos:column="22"/></name></name><argument_list pos:line="35" pos:column="22">(<argument><expr><operator pos:line="35" pos:column="23">(<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">char<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">*<pos:position pos:line="35" pos:column="30"/></operator><operator pos:line="35" pos:column="30">)<pos:position pos:line="35" pos:column="31"/></operator><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">c<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="35">1<pos:position pos:line="35" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="41">data<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">out<pos:position pos:line="35" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
	 <continue pos:line="36" pos:column="10">continue;<pos:position pos:line="36" pos:column="19"/></continue>

      <case pos:line="38" pos:column="7">case <expr><name pos:line="38" pos:column="12">TS_IAC<pos:position pos:line="38" pos:column="18"/></name></expr>:<pos:position pos:line="38" pos:column="19"/></case>
	<label><name pos:line="39" pos:column="9">process_iac<pos:position pos:line="39" pos:column="20"/></name>:<pos:position pos:line="39" pos:column="21"/></label>
	<switch pos:line="40" pos:column="9">switch <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">c<pos:position pos:line="40" pos:column="18"/></name></expr>)<pos:position pos:line="40" pos:column="19"/></condition>
	<block pos:line="41" pos:column="9">{
	<case pos:line="42" pos:column="9">case <expr><name pos:line="42" pos:column="14">WILL<pos:position pos:line="42" pos:column="18"/></name></expr>:<pos:position pos:line="42" pos:column="19"/></case>
	   <expr_stmt><expr><name pos:line="43" pos:column="12">telrcv_state<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">TS_WILL<pos:position pos:line="43" pos:column="34"/></name></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	   <continue pos:line="44" pos:column="12">continue;<pos:position pos:line="44" pos:column="21"/></continue>
	<case pos:line="45" pos:column="9">case <expr><name pos:line="45" pos:column="14">WONT<pos:position pos:line="45" pos:column="18"/></name></expr>:<pos:position pos:line="45" pos:column="19"/></case>
	   <expr_stmt><expr><name pos:line="46" pos:column="12">telrcv_state<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">TS_WONT<pos:position pos:line="46" pos:column="34"/></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
	   <continue pos:line="47" pos:column="12">continue;<pos:position pos:line="47" pos:column="21"/></continue>
	<case pos:line="48" pos:column="9">case <expr><name pos:line="48" pos:column="14">DO<pos:position pos:line="48" pos:column="16"/></name></expr>:<pos:position pos:line="48" pos:column="17"/></case>
	   <expr_stmt><expr><name pos:line="49" pos:column="12">telrcv_state<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">TS_DO<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
	   <continue pos:line="50" pos:column="12">continue;<pos:position pos:line="50" pos:column="21"/></continue>
	<case pos:line="51" pos:column="9">case <expr><name pos:line="51" pos:column="14">DONT<pos:position pos:line="51" pos:column="18"/></name></expr>:<pos:position pos:line="51" pos:column="19"/></case>
	   <expr_stmt><expr><name pos:line="52" pos:column="12">telrcv_state<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">TS_DONT<pos:position pos:line="52" pos:column="34"/></name></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
	   <continue pos:line="53" pos:column="12">continue;<pos:position pos:line="53" pos:column="21"/></continue>
	<case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">SB<pos:position pos:line="54" pos:column="16"/></name></expr>:<pos:position pos:line="54" pos:column="17"/></case>
	   <expr_stmt><expr><call><name pos:line="55" pos:column="12">SB_CLEAR<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">()<pos:position pos:line="55" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
	   <expr_stmt><expr><name pos:line="56" pos:column="12">telrcv_state<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">=<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">TS_SB<pos:position pos:line="56" pos:column="32"/></name></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>
	   <continue pos:line="57" pos:column="12">continue;<pos:position pos:line="57" pos:column="21"/></continue>
	<case pos:line="58" pos:column="9">case <expr><name pos:line="58" pos:column="14">IAC<pos:position pos:line="58" pos:column="17"/></name></expr>:<pos:position pos:line="58" pos:column="18"/></case>
	   <expr_stmt><expr><call><name><name pos:line="59" pos:column="12">data<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">fwrite<pos:position pos:line="59" pos:column="24"/></name></name><argument_list pos:line="59" pos:column="24">(<argument><expr><operator pos:line="59" pos:column="25">(<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">char<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">*<pos:position pos:line="59" pos:column="32"/></operator><operator pos:line="59" pos:column="32">)<pos:position pos:line="59" pos:column="33"/></operator><operator pos:line="59" pos:column="33">&amp;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="34">c<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="37">1<pos:position pos:line="59" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="40">1<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="43">data<pos:position pos:line="59" pos:column="47"/></name><operator pos:line="59" pos:column="47">-&gt;<pos:position pos:line="59" pos:column="52"/></operator><name pos:line="59" pos:column="49">out<pos:position pos:line="59" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
	   <break pos:line="60" pos:column="12">break;<pos:position pos:line="60" pos:column="18"/></break>
	<case pos:line="61" pos:column="9">case <expr><name pos:line="61" pos:column="14">DM<pos:position pos:line="61" pos:column="16"/></name></expr>:<pos:position pos:line="61" pos:column="17"/></case>
	<case pos:line="62" pos:column="9">case <expr><name pos:line="62" pos:column="14">NOP<pos:position pos:line="62" pos:column="17"/></name></expr>:<pos:position pos:line="62" pos:column="18"/></case>
	<case pos:line="63" pos:column="9">case <expr><name pos:line="63" pos:column="14">GA<pos:position pos:line="63" pos:column="16"/></name></expr>:<pos:position pos:line="63" pos:column="17"/></case>
	<default pos:line="64" pos:column="9">default:<pos:position pos:line="64" pos:column="17"/></default>
	   <expr_stmt><expr><call><name pos:line="65" pos:column="12">printoption<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">data<pos:position pos:line="65" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="30">"RCVD"<pos:position pos:line="65" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">IAC<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">c<pos:position pos:line="65" pos:column="44"/></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
	   <break pos:line="66" pos:column="12">break;<pos:position pos:line="66" pos:column="18"/></break>
	}<pos:position pos:line="67" pos:column="10"/></block></switch>
	<expr_stmt><expr><name pos:line="68" pos:column="9">telrcv_state<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="24">TS_DATA<pos:position pos:line="68" pos:column="31"/></name></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
	<continue pos:line="69" pos:column="9">continue;<pos:position pos:line="69" pos:column="18"/></continue>

      <case pos:line="71" pos:column="7">case <expr><name pos:line="71" pos:column="12">TS_WILL<pos:position pos:line="71" pos:column="19"/></name></expr>:<pos:position pos:line="71" pos:column="20"/></case>
	 <expr_stmt><expr><call><name pos:line="72" pos:column="10">printoption<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">data<pos:position pos:line="72" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="28">"RCVD"<pos:position pos:line="72" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">WILL<pos:position pos:line="72" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="42">c<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
	 <expr_stmt><expr><call><name pos:line="73" pos:column="10">rec_will<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">data<pos:position pos:line="73" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="25">c<pos:position pos:line="73" pos:column="26"/></name></expr></argument>)<pos:position pos:line="73" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
	 <expr_stmt><expr><name pos:line="74" pos:column="10">telrcv_state<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="25">TS_DATA<pos:position pos:line="74" pos:column="32"/></name></expr>;<pos:position pos:line="74" pos:column="33"/></expr_stmt>
	 <continue pos:line="75" pos:column="10">continue;<pos:position pos:line="75" pos:column="19"/></continue>
      
      <case pos:line="77" pos:column="7">case <expr><name pos:line="77" pos:column="12">TS_WONT<pos:position pos:line="77" pos:column="19"/></name></expr>:<pos:position pos:line="77" pos:column="20"/></case>
	 <expr_stmt><expr><call><name pos:line="78" pos:column="10">printoption<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">data<pos:position pos:line="78" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="28">"RCVD"<pos:position pos:line="78" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="36">WONT<pos:position pos:line="78" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="42">c<pos:position pos:line="78" pos:column="43"/></name></expr></argument>)<pos:position pos:line="78" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="45"/></expr_stmt>
	 <expr_stmt><expr><call><name pos:line="79" pos:column="10">rec_wont<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name pos:line="79" pos:column="19">data<pos:position pos:line="79" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="25">c<pos:position pos:line="79" pos:column="26"/></name></expr></argument>)<pos:position pos:line="79" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt>
	 <expr_stmt><expr><name pos:line="80" pos:column="10">telrcv_state<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator> <name pos:line="80" pos:column="25">TS_DATA<pos:position pos:line="80" pos:column="32"/></name></expr>;<pos:position pos:line="80" pos:column="33"/></expr_stmt>
	 <continue pos:line="81" pos:column="10">continue;<pos:position pos:line="81" pos:column="19"/></continue>
      
      <case pos:line="83" pos:column="7">case <expr><name pos:line="83" pos:column="12">TS_DO<pos:position pos:line="83" pos:column="17"/></name></expr>:<pos:position pos:line="83" pos:column="18"/></case>
	 <expr_stmt><expr><call><name pos:line="84" pos:column="10">printoption<pos:position pos:line="84" pos:column="21"/></name><argument_list pos:line="84" pos:column="21">(<argument><expr><name pos:line="84" pos:column="22">data<pos:position pos:line="84" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="28">"RCVD"<pos:position pos:line="84" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="36">DO<pos:position pos:line="84" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="40">c<pos:position pos:line="84" pos:column="41"/></name></expr></argument>)<pos:position pos:line="84" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="43"/></expr_stmt>
	 <expr_stmt><expr><call><name pos:line="85" pos:column="10">rec_do<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><name pos:line="85" pos:column="17">data<pos:position pos:line="85" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="23">c<pos:position pos:line="85" pos:column="24"/></name></expr></argument>)<pos:position pos:line="85" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
	 <expr_stmt><expr><name pos:line="86" pos:column="10">telrcv_state<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <name pos:line="86" pos:column="25">TS_DATA<pos:position pos:line="86" pos:column="32"/></name></expr>;<pos:position pos:line="86" pos:column="33"/></expr_stmt>
	 <continue pos:line="87" pos:column="10">continue;<pos:position pos:line="87" pos:column="19"/></continue>
      
      <case pos:line="89" pos:column="7">case <expr><name pos:line="89" pos:column="12">TS_DONT<pos:position pos:line="89" pos:column="19"/></name></expr>:<pos:position pos:line="89" pos:column="20"/></case>
	 <expr_stmt><expr><call><name pos:line="90" pos:column="10">printoption<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><name pos:line="90" pos:column="22">data<pos:position pos:line="90" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="28">"RCVD"<pos:position pos:line="90" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="36">DONT<pos:position pos:line="90" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="42">c<pos:position pos:line="90" pos:column="43"/></name></expr></argument>)<pos:position pos:line="90" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt>
	 <expr_stmt><expr><call><name pos:line="91" pos:column="10">rec_dont<pos:position pos:line="91" pos:column="18"/></name><argument_list pos:line="91" pos:column="18">(<argument><expr><name pos:line="91" pos:column="19">data<pos:position pos:line="91" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="25">c<pos:position pos:line="91" pos:column="26"/></name></expr></argument>)<pos:position pos:line="91" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
	 <expr_stmt><expr><name pos:line="92" pos:column="10">telrcv_state<pos:position pos:line="92" pos:column="22"/></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <name pos:line="92" pos:column="25">TS_DATA<pos:position pos:line="92" pos:column="32"/></name></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt>
	 <continue pos:line="93" pos:column="10">continue;<pos:position pos:line="93" pos:column="19"/></continue>

      <case pos:line="95" pos:column="7">case <expr><name pos:line="95" pos:column="12">TS_SB<pos:position pos:line="95" pos:column="17"/></name></expr>:<pos:position pos:line="95" pos:column="18"/></case>
	 <if pos:line="96" pos:column="10">if <condition pos:line="96" pos:column="13">(<expr><name pos:line="96" pos:column="14">c<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">==<pos:position pos:line="96" pos:column="18"/></operator> <name pos:line="96" pos:column="19">IAC<pos:position pos:line="96" pos:column="22"/></name></expr>)<pos:position pos:line="96" pos:column="23"/></condition><then pos:line="96" pos:column="23">
	 <block pos:line="97" pos:column="10">{
	    <expr_stmt><expr><name pos:line="98" pos:column="13">telrcv_state<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">=<pos:position pos:line="98" pos:column="27"/></operator> <name pos:line="98" pos:column="28">TS_SE<pos:position pos:line="98" pos:column="33"/></name></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt>
	 }<pos:position pos:line="99" pos:column="11"/></block></then>
	 <else pos:line="100" pos:column="10">else
	 <block pos:line="101" pos:column="10">{
	    <expr_stmt><expr><call><name pos:line="102" pos:column="13">SB_ACCUM<pos:position pos:line="102" pos:column="21"/></name><argument_list pos:line="102" pos:column="21">(<argument><expr><name pos:line="102" pos:column="22">c<pos:position pos:line="102" pos:column="23"/></name></expr></argument>)<pos:position pos:line="102" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt>
	 }<pos:position pos:line="103" pos:column="11"/></block></else></if>
	 <continue pos:line="104" pos:column="10">continue;<pos:position pos:line="104" pos:column="19"/></continue>

      <case pos:line="106" pos:column="7">case <expr><name pos:line="106" pos:column="12">TS_SE<pos:position pos:line="106" pos:column="17"/></name></expr>:<pos:position pos:line="106" pos:column="18"/></case>
	 <if pos:line="107" pos:column="10">if <condition pos:line="107" pos:column="13">(<expr><name pos:line="107" pos:column="14">c<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">!=<pos:position pos:line="107" pos:column="18"/></operator> <name pos:line="107" pos:column="19">SE<pos:position pos:line="107" pos:column="21"/></name></expr>)<pos:position pos:line="107" pos:column="22"/></condition><then pos:line="107" pos:column="22">
	 <block pos:line="108" pos:column="10">{
	    <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><name pos:line="109" pos:column="17">c<pos:position pos:line="109" pos:column="18"/></name> <operator pos:line="109" pos:column="19">!=<pos:position pos:line="109" pos:column="21"/></operator> <name pos:line="109" pos:column="22">IAC<pos:position pos:line="109" pos:column="25"/></name></expr>)<pos:position pos:line="109" pos:column="26"/></condition><then pos:line="109" pos:column="26">
	    <block pos:line="110" pos:column="13">{
	       <comment type="block" pos:line="111" pos:column="16">/*
		* This is an error.  We only expect to get
		* "IAC IAC" or "IAC SE".  Several things may
		* have happend.  An IAC was not doubled, the
		* IAC SE was left off, or another option got
		* inserted into the suboption are all possibilities.
		* If we assume that the IAC was not doubled,
		* and really the IAC SE was left off, we could
		* get into an infinate loop here.  So, instead,
		* we terminate the suboption, and process the
		* partial suboption if we can.
		*/</comment>
	       <expr_stmt><expr><call><name pos:line="123" pos:column="16">SB_ACCUM<pos:position pos:line="123" pos:column="24"/></name><argument_list pos:line="123" pos:column="24">(<argument><expr><operator pos:line="123" pos:column="25">(<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="26">unsigned<pos:position pos:line="123" pos:column="34"/></name> <name pos:line="123" pos:column="35">char<pos:position pos:line="123" pos:column="39"/></name><operator pos:line="123" pos:column="39">)<pos:position pos:line="123" pos:column="40"/></operator><name pos:line="123" pos:column="40">IAC<pos:position pos:line="123" pos:column="43"/></name></expr></argument>)<pos:position pos:line="123" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="45"/></expr_stmt>
	       <expr_stmt><expr><call><name pos:line="124" pos:column="16">SB_ACCUM<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">c<pos:position pos:line="124" pos:column="26"/></name></expr></argument>)<pos:position pos:line="124" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="28"/></expr_stmt>
	       <expr_stmt><expr><name pos:line="125" pos:column="16">subpointer<pos:position pos:line="125" pos:column="26"/></name> <operator pos:line="125" pos:column="27">-=<pos:position pos:line="125" pos:column="29"/></operator> <literal type="number" pos:line="125" pos:column="30">2<pos:position pos:line="125" pos:column="31"/></literal></expr>;<pos:position pos:line="125" pos:column="32"/></expr_stmt>
	       <expr_stmt><expr><call><name pos:line="126" pos:column="16">SB_TERM<pos:position pos:line="126" pos:column="23"/></name><argument_list pos:line="126" pos:column="23">()<pos:position pos:line="126" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="26"/></expr_stmt>
	    
	       <expr_stmt><expr><call><name pos:line="128" pos:column="16">printoption<pos:position pos:line="128" pos:column="27"/></name><argument_list pos:line="128" pos:column="27">(<argument><expr><name pos:line="128" pos:column="28">data<pos:position pos:line="128" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="34">"In SUBOPTION processing, RCVD"<pos:position pos:line="128" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="67">IAC<pos:position pos:line="128" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="72">c<pos:position pos:line="128" pos:column="73"/></name></expr></argument>)<pos:position pos:line="128" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="75"/></expr_stmt>
	       <expr_stmt><expr><call><name pos:line="129" pos:column="16">suboption<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">data<pos:position pos:line="129" pos:column="30"/></name></expr></argument>)<pos:position pos:line="129" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="32"/></expr_stmt>   <comment type="block" pos:line="129" pos:column="35">/* handle sub-option */</comment>
	       <expr_stmt><expr><name pos:line="130" pos:column="16">telrcv_state<pos:position pos:line="130" pos:column="28"/></name> <operator pos:line="130" pos:column="29">=<pos:position pos:line="130" pos:column="30"/></operator> <name pos:line="130" pos:column="31">TS_IAC<pos:position pos:line="130" pos:column="37"/></name></expr>;<pos:position pos:line="130" pos:column="38"/></expr_stmt>
	       <goto pos:line="131" pos:column="16">goto <name pos:line="131" pos:column="21">process_iac<pos:position pos:line="131" pos:column="32"/></name>;<pos:position pos:line="131" pos:column="33"/></goto>
	    }<pos:position pos:line="132" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><call><name pos:line="133" pos:column="13">SB_ACCUM<pos:position pos:line="133" pos:column="21"/></name><argument_list pos:line="133" pos:column="21">(<argument><expr><name pos:line="133" pos:column="22">c<pos:position pos:line="133" pos:column="23"/></name></expr></argument>)<pos:position pos:line="133" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="134" pos:column="13">telrcv_state<pos:position pos:line="134" pos:column="25"/></name> <operator pos:line="134" pos:column="26">=<pos:position pos:line="134" pos:column="27"/></operator> <name pos:line="134" pos:column="28">TS_SB<pos:position pos:line="134" pos:column="33"/></name></expr>;<pos:position pos:line="134" pos:column="34"/></expr_stmt>
	 }<pos:position pos:line="135" pos:column="11"/></block></then>
	 <else pos:line="136" pos:column="10">else
	 <block pos:line="137" pos:column="10">{
	    <expr_stmt><expr><call><name pos:line="138" pos:column="13">SB_ACCUM<pos:position pos:line="138" pos:column="21"/></name><argument_list pos:line="138" pos:column="21">(<argument><expr><operator pos:line="138" pos:column="22">(<pos:position pos:line="138" pos:column="23"/></operator><name pos:line="138" pos:column="23">unsigned<pos:position pos:line="138" pos:column="31"/></name> <name pos:line="138" pos:column="32">char<pos:position pos:line="138" pos:column="36"/></name><operator pos:line="138" pos:column="36">)<pos:position pos:line="138" pos:column="37"/></operator><name pos:line="138" pos:column="37">IAC<pos:position pos:line="138" pos:column="40"/></name></expr></argument>)<pos:position pos:line="138" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="139" pos:column="13">SB_ACCUM<pos:position pos:line="139" pos:column="21"/></name><argument_list pos:line="139" pos:column="21">(<argument><expr><operator pos:line="139" pos:column="22">(<pos:position pos:line="139" pos:column="23"/></operator><name pos:line="139" pos:column="23">unsigned<pos:position pos:line="139" pos:column="31"/></name> <name pos:line="139" pos:column="32">char<pos:position pos:line="139" pos:column="36"/></name><operator pos:line="139" pos:column="36">)<pos:position pos:line="139" pos:column="37"/></operator><name pos:line="139" pos:column="37">SE<pos:position pos:line="139" pos:column="39"/></name></expr></argument>)<pos:position pos:line="139" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="140" pos:column="13">subpointer<pos:position pos:line="140" pos:column="23"/></name> <operator pos:line="140" pos:column="24">-=<pos:position pos:line="140" pos:column="26"/></operator> <literal type="number" pos:line="140" pos:column="27">2<pos:position pos:line="140" pos:column="28"/></literal></expr>;<pos:position pos:line="140" pos:column="29"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="141" pos:column="13">SB_TERM<pos:position pos:line="141" pos:column="20"/></name><argument_list pos:line="141" pos:column="20">()<pos:position pos:line="141" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="23"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="142" pos:column="13">suboption<pos:position pos:line="142" pos:column="22"/></name><argument_list pos:line="142" pos:column="22">(<argument><expr><name pos:line="142" pos:column="23">data<pos:position pos:line="142" pos:column="27"/></name></expr></argument>)<pos:position pos:line="142" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="29"/></expr_stmt>   <comment type="block" pos:line="142" pos:column="32">/* handle sub-option */</comment>
	    <expr_stmt><expr><name pos:line="143" pos:column="13">telrcv_state<pos:position pos:line="143" pos:column="25"/></name> <operator pos:line="143" pos:column="26">=<pos:position pos:line="143" pos:column="27"/></operator> <name pos:line="143" pos:column="28">TS_DATA<pos:position pos:line="143" pos:column="35"/></name></expr>;<pos:position pos:line="143" pos:column="36"/></expr_stmt>
	 }<pos:position pos:line="144" pos:column="11"/></block></else></if>
	 <break pos:line="145" pos:column="10">break;<pos:position pos:line="145" pos:column="16"/></break>
      }<pos:position pos:line="146" pos:column="8"/></block></switch>
   }<pos:position pos:line="147" pos:column="5"/></block></while>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

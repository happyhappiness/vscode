<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_630_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ldap<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">bool<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">done<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">status<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">rc<pos:position pos:line="4" pos:column="9"/></name> <init pos:line="4" pos:column="10">= <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
<cpp:ifndef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifndef<pos:position pos:line="5" pos:column="8"/></cpp:directive> <name pos:line="5" pos:column="9">WIN32<pos:position pos:line="5" pos:column="14"/></name></cpp:ifndef>
  <function_decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type>    (<modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier><name pos:line="6" pos:column="12">ldap_url_parse<pos:position pos:line="6" pos:column="26"/></name>)<parameter_list pos:line="6" pos:column="27">(<parameter><decl><type><name pos:line="6" pos:column="28">char<pos:position pos:line="6" pos:column="32"/></name> <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="36">LDAPURLDesc<pos:position pos:line="6" pos:column="47"/></name> <modifier pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></modifier><modifier pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></modifier></type></decl></parameter>)<pos:position pos:line="6" pos:column="51"/></parameter_list>;<pos:position pos:line="6" pos:column="52"/></function_decl>
  <function_decl><type><name pos:line="7" pos:column="3">void<pos:position pos:line="7" pos:column="7"/></name></type>   (<modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier><name pos:line="7" pos:column="12">ldap_free_urldesc<pos:position pos:line="7" pos:column="29"/></name>)<parameter_list pos:line="7" pos:column="30">(<parameter><decl><type><name pos:line="7" pos:column="31">void<pos:position pos:line="7" pos:column="35"/></name> <modifier pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></modifier></type></decl></parameter>)<pos:position pos:line="7" pos:column="38"/></parameter_list>;<pos:position pos:line="7" pos:column="39"/></function_decl>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
  <function_decl><type><name pos:line="9" pos:column="3">void<pos:position pos:line="9" pos:column="7"/></name>  <modifier pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></modifier></type>(<name pos:line="9" pos:column="11">__cdecl<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier><name pos:line="9" pos:column="20">ldap_init<pos:position pos:line="9" pos:column="29"/></name>)<parameter_list pos:line="9" pos:column="30">(<parameter><decl><type><name pos:line="9" pos:column="31">char<pos:position pos:line="9" pos:column="35"/></name> <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="9" pos:column="39">int<pos:position pos:line="9" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="9" pos:column="43"/></parameter_list>;<pos:position pos:line="9" pos:column="44"/></function_decl>
  <function_decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type>    (<name pos:line="10" pos:column="11">__cdecl<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier><name pos:line="10" pos:column="20">ldap_simple_bind_s<pos:position pos:line="10" pos:column="38"/></name>)<parameter_list pos:line="10" pos:column="39">(<parameter><decl><type><name pos:line="10" pos:column="40">void<pos:position pos:line="10" pos:column="44"/></name> <modifier pos:line="10" pos:column="45">*<pos:position pos:line="10" pos:column="46"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="10" pos:column="48">char<pos:position pos:line="10" pos:column="52"/></name> <modifier pos:line="10" pos:column="53">*<pos:position pos:line="10" pos:column="54"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="10" pos:column="56">char<pos:position pos:line="10" pos:column="60"/></name> <modifier pos:line="10" pos:column="61">*<pos:position pos:line="10" pos:column="62"/></modifier></type></decl></parameter>)<pos:position pos:line="10" pos:column="63"/></parameter_list>;<pos:position pos:line="10" pos:column="64"/></function_decl>
  <function_decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type>    (<name pos:line="11" pos:column="11">__cdecl<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier><name pos:line="11" pos:column="20">ldap_unbind_s<pos:position pos:line="11" pos:column="33"/></name>)<parameter_list pos:line="11" pos:column="34">(<parameter><decl><type><name pos:line="11" pos:column="35">void<pos:position pos:line="11" pos:column="39"/></name> <modifier pos:line="11" pos:column="40">*<pos:position pos:line="11" pos:column="41"/></modifier></type></decl></parameter>)<pos:position pos:line="11" pos:column="42"/></parameter_list>;<pos:position pos:line="11" pos:column="43"/></function_decl>
  <function_decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type>    (<name pos:line="12" pos:column="11">__cdecl<pos:position pos:line="12" pos:column="18"/></name> <modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier><name pos:line="12" pos:column="20">ldap_search_s<pos:position pos:line="12" pos:column="33"/></name>)<parameter_list pos:line="12" pos:column="34">(<parameter><decl><type><name pos:line="12" pos:column="35">void<pos:position pos:line="12" pos:column="39"/></name> <modifier pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="12" pos:column="43">char<pos:position pos:line="12" pos:column="47"/></name> <modifier pos:line="12" pos:column="48">*<pos:position pos:line="12" pos:column="49"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="12" pos:column="51">int<pos:position pos:line="12" pos:column="54"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="12" pos:column="56">char<pos:position pos:line="12" pos:column="60"/></name> <modifier pos:line="12" pos:column="61">*<pos:position pos:line="12" pos:column="62"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="12" pos:column="64">char<pos:position pos:line="12" pos:column="68"/></name> <modifier pos:line="12" pos:column="69">*<pos:position pos:line="12" pos:column="70"/></modifier><modifier pos:line="12" pos:column="70">*<pos:position pos:line="12" pos:column="71"/></modifier></type></decl></parameter>,
                                  <parameter><decl><type><name pos:line="13" pos:column="35">int<pos:position pos:line="13" pos:column="38"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="13" pos:column="40">void<pos:position pos:line="13" pos:column="44"/></name> <modifier pos:line="13" pos:column="45">*<pos:position pos:line="13" pos:column="46"/></modifier><modifier pos:line="13" pos:column="46">*<pos:position pos:line="13" pos:column="47"/></modifier></type></decl></parameter>)<pos:position pos:line="13" pos:column="48"/></parameter_list>;<pos:position pos:line="13" pos:column="49"/></function_decl>
  <function_decl><type><name pos:line="14" pos:column="3">void<pos:position pos:line="14" pos:column="7"/></name>  <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type>(<name pos:line="14" pos:column="11">__cdecl<pos:position pos:line="14" pos:column="18"/></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier><name pos:line="14" pos:column="20">ldap_first_entry<pos:position pos:line="14" pos:column="36"/></name>)<parameter_list pos:line="14" pos:column="37">(<parameter><decl><type><name pos:line="14" pos:column="38">void<pos:position pos:line="14" pos:column="42"/></name> <modifier pos:line="14" pos:column="43">*<pos:position pos:line="14" pos:column="44"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="14" pos:column="46">void<pos:position pos:line="14" pos:column="50"/></name> <modifier pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></modifier></type></decl></parameter>)<pos:position pos:line="14" pos:column="53"/></parameter_list>;<pos:position pos:line="14" pos:column="54"/></function_decl>
  <function_decl><type><name pos:line="15" pos:column="3">void<pos:position pos:line="15" pos:column="7"/></name>  <modifier pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></modifier></type>(<name pos:line="15" pos:column="11">__cdecl<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier><name pos:line="15" pos:column="20">ldap_next_entry<pos:position pos:line="15" pos:column="35"/></name>)<parameter_list pos:line="15" pos:column="36">(<parameter><decl><type><name pos:line="15" pos:column="37">void<pos:position pos:line="15" pos:column="41"/></name> <modifier pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="15" pos:column="45">void<pos:position pos:line="15" pos:column="49"/></name> <modifier pos:line="15" pos:column="50">*<pos:position pos:line="15" pos:column="51"/></modifier></type></decl></parameter>)<pos:position pos:line="15" pos:column="52"/></parameter_list>;<pos:position pos:line="15" pos:column="53"/></function_decl>
  <function_decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name>  <modifier pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></modifier></type>(<name pos:line="16" pos:column="11">__cdecl<pos:position pos:line="16" pos:column="18"/></name> <modifier pos:line="16" pos:column="19">*<pos:position pos:line="16" pos:column="20"/></modifier><name pos:line="16" pos:column="20">ldap_err2string<pos:position pos:line="16" pos:column="35"/></name>)<parameter_list pos:line="16" pos:column="36">(<parameter><decl><type><name pos:line="16" pos:column="37">int<pos:position pos:line="16" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="16" pos:column="41"/></parameter_list>;<pos:position pos:line="16" pos:column="42"/></function_decl>
  <function_decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name>  <modifier pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></modifier></type>(<name pos:line="17" pos:column="11">__cdecl<pos:position pos:line="17" pos:column="18"/></name> <modifier pos:line="17" pos:column="19">*<pos:position pos:line="17" pos:column="20"/></modifier><name pos:line="17" pos:column="20">ldap_get_dn<pos:position pos:line="17" pos:column="31"/></name>)<parameter_list pos:line="17" pos:column="32">(<parameter><decl><type><name pos:line="17" pos:column="33">void<pos:position pos:line="17" pos:column="37"/></name> <modifier pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="17" pos:column="41">void<pos:position pos:line="17" pos:column="45"/></name> <modifier pos:line="17" pos:column="46">*<pos:position pos:line="17" pos:column="47"/></modifier></type></decl></parameter>)<pos:position pos:line="17" pos:column="48"/></parameter_list>;<pos:position pos:line="17" pos:column="49"/></function_decl>
  <function_decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name>  <modifier pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></modifier></type>(<name pos:line="18" pos:column="11">__cdecl<pos:position pos:line="18" pos:column="18"/></name> <modifier pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></modifier><name pos:line="18" pos:column="20">ldap_first_attribute<pos:position pos:line="18" pos:column="40"/></name>)<parameter_list pos:line="18" pos:column="41">(<parameter><decl><type><name pos:line="18" pos:column="42">void<pos:position pos:line="18" pos:column="46"/></name> <modifier pos:line="18" pos:column="47">*<pos:position pos:line="18" pos:column="48"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="18" pos:column="50">void<pos:position pos:line="18" pos:column="54"/></name> <modifier pos:line="18" pos:column="55">*<pos:position pos:line="18" pos:column="56"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="18" pos:column="58">void<pos:position pos:line="18" pos:column="62"/></name> <modifier pos:line="18" pos:column="63">*<pos:position pos:line="18" pos:column="64"/></modifier><modifier pos:line="18" pos:column="64">*<pos:position pos:line="18" pos:column="65"/></modifier></type></decl></parameter>)<pos:position pos:line="18" pos:column="66"/></parameter_list>;<pos:position pos:line="18" pos:column="67"/></function_decl>
  <function_decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name>  <modifier pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></modifier></type>(<name pos:line="19" pos:column="11">__cdecl<pos:position pos:line="19" pos:column="18"/></name> <modifier pos:line="19" pos:column="19">*<pos:position pos:line="19" pos:column="20"/></modifier><name pos:line="19" pos:column="20">ldap_next_attribute<pos:position pos:line="19" pos:column="39"/></name>)<parameter_list pos:line="19" pos:column="40">(<parameter><decl><type><name pos:line="19" pos:column="41">void<pos:position pos:line="19" pos:column="45"/></name> <modifier pos:line="19" pos:column="46">*<pos:position pos:line="19" pos:column="47"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="19" pos:column="49">void<pos:position pos:line="19" pos:column="53"/></name> <modifier pos:line="19" pos:column="54">*<pos:position pos:line="19" pos:column="55"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="19" pos:column="57">void<pos:position pos:line="19" pos:column="61"/></name> <modifier pos:line="19" pos:column="62">*<pos:position pos:line="19" pos:column="63"/></modifier></type></decl></parameter>)<pos:position pos:line="19" pos:column="64"/></parameter_list>;<pos:position pos:line="19" pos:column="65"/></function_decl>
  <function_decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier><modifier pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></modifier></type>(<name pos:line="20" pos:column="11">__cdecl<pos:position pos:line="20" pos:column="18"/></name> <modifier pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></modifier><name pos:line="20" pos:column="20">ldap_get_values<pos:position pos:line="20" pos:column="35"/></name>)<parameter_list pos:line="20" pos:column="36">(<parameter><decl><type><name pos:line="20" pos:column="37">void<pos:position pos:line="20" pos:column="41"/></name> <modifier pos:line="20" pos:column="42">*<pos:position pos:line="20" pos:column="43"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="20" pos:column="45">void<pos:position pos:line="20" pos:column="49"/></name> <modifier pos:line="20" pos:column="50">*<pos:position pos:line="20" pos:column="51"/></modifier></type></decl></parameter>, <parameter><decl><type><specifier pos:line="20" pos:column="53">const<pos:position pos:line="20" pos:column="58"/></specifier> <name pos:line="20" pos:column="59">char<pos:position pos:line="20" pos:column="63"/></name> <modifier pos:line="20" pos:column="64">*<pos:position pos:line="20" pos:column="65"/></modifier></type></decl></parameter>)<pos:position pos:line="20" pos:column="66"/></parameter_list>;<pos:position pos:line="20" pos:column="67"/></function_decl>
  <function_decl><type><name pos:line="21" pos:column="3">void<pos:position pos:line="21" pos:column="7"/></name></type>   (<name pos:line="21" pos:column="11">__cdecl<pos:position pos:line="21" pos:column="18"/></name> <modifier pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></modifier><name pos:line="21" pos:column="20">ldap_value_free<pos:position pos:line="21" pos:column="35"/></name>)<parameter_list pos:line="21" pos:column="36">(<parameter><decl><type><name pos:line="21" pos:column="37">char<pos:position pos:line="21" pos:column="41"/></name> <modifier pos:line="21" pos:column="42">*<pos:position pos:line="21" pos:column="43"/></modifier><modifier pos:line="21" pos:column="43">*<pos:position pos:line="21" pos:column="44"/></modifier></type></decl></parameter>)<pos:position pos:line="21" pos:column="45"/></parameter_list>;<pos:position pos:line="21" pos:column="46"/></function_decl>
  <function_decl><type><name pos:line="22" pos:column="3">void<pos:position pos:line="22" pos:column="7"/></name></type>   (<name pos:line="22" pos:column="11">__cdecl<pos:position pos:line="22" pos:column="18"/></name> <modifier pos:line="22" pos:column="19">*<pos:position pos:line="22" pos:column="20"/></modifier><name pos:line="22" pos:column="20">ldap_memfree<pos:position pos:line="22" pos:column="32"/></name>)<parameter_list pos:line="22" pos:column="33">(<parameter><decl><type><name pos:line="22" pos:column="34">void<pos:position pos:line="22" pos:column="38"/></name> <modifier pos:line="22" pos:column="39">*<pos:position pos:line="22" pos:column="40"/></modifier></type></decl></parameter>)<pos:position pos:line="22" pos:column="41"/></parameter_list>;<pos:position pos:line="22" pos:column="42"/></function_decl>
  <function_decl><type><name pos:line="23" pos:column="3">void<pos:position pos:line="23" pos:column="7"/></name></type>   (<name pos:line="23" pos:column="11">__cdecl<pos:position pos:line="23" pos:column="18"/></name> <modifier pos:line="23" pos:column="19">*<pos:position pos:line="23" pos:column="20"/></modifier><name pos:line="23" pos:column="20">ber_free<pos:position pos:line="23" pos:column="28"/></name>)<parameter_list pos:line="23" pos:column="29">(<parameter><decl><type><name pos:line="23" pos:column="30">void<pos:position pos:line="23" pos:column="34"/></name> <modifier pos:line="23" pos:column="35">*<pos:position pos:line="23" pos:column="36"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="23" pos:column="38">int<pos:position pos:line="23" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="23" pos:column="42"/></parameter_list>;<pos:position pos:line="23" pos:column="43"/></function_decl>

  <decl_stmt><decl><type><name pos:line="25" pos:column="3">void<pos:position pos:line="25" pos:column="7"/></name> <modifier pos:line="25" pos:column="8">*<pos:position pos:line="25" pos:column="9"/></modifier></type><name pos:line="25" pos:column="9">server<pos:position pos:line="25" pos:column="15"/></name></decl>;<pos:position pos:line="25" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">LDAPURLDesc<pos:position pos:line="26" pos:column="14"/></name> <modifier pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></modifier></type><name pos:line="26" pos:column="16">ludp<pos:position pos:line="26" pos:column="20"/></name> <init pos:line="26" pos:column="21">= <expr><name pos:line="26" pos:column="23">NULL<pos:position pos:line="26" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="27" pos:column="3">const<pos:position pos:line="27" pos:column="8"/></specifier> <name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type><name pos:line="27" pos:column="15">mod_name<pos:position pos:line="27" pos:column="23"/></name></decl>;<pos:position pos:line="27" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="28" pos:column="3">void<pos:position pos:line="28" pos:column="7"/></name> <modifier pos:line="28" pos:column="8">*<pos:position pos:line="28" pos:column="9"/></modifier></type><name pos:line="28" pos:column="9">result<pos:position pos:line="28" pos:column="15"/></name></decl>;<pos:position pos:line="28" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">void<pos:position pos:line="29" pos:column="7"/></name> <modifier pos:line="29" pos:column="8">*<pos:position pos:line="29" pos:column="9"/></modifier></type><name pos:line="29" pos:column="9">entryIterator<pos:position pos:line="29" pos:column="22"/></name></decl>;<pos:position pos:line="29" pos:column="23"/></decl_stmt>     <comment type="block" format="doxygen" pos:line="29" pos:column="28">/*! type should be 'LDAPMessage *' */</comment>
  <decl_stmt><decl><type><name pos:line="30" pos:column="3">int<pos:position pos:line="30" pos:column="6"/></name></type> <name pos:line="30" pos:column="7">num<pos:position pos:line="30" pos:column="10"/></name> <init pos:line="30" pos:column="11">= <expr><literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="31" pos:column="3">struct<pos:position pos:line="31" pos:column="9"/></name> <name pos:line="31" pos:column="10">SessionHandle<pos:position pos:line="31" pos:column="23"/></name></name> <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier></type><name pos:line="31" pos:column="25">data<pos:position pos:line="31" pos:column="29"/></name><init pos:line="31" pos:column="29">=<expr><name><name pos:line="31" pos:column="30">conn<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">data<pos:position pos:line="31" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="33" pos:column="3">*<pos:position pos:line="33" pos:column="4"/></operator><name pos:line="33" pos:column="4">done<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <name pos:line="33" pos:column="11">TRUE<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt> <comment type="block" pos:line="33" pos:column="17">/* unconditionally */</comment>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">infof<pos:position pos:line="34" pos:column="8"/></name><argument_list pos:line="34" pos:column="8">(<argument><expr><name pos:line="34" pos:column="9">data<pos:position pos:line="34" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="15">"LDAP local: %s\n"<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="35">data<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">change<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="48">url<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">!<pos:position pos:line="36" pos:column="8"/></operator><call><name pos:line="36" pos:column="8">DynaOpen<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><operator pos:line="36" pos:column="17">&amp;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="18">mod_name<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28"> <block pos:line="36" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">failf<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">data<pos:position pos:line="37" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="17">"The %s LDAP library/libraries couldn't be opened"<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="69">mod_name<pos:position pos:line="37" pos:column="77"/></name></expr></argument>)<pos:position pos:line="37" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="79"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">CURLE_LIBRARY_NOT_FOUND<pos:position pos:line="38" pos:column="35"/></name></expr>;<pos:position pos:line="38" pos:column="36"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* The types are needed because ANSI C distinguishes between
   * pointer-to-object (data) and pointer-to-function.
   */</comment>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">void<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></operator><operator pos:line="44" pos:column="27">(<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">__cdecl<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">*<pos:position pos:line="44" pos:column="37"/></operator><operator pos:line="44" pos:column="37">)<pos:position pos:line="44" pos:column="38"/></operator><operator pos:line="44" pos:column="38">(<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="39">char<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">*<pos:position pos:line="44" pos:column="45"/></operator><operator pos:line="44" pos:column="45">,<pos:position pos:line="44" pos:column="46"/></operator> <name pos:line="44" pos:column="47">int<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">ldap_init<pos:position pos:line="44" pos:column="62"/></name></expr></argument>)<pos:position pos:line="44" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><call><call><name pos:line="45" pos:column="21">int<pos:position pos:line="45" pos:column="24"/></name> <argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">__cdecl<pos:position pos:line="45" pos:column="33"/></name> <operator pos:line="45" pos:column="34">*<pos:position pos:line="45" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call><argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">void<pos:position pos:line="45" pos:column="41"/></name> <operator pos:line="45" pos:column="42">*<pos:position pos:line="45" pos:column="43"/></operator></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">char<pos:position pos:line="45" pos:column="49"/></name> <operator pos:line="45" pos:column="50">*<pos:position pos:line="45" pos:column="51"/></operator></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">char<pos:position pos:line="45" pos:column="57"/></name> <operator pos:line="45" pos:column="58">*<pos:position pos:line="45" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="62">ldap_simple_bind_s<pos:position pos:line="45" pos:column="80"/></name></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><call><call><name pos:line="46" pos:column="21">int<pos:position pos:line="46" pos:column="24"/></name> <argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">__cdecl<pos:position pos:line="46" pos:column="33"/></name> <operator pos:line="46" pos:column="34">*<pos:position pos:line="46" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">void<pos:position pos:line="46" pos:column="41"/></name> <operator pos:line="46" pos:column="42">*<pos:position pos:line="46" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">ldap_unbind_s<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef<pos:position pos:line="47" pos:column="8"/></cpp:directive> <name pos:line="47" pos:column="9">WIN32<pos:position pos:line="47" pos:column="14"/></name></cpp:ifndef>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><call><call><name pos:line="48" pos:column="21">int<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">*<pos:position pos:line="48" pos:column="27"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">char<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">*<pos:position pos:line="48" pos:column="35"/></operator></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">LDAPURLDesc<pos:position pos:line="48" pos:column="48"/></name> <operator pos:line="48" pos:column="49">*<pos:position pos:line="48" pos:column="50"/></operator><operator pos:line="48" pos:column="50">*<pos:position pos:line="48" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">ldap_url_parse<pos:position pos:line="48" pos:column="68"/></name></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><call><call><name pos:line="49" pos:column="21">void<pos:position pos:line="49" pos:column="25"/></name> <argument_list pos:line="49" pos:column="26">(<argument><expr><operator pos:line="49" pos:column="27">*<pos:position pos:line="49" pos:column="28"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">void<pos:position pos:line="49" pos:column="34"/></name> <operator pos:line="49" pos:column="35">*<pos:position pos:line="49" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">ldap_free_urldesc<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><call><call><name pos:line="51" pos:column="21">int<pos:position pos:line="51" pos:column="24"/></name> <argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">__cdecl<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">*<pos:position pos:line="51" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">void<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">*<pos:position pos:line="51" pos:column="43"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">char<pos:position pos:line="51" pos:column="49"/></name> <operator pos:line="51" pos:column="50">*<pos:position pos:line="51" pos:column="51"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="53">int<pos:position pos:line="51" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="58">char<pos:position pos:line="51" pos:column="62"/></name> <operator pos:line="51" pos:column="63">*<pos:position pos:line="51" pos:column="64"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="66">char<pos:position pos:line="51" pos:column="70"/></name> <operator pos:line="51" pos:column="71">*<pos:position pos:line="51" pos:column="72"/></operator><operator pos:line="51" pos:column="72">*<pos:position pos:line="51" pos:column="73"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="75">int<pos:position pos:line="51" pos:column="78"/></name></expr></argument>,
                            <argument><expr><name pos:line="52" pos:column="29">void<pos:position pos:line="52" pos:column="33"/></name> <operator pos:line="52" pos:column="34">*<pos:position pos:line="52" pos:column="35"/></operator><operator pos:line="52" pos:column="35">*<pos:position pos:line="52" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">ldap_search_s<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">void<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">*<pos:position pos:line="53" pos:column="27"/></operator><operator pos:line="53" pos:column="27">(<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">__cdecl<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">*<pos:position pos:line="53" pos:column="37"/></operator><operator pos:line="53" pos:column="37">)<pos:position pos:line="53" pos:column="38"/></operator><operator pos:line="53" pos:column="38">(<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="39">void<pos:position pos:line="53" pos:column="43"/></name> <operator pos:line="53" pos:column="44">*<pos:position pos:line="53" pos:column="45"/></operator><operator pos:line="53" pos:column="45">,<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="47">void<pos:position pos:line="53" pos:column="51"/></name> <operator pos:line="53" pos:column="52">*<pos:position pos:line="53" pos:column="53"/></operator><operator pos:line="53" pos:column="53">)<pos:position pos:line="53" pos:column="54"/></operator></expr></argument>, <argument><expr><name pos:line="53" pos:column="56">ldap_first_entry<pos:position pos:line="53" pos:column="72"/></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">void<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">*<pos:position pos:line="54" pos:column="27"/></operator><operator pos:line="54" pos:column="27">(<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">__cdecl<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">*<pos:position pos:line="54" pos:column="37"/></operator><operator pos:line="54" pos:column="37">)<pos:position pos:line="54" pos:column="38"/></operator><operator pos:line="54" pos:column="38">(<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">void<pos:position pos:line="54" pos:column="43"/></name> <operator pos:line="54" pos:column="44">*<pos:position pos:line="54" pos:column="45"/></operator><operator pos:line="54" pos:column="45">,<pos:position pos:line="54" pos:column="46"/></operator> <name pos:line="54" pos:column="47">void<pos:position pos:line="54" pos:column="51"/></name> <operator pos:line="54" pos:column="52">*<pos:position pos:line="54" pos:column="53"/></operator><operator pos:line="54" pos:column="53">)<pos:position pos:line="54" pos:column="54"/></operator></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">ldap_next_entry<pos:position pos:line="54" pos:column="71"/></name></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">char<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">*<pos:position pos:line="55" pos:column="27"/></operator><operator pos:line="55" pos:column="27">(<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">__cdecl<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">*<pos:position pos:line="55" pos:column="37"/></operator><operator pos:line="55" pos:column="37">)<pos:position pos:line="55" pos:column="38"/></operator><operator pos:line="55" pos:column="38">(<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="39">int<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">)<pos:position pos:line="55" pos:column="43"/></operator></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">ldap_err2string<pos:position pos:line="55" pos:column="60"/></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">char<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">*<pos:position pos:line="56" pos:column="27"/></operator><operator pos:line="56" pos:column="27">(<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">__cdecl<pos:position pos:line="56" pos:column="35"/></name> <operator pos:line="56" pos:column="36">*<pos:position pos:line="56" pos:column="37"/></operator><operator pos:line="56" pos:column="37">)<pos:position pos:line="56" pos:column="38"/></operator><operator pos:line="56" pos:column="38">(<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">void<pos:position pos:line="56" pos:column="43"/></name> <operator pos:line="56" pos:column="44">*<pos:position pos:line="56" pos:column="45"/></operator><operator pos:line="56" pos:column="45">,<pos:position pos:line="56" pos:column="46"/></operator> <name pos:line="56" pos:column="47">void<pos:position pos:line="56" pos:column="51"/></name> <operator pos:line="56" pos:column="52">*<pos:position pos:line="56" pos:column="53"/></operator><operator pos:line="56" pos:column="53">)<pos:position pos:line="56" pos:column="54"/></operator></expr></argument>, <argument><expr><name pos:line="56" pos:column="56">ldap_get_dn<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">char<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">*<pos:position pos:line="57" pos:column="27"/></operator><operator pos:line="57" pos:column="27">(<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="28">__cdecl<pos:position pos:line="57" pos:column="35"/></name> <operator pos:line="57" pos:column="36">*<pos:position pos:line="57" pos:column="37"/></operator><operator pos:line="57" pos:column="37">)<pos:position pos:line="57" pos:column="38"/></operator><operator pos:line="57" pos:column="38">(<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">void<pos:position pos:line="57" pos:column="43"/></name> <operator pos:line="57" pos:column="44">*<pos:position pos:line="57" pos:column="45"/></operator><operator pos:line="57" pos:column="45">,<pos:position pos:line="57" pos:column="46"/></operator> <name pos:line="57" pos:column="47">void<pos:position pos:line="57" pos:column="51"/></name> <operator pos:line="57" pos:column="52">*<pos:position pos:line="57" pos:column="53"/></operator><operator pos:line="57" pos:column="53">,<pos:position pos:line="57" pos:column="54"/></operator> <name pos:line="57" pos:column="55">void<pos:position pos:line="57" pos:column="59"/></name> <operator pos:line="57" pos:column="60">*<pos:position pos:line="57" pos:column="61"/></operator><operator pos:line="57" pos:column="61">*<pos:position pos:line="57" pos:column="62"/></operator><operator pos:line="57" pos:column="62">)<pos:position pos:line="57" pos:column="63"/></operator></expr></argument>, <argument><expr><name pos:line="57" pos:column="65">ldap_first_attribute<pos:position pos:line="57" pos:column="85"/></name></expr></argument>)<pos:position pos:line="57" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">char<pos:position pos:line="58" pos:column="25"/></name> <operator pos:line="58" pos:column="26">*<pos:position pos:line="58" pos:column="27"/></operator><operator pos:line="58" pos:column="27">(<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">__cdecl<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">*<pos:position pos:line="58" pos:column="37"/></operator><operator pos:line="58" pos:column="37">)<pos:position pos:line="58" pos:column="38"/></operator><operator pos:line="58" pos:column="38">(<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="39">void<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">*<pos:position pos:line="58" pos:column="45"/></operator><operator pos:line="58" pos:column="45">,<pos:position pos:line="58" pos:column="46"/></operator> <name pos:line="58" pos:column="47">void<pos:position pos:line="58" pos:column="51"/></name> <operator pos:line="58" pos:column="52">*<pos:position pos:line="58" pos:column="53"/></operator><operator pos:line="58" pos:column="53">,<pos:position pos:line="58" pos:column="54"/></operator> <name pos:line="58" pos:column="55">void<pos:position pos:line="58" pos:column="59"/></name> <operator pos:line="58" pos:column="60">*<pos:position pos:line="58" pos:column="61"/></operator><operator pos:line="58" pos:column="61">)<pos:position pos:line="58" pos:column="62"/></operator></expr></argument>, <argument><expr><name pos:line="58" pos:column="64">ldap_next_attribute<pos:position pos:line="58" pos:column="83"/></name></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">char<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">*<pos:position pos:line="59" pos:column="27"/></operator><operator pos:line="59" pos:column="27">*<pos:position pos:line="59" pos:column="28"/></operator><operator pos:line="59" pos:column="28">(<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">__cdecl<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">*<pos:position pos:line="59" pos:column="38"/></operator><operator pos:line="59" pos:column="38">)<pos:position pos:line="59" pos:column="39"/></operator><operator pos:line="59" pos:column="39">(<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">void<pos:position pos:line="59" pos:column="44"/></name> <operator pos:line="59" pos:column="45">*<pos:position pos:line="59" pos:column="46"/></operator><operator pos:line="59" pos:column="46">,<pos:position pos:line="59" pos:column="47"/></operator> <name pos:line="59" pos:column="48">void<pos:position pos:line="59" pos:column="52"/></name> <operator pos:line="59" pos:column="53">*<pos:position pos:line="59" pos:column="54"/></operator><operator pos:line="59" pos:column="54">,<pos:position pos:line="59" pos:column="55"/></operator> <specifier pos:line="59" pos:column="56">const<pos:position pos:line="59" pos:column="61"/></specifier> <name pos:line="59" pos:column="62">char<pos:position pos:line="59" pos:column="66"/></name> <operator pos:line="59" pos:column="67">*<pos:position pos:line="59" pos:column="68"/></operator><operator pos:line="59" pos:column="68">)<pos:position pos:line="59" pos:column="69"/></operator></expr></argument>, <argument><expr><name pos:line="59" pos:column="71">ldap_get_values<pos:position pos:line="59" pos:column="86"/></name></expr></argument>)<pos:position pos:line="59" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="88"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><call><call><name pos:line="60" pos:column="21">void<pos:position pos:line="60" pos:column="25"/></name> <argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">__cdecl<pos:position pos:line="60" pos:column="34"/></name> <operator pos:line="60" pos:column="35">*<pos:position pos:line="60" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call><argument_list pos:line="60" pos:column="37">(<argument><expr><name pos:line="60" pos:column="38">char<pos:position pos:line="60" pos:column="42"/></name> <operator pos:line="60" pos:column="43">*<pos:position pos:line="60" pos:column="44"/></operator><operator pos:line="60" pos:column="44">*<pos:position pos:line="60" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="48">ldap_value_free<pos:position pos:line="60" pos:column="63"/></name></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><call><call><name pos:line="61" pos:column="21">void<pos:position pos:line="61" pos:column="25"/></name> <argument_list pos:line="61" pos:column="26">(<argument><expr><name pos:line="61" pos:column="27">__cdecl<pos:position pos:line="61" pos:column="34"/></name> <operator pos:line="61" pos:column="35">*<pos:position pos:line="61" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">void<pos:position pos:line="61" pos:column="42"/></name> <operator pos:line="61" pos:column="43">*<pos:position pos:line="61" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">ldap_memfree<pos:position pos:line="61" pos:column="59"/></name></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">DYNA_GET_FUNCTION<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><call><call><name pos:line="62" pos:column="21">void<pos:position pos:line="62" pos:column="25"/></name> <argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">__cdecl<pos:position pos:line="62" pos:column="34"/></name> <operator pos:line="62" pos:column="35">*<pos:position pos:line="62" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="62" pos:column="37"/></argument_list></call><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">void<pos:position pos:line="62" pos:column="42"/></name> <operator pos:line="62" pos:column="43">*<pos:position pos:line="62" pos:column="44"/></operator></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">int<pos:position pos:line="62" pos:column="49"/></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">ber_free<pos:position pos:line="62" pos:column="60"/></name></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>

  <expr_stmt><expr><name pos:line="64" pos:column="3">server<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">=<pos:position pos:line="64" pos:column="11"/></operator> <call pos:line="64" pos:column="12">(<modifier pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></modifier><name pos:line="64" pos:column="14">ldap_init<pos:position pos:line="64" pos:column="23"/></name>)<argument_list pos:line="64" pos:column="24">(<argument><expr><name><name pos:line="64" pos:column="25">conn<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">-&gt;<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="31">host<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">.<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="36">name<pos:position pos:line="64" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="42">(<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="43">int<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">)<pos:position pos:line="64" pos:column="47"/></operator><name><name pos:line="64" pos:column="47">conn<pos:position pos:line="64" pos:column="51"/></name><operator pos:line="64" pos:column="51">-&gt;<pos:position pos:line="64" pos:column="56"/></operator><name pos:line="64" pos:column="53">port<pos:position pos:line="64" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">server<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">==<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">NULL<pos:position pos:line="65" pos:column="21"/></name></expr>)<pos:position pos:line="65" pos:column="22"/></condition><then pos:line="65" pos:column="22"> <block pos:line="65" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">failf<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">data<pos:position pos:line="66" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="17">"LDAP local: Cannot connect to %s:%d"<pos:position pos:line="66" pos:column="54"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="67" pos:column="11">conn<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">host<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">.<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="22">name<pos:position pos:line="67" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="28">conn<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">port<pos:position pos:line="67" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">status<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <name pos:line="68" pos:column="14">CURLE_COULDNT_CONNECT<pos:position pos:line="68" pos:column="35"/></name></expr>;<pos:position pos:line="68" pos:column="36"/></expr_stmt>
    <goto pos:line="69" pos:column="5">goto <name pos:line="69" pos:column="10">quit<pos:position pos:line="69" pos:column="14"/></name>;<pos:position pos:line="69" pos:column="15"/></goto>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="72" pos:column="3">rc<pos:position pos:line="72" pos:column="5"/></name> <operator pos:line="72" pos:column="6">=<pos:position pos:line="72" pos:column="7"/></operator> <call pos:line="72" pos:column="8">(<modifier pos:line="72" pos:column="9">*<pos:position pos:line="72" pos:column="10"/></modifier><name pos:line="72" pos:column="10">ldap_simple_bind_s<pos:position pos:line="72" pos:column="28"/></name>)<argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">server<pos:position pos:line="72" pos:column="36"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="73" pos:column="30">conn<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">bits<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">.<pos:position pos:line="73" pos:column="41"/></operator><name pos:line="73" pos:column="41">user_passwd<pos:position pos:line="73" pos:column="52"/></name></name></expr> ?<pos:position pos:line="73" pos:column="54"/></condition><then pos:line="73" pos:column="54"> <expr><name><name pos:line="73" pos:column="55">conn<pos:position pos:line="73" pos:column="59"/></name><operator pos:line="73" pos:column="59">-&gt;<pos:position pos:line="73" pos:column="64"/></operator><name pos:line="73" pos:column="61">user<pos:position pos:line="73" pos:column="65"/></name></name></expr> <pos:position pos:line="73" pos:column="66"/></then><else pos:line="73" pos:column="66">: <expr><name pos:line="73" pos:column="68">NULL<pos:position pos:line="73" pos:column="72"/></name></expr></else></ternary></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="74" pos:column="30">conn<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">-&gt;<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="36">bits<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">.<pos:position pos:line="74" pos:column="41"/></operator><name pos:line="74" pos:column="41">user_passwd<pos:position pos:line="74" pos:column="52"/></name></name></expr> ?<pos:position pos:line="74" pos:column="54"/></condition><then pos:line="74" pos:column="54"> <expr><name><name pos:line="74" pos:column="55">conn<pos:position pos:line="74" pos:column="59"/></name><operator pos:line="74" pos:column="59">-&gt;<pos:position pos:line="74" pos:column="64"/></operator><name pos:line="74" pos:column="61">passwd<pos:position pos:line="74" pos:column="67"/></name></name></expr> <pos:position pos:line="74" pos:column="68"/></then><else pos:line="74" pos:column="68">: <expr><name pos:line="74" pos:column="70">NULL<pos:position pos:line="74" pos:column="74"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="76"/></expr_stmt>
  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><name pos:line="75" pos:column="7">rc<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">!=<pos:position pos:line="75" pos:column="12"/></operator> <literal type="number" pos:line="75" pos:column="13">0<pos:position pos:line="75" pos:column="14"/></literal></expr>)<pos:position pos:line="75" pos:column="15"/></condition><then pos:line="75" pos:column="15"> <block pos:line="75" pos:column="16">{
     <expr_stmt><expr><call><name pos:line="76" pos:column="6">failf<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><name pos:line="76" pos:column="12">data<pos:position pos:line="76" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="18">"LDAP local: %s"<pos:position pos:line="76" pos:column="34"/></literal></expr></argument>, <argument><expr><call pos:line="76" pos:column="36">(<modifier pos:line="76" pos:column="37">*<pos:position pos:line="76" pos:column="38"/></modifier><name pos:line="76" pos:column="38">ldap_err2string<pos:position pos:line="76" pos:column="53"/></name>)<argument_list pos:line="76" pos:column="54">(<argument><expr><name pos:line="76" pos:column="55">rc<pos:position pos:line="76" pos:column="57"/></name></expr></argument>)<pos:position pos:line="76" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="60"/></expr_stmt>
     <expr_stmt><expr><name pos:line="77" pos:column="6">status<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">=<pos:position pos:line="77" pos:column="14"/></operator> <name pos:line="77" pos:column="15">CURLE_LDAP_CANNOT_BIND<pos:position pos:line="77" pos:column="37"/></name></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
     <goto pos:line="78" pos:column="6">goto <name pos:line="78" pos:column="11">quit<pos:position pos:line="78" pos:column="15"/></name>;<pos:position pos:line="78" pos:column="16"/></goto>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifdef<pos:position pos:line="81" pos:column="7"/></cpp:directive> <name pos:line="81" pos:column="8">WIN32<pos:position pos:line="81" pos:column="13"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="82" pos:column="3">rc<pos:position pos:line="82" pos:column="5"/></name> <operator pos:line="82" pos:column="6">=<pos:position pos:line="82" pos:column="7"/></operator> <call><name pos:line="82" pos:column="8">_ldap_url_parse<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><name pos:line="82" pos:column="24">conn<pos:position pos:line="82" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="30">&amp;<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="31">ludp<pos:position pos:line="82" pos:column="35"/></name></expr></argument>)<pos:position pos:line="82" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="37"/></expr_stmt>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else<pos:position pos:line="83" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="84" pos:column="3">rc<pos:position pos:line="84" pos:column="5"/></name> <operator pos:line="84" pos:column="6">=<pos:position pos:line="84" pos:column="7"/></operator> <call pos:line="84" pos:column="8">(<modifier pos:line="84" pos:column="9">*<pos:position pos:line="84" pos:column="10"/></modifier><name pos:line="84" pos:column="10">ldap_url_parse<pos:position pos:line="84" pos:column="24"/></name>)<argument_list pos:line="84" pos:column="25">(<argument><expr><name><name pos:line="84" pos:column="26">data<pos:position pos:line="84" pos:column="30"/></name><operator pos:line="84" pos:column="30">-&gt;<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="32">change<pos:position pos:line="84" pos:column="38"/></name><operator pos:line="84" pos:column="38">.<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="39">url<pos:position pos:line="84" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="44">&amp;<pos:position pos:line="84" pos:column="49"/></operator><name pos:line="84" pos:column="45">ludp<pos:position pos:line="84" pos:column="49"/></name></expr></argument>)<pos:position pos:line="84" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">rc<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">!=<pos:position pos:line="87" pos:column="12"/></operator> <literal type="number" pos:line="87" pos:column="13">0<pos:position pos:line="87" pos:column="14"/></literal></expr>)<pos:position pos:line="87" pos:column="15"/></condition><then pos:line="87" pos:column="15"> <block pos:line="87" pos:column="16">{
     <expr_stmt><expr><call><name pos:line="88" pos:column="6">failf<pos:position pos:line="88" pos:column="11"/></name><argument_list pos:line="88" pos:column="11">(<argument><expr><name pos:line="88" pos:column="12">data<pos:position pos:line="88" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="18">"LDAP local: %s"<pos:position pos:line="88" pos:column="34"/></literal></expr></argument>, <argument><expr><call pos:line="88" pos:column="36">(<modifier pos:line="88" pos:column="37">*<pos:position pos:line="88" pos:column="38"/></modifier><name pos:line="88" pos:column="38">ldap_err2string<pos:position pos:line="88" pos:column="53"/></name>)<argument_list pos:line="88" pos:column="54">(<argument><expr><name pos:line="88" pos:column="55">rc<pos:position pos:line="88" pos:column="57"/></name></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="60"/></expr_stmt>
     <expr_stmt><expr><name pos:line="89" pos:column="6">status<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">=<pos:position pos:line="89" pos:column="14"/></operator> <name pos:line="89" pos:column="15">CURLE_LDAP_INVALID_URL<pos:position pos:line="89" pos:column="37"/></name></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
     <goto pos:line="90" pos:column="6">goto <name pos:line="90" pos:column="11">quit<pos:position pos:line="90" pos:column="15"/></name>;<pos:position pos:line="90" pos:column="16"/></goto>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="93" pos:column="3">rc<pos:position pos:line="93" pos:column="5"/></name> <operator pos:line="93" pos:column="6">=<pos:position pos:line="93" pos:column="7"/></operator> <call pos:line="93" pos:column="8">(<modifier pos:line="93" pos:column="9">*<pos:position pos:line="93" pos:column="10"/></modifier><name pos:line="93" pos:column="10">ldap_search_s<pos:position pos:line="93" pos:column="23"/></name>)<argument_list pos:line="93" pos:column="24">(<argument><expr><name pos:line="93" pos:column="25">server<pos:position pos:line="93" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="33">ludp<pos:position pos:line="93" pos:column="37"/></name><operator pos:line="93" pos:column="37">-&gt;<pos:position pos:line="93" pos:column="42"/></operator><name pos:line="93" pos:column="39">lud_dn<pos:position pos:line="93" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="47">ludp<pos:position pos:line="93" pos:column="51"/></name><operator pos:line="93" pos:column="51">-&gt;<pos:position pos:line="93" pos:column="56"/></operator><name pos:line="93" pos:column="53">lud_scope<pos:position pos:line="93" pos:column="62"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="94" pos:column="25">ludp<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">-&gt;<pos:position pos:line="94" pos:column="34"/></operator><name pos:line="94" pos:column="31">lud_filter<pos:position pos:line="94" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="43">ludp<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">-&gt;<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="49">lud_attrs<pos:position pos:line="94" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="60">0<pos:position pos:line="94" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="94" pos:column="63">&amp;<pos:position pos:line="94" pos:column="68"/></operator><name pos:line="94" pos:column="64">result<pos:position pos:line="94" pos:column="70"/></name></expr></argument>)<pos:position pos:line="94" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="72"/></expr_stmt>

  <if pos:line="96" pos:column="3">if <condition pos:line="96" pos:column="6">(<expr><name pos:line="96" pos:column="7">rc<pos:position pos:line="96" pos:column="9"/></name> <operator pos:line="96" pos:column="10">!=<pos:position pos:line="96" pos:column="12"/></operator> <literal type="number" pos:line="96" pos:column="13">0<pos:position pos:line="96" pos:column="14"/></literal> <operator pos:line="96" pos:column="15">&amp;&amp;<pos:position pos:line="96" pos:column="25"/></operator> <name pos:line="96" pos:column="18">rc<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">!=<pos:position pos:line="96" pos:column="23"/></operator> <name pos:line="96" pos:column="24">LDAP_SIZELIMIT_EXCEEDED<pos:position pos:line="96" pos:column="47"/></name></expr>)<pos:position pos:line="96" pos:column="48"/></condition><then pos:line="96" pos:column="48"> <block pos:line="96" pos:column="49">{
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">failf<pos:position pos:line="97" pos:column="10"/></name><argument_list pos:line="97" pos:column="10">(<argument><expr><name pos:line="97" pos:column="11">data<pos:position pos:line="97" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="17">"LDAP remote: %s"<pos:position pos:line="97" pos:column="34"/></literal></expr></argument>, <argument><expr><call pos:line="97" pos:column="36">(<modifier pos:line="97" pos:column="37">*<pos:position pos:line="97" pos:column="38"/></modifier><name pos:line="97" pos:column="38">ldap_err2string<pos:position pos:line="97" pos:column="53"/></name>)<argument_list pos:line="97" pos:column="54">(<argument><expr><name pos:line="97" pos:column="55">rc<pos:position pos:line="97" pos:column="57"/></name></expr></argument>)<pos:position pos:line="97" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name pos:line="98" pos:column="5">status<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">=<pos:position pos:line="98" pos:column="13"/></operator> <name pos:line="98" pos:column="14">CURLE_LDAP_SEARCH_FAILED<pos:position pos:line="98" pos:column="38"/></name></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
    <goto pos:line="99" pos:column="5">goto <name pos:line="99" pos:column="10">quit<pos:position pos:line="99" pos:column="14"/></name>;<pos:position pos:line="99" pos:column="15"/></goto>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <for pos:line="102" pos:column="3">for<control pos:line="102" pos:column="6">(<init><expr><name pos:line="102" pos:column="7">num<pos:position pos:line="102" pos:column="10"/></name> <operator pos:line="102" pos:column="11">=<pos:position pos:line="102" pos:column="12"/></operator> <literal type="number" pos:line="102" pos:column="13">0<pos:position pos:line="102" pos:column="14"/></literal></expr><operator pos:line="102" pos:column="14">,<pos:position pos:line="102" pos:column="15"/></operator> <expr><name pos:line="102" pos:column="16">entryIterator<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <call pos:line="102" pos:column="32">(<modifier pos:line="102" pos:column="33">*<pos:position pos:line="102" pos:column="34"/></modifier><name pos:line="102" pos:column="34">ldap_first_entry<pos:position pos:line="102" pos:column="50"/></name>)<argument_list pos:line="102" pos:column="51">(<argument><expr><name pos:line="102" pos:column="52">server<pos:position pos:line="102" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="60">result<pos:position pos:line="102" pos:column="66"/></name></expr></argument>)<pos:position pos:line="102" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="68"/></init>
      <condition><expr><name pos:line="103" pos:column="7">entryIterator<pos:position pos:line="103" pos:column="20"/></name></expr>;<pos:position pos:line="103" pos:column="21"/></condition>
      <incr><expr><name pos:line="104" pos:column="7">entryIterator<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator> <call pos:line="104" pos:column="23">(<modifier pos:line="104" pos:column="24">*<pos:position pos:line="104" pos:column="25"/></modifier><name pos:line="104" pos:column="25">ldap_next_entry<pos:position pos:line="104" pos:column="40"/></name>)<argument_list pos:line="104" pos:column="41">(<argument><expr><name pos:line="104" pos:column="42">server<pos:position pos:line="104" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="50">entryIterator<pos:position pos:line="104" pos:column="63"/></name></expr></argument>)<pos:position pos:line="104" pos:column="64"/></argument_list></call></expr><operator pos:line="104" pos:column="64">,<pos:position pos:line="104" pos:column="65"/></operator> <expr><name pos:line="104" pos:column="66">num<pos:position pos:line="104" pos:column="69"/></name><operator pos:line="104" pos:column="69">++<pos:position pos:line="104" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="104" pos:column="72"/></control>
  <block pos:line="105" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="106" pos:column="5">void<pos:position pos:line="106" pos:column="9"/></name>  <modifier pos:line="106" pos:column="11">*<pos:position pos:line="106" pos:column="12"/></modifier></type><name pos:line="106" pos:column="12">ber<pos:position pos:line="106" pos:column="15"/></name> <init pos:line="106" pos:column="16">= <expr><name pos:line="106" pos:column="18">NULL<pos:position pos:line="106" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="106" pos:column="23"/></decl_stmt>      <comment type="block" format="doxygen" pos:line="106" pos:column="29">/*! is really 'BerElement **' */</comment>
    <decl_stmt><decl><type><name pos:line="107" pos:column="5">void<pos:position pos:line="107" pos:column="9"/></name>  <modifier pos:line="107" pos:column="11">*<pos:position pos:line="107" pos:column="12"/></modifier></type><name pos:line="107" pos:column="12">attribute<pos:position pos:line="107" pos:column="21"/></name></decl>;<pos:position pos:line="107" pos:column="22"/></decl_stmt>       <comment type="block" format="doxygen" pos:line="107" pos:column="29">/*! suspicious that this isn't 'const' */</comment>
    <decl_stmt><decl><type><name pos:line="108" pos:column="5">char<pos:position pos:line="108" pos:column="9"/></name>  <modifier pos:line="108" pos:column="11">*<pos:position pos:line="108" pos:column="12"/></modifier></type><name pos:line="108" pos:column="12">dn<pos:position pos:line="108" pos:column="14"/></name> <init pos:line="108" pos:column="15">= <expr><call pos:line="108" pos:column="17">(<modifier pos:line="108" pos:column="18">*<pos:position pos:line="108" pos:column="19"/></modifier><name pos:line="108" pos:column="19">ldap_get_dn<pos:position pos:line="108" pos:column="30"/></name>)<argument_list pos:line="108" pos:column="31">(<argument><expr><name pos:line="108" pos:column="32">server<pos:position pos:line="108" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="40">entryIterator<pos:position pos:line="108" pos:column="53"/></name></expr></argument>)<pos:position pos:line="108" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="108" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="109" pos:column="5">int<pos:position pos:line="109" pos:column="8"/></name></type> <name pos:line="109" pos:column="9">i<pos:position pos:line="109" pos:column="10"/></name></decl>;<pos:position pos:line="109" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="111" pos:column="5">Curl_client_write<pos:position pos:line="111" pos:column="22"/></name><argument_list pos:line="111" pos:column="22">(<argument><expr><name pos:line="111" pos:column="23">data<pos:position pos:line="111" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="29">CLIENTWRITE_BODY<pos:position pos:line="111" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="47">(<pos:position pos:line="111" pos:column="48"/></operator><name pos:line="111" pos:column="48">char<pos:position pos:line="111" pos:column="52"/></name> <operator pos:line="111" pos:column="53">*<pos:position pos:line="111" pos:column="54"/></operator><operator pos:line="111" pos:column="54">)<pos:position pos:line="111" pos:column="55"/></operator><literal type="string" pos:line="111" pos:column="55">"DN: "<pos:position pos:line="111" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="63">4<pos:position pos:line="111" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">Curl_client_write<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">(<argument><expr><name pos:line="112" pos:column="23">data<pos:position pos:line="112" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="29">CLIENTWRITE_BODY<pos:position pos:line="112" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="47">(<pos:position pos:line="112" pos:column="48"/></operator><name pos:line="112" pos:column="48">char<pos:position pos:line="112" pos:column="52"/></name> <operator pos:line="112" pos:column="53">*<pos:position pos:line="112" pos:column="54"/></operator><operator pos:line="112" pos:column="54">)<pos:position pos:line="112" pos:column="55"/></operator><name pos:line="112" pos:column="55">dn<pos:position pos:line="112" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="59">0<pos:position pos:line="112" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">Curl_client_write<pos:position pos:line="113" pos:column="22"/></name><argument_list pos:line="113" pos:column="22">(<argument><expr><name pos:line="113" pos:column="23">data<pos:position pos:line="113" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="29">CLIENTWRITE_BODY<pos:position pos:line="113" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="47">(<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="48">char<pos:position pos:line="113" pos:column="52"/></name> <operator pos:line="113" pos:column="53">*<pos:position pos:line="113" pos:column="54"/></operator><operator pos:line="113" pos:column="54">)<pos:position pos:line="113" pos:column="55"/></operator><literal type="string" pos:line="113" pos:column="55">"\n"<pos:position pos:line="113" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="61">1<pos:position pos:line="113" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="64"/></expr_stmt>

    <for pos:line="115" pos:column="5">for <control pos:line="115" pos:column="9">(<init><expr><name pos:line="115" pos:column="10">attribute<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <call pos:line="115" pos:column="22">(<modifier pos:line="115" pos:column="23">*<pos:position pos:line="115" pos:column="24"/></modifier><name pos:line="115" pos:column="24">ldap_first_attribute<pos:position pos:line="115" pos:column="44"/></name>)<argument_list pos:line="115" pos:column="45">(<argument><expr><name pos:line="115" pos:column="46">server<pos:position pos:line="115" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="54">entryIterator<pos:position pos:line="115" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="69">&amp;<pos:position pos:line="115" pos:column="74"/></operator><name pos:line="115" pos:column="70">ber<pos:position pos:line="115" pos:column="73"/></name></expr></argument>)<pos:position pos:line="115" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="75"/></init>
         <condition><expr><name pos:line="116" pos:column="10">attribute<pos:position pos:line="116" pos:column="19"/></name></expr>;<pos:position pos:line="116" pos:column="20"/></condition>
         <incr><expr><name pos:line="117" pos:column="10">attribute<pos:position pos:line="117" pos:column="19"/></name> <operator pos:line="117" pos:column="20">=<pos:position pos:line="117" pos:column="21"/></operator> <call pos:line="117" pos:column="22">(<modifier pos:line="117" pos:column="23">*<pos:position pos:line="117" pos:column="24"/></modifier><name pos:line="117" pos:column="24">ldap_next_attribute<pos:position pos:line="117" pos:column="43"/></name>)<argument_list pos:line="117" pos:column="44">(<argument><expr><name pos:line="117" pos:column="45">server<pos:position pos:line="117" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="53">entryIterator<pos:position pos:line="117" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="68">ber<pos:position pos:line="117" pos:column="71"/></name></expr></argument>)<pos:position pos:line="117" pos:column="72"/></argument_list></call></expr></incr>)<pos:position pos:line="117" pos:column="73"/></control>
    <block pos:line="118" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="119" pos:column="7">char<pos:position pos:line="119" pos:column="11"/></name> <modifier pos:line="119" pos:column="12">*<pos:position pos:line="119" pos:column="13"/></modifier><modifier pos:line="119" pos:column="13">*<pos:position pos:line="119" pos:column="14"/></modifier></type><name pos:line="119" pos:column="14">vals<pos:position pos:line="119" pos:column="18"/></name> <init pos:line="119" pos:column="19">= <expr><call pos:line="119" pos:column="21">(<modifier pos:line="119" pos:column="22">*<pos:position pos:line="119" pos:column="23"/></modifier><name pos:line="119" pos:column="23">ldap_get_values<pos:position pos:line="119" pos:column="38"/></name>)<argument_list pos:line="119" pos:column="39">(<argument><expr><name pos:line="119" pos:column="40">server<pos:position pos:line="119" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="48">entryIterator<pos:position pos:line="119" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="63">attribute<pos:position pos:line="119" pos:column="72"/></name></expr></argument>)<pos:position pos:line="119" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="119" pos:column="74"/></decl_stmt>

      <if pos:line="121" pos:column="7">if <condition pos:line="121" pos:column="10">(<expr><name pos:line="121" pos:column="11">vals<pos:position pos:line="121" pos:column="15"/></name> <operator pos:line="121" pos:column="16">!=<pos:position pos:line="121" pos:column="18"/></operator> <name pos:line="121" pos:column="19">NULL<pos:position pos:line="121" pos:column="23"/></name></expr>)<pos:position pos:line="121" pos:column="24"/></condition><then pos:line="121" pos:column="24">
      <block pos:line="122" pos:column="7">{
        <for pos:line="123" pos:column="9">for <control pos:line="123" pos:column="13">(<init><expr><name pos:line="123" pos:column="14">i<pos:position pos:line="123" pos:column="15"/></name> <operator pos:line="123" pos:column="16">=<pos:position pos:line="123" pos:column="17"/></operator> <literal type="number" pos:line="123" pos:column="18">0<pos:position pos:line="123" pos:column="19"/></literal></expr>;<pos:position pos:line="123" pos:column="20"/></init> <condition><expr><operator pos:line="123" pos:column="21">(<pos:position pos:line="123" pos:column="22"/></operator><name><name pos:line="123" pos:column="22">vals<pos:position pos:line="123" pos:column="26"/></name><index pos:line="123" pos:column="26">[<expr><name pos:line="123" pos:column="27">i<pos:position pos:line="123" pos:column="28"/></name></expr>]<pos:position pos:line="123" pos:column="29"/></index></name> <operator pos:line="123" pos:column="30">!=<pos:position pos:line="123" pos:column="32"/></operator> <name pos:line="123" pos:column="33">NULL<pos:position pos:line="123" pos:column="37"/></name><operator pos:line="123" pos:column="37">)<pos:position pos:line="123" pos:column="38"/></operator></expr>;<pos:position pos:line="123" pos:column="39"/></condition> <incr><expr><name pos:line="123" pos:column="40">i<pos:position pos:line="123" pos:column="41"/></name><operator pos:line="123" pos:column="41">++<pos:position pos:line="123" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="123" pos:column="44"/></control>
        <block pos:line="124" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="125" pos:column="11">Curl_client_write<pos:position pos:line="125" pos:column="28"/></name><argument_list pos:line="125" pos:column="28">(<argument><expr><name pos:line="125" pos:column="29">data<pos:position pos:line="125" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="35">CLIENTWRITE_BODY<pos:position pos:line="125" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="53">(<pos:position pos:line="125" pos:column="54"/></operator><name pos:line="125" pos:column="54">char<pos:position pos:line="125" pos:column="58"/></name> <operator pos:line="125" pos:column="59">*<pos:position pos:line="125" pos:column="60"/></operator><operator pos:line="125" pos:column="60">)<pos:position pos:line="125" pos:column="61"/></operator><literal type="string" pos:line="125" pos:column="61">"\t"<pos:position pos:line="125" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="67">1<pos:position pos:line="125" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="70"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="126" pos:column="11">Curl_client_write<pos:position pos:line="126" pos:column="28"/></name><argument_list pos:line="126" pos:column="28">(<argument><expr><name pos:line="126" pos:column="29">data<pos:position pos:line="126" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="35">CLIENTWRITE_BODY<pos:position pos:line="126" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="53">(<pos:position pos:line="126" pos:column="54"/></operator><name pos:line="126" pos:column="54">char<pos:position pos:line="126" pos:column="58"/></name><operator pos:line="126" pos:column="58">*<pos:position pos:line="126" pos:column="59"/></operator><operator pos:line="126" pos:column="59">)<pos:position pos:line="126" pos:column="60"/></operator> <name pos:line="126" pos:column="61">attribute<pos:position pos:line="126" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="72">0<pos:position pos:line="126" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="75"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="127" pos:column="11">Curl_client_write<pos:position pos:line="127" pos:column="28"/></name><argument_list pos:line="127" pos:column="28">(<argument><expr><name pos:line="127" pos:column="29">data<pos:position pos:line="127" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="35">CLIENTWRITE_BODY<pos:position pos:line="127" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="127" pos:column="53">(<pos:position pos:line="127" pos:column="54"/></operator><name pos:line="127" pos:column="54">char<pos:position pos:line="127" pos:column="58"/></name> <operator pos:line="127" pos:column="59">*<pos:position pos:line="127" pos:column="60"/></operator><operator pos:line="127" pos:column="60">)<pos:position pos:line="127" pos:column="61"/></operator><literal type="string" pos:line="127" pos:column="61">": "<pos:position pos:line="127" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="67">2<pos:position pos:line="127" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="70"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="128" pos:column="11">Curl_client_write<pos:position pos:line="128" pos:column="28"/></name><argument_list pos:line="128" pos:column="28">(<argument><expr><name pos:line="128" pos:column="29">data<pos:position pos:line="128" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="35">CLIENTWRITE_BODY<pos:position pos:line="128" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="53">vals<pos:position pos:line="128" pos:column="57"/></name><index pos:line="128" pos:column="57">[<expr><name pos:line="128" pos:column="58">i<pos:position pos:line="128" pos:column="59"/></name></expr>]<pos:position pos:line="128" pos:column="60"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="128" pos:column="62">0<pos:position pos:line="128" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="65"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="129" pos:column="11">Curl_client_write<pos:position pos:line="129" pos:column="28"/></name><argument_list pos:line="129" pos:column="28">(<argument><expr><name pos:line="129" pos:column="29">data<pos:position pos:line="129" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="35">CLIENTWRITE_BODY<pos:position pos:line="129" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="53">(<pos:position pos:line="129" pos:column="54"/></operator><name pos:line="129" pos:column="54">char<pos:position pos:line="129" pos:column="58"/></name> <operator pos:line="129" pos:column="59">*<pos:position pos:line="129" pos:column="60"/></operator><operator pos:line="129" pos:column="60">)<pos:position pos:line="129" pos:column="61"/></operator><literal type="string" pos:line="129" pos:column="61">"\n"<pos:position pos:line="129" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="67">0<pos:position pos:line="129" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="130" pos:column="10"/></block></for>

        <comment type="block" pos:line="132" pos:column="9">/* Free memory used to store values */</comment>
        <expr_stmt><expr><call pos:line="133" pos:column="9">(<modifier pos:line="133" pos:column="10">*<pos:position pos:line="133" pos:column="11"/></modifier><name pos:line="133" pos:column="11">ldap_value_free<pos:position pos:line="133" pos:column="26"/></name>)<argument_list pos:line="133" pos:column="27">(<argument><expr><name pos:line="133" pos:column="28">vals<pos:position pos:line="133" pos:column="32"/></name></expr></argument>)<pos:position pos:line="133" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="134" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">Curl_client_write<pos:position pos:line="135" pos:column="24"/></name><argument_list pos:line="135" pos:column="24">(<argument><expr><name pos:line="135" pos:column="25">data<pos:position pos:line="135" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="31">CLIENTWRITE_BODY<pos:position pos:line="135" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="49">(<pos:position pos:line="135" pos:column="50"/></operator><name pos:line="135" pos:column="50">char<pos:position pos:line="135" pos:column="54"/></name> <operator pos:line="135" pos:column="55">*<pos:position pos:line="135" pos:column="56"/></operator><operator pos:line="135" pos:column="56">)<pos:position pos:line="135" pos:column="57"/></operator><literal type="string" pos:line="135" pos:column="57">"\n"<pos:position pos:line="135" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="63">1<pos:position pos:line="135" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="66"/></expr_stmt>

      <expr_stmt><expr><call pos:line="137" pos:column="7">(<modifier pos:line="137" pos:column="8">*<pos:position pos:line="137" pos:column="9"/></modifier><name pos:line="137" pos:column="9">ldap_memfree<pos:position pos:line="137" pos:column="21"/></name>)<argument_list pos:line="137" pos:column="22">(<argument><expr><name pos:line="137" pos:column="23">attribute<pos:position pos:line="137" pos:column="32"/></name></expr></argument>)<pos:position pos:line="137" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="138" pos:column="6"/></block></for>
    <expr_stmt><expr><call pos:line="139" pos:column="5">(<modifier pos:line="139" pos:column="6">*<pos:position pos:line="139" pos:column="7"/></modifier><name pos:line="139" pos:column="7">ldap_memfree<pos:position pos:line="139" pos:column="19"/></name>)<argument_list pos:line="139" pos:column="20">(<argument><expr><name pos:line="139" pos:column="21">dn<pos:position pos:line="139" pos:column="23"/></name></expr></argument>)<pos:position pos:line="139" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="25"/></expr_stmt>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">ber<pos:position pos:line="140" pos:column="12"/></name></expr>)<pos:position pos:line="140" pos:column="13"/></condition><then pos:line="140" pos:column="13">
       <block type="pseudo"><expr_stmt><expr><call pos:line="141" pos:column="8">(<modifier pos:line="141" pos:column="9">*<pos:position pos:line="141" pos:column="10"/></modifier><name pos:line="141" pos:column="10">ber_free<pos:position pos:line="141" pos:column="18"/></name>)<argument_list pos:line="141" pos:column="19">(<argument><expr><name pos:line="141" pos:column="20">ber<pos:position pos:line="141" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="25">0<pos:position pos:line="141" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="28"/></expr_stmt></block></then></if>
  }<pos:position pos:line="142" pos:column="4"/></block></for>

<label><name pos:line="144" pos:column="1">quit<pos:position pos:line="144" pos:column="5"/></name>:<pos:position pos:line="144" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="145" pos:column="3">LDAP_TRACE<pos:position pos:line="145" pos:column="13"/></name> <argument_list pos:line="145" pos:column="14">(<argument><expr><operator pos:line="145" pos:column="15">(<pos:position pos:line="145" pos:column="16"/></operator><literal type="string" pos:line="145" pos:column="16">"Received %d entries\n"<pos:position pos:line="145" pos:column="39"/></literal><operator pos:line="145" pos:column="39">,<pos:position pos:line="145" pos:column="40"/></operator> <name pos:line="145" pos:column="41">num<pos:position pos:line="145" pos:column="44"/></name><operator pos:line="145" pos:column="44">)<pos:position pos:line="145" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="145" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="47"/></expr_stmt>
  <if pos:line="146" pos:column="3">if <condition pos:line="146" pos:column="6">(<expr><name pos:line="146" pos:column="7">rc<pos:position pos:line="146" pos:column="9"/></name> <operator pos:line="146" pos:column="10">==<pos:position pos:line="146" pos:column="12"/></operator> <name pos:line="146" pos:column="13">LDAP_SIZELIMIT_EXCEEDED<pos:position pos:line="146" pos:column="36"/></name></expr>)<pos:position pos:line="146" pos:column="37"/></condition><then pos:line="146" pos:column="37">
     <block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="6">infof<pos:position pos:line="147" pos:column="11"/></name><argument_list pos:line="147" pos:column="11">(<argument><expr><name pos:line="147" pos:column="12">data<pos:position pos:line="147" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="18">"There are more than %d entries\n"<pos:position pos:line="147" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="54">num<pos:position pos:line="147" pos:column="57"/></name></expr></argument>)<pos:position pos:line="147" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="59"/></expr_stmt></block></then></if>
  <if pos:line="148" pos:column="3">if <condition pos:line="148" pos:column="6">(<expr><name pos:line="148" pos:column="7">ludp<pos:position pos:line="148" pos:column="11"/></name></expr>)<pos:position pos:line="148" pos:column="12"/></condition><then pos:line="148" pos:column="12">
     <block type="pseudo"><expr_stmt><expr><call pos:line="149" pos:column="6">(<modifier pos:line="149" pos:column="7">*<pos:position pos:line="149" pos:column="8"/></modifier><name pos:line="149" pos:column="8">ldap_free_urldesc<pos:position pos:line="149" pos:column="25"/></name>)<argument_list pos:line="149" pos:column="26">(<argument><expr><name pos:line="149" pos:column="27">ludp<pos:position pos:line="149" pos:column="31"/></name></expr></argument>)<pos:position pos:line="149" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="33"/></expr_stmt></block></then></if>
  <if pos:line="150" pos:column="3">if <condition pos:line="150" pos:column="6">(<expr><name pos:line="150" pos:column="7">server<pos:position pos:line="150" pos:column="13"/></name></expr>)<pos:position pos:line="150" pos:column="14"/></condition><then pos:line="150" pos:column="14">
     <block type="pseudo"><expr_stmt><expr><call pos:line="151" pos:column="6">(<modifier pos:line="151" pos:column="7">*<pos:position pos:line="151" pos:column="8"/></modifier><name pos:line="151" pos:column="8">ldap_unbind_s<pos:position pos:line="151" pos:column="21"/></name>)<argument_list pos:line="151" pos:column="22">(<argument><expr><name pos:line="151" pos:column="23">server<pos:position pos:line="151" pos:column="29"/></name></expr></argument>)<pos:position pos:line="151" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="31"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="153" pos:column="3">DynaClose<pos:position pos:line="153" pos:column="12"/></name><argument_list pos:line="153" pos:column="12">()<pos:position pos:line="153" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="155" pos:column="3">/* no data to transfer */</comment>
  <expr_stmt><expr><call><name pos:line="156" pos:column="3">Curl_Transfer<pos:position pos:line="156" pos:column="16"/></name><argument_list pos:line="156" pos:column="16">(<argument><expr><name pos:line="156" pos:column="17">conn<pos:position pos:line="156" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="156" pos:column="23">-<pos:position pos:line="156" pos:column="24"/></operator><literal type="number" pos:line="156" pos:column="24">1<pos:position pos:line="156" pos:column="25"/></literal></expr></argument>, <argument><expr><operator pos:line="156" pos:column="27">-<pos:position pos:line="156" pos:column="28"/></operator><literal type="number" pos:line="156" pos:column="28">1<pos:position pos:line="156" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="156" pos:column="31">FALSE<pos:position pos:line="156" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="38">NULL<pos:position pos:line="156" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="156" pos:column="44">-<pos:position pos:line="156" pos:column="45"/></operator><literal type="number" pos:line="156" pos:column="45">1<pos:position pos:line="156" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="156" pos:column="48">NULL<pos:position pos:line="156" pos:column="52"/></name></expr></argument>)<pos:position pos:line="156" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="157" pos:column="3">conn<pos:position pos:line="157" pos:column="7"/></name><operator pos:line="157" pos:column="7">-&gt;<pos:position pos:line="157" pos:column="12"/></operator><name pos:line="157" pos:column="9">bits<pos:position pos:line="157" pos:column="13"/></name><operator pos:line="157" pos:column="13">.<pos:position pos:line="157" pos:column="14"/></operator><name pos:line="157" pos:column="14">close<pos:position pos:line="157" pos:column="19"/></name></name> <operator pos:line="157" pos:column="20">=<pos:position pos:line="157" pos:column="21"/></operator> <name pos:line="157" pos:column="22">TRUE<pos:position pos:line="157" pos:column="26"/></name></expr>;<pos:position pos:line="157" pos:column="27"/></expr_stmt>

  <return pos:line="159" pos:column="3">return <expr><name pos:line="159" pos:column="10">status<pos:position pos:line="159" pos:column="16"/></name></expr>;<pos:position pos:line="159" pos:column="17"/></return>
}<pos:position pos:line="160" pos:column="2"/></block></function></unit>

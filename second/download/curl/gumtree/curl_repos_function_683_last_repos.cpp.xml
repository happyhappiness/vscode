<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_683_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">getflagstr<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">flags<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buf<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><call><name pos:line="3" pos:column="15">malloc<pos:position pos:line="3" pos:column="21"/></name><argument_list pos:line="3" pos:column="21">(<argument><expr><literal type="number" pos:line="3" pos:column="22">256<pos:position pos:line="3" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">buf<pos:position pos:line="4" pos:column="9"/></name></expr>)<pos:position pos:line="4" pos:column="10"/></condition><then pos:line="4" pos:column="10"> <block pos:line="4" pos:column="11">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">snprintf<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="19">256<pos:position pos:line="5" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="24">"%s,%s,%s,%s"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>,
      <argument><expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><ternary><condition><expr><operator pos:line="6" pos:column="8">(<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">flags<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&amp;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="17">SANITIZE_ALLOW_COLONS<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator></expr> ?<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41"> <expr><literal type="string" pos:line="6" pos:column="42">"SANITIZE_ALLOW_COLONS"<pos:position pos:line="6" pos:column="65"/></literal></expr> <pos:position pos:line="6" pos:column="66"/></then><else pos:line="6" pos:column="66">: <expr><literal type="string" pos:line="6" pos:column="68">""<pos:position pos:line="6" pos:column="70"/></literal></expr></else></ternary><operator pos:line="6" pos:column="70">)<pos:position pos:line="6" pos:column="71"/></operator></expr></argument>,
      <argument><expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><ternary><condition><expr><operator pos:line="7" pos:column="8">(<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">flags<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">&amp;<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="17">SANITIZE_ALLOW_PATH<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">)<pos:position pos:line="7" pos:column="37"/></operator></expr> ?<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <expr><literal type="string" pos:line="7" pos:column="40">"SANITIZE_ALLOW_PATH"<pos:position pos:line="7" pos:column="61"/></literal></expr> <pos:position pos:line="7" pos:column="62"/></then><else pos:line="7" pos:column="62">: <expr><literal type="string" pos:line="7" pos:column="64">""<pos:position pos:line="7" pos:column="66"/></literal></expr></else></ternary><operator pos:line="7" pos:column="66">)<pos:position pos:line="7" pos:column="67"/></operator></expr></argument>,
      <argument><expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><ternary><condition><expr><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">flags<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&amp;<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="17">SANITIZE_ALLOW_RESERVED<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator></expr> ?<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43"> <expr><literal type="string" pos:line="8" pos:column="44">"SANITIZE_ALLOW_RESERVED"<pos:position pos:line="8" pos:column="69"/></literal></expr> <pos:position pos:line="8" pos:column="70"/></then><else pos:line="8" pos:column="70">: <expr><literal type="string" pos:line="8" pos:column="72">""<pos:position pos:line="8" pos:column="74"/></literal></expr></else></ternary><operator pos:line="8" pos:column="74">)<pos:position pos:line="8" pos:column="75"/></operator></expr></argument>,
      <argument><expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><ternary><condition><expr><operator pos:line="9" pos:column="8">(<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="17">SANITIZE_ALLOW_TRUNCATE<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator></expr> ?<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <expr><literal type="string" pos:line="9" pos:column="44">"SANITIZE_ALLOW_TRUNCATE"<pos:position pos:line="9" pos:column="69"/></literal></expr> <pos:position pos:line="9" pos:column="70"/></then><else pos:line="9" pos:column="70">: <expr><literal type="string" pos:line="9" pos:column="72">""<pos:position pos:line="9" pos:column="74"/></literal></expr></else></ternary><operator pos:line="9" pos:column="74">)<pos:position pos:line="9" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">buf<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

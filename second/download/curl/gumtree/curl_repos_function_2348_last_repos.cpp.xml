<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2348_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_gssapi_user_message<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">Curl_easy<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">data<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">userp<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="3" pos:column="47">const<pos:position pos:line="3" pos:column="52"/></specifier> <name pos:line="3" pos:column="53">char<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">passwdp<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="4" pos:column="47">const<pos:position pos:line="4" pos:column="52"/></specifier> <name pos:line="4" pos:column="53">char<pos:position pos:line="4" pos:column="57"/></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">service<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="5" pos:column="47">const<pos:position pos:line="5" pos:column="52"/></specifier> <name pos:line="5" pos:column="53">char<pos:position pos:line="5" pos:column="57"/></name> <modifier pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></modifier></type><name pos:line="5" pos:column="59">host<pos:position pos:line="5" pos:column="63"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="6" pos:column="47">const<pos:position pos:line="6" pos:column="52"/></specifier> <name pos:line="6" pos:column="53">bool<pos:position pos:line="6" pos:column="57"/></name></type> <name pos:line="6" pos:column="58">mutual_auth<pos:position pos:line="6" pos:column="69"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="7" pos:column="47">const<pos:position pos:line="7" pos:column="52"/></specifier> <name pos:line="7" pos:column="53">char<pos:position pos:line="7" pos:column="57"/></name> <modifier pos:line="7" pos:column="58">*<pos:position pos:line="7" pos:column="59"/></modifier></type><name pos:line="7" pos:column="59">chlg64<pos:position pos:line="7" pos:column="65"/></name></decl></parameter>,
                                              <parameter><decl><type><name><name pos:line="8" pos:column="47">struct<pos:position pos:line="8" pos:column="53"/></name> <name pos:line="8" pos:column="54">kerberos5data<pos:position pos:line="8" pos:column="67"/></name></name> <modifier pos:line="8" pos:column="68">*<pos:position pos:line="8" pos:column="69"/></modifier></type><name pos:line="8" pos:column="69">krb5<pos:position pos:line="8" pos:column="73"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="9" pos:column="47">char<pos:position pos:line="9" pos:column="51"/></name> <modifier pos:line="9" pos:column="52">*<pos:position pos:line="9" pos:column="53"/></modifier><modifier pos:line="9" pos:column="53">*<pos:position pos:line="9" pos:column="54"/></modifier></type><name pos:line="9" pos:column="54">outptr<pos:position pos:line="9" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="9" pos:column="62">size_t<pos:position pos:line="9" pos:column="68"/></name> <modifier pos:line="9" pos:column="69">*<pos:position pos:line="9" pos:column="70"/></modifier></type><name pos:line="9" pos:column="70">outlen<pos:position pos:line="9" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="77"/></parameter_list>
<block pos:line="10" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">CURLcode<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">CURLE_OK<pos:position pos:line="11" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">chlglen<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">chlg<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">CtxtHandle<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">context<pos:position pos:line="14" pos:column="21"/></name></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">PSecPkgInfo<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">SecurityPackage<pos:position pos:line="15" pos:column="30"/></name></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">SecBuffer<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">chlg_buf<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">SecBuffer<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">resp_buf<pos:position pos:line="17" pos:column="21"/></name></decl>;<pos:position pos:line="17" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">SecBufferDesc<pos:position pos:line="18" pos:column="16"/></name></type> <name pos:line="18" pos:column="17">chlg_desc<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">SecBufferDesc<pos:position pos:line="19" pos:column="16"/></name></type> <name pos:line="19" pos:column="17">resp_desc<pos:position pos:line="19" pos:column="26"/></name></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">SECURITY_STATUS<pos:position pos:line="20" pos:column="18"/></name></type> <name pos:line="20" pos:column="19">status<pos:position pos:line="20" pos:column="25"/></name></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">unsigned<pos:position pos:line="21" pos:column="11"/></name> <name pos:line="21" pos:column="12">long<pos:position pos:line="21" pos:column="16"/></name></type> <name pos:line="21" pos:column="17">attrs<pos:position pos:line="21" pos:column="22"/></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">TimeStamp<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">expiry<pos:position pos:line="22" pos:column="19"/></name></decl>;<pos:position pos:line="22" pos:column="20"/></decl_stmt> <comment type="block" pos:line="22" pos:column="21">/* For Windows 9x compatibility of SSPI calls */</comment>

  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><name><name pos:line="24" pos:column="7">krb5<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">spn<pos:position pos:line="24" pos:column="16"/></name></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
    <comment type="block" pos:line="25" pos:column="5">/* Generate our SPN */</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">krb5<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">spn<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">Curl_auth_build_spn<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">service<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">host<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">NULL<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name><name pos:line="27" pos:column="9">krb5<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">spn<pos:position pos:line="27" pos:column="18"/></name></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">!<pos:position pos:line="31" pos:column="7"/></operator><name><name pos:line="31" pos:column="7">krb5<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">output_token<pos:position pos:line="31" pos:column="25"/></name></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26"> <block pos:line="31" pos:column="27">{
    <comment type="block" pos:line="32" pos:column="5">/* Query the security package for Kerberos */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">status<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name><name pos:line="33" pos:column="14">s_pSecFn<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">QuerySecurityPackageInfo<pos:position pos:line="33" pos:column="48"/></name></name><argument_list pos:line="33" pos:column="48">(<argument><expr><operator pos:line="33" pos:column="49">(<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">TCHAR<pos:position pos:line="33" pos:column="55"/></name> <operator pos:line="33" pos:column="56">*<pos:position pos:line="33" pos:column="57"/></operator><operator pos:line="33" pos:column="57">)<pos:position pos:line="33" pos:column="58"/></operator>
                                                <call><name pos:line="34" pos:column="49">TEXT<pos:position pos:line="34" pos:column="53"/></name><argument_list pos:line="34" pos:column="53">(<argument><expr><name pos:line="34" pos:column="54">SP_NAME_KERBEROS<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr></argument>,
                                                <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">SecurityPackage<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name pos:line="36" pos:column="8">status<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">!=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">SEC_E_OK<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <block pos:line="36" pos:column="28">{
      <return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">CURLE_NOT_BUILT_IN<pos:position pos:line="37" pos:column="32"/></name></expr>;<pos:position pos:line="37" pos:column="33"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">krb5<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">token_max<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name><name pos:line="40" pos:column="23">SecurityPackage<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">cbMaxToken<pos:position pos:line="40" pos:column="50"/></name></name></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Release the package buffer as it is not required anymore */</comment>
    <expr_stmt><expr><call><name><name pos:line="43" pos:column="5">s_pSecFn<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">FreeContextBuffer<pos:position pos:line="43" pos:column="32"/></name></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">SecurityPackage<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* Allocate our response buffer */</comment>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">krb5<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">output_token<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <call><name pos:line="46" pos:column="26">malloc<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">krb5<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">-&gt;<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="39">token_max<pos:position pos:line="46" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><operator pos:line="47" pos:column="8">!<pos:position pos:line="47" pos:column="9"/></operator><name><name pos:line="47" pos:column="9">krb5<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">output_token<pos:position pos:line="47" pos:column="27"/></name></name></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28">
      <block type="pseudo"><return pos:line="48" pos:column="7">return <expr><name pos:line="48" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name><name pos:line="51" pos:column="7">krb5<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">credentials<pos:position pos:line="51" pos:column="24"/></name></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25"> <block pos:line="51" pos:column="26">{
    <comment type="block" pos:line="52" pos:column="5">/* Do we have credientials to use or are we using single sign-on? */</comment>
    <if pos:line="53" pos:column="5">if<condition pos:line="53" pos:column="7">(<expr><name pos:line="53" pos:column="8">userp<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">&amp;&amp;<pos:position pos:line="53" pos:column="24"/></operator> <operator pos:line="53" pos:column="17">*<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">userp<pos:position pos:line="53" pos:column="23"/></name></expr>)<pos:position pos:line="53" pos:column="24"/></condition><then pos:line="53" pos:column="24"> <block pos:line="53" pos:column="25">{
      <comment type="block" pos:line="54" pos:column="7">/* Populate our identity structure */</comment>
      <expr_stmt><expr><name pos:line="55" pos:column="7">result<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">Curl_create_sspi_identity<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name pos:line="55" pos:column="42">userp<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="49">passwdp<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="58">&amp;<pos:position pos:line="55" pos:column="63"/></operator><name><name pos:line="55" pos:column="59">krb5<pos:position pos:line="55" pos:column="63"/></name><operator pos:line="55" pos:column="63">-&gt;<pos:position pos:line="55" pos:column="68"/></operator><name pos:line="55" pos:column="65">identity<pos:position pos:line="55" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>
      <if pos:line="56" pos:column="7">if<condition pos:line="56" pos:column="9">(<expr><name pos:line="56" pos:column="10">result<pos:position pos:line="56" pos:column="16"/></name></expr>)<pos:position pos:line="56" pos:column="17"/></condition><then pos:line="56" pos:column="17">
        <block type="pseudo"><return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">result<pos:position pos:line="57" pos:column="22"/></name></expr>;<pos:position pos:line="57" pos:column="23"/></return></block></then></if>

      <comment type="block" pos:line="59" pos:column="7">/* Allow proper cleanup of the identity structure */</comment>
      <expr_stmt><expr><name><name pos:line="60" pos:column="7">krb5<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">p_identity<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">=<pos:position pos:line="60" pos:column="25"/></operator> <operator pos:line="60" pos:column="26">&amp;<pos:position pos:line="60" pos:column="31"/></operator><name><name pos:line="60" pos:column="27">krb5<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">identity<pos:position pos:line="60" pos:column="41"/></name></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then>
    <else pos:line="62" pos:column="5">else
      <comment type="block" pos:line="63" pos:column="7">/* Use the current Windows user */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="7">krb5<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">-&gt;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="13">p_identity<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">NULL<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="66" pos:column="5">/* Allocate our credentials handle */</comment>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">krb5<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">credentials<pos:position pos:line="67" pos:column="22"/></name></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">malloc<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><sizeof pos:line="67" pos:column="32">sizeof<argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">CredHandle<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><operator pos:line="68" pos:column="8">!<pos:position pos:line="68" pos:column="9"/></operator><name><name pos:line="68" pos:column="9">krb5<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">credentials<pos:position pos:line="68" pos:column="26"/></name></name></expr>)<pos:position pos:line="68" pos:column="27"/></condition><then pos:line="68" pos:column="27">
      <block type="pseudo"><return pos:line="69" pos:column="7">return <expr><name pos:line="69" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">memset<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><name><name pos:line="71" pos:column="12">krb5<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">-&gt;<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="18">credentials<pos:position pos:line="71" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="31">0<pos:position pos:line="71" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="34">sizeof<argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">CredHandle<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="73" pos:column="5">/* Acquire our credentials handle */</comment>
    <expr_stmt><expr><name pos:line="74" pos:column="5">status<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <call><name><name pos:line="74" pos:column="14">s_pSecFn<pos:position pos:line="74" pos:column="22"/></name><operator pos:line="74" pos:column="22">-&gt;<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="24">AcquireCredentialsHandle<pos:position pos:line="74" pos:column="48"/></name></name><argument_list pos:line="74" pos:column="48">(<argument><expr><name pos:line="74" pos:column="49">NULL<pos:position pos:line="74" pos:column="53"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="75" pos:column="49">(<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="50">TCHAR<pos:position pos:line="75" pos:column="55"/></name> <operator pos:line="75" pos:column="56">*<pos:position pos:line="75" pos:column="57"/></operator><operator pos:line="75" pos:column="57">)<pos:position pos:line="75" pos:column="58"/></operator>
                                                <call><name pos:line="76" pos:column="49">TEXT<pos:position pos:line="76" pos:column="53"/></name><argument_list pos:line="76" pos:column="53">(<argument><expr><name pos:line="76" pos:column="54">SP_NAME_KERBEROS<pos:position pos:line="76" pos:column="70"/></name></expr></argument>)<pos:position pos:line="76" pos:column="71"/></argument_list></call></expr></argument>,
                                                <argument><expr><name pos:line="77" pos:column="49">SECPKG_CRED_OUTBOUND<pos:position pos:line="77" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="71">NULL<pos:position pos:line="77" pos:column="75"/></name></expr></argument>,
                                                <argument><expr><name><name pos:line="78" pos:column="49">krb5<pos:position pos:line="78" pos:column="53"/></name><operator pos:line="78" pos:column="53">-&gt;<pos:position pos:line="78" pos:column="58"/></operator><name pos:line="78" pos:column="55">p_identity<pos:position pos:line="78" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="67">NULL<pos:position pos:line="78" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="73">NULL<pos:position pos:line="78" pos:column="77"/></name></expr></argument>,
                                                <argument><expr><name><name pos:line="79" pos:column="49">krb5<pos:position pos:line="79" pos:column="53"/></name><operator pos:line="79" pos:column="53">-&gt;<pos:position pos:line="79" pos:column="58"/></operator><name pos:line="79" pos:column="55">credentials<pos:position pos:line="79" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="68">&amp;<pos:position pos:line="79" pos:column="73"/></operator><name pos:line="79" pos:column="69">expiry<pos:position pos:line="79" pos:column="75"/></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt>
    <if pos:line="80" pos:column="5">if<condition pos:line="80" pos:column="7">(<expr><name pos:line="80" pos:column="8">status<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">!=<pos:position pos:line="80" pos:column="17"/></operator> <name pos:line="80" pos:column="18">SEC_E_OK<pos:position pos:line="80" pos:column="26"/></name></expr>)<pos:position pos:line="80" pos:column="27"/></condition><then pos:line="80" pos:column="27">
      <block type="pseudo"><return pos:line="81" pos:column="7">return <expr><name pos:line="81" pos:column="14">CURLE_LOGIN_DENIED<pos:position pos:line="81" pos:column="32"/></name></expr>;<pos:position pos:line="81" pos:column="33"/></return></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/* Allocate our new context handle */</comment>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">krb5<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">context<pos:position pos:line="84" pos:column="18"/></name></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <call><name pos:line="84" pos:column="21">malloc<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><sizeof pos:line="84" pos:column="28">sizeof<argument_list pos:line="84" pos:column="34">(<argument><expr><name pos:line="84" pos:column="35">CtxtHandle<pos:position pos:line="84" pos:column="45"/></name></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="48"/></expr_stmt>
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><operator pos:line="85" pos:column="8">!<pos:position pos:line="85" pos:column="9"/></operator><name><name pos:line="85" pos:column="9">krb5<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">-&gt;<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="15">context<pos:position pos:line="85" pos:column="22"/></name></name></expr>)<pos:position pos:line="85" pos:column="23"/></condition><then pos:line="85" pos:column="23">
      <block type="pseudo"><return pos:line="86" pos:column="7">return <expr><name pos:line="86" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="86" pos:column="33"/></name></expr>;<pos:position pos:line="86" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="88" pos:column="5">memset<pos:position pos:line="88" pos:column="11"/></name><argument_list pos:line="88" pos:column="11">(<argument><expr><name><name pos:line="88" pos:column="12">krb5<pos:position pos:line="88" pos:column="16"/></name><operator pos:line="88" pos:column="16">-&gt;<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="18">context<pos:position pos:line="88" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="27">0<pos:position pos:line="88" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="30">sizeof<argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">CtxtHandle<pos:position pos:line="88" pos:column="47"/></name></expr></argument>)<pos:position pos:line="88" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <if pos:line="91" pos:column="3">if<condition pos:line="91" pos:column="5">(<expr><name pos:line="91" pos:column="6">chlg64<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">&amp;&amp;<pos:position pos:line="91" pos:column="23"/></operator> <operator pos:line="91" pos:column="16">*<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="17">chlg64<pos:position pos:line="91" pos:column="23"/></name></expr>)<pos:position pos:line="91" pos:column="24"/></condition><then pos:line="91" pos:column="24"> <block pos:line="91" pos:column="25">{
    <comment type="block" pos:line="92" pos:column="5">/* Decode the base-64 encoded challenge message */</comment>
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><operator pos:line="93" pos:column="8">*<pos:position pos:line="93" pos:column="9"/></operator><name pos:line="93" pos:column="9">chlg64<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">!=<pos:position pos:line="93" pos:column="18"/></operator> <literal type="char" pos:line="93" pos:column="19">'='<pos:position pos:line="93" pos:column="22"/></literal></expr>)<pos:position pos:line="93" pos:column="23"/></condition><then pos:line="93" pos:column="23"> <block pos:line="93" pos:column="24">{
      <expr_stmt><expr><name pos:line="94" pos:column="7">result<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <call><name pos:line="94" pos:column="16">Curl_base64_decode<pos:position pos:line="94" pos:column="34"/></name><argument_list pos:line="94" pos:column="34">(<argument><expr><name pos:line="94" pos:column="35">chlg64<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="43">&amp;<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="44">chlg<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="50">&amp;<pos:position pos:line="94" pos:column="55"/></operator><name pos:line="94" pos:column="51">chlglen<pos:position pos:line="94" pos:column="58"/></name></expr></argument>)<pos:position pos:line="94" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="60"/></expr_stmt>
      <if pos:line="95" pos:column="7">if<condition pos:line="95" pos:column="9">(<expr><name pos:line="95" pos:column="10">result<pos:position pos:line="95" pos:column="16"/></name></expr>)<pos:position pos:line="95" pos:column="17"/></condition><then pos:line="95" pos:column="17">
        <block type="pseudo"><return pos:line="96" pos:column="9">return <expr><name pos:line="96" pos:column="16">result<pos:position pos:line="96" pos:column="22"/></name></expr>;<pos:position pos:line="96" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="99" pos:column="5">/* Ensure we have a valid challenge message */</comment>
    <if pos:line="100" pos:column="5">if<condition pos:line="100" pos:column="7">(<expr><operator pos:line="100" pos:column="8">!<pos:position pos:line="100" pos:column="9"/></operator><name pos:line="100" pos:column="9">chlg<pos:position pos:line="100" pos:column="13"/></name></expr>)<pos:position pos:line="100" pos:column="14"/></condition><then pos:line="100" pos:column="14"> <block pos:line="100" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">infof<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">data<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="19">"GSSAPI handshake failure (empty challenge message)\n"<pos:position pos:line="101" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="75"/></expr_stmt>

      <return pos:line="103" pos:column="7">return <expr><name pos:line="103" pos:column="14">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="103" pos:column="40"/></name></expr>;<pos:position pos:line="103" pos:column="41"/></return>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="106" pos:column="5">/* Setup the challenge "input" security buffer */</comment>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">chlg_desc<pos:position pos:line="107" pos:column="14"/></name><operator pos:line="107" pos:column="14">.<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="15">ulVersion<pos:position pos:line="107" pos:column="24"/></name></name> <operator pos:line="107" pos:column="25">=<pos:position pos:line="107" pos:column="26"/></operator> <name pos:line="107" pos:column="27">SECBUFFER_VERSION<pos:position pos:line="107" pos:column="44"/></name></expr>;<pos:position pos:line="107" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">chlg_desc<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">.<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="15">cBuffers<pos:position pos:line="108" pos:column="23"/></name></name>  <operator pos:line="108" pos:column="25">=<pos:position pos:line="108" pos:column="26"/></operator> <literal type="number" pos:line="108" pos:column="27">1<pos:position pos:line="108" pos:column="28"/></literal></expr>;<pos:position pos:line="108" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="109" pos:column="5">chlg_desc<pos:position pos:line="109" pos:column="14"/></name><operator pos:line="109" pos:column="14">.<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="15">pBuffers<pos:position pos:line="109" pos:column="23"/></name></name>  <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <operator pos:line="109" pos:column="27">&amp;<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="28">chlg_buf<pos:position pos:line="109" pos:column="36"/></name></expr>;<pos:position pos:line="109" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="110" pos:column="5">chlg_buf<pos:position pos:line="110" pos:column="13"/></name><operator pos:line="110" pos:column="13">.<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="14">BufferType<pos:position pos:line="110" pos:column="24"/></name></name> <operator pos:line="110" pos:column="25">=<pos:position pos:line="110" pos:column="26"/></operator> <name pos:line="110" pos:column="27">SECBUFFER_TOKEN<pos:position pos:line="110" pos:column="42"/></name></expr>;<pos:position pos:line="110" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">chlg_buf<pos:position pos:line="111" pos:column="13"/></name><operator pos:line="111" pos:column="13">.<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="14">pvBuffer<pos:position pos:line="111" pos:column="22"/></name></name>   <operator pos:line="111" pos:column="25">=<pos:position pos:line="111" pos:column="26"/></operator> <name pos:line="111" pos:column="27">chlg<pos:position pos:line="111" pos:column="31"/></name></expr>;<pos:position pos:line="111" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="112" pos:column="5">chlg_buf<pos:position pos:line="112" pos:column="13"/></name><operator pos:line="112" pos:column="13">.<pos:position pos:line="112" pos:column="14"/></operator><name pos:line="112" pos:column="14">cbBuffer<pos:position pos:line="112" pos:column="22"/></name></name>   <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <call><name pos:line="112" pos:column="27">curlx_uztoul<pos:position pos:line="112" pos:column="39"/></name><argument_list pos:line="112" pos:column="39">(<argument><expr><name pos:line="112" pos:column="40">chlglen<pos:position pos:line="112" pos:column="47"/></name></expr></argument>)<pos:position pos:line="112" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="113" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="115" pos:column="3">/* Setup the response "output" security buffer */</comment>
  <expr_stmt><expr><name><name pos:line="116" pos:column="3">resp_desc<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">.<pos:position pos:line="116" pos:column="13"/></operator><name pos:line="116" pos:column="13">ulVersion<pos:position pos:line="116" pos:column="22"/></name></name> <operator pos:line="116" pos:column="23">=<pos:position pos:line="116" pos:column="24"/></operator> <name pos:line="116" pos:column="25">SECBUFFER_VERSION<pos:position pos:line="116" pos:column="42"/></name></expr>;<pos:position pos:line="116" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="117" pos:column="3">resp_desc<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">.<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">cBuffers<pos:position pos:line="117" pos:column="21"/></name></name>  <operator pos:line="117" pos:column="23">=<pos:position pos:line="117" pos:column="24"/></operator> <literal type="number" pos:line="117" pos:column="25">1<pos:position pos:line="117" pos:column="26"/></literal></expr>;<pos:position pos:line="117" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="118" pos:column="3">resp_desc<pos:position pos:line="118" pos:column="12"/></name><operator pos:line="118" pos:column="12">.<pos:position pos:line="118" pos:column="13"/></operator><name pos:line="118" pos:column="13">pBuffers<pos:position pos:line="118" pos:column="21"/></name></name>  <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <operator pos:line="118" pos:column="25">&amp;<pos:position pos:line="118" pos:column="30"/></operator><name pos:line="118" pos:column="26">resp_buf<pos:position pos:line="118" pos:column="34"/></name></expr>;<pos:position pos:line="118" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="119" pos:column="3">resp_buf<pos:position pos:line="119" pos:column="11"/></name><operator pos:line="119" pos:column="11">.<pos:position pos:line="119" pos:column="12"/></operator><name pos:line="119" pos:column="12">BufferType<pos:position pos:line="119" pos:column="22"/></name></name> <operator pos:line="119" pos:column="23">=<pos:position pos:line="119" pos:column="24"/></operator> <name pos:line="119" pos:column="25">SECBUFFER_TOKEN<pos:position pos:line="119" pos:column="40"/></name></expr>;<pos:position pos:line="119" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="120" pos:column="3">resp_buf<pos:position pos:line="120" pos:column="11"/></name><operator pos:line="120" pos:column="11">.<pos:position pos:line="120" pos:column="12"/></operator><name pos:line="120" pos:column="12">pvBuffer<pos:position pos:line="120" pos:column="20"/></name></name>   <operator pos:line="120" pos:column="23">=<pos:position pos:line="120" pos:column="24"/></operator> <name><name pos:line="120" pos:column="25">krb5<pos:position pos:line="120" pos:column="29"/></name><operator pos:line="120" pos:column="29">-&gt;<pos:position pos:line="120" pos:column="34"/></operator><name pos:line="120" pos:column="31">output_token<pos:position pos:line="120" pos:column="43"/></name></name></expr>;<pos:position pos:line="120" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="121" pos:column="3">resp_buf<pos:position pos:line="121" pos:column="11"/></name><operator pos:line="121" pos:column="11">.<pos:position pos:line="121" pos:column="12"/></operator><name pos:line="121" pos:column="12">cbBuffer<pos:position pos:line="121" pos:column="20"/></name></name>   <operator pos:line="121" pos:column="23">=<pos:position pos:line="121" pos:column="24"/></operator> <call><name pos:line="121" pos:column="25">curlx_uztoul<pos:position pos:line="121" pos:column="37"/></name><argument_list pos:line="121" pos:column="37">(<argument><expr><name><name pos:line="121" pos:column="38">krb5<pos:position pos:line="121" pos:column="42"/></name><operator pos:line="121" pos:column="42">-&gt;<pos:position pos:line="121" pos:column="47"/></operator><name pos:line="121" pos:column="44">token_max<pos:position pos:line="121" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="123" pos:column="3">/* Generate our challenge-response message */</comment>
  <expr_stmt><expr><name pos:line="124" pos:column="3">status<pos:position pos:line="124" pos:column="9"/></name> <operator pos:line="124" pos:column="10">=<pos:position pos:line="124" pos:column="11"/></operator> <call><name><name pos:line="124" pos:column="12">s_pSecFn<pos:position pos:line="124" pos:column="20"/></name><operator pos:line="124" pos:column="20">-&gt;<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="22">InitializeSecurityContext<pos:position pos:line="124" pos:column="47"/></name></name><argument_list pos:line="124" pos:column="47">(<argument><expr><name><name pos:line="124" pos:column="48">krb5<pos:position pos:line="124" pos:column="52"/></name><operator pos:line="124" pos:column="52">-&gt;<pos:position pos:line="124" pos:column="57"/></operator><name pos:line="124" pos:column="54">credentials<pos:position pos:line="124" pos:column="65"/></name></name></expr></argument>,
                                               <argument><expr><ternary><condition><expr><name pos:line="125" pos:column="48">chlg<pos:position pos:line="125" pos:column="52"/></name></expr> ?<pos:position pos:line="125" pos:column="54"/></condition><then pos:line="125" pos:column="54"> <expr><name><name pos:line="125" pos:column="55">krb5<pos:position pos:line="125" pos:column="59"/></name><operator pos:line="125" pos:column="59">-&gt;<pos:position pos:line="125" pos:column="64"/></operator><name pos:line="125" pos:column="61">context<pos:position pos:line="125" pos:column="68"/></name></name></expr> <pos:position pos:line="125" pos:column="69"/></then><else pos:line="125" pos:column="69">: <expr><name pos:line="125" pos:column="71">NULL<pos:position pos:line="125" pos:column="75"/></name></expr></else></ternary></expr></argument>,
                                               <argument><expr><name><name pos:line="126" pos:column="48">krb5<pos:position pos:line="126" pos:column="52"/></name><operator pos:line="126" pos:column="52">-&gt;<pos:position pos:line="126" pos:column="57"/></operator><name pos:line="126" pos:column="54">spn<pos:position pos:line="126" pos:column="57"/></name></name></expr></argument>,
                                               <argument><expr><operator pos:line="127" pos:column="48">(<pos:position pos:line="127" pos:column="49"/></operator><ternary><condition><expr><name pos:line="127" pos:column="49">mutual_auth<pos:position pos:line="127" pos:column="60"/></name></expr> ?<pos:position pos:line="127" pos:column="62"/></condition><then pos:line="127" pos:column="62">
                                                <expr><name pos:line="128" pos:column="49">ISC_REQ_MUTUAL_AUTH<pos:position pos:line="128" pos:column="68"/></name></expr> <pos:position pos:line="128" pos:column="69"/></then><else pos:line="128" pos:column="69">: <expr><literal type="number" pos:line="128" pos:column="71">0<pos:position pos:line="128" pos:column="72"/></literal></expr></else></ternary><operator pos:line="128" pos:column="72">)<pos:position pos:line="128" pos:column="73"/></operator></expr></argument>,
                                               <argument><expr><literal type="number" pos:line="129" pos:column="48">0<pos:position pos:line="129" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">SECURITY_NATIVE_DREP<pos:position pos:line="129" pos:column="71"/></name></expr></argument>,
                                               <argument><expr><ternary><condition><expr><name pos:line="130" pos:column="48">chlg<pos:position pos:line="130" pos:column="52"/></name></expr> ?<pos:position pos:line="130" pos:column="54"/></condition><then pos:line="130" pos:column="54"> <expr><operator pos:line="130" pos:column="55">&amp;<pos:position pos:line="130" pos:column="60"/></operator><name pos:line="130" pos:column="56">chlg_desc<pos:position pos:line="130" pos:column="65"/></name></expr> <pos:position pos:line="130" pos:column="66"/></then><else pos:line="130" pos:column="66">: <expr><name pos:line="130" pos:column="68">NULL<pos:position pos:line="130" pos:column="72"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="74">0<pos:position pos:line="130" pos:column="75"/></literal></expr></argument>,
                                               <argument><expr><operator pos:line="131" pos:column="48">&amp;<pos:position pos:line="131" pos:column="53"/></operator><name pos:line="131" pos:column="49">context<pos:position pos:line="131" pos:column="56"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="132" pos:column="48">&amp;<pos:position pos:line="132" pos:column="53"/></operator><name pos:line="132" pos:column="49">resp_desc<pos:position pos:line="132" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="60">&amp;<pos:position pos:line="132" pos:column="65"/></operator><name pos:line="132" pos:column="61">attrs<pos:position pos:line="132" pos:column="66"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="133" pos:column="48">&amp;<pos:position pos:line="133" pos:column="53"/></operator><name pos:line="133" pos:column="49">expiry<pos:position pos:line="133" pos:column="55"/></name></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="57"/></expr_stmt>

  <comment type="block" pos:line="135" pos:column="3">/* Free the decoded challenge as it is not required anymore */</comment>
  <expr_stmt><expr><call><name pos:line="136" pos:column="3">free<pos:position pos:line="136" pos:column="7"/></name><argument_list pos:line="136" pos:column="7">(<argument><expr><name pos:line="136" pos:column="8">chlg<pos:position pos:line="136" pos:column="12"/></name></expr></argument>)<pos:position pos:line="136" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="14"/></expr_stmt>

  <if pos:line="138" pos:column="3">if<condition pos:line="138" pos:column="5">(<expr><name pos:line="138" pos:column="6">status<pos:position pos:line="138" pos:column="12"/></name> <operator pos:line="138" pos:column="13">!=<pos:position pos:line="138" pos:column="15"/></operator> <name pos:line="138" pos:column="16">SEC_E_OK<pos:position pos:line="138" pos:column="24"/></name> <operator pos:line="138" pos:column="25">&amp;&amp;<pos:position pos:line="138" pos:column="35"/></operator> <name pos:line="138" pos:column="28">status<pos:position pos:line="138" pos:column="34"/></name> <operator pos:line="138" pos:column="35">!=<pos:position pos:line="138" pos:column="37"/></operator> <name pos:line="138" pos:column="38">SEC_I_CONTINUE_NEEDED<pos:position pos:line="138" pos:column="59"/></name></expr>)<pos:position pos:line="138" pos:column="60"/></condition><then pos:line="138" pos:column="60"> <block pos:line="138" pos:column="61">{
    <return pos:line="139" pos:column="5">return <expr><name pos:line="139" pos:column="12">CURLE_RECV_ERROR<pos:position pos:line="139" pos:column="28"/></name></expr>;<pos:position pos:line="139" pos:column="29"/></return>
  }<pos:position pos:line="140" pos:column="4"/></block></then></if>

  <if pos:line="142" pos:column="3">if<condition pos:line="142" pos:column="5">(<expr><call><name pos:line="142" pos:column="6">memcmp<pos:position pos:line="142" pos:column="12"/></name><argument_list pos:line="142" pos:column="12">(<argument><expr><operator pos:line="142" pos:column="13">&amp;<pos:position pos:line="142" pos:column="18"/></operator><name pos:line="142" pos:column="14">context<pos:position pos:line="142" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="23">krb5<pos:position pos:line="142" pos:column="27"/></name><operator pos:line="142" pos:column="27">-&gt;<pos:position pos:line="142" pos:column="32"/></operator><name pos:line="142" pos:column="29">context<pos:position pos:line="142" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="38">sizeof<argument_list pos:line="142" pos:column="44">(<argument><expr><name pos:line="142" pos:column="45">context<pos:position pos:line="142" pos:column="52"/></name></expr></argument>)<pos:position pos:line="142" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="55"/></condition><then pos:line="142" pos:column="55"> <block pos:line="142" pos:column="56">{
    <expr_stmt><expr><call><name><name pos:line="143" pos:column="5">s_pSecFn<pos:position pos:line="143" pos:column="13"/></name><operator pos:line="143" pos:column="13">-&gt;<pos:position pos:line="143" pos:column="18"/></operator><name pos:line="143" pos:column="15">DeleteSecurityContext<pos:position pos:line="143" pos:column="36"/></name></name><argument_list pos:line="143" pos:column="36">(<argument><expr><name><name pos:line="143" pos:column="37">krb5<pos:position pos:line="143" pos:column="41"/></name><operator pos:line="143" pos:column="41">-&gt;<pos:position pos:line="143" pos:column="46"/></operator><name pos:line="143" pos:column="43">context<pos:position pos:line="143" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="145" pos:column="5">memcpy<pos:position pos:line="145" pos:column="11"/></name><argument_list pos:line="145" pos:column="11">(<argument><expr><name><name pos:line="145" pos:column="12">krb5<pos:position pos:line="145" pos:column="16"/></name><operator pos:line="145" pos:column="16">-&gt;<pos:position pos:line="145" pos:column="21"/></operator><name pos:line="145" pos:column="18">context<pos:position pos:line="145" pos:column="25"/></name></name></expr></argument>, <argument><expr><operator pos:line="145" pos:column="27">&amp;<pos:position pos:line="145" pos:column="32"/></operator><name pos:line="145" pos:column="28">context<pos:position pos:line="145" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="145" pos:column="37">sizeof<argument_list pos:line="145" pos:column="43">(<argument><expr><name pos:line="145" pos:column="44">context<pos:position pos:line="145" pos:column="51"/></name></expr></argument>)<pos:position pos:line="145" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="145" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="146" pos:column="4"/></block></then></if>

  <if pos:line="148" pos:column="3">if<condition pos:line="148" pos:column="5">(<expr><name><name pos:line="148" pos:column="6">resp_buf<pos:position pos:line="148" pos:column="14"/></name><operator pos:line="148" pos:column="14">.<pos:position pos:line="148" pos:column="15"/></operator><name pos:line="148" pos:column="15">cbBuffer<pos:position pos:line="148" pos:column="23"/></name></name></expr>)<pos:position pos:line="148" pos:column="24"/></condition><then pos:line="148" pos:column="24"> <block pos:line="148" pos:column="25">{
    <comment type="block" pos:line="149" pos:column="5">/* Base64 encode the response */</comment>
    <expr_stmt><expr><name pos:line="150" pos:column="5">result<pos:position pos:line="150" pos:column="11"/></name> <operator pos:line="150" pos:column="12">=<pos:position pos:line="150" pos:column="13"/></operator> <call><name pos:line="150" pos:column="14">Curl_base64_encode<pos:position pos:line="150" pos:column="32"/></name><argument_list pos:line="150" pos:column="32">(<argument><expr><name pos:line="150" pos:column="33">data<pos:position pos:line="150" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="39">(<pos:position pos:line="150" pos:column="40"/></operator><name pos:line="150" pos:column="40">char<pos:position pos:line="150" pos:column="44"/></name> <operator pos:line="150" pos:column="45">*<pos:position pos:line="150" pos:column="46"/></operator><operator pos:line="150" pos:column="46">)<pos:position pos:line="150" pos:column="47"/></operator> <name><name pos:line="150" pos:column="48">resp_buf<pos:position pos:line="150" pos:column="56"/></name><operator pos:line="150" pos:column="56">.<pos:position pos:line="150" pos:column="57"/></operator><name pos:line="150" pos:column="57">pvBuffer<pos:position pos:line="150" pos:column="65"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="151" pos:column="33">resp_buf<pos:position pos:line="151" pos:column="41"/></name><operator pos:line="151" pos:column="41">.<pos:position pos:line="151" pos:column="42"/></operator><name pos:line="151" pos:column="42">cbBuffer<pos:position pos:line="151" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="52">outptr<pos:position pos:line="151" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="60">outlen<pos:position pos:line="151" pos:column="66"/></name></expr></argument>)<pos:position pos:line="151" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="152" pos:column="4"/></block></then>
  <elseif pos:line="153" pos:column="3">else <if pos:line="153" pos:column="8">if<condition pos:line="153" pos:column="10">(<expr><name pos:line="153" pos:column="11">mutual_auth<pos:position pos:line="153" pos:column="22"/></name></expr>)<pos:position pos:line="153" pos:column="23"/></condition><then pos:line="153" pos:column="23"> <block pos:line="153" pos:column="24">{
    <expr_stmt><expr><operator pos:line="154" pos:column="5">*<pos:position pos:line="154" pos:column="6"/></operator><name pos:line="154" pos:column="6">outptr<pos:position pos:line="154" pos:column="12"/></name> <operator pos:line="154" pos:column="13">=<pos:position pos:line="154" pos:column="14"/></operator> <call><name pos:line="154" pos:column="15">strdup<pos:position pos:line="154" pos:column="21"/></name><argument_list pos:line="154" pos:column="21">(<argument><expr><literal type="string" pos:line="154" pos:column="22">""<pos:position pos:line="154" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="26"/></expr_stmt>
    <if pos:line="155" pos:column="5">if<condition pos:line="155" pos:column="7">(<expr><operator pos:line="155" pos:column="8">!<pos:position pos:line="155" pos:column="9"/></operator><operator pos:line="155" pos:column="9">*<pos:position pos:line="155" pos:column="10"/></operator><name pos:line="155" pos:column="10">outptr<pos:position pos:line="155" pos:column="16"/></name></expr>)<pos:position pos:line="155" pos:column="17"/></condition><then pos:line="155" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="7">result<pos:position pos:line="156" pos:column="13"/></name> <operator pos:line="156" pos:column="14">=<pos:position pos:line="156" pos:column="15"/></operator> <name pos:line="156" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="156" pos:column="35"/></name></expr>;<pos:position pos:line="156" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="157" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="159" pos:column="3">return <expr><name pos:line="159" pos:column="10">result<pos:position pos:line="159" pos:column="16"/></name></expr>;<pos:position pos:line="159" pos:column="17"/></return>
}<pos:position pos:line="160" pos:column="2"/></block></function></unit>

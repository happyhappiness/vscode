<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_453.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLMcode<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">curl_multi_fdset<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">CURLM<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">multi_handle<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">fd_set<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">read_fd_set<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">fd_set<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">write_fd_set<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">fd_set<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">exc_fd_set<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">int<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">max_fd<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <comment type="block" pos:line="5" pos:column="3">/* Scan through all the easy handles to get the file descriptors set.
     Some easy handles may not have connected to the remote host yet,
     and then we must make sure that is done. */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">Curl_multi<pos:position pos:line="8" pos:column="20"/></name></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">multi<pos:position pos:line="8" pos:column="27"/></name><init pos:line="8" pos:column="27">=<expr><operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator>struct <name pos:line="8" pos:column="36">Curl_multi<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">*<pos:position pos:line="8" pos:column="48"/></operator><operator pos:line="8" pos:column="48">)<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">multi_handle<pos:position pos:line="8" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">Curl_one_easy<pos:position pos:line="9" pos:column="23"/></name></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">easy<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">this_max_fd<pos:position pos:line="10" pos:column="18"/></name><init pos:line="10" pos:column="18">=<expr><operator pos:line="10" pos:column="19">-<pos:position pos:line="10" pos:column="20"/></operator><literal type="number" pos:line="10" pos:column="20">1<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><call><name pos:line="12" pos:column="7">GOOD_MULTI_HANDLE<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">multi<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLM_BAD_HANDLE<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><name pos:line="15" pos:column="4">max_fd<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt> <comment type="block" pos:line="15" pos:column="17">/* so far none! */</comment>

  <expr_stmt><expr><name pos:line="17" pos:column="3">easy<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator><name><name pos:line="17" pos:column="8">multi<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">easy<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">.<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">next<pos:position pos:line="17" pos:column="24"/></name></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
  <while pos:line="18" pos:column="3">while<condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">easy<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition> <block pos:line="18" pos:column="15">{
    <switch pos:line="19" pos:column="5">switch<condition pos:line="19" pos:column="11">(<expr><name><name pos:line="19" pos:column="12">easy<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">state<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition> <block pos:line="19" pos:column="25">{
    <default pos:line="20" pos:column="5">default:<pos:position pos:line="20" pos:column="13"/></default>
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">CURLM_STATE_WAITRESOLVE<pos:position pos:line="22" pos:column="33"/></name></expr>:<pos:position pos:line="22" pos:column="34"/></case>
      <comment type="block" pos:line="23" pos:column="7">/* waiting for a resolve to complete */</comment>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">Curl_resolv_fdset<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">easy<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">easy_conn<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">read_fd_set<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">write_fd_set<pos:position pos:line="24" pos:column="67"/></name></expr></argument>,
                        <argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="26">this_max_fd<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
      <if pos:line="26" pos:column="7">if<condition pos:line="26" pos:column="9">(<expr><name pos:line="26" pos:column="10">this_max_fd<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">&gt;<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">max_fd<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">max_fd<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">this_max_fd<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt></block></then></if>
      <break pos:line="28" pos:column="7">break;<pos:position pos:line="28" pos:column="13"/></break>

    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">CURLM_STATE_PROTOCONNECT<pos:position pos:line="30" pos:column="34"/></name></expr>:<pos:position pos:line="30" pos:column="35"/></case>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">Curl_protocol_fdset<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">easy<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">easy_conn<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">read_fd_set<pos:position pos:line="31" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">write_fd_set<pos:position pos:line="31" pos:column="69"/></name></expr></argument>,
                          <argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="28">this_max_fd<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">this_max_fd<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&gt;<pos:position pos:line="33" pos:column="26"/></operator> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">max_fd<pos:position pos:line="33" pos:column="31"/></name></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">max_fd<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">this_max_fd<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt></block></then></if>
      <break pos:line="35" pos:column="7">break;<pos:position pos:line="35" pos:column="13"/></break>

    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">CURLM_STATE_DOING<pos:position pos:line="37" pos:column="27"/></name></expr>:<pos:position pos:line="37" pos:column="28"/></case>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">Curl_doing_fdset<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name><name pos:line="38" pos:column="24">easy<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">easy_conn<pos:position pos:line="38" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">read_fd_set<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">write_fd_set<pos:position pos:line="38" pos:column="66"/></name></expr></argument>,
                       <argument><expr><operator pos:line="39" pos:column="24">&amp;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="25">this_max_fd<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name pos:line="40" pos:column="10">this_max_fd<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">&gt;<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="24">*<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">max_fd<pos:position pos:line="40" pos:column="31"/></name></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">max_fd<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">this_max_fd<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt></block></then></if>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>

    <case pos:line="44" pos:column="5">case <expr><name pos:line="44" pos:column="10">CURLM_STATE_WAITCONNECT<pos:position pos:line="44" pos:column="33"/></name></expr>:<pos:position pos:line="44" pos:column="34"/></case>
    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">CURLM_STATE_DO_MORE<pos:position pos:line="45" pos:column="29"/></name></expr>:<pos:position pos:line="45" pos:column="30"/></case>
      <block pos:line="46" pos:column="7">{
        <comment type="block" pos:line="47" pos:column="9">/* when we're waiting for a connect, we wait for the socket to
           become writable */</comment>
        <decl_stmt><decl><type><name><name pos:line="49" pos:column="9">struct<pos:position pos:line="49" pos:column="15"/></name> <name pos:line="49" pos:column="16">connectdata<pos:position pos:line="49" pos:column="27"/></name></name> <modifier pos:line="49" pos:column="28">*<pos:position pos:line="49" pos:column="29"/></modifier></type><name pos:line="49" pos:column="29">conn<pos:position pos:line="49" pos:column="33"/></name> <init pos:line="49" pos:column="34">= <expr><name><name pos:line="49" pos:column="36">easy<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">easy_conn<pos:position pos:line="49" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="49" pos:column="52"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">curl_socket_t<pos:position pos:line="50" pos:column="22"/></name></type> <name pos:line="50" pos:column="23">sockfd<pos:position pos:line="50" pos:column="29"/></name></decl>;<pos:position pos:line="50" pos:column="30"/></decl_stmt>

        <if pos:line="52" pos:column="9">if<condition pos:line="52" pos:column="11">(<expr><name pos:line="52" pos:column="12">CURLM_STATE_WAITCONNECT<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">==<pos:position pos:line="52" pos:column="38"/></operator> <name><name pos:line="52" pos:column="39">easy<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">state<pos:position pos:line="52" pos:column="50"/></name></name></expr>)<pos:position pos:line="52" pos:column="51"/></condition><then pos:line="52" pos:column="51"> <block pos:line="52" pos:column="52">{
          <expr_stmt><expr><name pos:line="53" pos:column="11">sockfd<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name><name pos:line="53" pos:column="20">conn<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">-&gt;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="26">sock<pos:position pos:line="53" pos:column="30"/></name><index pos:line="53" pos:column="30">[<expr><name pos:line="53" pos:column="31">FIRSTSOCKET<pos:position pos:line="53" pos:column="42"/></name></expr>]<pos:position pos:line="53" pos:column="43"/></index></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="54" pos:column="11">FD_SET<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><name pos:line="54" pos:column="18">sockfd<pos:position pos:line="54" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="26">write_fd_set<pos:position pos:line="54" pos:column="38"/></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then>
        <else pos:line="56" pos:column="9">else <block pos:line="56" pos:column="14">{
          <comment type="block" pos:line="57" pos:column="11">/* When in DO_MORE state, we could be either waiting for us
             to connect to a remote site, or we could wait for that site
             to connect to us. It makes a difference in the way: if we
             connect to the site we wait for the socket to become writable, if
             the site connects to us we wait for it to become readable */</comment>
          <expr_stmt><expr><name pos:line="62" pos:column="11">sockfd<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <name><name pos:line="62" pos:column="20">conn<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">-&gt;<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="26">sock<pos:position pos:line="62" pos:column="30"/></name><index pos:line="62" pos:column="30">[<expr><name pos:line="62" pos:column="31">SECONDARYSOCKET<pos:position pos:line="62" pos:column="46"/></name></expr>]<pos:position pos:line="62" pos:column="47"/></index></name></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="63" pos:column="11">FD_SET<pos:position pos:line="63" pos:column="17"/></name><argument_list pos:line="63" pos:column="17">(<argument><expr><name pos:line="63" pos:column="18">sockfd<pos:position pos:line="63" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="26">write_fd_set<pos:position pos:line="63" pos:column="38"/></name></expr></argument>)<pos:position pos:line="63" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></else></if>

        <if pos:line="66" pos:column="9">if<condition pos:line="66" pos:column="11">(<expr><operator pos:line="66" pos:column="12">(<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="13">int<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">)<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">sockfd<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">&gt;<pos:position pos:line="66" pos:column="28"/></operator> <operator pos:line="66" pos:column="26">*<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">max_fd<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="67" pos:column="11">*<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">max_fd<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <operator pos:line="67" pos:column="21">(<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="22">int<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">)<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">sockfd<pos:position pos:line="67" pos:column="32"/></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt></block></then></if>
      }<pos:position pos:line="68" pos:column="8"/></block>
      <break pos:line="69" pos:column="7">break;<pos:position pos:line="69" pos:column="13"/></break>
    <case pos:line="70" pos:column="5">case <expr><name pos:line="70" pos:column="10">CURLM_STATE_PERFORM<pos:position pos:line="70" pos:column="29"/></name></expr>:<pos:position pos:line="70" pos:column="30"/></case>
      <comment type="block" pos:line="71" pos:column="7">/* This should have a set of file descriptors for us to set.  */</comment>
      <comment type="block" pos:line="72" pos:column="7">/* after the transfer is done, go DONE */</comment>

      <expr_stmt><expr><call><name pos:line="74" pos:column="7">Curl_single_fdset<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name><name pos:line="74" pos:column="25">easy<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">easy_conn<pos:position pos:line="74" pos:column="40"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="75" pos:column="25">read_fd_set<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">write_fd_set<pos:position pos:line="75" pos:column="50"/></name></expr></argument>,
                        <argument><expr><name pos:line="76" pos:column="25">exc_fd_set<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="37">&amp;<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="38">this_max_fd<pos:position pos:line="76" pos:column="49"/></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt>

      <comment type="block" pos:line="78" pos:column="7">/* remember the maximum file descriptor */</comment>
      <if pos:line="79" pos:column="7">if<condition pos:line="79" pos:column="9">(<expr><name pos:line="79" pos:column="10">this_max_fd<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">&gt;<pos:position pos:line="79" pos:column="26"/></operator> <operator pos:line="79" pos:column="24">*<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">max_fd<pos:position pos:line="79" pos:column="31"/></name></expr>)<pos:position pos:line="79" pos:column="32"/></condition><then pos:line="79" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="80" pos:column="9">*<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">max_fd<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">=<pos:position pos:line="80" pos:column="18"/></operator> <name pos:line="80" pos:column="19">this_max_fd<pos:position pos:line="80" pos:column="30"/></name></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt></block></then></if>

      <break pos:line="82" pos:column="7">break;<pos:position pos:line="82" pos:column="13"/></break>
    }<pos:position pos:line="83" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="84" pos:column="5">easy<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <name><name pos:line="84" pos:column="12">easy<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">next<pos:position pos:line="84" pos:column="22"/></name></name></expr>;<pos:position pos:line="84" pos:column="23"/></expr_stmt> <comment type="block" pos:line="84" pos:column="24">/* check next handle */</comment>
  }<pos:position pos:line="85" pos:column="4"/></block></while>

  <return pos:line="87" pos:column="3">return <expr><name pos:line="87" pos:column="10">CURLM_OK<pos:position pos:line="87" pos:column="18"/></name></expr>;<pos:position pos:line="87" pos:column="19"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

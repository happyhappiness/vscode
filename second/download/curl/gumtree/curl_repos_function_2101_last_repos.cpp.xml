<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2101_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">curl_mime_free<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">curl_mime<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">mime<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">curl_mimepart<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">part<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">mime<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11"> <block pos:line="5" pos:column="12">{
    <while pos:line="6" pos:column="5">while<condition pos:line="6" pos:column="10">(<expr><name><name pos:line="6" pos:column="11">mime<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">firstpart<pos:position pos:line="6" pos:column="26"/></name></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition> <block pos:line="6" pos:column="28">{
      <expr_stmt><expr><name pos:line="7" pos:column="7">part<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">mime<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">firstpart<pos:position pos:line="7" pos:column="29"/></name></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="8" pos:column="7">mime<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">firstpart<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name><name pos:line="8" pos:column="25">part<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">nextpart<pos:position pos:line="8" pos:column="39"/></name></name></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">Curl_mime_cleanpart<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">part<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">free<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">part<pos:position pos:line="10" pos:column="16"/></name></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">free<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name><name pos:line="13" pos:column="10">mime<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">boundary<pos:position pos:line="13" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">free<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name pos:line="14" pos:column="10">mime<pos:position pos:line="14" pos:column="14"/></name></expr></argument>)<pos:position pos:line="14" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

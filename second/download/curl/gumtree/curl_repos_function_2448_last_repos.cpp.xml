<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2448_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">gskit_connect_step1<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">connectdata<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">conn<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">sockindex<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_easy<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">data<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name><name pos:line="3" pos:column="28">conn<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">data<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ssl_connect_data<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">connssl<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><operator pos:line="4" pos:column="38">&amp;<pos:position pos:line="4" pos:column="43"/></operator><name><name pos:line="4" pos:column="39">conn<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">ssl<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[<expr><name pos:line="4" pos:column="49">sockindex<pos:position pos:line="4" pos:column="58"/></name></expr>]<pos:position pos:line="4" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">gsk_handle<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">envir<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier> <specifier pos:line="8" pos:column="16">const<pos:position pos:line="8" pos:column="21"/></specifier></type> <name pos:line="8" pos:column="22">keyringfile<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><call><name pos:line="8" pos:column="36">SSL_CONN_CONFIG<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">CAfile<pos:position pos:line="8" pos:column="58"/></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier> <specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier></type> <name pos:line="9" pos:column="22">keyringpwd<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><call><name pos:line="9" pos:column="35">SSL_SET_OPTION<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name pos:line="9" pos:column="50">key_passwd<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier> <specifier pos:line="10" pos:column="16">const<pos:position pos:line="10" pos:column="21"/></specifier></type> <name pos:line="10" pos:column="22">keyringlabel<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><call><name pos:line="10" pos:column="37">SSL_SET_OPTION<pos:position pos:line="10" pos:column="51"/></name><argument_list pos:line="10" pos:column="51">(<argument><expr><name pos:line="10" pos:column="52">cert<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">long<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">ssl_version<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><call><name pos:line="11" pos:column="32">SSL_CONN_CONFIG<pos:position pos:line="11" pos:column="47"/></name><argument_list pos:line="11" pos:column="47">(<argument><expr><name pos:line="11" pos:column="48">version<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">bool<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">verifypeer<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><call><name pos:line="12" pos:column="27">SSL_CONN_CONFIG<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">verifypeer<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier> <specifier pos:line="13" pos:column="16">const<pos:position pos:line="13" pos:column="21"/></specifier></type> <name pos:line="13" pos:column="22">hostname<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><ternary><condition><expr><call><name pos:line="13" pos:column="33">SSL_IS_PROXY<pos:position pos:line="13" pos:column="45"/></name><argument_list pos:line="13" pos:column="45">()<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>?<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <expr><name><name pos:line="13" pos:column="49">conn<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">http_proxy<pos:position pos:line="13" pos:column="65"/></name><operator pos:line="13" pos:column="65">.<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="66">host<pos:position pos:line="13" pos:column="70"/></name><operator pos:line="13" pos:column="70">.<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="71">name<pos:position pos:line="13" pos:column="75"/></name></name></expr></then><else pos:line="13" pos:column="75">:
    <expr><name><name pos:line="14" pos:column="5">conn<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">host<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">name<pos:position pos:line="14" pos:column="20"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">sni<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">unsigned<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">int<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">protoflags<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">long<pos:position pos:line="17" pos:column="7"/></name></type> <name pos:line="17" pos:column="8">timeout<pos:position pos:line="17" pos:column="15"/></name></decl>;<pos:position pos:line="17" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">Qso_OverlappedIO_t<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">commarea<pos:position pos:line="18" pos:column="30"/></name></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name><name pos:line="19" pos:column="7">sockpair<pos:position pos:line="19" pos:column="15"/></name><index pos:line="19" pos:column="15">[<expr><literal type="number" pos:line="19" pos:column="16">2<pos:position pos:line="19" pos:column="17"/></literal></expr>]<pos:position pos:line="19" pos:column="18"/></index></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="20" pos:column="3">static<pos:position pos:line="20" pos:column="9"/></specifier> <type><specifier pos:line="20" pos:column="10">const<pos:position pos:line="20" pos:column="15"/></specifier> <name pos:line="20" pos:column="16">int<pos:position pos:line="20" pos:column="19"/></name></type> <name pos:line="20" pos:column="20">sobufsize<pos:position pos:line="20" pos:column="29"/></name> <init pos:line="20" pos:column="30">= <expr><name pos:line="20" pos:column="32">CURL_MAX_WRITE_SIZE<pos:position pos:line="20" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="52"/></decl_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* Create SSL environment, start (preferably asynchronous) handshake. */</comment>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">BACKEND<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">handle<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">gsk_handle<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">BACKEND<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">iocport<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <operator pos:line="25" pos:column="22">-<pos:position pos:line="25" pos:column="23"/></operator><literal type="number" pos:line="25" pos:column="23">1<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">BACKEND<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">localfd<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <operator pos:line="26" pos:column="22">-<pos:position pos:line="26" pos:column="23"/></operator><literal type="number" pos:line="26" pos:column="23">1<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">BACKEND<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">remotefd<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <operator pos:line="27" pos:column="23">-<pos:position pos:line="27" pos:column="24"/></operator><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* GSKit supports two ways of specifying an SSL context: either by
   *  application identifier (that should have been defined at the system
   *  level) or by keyring file, password and certificate label.
   * Local certificate name (CURLOPT_SSLCERT) is used to hold either the
   *  application identifier of the certificate label.
   * Key password (CURLOPT_KEYPASSWD) holds the keyring password.
   * It is not possible to have different keyrings for the CAs and the
   *  local certificate. We thus use the CA file (CURLOPT_CAINFO) to identify
   *  the keyring file.
   * If no key password is given and the keyring is the system keyring,
   *  application identifier mode is tried first, as recommended in IBM doc.
   */</comment>

  <expr_stmt><expr><name pos:line="42" pos:column="3">envir<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <operator pos:line="42" pos:column="11">(<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">gsk_handle<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">)<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>

  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name pos:line="44" pos:column="6">keyringlabel<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&amp;&amp;<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">keyringlabel<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">&amp;&amp;<pos:position pos:line="44" pos:column="46"/></operator> <operator pos:line="44" pos:column="39">!<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">keyringpwd<pos:position pos:line="44" pos:column="50"/></name> <operator pos:line="44" pos:column="51">&amp;&amp;<pos:position pos:line="44" pos:column="61"/></operator>
      <operator pos:line="45" pos:column="7">!<pos:position pos:line="45" pos:column="8"/></operator><call><name pos:line="45" pos:column="8">strcmp<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">keyringfile<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="28">CURL_CA_BUNDLE<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44"> <block pos:line="45" pos:column="45">{
    <comment type="block" pos:line="46" pos:column="5">/* Try application identifier mode. */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">init_environment<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">data<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">envir<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">keyringlabel<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="50">(<pos:position pos:line="47" pos:column="51"/></operator><specifier pos:line="47" pos:column="51">const<pos:position pos:line="47" pos:column="56"/></specifier> <name pos:line="47" pos:column="57">char<pos:position pos:line="47" pos:column="61"/></name> <operator pos:line="47" pos:column="62">*<pos:position pos:line="47" pos:column="63"/></operator><operator pos:line="47" pos:column="63">)<pos:position pos:line="47" pos:column="64"/></operator> <name pos:line="47" pos:column="65">NULL<pos:position pos:line="47" pos:column="69"/></name></expr></argument>,
                     <argument><expr><operator pos:line="48" pos:column="22">(<pos:position pos:line="48" pos:column="23"/></operator><specifier pos:line="48" pos:column="23">const<pos:position pos:line="48" pos:column="28"/></specifier> <name pos:line="48" pos:column="29">char<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">*<pos:position pos:line="48" pos:column="35"/></operator><operator pos:line="48" pos:column="35">)<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">NULL<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="43">(<pos:position pos:line="48" pos:column="44"/></operator><specifier pos:line="48" pos:column="44">const<pos:position pos:line="48" pos:column="49"/></specifier> <name pos:line="48" pos:column="50">char<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">*<pos:position pos:line="48" pos:column="56"/></operator><operator pos:line="48" pos:column="56">)<pos:position pos:line="48" pos:column="57"/></operator> <name pos:line="48" pos:column="58">NULL<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">envir<pos:position pos:line="51" pos:column="12"/></name></expr>)<pos:position pos:line="51" pos:column="13"/></condition><then pos:line="51" pos:column="13"> <block pos:line="51" pos:column="14">{
    <comment type="block" pos:line="52" pos:column="5">/* Use keyring mode. */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">result<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">init_environment<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">data<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="37">&amp;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="38">envir<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="45">(<pos:position pos:line="53" pos:column="46"/></operator><specifier pos:line="53" pos:column="46">const<pos:position pos:line="53" pos:column="51"/></specifier> <name pos:line="53" pos:column="52">char<pos:position pos:line="53" pos:column="56"/></name> <operator pos:line="53" pos:column="57">*<pos:position pos:line="53" pos:column="58"/></operator><operator pos:line="53" pos:column="58">)<pos:position pos:line="53" pos:column="59"/></operator> <name pos:line="53" pos:column="60">NULL<pos:position pos:line="53" pos:column="64"/></name></expr></argument>,
                              <argument><expr><name pos:line="54" pos:column="31">keyringfile<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">keyringlabel<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">keyringpwd<pos:position pos:line="54" pos:column="68"/></name></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="70"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name pos:line="55" pos:column="8">result<pos:position pos:line="55" pos:column="14"/></name></expr>)<pos:position pos:line="55" pos:column="15"/></condition><then pos:line="55" pos:column="15">
      <block type="pseudo"><return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">result<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* Create secure session. */</comment>
  <expr_stmt><expr><name pos:line="60" pos:column="3">result<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <call><name pos:line="60" pos:column="12">gskit_status<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">data<pos:position pos:line="60" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="31">gsk_secure_soc_open<pos:position pos:line="60" pos:column="50"/></name><argument_list pos:line="60" pos:column="50">(<argument><expr><name pos:line="60" pos:column="51">envir<pos:position pos:line="60" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="58">&amp;<pos:position pos:line="60" pos:column="63"/></operator><name><name pos:line="60" pos:column="59">BACKEND<pos:position pos:line="60" pos:column="66"/></name><operator pos:line="60" pos:column="66">-&gt;<pos:position pos:line="60" pos:column="71"/></operator><name pos:line="60" pos:column="68">handle<pos:position pos:line="60" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr></argument>,
                        <argument><expr><literal type="string" pos:line="61" pos:column="25">"gsk_secure_soc_open()"<pos:position pos:line="61" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="50">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="61" pos:column="73"/></name></expr></argument>)<pos:position pos:line="61" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">gsk_environment_close<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><operator pos:line="62" pos:column="25">&amp;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="26">envir<pos:position pos:line="62" pos:column="31"/></name></expr></argument>)<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
  <if pos:line="63" pos:column="3">if<condition pos:line="63" pos:column="5">(<expr><name pos:line="63" pos:column="6">result<pos:position pos:line="63" pos:column="12"/></name></expr>)<pos:position pos:line="63" pos:column="13"/></condition><then pos:line="63" pos:column="13">
    <block type="pseudo"><return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">result<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="66" pos:column="3">/* Establish a pipelining socket pair for SSL over SSL. */</comment>
  <if pos:line="67" pos:column="3">if<condition pos:line="67" pos:column="5">(<expr><name><name pos:line="67" pos:column="6">conn<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">proxy_ssl<pos:position pos:line="67" pos:column="21"/></name><index pos:line="67" pos:column="21">[<expr><name pos:line="67" pos:column="22">sockindex<pos:position pos:line="67" pos:column="31"/></name></expr>]<pos:position pos:line="67" pos:column="32"/></index></name><operator pos:line="67" pos:column="32">.<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">use<pos:position pos:line="67" pos:column="36"/></name></expr>)<pos:position pos:line="67" pos:column="37"/></condition><then pos:line="67" pos:column="37"> <block pos:line="67" pos:column="38">{
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><call><name pos:line="68" pos:column="8">inetsocketpair<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">sockpair<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33">
      <block type="pseudo"><return pos:line="69" pos:column="7">return <expr><name pos:line="69" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="69" pos:column="37"/></name></expr>;<pos:position pos:line="69" pos:column="38"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">BACKEND<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">localfd<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name><name pos:line="70" pos:column="24">sockpair<pos:position pos:line="70" pos:column="32"/></name><index pos:line="70" pos:column="32">[<expr><literal type="number" pos:line="70" pos:column="33">0<pos:position pos:line="70" pos:column="34"/></literal></expr>]<pos:position pos:line="70" pos:column="35"/></index></name></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">BACKEND<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">remotefd<pos:position pos:line="71" pos:column="22"/></name></name> <operator pos:line="71" pos:column="23">=<pos:position pos:line="71" pos:column="24"/></operator> <name><name pos:line="71" pos:column="25">sockpair<pos:position pos:line="71" pos:column="33"/></name><index pos:line="71" pos:column="33">[<expr><literal type="number" pos:line="71" pos:column="34">1<pos:position pos:line="71" pos:column="35"/></literal></expr>]<pos:position pos:line="71" pos:column="36"/></index></name></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">setsockopt<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name><name pos:line="72" pos:column="16">BACKEND<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">-&gt;<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="25">localfd<pos:position pos:line="72" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">SOL_SOCKET<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="46">SO_RCVBUF<pos:position pos:line="72" pos:column="55"/></name></expr></argument>,
               <argument><expr><operator pos:line="73" pos:column="16">(<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="17">void<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">*<pos:position pos:line="73" pos:column="23"/></operator><operator pos:line="73" pos:column="23">)<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">sobufsize<pos:position pos:line="73" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="36">sizeof <name pos:line="73" pos:column="43">sobufsize<pos:position pos:line="73" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">setsockopt<pos:position pos:line="74" pos:column="15"/></name><argument_list pos:line="74" pos:column="15">(<argument><expr><name><name pos:line="74" pos:column="16">BACKEND<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">-&gt;<pos:position pos:line="74" pos:column="28"/></operator><name pos:line="74" pos:column="25">remotefd<pos:position pos:line="74" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="35">SOL_SOCKET<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">SO_RCVBUF<pos:position pos:line="74" pos:column="56"/></name></expr></argument>,
               <argument><expr><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="17">void<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">*<pos:position pos:line="75" pos:column="23"/></operator><operator pos:line="75" pos:column="23">)<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">sobufsize<pos:position pos:line="75" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="36">sizeof <name pos:line="75" pos:column="43">sobufsize<pos:position pos:line="75" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">setsockopt<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name><name pos:line="76" pos:column="16">BACKEND<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">-&gt;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="25">localfd<pos:position pos:line="76" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="34">SOL_SOCKET<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="46">SO_SNDBUF<pos:position pos:line="76" pos:column="55"/></name></expr></argument>,
               <argument><expr><operator pos:line="77" pos:column="16">(<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="17">void<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">*<pos:position pos:line="77" pos:column="23"/></operator><operator pos:line="77" pos:column="23">)<pos:position pos:line="77" pos:column="24"/></operator> <name pos:line="77" pos:column="25">sobufsize<pos:position pos:line="77" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="36">sizeof <name pos:line="77" pos:column="43">sobufsize<pos:position pos:line="77" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">setsockopt<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><name><name pos:line="78" pos:column="16">BACKEND<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">remotefd<pos:position pos:line="78" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="35">SOL_SOCKET<pos:position pos:line="78" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="47">SO_SNDBUF<pos:position pos:line="78" pos:column="56"/></name></expr></argument>,
               <argument><expr><operator pos:line="79" pos:column="16">(<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">void<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">*<pos:position pos:line="79" pos:column="23"/></operator><operator pos:line="79" pos:column="23">)<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">sobufsize<pos:position pos:line="79" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="36">sizeof <name pos:line="79" pos:column="43">sobufsize<pos:position pos:line="79" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">curlx_nonblock<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name><name pos:line="80" pos:column="20">BACKEND<pos:position pos:line="80" pos:column="27"/></name><operator pos:line="80" pos:column="27">-&gt;<pos:position pos:line="80" pos:column="32"/></operator><name pos:line="80" pos:column="29">localfd<pos:position pos:line="80" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="38">TRUE<pos:position pos:line="80" pos:column="42"/></name></expr></argument>)<pos:position pos:line="80" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">curlx_nonblock<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name><name pos:line="81" pos:column="20">BACKEND<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">-&gt;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="29">remotefd<pos:position pos:line="81" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="39">TRUE<pos:position pos:line="81" pos:column="43"/></name></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="84" pos:column="3">/* Determine which SSL/TLS version should be enabled. */</comment>
  <expr_stmt><expr><name pos:line="85" pos:column="3">sni<pos:position pos:line="85" pos:column="6"/></name> <operator pos:line="85" pos:column="7">=<pos:position pos:line="85" pos:column="8"/></operator> <name pos:line="85" pos:column="9">hostname<pos:position pos:line="85" pos:column="17"/></name></expr>;<pos:position pos:line="85" pos:column="18"/></expr_stmt>
  <switch pos:line="86" pos:column="3">switch<condition pos:line="86" pos:column="9">(<expr><name pos:line="86" pos:column="10">ssl_version<pos:position pos:line="86" pos:column="21"/></name></expr>)<pos:position pos:line="86" pos:column="22"/></condition> <block pos:line="86" pos:column="23">{
  <case pos:line="87" pos:column="3">case <expr><name pos:line="87" pos:column="8">CURL_SSLVERSION_SSLv2<pos:position pos:line="87" pos:column="29"/></name></expr>:<pos:position pos:line="87" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="88" pos:column="5">protoflags<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">CURL_GSKPROTO_SSLV2_MASK<pos:position pos:line="88" pos:column="42"/></name></expr>;<pos:position pos:line="88" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="89" pos:column="5">sni<pos:position pos:line="89" pos:column="8"/></name> <operator pos:line="89" pos:column="9">=<pos:position pos:line="89" pos:column="10"/></operator> <name pos:line="89" pos:column="11">NULL<pos:position pos:line="89" pos:column="15"/></name></expr>;<pos:position pos:line="89" pos:column="16"/></expr_stmt>
    <break pos:line="90" pos:column="5">break;<pos:position pos:line="90" pos:column="11"/></break>
  <case pos:line="91" pos:column="3">case <expr><name pos:line="91" pos:column="8">CURL_SSLVERSION_SSLv3<pos:position pos:line="91" pos:column="29"/></name></expr>:<pos:position pos:line="91" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="92" pos:column="5">protoflags<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <name pos:line="92" pos:column="18">CURL_GSKPROTO_SSLV3_MASK<pos:position pos:line="92" pos:column="42"/></name></expr>;<pos:position pos:line="92" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">sni<pos:position pos:line="93" pos:column="8"/></name> <operator pos:line="93" pos:column="9">=<pos:position pos:line="93" pos:column="10"/></operator> <name pos:line="93" pos:column="11">NULL<pos:position pos:line="93" pos:column="15"/></name></expr>;<pos:position pos:line="93" pos:column="16"/></expr_stmt>
    <break pos:line="94" pos:column="5">break;<pos:position pos:line="94" pos:column="11"/></break>
  <case pos:line="95" pos:column="3">case <expr><name pos:line="95" pos:column="8">CURL_SSLVERSION_DEFAULT<pos:position pos:line="95" pos:column="31"/></name></expr>:<pos:position pos:line="95" pos:column="32"/></case>
  <case pos:line="96" pos:column="3">case <expr><name pos:line="96" pos:column="8">CURL_SSLVERSION_TLSv1<pos:position pos:line="96" pos:column="29"/></name></expr>:<pos:position pos:line="96" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="97" pos:column="5">protoflags<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <name pos:line="97" pos:column="18">CURL_GSKPROTO_TLSV10_MASK<pos:position pos:line="97" pos:column="43"/></name> <operator pos:line="97" pos:column="44">|<pos:position pos:line="97" pos:column="45"/></operator>
                 <name pos:line="98" pos:column="18">CURL_GSKPROTO_TLSV11_MASK<pos:position pos:line="98" pos:column="43"/></name> <operator pos:line="98" pos:column="44">|<pos:position pos:line="98" pos:column="45"/></operator> <name pos:line="98" pos:column="46">CURL_GSKPROTO_TLSV12_MASK<pos:position pos:line="98" pos:column="71"/></name></expr>;<pos:position pos:line="98" pos:column="72"/></expr_stmt>
    <break pos:line="99" pos:column="5">break;<pos:position pos:line="99" pos:column="11"/></break>
  <case pos:line="100" pos:column="3">case <expr><name pos:line="100" pos:column="8">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="100" pos:column="31"/></name></expr>:<pos:position pos:line="100" pos:column="32"/></case>
  <case pos:line="101" pos:column="3">case <expr><name pos:line="101" pos:column="8">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="101" pos:column="31"/></name></expr>:<pos:position pos:line="101" pos:column="32"/></case>
  <case pos:line="102" pos:column="3">case <expr><name pos:line="102" pos:column="8">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="102" pos:column="31"/></name></expr>:<pos:position pos:line="102" pos:column="32"/></case>
  <case pos:line="103" pos:column="3">case <expr><name pos:line="103" pos:column="8">CURL_SSLVERSION_TLSv1_3<pos:position pos:line="103" pos:column="31"/></name></expr>:<pos:position pos:line="103" pos:column="32"/></case>
    <expr_stmt><expr><name pos:line="104" pos:column="5">result<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <call><name pos:line="104" pos:column="14">set_ssl_version_min_max<pos:position pos:line="104" pos:column="37"/></name><argument_list pos:line="104" pos:column="37">(<argument><expr><operator pos:line="104" pos:column="38">&amp;<pos:position pos:line="104" pos:column="43"/></operator><name pos:line="104" pos:column="39">protoflags<pos:position pos:line="104" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="51">conn<pos:position pos:line="104" pos:column="55"/></name></expr></argument>)<pos:position pos:line="104" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="57"/></expr_stmt>
    <if pos:line="105" pos:column="5">if<condition pos:line="105" pos:column="7">(<expr><name pos:line="105" pos:column="8">result<pos:position pos:line="105" pos:column="14"/></name> <operator pos:line="105" pos:column="15">!=<pos:position pos:line="105" pos:column="17"/></operator> <name pos:line="105" pos:column="18">CURLE_OK<pos:position pos:line="105" pos:column="26"/></name></expr>)<pos:position pos:line="105" pos:column="27"/></condition><then pos:line="105" pos:column="27">
      <block type="pseudo"><return pos:line="106" pos:column="7">return <expr><name pos:line="106" pos:column="14">result<pos:position pos:line="106" pos:column="20"/></name></expr>;<pos:position pos:line="106" pos:column="21"/></return></block></then></if>
    <break pos:line="107" pos:column="5">break;<pos:position pos:line="107" pos:column="11"/></break>
  <default pos:line="108" pos:column="3">default:<pos:position pos:line="108" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">failf<pos:position pos:line="109" pos:column="10"/></name><argument_list pos:line="109" pos:column="10">(<argument><expr><name pos:line="109" pos:column="11">data<pos:position pos:line="109" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="17">"Unrecognized parameter passed via CURLOPT_SSLVERSION"<pos:position pos:line="109" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="73"/></expr_stmt>
    <return pos:line="110" pos:column="5">return <expr><name pos:line="110" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="110" pos:column="35"/></name></expr>;<pos:position pos:line="110" pos:column="36"/></return>
  }<pos:position pos:line="111" pos:column="4"/></block></switch>

  <comment type="block" pos:line="113" pos:column="3">/* Process SNI. Ignore if not supported (on OS400 &lt; V7R1). */</comment>
  <if pos:line="114" pos:column="3">if<condition pos:line="114" pos:column="5">(<expr><name pos:line="114" pos:column="6">sni<pos:position pos:line="114" pos:column="9"/></name></expr>)<pos:position pos:line="114" pos:column="10"/></condition><then pos:line="114" pos:column="10"> <block pos:line="114" pos:column="11">{
    <expr_stmt><expr><name pos:line="115" pos:column="5">result<pos:position pos:line="115" pos:column="11"/></name> <operator pos:line="115" pos:column="12">=<pos:position pos:line="115" pos:column="13"/></operator> <call><name pos:line="115" pos:column="14">set_buffer<pos:position pos:line="115" pos:column="24"/></name><argument_list pos:line="115" pos:column="24">(<argument><expr><name pos:line="115" pos:column="25">data<pos:position pos:line="115" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="31">BACKEND<pos:position pos:line="115" pos:column="38"/></name><operator pos:line="115" pos:column="38">-&gt;<pos:position pos:line="115" pos:column="43"/></operator><name pos:line="115" pos:column="40">handle<pos:position pos:line="115" pos:column="46"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="116" pos:column="25">GSK_SSL_EXTN_SERVERNAME_REQUEST<pos:position pos:line="116" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="58">sni<pos:position pos:line="116" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="63">TRUE<pos:position pos:line="116" pos:column="67"/></name></expr></argument>)<pos:position pos:line="116" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="69"/></expr_stmt>
    <if pos:line="117" pos:column="5">if<condition pos:line="117" pos:column="7">(<expr><name pos:line="117" pos:column="8">result<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">==<pos:position pos:line="117" pos:column="17"/></operator> <name pos:line="117" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="117" pos:column="44"/></name></expr>)<pos:position pos:line="117" pos:column="45"/></condition><then pos:line="117" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="7">result<pos:position pos:line="118" pos:column="13"/></name> <operator pos:line="118" pos:column="14">=<pos:position pos:line="118" pos:column="15"/></operator> <name pos:line="118" pos:column="16">CURLE_OK<pos:position pos:line="118" pos:column="24"/></name></expr>;<pos:position pos:line="118" pos:column="25"/></expr_stmt></block></then></if>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="121" pos:column="3">/* Set session parameters. */</comment>
  <if pos:line="122" pos:column="3">if<condition pos:line="122" pos:column="5">(<expr><operator pos:line="122" pos:column="6">!<pos:position pos:line="122" pos:column="7"/></operator><name pos:line="122" pos:column="7">result<pos:position pos:line="122" pos:column="13"/></name></expr>)<pos:position pos:line="122" pos:column="14"/></condition><then pos:line="122" pos:column="14"> <block pos:line="122" pos:column="15">{
    <comment type="block" pos:line="123" pos:column="5">/* Compute the handshake timeout. Since GSKit granularity is 1 second,
       we round up the required value. */</comment>
    <expr_stmt><expr><name pos:line="125" pos:column="5">timeout<pos:position pos:line="125" pos:column="12"/></name> <operator pos:line="125" pos:column="13">=<pos:position pos:line="125" pos:column="14"/></operator> <call><name pos:line="125" pos:column="15">Curl_timeleft<pos:position pos:line="125" pos:column="28"/></name><argument_list pos:line="125" pos:column="28">(<argument><expr><name pos:line="125" pos:column="29">data<pos:position pos:line="125" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="35">NULL<pos:position pos:line="125" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="41">TRUE<pos:position pos:line="125" pos:column="45"/></name></expr></argument>)<pos:position pos:line="125" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="47"/></expr_stmt>
    <if pos:line="126" pos:column="5">if<condition pos:line="126" pos:column="7">(<expr><name pos:line="126" pos:column="8">timeout<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">&lt;<pos:position pos:line="126" pos:column="20"/></operator> <literal type="number" pos:line="126" pos:column="18">0<pos:position pos:line="126" pos:column="19"/></literal></expr>)<pos:position pos:line="126" pos:column="20"/></condition><then pos:line="126" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="7">result<pos:position pos:line="127" pos:column="13"/></name> <operator pos:line="127" pos:column="14">=<pos:position pos:line="127" pos:column="15"/></operator> <name pos:line="127" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="127" pos:column="40"/></name></expr>;<pos:position pos:line="127" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="128" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="7">result<pos:position pos:line="129" pos:column="13"/></name> <operator pos:line="129" pos:column="14">=<pos:position pos:line="129" pos:column="15"/></operator> <call><name pos:line="129" pos:column="16">set_numeric<pos:position pos:line="129" pos:column="27"/></name><argument_list pos:line="129" pos:column="27">(<argument><expr><name pos:line="129" pos:column="28">data<pos:position pos:line="129" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="34">BACKEND<pos:position pos:line="129" pos:column="41"/></name><operator pos:line="129" pos:column="41">-&gt;<pos:position pos:line="129" pos:column="46"/></operator><name pos:line="129" pos:column="43">handle<pos:position pos:line="129" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">GSK_HANDSHAKE_TIMEOUT<pos:position pos:line="129" pos:column="72"/></name></expr></argument>,
                           <argument><expr><operator pos:line="130" pos:column="28">(<pos:position pos:line="130" pos:column="29"/></operator><name pos:line="130" pos:column="29">timeout<pos:position pos:line="130" pos:column="36"/></name> <operator pos:line="130" pos:column="37">+<pos:position pos:line="130" pos:column="38"/></operator> <literal type="number" pos:line="130" pos:column="39">999<pos:position pos:line="130" pos:column="42"/></literal><operator pos:line="130" pos:column="42">)<pos:position pos:line="130" pos:column="43"/></operator> <operator pos:line="130" pos:column="44">/<pos:position pos:line="130" pos:column="45"/></operator> <literal type="number" pos:line="130" pos:column="46">1000<pos:position pos:line="130" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="52"/></expr_stmt></block></else></if>
  }<pos:position pos:line="131" pos:column="4"/></block></then></if>
  <if pos:line="132" pos:column="3">if<condition pos:line="132" pos:column="5">(<expr><operator pos:line="132" pos:column="6">!<pos:position pos:line="132" pos:column="7"/></operator><name pos:line="132" pos:column="7">result<pos:position pos:line="132" pos:column="13"/></name></expr>)<pos:position pos:line="132" pos:column="14"/></condition><then pos:line="132" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="5">result<pos:position pos:line="133" pos:column="11"/></name> <operator pos:line="133" pos:column="12">=<pos:position pos:line="133" pos:column="13"/></operator> <call><name pos:line="133" pos:column="14">set_numeric<pos:position pos:line="133" pos:column="25"/></name><argument_list pos:line="133" pos:column="25">(<argument><expr><name pos:line="133" pos:column="26">data<pos:position pos:line="133" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="32">BACKEND<pos:position pos:line="133" pos:column="39"/></name><operator pos:line="133" pos:column="39">-&gt;<pos:position pos:line="133" pos:column="44"/></operator><name pos:line="133" pos:column="41">handle<pos:position pos:line="133" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="49">GSK_OS400_READ_TIMEOUT<pos:position pos:line="133" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="73">1<pos:position pos:line="133" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="76"/></expr_stmt></block></then></if>
  <if pos:line="134" pos:column="3">if<condition pos:line="134" pos:column="5">(<expr><operator pos:line="134" pos:column="6">!<pos:position pos:line="134" pos:column="7"/></operator><name pos:line="134" pos:column="7">result<pos:position pos:line="134" pos:column="13"/></name></expr>)<pos:position pos:line="134" pos:column="14"/></condition><then pos:line="134" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="5">result<pos:position pos:line="135" pos:column="11"/></name> <operator pos:line="135" pos:column="12">=<pos:position pos:line="135" pos:column="13"/></operator> <call><name pos:line="135" pos:column="14">set_numeric<pos:position pos:line="135" pos:column="25"/></name><argument_list pos:line="135" pos:column="25">(<argument><expr><name pos:line="135" pos:column="26">data<pos:position pos:line="135" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="32">BACKEND<pos:position pos:line="135" pos:column="39"/></name><operator pos:line="135" pos:column="39">-&gt;<pos:position pos:line="135" pos:column="44"/></operator><name pos:line="135" pos:column="41">handle<pos:position pos:line="135" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="49">GSK_FD<pos:position pos:line="135" pos:column="55"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="135" pos:column="57">BACKEND<pos:position pos:line="135" pos:column="64"/></name><operator pos:line="135" pos:column="64">-&gt;<pos:position pos:line="135" pos:column="69"/></operator><name pos:line="135" pos:column="66">localfd<pos:position pos:line="135" pos:column="73"/></name></name> <operator pos:line="135" pos:column="74">&gt;=<pos:position pos:line="135" pos:column="79"/></operator> <literal type="number" pos:line="135" pos:column="77">0<pos:position pos:line="135" pos:column="78"/></literal></expr>?<pos:position pos:line="135" pos:column="79"/></condition><then pos:line="135" pos:column="79">
                         <expr><name><name pos:line="136" pos:column="26">BACKEND<pos:position pos:line="136" pos:column="33"/></name><operator pos:line="136" pos:column="33">-&gt;<pos:position pos:line="136" pos:column="38"/></operator><name pos:line="136" pos:column="35">localfd<pos:position pos:line="136" pos:column="42"/></name></name></expr></then><else pos:line="136" pos:column="42">: <expr><name><name pos:line="136" pos:column="44">conn<pos:position pos:line="136" pos:column="48"/></name><operator pos:line="136" pos:column="48">-&gt;<pos:position pos:line="136" pos:column="53"/></operator><name pos:line="136" pos:column="50">sock<pos:position pos:line="136" pos:column="54"/></name><index pos:line="136" pos:column="54">[<expr><name pos:line="136" pos:column="55">sockindex<pos:position pos:line="136" pos:column="64"/></name></expr>]<pos:position pos:line="136" pos:column="65"/></index></name></expr></else></ternary></expr></argument>)<pos:position pos:line="136" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="67"/></expr_stmt></block></then></if>
  <if pos:line="137" pos:column="3">if<condition pos:line="137" pos:column="5">(<expr><operator pos:line="137" pos:column="6">!<pos:position pos:line="137" pos:column="7"/></operator><name pos:line="137" pos:column="7">result<pos:position pos:line="137" pos:column="13"/></name></expr>)<pos:position pos:line="137" pos:column="14"/></condition><then pos:line="137" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="5">result<pos:position pos:line="138" pos:column="11"/></name> <operator pos:line="138" pos:column="12">=<pos:position pos:line="138" pos:column="13"/></operator> <call><name pos:line="138" pos:column="14">set_ciphers<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><name pos:line="138" pos:column="26">conn<pos:position pos:line="138" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="32">BACKEND<pos:position pos:line="138" pos:column="39"/></name><operator pos:line="138" pos:column="39">-&gt;<pos:position pos:line="138" pos:column="44"/></operator><name pos:line="138" pos:column="41">handle<pos:position pos:line="138" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="49">&amp;<pos:position pos:line="138" pos:column="54"/></operator><name pos:line="138" pos:column="50">protoflags<pos:position pos:line="138" pos:column="60"/></name></expr></argument>)<pos:position pos:line="138" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="62"/></expr_stmt></block></then></if>
  <if pos:line="139" pos:column="3">if<condition pos:line="139" pos:column="5">(<expr><operator pos:line="139" pos:column="6">!<pos:position pos:line="139" pos:column="7"/></operator><name pos:line="139" pos:column="7">protoflags<pos:position pos:line="139" pos:column="17"/></name></expr>)<pos:position pos:line="139" pos:column="18"/></condition><then pos:line="139" pos:column="18"> <block pos:line="139" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="140" pos:column="5">failf<pos:position pos:line="140" pos:column="10"/></name><argument_list pos:line="140" pos:column="10">(<argument><expr><name pos:line="140" pos:column="11">data<pos:position pos:line="140" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="17">"No SSL protocol/cipher combination enabled"<pos:position pos:line="140" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="141" pos:column="5">result<pos:position pos:line="141" pos:column="11"/></name> <operator pos:line="141" pos:column="12">=<pos:position pos:line="141" pos:column="13"/></operator> <name pos:line="141" pos:column="14">CURLE_SSL_CIPHER<pos:position pos:line="141" pos:column="30"/></name></expr>;<pos:position pos:line="141" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="142" pos:column="4"/></block></then></if>
  <if pos:line="143" pos:column="3">if<condition pos:line="143" pos:column="5">(<expr><operator pos:line="143" pos:column="6">!<pos:position pos:line="143" pos:column="7"/></operator><name pos:line="143" pos:column="7">result<pos:position pos:line="143" pos:column="13"/></name></expr>)<pos:position pos:line="143" pos:column="14"/></condition><then pos:line="143" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="5">result<pos:position pos:line="144" pos:column="11"/></name> <operator pos:line="144" pos:column="12">=<pos:position pos:line="144" pos:column="13"/></operator> <call><name pos:line="144" pos:column="14">set_enum<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><name pos:line="144" pos:column="23">data<pos:position pos:line="144" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="29">BACKEND<pos:position pos:line="144" pos:column="36"/></name><operator pos:line="144" pos:column="36">-&gt;<pos:position pos:line="144" pos:column="41"/></operator><name pos:line="144" pos:column="38">handle<pos:position pos:line="144" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="46">GSK_PROTOCOL_SSLV2<pos:position pos:line="144" pos:column="64"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="145" pos:column="23">(<pos:position pos:line="145" pos:column="24"/></operator><name pos:line="145" pos:column="24">protoflags<pos:position pos:line="145" pos:column="34"/></name> <operator pos:line="145" pos:column="35">&amp;<pos:position pos:line="145" pos:column="40"/></operator> <name pos:line="145" pos:column="37">CURL_GSKPROTO_SSLV2_MASK<pos:position pos:line="145" pos:column="61"/></name><operator pos:line="145" pos:column="61">)<pos:position pos:line="145" pos:column="62"/></operator></expr>?<pos:position pos:line="145" pos:column="63"/></condition><then pos:line="145" pos:column="63">
                      <expr><name pos:line="146" pos:column="23">GSK_PROTOCOL_SSLV2_ON<pos:position pos:line="146" pos:column="44"/></name></expr></then><else pos:line="146" pos:column="44">: <expr><name pos:line="146" pos:column="46">GSK_PROTOCOL_SSLV2_OFF<pos:position pos:line="146" pos:column="68"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="146" pos:column="70">FALSE<pos:position pos:line="146" pos:column="75"/></name></expr></argument>)<pos:position pos:line="146" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="77"/></expr_stmt></block></then></if>
  <if pos:line="147" pos:column="3">if<condition pos:line="147" pos:column="5">(<expr><operator pos:line="147" pos:column="6">!<pos:position pos:line="147" pos:column="7"/></operator><name pos:line="147" pos:column="7">result<pos:position pos:line="147" pos:column="13"/></name></expr>)<pos:position pos:line="147" pos:column="14"/></condition><then pos:line="147" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="5">result<pos:position pos:line="148" pos:column="11"/></name> <operator pos:line="148" pos:column="12">=<pos:position pos:line="148" pos:column="13"/></operator> <call><name pos:line="148" pos:column="14">set_enum<pos:position pos:line="148" pos:column="22"/></name><argument_list pos:line="148" pos:column="22">(<argument><expr><name pos:line="148" pos:column="23">data<pos:position pos:line="148" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="29">BACKEND<pos:position pos:line="148" pos:column="36"/></name><operator pos:line="148" pos:column="36">-&gt;<pos:position pos:line="148" pos:column="41"/></operator><name pos:line="148" pos:column="38">handle<pos:position pos:line="148" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="46">GSK_PROTOCOL_SSLV3<pos:position pos:line="148" pos:column="64"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="149" pos:column="23">(<pos:position pos:line="149" pos:column="24"/></operator><name pos:line="149" pos:column="24">protoflags<pos:position pos:line="149" pos:column="34"/></name> <operator pos:line="149" pos:column="35">&amp;<pos:position pos:line="149" pos:column="40"/></operator> <name pos:line="149" pos:column="37">CURL_GSKPROTO_SSLV3_MASK<pos:position pos:line="149" pos:column="61"/></name><operator pos:line="149" pos:column="61">)<pos:position pos:line="149" pos:column="62"/></operator></expr>?<pos:position pos:line="149" pos:column="63"/></condition><then pos:line="149" pos:column="63">
                      <expr><name pos:line="150" pos:column="23">GSK_PROTOCOL_SSLV3_ON<pos:position pos:line="150" pos:column="44"/></name></expr></then><else pos:line="150" pos:column="44">: <expr><name pos:line="150" pos:column="46">GSK_PROTOCOL_SSLV3_OFF<pos:position pos:line="150" pos:column="68"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="150" pos:column="70">FALSE<pos:position pos:line="150" pos:column="75"/></name></expr></argument>)<pos:position pos:line="150" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="77"/></expr_stmt></block></then></if>
  <if pos:line="151" pos:column="3">if<condition pos:line="151" pos:column="5">(<expr><operator pos:line="151" pos:column="6">!<pos:position pos:line="151" pos:column="7"/></operator><name pos:line="151" pos:column="7">result<pos:position pos:line="151" pos:column="13"/></name></expr>)<pos:position pos:line="151" pos:column="14"/></condition><then pos:line="151" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="5">result<pos:position pos:line="152" pos:column="11"/></name> <operator pos:line="152" pos:column="12">=<pos:position pos:line="152" pos:column="13"/></operator> <call><name pos:line="152" pos:column="14">set_enum<pos:position pos:line="152" pos:column="22"/></name><argument_list pos:line="152" pos:column="22">(<argument><expr><name pos:line="152" pos:column="23">data<pos:position pos:line="152" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="29">BACKEND<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">-&gt;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="38">handle<pos:position pos:line="152" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="46">GSK_PROTOCOL_TLSV1<pos:position pos:line="152" pos:column="64"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="153" pos:column="23">(<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="24">protoflags<pos:position pos:line="153" pos:column="34"/></name> <operator pos:line="153" pos:column="35">&amp;<pos:position pos:line="153" pos:column="40"/></operator> <name pos:line="153" pos:column="37">CURL_GSKPROTO_TLSV10_MASK<pos:position pos:line="153" pos:column="62"/></name><operator pos:line="153" pos:column="62">)<pos:position pos:line="153" pos:column="63"/></operator></expr>?<pos:position pos:line="153" pos:column="64"/></condition><then pos:line="153" pos:column="64">
                      <expr><name pos:line="154" pos:column="23">GSK_PROTOCOL_TLSV1_ON<pos:position pos:line="154" pos:column="44"/></name></expr></then><else pos:line="154" pos:column="44">: <expr><name pos:line="154" pos:column="46">GSK_PROTOCOL_TLSV1_OFF<pos:position pos:line="154" pos:column="68"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="154" pos:column="70">FALSE<pos:position pos:line="154" pos:column="75"/></name></expr></argument>)<pos:position pos:line="154" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="77"/></expr_stmt></block></then></if>
  <if pos:line="155" pos:column="3">if<condition pos:line="155" pos:column="5">(<expr><operator pos:line="155" pos:column="6">!<pos:position pos:line="155" pos:column="7"/></operator><name pos:line="155" pos:column="7">result<pos:position pos:line="155" pos:column="13"/></name></expr>)<pos:position pos:line="155" pos:column="14"/></condition><then pos:line="155" pos:column="14"> <block pos:line="155" pos:column="15">{
    <expr_stmt><expr><name pos:line="156" pos:column="5">result<pos:position pos:line="156" pos:column="11"/></name> <operator pos:line="156" pos:column="12">=<pos:position pos:line="156" pos:column="13"/></operator> <call><name pos:line="156" pos:column="14">set_enum<pos:position pos:line="156" pos:column="22"/></name><argument_list pos:line="156" pos:column="22">(<argument><expr><name pos:line="156" pos:column="23">data<pos:position pos:line="156" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="29">BACKEND<pos:position pos:line="156" pos:column="36"/></name><operator pos:line="156" pos:column="36">-&gt;<pos:position pos:line="156" pos:column="41"/></operator><name pos:line="156" pos:column="38">handle<pos:position pos:line="156" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="46">GSK_PROTOCOL_TLSV11<pos:position pos:line="156" pos:column="65"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="157" pos:column="23">(<pos:position pos:line="157" pos:column="24"/></operator><name pos:line="157" pos:column="24">protoflags<pos:position pos:line="157" pos:column="34"/></name> <operator pos:line="157" pos:column="35">&amp;<pos:position pos:line="157" pos:column="40"/></operator> <name pos:line="157" pos:column="37">CURL_GSKPROTO_TLSV11_MASK<pos:position pos:line="157" pos:column="62"/></name><operator pos:line="157" pos:column="62">)<pos:position pos:line="157" pos:column="63"/></operator></expr>?<pos:position pos:line="157" pos:column="64"/></condition><then pos:line="157" pos:column="64">
                      <expr><name pos:line="158" pos:column="23">GSK_TRUE<pos:position pos:line="158" pos:column="31"/></name></expr></then><else pos:line="158" pos:column="31">: <expr><name pos:line="158" pos:column="33">GSK_FALSE<pos:position pos:line="158" pos:column="42"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="158" pos:column="44">TRUE<pos:position pos:line="158" pos:column="48"/></name></expr></argument>)<pos:position pos:line="158" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="50"/></expr_stmt>
    <if pos:line="159" pos:column="5">if<condition pos:line="159" pos:column="7">(<expr><name pos:line="159" pos:column="8">result<pos:position pos:line="159" pos:column="14"/></name> <operator pos:line="159" pos:column="15">==<pos:position pos:line="159" pos:column="17"/></operator> <name pos:line="159" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="159" pos:column="44"/></name></expr>)<pos:position pos:line="159" pos:column="45"/></condition><then pos:line="159" pos:column="45"> <block pos:line="159" pos:column="46">{
      <expr_stmt><expr><name pos:line="160" pos:column="7">result<pos:position pos:line="160" pos:column="13"/></name> <operator pos:line="160" pos:column="14">=<pos:position pos:line="160" pos:column="15"/></operator> <name pos:line="160" pos:column="16">CURLE_OK<pos:position pos:line="160" pos:column="24"/></name></expr>;<pos:position pos:line="160" pos:column="25"/></expr_stmt>
      <if pos:line="161" pos:column="7">if<condition pos:line="161" pos:column="9">(<expr><name pos:line="161" pos:column="10">protoflags<pos:position pos:line="161" pos:column="20"/></name> <operator pos:line="161" pos:column="21">==<pos:position pos:line="161" pos:column="23"/></operator> <name pos:line="161" pos:column="24">CURL_GSKPROTO_TLSV11_MASK<pos:position pos:line="161" pos:column="49"/></name></expr>)<pos:position pos:line="161" pos:column="50"/></condition><then pos:line="161" pos:column="50"> <block pos:line="161" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">failf<pos:position pos:line="162" pos:column="14"/></name><argument_list pos:line="162" pos:column="14">(<argument><expr><name pos:line="162" pos:column="15">data<pos:position pos:line="162" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="21">"TLS 1.1 not yet supported"<pos:position pos:line="162" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="163" pos:column="9">result<pos:position pos:line="163" pos:column="15"/></name> <operator pos:line="163" pos:column="16">=<pos:position pos:line="163" pos:column="17"/></operator> <name pos:line="163" pos:column="18">CURLE_SSL_CIPHER<pos:position pos:line="163" pos:column="34"/></name></expr>;<pos:position pos:line="163" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="164" pos:column="8"/></block></then></if>
    }<pos:position pos:line="165" pos:column="6"/></block></then></if>
  }<pos:position pos:line="166" pos:column="4"/></block></then></if>
  <if pos:line="167" pos:column="3">if<condition pos:line="167" pos:column="5">(<expr><operator pos:line="167" pos:column="6">!<pos:position pos:line="167" pos:column="7"/></operator><name pos:line="167" pos:column="7">result<pos:position pos:line="167" pos:column="13"/></name></expr>)<pos:position pos:line="167" pos:column="14"/></condition><then pos:line="167" pos:column="14"> <block pos:line="167" pos:column="15">{
    <expr_stmt><expr><name pos:line="168" pos:column="5">result<pos:position pos:line="168" pos:column="11"/></name> <operator pos:line="168" pos:column="12">=<pos:position pos:line="168" pos:column="13"/></operator> <call><name pos:line="168" pos:column="14">set_enum<pos:position pos:line="168" pos:column="22"/></name><argument_list pos:line="168" pos:column="22">(<argument><expr><name pos:line="168" pos:column="23">data<pos:position pos:line="168" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="29">BACKEND<pos:position pos:line="168" pos:column="36"/></name><operator pos:line="168" pos:column="36">-&gt;<pos:position pos:line="168" pos:column="41"/></operator><name pos:line="168" pos:column="38">handle<pos:position pos:line="168" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="46">GSK_PROTOCOL_TLSV12<pos:position pos:line="168" pos:column="65"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="169" pos:column="23">(<pos:position pos:line="169" pos:column="24"/></operator><name pos:line="169" pos:column="24">protoflags<pos:position pos:line="169" pos:column="34"/></name> <operator pos:line="169" pos:column="35">&amp;<pos:position pos:line="169" pos:column="40"/></operator> <name pos:line="169" pos:column="37">CURL_GSKPROTO_TLSV12_MASK<pos:position pos:line="169" pos:column="62"/></name><operator pos:line="169" pos:column="62">)<pos:position pos:line="169" pos:column="63"/></operator></expr>?<pos:position pos:line="169" pos:column="64"/></condition><then pos:line="169" pos:column="64">
                      <expr><name pos:line="170" pos:column="23">GSK_TRUE<pos:position pos:line="170" pos:column="31"/></name></expr></then><else pos:line="170" pos:column="31">: <expr><name pos:line="170" pos:column="33">GSK_FALSE<pos:position pos:line="170" pos:column="42"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="170" pos:column="44">TRUE<pos:position pos:line="170" pos:column="48"/></name></expr></argument>)<pos:position pos:line="170" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="50"/></expr_stmt>
    <if pos:line="171" pos:column="5">if<condition pos:line="171" pos:column="7">(<expr><name pos:line="171" pos:column="8">result<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">==<pos:position pos:line="171" pos:column="17"/></operator> <name pos:line="171" pos:column="18">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="171" pos:column="44"/></name></expr>)<pos:position pos:line="171" pos:column="45"/></condition><then pos:line="171" pos:column="45"> <block pos:line="171" pos:column="46">{
      <expr_stmt><expr><name pos:line="172" pos:column="7">result<pos:position pos:line="172" pos:column="13"/></name> <operator pos:line="172" pos:column="14">=<pos:position pos:line="172" pos:column="15"/></operator> <name pos:line="172" pos:column="16">CURLE_OK<pos:position pos:line="172" pos:column="24"/></name></expr>;<pos:position pos:line="172" pos:column="25"/></expr_stmt>
      <if pos:line="173" pos:column="7">if<condition pos:line="173" pos:column="9">(<expr><name pos:line="173" pos:column="10">protoflags<pos:position pos:line="173" pos:column="20"/></name> <operator pos:line="173" pos:column="21">==<pos:position pos:line="173" pos:column="23"/></operator> <name pos:line="173" pos:column="24">CURL_GSKPROTO_TLSV12_MASK<pos:position pos:line="173" pos:column="49"/></name></expr>)<pos:position pos:line="173" pos:column="50"/></condition><then pos:line="173" pos:column="50"> <block pos:line="173" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">failf<pos:position pos:line="174" pos:column="14"/></name><argument_list pos:line="174" pos:column="14">(<argument><expr><name pos:line="174" pos:column="15">data<pos:position pos:line="174" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="21">"TLS 1.2 not yet supported"<pos:position pos:line="174" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="175" pos:column="9">result<pos:position pos:line="175" pos:column="15"/></name> <operator pos:line="175" pos:column="16">=<pos:position pos:line="175" pos:column="17"/></operator> <name pos:line="175" pos:column="18">CURLE_SSL_CIPHER<pos:position pos:line="175" pos:column="34"/></name></expr>;<pos:position pos:line="175" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="176" pos:column="8"/></block></then></if>
    }<pos:position pos:line="177" pos:column="6"/></block></then></if>
  }<pos:position pos:line="178" pos:column="4"/></block></then></if>
  <if pos:line="179" pos:column="3">if<condition pos:line="179" pos:column="5">(<expr><operator pos:line="179" pos:column="6">!<pos:position pos:line="179" pos:column="7"/></operator><name pos:line="179" pos:column="7">result<pos:position pos:line="179" pos:column="13"/></name></expr>)<pos:position pos:line="179" pos:column="14"/></condition><then pos:line="179" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="180" pos:column="5">result<pos:position pos:line="180" pos:column="11"/></name> <operator pos:line="180" pos:column="12">=<pos:position pos:line="180" pos:column="13"/></operator> <call><name pos:line="180" pos:column="14">set_enum<pos:position pos:line="180" pos:column="22"/></name><argument_list pos:line="180" pos:column="22">(<argument><expr><name pos:line="180" pos:column="23">data<pos:position pos:line="180" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="29">BACKEND<pos:position pos:line="180" pos:column="36"/></name><operator pos:line="180" pos:column="36">-&gt;<pos:position pos:line="180" pos:column="41"/></operator><name pos:line="180" pos:column="38">handle<pos:position pos:line="180" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="46">GSK_SERVER_AUTH_TYPE<pos:position pos:line="180" pos:column="66"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="181" pos:column="23">verifypeer<pos:position pos:line="181" pos:column="33"/></name></expr>?<pos:position pos:line="181" pos:column="34"/></condition><then pos:line="181" pos:column="34"> <expr><name pos:line="181" pos:column="35">GSK_SERVER_AUTH_FULL<pos:position pos:line="181" pos:column="55"/></name></expr></then><else pos:line="181" pos:column="55">:
                      <expr><name pos:line="182" pos:column="23">GSK_SERVER_AUTH_PASSTHRU<pos:position pos:line="182" pos:column="47"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="182" pos:column="49">FALSE<pos:position pos:line="182" pos:column="54"/></name></expr></argument>)<pos:position pos:line="182" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="56"/></expr_stmt></block></then></if>

  <if pos:line="184" pos:column="3">if<condition pos:line="184" pos:column="5">(<expr><operator pos:line="184" pos:column="6">!<pos:position pos:line="184" pos:column="7"/></operator><name pos:line="184" pos:column="7">result<pos:position pos:line="184" pos:column="13"/></name></expr>)<pos:position pos:line="184" pos:column="14"/></condition><then pos:line="184" pos:column="14"> <block pos:line="184" pos:column="15">{
    <comment type="block" pos:line="185" pos:column="5">/* Start handshake. Try asynchronous first. */</comment>
    <expr_stmt><expr><call><name pos:line="186" pos:column="5">memset<pos:position pos:line="186" pos:column="11"/></name><argument_list pos:line="186" pos:column="11">(<argument><expr><operator pos:line="186" pos:column="12">&amp;<pos:position pos:line="186" pos:column="17"/></operator><name pos:line="186" pos:column="13">commarea<pos:position pos:line="186" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="186" pos:column="23">0<pos:position pos:line="186" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="186" pos:column="26">sizeof <name pos:line="186" pos:column="33">commarea<pos:position pos:line="186" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="186" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="187" pos:column="5">BACKEND<pos:position pos:line="187" pos:column="12"/></name><operator pos:line="187" pos:column="12">-&gt;<pos:position pos:line="187" pos:column="17"/></operator><name pos:line="187" pos:column="14">iocport<pos:position pos:line="187" pos:column="21"/></name></name> <operator pos:line="187" pos:column="22">=<pos:position pos:line="187" pos:column="23"/></operator> <call><name pos:line="187" pos:column="24">QsoCreateIOCompletionPort<pos:position pos:line="187" pos:column="49"/></name><argument_list pos:line="187" pos:column="49">()<pos:position pos:line="187" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="52"/></expr_stmt>
    <if pos:line="188" pos:column="5">if<condition pos:line="188" pos:column="7">(<expr><name><name pos:line="188" pos:column="8">BACKEND<pos:position pos:line="188" pos:column="15"/></name><operator pos:line="188" pos:column="15">-&gt;<pos:position pos:line="188" pos:column="20"/></operator><name pos:line="188" pos:column="17">iocport<pos:position pos:line="188" pos:column="24"/></name></name> <operator pos:line="188" pos:column="25">!=<pos:position pos:line="188" pos:column="27"/></operator> <operator pos:line="188" pos:column="28">-<pos:position pos:line="188" pos:column="29"/></operator><literal type="number" pos:line="188" pos:column="29">1<pos:position pos:line="188" pos:column="30"/></literal></expr>)<pos:position pos:line="188" pos:column="31"/></condition><then pos:line="188" pos:column="31"> <block pos:line="188" pos:column="32">{
      <expr_stmt><expr><name pos:line="189" pos:column="7">result<pos:position pos:line="189" pos:column="13"/></name> <operator pos:line="189" pos:column="14">=<pos:position pos:line="189" pos:column="15"/></operator> <call><name pos:line="189" pos:column="16">gskit_status<pos:position pos:line="189" pos:column="28"/></name><argument_list pos:line="189" pos:column="28">(<argument><expr><name pos:line="189" pos:column="29">data<pos:position pos:line="189" pos:column="33"/></name></expr></argument>,
                            <argument><expr><call><name pos:line="190" pos:column="29">gsk_secure_soc_startInit<pos:position pos:line="190" pos:column="53"/></name><argument_list pos:line="190" pos:column="53">(<argument><expr><name><name pos:line="190" pos:column="54">BACKEND<pos:position pos:line="190" pos:column="61"/></name><operator pos:line="190" pos:column="61">-&gt;<pos:position pos:line="190" pos:column="66"/></operator><name pos:line="190" pos:column="63">handle<pos:position pos:line="190" pos:column="69"/></name></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="191" pos:column="54">BACKEND<pos:position pos:line="191" pos:column="61"/></name><operator pos:line="191" pos:column="61">-&gt;<pos:position pos:line="191" pos:column="66"/></operator><name pos:line="191" pos:column="63">iocport<pos:position pos:line="191" pos:column="70"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="192" pos:column="54">&amp;<pos:position pos:line="192" pos:column="59"/></operator><name pos:line="192" pos:column="55">commarea<pos:position pos:line="192" pos:column="63"/></name></expr></argument>)<pos:position pos:line="192" pos:column="64"/></argument_list></call></expr></argument>,
                            <argument><expr><literal type="string" pos:line="193" pos:column="29">"gsk_secure_soc_startInit()"<pos:position pos:line="193" pos:column="57"/></literal></expr></argument>,
                            <argument><expr><name pos:line="194" pos:column="29">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="194" pos:column="52"/></name></expr></argument>)<pos:position pos:line="194" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="54"/></expr_stmt>
      <if pos:line="195" pos:column="7">if<condition pos:line="195" pos:column="9">(<expr><operator pos:line="195" pos:column="10">!<pos:position pos:line="195" pos:column="11"/></operator><name pos:line="195" pos:column="11">result<pos:position pos:line="195" pos:column="17"/></name></expr>)<pos:position pos:line="195" pos:column="18"/></condition><then pos:line="195" pos:column="18"> <block pos:line="195" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="196" pos:column="9">connssl<pos:position pos:line="196" pos:column="16"/></name><operator pos:line="196" pos:column="16">-&gt;<pos:position pos:line="196" pos:column="21"/></operator><name pos:line="196" pos:column="18">connecting_state<pos:position pos:line="196" pos:column="34"/></name></name> <operator pos:line="196" pos:column="35">=<pos:position pos:line="196" pos:column="36"/></operator> <name pos:line="196" pos:column="37">ssl_connect_2<pos:position pos:line="196" pos:column="50"/></name></expr>;<pos:position pos:line="196" pos:column="51"/></expr_stmt>
        <return pos:line="197" pos:column="9">return <expr><name pos:line="197" pos:column="16">CURLE_OK<pos:position pos:line="197" pos:column="24"/></name></expr>;<pos:position pos:line="197" pos:column="25"/></return>
      }<pos:position pos:line="198" pos:column="8"/></block></then>
      <else pos:line="199" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="9">close_async_handshake<pos:position pos:line="200" pos:column="30"/></name><argument_list pos:line="200" pos:column="30">(<argument><expr><name pos:line="200" pos:column="31">connssl<pos:position pos:line="200" pos:column="38"/></name></expr></argument>)<pos:position pos:line="200" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="40"/></expr_stmt></block></else></if>
    }<pos:position pos:line="201" pos:column="6"/></block></then>
    <elseif pos:line="202" pos:column="5">else <if pos:line="202" pos:column="10">if<condition pos:line="202" pos:column="12">(<expr><name pos:line="202" pos:column="13">errno<pos:position pos:line="202" pos:column="18"/></name> <operator pos:line="202" pos:column="19">!=<pos:position pos:line="202" pos:column="21"/></operator> <name pos:line="202" pos:column="22">ENOBUFS<pos:position pos:line="202" pos:column="29"/></name></expr>)<pos:position pos:line="202" pos:column="30"/></condition><then pos:line="202" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="203" pos:column="7">result<pos:position pos:line="203" pos:column="13"/></name> <operator pos:line="203" pos:column="14">=<pos:position pos:line="203" pos:column="15"/></operator> <call><name pos:line="203" pos:column="16">gskit_status<pos:position pos:line="203" pos:column="28"/></name><argument_list pos:line="203" pos:column="28">(<argument><expr><name pos:line="203" pos:column="29">data<pos:position pos:line="203" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="35">GSK_ERROR_IO<pos:position pos:line="203" pos:column="47"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="204" pos:column="29">"QsoCreateIOCompletionPort()"<pos:position pos:line="204" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="204" pos:column="60">0<pos:position pos:line="204" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="63"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="205" pos:column="5">else <if pos:line="205" pos:column="10">if<condition pos:line="205" pos:column="12">(<expr><name><name pos:line="205" pos:column="13">conn<pos:position pos:line="205" pos:column="17"/></name><operator pos:line="205" pos:column="17">-&gt;<pos:position pos:line="205" pos:column="22"/></operator><name pos:line="205" pos:column="19">proxy_ssl<pos:position pos:line="205" pos:column="28"/></name><index pos:line="205" pos:column="28">[<expr><name pos:line="205" pos:column="29">sockindex<pos:position pos:line="205" pos:column="38"/></name></expr>]<pos:position pos:line="205" pos:column="39"/></index></name><operator pos:line="205" pos:column="39">.<pos:position pos:line="205" pos:column="40"/></operator><name pos:line="205" pos:column="40">use<pos:position pos:line="205" pos:column="43"/></name></expr>)<pos:position pos:line="205" pos:column="44"/></condition><then pos:line="205" pos:column="44"> <block pos:line="205" pos:column="45">{
      <comment type="block" pos:line="206" pos:column="7">/* Cannot pipeline while handshaking synchronously. */</comment>
      <expr_stmt><expr><name pos:line="207" pos:column="7">result<pos:position pos:line="207" pos:column="13"/></name> <operator pos:line="207" pos:column="14">=<pos:position pos:line="207" pos:column="15"/></operator> <name pos:line="207" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="207" pos:column="39"/></name></expr>;<pos:position pos:line="207" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="208" pos:column="6"/></block></then></if></elseif>
    <else pos:line="209" pos:column="5">else <block pos:line="209" pos:column="10">{
      <comment type="block" pos:line="210" pos:column="7">/* No more completion port available. Use synchronous IO. */</comment>
      <expr_stmt><expr><name pos:line="211" pos:column="7">result<pos:position pos:line="211" pos:column="13"/></name> <operator pos:line="211" pos:column="14">=<pos:position pos:line="211" pos:column="15"/></operator> <call><name pos:line="211" pos:column="16">gskit_status<pos:position pos:line="211" pos:column="28"/></name><argument_list pos:line="211" pos:column="28">(<argument><expr><name pos:line="211" pos:column="29">data<pos:position pos:line="211" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="211" pos:column="35">gsk_secure_soc_init<pos:position pos:line="211" pos:column="54"/></name><argument_list pos:line="211" pos:column="54">(<argument><expr><name><name pos:line="211" pos:column="55">BACKEND<pos:position pos:line="211" pos:column="62"/></name><operator pos:line="211" pos:column="62">-&gt;<pos:position pos:line="211" pos:column="67"/></operator><name pos:line="211" pos:column="64">handle<pos:position pos:line="211" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="71"/></argument_list></call></expr></argument>,
                            <argument><expr><literal type="string" pos:line="212" pos:column="29">"gsk_secure_soc_init()"<pos:position pos:line="212" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="212" pos:column="54">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="212" pos:column="77"/></name></expr></argument>)<pos:position pos:line="212" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="79"/></expr_stmt>
      <if pos:line="213" pos:column="7">if<condition pos:line="213" pos:column="9">(<expr><operator pos:line="213" pos:column="10">!<pos:position pos:line="213" pos:column="11"/></operator><name pos:line="213" pos:column="11">result<pos:position pos:line="213" pos:column="17"/></name></expr>)<pos:position pos:line="213" pos:column="18"/></condition><then pos:line="213" pos:column="18"> <block pos:line="213" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="214" pos:column="9">connssl<pos:position pos:line="214" pos:column="16"/></name><operator pos:line="214" pos:column="16">-&gt;<pos:position pos:line="214" pos:column="21"/></operator><name pos:line="214" pos:column="18">connecting_state<pos:position pos:line="214" pos:column="34"/></name></name> <operator pos:line="214" pos:column="35">=<pos:position pos:line="214" pos:column="36"/></operator> <name pos:line="214" pos:column="37">ssl_connect_3<pos:position pos:line="214" pos:column="50"/></name></expr>;<pos:position pos:line="214" pos:column="51"/></expr_stmt>
        <return pos:line="215" pos:column="9">return <expr><name pos:line="215" pos:column="16">CURLE_OK<pos:position pos:line="215" pos:column="24"/></name></expr>;<pos:position pos:line="215" pos:column="25"/></return>
      }<pos:position pos:line="216" pos:column="8"/></block></then></if>
    }<pos:position pos:line="217" pos:column="6"/></block></else></if>
  }<pos:position pos:line="218" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="220" pos:column="3">/* Error: rollback. */</comment>
  <expr_stmt><expr><call><name pos:line="221" pos:column="3">close_one<pos:position pos:line="221" pos:column="12"/></name><argument_list pos:line="221" pos:column="12">(<argument><expr><name pos:line="221" pos:column="13">connssl<pos:position pos:line="221" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="22">conn<pos:position pos:line="221" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="28">sockindex<pos:position pos:line="221" pos:column="37"/></name></expr></argument>)<pos:position pos:line="221" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="39"/></expr_stmt>
  <return pos:line="222" pos:column="3">return <expr><name pos:line="222" pos:column="10">result<pos:position pos:line="222" pos:column="16"/></name></expr>;<pos:position pos:line="222" pos:column="17"/></return>
}<pos:position pos:line="223" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_585_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">res<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><literal type="number" pos:line="3" pos:column="13">0<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURL<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name><name pos:line="4" pos:column="9">curl<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">NUM_HANDLES<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name> <init pos:line="4" pos:column="27">= <expr><block pos:line="4" pos:column="29">{<expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr>}<pos:position pos:line="4" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">running<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLM<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">m<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">target_url<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><literal type="number" pos:line="8" pos:column="19">256<pos:position pos:line="8" pos:column="22"/></literal></expr>]<pos:position pos:line="8" pos:column="23"/></index></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">dnsentry<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">256<pos:position pos:line="9" pos:column="20"/></literal></expr>]<pos:position pos:line="9" pos:column="21"/></index></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">curl_slist<pos:position pos:line="10" pos:column="20"/></name></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">slist<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><name pos:line="10" pos:column="30">NULL<pos:position pos:line="10" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="37">slist2<pos:position pos:line="10" pos:column="43"/></name></decl>;<pos:position pos:line="10" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">port<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><name pos:line="11" pos:column="16">libtest_arg3<pos:position pos:line="11" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">address<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><name pos:line="12" pos:column="19">libtest_arg2<pos:position pos:line="12" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="14" pos:column="3">(<pos:position pos:line="14" pos:column="4"/></operator><name pos:line="14" pos:column="4">void<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">)<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">URL<pos:position pos:line="14" pos:column="12"/></name></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* Create fake DNS entries for serverX.example.com for all handles */</comment>
  <for pos:line="17" pos:column="3">for<control pos:line="17" pos:column="6">(<init><expr><name pos:line="17" pos:column="7">i<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <literal type="number" pos:line="17" pos:column="11">0<pos:position pos:line="17" pos:column="12"/></literal></expr>;<pos:position pos:line="17" pos:column="13"/></init> <condition><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&lt;<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="18">NUM_HANDLES<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></condition> <incr><expr><name pos:line="17" pos:column="31">i<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">++<pos:position pos:line="17" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="35"/></control> <block pos:line="17" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">snprintf<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">dnsentry<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="24">sizeof<argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">dnsentry<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="42">"server%d.example.com:%s:%s"<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>,
             <argument><expr><name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">+<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">1<pos:position pos:line="19" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="21">port<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="27">address<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">printf<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"%s\n"<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="20">dnsentry<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">slist2<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">curl_slist_append<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">slist<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">dnsentry<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">slist2<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16"> <block pos:line="22" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">fprintf<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">stderr<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"curl_slist_append() failed\n"<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
      <goto pos:line="24" pos:column="7">goto <name pos:line="24" pos:column="12">test_cleanup<pos:position pos:line="24" pos:column="24"/></name>;<pos:position pos:line="24" pos:column="25"/></goto>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">slist<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name pos:line="26" pos:column="13">slist2<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">start_test_timing<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">()<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">global_init<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">CURL_GLOBAL_ALL<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">multi_init<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name pos:line="33" pos:column="14">m<pos:position pos:line="33" pos:column="15"/></name></expr></argument>)<pos:position pos:line="33" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">multi_setopt<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">m<pos:position pos:line="35" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="19">CURLMOPT_MAXCONNECTS<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="41">3L<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* get NUM_HANDLES easy handles */</comment>
  <for pos:line="38" pos:column="3">for<control pos:line="38" pos:column="6">(<init><expr><name pos:line="38" pos:column="7">i<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <literal type="number" pos:line="38" pos:column="11">0<pos:position pos:line="38" pos:column="12"/></literal></expr>;<pos:position pos:line="38" pos:column="13"/></init> <condition><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">&lt;<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="18">NUM_HANDLES<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></condition> <incr><expr><name pos:line="38" pos:column="31">i<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">++<pos:position pos:line="38" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="35"/></control> <block pos:line="38" pos:column="36">{
    <comment type="block" pos:line="39" pos:column="5">/* get an easy handle */</comment>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">easy_init<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name><name pos:line="40" pos:column="15">curl<pos:position pos:line="40" pos:column="19"/></name><index pos:line="40" pos:column="19">[<expr><name pos:line="40" pos:column="20">i<pos:position pos:line="40" pos:column="21"/></name></expr>]<pos:position pos:line="40" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="41" pos:column="5">/* specify target */</comment>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">snprintf<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name pos:line="42" pos:column="14">target_url<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="26">sizeof<argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">target_url<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></sizeof></expr></argument>,
             <argument><expr><literal type="string" pos:line="43" pos:column="14">"http://server%d.example.com:%s/path/1506%04i"<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>,
             <argument><expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">+<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">1<pos:position pos:line="44" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="21">port<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">i<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">+<pos:position pos:line="44" pos:column="30"/></operator> <literal type="number" pos:line="44" pos:column="31">1<pos:position pos:line="44" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">target_url<pos:position pos:line="45" pos:column="15"/></name><index pos:line="45" pos:column="15">[<expr><sizeof pos:line="45" pos:column="16">sizeof<argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">target_url<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></sizeof> <operator pos:line="45" pos:column="35">-<pos:position pos:line="45" pos:column="36"/></operator> <literal type="number" pos:line="45" pos:column="37">1<pos:position pos:line="45" pos:column="38"/></literal></expr>]<pos:position pos:line="45" pos:column="39"/></index></name> <operator pos:line="45" pos:column="40">=<pos:position pos:line="45" pos:column="41"/></operator> <literal type="char" pos:line="45" pos:column="42">'\0'<pos:position pos:line="45" pos:column="46"/></literal></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">easy_setopt<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name><name pos:line="46" pos:column="17">curl<pos:position pos:line="46" pos:column="21"/></name><index pos:line="46" pos:column="21">[<expr><name pos:line="46" pos:column="22">i<pos:position pos:line="46" pos:column="23"/></name></expr>]<pos:position pos:line="46" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">CURLOPT_URL<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">target_url<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
    <comment type="block" pos:line="47" pos:column="5">/* go verbose */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">easy_setopt<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">curl<pos:position pos:line="48" pos:column="21"/></name><index pos:line="48" pos:column="21">[<expr><name pos:line="48" pos:column="22">i<pos:position pos:line="48" pos:column="23"/></name></expr>]<pos:position pos:line="48" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">CURLOPT_VERBOSE<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="43">1L<pos:position pos:line="48" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
    <comment type="block" pos:line="49" pos:column="5">/* include headers */</comment>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">easy_setopt<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name><name pos:line="50" pos:column="17">curl<pos:position pos:line="50" pos:column="21"/></name><index pos:line="50" pos:column="21">[<expr><name pos:line="50" pos:column="22">i<pos:position pos:line="50" pos:column="23"/></name></expr>]<pos:position pos:line="50" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="26">CURLOPT_HEADER<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="42">1L<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">easy_setopt<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name><name pos:line="52" pos:column="17">curl<pos:position pos:line="52" pos:column="21"/></name><index pos:line="52" pos:column="21">[<expr><name pos:line="52" pos:column="22">i<pos:position pos:line="52" pos:column="23"/></name></expr>]<pos:position pos:line="52" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="26">CURLOPT_RESOLVE<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">slist<pos:position pos:line="52" pos:column="48"/></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">fprintf<pos:position pos:line="55" pos:column="10"/></name><argument_list pos:line="55" pos:column="10">(<argument><expr><name pos:line="55" pos:column="11">stderr<pos:position pos:line="55" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="19">"Start at URL 0\n"<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>

  <for pos:line="57" pos:column="3">for<control pos:line="57" pos:column="6">(<init><expr><name pos:line="57" pos:column="7">i<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <literal type="number" pos:line="57" pos:column="11">0<pos:position pos:line="57" pos:column="12"/></literal></expr>;<pos:position pos:line="57" pos:column="13"/></init> <condition><expr><name pos:line="57" pos:column="14">i<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">&lt;<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="18">NUM_HANDLES<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></condition> <incr><expr><name pos:line="57" pos:column="31">i<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">++<pos:position pos:line="57" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="35"/></control> <block pos:line="57" pos:column="36">{
    <comment type="block" pos:line="58" pos:column="5">/* add handle to multi */</comment>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">multi_add_handle<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">m<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="25">curl<pos:position pos:line="59" pos:column="29"/></name><index pos:line="59" pos:column="29">[<expr><name pos:line="59" pos:column="30">i<pos:position pos:line="59" pos:column="31"/></name></expr>]<pos:position pos:line="59" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>

    <for pos:line="61" pos:column="5">for<control pos:line="61" pos:column="8">(<init pos:line="61" pos:column="9">;<pos:position pos:line="61" pos:column="10"/></init><condition pos:line="61" pos:column="10">;<pos:position pos:line="61" pos:column="11"/></condition><incr/>)<pos:position pos:line="61" pos:column="12"/></control> <block pos:line="61" pos:column="13">{
      <decl_stmt><decl><type><name><name pos:line="62" pos:column="7">struct<pos:position pos:line="62" pos:column="13"/></name> <name pos:line="62" pos:column="14">timeval<pos:position pos:line="62" pos:column="21"/></name></name></type> <name pos:line="62" pos:column="22">interval<pos:position pos:line="62" pos:column="30"/></name></decl>;<pos:position pos:line="62" pos:column="31"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="63" pos:column="7">fd_set<pos:position pos:line="63" pos:column="13"/></name></type> <name pos:line="63" pos:column="14">rd<pos:position pos:line="63" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="63" pos:column="18">wr<pos:position pos:line="63" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="63" pos:column="22">exc<pos:position pos:line="63" pos:column="25"/></name></decl>;<pos:position pos:line="63" pos:column="26"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">int<pos:position pos:line="64" pos:column="10"/></name></type> <name pos:line="64" pos:column="11">maxfd<pos:position pos:line="64" pos:column="16"/></name> <init pos:line="64" pos:column="17">= <expr><operator pos:line="64" pos:column="19">-<pos:position pos:line="64" pos:column="20"/></operator><literal type="number" pos:line="64" pos:column="20">99<pos:position pos:line="64" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="64" pos:column="23"/></decl_stmt>

      <expr_stmt><expr><name><name pos:line="66" pos:column="7">interval<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">.<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">tv_sec<pos:position pos:line="66" pos:column="22"/></name></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <literal type="number" pos:line="66" pos:column="25">1<pos:position pos:line="66" pos:column="26"/></literal></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">interval<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">.<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="16">tv_usec<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <literal type="number" pos:line="67" pos:column="26">0<pos:position pos:line="67" pos:column="27"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="69" pos:column="7">multi_perform<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">m<pos:position pos:line="69" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="24">&amp;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="25">running<pos:position pos:line="69" pos:column="32"/></name></expr></argument>)<pos:position pos:line="69" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="71" pos:column="7">abort_on_test_timeout<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">()<pos:position pos:line="71" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>

      <if pos:line="73" pos:column="7">if<condition pos:line="73" pos:column="9">(<expr><operator pos:line="73" pos:column="10">!<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="11">running<pos:position pos:line="73" pos:column="18"/></name></expr>)<pos:position pos:line="73" pos:column="19"/></condition><then pos:line="73" pos:column="19">
        <block type="pseudo"><break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break></block></then></if> <comment type="block" pos:line="74" pos:column="16">/* done */</comment>

      <expr_stmt><expr><call><name pos:line="76" pos:column="7">FD_ZERO<pos:position pos:line="76" pos:column="14"/></name><argument_list pos:line="76" pos:column="14">(<argument><expr><operator pos:line="76" pos:column="15">&amp;<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="16">rd<pos:position pos:line="76" pos:column="18"/></name></expr></argument>)<pos:position pos:line="76" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">FD_ZERO<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><operator pos:line="77" pos:column="15">&amp;<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="16">wr<pos:position pos:line="77" pos:column="18"/></name></expr></argument>)<pos:position pos:line="77" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">FD_ZERO<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><operator pos:line="78" pos:column="15">&amp;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="16">exc<pos:position pos:line="78" pos:column="19"/></name></expr></argument>)<pos:position pos:line="78" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="80" pos:column="7">multi_fdset<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name pos:line="80" pos:column="19">m<pos:position pos:line="80" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="22">&amp;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="23">rd<pos:position pos:line="80" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="27">&amp;<pos:position pos:line="80" pos:column="32"/></operator><name pos:line="80" pos:column="28">wr<pos:position pos:line="80" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="32">&amp;<pos:position pos:line="80" pos:column="37"/></operator><name pos:line="80" pos:column="33">exc<pos:position pos:line="80" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="38">&amp;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="39">maxfd<pos:position pos:line="80" pos:column="44"/></name></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="82" pos:column="7">/* At this point, maxfd is guaranteed to be greater or equal than -1. */</comment>

      <expr_stmt><expr><call><name pos:line="84" pos:column="7">select_test<pos:position pos:line="84" pos:column="18"/></name><argument_list pos:line="84" pos:column="18">(<argument><expr><name pos:line="84" pos:column="19">maxfd<pos:position pos:line="84" pos:column="24"/></name> <operator pos:line="84" pos:column="25">+<pos:position pos:line="84" pos:column="26"/></operator> <literal type="number" pos:line="84" pos:column="27">1<pos:position pos:line="84" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="30">&amp;<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="31">rd<pos:position pos:line="84" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="35">&amp;<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="36">wr<pos:position pos:line="84" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="40">&amp;<pos:position pos:line="84" pos:column="45"/></operator><name pos:line="84" pos:column="41">exc<pos:position pos:line="84" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="46">&amp;<pos:position pos:line="84" pos:column="51"/></operator><name pos:line="84" pos:column="47">interval<pos:position pos:line="84" pos:column="55"/></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="57"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="86" pos:column="7">abort_on_test_timeout<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">()<pos:position pos:line="86" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">wait_ms<pos:position pos:line="88" pos:column="12"/></name><argument_list pos:line="88" pos:column="12">(<argument><expr><literal type="number" pos:line="88" pos:column="13">1<pos:position pos:line="88" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="16"/></expr_stmt> <comment type="block" pos:line="88" pos:column="17">/* to ensure different end times */</comment>
  }<pos:position pos:line="89" pos:column="4"/></block></for>

<label><name pos:line="91" pos:column="1">test_cleanup<pos:position pos:line="91" pos:column="13"/></name>:<pos:position pos:line="91" pos:column="14"/></label>

  <comment type="block" pos:line="93" pos:column="3">/* proper cleanup sequence - type PB */</comment>

  <for pos:line="95" pos:column="3">for<control pos:line="95" pos:column="6">(<init><expr><name pos:line="95" pos:column="7">i<pos:position pos:line="95" pos:column="8"/></name> <operator pos:line="95" pos:column="9">=<pos:position pos:line="95" pos:column="10"/></operator> <literal type="number" pos:line="95" pos:column="11">0<pos:position pos:line="95" pos:column="12"/></literal></expr>;<pos:position pos:line="95" pos:column="13"/></init> <condition><expr><name pos:line="95" pos:column="14">i<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">&lt;<pos:position pos:line="95" pos:column="20"/></operator> <name pos:line="95" pos:column="18">NUM_HANDLES<pos:position pos:line="95" pos:column="29"/></name></expr>;<pos:position pos:line="95" pos:column="30"/></condition> <incr><expr><name pos:line="95" pos:column="31">i<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">++<pos:position pos:line="95" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="95" pos:column="35"/></control> <block pos:line="95" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">curl_multi_remove_handle<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">(<argument><expr><name pos:line="96" pos:column="30">m<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="33">curl<pos:position pos:line="96" pos:column="37"/></name><index pos:line="96" pos:column="37">[<expr><name pos:line="96" pos:column="38">i<pos:position pos:line="96" pos:column="39"/></name></expr>]<pos:position pos:line="96" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">curl_easy_cleanup<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name><name pos:line="97" pos:column="23">curl<pos:position pos:line="97" pos:column="27"/></name><index pos:line="97" pos:column="27">[<expr><name pos:line="97" pos:column="28">i<pos:position pos:line="97" pos:column="29"/></name></expr>]<pos:position pos:line="97" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="100" pos:column="3">curl_slist_free_all<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><name pos:line="100" pos:column="23">slist<pos:position pos:line="100" pos:column="28"/></name></expr></argument>)<pos:position pos:line="100" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="102" pos:column="3">curl_multi_cleanup<pos:position pos:line="102" pos:column="21"/></name><argument_list pos:line="102" pos:column="21">(<argument><expr><name pos:line="102" pos:column="22">m<pos:position pos:line="102" pos:column="23"/></name></expr></argument>)<pos:position pos:line="102" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="103" pos:column="3">curl_global_cleanup<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">()<pos:position pos:line="103" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="25"/></expr_stmt>

  <return pos:line="105" pos:column="3">return <expr><name pos:line="105" pos:column="10">res<pos:position pos:line="105" pos:column="13"/></name></expr>;<pos:position pos:line="105" pos:column="14"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

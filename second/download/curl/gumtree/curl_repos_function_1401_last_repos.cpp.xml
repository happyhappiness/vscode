<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1401_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_conncache_foreach<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">conncache<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">connc<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">void<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">param<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                            <parameter><function_decl><type><name pos:line="3" pos:column="29">int<pos:position pos:line="3" pos:column="32"/></name></type> (<modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><name pos:line="3" pos:column="35">func<pos:position pos:line="3" pos:column="39"/></name>)<parameter_list pos:line="3" pos:column="40">(<parameter><decl><type><name><name pos:line="3" pos:column="41">struct<pos:position pos:line="3" pos:column="47"/></name> <name pos:line="3" pos:column="48">connectdata<pos:position pos:line="3" pos:column="59"/></name></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">conn<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="67">void<pos:position pos:line="3" pos:column="71"/></name> <modifier pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></modifier></type><name pos:line="3" pos:column="73">param<pos:position pos:line="3" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="79"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="80"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">curl_hash_iterator<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">iter<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">curl_llist_element<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">curr<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_hash_element<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">he<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">connc<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13">
    <block type="pseudo"><return pos:line="10" pos:column="5">return;<pos:position pos:line="10" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">Curl_hash_start_iterate<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name><name pos:line="12" pos:column="28">connc<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">hash<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="42">iter<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">he<pos:position pos:line="14" pos:column="5"/></name> <operator pos:line="14" pos:column="6">=<pos:position pos:line="14" pos:column="7"/></operator> <call><name pos:line="14" pos:column="8">Curl_hash_next_element<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><operator pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="32">iter<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
  <while pos:line="15" pos:column="3">while<condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">he<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition> <block pos:line="15" pos:column="13">{
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">connectbundle<pos:position pos:line="16" pos:column="25"/></name></name> <modifier pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></modifier></type><name pos:line="16" pos:column="27">bundle<pos:position pos:line="16" pos:column="33"/></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">bundle<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name><name pos:line="18" pos:column="14">he<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">ptr<pos:position pos:line="18" pos:column="21"/></name></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">he<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">Curl_hash_next_element<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="34">iter<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">curr<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <name><name pos:line="21" pos:column="12">bundle<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">conn_list<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">head<pos:position pos:line="21" pos:column="34"/></name></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    <while pos:line="22" pos:column="5">while<condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">curr<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition> <block pos:line="22" pos:column="17">{
      <comment type="block" pos:line="23" pos:column="7">/* Yes, we need to update curr before calling func(), because func()
         might decide to remove the connection */</comment>
      <decl_stmt><decl><type><name><name pos:line="25" pos:column="7">struct<pos:position pos:line="25" pos:column="13"/></name> <name pos:line="25" pos:column="14">connectdata<pos:position pos:line="25" pos:column="25"/></name></name> <modifier pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></modifier></type><name pos:line="25" pos:column="27">conn<pos:position pos:line="25" pos:column="31"/></name> <init pos:line="25" pos:column="32">= <expr><name><name pos:line="25" pos:column="34">curr<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">ptr<pos:position pos:line="25" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="44"/></decl_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">curr<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name><name pos:line="26" pos:column="14">curr<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">next<pos:position pos:line="26" pos:column="24"/></name></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>

      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><literal type="number" pos:line="28" pos:column="10">1<pos:position pos:line="28" pos:column="11"/></literal> <operator pos:line="28" pos:column="12">==<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">func<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">conn<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">param<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
        <block type="pseudo"><return pos:line="29" pos:column="9">return;<pos:position pos:line="29" pos:column="16"/></return></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
  }<pos:position pos:line="31" pos:column="4"/></block></while>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

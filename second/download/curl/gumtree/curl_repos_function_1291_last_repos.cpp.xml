<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1291_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">curltime<pos:position pos:line="1" pos:column="16"/></name></name></type> <name pos:line="1" pos:column="17">curlx_tvnow<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/*
  ** clock_gettime() is granted to be increased monotonically when the
  ** monotonic clock is queried. Time starting point is unspecified, it
  ** could be the system start-up time, the Epoch, or something else,
  ** in any case the time starting point does not change once that the
  ** system has started up.
  */</comment>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">timeval<pos:position pos:line="10" pos:column="17"/></name></name></type> <name pos:line="10" pos:column="18">now<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">curltime<pos:position pos:line="11" pos:column="18"/></name></name></type> <name pos:line="11" pos:column="19">cnow<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">timespec<pos:position pos:line="12" pos:column="18"/></name></name></type> <name pos:line="12" pos:column="19">tsnow<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><literal type="number" pos:line="13" pos:column="6">0<pos:position pos:line="13" pos:column="7"/></literal> <operator pos:line="13" pos:column="8">==<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">clock_gettime<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">CLOCK_MONOTONIC<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="42">&amp;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="43">tsnow<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50"> <block pos:line="13" pos:column="51">{
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">cnow<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">.<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">tv_sec<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name><name pos:line="14" pos:column="19">tsnow<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">.<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">tv_sec<pos:position pos:line="14" pos:column="31"/></name></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">cnow<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">.<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">tv_usec<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call pos:line="15" pos:column="20">(<name pos:line="15" pos:column="21">unsigned<pos:position pos:line="15" pos:column="29"/></name> <name pos:line="15" pos:column="30">int<pos:position pos:line="15" pos:column="33"/></name>)<argument_list pos:line="15" pos:column="34">(<argument><expr><name><name pos:line="15" pos:column="35">tsnow<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">.<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">tv_nsec<pos:position pos:line="15" pos:column="48"/></name></name> <operator pos:line="15" pos:column="49">/<pos:position pos:line="15" pos:column="50"/></operator> <literal type="number" pos:line="15" pos:column="51">1000<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then>
  <comment type="block" pos:line="17" pos:column="3">/*
  ** Even when the configure process has truly detected monotonic clock
  ** availability, it might happen that it is not actually available at
  ** run-time. When this occurs simply fallback to other time source.
  */</comment>
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">HAVE_GETTIMEOFDAY<pos:position pos:line="22" pos:column="25"/></name></cpp:ifdef>
  <else pos:line="23" pos:column="3">else <block pos:line="23" pos:column="8">{
    <expr_stmt><expr><operator pos:line="24" pos:column="5">(<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">void<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">)<pos:position pos:line="24" pos:column="11"/></operator><call><name pos:line="24" pos:column="11">gettimeofday<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="25">now<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">NULL<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">cnow<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">.<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">tv_sec<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="19">now<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">tv_sec<pos:position pos:line="25" pos:column="29"/></name></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">cnow<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">.<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">tv_usec<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">unsigned<pos:position pos:line="26" pos:column="29"/></name> <name pos:line="26" pos:column="30">int<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator><name><name pos:line="26" pos:column="34">now<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">.<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">tv_usec<pos:position pos:line="26" pos:column="45"/></name></name></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></else>
<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
  <else pos:line="29" pos:column="3">else <block pos:line="29" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">cnow<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">.<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">tv_sec<pos:position pos:line="30" pos:column="16"/></name></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">time<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">cnow<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">.<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">tv_usec<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">cnow<pos:position pos:line="34" pos:column="14"/></name></expr>;<pos:position pos:line="34" pos:column="15"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

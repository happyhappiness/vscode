<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_987_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SECStatus<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">BadCertHandler<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">arg<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">PRFileDesc<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">sock<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">SECStatus<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">success<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">SECSuccess<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">connectdata<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">conn<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator>struct <name pos:line="4" pos:column="38">connectdata<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">arg<pos:position pos:line="4" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">PRErrorCode<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">err<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">PR_GetError<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">()<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CERTCertificate<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">cert<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">subject<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">issuer<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">conn<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">data<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">set<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">ssl<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">certverifyresult<pos:position pos:line="9" pos:column="42"/></name></name><operator pos:line="9" pos:column="42">!=<pos:position pos:line="9" pos:column="44"/></operator><literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">success<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="12" pos:column="3">conn<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">data<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">set<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">ssl<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">certverifyresult<pos:position pos:line="12" pos:column="39"/></name></name><operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">err<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">cert<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">SSL_PeerCertificate<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">sock<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">subject<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">CERT_NameToAscii<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name><name pos:line="14" pos:column="31">cert<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">subject<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">issuer<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">CERT_NameToAscii<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="30">cert<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">issuer<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">CERT_DestroyCertificate<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">cert<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

  <switch pos:line="18" pos:column="3">switch<condition pos:line="18" pos:column="9">(<expr><name pos:line="18" pos:column="10">err<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition> <block pos:line="18" pos:column="15">{
  <case pos:line="19" pos:column="3">case <expr><name pos:line="19" pos:column="8">SEC_ERROR_CA_CERT_INVALID<pos:position pos:line="19" pos:column="33"/></name></expr>:<pos:position pos:line="19" pos:column="34"/></case>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">infof<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name><name pos:line="20" pos:column="11">conn<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">data<pos:position pos:line="20" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"Issuer certificate is invalid: '%s'\n"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">issuer<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name><name pos:line="21" pos:column="8">conn<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">data<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">set<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">ssl<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">verifypeer<pos:position pos:line="21" pos:column="38"/></name></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">success<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">SECFailure<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt></block></then></if>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">SEC_ERROR_UNTRUSTED_ISSUER<pos:position pos:line="24" pos:column="34"/></name></expr>:<pos:position pos:line="24" pos:column="35"/></case>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">conn<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">data<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">set<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">ssl<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">verifypeer<pos:position pos:line="25" pos:column="38"/></name></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">success<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">SECFailure<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">infof<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><name><name pos:line="27" pos:column="11">conn<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">data<pos:position pos:line="27" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"Certificate is signed by an untrusted issuer: '%s'\n"<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name pos:line="28" pos:column="11">issuer<pos:position pos:line="28" pos:column="17"/></name></expr></argument>)<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <break pos:line="29" pos:column="5">break;<pos:position pos:line="29" pos:column="11"/></break>
  <case pos:line="30" pos:column="3">case <expr><name pos:line="30" pos:column="8">SSL_ERROR_BAD_CERT_DOMAIN<pos:position pos:line="30" pos:column="33"/></name></expr>:<pos:position pos:line="30" pos:column="34"/></case>
    <if pos:line="31" pos:column="5">if<condition pos:line="31" pos:column="7">(<expr><name><name pos:line="31" pos:column="8">conn<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">data<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">set<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">ssl<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">verifypeer<pos:position pos:line="31" pos:column="38"/></name></name></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">success<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">SECFailure<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">infof<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name><name pos:line="33" pos:column="11">conn<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">data<pos:position pos:line="33" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="23">"common name: %s (does not match '%s')\n"<pos:position pos:line="33" pos:column="64"/></literal></expr></argument>,
          <argument><expr><name pos:line="34" pos:column="11">subject<pos:position pos:line="34" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="20">conn<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">host<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">dispname<pos:position pos:line="34" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
    <break pos:line="35" pos:column="5">break;<pos:position pos:line="35" pos:column="11"/></break>
  <case pos:line="36" pos:column="3">case <expr><name pos:line="36" pos:column="8">SEC_ERROR_EXPIRED_CERTIFICATE<pos:position pos:line="36" pos:column="37"/></name></expr>:<pos:position pos:line="36" pos:column="38"/></case>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name><name pos:line="37" pos:column="8">conn<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">data<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">set<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">ssl<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">verifypeer<pos:position pos:line="37" pos:column="38"/></name></name></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">success<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">SECFailure<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">infof<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name><name pos:line="39" pos:column="11">conn<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">data<pos:position pos:line="39" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="23">"Remote Certificate has expired.\n"<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>
    <break pos:line="40" pos:column="5">break;<pos:position pos:line="40" pos:column="11"/></break>
  <default pos:line="41" pos:column="3">default:<pos:position pos:line="41" pos:column="11"/></default>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><name><name pos:line="42" pos:column="8">conn<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">data<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">set<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">ssl<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">verifypeer<pos:position pos:line="42" pos:column="38"/></name></name></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">success<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">SECFailure<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">infof<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><name><name pos:line="44" pos:column="11">conn<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">data<pos:position pos:line="44" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="23">"Bad certificate received. Subject = '%s', "<pos:position pos:line="44" pos:column="67"/></literal>
          <literal type="string" pos:line="45" pos:column="11">"Issuer = '%s'\n"<pos:position pos:line="45" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">subject<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">issuer<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
    <break pos:line="46" pos:column="5">break;<pos:position pos:line="46" pos:column="11"/></break>
  }<pos:position pos:line="47" pos:column="4"/></block></switch>
  <if pos:line="48" pos:column="3">if<condition pos:line="48" pos:column="5">(<expr><name pos:line="48" pos:column="6">success<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">==<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">SECSuccess<pos:position pos:line="48" pos:column="27"/></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">infof<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name><name pos:line="49" pos:column="11">conn<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">-&gt;<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="17">data<pos:position pos:line="49" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"SSL certificate verify ok.\n"<pos:position pos:line="49" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="55"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">PR_Free<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><name pos:line="50" pos:column="11">subject<pos:position pos:line="50" pos:column="18"/></name></expr></argument>)<pos:position pos:line="50" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">PR_Free<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">issuer<pos:position pos:line="51" pos:column="17"/></name></expr></argument>)<pos:position pos:line="51" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>

  <return pos:line="53" pos:column="3">return <expr><name pos:line="53" pos:column="10">success<pos:position pos:line="53" pos:column="17"/></name></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

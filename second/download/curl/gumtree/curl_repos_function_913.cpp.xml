<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_913.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">curl_win32_ascii_to_idn<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">in<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">in_len<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">out_utf8<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><operator pos:line="3" pos:column="3">(<pos:position pos:line="3" pos:column="4"/></operator><name pos:line="3" pos:column="4">void<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">)<pos:position pos:line="3" pos:column="9"/></operator><name pos:line="3" pos:column="9">in_len<pos:position pos:line="3" pos:column="15"/></name></expr>;<pos:position pos:line="3" pos:column="16"/></expr_stmt> <comment type="block" pos:line="3" pos:column="17">/* unused */</comment>
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">in<pos:position pos:line="4" pos:column="8"/></name></expr>)<pos:position pos:line="4" pos:column="9"/></condition><then pos:line="4" pos:column="9"> <block pos:line="4" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">WCHAR<pos:position pos:line="5" pos:column="10"/></name></type> <name><name pos:line="5" pos:column="11">unicode<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">IDN_MAX_LENGTH<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><call><name pos:line="7" pos:column="8">IdnToUnicode<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">wchar_t<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">in<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="39">-<pos:position pos:line="7" pos:column="40"/></operator><literal type="number" pos:line="7" pos:column="40">1<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">unicode<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">IDN_MAX_LENGTH<pos:position pos:line="7" pos:column="66"/></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call> <operator pos:line="7" pos:column="68">==<pos:position pos:line="7" pos:column="70"/></operator> <literal type="number" pos:line="7" pos:column="71">0<pos:position pos:line="7" pos:column="72"/></literal></expr>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73"> <block pos:line="7" pos:column="74">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">wprintf<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="string" pos:line="8" pos:column="15">L"ERROR %d converting to Punycode\n"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="53">GetLastError<pos:position pos:line="8" pos:column="65"/></name><argument_list pos:line="8" pos:column="65">()<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
      <return pos:line="9" pos:column="7">return <expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
      <expr_stmt><expr><operator pos:line="12" pos:column="7">*<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">out_utf8<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">Curl_convert_wchar_to_UTF8<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">unicode<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
      <if pos:line="13" pos:column="7">if<condition pos:line="13" pos:column="9">(<expr><operator pos:line="13" pos:column="10">!<pos:position pos:line="13" pos:column="11"/></operator><operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">out_utf8<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <return pos:line="17" pos:column="3">return <expr><literal type="number" pos:line="17" pos:column="10">1<pos:position pos:line="17" pos:column="11"/></literal></expr>;<pos:position pos:line="17" pos:column="12"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1543_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">smb_format_message<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="58">struct<pos:position pos:line="1" pos:column="64"/></name> <name pos:line="1" pos:column="65">smb_header<pos:position pos:line="1" pos:column="75"/></name></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">h<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">unsigned<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">cmd<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">size_t<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smb_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">smbc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">smbc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">smb_request<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">req<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">conn<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">data<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">req<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">.<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">protop<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">pid<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memset<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">h<pos:position pos:line="8" pos:column="11"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="16">sizeof<argument_list pos:line="8" pos:column="22">(<argument><expr><operator pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">h<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">h<pos:position pos:line="9" pos:column="4"/></name><operator pos:line="9" pos:column="4">-&gt;<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="6">nbt_length<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">htons<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><call pos:line="9" pos:column="25">(<name pos:line="9" pos:column="26">unsigned<pos:position pos:line="9" pos:column="34"/></name> <name pos:line="9" pos:column="35">short<pos:position pos:line="9" pos:column="40"/></name>) <argument_list pos:line="9" pos:column="42">(<argument><expr><sizeof pos:line="9" pos:column="43">sizeof<argument_list pos:line="9" pos:column="49">(<argument><expr><operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="51">h<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></sizeof> <operator pos:line="9" pos:column="54">-<pos:position pos:line="9" pos:column="55"/></operator> sizeof<operator pos:line="9" pos:column="62">(<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="63">unsigned<pos:position pos:line="9" pos:column="71"/></name> <name pos:line="9" pos:column="72">int<pos:position pos:line="9" pos:column="75"/></name><operator pos:line="9" pos:column="75">)<pos:position pos:line="9" pos:column="76"/></operator> <operator pos:line="9" pos:column="77">+<pos:position pos:line="9" pos:column="78"/></operator>
                                          <name pos:line="10" pos:column="43">len<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memcpy<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="18">h<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">magic<pos:position pos:line="11" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="28">"\xffSMB"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="39">4<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">h<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">command<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">cmd<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">h<pos:position pos:line="13" pos:column="4"/></name><operator pos:line="13" pos:column="4">-&gt;<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="6">flags<pos:position pos:line="13" pos:column="11"/></name></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">SMB_FLAGS_CANONICAL_PATHNAMES<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">|<pos:position pos:line="13" pos:column="45"/></operator> <name pos:line="13" pos:column="46">SMB_FLAGS_CASELESS_PATHNAMES<pos:position pos:line="13" pos:column="74"/></name></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">h<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">flags2<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">smb_swap16<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">SMB_FLAGS2_IS_LONG_NAME<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">|<pos:position pos:line="14" pos:column="51"/></operator> <name pos:line="14" pos:column="52">SMB_FLAGS2_KNOWS_LONG_NAME<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">h<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">-&gt;<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="6">uid<pos:position pos:line="15" pos:column="9"/></name></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">smb_swap16<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name><name pos:line="15" pos:column="23">smbc<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">uid<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">h<pos:position pos:line="16" pos:column="4"/></name><operator pos:line="16" pos:column="4">-&gt;<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="6">tid<pos:position pos:line="16" pos:column="9"/></name></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">smb_swap16<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name><name pos:line="16" pos:column="23">req<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">tid<pos:position pos:line="16" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">pid<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">getpid<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">()<pos:position pos:line="17" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">h<pos:position pos:line="18" pos:column="4"/></name><operator pos:line="18" pos:column="4">-&gt;<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="6">pid_high<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">smb_swap16<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><call pos:line="18" pos:column="28">(<name pos:line="18" pos:column="29">unsigned<pos:position pos:line="18" pos:column="37"/></name> <name pos:line="18" pos:column="38">short<pos:position pos:line="18" pos:column="43"/></name>)<argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">pid<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">&gt;&gt;<pos:position pos:line="18" pos:column="54"/></operator> <literal type="number" pos:line="18" pos:column="52">16<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">h<pos:position pos:line="19" pos:column="4"/></name><operator pos:line="19" pos:column="4">-&gt;<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="6">pid<pos:position pos:line="19" pos:column="9"/></name></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">smb_swap16<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">unsigned<pos:position pos:line="19" pos:column="32"/></name> <name pos:line="19" pos:column="33">short<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">)<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">pid<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

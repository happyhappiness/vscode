<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_981_curl-7.41.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_input_negotiate<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">bool<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">proxy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">header<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">conn<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">data<pos:position pos:line="4" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">negotiatedata<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">neg_ctx<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><ternary><condition><expr><name pos:line="5" pos:column="35">proxy<pos:position pos:line="5" pos:column="40"/></name></expr>?<pos:position pos:line="5" pos:column="41"/></condition><then><expr><operator pos:line="5" pos:column="41">&amp;<pos:position pos:line="5" pos:column="46"/></operator><name><name pos:line="5" pos:column="42">data<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">state<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">.<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="54">proxyneg<pos:position pos:line="5" pos:column="62"/></name></name></expr></then><else pos:line="5" pos:column="62">:
    <expr><operator pos:line="6" pos:column="5">&amp;<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="6">data<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">state<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">.<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">negotiate<pos:position pos:line="6" pos:column="27"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">OM_uint32<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">major_status<pos:position pos:line="7" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="27">minor_status<pos:position pos:line="7" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="41">discard_st<pos:position pos:line="7" pos:column="51"/></name></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gss_buffer_desc<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">spn_token<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">GSS_C_EMPTY_BUFFER<pos:position pos:line="8" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gss_buffer_desc<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">input_token<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">GSS_C_EMPTY_BUFFER<pos:position pos:line="9" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gss_buffer_desc<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">output_token<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name pos:line="10" pos:column="34">GSS_C_EMPTY_BUFFER<pos:position pos:line="10" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">len<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">rawlen<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">CURLcode<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">result<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">neg_ctx<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">context<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">&amp;&amp;<pos:position pos:line="15" pos:column="33"/></operator> <name><name pos:line="15" pos:column="26">neg_ctx<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">status<pos:position pos:line="15" pos:column="41"/></name></name> <operator pos:line="15" pos:column="42">==<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">GSS_S_COMPLETE<pos:position pos:line="15" pos:column="59"/></name></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60"> <block pos:line="15" pos:column="61">{
    <comment type="block" pos:line="16" pos:column="5">/* We finished successfully our part of authentication, but server
     * rejected it (since we're again here). Exit with an error since we
     * can't invent anything better */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">Curl_cleanup_negotiate<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">data<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name><name pos:line="23" pos:column="7">neg_ctx<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">server_name<pos:position pos:line="23" pos:column="27"/></name></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{
    <comment type="block" pos:line="24" pos:column="5">/* Generate our SPN */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">spn<pos:position pos:line="25" pos:column="14"/></name> <init pos:line="25" pos:column="15">= <expr><call><name pos:line="25" pos:column="17">Curl_sasl_build_gssapi_spn<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><literal type="string" pos:line="25" pos:column="44">"HTTP"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="52">proxy<pos:position pos:line="25" pos:column="57"/></name></expr> ?<pos:position pos:line="25" pos:column="59"/></condition><then pos:line="25" pos:column="59"> <expr><name><name pos:line="25" pos:column="60">conn<pos:position pos:line="25" pos:column="64"/></name><operator pos:line="25" pos:column="64">-&gt;<pos:position pos:line="25" pos:column="69"/></operator><name pos:line="25" pos:column="66">proxy<pos:position pos:line="25" pos:column="71"/></name><operator pos:line="25" pos:column="71">.<pos:position pos:line="25" pos:column="72"/></operator><name pos:line="25" pos:column="72">name<pos:position pos:line="25" pos:column="76"/></name></name></expr> <pos:position pos:line="25" pos:column="77"/></then><else pos:line="25" pos:column="77">:
                                                           <expr><name><name pos:line="26" pos:column="60">conn<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">-&gt;<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="66">host<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">.<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="71">name<pos:position pos:line="26" pos:column="75"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="77"/></decl_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">spn<pos:position pos:line="27" pos:column="12"/></name></expr>)<pos:position pos:line="27" pos:column="13"/></condition><then pos:line="27" pos:column="13">
      <block type="pseudo"><return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* Populate the SPN structure */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">spn_token<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">value<pos:position pos:line="31" pos:column="20"/></name></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">spn<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">spn_token<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">length<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">strlen<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">spn<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Import the SPN */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">major_status<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">gss_import_name<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><operator pos:line="35" pos:column="36">&amp;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="37">minor_status<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="51">&amp;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="52">spn_token<pos:position pos:line="35" pos:column="61"/></name></expr></argument>,
                                   <argument><expr><name pos:line="36" pos:column="36">GSS_C_NT_HOSTBASED_SERVICE<pos:position pos:line="36" pos:column="62"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="37" pos:column="36">&amp;<pos:position pos:line="37" pos:column="41"/></operator><name><name pos:line="37" pos:column="37">neg_ctx<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">server_name<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><call><name pos:line="38" pos:column="8">GSS_ERROR<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">major_status<pos:position pos:line="38" pos:column="30"/></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <block pos:line="38" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">Curl_gss_log_error<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">data<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">minor_status<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="46">"gss_import_name() failed: "<pos:position pos:line="39" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="41" pos:column="7">Curl_safefree<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">spn<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

      <return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="46" pos:column="7">Curl_safefree<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">spn<pos:position pos:line="46" pos:column="24"/></name></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="49" pos:column="3">header<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">+=<pos:position pos:line="49" pos:column="12"/></operator> <call><name pos:line="49" pos:column="13">strlen<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><literal type="string" pos:line="49" pos:column="20">"Negotiate"<pos:position pos:line="49" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
  <while pos:line="50" pos:column="3">while<condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">*<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">header<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">&amp;&amp;<pos:position pos:line="50" pos:column="27"/></operator> <call><name pos:line="50" pos:column="20">ISSPACE<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">header<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="37"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="5">header<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">++<pos:position pos:line="51" pos:column="13"/></operator></expr>;<pos:position pos:line="51" pos:column="14"/></expr_stmt></block></while>

  <expr_stmt><expr><name pos:line="53" pos:column="3">len<pos:position pos:line="53" pos:column="6"/></name> <operator pos:line="53" pos:column="7">=<pos:position pos:line="53" pos:column="8"/></operator> <call><name pos:line="53" pos:column="9">strlen<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">header<pos:position pos:line="53" pos:column="22"/></name></expr></argument>)<pos:position pos:line="53" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">len<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">&gt;<pos:position pos:line="54" pos:column="14"/></operator> <literal type="number" pos:line="54" pos:column="12">0<pos:position pos:line="54" pos:column="13"/></literal></expr>)<pos:position pos:line="54" pos:column="14"/></condition><then pos:line="54" pos:column="14"> <block pos:line="54" pos:column="15">{
    <expr_stmt><expr><name pos:line="55" pos:column="5">result<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">Curl_base64_decode<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">header<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="41">(<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">unsigned<pos:position pos:line="55" pos:column="50"/></name> <name pos:line="55" pos:column="51">char<pos:position pos:line="55" pos:column="55"/></name> <operator pos:line="55" pos:column="56">*<pos:position pos:line="55" pos:column="57"/></operator><operator pos:line="55" pos:column="57">*<pos:position pos:line="55" pos:column="58"/></operator><operator pos:line="55" pos:column="58">)<pos:position pos:line="55" pos:column="59"/></operator><operator pos:line="55" pos:column="59">&amp;<pos:position pos:line="55" pos:column="64"/></operator><name><name pos:line="55" pos:column="60">input_token<pos:position pos:line="55" pos:column="71"/></name><operator pos:line="55" pos:column="71">.<pos:position pos:line="55" pos:column="72"/></operator><name pos:line="55" pos:column="72">value<pos:position pos:line="55" pos:column="77"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="34">rawlen<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name pos:line="57" pos:column="8">result<pos:position pos:line="57" pos:column="14"/></name></expr>)<pos:position pos:line="57" pos:column="15"/></condition><then pos:line="57" pos:column="15">
      <block type="pseudo"><return pos:line="58" pos:column="7">return <expr><name pos:line="58" pos:column="14">result<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></return></block></then></if>

    <if pos:line="60" pos:column="5">if<condition pos:line="60" pos:column="7">(<expr><operator pos:line="60" pos:column="8">!<pos:position pos:line="60" pos:column="9"/></operator><name pos:line="60" pos:column="9">rawlen<pos:position pos:line="60" pos:column="15"/></name></expr>)<pos:position pos:line="60" pos:column="16"/></condition><then pos:line="60" pos:column="16"> <block pos:line="60" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">infof<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">data<pos:position pos:line="61" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="19">"Negotiate handshake failure (empty challenge message)\n"<pos:position pos:line="61" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="78"/></expr_stmt>

      <return pos:line="63" pos:column="7">return <expr><name pos:line="63" pos:column="14">CURLE_BAD_CONTENT_ENCODING<pos:position pos:line="63" pos:column="40"/></name></expr>;<pos:position pos:line="63" pos:column="41"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="66" pos:column="5">input_token<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">.<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="17">length<pos:position pos:line="66" pos:column="23"/></name></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">rawlen<pos:position pos:line="66" pos:column="32"/></name></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="68" pos:column="5">DEBUGASSERT<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name><name pos:line="68" pos:column="17">input_token<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">.<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="29">value<pos:position pos:line="68" pos:column="34"/></name></name> <operator pos:line="68" pos:column="35">!=<pos:position pos:line="68" pos:column="37"/></operator> <name pos:line="68" pos:column="38">NULL<pos:position pos:line="68" pos:column="42"/></name></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="71" pos:column="3">major_status<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">Curl_gss_init_sec_context<pos:position pos:line="71" pos:column="43"/></name><argument_list pos:line="71" pos:column="43">(<argument><expr><name pos:line="71" pos:column="44">data<pos:position pos:line="71" pos:column="48"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="45">minor_status<pos:position pos:line="72" pos:column="57"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="73" pos:column="44">&amp;<pos:position pos:line="73" pos:column="49"/></operator><name><name pos:line="73" pos:column="45">neg_ctx<pos:position pos:line="73" pos:column="52"/></name><operator pos:line="73" pos:column="52">-&gt;<pos:position pos:line="73" pos:column="57"/></operator><name pos:line="73" pos:column="54">context<pos:position pos:line="73" pos:column="61"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="74" pos:column="44">neg_ctx<pos:position pos:line="74" pos:column="51"/></name><operator pos:line="74" pos:column="51">-&gt;<pos:position pos:line="74" pos:column="56"/></operator><name pos:line="74" pos:column="53">server_name<pos:position pos:line="74" pos:column="64"/></name></name></expr></argument>,
                                           <argument><expr><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="45">Curl_spnego_mech_oid<pos:position pos:line="75" pos:column="65"/></name></expr></argument>,
                                           <argument><expr><name pos:line="76" pos:column="44">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="76" pos:column="69"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="77" pos:column="44">&amp;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="45">input_token<pos:position pos:line="77" pos:column="56"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="78" pos:column="44">&amp;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="45">output_token<pos:position pos:line="78" pos:column="57"/></name></expr></argument>,
                                           <argument><expr><name pos:line="79" pos:column="44">TRUE<pos:position pos:line="79" pos:column="48"/></name></expr></argument>,
                                           <argument><expr><name pos:line="80" pos:column="44">NULL<pos:position pos:line="80" pos:column="48"/></name></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">Curl_safefree<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name><name pos:line="81" pos:column="17">input_token<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">.<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">value<pos:position pos:line="81" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="83" pos:column="3">neg_ctx<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">status<pos:position pos:line="83" pos:column="18"/></name></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <name pos:line="83" pos:column="21">major_status<pos:position pos:line="83" pos:column="33"/></name></expr>;<pos:position pos:line="83" pos:column="34"/></expr_stmt>
  <if pos:line="84" pos:column="3">if<condition pos:line="84" pos:column="5">(<expr><call><name pos:line="84" pos:column="6">GSS_ERROR<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><name pos:line="84" pos:column="16">major_status<pos:position pos:line="84" pos:column="28"/></name></expr></argument>)<pos:position pos:line="84" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="30"/></condition><then pos:line="84" pos:column="30"> <block pos:line="84" pos:column="31">{
    <if pos:line="85" pos:column="5">if<condition pos:line="85" pos:column="7">(<expr><name><name pos:line="85" pos:column="8">output_token<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">.<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="21">value<pos:position pos:line="85" pos:column="26"/></name></name></expr>)<pos:position pos:line="85" pos:column="27"/></condition><then pos:line="85" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="7">gss_release_buffer<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><operator pos:line="86" pos:column="26">&amp;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="27">discard_st<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="39">&amp;<pos:position pos:line="86" pos:column="44"/></operator><name pos:line="86" pos:column="40">output_token<pos:position pos:line="86" pos:column="52"/></name></expr></argument>)<pos:position pos:line="86" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="54"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">Curl_gss_log_error<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name><name pos:line="87" pos:column="24">conn<pos:position pos:line="87" pos:column="28"/></name><operator pos:line="87" pos:column="28">-&gt;<pos:position pos:line="87" pos:column="33"/></operator><name pos:line="87" pos:column="30">data<pos:position pos:line="87" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="36">minor_status<pos:position pos:line="87" pos:column="48"/></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="88" pos:column="24">"gss_init_sec_context() failed: "<pos:position pos:line="88" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="59"/></expr_stmt>
    <return pos:line="89" pos:column="5">return <expr><name pos:line="89" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="89" pos:column="31"/></name></expr>;<pos:position pos:line="89" pos:column="32"/></return>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <if pos:line="92" pos:column="3">if<condition pos:line="92" pos:column="5">(<expr><operator pos:line="92" pos:column="6">!<pos:position pos:line="92" pos:column="7"/></operator><name><name pos:line="92" pos:column="7">output_token<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">.<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="20">value<pos:position pos:line="92" pos:column="25"/></name></name> <operator pos:line="92" pos:column="26">||<pos:position pos:line="92" pos:column="28"/></operator> <operator pos:line="92" pos:column="29">!<pos:position pos:line="92" pos:column="30"/></operator><name><name pos:line="92" pos:column="30">output_token<pos:position pos:line="92" pos:column="42"/></name><operator pos:line="92" pos:column="42">.<pos:position pos:line="92" pos:column="43"/></operator><name pos:line="92" pos:column="43">length<pos:position pos:line="92" pos:column="49"/></name></name></expr>)<pos:position pos:line="92" pos:column="50"/></condition><then pos:line="92" pos:column="50"> <block pos:line="92" pos:column="51">{
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><name><name pos:line="93" pos:column="8">output_token<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">.<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="21">value<pos:position pos:line="93" pos:column="26"/></name></name></expr>)<pos:position pos:line="93" pos:column="27"/></condition><then pos:line="93" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="7">gss_release_buffer<pos:position pos:line="94" pos:column="25"/></name><argument_list pos:line="94" pos:column="25">(<argument><expr><operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="27">discard_st<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="39">&amp;<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="40">output_token<pos:position pos:line="94" pos:column="52"/></name></expr></argument>)<pos:position pos:line="94" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="54"/></expr_stmt></block></then></if>
    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="95" pos:column="31"/></name></expr>;<pos:position pos:line="95" pos:column="32"/></return>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="98" pos:column="3">neg_ctx<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">output_token<pos:position pos:line="98" pos:column="24"/></name></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <name pos:line="98" pos:column="27">output_token<pos:position pos:line="98" pos:column="39"/></name></expr>;<pos:position pos:line="98" pos:column="40"/></expr_stmt>

  <return pos:line="100" pos:column="3">return <expr><name pos:line="100" pos:column="10">CURLE_OK<pos:position pos:line="100" pos:column="18"/></name></expr>;<pos:position pos:line="100" pos:column="19"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

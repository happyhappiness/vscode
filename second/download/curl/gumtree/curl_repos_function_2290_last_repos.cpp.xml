<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2290_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">_NonAppStart<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name>        <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">NLMHandle<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name>        <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">errorScreen<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>,
                 <parameter><decl><type><specifier pos:line="3" pos:column="18">const<pos:position pos:line="3" pos:column="23"/></specifier> <name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name>  <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">cmdLine<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>,
                 <parameter><decl><type><specifier pos:line="4" pos:column="18">const<pos:position pos:line="4" pos:column="23"/></specifier> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name>  <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">loadDirPath<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="5" pos:column="18">size_t<pos:position pos:line="5" pos:column="24"/></name></type>      <name pos:line="5" pos:column="30">uninitializedDataLength<pos:position pos:line="5" pos:column="53"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="6" pos:column="18">void<pos:position pos:line="6" pos:column="22"/></name>        <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">NLMFileHandle<pos:position pos:line="6" pos:column="44"/></name></decl></parameter>,
                 <parameter><function_decl><type><name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type>         (<modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier><name pos:line="7" pos:column="32">readRoutineP<pos:position pos:line="7" pos:column="44"/></name>)<parameter_list pos:line="7" pos:column="45">(<parameter><decl><type><name pos:line="7" pos:column="46">int<pos:position pos:line="7" pos:column="49"/></name></type> <name pos:line="7" pos:column="50">conn<pos:position pos:line="7" pos:column="54"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="8" pos:column="46">void<pos:position pos:line="8" pos:column="50"/></name> <modifier pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></modifier></type><name pos:line="8" pos:column="52">fileHandle<pos:position pos:line="8" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="8" pos:column="64">size_t<pos:position pos:line="8" pos:column="70"/></name></type> <name pos:line="8" pos:column="71">offset<pos:position pos:line="8" pos:column="77"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="9" pos:column="46">size_t<pos:position pos:line="9" pos:column="52"/></name></type> <name pos:line="9" pos:column="53">nbytes<pos:position pos:line="9" pos:column="59"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="10" pos:column="46">size_t<pos:position pos:line="10" pos:column="52"/></name> <modifier pos:line="10" pos:column="53">*<pos:position pos:line="10" pos:column="54"/></modifier></type><name pos:line="10" pos:column="54">bytesRead<pos:position pos:line="10" pos:column="63"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="11" pos:column="46">void<pos:position pos:line="11" pos:column="50"/></name> <modifier pos:line="11" pos:column="51">*<pos:position pos:line="11" pos:column="52"/></modifier></type><name pos:line="11" pos:column="52">buffer<pos:position pos:line="11" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="11" pos:column="59"/></parameter_list></function_decl></parameter>,
                  <parameter><decl><type><name pos:line="12" pos:column="19">size_t<pos:position pos:line="12" pos:column="25"/></name></type>      <name pos:line="12" pos:column="31">customDataOffset<pos:position pos:line="12" pos:column="47"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="13" pos:column="19">size_t<pos:position pos:line="13" pos:column="25"/></name></type>      <name pos:line="13" pos:column="31">customDataSize<pos:position pos:line="13" pos:column="45"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="14" pos:column="19">int<pos:position pos:line="14" pos:column="22"/></name></type>         <name pos:line="14" pos:column="31">messageCount<pos:position pos:line="14" pos:column="43"/></name></decl></parameter>,
                  <parameter><decl><type><specifier pos:line="15" pos:column="19">const<pos:position pos:line="15" pos:column="24"/></specifier> <name pos:line="15" pos:column="25">char<pos:position pos:line="15" pos:column="29"/></name>  <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier><modifier pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></modifier></type><name pos:line="15" pos:column="33">messages<pos:position pos:line="15" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="15" pos:column="42"/></parameter_list>
<block pos:line="16" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">NX_LOCK_INFO_ALLOC<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">liblock<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"Per-Application Data Lock"<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="60">0<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>

<cpp:ifndef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifndef<pos:position pos:line="19" pos:column="8"/></cpp:directive> <name pos:line="19" pos:column="9">__GNUC__<pos:position pos:line="19" pos:column="17"/></name></cpp:ifndef>
<cpp:pragma pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">pragma<pos:position pos:line="20" pos:column="8"/></cpp:directive> <name pos:line="20" pos:column="9">unused<pos:position pos:line="20" pos:column="15"/></name><name pos:line="20" pos:column="15">(<pos:position pos:line="20" pos:column="16"/></name><name pos:line="20" pos:column="16">cmdLine<pos:position pos:line="20" pos:column="23"/></name><name pos:line="20" pos:column="23">)<pos:position pos:line="20" pos:column="24"/></name></cpp:pragma>
<cpp:pragma pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">pragma<pos:position pos:line="21" pos:column="8"/></cpp:directive> <name pos:line="21" pos:column="9">unused<pos:position pos:line="21" pos:column="15"/></name><name pos:line="21" pos:column="15">(<pos:position pos:line="21" pos:column="16"/></name><name pos:line="21" pos:column="16">loadDirPath<pos:position pos:line="21" pos:column="27"/></name><name pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></name></cpp:pragma>
<cpp:pragma pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">pragma<pos:position pos:line="22" pos:column="8"/></cpp:directive> <name pos:line="22" pos:column="9">unused<pos:position pos:line="22" pos:column="15"/></name><name pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></name><name pos:line="22" pos:column="16">uninitializedDataLength<pos:position pos:line="22" pos:column="39"/></name><name pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></name></cpp:pragma>
<cpp:pragma pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">pragma<pos:position pos:line="23" pos:column="8"/></cpp:directive> <name pos:line="23" pos:column="9">unused<pos:position pos:line="23" pos:column="15"/></name><name pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></name><name pos:line="23" pos:column="16">NLMFileHandle<pos:position pos:line="23" pos:column="29"/></name><name pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></name></cpp:pragma>
<cpp:pragma pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">pragma<pos:position pos:line="24" pos:column="8"/></cpp:directive> <name pos:line="24" pos:column="9">unused<pos:position pos:line="24" pos:column="15"/></name><name pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></name><name pos:line="24" pos:column="16">readRoutineP<pos:position pos:line="24" pos:column="28"/></name><name pos:line="24" pos:column="28">)<pos:position pos:line="24" pos:column="29"/></name></cpp:pragma>
<cpp:pragma pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">pragma<pos:position pos:line="25" pos:column="8"/></cpp:directive> <name pos:line="25" pos:column="9">unused<pos:position pos:line="25" pos:column="15"/></name><name pos:line="25" pos:column="15">(<pos:position pos:line="25" pos:column="16"/></name><name pos:line="25" pos:column="16">customDataOffset<pos:position pos:line="25" pos:column="32"/></name><name pos:line="25" pos:column="32">)<pos:position pos:line="25" pos:column="33"/></name></cpp:pragma>
<cpp:pragma pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">pragma<pos:position pos:line="26" pos:column="8"/></cpp:directive> <name pos:line="26" pos:column="9">unused<pos:position pos:line="26" pos:column="15"/></name><name pos:line="26" pos:column="15">(<pos:position pos:line="26" pos:column="16"/></name><name pos:line="26" pos:column="16">customDataSize<pos:position pos:line="26" pos:column="30"/></name><name pos:line="26" pos:column="30">)<pos:position pos:line="26" pos:column="31"/></name></cpp:pragma>
<cpp:pragma pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">pragma<pos:position pos:line="27" pos:column="8"/></cpp:directive> <name pos:line="27" pos:column="9">unused<pos:position pos:line="27" pos:column="15"/></name><name pos:line="27" pos:column="15">(<pos:position pos:line="27" pos:column="16"/></name><name pos:line="27" pos:column="16">messageCount<pos:position pos:line="27" pos:column="28"/></name><name pos:line="27" pos:column="28">)<pos:position pos:line="27" pos:column="29"/></name></cpp:pragma>
<cpp:pragma pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">pragma<pos:position pos:line="28" pos:column="8"/></cpp:directive> <name pos:line="28" pos:column="9">unused<pos:position pos:line="28" pos:column="15"/></name><name pos:line="28" pos:column="15">(<pos:position pos:line="28" pos:column="16"/></name><name pos:line="28" pos:column="16">messages<pos:position pos:line="28" pos:column="24"/></name><name pos:line="28" pos:column="24">)<pos:position pos:line="28" pos:column="25"/></name></cpp:pragma>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="31" pos:column="3">/*
   * Here we process our command line, post errors (to the error screen),
   * perform initializations and anything else we need to do before being able
   * to accept calls into us. If we succeed, we return non-zero and the NetWare
   * Loader will leave us up, otherwise we fail to load and get dumped.
   */</comment>
  <expr_stmt><expr><name pos:line="37" pos:column="3">gAllocTag<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">AllocateResourceTag<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">NLMHandle<pos:position pos:line="37" pos:column="44"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="38" pos:column="35">"&lt;library-name&gt; memory allocations"<pos:position pos:line="38" pos:column="76"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="39" pos:column="35">AllocSignature<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">gAllocTag<pos:position pos:line="41" pos:column="16"/></name></expr>)<pos:position pos:line="41" pos:column="17"/></condition><then pos:line="41" pos:column="17"> <block pos:line="41" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">OutputToScreen<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">errorScreen<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="33">"Unable to allocate resource tag for "<pos:position pos:line="42" pos:column="71"/></literal>
                   <literal type="string" pos:line="43" pos:column="20">"library memory allocations.\n"<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">-<pos:position pos:line="44" pos:column="13"/></operator><literal type="number" pos:line="44" pos:column="13">1<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="47" pos:column="3">gLibId<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">register_library<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">DisposeLibraryData<pos:position pos:line="47" pos:column="47"/></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>

  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><name pos:line="49" pos:column="6">gLibId<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">&lt;<pos:position pos:line="49" pos:column="17"/></operator> <operator pos:line="49" pos:column="15">-<pos:position pos:line="49" pos:column="16"/></operator><literal type="number" pos:line="49" pos:column="16">1<pos:position pos:line="49" pos:column="17"/></literal></expr>)<pos:position pos:line="49" pos:column="18"/></condition><then pos:line="49" pos:column="18"> <block pos:line="49" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">OutputToScreen<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">errorScreen<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"Unable to register library with kernel.\n"<pos:position pos:line="50" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="78"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">-<pos:position pos:line="51" pos:column="13"/></operator><literal type="number" pos:line="51" pos:column="13">1<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="54" pos:column="3">gLibHandle<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <name pos:line="54" pos:column="16">NLMHandle<pos:position pos:line="54" pos:column="25"/></name></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="56" pos:column="3">gLibLock<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">NXMutexAlloc<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><literal type="number" pos:line="56" pos:column="27">0<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="30">0<pos:position pos:line="56" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="34">liblock<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="43"/></expr_stmt>

  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><operator pos:line="58" pos:column="6">!<pos:position pos:line="58" pos:column="7"/></operator><name pos:line="58" pos:column="7">gLibLock<pos:position pos:line="58" pos:column="15"/></name></expr>)<pos:position pos:line="58" pos:column="16"/></condition><then pos:line="58" pos:column="16"> <block pos:line="58" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">OutputToScreen<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">errorScreen<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="33">"Unable to allocate library data lock.\n"<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="76"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><operator pos:line="60" pos:column="12">-<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal></expr>;<pos:position pos:line="60" pos:column="15"/></return>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <return pos:line="63" pos:column="3">return <expr><literal type="number" pos:line="63" pos:column="10">0<pos:position pos:line="63" pos:column="11"/></literal></expr>;<pos:position pos:line="63" pos:column="12"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

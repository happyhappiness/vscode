<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_716_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">detect_proxy<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">proxy<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

<cpp:ifndef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifndef<pos:position pos:line="5" pos:column="8"/></cpp:directive> <name pos:line="5" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="5" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" pos:line="6" pos:column="3">/* If proxy was not specified, we check for default proxy environment
   * variables, to enable i.e Lynx compliance:
   *
   * http_proxy=http://some.server.dom:port/
   * https_proxy=http://some.server.dom:port/
   * ftp_proxy=http://some.server.dom:port/
   * no_proxy=domain1.dom,host.domain2.dom
   *   (a comma-separated list of hosts which should
   *   not be proxied, or an asterisk to override
   *   all proxy variables)
   * all_proxy=http://some.server.dom:port/
   *   (seems to exist for the CERN www lib. Probably
   *   the first to check for.)
   *
   * For compatibility, the all-uppercase versions of these variables are
   * checked if the lowercase versions don't exist.
   */</comment>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name> <modifier pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></modifier></type><name pos:line="23" pos:column="9">no_proxy<pos:position pos:line="23" pos:column="17"/></name><init pos:line="23" pos:column="17">=<expr><name pos:line="23" pos:column="18">NULL<pos:position pos:line="23" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">char<pos:position pos:line="24" pos:column="7"/></name> <modifier pos:line="24" pos:column="8">*<pos:position pos:line="24" pos:column="9"/></modifier></type><name pos:line="24" pos:column="9">no_proxy_tok_buf<pos:position pos:line="24" pos:column="25"/></name></decl>;<pos:position pos:line="24" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">char<pos:position pos:line="25" pos:column="7"/></name></type> <name><name pos:line="25" pos:column="8">proxy_env<pos:position pos:line="25" pos:column="17"/></name><index pos:line="25" pos:column="17">[<expr><literal type="number" pos:line="25" pos:column="18">128<pos:position pos:line="25" pos:column="21"/></literal></expr>]<pos:position pos:line="25" pos:column="22"/></index></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">no_proxy<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator><call><name pos:line="27" pos:column="12">curl_getenv<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"no_proxy"<pos:position pos:line="27" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">no_proxy<pos:position pos:line="28" pos:column="15"/></name></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">no_proxy<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator><call><name pos:line="29" pos:column="14">curl_getenv<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><literal type="string" pos:line="29" pos:column="26">"NO_PROXY"<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt></block></then></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">!<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">no_proxy<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">||<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">!<pos:position pos:line="31" pos:column="20"/></operator><call><name pos:line="31" pos:column="20">strequal<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">"*"<pos:position pos:line="31" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">no_proxy<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44"> <block pos:line="31" pos:column="45">{
    <comment type="block" pos:line="32" pos:column="5">/* NO_PROXY wasn't specified or it wasn't just an asterisk */</comment>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">nope<pos:position pos:line="33" pos:column="15"/></name></decl>;<pos:position pos:line="33" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">nope<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator><ternary><condition><expr><name pos:line="35" pos:column="10">no_proxy<pos:position pos:line="35" pos:column="18"/></name></expr>?<pos:position pos:line="35" pos:column="19"/></condition><then><expr><call><name pos:line="35" pos:column="19">strtok_r<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">no_proxy<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="38">", "<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="44">&amp;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="45">no_proxy_tok_buf<pos:position pos:line="35" pos:column="61"/></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr></then><else pos:line="35" pos:column="62">:<expr><name pos:line="35" pos:column="63">NULL<pos:position pos:line="35" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
    <while pos:line="36" pos:column="5">while<condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">nope<pos:position pos:line="36" pos:column="15"/></name></expr>)<pos:position pos:line="36" pos:column="16"/></condition> <block pos:line="36" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="37" pos:column="7">size_t<pos:position pos:line="37" pos:column="13"/></name></type> <name pos:line="37" pos:column="14">namelen<pos:position pos:line="37" pos:column="21"/></name></decl>;<pos:position pos:line="37" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="38" pos:column="7">char<pos:position pos:line="38" pos:column="11"/></name> <modifier pos:line="38" pos:column="12">*<pos:position pos:line="38" pos:column="13"/></modifier></type><name pos:line="38" pos:column="13">endptr<pos:position pos:line="38" pos:column="19"/></name> <init pos:line="38" pos:column="20">= <expr><call><name pos:line="38" pos:column="22">strchr<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name><name pos:line="38" pos:column="29">conn<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">host<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">name<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="46">':'<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="51"/></decl_stmt>
      <if pos:line="39" pos:column="7">if<condition pos:line="39" pos:column="9">(<expr><name pos:line="39" pos:column="10">endptr<pos:position pos:line="39" pos:column="16"/></name></expr>)<pos:position pos:line="39" pos:column="17"/></condition><then pos:line="39" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">namelen<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">endptr<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">-<pos:position pos:line="40" pos:column="24"/></operator><name><name pos:line="40" pos:column="24">conn<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">host<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">.<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">name<pos:position pos:line="40" pos:column="39"/></name></name></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt></block></then>
      <else pos:line="41" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">namelen<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator><call><name pos:line="42" pos:column="17">strlen<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name><name pos:line="42" pos:column="24">conn<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">host<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">name<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt></block></else></if>

      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><call><name pos:line="44" pos:column="10">strlen<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">nope<pos:position pos:line="44" pos:column="21"/></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call> <operator pos:line="44" pos:column="23">&lt;=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="26">namelen<pos:position pos:line="44" pos:column="33"/></name></expr>)<pos:position pos:line="44" pos:column="34"/></condition><then pos:line="44" pos:column="34"> <block pos:line="44" pos:column="35">{
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">char<pos:position pos:line="45" pos:column="13"/></name> <modifier pos:line="45" pos:column="14">*<pos:position pos:line="45" pos:column="15"/></modifier></type><name pos:line="45" pos:column="15">checkn<pos:position pos:line="45" pos:column="21"/></name><init pos:line="45" pos:column="21">=
          <expr><name><name pos:line="46" pos:column="11">conn<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">host<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">.<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">name<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">+<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">namelen<pos:position pos:line="46" pos:column="36"/></name> <operator pos:line="46" pos:column="37">-<pos:position pos:line="46" pos:column="38"/></operator> <call><name pos:line="46" pos:column="39">strlen<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">nope<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="52"/></decl_stmt>
        <if pos:line="47" pos:column="9">if<condition pos:line="47" pos:column="11">(<expr><call><name pos:line="47" pos:column="12">checkprefix<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">nope<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">checkn<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="38"/></condition><then pos:line="47" pos:column="38"> <block pos:line="47" pos:column="39">{
          <comment type="block" pos:line="48" pos:column="11">/* no proxy for this host! */</comment>
          <break pos:line="49" pos:column="11">break;<pos:position pos:line="49" pos:column="17"/></break>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="52" pos:column="7">nope<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator><call><name pos:line="52" pos:column="12">strtok_r<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">NULL<pos:position pos:line="52" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="27">", "<pos:position pos:line="52" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="33">&amp;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="34">no_proxy_tok_buf<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></while>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><operator pos:line="54" pos:column="8">!<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">nope<pos:position pos:line="54" pos:column="13"/></name></expr>)<pos:position pos:line="54" pos:column="14"/></condition><then pos:line="54" pos:column="14"> <block pos:line="54" pos:column="15">{
      <comment type="block" pos:line="55" pos:column="7">/* It was not listed as without proxy */</comment>
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">char<pos:position pos:line="56" pos:column="11"/></name> <modifier pos:line="56" pos:column="12">*<pos:position pos:line="56" pos:column="13"/></modifier></type><name pos:line="56" pos:column="13">protop<pos:position pos:line="56" pos:column="19"/></name> <init pos:line="56" pos:column="20">= <expr><name><name pos:line="56" pos:column="22">conn<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">protostr<pos:position pos:line="56" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="56" pos:column="37"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="57" pos:column="7">char<pos:position pos:line="57" pos:column="11"/></name> <modifier pos:line="57" pos:column="12">*<pos:position pos:line="57" pos:column="13"/></modifier></type><name pos:line="57" pos:column="13">envp<pos:position pos:line="57" pos:column="17"/></name> <init pos:line="57" pos:column="18">= <expr><name pos:line="57" pos:column="20">proxy_env<pos:position pos:line="57" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="58" pos:column="7">char<pos:position pos:line="58" pos:column="11"/></name> <modifier pos:line="58" pos:column="12">*<pos:position pos:line="58" pos:column="13"/></modifier></type><name pos:line="58" pos:column="13">prox<pos:position pos:line="58" pos:column="17"/></name></decl>;<pos:position pos:line="58" pos:column="18"/></decl_stmt>

      <comment type="block" pos:line="60" pos:column="7">/* Now, build &lt;protocol&gt;_proxy and check for such a one to use */</comment>
      <while pos:line="61" pos:column="7">while<condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">*<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">protop<pos:position pos:line="61" pos:column="20"/></name></expr>)<pos:position pos:line="61" pos:column="21"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="62" pos:column="9">*<pos:position pos:line="62" pos:column="10"/></operator><name pos:line="62" pos:column="10">envp<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">++<pos:position pos:line="62" pos:column="16"/></operator> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <operator pos:line="62" pos:column="19">(<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="20">char<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">)<pos:position pos:line="62" pos:column="25"/></operator><call><name pos:line="62" pos:column="25">tolower<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><operator pos:line="62" pos:column="33">(<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="34">int<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">)<pos:position pos:line="62" pos:column="38"/></operator><operator pos:line="62" pos:column="38">*<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">protop<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">++<pos:position pos:line="62" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt></block></while>

      <comment type="block" pos:line="64" pos:column="7">/* append _proxy */</comment>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">strcpy<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">envp<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="20">"_proxy"<pos:position pos:line="65" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>

      <comment type="block" pos:line="67" pos:column="7">/* read the protocol proxy: */</comment>
      <expr_stmt><expr><name pos:line="68" pos:column="7">prox<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator><call><name pos:line="68" pos:column="12">curl_getenv<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">proxy_env<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>

      <comment type="block" pos:line="70" pos:column="7">/*
       * We don't try the uppercase version of HTTP_PROXY because of
       * security reasons:
       *
       * When curl is used in a webserver application
       * environment (cgi or php), this environment variable can
       * be controlled by the web server user by setting the
       * http header 'Proxy:' to some value.
       *
       * This can cause 'internal' http/ftp requests to be
       * arbitrarily redirected by any external attacker.
       */</comment>
      <if pos:line="82" pos:column="7">if<condition pos:line="82" pos:column="9">(<expr><operator pos:line="82" pos:column="10">!<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">prox<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">&amp;&amp;<pos:position pos:line="82" pos:column="26"/></operator> <operator pos:line="82" pos:column="19">!<pos:position pos:line="82" pos:column="20"/></operator><call><name pos:line="82" pos:column="20">strequal<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><literal type="string" pos:line="82" pos:column="29">"http_proxy"<pos:position pos:line="82" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">proxy_env<pos:position pos:line="82" pos:column="52"/></name></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="54"/></condition><then pos:line="82" pos:column="54"> <block pos:line="82" pos:column="55">{
        <comment type="block" pos:line="83" pos:column="9">/* There was no lowercase variable, try the uppercase version: */</comment>
        <for pos:line="84" pos:column="9">for<control pos:line="84" pos:column="12">(<init><expr><name pos:line="84" pos:column="13">envp<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">proxy_env<pos:position pos:line="84" pos:column="29"/></name></expr>;<pos:position pos:line="84" pos:column="30"/></init> <condition><expr><operator pos:line="84" pos:column="31">*<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="32">envp<pos:position pos:line="84" pos:column="36"/></name></expr>;<pos:position pos:line="84" pos:column="37"/></condition> <incr><expr><name pos:line="84" pos:column="38">envp<pos:position pos:line="84" pos:column="42"/></name><operator pos:line="84" pos:column="42">++<pos:position pos:line="84" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="84" pos:column="45"/></control>
          <block type="pseudo"><expr_stmt><expr><operator pos:line="85" pos:column="11">*<pos:position pos:line="85" pos:column="12"/></operator><name pos:line="85" pos:column="12">envp<pos:position pos:line="85" pos:column="16"/></name> <operator pos:line="85" pos:column="17">=<pos:position pos:line="85" pos:column="18"/></operator> <operator pos:line="85" pos:column="19">(<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="20">char<pos:position pos:line="85" pos:column="24"/></name><operator pos:line="85" pos:column="24">)<pos:position pos:line="85" pos:column="25"/></operator><call><name pos:line="85" pos:column="25">toupper<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><operator pos:line="85" pos:column="33">(<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="34">int<pos:position pos:line="85" pos:column="37"/></name><operator pos:line="85" pos:column="37">)<pos:position pos:line="85" pos:column="38"/></operator><operator pos:line="85" pos:column="38">*<pos:position pos:line="85" pos:column="39"/></operator><name pos:line="85" pos:column="39">envp<pos:position pos:line="85" pos:column="43"/></name></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt></block></for>
        <expr_stmt><expr><name pos:line="86" pos:column="9">prox<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator><call><name pos:line="86" pos:column="14">curl_getenv<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">proxy_env<pos:position pos:line="86" pos:column="35"/></name></expr></argument>)<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="87" pos:column="8"/></block></then></if>

      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><name pos:line="89" pos:column="10">prox<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">&amp;&amp;<pos:position pos:line="89" pos:column="25"/></operator> <operator pos:line="89" pos:column="18">*<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="19">prox<pos:position pos:line="89" pos:column="23"/></name></expr>)<pos:position pos:line="89" pos:column="24"/></condition><then pos:line="89" pos:column="24"> <block pos:line="89" pos:column="25">{ <comment type="block" pos:line="89" pos:column="27">/* don't count "" strings */</comment>
        <expr_stmt><expr><name pos:line="90" pos:column="9">proxy<pos:position pos:line="90" pos:column="14"/></name> <operator pos:line="90" pos:column="15">=<pos:position pos:line="90" pos:column="16"/></operator> <name pos:line="90" pos:column="17">prox<pos:position pos:line="90" pos:column="21"/></name></expr>;<pos:position pos:line="90" pos:column="22"/></expr_stmt> <comment type="block" pos:line="90" pos:column="23">/* use this */</comment>
      }<pos:position pos:line="91" pos:column="8"/></block></then>
      <else pos:line="92" pos:column="7">else <block pos:line="92" pos:column="12">{
        <expr_stmt><expr><name pos:line="93" pos:column="9">proxy<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">=<pos:position pos:line="93" pos:column="16"/></operator> <call><name pos:line="93" pos:column="17">curl_getenv<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><literal type="string" pos:line="93" pos:column="29">"all_proxy"<pos:position pos:line="93" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt> <comment type="block" pos:line="93" pos:column="43">/* default proxy to use */</comment>
        <if pos:line="94" pos:column="9">if<condition pos:line="94" pos:column="11">(<expr><operator pos:line="94" pos:column="12">!<pos:position pos:line="94" pos:column="13"/></operator><name pos:line="94" pos:column="13">proxy<pos:position pos:line="94" pos:column="18"/></name></expr>)<pos:position pos:line="94" pos:column="19"/></condition><then pos:line="94" pos:column="19">
          <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="11">proxy<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator><call><name pos:line="95" pos:column="17">curl_getenv<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><literal type="string" pos:line="95" pos:column="29">"ALL_PROXY"<pos:position pos:line="95" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt></block></then></if>
      }<pos:position pos:line="96" pos:column="8"/></block></else></if>

      <if pos:line="98" pos:column="7">if<condition pos:line="98" pos:column="9">(<expr><name pos:line="98" pos:column="10">proxy<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">&amp;&amp;<pos:position pos:line="98" pos:column="26"/></operator> <operator pos:line="98" pos:column="19">*<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="20">proxy<pos:position pos:line="98" pos:column="25"/></name></expr>)<pos:position pos:line="98" pos:column="26"/></condition><then pos:line="98" pos:column="26"> <block pos:line="98" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="99" pos:column="9">long<pos:position pos:line="99" pos:column="13"/></name></type> <name pos:line="99" pos:column="14">bits<pos:position pos:line="99" pos:column="18"/></name> <init pos:line="99" pos:column="19">= <expr><name><name pos:line="99" pos:column="21">conn<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">-&gt;<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="27">protocol<pos:position pos:line="99" pos:column="35"/></name></name> <operator pos:line="99" pos:column="36">&amp;<pos:position pos:line="99" pos:column="41"/></operator> <operator pos:line="99" pos:column="38">(<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="39">PROT_HTTPS<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">|<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="50">PROT_SSL<pos:position pos:line="99" pos:column="58"/></name><operator pos:line="99" pos:column="58">|<pos:position pos:line="99" pos:column="59"/></operator><name pos:line="99" pos:column="59">PROT_MISSING<pos:position pos:line="99" pos:column="71"/></name><operator pos:line="99" pos:column="71">)<pos:position pos:line="99" pos:column="72"/></operator></expr></init></decl>;<pos:position pos:line="99" pos:column="73"/></decl_stmt>

        <if pos:line="101" pos:column="9">if<condition pos:line="101" pos:column="11">(<expr><name><name pos:line="101" pos:column="12">conn<pos:position pos:line="101" pos:column="16"/></name><operator pos:line="101" pos:column="16">-&gt;<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="18">proxytype<pos:position pos:line="101" pos:column="27"/></name></name> <operator pos:line="101" pos:column="28">==<pos:position pos:line="101" pos:column="30"/></operator> <name pos:line="101" pos:column="31">CURLPROXY_HTTP<pos:position pos:line="101" pos:column="45"/></name></expr>)<pos:position pos:line="101" pos:column="46"/></condition><then pos:line="101" pos:column="46"> <block pos:line="101" pos:column="47">{
          <comment type="block" pos:line="102" pos:column="11">/* force this connection's protocol to become HTTP */</comment>
          <expr_stmt><expr><name><name pos:line="103" pos:column="11">conn<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">-&gt;<pos:position pos:line="103" pos:column="20"/></operator><name pos:line="103" pos:column="17">protocol<pos:position pos:line="103" pos:column="25"/></name></name> <operator pos:line="103" pos:column="26">=<pos:position pos:line="103" pos:column="27"/></operator> <name pos:line="103" pos:column="28">PROT_HTTP<pos:position pos:line="103" pos:column="37"/></name> <operator pos:line="103" pos:column="38">|<pos:position pos:line="103" pos:column="39"/></operator> <name pos:line="103" pos:column="40">bits<pos:position pos:line="103" pos:column="44"/></name></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="104" pos:column="11">conn<pos:position pos:line="104" pos:column="15"/></name><operator pos:line="104" pos:column="15">-&gt;<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="17">bits<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">.<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">proxy<pos:position pos:line="104" pos:column="27"/></name></name> <operator pos:line="104" pos:column="28">=<pos:position pos:line="104" pos:column="29"/></operator> <name><name pos:line="104" pos:column="30">conn<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">-&gt;<pos:position pos:line="104" pos:column="39"/></operator><name pos:line="104" pos:column="36">bits<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">.<pos:position pos:line="104" pos:column="41"/></operator><name pos:line="104" pos:column="41">httpproxy<pos:position pos:line="104" pos:column="50"/></name></name> <operator pos:line="104" pos:column="51">=<pos:position pos:line="104" pos:column="52"/></operator> <name pos:line="104" pos:column="53">TRUE<pos:position pos:line="104" pos:column="57"/></name></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="105" pos:column="10"/></block></then></if>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if> <comment type="block" pos:line="107" pos:column="7">/* if(!nope) - it wasn't specified non-proxy */</comment>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if> <comment type="block" pos:line="108" pos:column="5">/* NO_PROXY wasn't specified or '*' */</comment>
  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><name pos:line="109" pos:column="6">no_proxy<pos:position pos:line="109" pos:column="14"/></name></expr>)<pos:position pos:line="109" pos:column="15"/></condition><then pos:line="109" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="5">free<pos:position pos:line="110" pos:column="9"/></name><argument_list pos:line="110" pos:column="9">(<argument><expr><name pos:line="110" pos:column="10">no_proxy<pos:position pos:line="110" pos:column="18"/></name></expr></argument>)<pos:position pos:line="110" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt></block></then></if>

<cpp:else pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">else<pos:position pos:line="112" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="112" pos:column="7">/* !CURL_DISABLE_HTTP */</comment>

  <expr_stmt><expr><operator pos:line="114" pos:column="3">(<pos:position pos:line="114" pos:column="4"/></operator><name pos:line="114" pos:column="4">void<pos:position pos:line="114" pos:column="8"/></name><operator pos:line="114" pos:column="8">)<pos:position pos:line="114" pos:column="9"/></operator><name pos:line="114" pos:column="9">conn<pos:position pos:line="114" pos:column="13"/></name></expr>;<pos:position pos:line="114" pos:column="14"/></expr_stmt>
<cpp:endif pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">endif<pos:position pos:line="115" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="115" pos:column="8">/* CURL_DISABLE_HTTP */</comment>

  <return pos:line="117" pos:column="3">return <expr><name pos:line="117" pos:column="10">proxy<pos:position pos:line="117" pos:column="15"/></name></expr>;<pos:position pos:line="117" pos:column="16"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

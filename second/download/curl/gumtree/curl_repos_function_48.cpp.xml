<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_48.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dprintf_DollarString<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">input<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">end<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">number<pos:position pos:line="3" pos:column="13"/></name><init pos:line="3" pos:column="13">=<expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <while pos:line="4" pos:column="3">while<condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">isdigit<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator><operator pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">input<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="30"/></condition> <block pos:line="4" pos:column="31">{
    <expr_stmt><expr><name pos:line="5" pos:column="5">number<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">*=<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="15">10<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">number<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">+=<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">input<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-<pos:position pos:line="6" pos:column="22"/></operator><literal type="char" pos:line="6" pos:column="22">'0'<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">input<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">++<pos:position pos:line="7" pos:column="12"/></operator></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="8" pos:column="4"/></block></while>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">number<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&amp;&amp;<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><literal type="char" pos:line="9" pos:column="17">'$'<pos:position pos:line="9" pos:column="20"/></literal><operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">input<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">++<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32"> <block pos:line="9" pos:column="33">{
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">end<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">input<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">number<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <return pos:line="13" pos:column="3">return <expr><literal type="number" pos:line="13" pos:column="10">0<pos:position pos:line="13" pos:column="11"/></literal></expr>;<pos:position pos:line="13" pos:column="12"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

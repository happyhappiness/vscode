<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_273_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">timer<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">signum<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><operator pos:line="3" pos:column="3">(<pos:position pos:line="3" pos:column="4"/></operator><name pos:line="3" pos:column="4">void<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">)<pos:position pos:line="3" pos:column="9"/></operator><name pos:line="3" pos:column="9">signum<pos:position pos:line="3" pos:column="15"/></name></expr>;<pos:position pos:line="3" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">logmsg<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><literal type="string" pos:line="5" pos:column="10">"alarm!"<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">timeout<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">+=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">rexmtval<pos:position pos:line="7" pos:column="22"/></name></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">timeout<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&gt;=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="18">maxtimeout<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">exit<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><literal type="number" pos:line="9" pos:column="10">1<pos:position pos:line="9" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">HAVE_SIGSETJMP<pos:position pos:line="10" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">siglongjmp<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">timeoutbuf<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

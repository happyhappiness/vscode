<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1280_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">alloc_addbyter<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">output<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">FILE<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">asprintf<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">infop<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator>struct <name pos:line="3" pos:column="36">asprintf<pos:position pos:line="3" pos:column="44"/></name> <operator pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">data<pos:position pos:line="3" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">outc<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">unsigned<pos:position pos:line="4" pos:column="33"/></name> <name pos:line="4" pos:column="34">char<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">output<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name><name pos:line="6" pos:column="7">infop<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">buffer<pos:position pos:line="6" pos:column="20"/></name></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> <block pos:line="6" pos:column="22">{
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">infop<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">buffer<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name pos:line="7" pos:column="21">malloc<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="number" pos:line="7" pos:column="28">32<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><operator pos:line="8" pos:column="8">!<pos:position pos:line="8" pos:column="9"/></operator><name><name pos:line="8" pos:column="9">infop<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">buffer<pos:position pos:line="8" pos:column="22"/></name></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
      <expr_stmt><expr><name><name pos:line="9" pos:column="7">infop<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">fail<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">1<pos:position pos:line="9" pos:column="22"/></literal></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
      <return pos:line="10" pos:column="7">return <expr><operator pos:line="10" pos:column="14">-<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></return> <comment type="block" pos:line="10" pos:column="18">/* fail */</comment>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">infop<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">alloc<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">32<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">infop<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">len<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then>
  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if<condition pos:line="15" pos:column="10">(<expr><name><name pos:line="15" pos:column="11">infop<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">len<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">+<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal> <operator pos:line="15" pos:column="26">&gt;=<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="29">infop<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">alloc<pos:position pos:line="15" pos:column="41"/></name></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <block pos:line="15" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">newptr<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">size_t<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">newsize<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><name><name pos:line="17" pos:column="22">infop<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">alloc<pos:position pos:line="17" pos:column="34"/></name></name><operator pos:line="17" pos:column="34">*<pos:position pos:line="17" pos:column="35"/></operator><literal type="number" pos:line="17" pos:column="35">2<pos:position pos:line="17" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* detect wrap-around or other overflow problems */</comment>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">newsize<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">&gt;<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="18">infop<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">alloc<pos:position pos:line="20" pos:column="30"/></name></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">newptr<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">realloc<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name><name pos:line="21" pos:column="24">infop<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">buffer<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">newsize<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt></block></then></if>

    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><operator pos:line="23" pos:column="8">!<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">newptr<pos:position pos:line="23" pos:column="15"/></name></expr>)<pos:position pos:line="23" pos:column="16"/></condition><then pos:line="23" pos:column="16"> <block pos:line="23" pos:column="17">{
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">infop<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">fail<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">1<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
      <return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">-<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">1<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></return> <comment type="block" pos:line="25" pos:column="18">/* fail */</comment>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">infop<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">buffer<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">newptr<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">infop<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">alloc<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">newsize<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><name><name pos:line="31" pos:column="3">infop<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">buffer<pos:position pos:line="31" pos:column="16"/></name><index pos:line="31" pos:column="16">[ <expr><name><name pos:line="31" pos:column="18">infop<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">len<pos:position pos:line="31" pos:column="28"/></name></name></expr> ]<pos:position pos:line="31" pos:column="30"/></index></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">outc<pos:position pos:line="31" pos:column="37"/></name></expr>;<pos:position pos:line="31" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="33" pos:column="3">infop<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">len<pos:position pos:line="33" pos:column="13"/></name></name><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>

  <return pos:line="35" pos:column="3">return <expr><name pos:line="35" pos:column="10">outc<pos:position pos:line="35" pos:column="14"/></name></expr>;<pos:position pos:line="35" pos:column="15"/></return> <comment type="block" pos:line="35" pos:column="16">/* fputc() returns like this on success */</comment>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

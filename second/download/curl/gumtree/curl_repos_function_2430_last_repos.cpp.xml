<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2430_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">is_separator<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">c<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* Return whether character is a cipher list separator. */</comment>
  <switch pos:line="4" pos:column="3">switch<condition pos:line="4" pos:column="9">(<expr><name pos:line="4" pos:column="10">c<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition> <block pos:line="4" pos:column="13">{
  <case pos:line="5" pos:column="3">case <expr><literal type="char" pos:line="5" pos:column="8">' '<pos:position pos:line="5" pos:column="11"/></literal></expr>:<pos:position pos:line="5" pos:column="12"/></case>
  <case pos:line="6" pos:column="3">case <expr><literal type="char" pos:line="6" pos:column="8">'\t'<pos:position pos:line="6" pos:column="12"/></literal></expr>:<pos:position pos:line="6" pos:column="13"/></case>
  <case pos:line="7" pos:column="3">case <expr><literal type="char" pos:line="7" pos:column="8">':'<pos:position pos:line="7" pos:column="11"/></literal></expr>:<pos:position pos:line="7" pos:column="12"/></case>
  <case pos:line="8" pos:column="3">case <expr><literal type="char" pos:line="8" pos:column="8">','<pos:position pos:line="8" pos:column="11"/></literal></expr>:<pos:position pos:line="8" pos:column="12"/></case>
  <case pos:line="9" pos:column="3">case <expr><literal type="char" pos:line="9" pos:column="8">';'<pos:position pos:line="9" pos:column="11"/></literal></expr>:<pos:position pos:line="9" pos:column="12"/></case>
    <return pos:line="10" pos:column="5">return <expr><literal type="boolean" pos:line="10" pos:column="12">true<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></switch>
  <return pos:line="12" pos:column="3">return <expr><literal type="boolean" pos:line="12" pos:column="10">false<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

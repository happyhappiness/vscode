<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_990_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SECStatus<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">SelectClientCert<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">arg<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">PRFileDesc<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">sock<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">CERTDistNamesStr<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">caNames<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="3" pos:column="35">struct<pos:position pos:line="3" pos:column="41"/></name> <name pos:line="3" pos:column="42">CERTCertificateStr<pos:position pos:line="3" pos:column="60"/></name></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier><modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">pRetCert<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="4" pos:column="35">struct<pos:position pos:line="4" pos:column="41"/></name> <name pos:line="4" pos:column="42">SECKEYPrivateKeyStr<pos:position pos:line="4" pos:column="61"/></name></name> <modifier pos:line="4" pos:column="62">*<pos:position pos:line="4" pos:column="63"/></modifier><modifier pos:line="4" pos:column="63">*<pos:position pos:line="4" pos:column="64"/></modifier></type><name pos:line="4" pos:column="64">pRetKey<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CERTCertificate<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">cert<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">SECKEYPrivateKey<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">privKey<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">nickname<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">char<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">arg<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">void<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">proto_win<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">SECStatus<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">secStatus<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">SECFailure<pos:position pos:line="10" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">PK11SlotInfo<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">slot<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="12" pos:column="3">(<pos:position pos:line="12" pos:column="4"/></operator><name pos:line="12" pos:column="4">void<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">)<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">caNames<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">proto_win<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">SSL_RevealPinArg<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">sock<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">nickname<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">secStatus<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">cert<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">PK11_FindCertFromNickname<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">nickname<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">proto_win<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">cert<pos:position pos:line="20" pos:column="10"/></name></expr>)<pos:position pos:line="20" pos:column="11"/></condition><then pos:line="20" pos:column="11"> <block pos:line="20" pos:column="12">{

    <if pos:line="22" pos:column="5">if<condition pos:line="22" pos:column="7">(<expr><operator pos:line="22" pos:column="8">!<pos:position pos:line="22" pos:column="9"/></operator><call><name pos:line="22" pos:column="9">strncmp<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">nickname<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"PEM Token"<pos:position pos:line="22" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="40">9<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">CK_SLOT_ID<pos:position pos:line="23" pos:column="17"/></name></type> <name pos:line="23" pos:column="18">slotID<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt> <comment type="block" pos:line="23" pos:column="30">/* hardcoded for now */</comment>
      <decl_stmt><decl><type><name pos:line="24" pos:column="7">char<pos:position pos:line="24" pos:column="11"/></name> <modifier pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></modifier></type> <name pos:line="24" pos:column="14">slotname<pos:position pos:line="24" pos:column="22"/></name> <init pos:line="24" pos:column="23">= <expr><operator pos:line="24" pos:column="25">(<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">char<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator><call><name pos:line="24" pos:column="33">malloc<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">SLOTSIZE<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="50"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">snprintf<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">slotname<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">SLOTSIZE<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="36">"PEM Token #%ld"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">slotID<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="26" pos:column="7">slot<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">PK11_FindSlotByName<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">slotname<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">privKey<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">PK11_FindPrivateKeyFromCert<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">slot<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">cert<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">NULL<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">PK11_FreeSlot<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">slot<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">free<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">slotname<pos:position pos:line="29" pos:column="20"/></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><name pos:line="30" pos:column="10">privKey<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18"> <block pos:line="30" pos:column="19">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">secStatus<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">SECSuccess<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
      <expr_stmt><expr><name pos:line="35" pos:column="7">privKey<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">PK11_FindKeyByAnyCert<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">cert<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="45">proto_win<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
      <if pos:line="36" pos:column="7">if<condition pos:line="36" pos:column="9">(<expr><name pos:line="36" pos:column="10">privKey<pos:position pos:line="36" pos:column="17"/></name></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="9">secStatus<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">SECSuccess<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><name pos:line="41" pos:column="6">secStatus<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">==<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">SECSuccess<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30"> <block pos:line="41" pos:column="31">{
    <expr_stmt><expr><operator pos:line="42" pos:column="5">*<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">pRetCert<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">cert<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="43" pos:column="5">*<pos:position pos:line="43" pos:column="6"/></operator><name pos:line="43" pos:column="6">pRetKey<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <name pos:line="43" pos:column="16">privKey<pos:position pos:line="43" pos:column="23"/></name></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then>
  <else pos:line="45" pos:column="3">else <block pos:line="45" pos:column="8">{
    <if pos:line="46" pos:column="5">if<condition pos:line="46" pos:column="7">(<expr><name pos:line="46" pos:column="8">cert<pos:position pos:line="46" pos:column="12"/></name></expr>)<pos:position pos:line="46" pos:column="13"/></condition><then pos:line="46" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="7">CERT_DestroyCertificate<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">cert<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <return pos:line="50" pos:column="3">return <expr><name pos:line="50" pos:column="10">secStatus<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

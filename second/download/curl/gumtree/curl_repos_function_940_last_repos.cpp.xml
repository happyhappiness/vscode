<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_940_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">glob_range<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">URLGlob<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">glob<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">patternp<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">posp<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">long<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">amount<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">int<pos:position pos:line="3" pos:column="31"/></name></type> <name pos:line="3" pos:column="32">globindex<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <comment type="block" pos:line="5" pos:column="3">/* processes a range expression with the point behind the opening '['
     - char range: e.g. "a-z]", "B-Q]"
     - num range: e.g. "0-9]", "17-2000]"
     - num range with leading zeros: e.g. "001-999]"
     expression is checked for well-formedness and collected until the next ']'
  */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">URLPattern<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">pat<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">rc<pos:position pos:line="12" pos:column="9"/></name></decl>;<pos:position pos:line="12" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">pattern<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">patternp<pos:position pos:line="13" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">c<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">pat<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <operator pos:line="16" pos:column="9">&amp;<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="10">glob<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">pattern<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><name><name pos:line="16" pos:column="24">glob<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">size<pos:position pos:line="16" pos:column="34"/></name></name></expr>]<pos:position pos:line="16" pos:column="35"/></index></name></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">pat<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">globindex<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">globindex<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>

  <if pos:line="19" pos:column="3">if<condition pos:line="19" pos:column="5">(<expr><call><name pos:line="19" pos:column="6">ISALPHA<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">pattern<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
    <comment type="block" pos:line="20" pos:column="5">/* character range detected */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name pos:line="21" pos:column="10">min_c<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name></type> <name pos:line="22" pos:column="10">max_c<pos:position pos:line="22" pos:column="15"/></name></decl>;<pos:position pos:line="22" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name></type> <name pos:line="23" pos:column="10">end_c<pos:position pos:line="23" pos:column="15"/></name></decl>;<pos:position pos:line="23" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">unsigned<pos:position pos:line="24" pos:column="13"/></name> <name pos:line="24" pos:column="14">long<pos:position pos:line="24" pos:column="18"/></name></type> <name pos:line="24" pos:column="19">step<pos:position pos:line="24" pos:column="23"/></name> <init pos:line="24" pos:column="24">= <expr><literal type="number" pos:line="24" pos:column="26">1<pos:position pos:line="24" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">pat<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">type<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">UPTCharRange<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">rc<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">sscanf<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">pattern<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="26">"%c-%c%c"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="38">min_c<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="46">max_c<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="53">&amp;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="54">end_c<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>

    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">rc<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">==<pos:position pos:line="30" pos:column="13"/></operator> <literal type="number" pos:line="30" pos:column="14">3<pos:position pos:line="30" pos:column="15"/></literal></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name pos:line="31" pos:column="10">end_c<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <literal type="char" pos:line="31" pos:column="19">':'<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23"> <block pos:line="31" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">char<pos:position pos:line="32" pos:column="13"/></name> <modifier pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></modifier></type><name pos:line="32" pos:column="15">endp<pos:position pos:line="32" pos:column="19"/></name></decl>;<pos:position pos:line="32" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">errno<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">step<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">strtoul<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name><name pos:line="34" pos:column="25">pattern<pos:position pos:line="34" pos:column="32"/></name><index pos:line="34" pos:column="32">[<expr><literal type="number" pos:line="34" pos:column="33">4<pos:position pos:line="34" pos:column="34"/></literal></expr>]<pos:position pos:line="34" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">&amp;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="38">endp<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="44">10<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
        <if pos:line="35" pos:column="9">if<condition pos:line="35" pos:column="11">(<expr><name pos:line="35" pos:column="12">errno<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">||<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">&amp;<pos:position pos:line="35" pos:column="26"/></operator><name><name pos:line="35" pos:column="22">pattern<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><literal type="number" pos:line="35" pos:column="30">4<pos:position pos:line="35" pos:column="31"/></literal></expr>]<pos:position pos:line="35" pos:column="32"/></index></name> <operator pos:line="35" pos:column="33">==<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">endp<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">||<pos:position pos:line="35" pos:column="43"/></operator> <operator pos:line="35" pos:column="44">*<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">endp<pos:position pos:line="35" pos:column="49"/></name> <operator pos:line="35" pos:column="50">!=<pos:position pos:line="35" pos:column="52"/></operator> <literal type="char" pos:line="35" pos:column="53">']'<pos:position pos:line="35" pos:column="56"/></literal></expr>)<pos:position pos:line="35" pos:column="57"/></condition><then pos:line="35" pos:column="57">
          <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="11">step<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt></block></then>
        <else pos:line="37" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="11">pattern<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">endp<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">+<pos:position pos:line="38" pos:column="27"/></operator> <literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt></block></else></if>
      }<pos:position pos:line="39" pos:column="8"/></block></then>
      <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if<condition pos:line="40" pos:column="14">(<expr><name pos:line="40" pos:column="15">end_c<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">!=<pos:position pos:line="40" pos:column="23"/></operator> <literal type="char" pos:line="40" pos:column="24">']'<pos:position pos:line="40" pos:column="27"/></literal></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28">
        <comment type="block" pos:line="41" pos:column="9">/* then this is wrong */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">rc<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt></block></then></if></elseif>
      <else pos:line="43" pos:column="7">else
        <comment type="block" pos:line="44" pos:column="9">/* end_c == ']' */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="9">pattern<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">+=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">4<pos:position pos:line="45" pos:column="21"/></literal></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt></block></else></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">posp<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">+=<pos:position pos:line="48" pos:column="13"/></operator> <operator pos:line="48" pos:column="14">(<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">pattern<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">-<pos:position pos:line="48" pos:column="24"/></operator> <operator pos:line="48" pos:column="25">*<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="26">patternp<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">)<pos:position pos:line="48" pos:column="35"/></operator></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>

    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name pos:line="50" pos:column="8">rc<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">!=<pos:position pos:line="50" pos:column="13"/></operator> <literal type="number" pos:line="50" pos:column="14">3<pos:position pos:line="50" pos:column="15"/></literal> <operator pos:line="50" pos:column="16">||<pos:position pos:line="50" pos:column="18"/></operator> <operator pos:line="50" pos:column="19">!<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">step<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">||<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">step<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">&gt;<pos:position pos:line="50" pos:column="37"/></operator> <operator pos:line="50" pos:column="35">(<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">unsigned<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">)<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="45">INT_MAX<pos:position pos:line="50" pos:column="52"/></name> <operator pos:line="50" pos:column="53">||<pos:position pos:line="50" pos:column="55"/></operator>
       <operator pos:line="51" pos:column="8">(<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">min_c<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">==<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">max_c<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">&amp;&amp;<pos:position pos:line="51" pos:column="34"/></operator> <name pos:line="51" pos:column="27">step<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">!=<pos:position pos:line="51" pos:column="34"/></operator> <literal type="number" pos:line="51" pos:column="35">1<pos:position pos:line="51" pos:column="36"/></literal><operator pos:line="51" pos:column="36">)<pos:position pos:line="51" pos:column="37"/></operator> <operator pos:line="51" pos:column="38">||<pos:position pos:line="51" pos:column="40"/></operator>
       <operator pos:line="52" pos:column="8">(<pos:position pos:line="52" pos:column="9"/></operator><name pos:line="52" pos:column="9">min_c<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">!=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">max_c<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">&amp;&amp;<pos:position pos:line="52" pos:column="34"/></operator> <operator pos:line="52" pos:column="27">(<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">min_c<pos:position pos:line="52" pos:column="33"/></name> <operator pos:line="52" pos:column="34">&gt;<pos:position pos:line="52" pos:column="38"/></operator> <name pos:line="52" pos:column="36">max_c<pos:position pos:line="52" pos:column="41"/></name> <operator pos:line="52" pos:column="42">||<pos:position pos:line="52" pos:column="44"/></operator> <name pos:line="52" pos:column="45">step<pos:position pos:line="52" pos:column="49"/></name> <operator pos:line="52" pos:column="50">&gt;<pos:position pos:line="52" pos:column="54"/></operator> <call pos:line="52" pos:column="52">(<name pos:line="52" pos:column="53">unsigned<pos:position pos:line="52" pos:column="61"/></name>)<argument_list pos:line="52" pos:column="62">(<argument><expr><name pos:line="52" pos:column="63">max_c<pos:position pos:line="52" pos:column="68"/></name> <operator pos:line="52" pos:column="69">-<pos:position pos:line="52" pos:column="70"/></operator> <name pos:line="52" pos:column="71">min_c<pos:position pos:line="52" pos:column="76"/></name></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call> <operator pos:line="52" pos:column="78">||<pos:position pos:line="52" pos:column="80"/></operator>
                           <operator pos:line="53" pos:column="28">(<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="29">max_c<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">-<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="37">min_c<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">)<pos:position pos:line="53" pos:column="43"/></operator> <operator pos:line="53" pos:column="44">&gt;<pos:position pos:line="53" pos:column="48"/></operator> <operator pos:line="53" pos:column="46">(<pos:position pos:line="53" pos:column="47"/></operator><literal type="char" pos:line="53" pos:column="47">'z'<pos:position pos:line="53" pos:column="50"/></literal> <operator pos:line="53" pos:column="51">-<pos:position pos:line="53" pos:column="52"/></operator> <literal type="char" pos:line="53" pos:column="53">'a'<pos:position pos:line="53" pos:column="56"/></literal><operator pos:line="53" pos:column="56">)<pos:position pos:line="53" pos:column="57"/></operator><operator pos:line="53" pos:column="57">)<pos:position pos:line="53" pos:column="58"/></operator><operator pos:line="53" pos:column="58">)<pos:position pos:line="53" pos:column="59"/></operator></expr>)<pos:position pos:line="53" pos:column="60"/></condition><then pos:line="53" pos:column="60">
      <comment type="block" pos:line="54" pos:column="7">/* the pattern is not well-formed */</comment>
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><call><name pos:line="55" pos:column="14">GLOBERROR<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><literal type="string" pos:line="55" pos:column="24">"bad range"<pos:position pos:line="55" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="37">*<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="38">posp<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">CURLE_URL_MALFORMAT<pos:position pos:line="55" pos:column="63"/></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></return></block></then></if>

    <comment type="block" pos:line="57" pos:column="5">/* if there was a ":[num]" thing, use that as step or else use 1 */</comment>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">pat<pos:position pos:line="58" pos:column="8"/></name><operator pos:line="58" pos:column="8">-&gt;<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="10">content<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">.<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">CharRange<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">.<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">step<pos:position pos:line="58" pos:column="32"/></name></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <operator pos:line="58" pos:column="35">(<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="36">int<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">)<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="40">step<pos:position pos:line="58" pos:column="44"/></name></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">pat<pos:position pos:line="59" pos:column="8"/></name><operator pos:line="59" pos:column="8">-&gt;<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="10">content<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">CharRange<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">.<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">ptr_c<pos:position pos:line="59" pos:column="33"/></name></name> <operator pos:line="59" pos:column="34">=<pos:position pos:line="59" pos:column="35"/></operator> <name><name pos:line="59" pos:column="36">pat<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="41">content<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">.<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="49">CharRange<pos:position pos:line="59" pos:column="58"/></name><operator pos:line="59" pos:column="58">.<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="59">min_c<pos:position pos:line="59" pos:column="64"/></name></name> <operator pos:line="59" pos:column="65">=<pos:position pos:line="59" pos:column="66"/></operator> <name pos:line="59" pos:column="67">min_c<pos:position pos:line="59" pos:column="72"/></name></expr>;<pos:position pos:line="59" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">pat<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">-&gt;<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="10">content<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">.<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">CharRange<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">.<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">max_c<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">=<pos:position pos:line="60" pos:column="35"/></operator> <name pos:line="60" pos:column="36">max_c<pos:position pos:line="60" pos:column="41"/></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>

    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><call><name pos:line="62" pos:column="8">multiply<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">amount<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="25">(<pos:position pos:line="62" pos:column="26"/></operator><operator pos:line="62" pos:column="26">(<pos:position pos:line="62" pos:column="27"/></operator><name><name pos:line="62" pos:column="27">pat<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">content<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">.<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="40">CharRange<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">.<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">max_c<pos:position pos:line="62" pos:column="55"/></name></name> <operator pos:line="62" pos:column="56">-<pos:position pos:line="62" pos:column="57"/></operator>
                          <name><name pos:line="63" pos:column="27">pat<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">content<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">.<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="40">CharRange<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">.<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">min_c<pos:position pos:line="63" pos:column="55"/></name></name><operator pos:line="63" pos:column="55">)<pos:position pos:line="63" pos:column="56"/></operator> <operator pos:line="63" pos:column="57">/<pos:position pos:line="63" pos:column="58"/></operator>
                         <name><name pos:line="64" pos:column="26">pat<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">-&gt;<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="31">content<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">.<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="39">CharRange<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">.<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="49">step<pos:position pos:line="64" pos:column="53"/></name></name> <operator pos:line="64" pos:column="54">+<pos:position pos:line="64" pos:column="55"/></operator> <literal type="number" pos:line="64" pos:column="56">1<pos:position pos:line="64" pos:column="57"/></literal><operator pos:line="64" pos:column="57">)<pos:position pos:line="64" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="60"/></condition><then pos:line="64" pos:column="60">
      <block type="pseudo"><return pos:line="65" pos:column="7">return <expr><call><name pos:line="65" pos:column="14">GLOBERROR<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><literal type="string" pos:line="65" pos:column="24">"range overflow"<pos:position pos:line="65" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="42">*<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="43">posp<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="49">CURLE_URL_MALFORMAT<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></return></block></then></if>
  }<pos:position pos:line="66" pos:column="4"/></block></then>
  <elseif pos:line="67" pos:column="3">else <if pos:line="67" pos:column="8">if<condition pos:line="67" pos:column="10">(<expr><call><name pos:line="67" pos:column="11">ISDIGIT<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><operator pos:line="67" pos:column="19">*<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">pattern<pos:position pos:line="67" pos:column="27"/></name></expr></argument>)<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29"> <block pos:line="67" pos:column="30">{
    <comment type="block" pos:line="68" pos:column="5">/* numeric range detected */</comment>
    <decl_stmt><decl><type><name pos:line="69" pos:column="5">unsigned<pos:position pos:line="69" pos:column="13"/></name> <name pos:line="69" pos:column="14">long<pos:position pos:line="69" pos:column="18"/></name></type> <name pos:line="69" pos:column="19">min_n<pos:position pos:line="69" pos:column="24"/></name></decl>;<pos:position pos:line="69" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">unsigned<pos:position pos:line="70" pos:column="13"/></name> <name pos:line="70" pos:column="14">long<pos:position pos:line="70" pos:column="18"/></name></type> <name pos:line="70" pos:column="19">max_n<pos:position pos:line="70" pos:column="24"/></name> <init pos:line="70" pos:column="25">= <expr><literal type="number" pos:line="70" pos:column="27">0<pos:position pos:line="70" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="70" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">unsigned<pos:position pos:line="71" pos:column="13"/></name> <name pos:line="71" pos:column="14">long<pos:position pos:line="71" pos:column="18"/></name></type> <name pos:line="71" pos:column="19">step_n<pos:position pos:line="71" pos:column="25"/></name> <init pos:line="71" pos:column="26">= <expr><literal type="number" pos:line="71" pos:column="28">0<pos:position pos:line="71" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="71" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">char<pos:position pos:line="72" pos:column="9"/></name> <modifier pos:line="72" pos:column="10">*<pos:position pos:line="72" pos:column="11"/></modifier></type><name pos:line="72" pos:column="11">endp<pos:position pos:line="72" pos:column="15"/></name></decl>;<pos:position pos:line="72" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="74" pos:column="5">pat<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">type<pos:position pos:line="74" pos:column="14"/></name></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <name pos:line="74" pos:column="17">UPTNumRange<pos:position pos:line="74" pos:column="28"/></name></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">pat<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">-&gt;<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="10">content<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">NumRange<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">.<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="27">padlength<pos:position pos:line="75" pos:column="36"/></name></name> <operator pos:line="75" pos:column="37">=<pos:position pos:line="75" pos:column="38"/></operator> <literal type="number" pos:line="75" pos:column="39">0<pos:position pos:line="75" pos:column="40"/></literal></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>

    <if pos:line="77" pos:column="5">if<condition pos:line="77" pos:column="7">(<expr><operator pos:line="77" pos:column="8">*<pos:position pos:line="77" pos:column="9"/></operator><name pos:line="77" pos:column="9">pattern<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">==<pos:position pos:line="77" pos:column="19"/></operator> <literal type="char" pos:line="77" pos:column="20">'0'<pos:position pos:line="77" pos:column="23"/></literal></expr>)<pos:position pos:line="77" pos:column="24"/></condition><then pos:line="77" pos:column="24"> <block pos:line="77" pos:column="25">{
      <comment type="block" pos:line="78" pos:column="7">/* leading zero specified, count them! */</comment>
      <expr_stmt><expr><name pos:line="79" pos:column="7">c<pos:position pos:line="79" pos:column="8"/></name> <operator pos:line="79" pos:column="9">=<pos:position pos:line="79" pos:column="10"/></operator> <name pos:line="79" pos:column="11">pattern<pos:position pos:line="79" pos:column="18"/></name></expr>;<pos:position pos:line="79" pos:column="19"/></expr_stmt>
      <while pos:line="80" pos:column="7">while<condition pos:line="80" pos:column="12">(<expr><call><name pos:line="80" pos:column="13">ISDIGIT<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><operator pos:line="80" pos:column="21">*<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">c<pos:position pos:line="80" pos:column="23"/></name></expr></argument>)<pos:position pos:line="80" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="25"/></condition> <block pos:line="80" pos:column="26">{
        <expr_stmt><expr><name pos:line="81" pos:column="9">c<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">++<pos:position pos:line="81" pos:column="12"/></operator></expr>;<pos:position pos:line="81" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="82" pos:column="9">++<pos:position pos:line="82" pos:column="11"/></operator><name><name pos:line="82" pos:column="11">pat<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">content<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">.<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">NumRange<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">.<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="33">padlength<pos:position pos:line="82" pos:column="42"/></name></name></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt> <comment type="block" pos:line="82" pos:column="44">/* padding length is set for all
                                              instances of this pattern */</comment>
      }<pos:position pos:line="84" pos:column="8"/></block></while>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="87" pos:column="5">errno<pos:position pos:line="87" pos:column="10"/></name> <operator pos:line="87" pos:column="11">=<pos:position pos:line="87" pos:column="12"/></operator> <literal type="number" pos:line="87" pos:column="13">0<pos:position pos:line="87" pos:column="14"/></literal></expr>;<pos:position pos:line="87" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="88" pos:column="5">min_n<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">=<pos:position pos:line="88" pos:column="12"/></operator> <call><name pos:line="88" pos:column="13">strtoul<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">pattern<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="30">&amp;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="31">endp<pos:position pos:line="88" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="37">10<pos:position pos:line="88" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>
    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">(<expr><name pos:line="89" pos:column="8">errno<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">||<pos:position pos:line="89" pos:column="16"/></operator> <operator pos:line="89" pos:column="17">(<pos:position pos:line="89" pos:column="18"/></operator><name pos:line="89" pos:column="18">endp<pos:position pos:line="89" pos:column="22"/></name> <operator pos:line="89" pos:column="23">==<pos:position pos:line="89" pos:column="25"/></operator> <name pos:line="89" pos:column="26">pattern<pos:position pos:line="89" pos:column="33"/></name><operator pos:line="89" pos:column="33">)<pos:position pos:line="89" pos:column="34"/></operator></expr>)<pos:position pos:line="89" pos:column="35"/></condition><then pos:line="89" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="7">endp<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <name pos:line="90" pos:column="14">NULL<pos:position pos:line="90" pos:column="18"/></name></expr>;<pos:position pos:line="90" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="91" pos:column="5">else <block pos:line="91" pos:column="10">{
      <if pos:line="92" pos:column="7">if<condition pos:line="92" pos:column="9">(<expr><operator pos:line="92" pos:column="10">*<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">endp<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">!=<pos:position pos:line="92" pos:column="18"/></operator> <literal type="char" pos:line="92" pos:column="19">'-'<pos:position pos:line="92" pos:column="22"/></literal></expr>)<pos:position pos:line="92" pos:column="23"/></condition><then pos:line="92" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="9">endp<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <name pos:line="93" pos:column="16">NULL<pos:position pos:line="93" pos:column="20"/></name></expr>;<pos:position pos:line="93" pos:column="21"/></expr_stmt></block></then>
      <else pos:line="94" pos:column="7">else <block pos:line="94" pos:column="12">{
        <expr_stmt><expr><name pos:line="95" pos:column="9">pattern<pos:position pos:line="95" pos:column="16"/></name> <operator pos:line="95" pos:column="17">=<pos:position pos:line="95" pos:column="18"/></operator> <name pos:line="95" pos:column="19">endp<pos:position pos:line="95" pos:column="23"/></name> <operator pos:line="95" pos:column="24">+<pos:position pos:line="95" pos:column="25"/></operator> <literal type="number" pos:line="95" pos:column="26">1<pos:position pos:line="95" pos:column="27"/></literal></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>
        <while pos:line="96" pos:column="9">while<condition pos:line="96" pos:column="14">(<expr><operator pos:line="96" pos:column="15">*<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">pattern<pos:position pos:line="96" pos:column="23"/></name> <operator pos:line="96" pos:column="24">&amp;&amp;<pos:position pos:line="96" pos:column="34"/></operator> <call><name pos:line="96" pos:column="27">ISBLANK<pos:position pos:line="96" pos:column="34"/></name><argument_list pos:line="96" pos:column="34">(<argument><expr><operator pos:line="96" pos:column="35">*<pos:position pos:line="96" pos:column="36"/></operator><name pos:line="96" pos:column="36">pattern<pos:position pos:line="96" pos:column="43"/></name></expr></argument>)<pos:position pos:line="96" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="45"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="11">pattern<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">++<pos:position pos:line="97" pos:column="20"/></operator></expr>;<pos:position pos:line="97" pos:column="21"/></expr_stmt></block></while>
        <if pos:line="98" pos:column="9">if<condition pos:line="98" pos:column="11">(<expr><operator pos:line="98" pos:column="12">!<pos:position pos:line="98" pos:column="13"/></operator><call><name pos:line="98" pos:column="13">ISDIGIT<pos:position pos:line="98" pos:column="20"/></name><argument_list pos:line="98" pos:column="20">(<argument><expr><operator pos:line="98" pos:column="21">*<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="22">pattern<pos:position pos:line="98" pos:column="29"/></name></expr></argument>)<pos:position pos:line="98" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="31"/></condition><then pos:line="98" pos:column="31"> <block pos:line="98" pos:column="32">{
          <expr_stmt><expr><name pos:line="99" pos:column="11">endp<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <name pos:line="99" pos:column="18">NULL<pos:position pos:line="99" pos:column="22"/></name></expr>;<pos:position pos:line="99" pos:column="23"/></expr_stmt>
          <goto pos:line="100" pos:column="11">goto <name pos:line="100" pos:column="16">fail<pos:position pos:line="100" pos:column="20"/></name>;<pos:position pos:line="100" pos:column="21"/></goto>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="102" pos:column="9">errno<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">=<pos:position pos:line="102" pos:column="16"/></operator> <literal type="number" pos:line="102" pos:column="17">0<pos:position pos:line="102" pos:column="18"/></literal></expr>;<pos:position pos:line="102" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="103" pos:column="9">max_n<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">=<pos:position pos:line="103" pos:column="16"/></operator> <call><name pos:line="103" pos:column="17">strtoul<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">pattern<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="34">&amp;<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="35">endp<pos:position pos:line="103" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="41">10<pos:position pos:line="103" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
        <if pos:line="104" pos:column="9">if<condition pos:line="104" pos:column="11">(<expr><name pos:line="104" pos:column="12">errno<pos:position pos:line="104" pos:column="17"/></name></expr>)<pos:position pos:line="104" pos:column="18"/></condition><then pos:line="104" pos:column="18">
          <comment type="block" pos:line="105" pos:column="11">/* overflow */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="11">endp<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <name pos:line="106" pos:column="18">NULL<pos:position pos:line="106" pos:column="22"/></name></expr>;<pos:position pos:line="106" pos:column="23"/></expr_stmt></block></then>
        <elseif pos:line="107" pos:column="9">else <if pos:line="107" pos:column="14">if<condition pos:line="107" pos:column="16">(<expr><operator pos:line="107" pos:column="17">*<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="18">endp<pos:position pos:line="107" pos:column="22"/></name> <operator pos:line="107" pos:column="23">==<pos:position pos:line="107" pos:column="25"/></operator> <literal type="char" pos:line="107" pos:column="26">':'<pos:position pos:line="107" pos:column="29"/></literal></expr>)<pos:position pos:line="107" pos:column="30"/></condition><then pos:line="107" pos:column="30"> <block pos:line="107" pos:column="31">{
          <expr_stmt><expr><name pos:line="108" pos:column="11">pattern<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <name pos:line="108" pos:column="21">endp<pos:position pos:line="108" pos:column="25"/></name> <operator pos:line="108" pos:column="26">+<pos:position pos:line="108" pos:column="27"/></operator> <literal type="number" pos:line="108" pos:column="28">1<pos:position pos:line="108" pos:column="29"/></literal></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><name pos:line="109" pos:column="11">errno<pos:position pos:line="109" pos:column="16"/></name> <operator pos:line="109" pos:column="17">=<pos:position pos:line="109" pos:column="18"/></operator> <literal type="number" pos:line="109" pos:column="19">0<pos:position pos:line="109" pos:column="20"/></literal></expr>;<pos:position pos:line="109" pos:column="21"/></expr_stmt>
          <expr_stmt><expr><name pos:line="110" pos:column="11">step_n<pos:position pos:line="110" pos:column="17"/></name> <operator pos:line="110" pos:column="18">=<pos:position pos:line="110" pos:column="19"/></operator> <call><name pos:line="110" pos:column="20">strtoul<pos:position pos:line="110" pos:column="27"/></name><argument_list pos:line="110" pos:column="27">(<argument><expr><name pos:line="110" pos:column="28">pattern<pos:position pos:line="110" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="37">&amp;<pos:position pos:line="110" pos:column="42"/></operator><name pos:line="110" pos:column="38">endp<pos:position pos:line="110" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="44">10<pos:position pos:line="110" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="48"/></expr_stmt>
          <if pos:line="111" pos:column="11">if<condition pos:line="111" pos:column="13">(<expr><name pos:line="111" pos:column="14">errno<pos:position pos:line="111" pos:column="19"/></name></expr>)<pos:position pos:line="111" pos:column="20"/></condition><then pos:line="111" pos:column="20">
            <comment type="block" pos:line="112" pos:column="13">/* over/underflow situation */</comment>
            <block type="pseudo"><expr_stmt><expr><name pos:line="113" pos:column="13">endp<pos:position pos:line="113" pos:column="17"/></name> <operator pos:line="113" pos:column="18">=<pos:position pos:line="113" pos:column="19"/></operator> <name pos:line="113" pos:column="20">NULL<pos:position pos:line="113" pos:column="24"/></name></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt></block></then></if>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if></elseif>
        <else pos:line="115" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="11">step_n<pos:position pos:line="116" pos:column="17"/></name> <operator pos:line="116" pos:column="18">=<pos:position pos:line="116" pos:column="19"/></operator> <literal type="number" pos:line="116" pos:column="20">1<pos:position pos:line="116" pos:column="21"/></literal></expr>;<pos:position pos:line="116" pos:column="22"/></expr_stmt></block></else></if>
        <if pos:line="117" pos:column="9">if<condition pos:line="117" pos:column="11">(<expr><name pos:line="117" pos:column="12">endp<pos:position pos:line="117" pos:column="16"/></name> <operator pos:line="117" pos:column="17">&amp;&amp;<pos:position pos:line="117" pos:column="27"/></operator> <operator pos:line="117" pos:column="20">(<pos:position pos:line="117" pos:column="21"/></operator><operator pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">endp<pos:position pos:line="117" pos:column="26"/></name> <operator pos:line="117" pos:column="27">==<pos:position pos:line="117" pos:column="29"/></operator> <literal type="char" pos:line="117" pos:column="30">']'<pos:position pos:line="117" pos:column="33"/></literal><operator pos:line="117" pos:column="33">)<pos:position pos:line="117" pos:column="34"/></operator></expr>)<pos:position pos:line="117" pos:column="35"/></condition><then pos:line="117" pos:column="35"> <block pos:line="117" pos:column="36">{
          <expr_stmt><expr><name pos:line="118" pos:column="11">pattern<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">=<pos:position pos:line="118" pos:column="20"/></operator> <name pos:line="118" pos:column="21">endp<pos:position pos:line="118" pos:column="25"/></name> <operator pos:line="118" pos:column="26">+<pos:position pos:line="118" pos:column="27"/></operator> <literal type="number" pos:line="118" pos:column="28">1<pos:position pos:line="118" pos:column="29"/></literal></expr>;<pos:position pos:line="118" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="119" pos:column="10"/></block></then>
        <else pos:line="120" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="11">endp<pos:position pos:line="121" pos:column="15"/></name> <operator pos:line="121" pos:column="16">=<pos:position pos:line="121" pos:column="17"/></operator> <name pos:line="121" pos:column="18">NULL<pos:position pos:line="121" pos:column="22"/></name></expr>;<pos:position pos:line="121" pos:column="23"/></expr_stmt></block></else></if>
      }<pos:position pos:line="122" pos:column="8"/></block></else></if>
    }<pos:position pos:line="123" pos:column="6"/></block></else></if>

    <label><name pos:line="125" pos:column="5">fail<pos:position pos:line="125" pos:column="9"/></name>:<pos:position pos:line="125" pos:column="10"/></label>
    <expr_stmt><expr><operator pos:line="126" pos:column="5">*<pos:position pos:line="126" pos:column="6"/></operator><name pos:line="126" pos:column="6">posp<pos:position pos:line="126" pos:column="10"/></name> <operator pos:line="126" pos:column="11">+=<pos:position pos:line="126" pos:column="13"/></operator> <operator pos:line="126" pos:column="14">(<pos:position pos:line="126" pos:column="15"/></operator><name pos:line="126" pos:column="15">pattern<pos:position pos:line="126" pos:column="22"/></name> <operator pos:line="126" pos:column="23">-<pos:position pos:line="126" pos:column="24"/></operator> <operator pos:line="126" pos:column="25">*<pos:position pos:line="126" pos:column="26"/></operator><name pos:line="126" pos:column="26">patternp<pos:position pos:line="126" pos:column="34"/></name><operator pos:line="126" pos:column="34">)<pos:position pos:line="126" pos:column="35"/></operator></expr>;<pos:position pos:line="126" pos:column="36"/></expr_stmt>

    <if pos:line="128" pos:column="5">if<condition pos:line="128" pos:column="7">(<expr><operator pos:line="128" pos:column="8">!<pos:position pos:line="128" pos:column="9"/></operator><name pos:line="128" pos:column="9">endp<pos:position pos:line="128" pos:column="13"/></name> <operator pos:line="128" pos:column="14">||<pos:position pos:line="128" pos:column="16"/></operator> <operator pos:line="128" pos:column="17">!<pos:position pos:line="128" pos:column="18"/></operator><name pos:line="128" pos:column="18">step_n<pos:position pos:line="128" pos:column="24"/></name> <operator pos:line="128" pos:column="25">||<pos:position pos:line="128" pos:column="27"/></operator>
       <operator pos:line="129" pos:column="8">(<pos:position pos:line="129" pos:column="9"/></operator><name pos:line="129" pos:column="9">min_n<pos:position pos:line="129" pos:column="14"/></name> <operator pos:line="129" pos:column="15">==<pos:position pos:line="129" pos:column="17"/></operator> <name pos:line="129" pos:column="18">max_n<pos:position pos:line="129" pos:column="23"/></name> <operator pos:line="129" pos:column="24">&amp;&amp;<pos:position pos:line="129" pos:column="34"/></operator> <name pos:line="129" pos:column="27">step_n<pos:position pos:line="129" pos:column="33"/></name> <operator pos:line="129" pos:column="34">!=<pos:position pos:line="129" pos:column="36"/></operator> <literal type="number" pos:line="129" pos:column="37">1<pos:position pos:line="129" pos:column="38"/></literal><operator pos:line="129" pos:column="38">)<pos:position pos:line="129" pos:column="39"/></operator> <operator pos:line="129" pos:column="40">||<pos:position pos:line="129" pos:column="42"/></operator>
       <operator pos:line="130" pos:column="8">(<pos:position pos:line="130" pos:column="9"/></operator><name pos:line="130" pos:column="9">min_n<pos:position pos:line="130" pos:column="14"/></name> <operator pos:line="130" pos:column="15">!=<pos:position pos:line="130" pos:column="17"/></operator> <name pos:line="130" pos:column="18">max_n<pos:position pos:line="130" pos:column="23"/></name> <operator pos:line="130" pos:column="24">&amp;&amp;<pos:position pos:line="130" pos:column="34"/></operator> <operator pos:line="130" pos:column="27">(<pos:position pos:line="130" pos:column="28"/></operator><name pos:line="130" pos:column="28">min_n<pos:position pos:line="130" pos:column="33"/></name> <operator pos:line="130" pos:column="34">&gt;<pos:position pos:line="130" pos:column="38"/></operator> <name pos:line="130" pos:column="36">max_n<pos:position pos:line="130" pos:column="41"/></name> <operator pos:line="130" pos:column="42">||<pos:position pos:line="130" pos:column="44"/></operator> <name pos:line="130" pos:column="45">step_n<pos:position pos:line="130" pos:column="51"/></name> <operator pos:line="130" pos:column="52">&gt;<pos:position pos:line="130" pos:column="56"/></operator> <operator pos:line="130" pos:column="54">(<pos:position pos:line="130" pos:column="55"/></operator><name pos:line="130" pos:column="55">max_n<pos:position pos:line="130" pos:column="60"/></name> <operator pos:line="130" pos:column="61">-<pos:position pos:line="130" pos:column="62"/></operator> <name pos:line="130" pos:column="63">min_n<pos:position pos:line="130" pos:column="68"/></name><operator pos:line="130" pos:column="68">)<pos:position pos:line="130" pos:column="69"/></operator><operator pos:line="130" pos:column="69">)<pos:position pos:line="130" pos:column="70"/></operator><operator pos:line="130" pos:column="70">)<pos:position pos:line="130" pos:column="71"/></operator></expr>)<pos:position pos:line="130" pos:column="72"/></condition><then pos:line="130" pos:column="72">
      <comment type="block" pos:line="131" pos:column="7">/* the pattern is not well-formed */</comment>
      <block type="pseudo"><return pos:line="132" pos:column="7">return <expr><call><name pos:line="132" pos:column="14">GLOBERROR<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><literal type="string" pos:line="132" pos:column="24">"bad range"<pos:position pos:line="132" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="132" pos:column="37">*<pos:position pos:line="132" pos:column="38"/></operator><name pos:line="132" pos:column="38">posp<pos:position pos:line="132" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="44">CURLE_URL_MALFORMAT<pos:position pos:line="132" pos:column="63"/></name></expr></argument>)<pos:position pos:line="132" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="65"/></return></block></then></if>

    <comment type="block" pos:line="134" pos:column="5">/* typecasting to ints are fine here since we make sure above that we
       are within 31 bits */</comment>
    <expr_stmt><expr><name><name pos:line="136" pos:column="5">pat<pos:position pos:line="136" pos:column="8"/></name><operator pos:line="136" pos:column="8">-&gt;<pos:position pos:line="136" pos:column="13"/></operator><name pos:line="136" pos:column="10">content<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">.<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="18">NumRange<pos:position pos:line="136" pos:column="26"/></name><operator pos:line="136" pos:column="26">.<pos:position pos:line="136" pos:column="27"/></operator><name pos:line="136" pos:column="27">ptr_n<pos:position pos:line="136" pos:column="32"/></name></name> <operator pos:line="136" pos:column="33">=<pos:position pos:line="136" pos:column="34"/></operator> <name><name pos:line="136" pos:column="35">pat<pos:position pos:line="136" pos:column="38"/></name><operator pos:line="136" pos:column="38">-&gt;<pos:position pos:line="136" pos:column="43"/></operator><name pos:line="136" pos:column="40">content<pos:position pos:line="136" pos:column="47"/></name><operator pos:line="136" pos:column="47">.<pos:position pos:line="136" pos:column="48"/></operator><name pos:line="136" pos:column="48">NumRange<pos:position pos:line="136" pos:column="56"/></name><operator pos:line="136" pos:column="56">.<pos:position pos:line="136" pos:column="57"/></operator><name pos:line="136" pos:column="57">min_n<pos:position pos:line="136" pos:column="62"/></name></name> <operator pos:line="136" pos:column="63">=<pos:position pos:line="136" pos:column="64"/></operator> <name pos:line="136" pos:column="65">min_n<pos:position pos:line="136" pos:column="70"/></name></expr>;<pos:position pos:line="136" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="137" pos:column="5">pat<pos:position pos:line="137" pos:column="8"/></name><operator pos:line="137" pos:column="8">-&gt;<pos:position pos:line="137" pos:column="13"/></operator><name pos:line="137" pos:column="10">content<pos:position pos:line="137" pos:column="17"/></name><operator pos:line="137" pos:column="17">.<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="18">NumRange<pos:position pos:line="137" pos:column="26"/></name><operator pos:line="137" pos:column="26">.<pos:position pos:line="137" pos:column="27"/></operator><name pos:line="137" pos:column="27">max_n<pos:position pos:line="137" pos:column="32"/></name></name> <operator pos:line="137" pos:column="33">=<pos:position pos:line="137" pos:column="34"/></operator> <name pos:line="137" pos:column="35">max_n<pos:position pos:line="137" pos:column="40"/></name></expr>;<pos:position pos:line="137" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="138" pos:column="5">pat<pos:position pos:line="138" pos:column="8"/></name><operator pos:line="138" pos:column="8">-&gt;<pos:position pos:line="138" pos:column="13"/></operator><name pos:line="138" pos:column="10">content<pos:position pos:line="138" pos:column="17"/></name><operator pos:line="138" pos:column="17">.<pos:position pos:line="138" pos:column="18"/></operator><name pos:line="138" pos:column="18">NumRange<pos:position pos:line="138" pos:column="26"/></name><operator pos:line="138" pos:column="26">.<pos:position pos:line="138" pos:column="27"/></operator><name pos:line="138" pos:column="27">step<pos:position pos:line="138" pos:column="31"/></name></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <name pos:line="138" pos:column="34">step_n<pos:position pos:line="138" pos:column="40"/></name></expr>;<pos:position pos:line="138" pos:column="41"/></expr_stmt>

    <if pos:line="140" pos:column="5">if<condition pos:line="140" pos:column="7">(<expr><call><name pos:line="140" pos:column="8">multiply<pos:position pos:line="140" pos:column="16"/></name><argument_list pos:line="140" pos:column="16">(<argument><expr><name pos:line="140" pos:column="17">amount<pos:position pos:line="140" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="140" pos:column="25">(<pos:position pos:line="140" pos:column="26"/></operator><operator pos:line="140" pos:column="26">(<pos:position pos:line="140" pos:column="27"/></operator><name><name pos:line="140" pos:column="27">pat<pos:position pos:line="140" pos:column="30"/></name><operator pos:line="140" pos:column="30">-&gt;<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="32">content<pos:position pos:line="140" pos:column="39"/></name><operator pos:line="140" pos:column="39">.<pos:position pos:line="140" pos:column="40"/></operator><name pos:line="140" pos:column="40">NumRange<pos:position pos:line="140" pos:column="48"/></name><operator pos:line="140" pos:column="48">.<pos:position pos:line="140" pos:column="49"/></operator><name pos:line="140" pos:column="49">max_n<pos:position pos:line="140" pos:column="54"/></name></name> <operator pos:line="140" pos:column="55">-<pos:position pos:line="140" pos:column="56"/></operator>
                          <name><name pos:line="141" pos:column="27">pat<pos:position pos:line="141" pos:column="30"/></name><operator pos:line="141" pos:column="30">-&gt;<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="32">content<pos:position pos:line="141" pos:column="39"/></name><operator pos:line="141" pos:column="39">.<pos:position pos:line="141" pos:column="40"/></operator><name pos:line="141" pos:column="40">NumRange<pos:position pos:line="141" pos:column="48"/></name><operator pos:line="141" pos:column="48">.<pos:position pos:line="141" pos:column="49"/></operator><name pos:line="141" pos:column="49">min_n<pos:position pos:line="141" pos:column="54"/></name></name><operator pos:line="141" pos:column="54">)<pos:position pos:line="141" pos:column="55"/></operator> <operator pos:line="141" pos:column="56">/<pos:position pos:line="141" pos:column="57"/></operator>
                         <name><name pos:line="142" pos:column="26">pat<pos:position pos:line="142" pos:column="29"/></name><operator pos:line="142" pos:column="29">-&gt;<pos:position pos:line="142" pos:column="34"/></operator><name pos:line="142" pos:column="31">content<pos:position pos:line="142" pos:column="38"/></name><operator pos:line="142" pos:column="38">.<pos:position pos:line="142" pos:column="39"/></operator><name pos:line="142" pos:column="39">NumRange<pos:position pos:line="142" pos:column="47"/></name><operator pos:line="142" pos:column="47">.<pos:position pos:line="142" pos:column="48"/></operator><name pos:line="142" pos:column="48">step<pos:position pos:line="142" pos:column="52"/></name></name> <operator pos:line="142" pos:column="53">+<pos:position pos:line="142" pos:column="54"/></operator> <literal type="number" pos:line="142" pos:column="55">1<pos:position pos:line="142" pos:column="56"/></literal><operator pos:line="142" pos:column="56">)<pos:position pos:line="142" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="142" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="59"/></condition><then pos:line="142" pos:column="59">
      <block type="pseudo"><return pos:line="143" pos:column="7">return <expr><call><name pos:line="143" pos:column="14">GLOBERROR<pos:position pos:line="143" pos:column="23"/></name><argument_list pos:line="143" pos:column="23">(<argument><expr><literal type="string" pos:line="143" pos:column="24">"range overflow"<pos:position pos:line="143" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="143" pos:column="42">*<pos:position pos:line="143" pos:column="43"/></operator><name pos:line="143" pos:column="43">posp<pos:position pos:line="143" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="49">CURLE_URL_MALFORMAT<pos:position pos:line="143" pos:column="68"/></name></expr></argument>)<pos:position pos:line="143" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="70"/></return></block></then></if>
  }<pos:position pos:line="144" pos:column="4"/></block></then></if></elseif>
  <else pos:line="145" pos:column="3">else
    <block type="pseudo"><return pos:line="146" pos:column="5">return <expr><call><name pos:line="146" pos:column="12">GLOBERROR<pos:position pos:line="146" pos:column="21"/></name><argument_list pos:line="146" pos:column="21">(<argument><expr><literal type="string" pos:line="146" pos:column="22">"bad range specification"<pos:position pos:line="146" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="146" pos:column="49">*<pos:position pos:line="146" pos:column="50"/></operator><name pos:line="146" pos:column="50">posp<pos:position pos:line="146" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="56">CURLE_URL_MALFORMAT<pos:position pos:line="146" pos:column="75"/></name></expr></argument>)<pos:position pos:line="146" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="77"/></return></block></else></if>

  <expr_stmt><expr><operator pos:line="148" pos:column="3">*<pos:position pos:line="148" pos:column="4"/></operator><name pos:line="148" pos:column="4">patternp<pos:position pos:line="148" pos:column="12"/></name> <operator pos:line="148" pos:column="13">=<pos:position pos:line="148" pos:column="14"/></operator> <name pos:line="148" pos:column="15">pattern<pos:position pos:line="148" pos:column="22"/></name></expr>;<pos:position pos:line="148" pos:column="23"/></expr_stmt>
  <return pos:line="149" pos:column="3">return <expr><name pos:line="149" pos:column="10">CURLE_OK<pos:position pos:line="149" pos:column="18"/></name></expr>;<pos:position pos:line="149" pos:column="19"/></return>
}<pos:position pos:line="150" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_148_curl-7.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name><init pos:line="3" pos:column="29">=<expr><name><name pos:line="3" pos:column="30">conn<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">data<pos:position pos:line="3" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name><name pos:line="4" pos:column="15">data<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">buffer<pos:position pos:line="4" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt> <comment type="block" pos:line="4" pos:column="35">/* this is a short cut to the buffer */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name><init pos:line="5" pos:column="18">=<expr><name pos:line="5" pos:column="19">CURLE_OK<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">HTTP<pos:position pos:line="6" pos:column="14"/></name></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">http<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Cookie<pos:position pos:line="7" pos:column="16"/></name></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">co<pos:position pos:line="7" pos:column="20"/></name><init pos:line="7" pos:column="20">=<expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt> <comment type="block" pos:line="7" pos:column="27">/* no cookies from start */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">ppath<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">conn<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">ppath<pos:position pos:line="8" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt> <comment type="block" pos:line="8" pos:column="30">/* three previous function arguments */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">host<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name><name pos:line="9" pos:column="16">conn<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">name<pos:position pos:line="9" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">long<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">bytecount<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator><name><name pos:line="10" pos:column="22">conn<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">bytecount<pos:position pos:line="10" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name><name pos:line="12" pos:column="7">conn<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">proto<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">http<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block pos:line="12" pos:column="25">{
    <comment type="block" pos:line="13" pos:column="5">/* Only allocate this struct if we don't already have it! */</comment>

    <expr_stmt><expr><name pos:line="15" pos:column="5">http<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator>struct <name pos:line="15" pos:column="20">HTTP<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator><call><name pos:line="15" pos:column="27">malloc<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><sizeof pos:line="15" pos:column="34">sizeof<argument_list pos:line="15" pos:column="40">(<argument><expr pos:line="15" pos:column="41">struct <name pos:line="15" pos:column="48">HTTP<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><operator pos:line="16" pos:column="8">!<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">http<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memset<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">http<pos:position pos:line="18" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="21">sizeof<argument_list pos:line="18" pos:column="27">(<argument><expr pos:line="18" pos:column="28">struct <name pos:line="18" pos:column="35">HTTP<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">proto<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">http<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">http<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then>
  <else pos:line="21" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="5">http<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name><name pos:line="22" pos:column="12">conn<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">proto<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">http<pos:position pos:line="22" pos:column="28"/></name></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="24" pos:column="3">/* We default to persistant connections */</comment>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">conn<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">bits<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">close<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">FALSE<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">( <expr><operator pos:line="27" pos:column="8">(<pos:position pos:line="27" pos:column="9"/></operator><name><name pos:line="27" pos:column="9">conn<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">protocol<pos:position pos:line="27" pos:column="23"/></name></name><operator pos:line="27" pos:column="23">&amp;<pos:position pos:line="27" pos:column="28"/></operator><operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">PROT_HTTP<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">|<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">PROT_FTP<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <operator pos:line="27" pos:column="46">&amp;&amp;<pos:position pos:line="27" pos:column="56"/></operator>
       <name><name pos:line="28" pos:column="8">data<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">set<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">.<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">upload<pos:position pos:line="28" pos:column="24"/></name></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25"> <block pos:line="28" pos:column="26">{
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">data<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">set<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">.<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">httpreq<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">HTTPREQ_PUT<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  
  <comment type="block" pos:line="32" pos:column="3">/* The User-Agent string has been built in url.c already, because it might
     have been used in the proxy connect, but if we have got a header with
     the user-agent string specified, we erase the previously made string
     here. */</comment>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><call><name pos:line="36" pos:column="6">checkheaders<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">data<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="25">"User-Agent:"<pos:position pos:line="36" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call> <operator pos:line="36" pos:column="40">&amp;&amp;<pos:position pos:line="36" pos:column="50"/></operator> <name><name pos:line="36" pos:column="43">conn<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">allocptr<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">.<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="58">uagent<pos:position pos:line="36" pos:column="64"/></name></name></expr>)<pos:position pos:line="36" pos:column="65"/></condition><then pos:line="36" pos:column="65"> <block pos:line="36" pos:column="66">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">free<pos:position pos:line="37" pos:column="9"/></name><argument_list pos:line="37" pos:column="9">(<argument><expr><name><name pos:line="37" pos:column="10">conn<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">allocptr<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">.<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">uagent<pos:position pos:line="37" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">conn<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">allocptr<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">uagent<pos:position pos:line="38" pos:column="26"/></name></name><operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">(<pos:position pos:line="41" pos:column="7"/></operator><name><name pos:line="41" pos:column="7">conn<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">bits<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">.<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">user_passwd<pos:position pos:line="41" pos:column="29"/></name></name><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator> <operator pos:line="41" pos:column="31">&amp;&amp;<pos:position pos:line="41" pos:column="41"/></operator> <operator pos:line="41" pos:column="34">!<pos:position pos:line="41" pos:column="35"/></operator><call><name pos:line="41" pos:column="35">checkheaders<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name pos:line="41" pos:column="48">data<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="54">"Authorization:"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="72"/></condition><then pos:line="41" pos:column="72"> <block pos:line="41" pos:column="73">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">char<pos:position pos:line="42" pos:column="9"/></name> <modifier pos:line="42" pos:column="10">*<pos:position pos:line="42" pos:column="11"/></modifier></type><name pos:line="42" pos:column="11">authorization<pos:position pos:line="42" pos:column="24"/></name></decl>;<pos:position pos:line="42" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* To prevent the user+password to get sent to other than the original
       host due to a location-follow, we do some weirdo checks here */</comment>
    <if pos:line="46" pos:column="5">if<condition pos:line="46" pos:column="7">(<expr><operator pos:line="46" pos:column="8">!<pos:position pos:line="46" pos:column="9"/></operator><name><name pos:line="46" pos:column="9">data<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">state<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">.<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">this_is_a_follow<pos:position pos:line="46" pos:column="37"/></name></name> <operator pos:line="46" pos:column="38">||<pos:position pos:line="46" pos:column="40"/></operator>
       <operator pos:line="47" pos:column="8">!<pos:position pos:line="47" pos:column="9"/></operator><name><name pos:line="47" pos:column="9">data<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">state<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">.<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">auth_host<pos:position pos:line="47" pos:column="30"/></name></name> <operator pos:line="47" pos:column="31">||<pos:position pos:line="47" pos:column="33"/></operator>
       <call><name pos:line="48" pos:column="8">strequal<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">data<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">state<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">.<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">auth_host<pos:position pos:line="48" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="40">conn<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">hostname<pos:position pos:line="48" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="56"/></condition><then pos:line="48" pos:column="56"> <block pos:line="48" pos:column="57">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">sprintf<pos:position pos:line="49" pos:column="14"/></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name><name pos:line="49" pos:column="15">data<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">state<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">.<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">buffer<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="35">"%s:%s"<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="50" pos:column="15">data<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">state<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">.<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">user<pos:position pos:line="50" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="33">data<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">state<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">.<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="45">passwd<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
      <if pos:line="51" pos:column="7">if<condition pos:line="51" pos:column="9">(<expr><call><name pos:line="51" pos:column="10">Curl_base64_encode<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name><name pos:line="51" pos:column="29">data<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">state<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">buffer<pos:position pos:line="51" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="49">strlen<pos:position pos:line="51" pos:column="55"/></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name><name pos:line="51" pos:column="56">data<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">state<pos:position pos:line="51" pos:column="67"/></name><operator pos:line="51" pos:column="67">.<pos:position pos:line="51" pos:column="68"/></operator><name pos:line="51" pos:column="68">buffer<pos:position pos:line="51" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="75"/></argument_list></call></expr></argument>,
                            <argument><expr><operator pos:line="52" pos:column="29">&amp;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="30">authorization<pos:position pos:line="52" pos:column="43"/></name></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call> <operator pos:line="52" pos:column="45">&gt;=<pos:position pos:line="52" pos:column="50"/></operator> <literal type="number" pos:line="52" pos:column="48">0<pos:position pos:line="52" pos:column="49"/></literal></expr>)<pos:position pos:line="52" pos:column="50"/></condition><then pos:line="52" pos:column="50"> <block pos:line="52" pos:column="51">{
        <if pos:line="53" pos:column="9">if<condition pos:line="53" pos:column="11">(<expr><name><name pos:line="53" pos:column="12">conn<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">allocptr<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">.<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">userpwd<pos:position pos:line="53" pos:column="34"/></name></name></expr>)<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="11">free<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name><name pos:line="54" pos:column="16">conn<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">-&gt;<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="22">allocptr<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">.<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">userpwd<pos:position pos:line="54" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">conn<pos:position pos:line="55" pos:column="13"/></name><operator pos:line="55" pos:column="13">-&gt;<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="15">allocptr<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">.<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">userpwd<pos:position pos:line="55" pos:column="31"/></name></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <call><name pos:line="55" pos:column="34">aprintf<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">( <argument><expr><literal type="string" pos:line="55" pos:column="43">"Authorization: Basic %s\015\012"<pos:position pos:line="55" pos:column="76"/></literal></expr></argument>,
                                          <argument><expr><name pos:line="56" pos:column="43">authorization<pos:position pos:line="56" pos:column="56"/></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">free<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name pos:line="57" pos:column="14">authorization<pos:position pos:line="57" pos:column="27"/></name></expr></argument>)<pos:position pos:line="57" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><operator pos:line="61" pos:column="6">(<pos:position pos:line="61" pos:column="7"/></operator><name><name pos:line="61" pos:column="7">data<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">change<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">referer<pos:position pos:line="61" pos:column="27"/></name></name><operator pos:line="61" pos:column="27">)<pos:position pos:line="61" pos:column="28"/></operator> <operator pos:line="61" pos:column="29">&amp;&amp;<pos:position pos:line="61" pos:column="39"/></operator> <operator pos:line="61" pos:column="32">!<pos:position pos:line="61" pos:column="33"/></operator><call><name pos:line="61" pos:column="33">checkheaders<pos:position pos:line="61" pos:column="45"/></name><argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">data<pos:position pos:line="61" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="52">"Referer:"<pos:position pos:line="61" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="64"/></condition><then pos:line="61" pos:column="64"> <block pos:line="61" pos:column="65">{
    <if pos:line="62" pos:column="5">if<condition pos:line="62" pos:column="7">(<expr><name><name pos:line="62" pos:column="8">conn<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">allocptr<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">.<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="23">ref<pos:position pos:line="62" pos:column="26"/></name></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="7">free<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><name><name pos:line="63" pos:column="12">conn<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">allocptr<pos:position pos:line="63" pos:column="26"/></name><operator pos:line="63" pos:column="26">.<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="27">ref<pos:position pos:line="63" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">conn<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">allocptr<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">.<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">ref<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">aprintf<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><literal type="string" pos:line="64" pos:column="34">"Referer: %s\015\012"<pos:position pos:line="64" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="57">data<pos:position pos:line="64" pos:column="61"/></name><operator pos:line="64" pos:column="61">-&gt;<pos:position pos:line="64" pos:column="66"/></operator><name pos:line="64" pos:column="63">change<pos:position pos:line="64" pos:column="69"/></name><operator pos:line="64" pos:column="69">.<pos:position pos:line="64" pos:column="70"/></operator><name pos:line="64" pos:column="70">referer<pos:position pos:line="64" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>
  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name><name pos:line="66" pos:column="6">data<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">set<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">.<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">cookie<pos:position pos:line="66" pos:column="22"/></name></name> <operator pos:line="66" pos:column="23">&amp;&amp;<pos:position pos:line="66" pos:column="33"/></operator> <operator pos:line="66" pos:column="26">!<pos:position pos:line="66" pos:column="27"/></operator><call><name pos:line="66" pos:column="27">checkheaders<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">data<pos:position pos:line="66" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="46">"Cookie:"<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="57"/></condition><then pos:line="66" pos:column="57"> <block pos:line="66" pos:column="58">{
    <if pos:line="67" pos:column="5">if<condition pos:line="67" pos:column="7">(<expr><name><name pos:line="67" pos:column="8">conn<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">-&gt;<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="14">allocptr<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">.<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">cookie<pos:position pos:line="67" pos:column="29"/></name></name></expr>)<pos:position pos:line="67" pos:column="30"/></condition><then pos:line="67" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="7">free<pos:position pos:line="68" pos:column="11"/></name><argument_list pos:line="68" pos:column="11">(<argument><expr><name><name pos:line="68" pos:column="12">conn<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">allocptr<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">.<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="27">cookie<pos:position pos:line="68" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">conn<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">allocptr<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">cookie<pos:position pos:line="69" pos:column="26"/></name></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <call><name pos:line="69" pos:column="29">aprintf<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><literal type="string" pos:line="69" pos:column="37">"Cookie: %s\015\012"<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="59">data<pos:position pos:line="69" pos:column="63"/></name><operator pos:line="69" pos:column="63">-&gt;<pos:position pos:line="69" pos:column="68"/></operator><name pos:line="69" pos:column="65">set<pos:position pos:line="69" pos:column="68"/></name><operator pos:line="69" pos:column="68">.<pos:position pos:line="69" pos:column="69"/></operator><name pos:line="69" pos:column="69">cookie<pos:position pos:line="69" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">(<expr><name><name pos:line="72" pos:column="6">data<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">cookies<pos:position pos:line="72" pos:column="19"/></name></name></expr>)<pos:position pos:line="72" pos:column="20"/></condition><then pos:line="72" pos:column="20"> <block pos:line="72" pos:column="21">{
    <expr_stmt><expr><name pos:line="73" pos:column="5">co<pos:position pos:line="73" pos:column="7"/></name> <operator pos:line="73" pos:column="8">=<pos:position pos:line="73" pos:column="9"/></operator> <call><name pos:line="73" pos:column="10">Curl_cookie_getlist<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name><name pos:line="73" pos:column="30">data<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">cookies<pos:position pos:line="73" pos:column="43"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="74" pos:column="30">host<pos:position pos:line="74" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="36">ppath<pos:position pos:line="74" pos:column="41"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="75" pos:column="30">conn<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">-&gt;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="36">protocol<pos:position pos:line="75" pos:column="44"/></name></name><operator pos:line="75" pos:column="44">&amp;<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="45">PROT_HTTPS<pos:position pos:line="75" pos:column="55"/></name></expr>?<pos:position pos:line="75" pos:column="56"/></condition><then><expr><name pos:line="75" pos:column="56">TRUE<pos:position pos:line="75" pos:column="60"/></name></expr></then><else pos:line="75" pos:column="60">:<expr><name pos:line="75" pos:column="61">FALSE<pos:position pos:line="75" pos:column="66"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>
  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><operator pos:line="77" pos:column="7">(<pos:position pos:line="77" pos:column="8"/></operator><name><name pos:line="77" pos:column="8">data<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">change<pos:position pos:line="77" pos:column="20"/></name><operator pos:line="77" pos:column="20">.<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="21">proxy<pos:position pos:line="77" pos:column="26"/></name></name><operator pos:line="77" pos:column="26">)<pos:position pos:line="77" pos:column="27"/></operator> <operator pos:line="77" pos:column="28">&amp;&amp;<pos:position pos:line="77" pos:column="38"/></operator> <operator pos:line="77" pos:column="31">!<pos:position pos:line="77" pos:column="32"/></operator><operator pos:line="77" pos:column="32">(<pos:position pos:line="77" pos:column="33"/></operator><name><name pos:line="77" pos:column="33">conn<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">-&gt;<pos:position pos:line="77" pos:column="42"/></operator><name pos:line="77" pos:column="39">protocol<pos:position pos:line="77" pos:column="47"/></name></name><operator pos:line="77" pos:column="47">&amp;<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="48">PROT_HTTPS<pos:position pos:line="77" pos:column="58"/></name><operator pos:line="77" pos:column="58">)<pos:position pos:line="77" pos:column="59"/></operator></expr>)<pos:position pos:line="77" pos:column="60"/></condition><then pos:line="77" pos:column="60">  <block pos:line="77" pos:column="62">{
    <comment type="block" pos:line="78" pos:column="5">/* The path sent to the proxy is in fact the entire URL */</comment>
    <expr_stmt><expr><name pos:line="79" pos:column="5">ppath<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">=<pos:position pos:line="79" pos:column="12"/></operator> <name><name pos:line="79" pos:column="13">data<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">change<pos:position pos:line="79" pos:column="25"/></name><operator pos:line="79" pos:column="25">.<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="26">url<pos:position pos:line="79" pos:column="29"/></name></name></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>
  <if pos:line="81" pos:column="3">if<condition pos:line="81" pos:column="5">(<expr><name pos:line="81" pos:column="6">HTTPREQ_POST_FORM<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">==<pos:position pos:line="81" pos:column="26"/></operator> <name><name pos:line="81" pos:column="27">data<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">set<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">.<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="37">httpreq<pos:position pos:line="81" pos:column="44"/></name></name></expr>)<pos:position pos:line="81" pos:column="45"/></condition><then pos:line="81" pos:column="45"> <block pos:line="81" pos:column="46">{
    <comment type="block" pos:line="82" pos:column="5">/* we must build the whole darned post sequence first, so that we have
       a size of the whole shebang before we start to send it */</comment>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">http<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">sendit<pos:position pos:line="84" pos:column="17"/></name></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <call><name pos:line="84" pos:column="20">Curl_getFormData<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name><name pos:line="84" pos:column="37">data<pos:position pos:line="84" pos:column="41"/></name><operator pos:line="84" pos:column="41">-&gt;<pos:position pos:line="84" pos:column="46"/></operator><name pos:line="84" pos:column="43">set<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">.<pos:position pos:line="84" pos:column="47"/></operator><name pos:line="84" pos:column="47">httppost<pos:position pos:line="84" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="57">&amp;<pos:position pos:line="84" pos:column="62"/></operator><name><name pos:line="84" pos:column="58">http<pos:position pos:line="84" pos:column="62"/></name><operator pos:line="84" pos:column="62">-&gt;<pos:position pos:line="84" pos:column="67"/></operator><name pos:line="84" pos:column="64">postsize<pos:position pos:line="84" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">(<expr><operator pos:line="87" pos:column="6">!<pos:position pos:line="87" pos:column="7"/></operator><call><name pos:line="87" pos:column="7">checkheaders<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">data<pos:position pos:line="87" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="26">"Host:"<pos:position pos:line="87" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="35"/></condition><then pos:line="87" pos:column="35"> <block pos:line="87" pos:column="36">{
    <comment type="block" pos:line="88" pos:column="5">/* if ptr_host is already set, it is almost OK since we only re-use
       connections to the very same host and port, but when we use a HTTP
       proxy we have a persistant connect and yet we must change the Host:
       header! */</comment>

    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><name><name pos:line="93" pos:column="8">conn<pos:position pos:line="93" pos:column="12"/></name><operator pos:line="93" pos:column="12">-&gt;<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="14">allocptr<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">.<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="23">host<pos:position pos:line="93" pos:column="27"/></name></name></expr>)<pos:position pos:line="93" pos:column="28"/></condition><then pos:line="93" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="7">free<pos:position pos:line="94" pos:column="11"/></name><argument_list pos:line="94" pos:column="11">(<argument><expr><name><name pos:line="94" pos:column="12">conn<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">allocptr<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">.<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="27">host<pos:position pos:line="94" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt></block></then></if>

    <if pos:line="96" pos:column="5">if<condition pos:line="96" pos:column="7">(<expr><operator pos:line="96" pos:column="8">(<pos:position pos:line="96" pos:column="9"/></operator><operator pos:line="96" pos:column="9">(<pos:position pos:line="96" pos:column="10"/></operator><name><name pos:line="96" pos:column="10">conn<pos:position pos:line="96" pos:column="14"/></name><operator pos:line="96" pos:column="14">-&gt;<pos:position pos:line="96" pos:column="19"/></operator><name pos:line="96" pos:column="16">protocol<pos:position pos:line="96" pos:column="24"/></name></name><operator pos:line="96" pos:column="24">&amp;<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="25">PROT_HTTPS<pos:position pos:line="96" pos:column="35"/></name><operator pos:line="96" pos:column="35">)<pos:position pos:line="96" pos:column="36"/></operator> <operator pos:line="96" pos:column="37">&amp;&amp;<pos:position pos:line="96" pos:column="47"/></operator> <operator pos:line="96" pos:column="40">(<pos:position pos:line="96" pos:column="41"/></operator><name><name pos:line="96" pos:column="41">conn<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">-&gt;<pos:position pos:line="96" pos:column="50"/></operator><name pos:line="96" pos:column="47">remote_port<pos:position pos:line="96" pos:column="58"/></name></name> <operator pos:line="96" pos:column="59">==<pos:position pos:line="96" pos:column="61"/></operator> <name pos:line="96" pos:column="62">PORT_HTTPS<pos:position pos:line="96" pos:column="72"/></name><operator pos:line="96" pos:column="72">)<pos:position pos:line="96" pos:column="73"/></operator><operator pos:line="96" pos:column="73">)<pos:position pos:line="96" pos:column="74"/></operator> <operator pos:line="96" pos:column="75">||<pos:position pos:line="96" pos:column="77"/></operator>
       <operator pos:line="97" pos:column="8">(<pos:position pos:line="97" pos:column="9"/></operator><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><operator pos:line="97" pos:column="10">(<pos:position pos:line="97" pos:column="11"/></operator><name><name pos:line="97" pos:column="11">conn<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">protocol<pos:position pos:line="97" pos:column="25"/></name></name><operator pos:line="97" pos:column="25">&amp;<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="26">PROT_HTTPS<pos:position pos:line="97" pos:column="36"/></name><operator pos:line="97" pos:column="36">)<pos:position pos:line="97" pos:column="37"/></operator> <operator pos:line="97" pos:column="38">&amp;&amp;<pos:position pos:line="97" pos:column="48"/></operator> <operator pos:line="97" pos:column="41">(<pos:position pos:line="97" pos:column="42"/></operator><name><name pos:line="97" pos:column="42">conn<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">-&gt;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="48">remote_port<pos:position pos:line="97" pos:column="59"/></name></name> <operator pos:line="97" pos:column="60">==<pos:position pos:line="97" pos:column="62"/></operator> <name pos:line="97" pos:column="63">PORT_HTTP<pos:position pos:line="97" pos:column="72"/></name><operator pos:line="97" pos:column="72">)<pos:position pos:line="97" pos:column="73"/></operator><operator pos:line="97" pos:column="73">)<pos:position pos:line="97" pos:column="74"/></operator></expr> )<pos:position pos:line="97" pos:column="76"/></condition><then pos:line="97" pos:column="76">
      <comment type="block" pos:line="98" pos:column="7">/* If (HTTPS on port 443) OR (non-HTTPS on port 80) then don't include
         the port number in the host string */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="100" pos:column="7">conn<pos:position pos:line="100" pos:column="11"/></name><operator pos:line="100" pos:column="11">-&gt;<pos:position pos:line="100" pos:column="16"/></operator><name pos:line="100" pos:column="13">allocptr<pos:position pos:line="100" pos:column="21"/></name><operator pos:line="100" pos:column="21">.<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">host<pos:position pos:line="100" pos:column="26"/></name></name> <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <call><name pos:line="100" pos:column="29">aprintf<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><literal type="string" pos:line="100" pos:column="37">"Host: %s\r\n"<pos:position pos:line="100" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="53">host<pos:position pos:line="100" pos:column="57"/></name></expr></argument>)<pos:position pos:line="100" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="59"/></expr_stmt></block></then>
    <else pos:line="101" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="7">conn<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">allocptr<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">.<pos:position pos:line="102" pos:column="22"/></operator><name pos:line="102" pos:column="22">host<pos:position pos:line="102" pos:column="26"/></name></name> <operator pos:line="102" pos:column="27">=<pos:position pos:line="102" pos:column="28"/></operator> <call><name pos:line="102" pos:column="29">aprintf<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><literal type="string" pos:line="102" pos:column="37">"Host: %s:%d\r\n"<pos:position pos:line="102" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="56">host<pos:position pos:line="102" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="103" pos:column="37">conn<pos:position pos:line="103" pos:column="41"/></name><operator pos:line="103" pos:column="41">-&gt;<pos:position pos:line="103" pos:column="46"/></operator><name pos:line="103" pos:column="43">remote_port<pos:position pos:line="103" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="56"/></expr_stmt></block></else></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>

  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><operator pos:line="106" pos:column="6">!<pos:position pos:line="106" pos:column="7"/></operator><call><name pos:line="106" pos:column="7">checkheaders<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">data<pos:position pos:line="106" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="26">"Pragma:"<pos:position pos:line="106" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="37"/></condition><then pos:line="106" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="107" pos:column="5">http<pos:position pos:line="107" pos:column="9"/></name><operator pos:line="107" pos:column="9">-&gt;<pos:position pos:line="107" pos:column="14"/></operator><name pos:line="107" pos:column="11">p_pragma<pos:position pos:line="107" pos:column="19"/></name></name> <operator pos:line="107" pos:column="20">=<pos:position pos:line="107" pos:column="21"/></operator> <literal type="string" pos:line="107" pos:column="22">"Pragma: no-cache\r\n"<pos:position pos:line="107" pos:column="44"/></literal></expr>;<pos:position pos:line="107" pos:column="45"/></expr_stmt></block></then></if>

  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><operator pos:line="109" pos:column="6">!<pos:position pos:line="109" pos:column="7"/></operator><call><name pos:line="109" pos:column="7">checkheaders<pos:position pos:line="109" pos:column="19"/></name><argument_list pos:line="109" pos:column="19">(<argument><expr><name pos:line="109" pos:column="20">data<pos:position pos:line="109" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="26">"Accept:"<pos:position pos:line="109" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="37"/></condition><then pos:line="109" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="110" pos:column="5">http<pos:position pos:line="110" pos:column="9"/></name><operator pos:line="110" pos:column="9">-&gt;<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="11">p_accept<pos:position pos:line="110" pos:column="19"/></name></name> <operator pos:line="110" pos:column="20">=<pos:position pos:line="110" pos:column="21"/></operator> <literal type="string" pos:line="110" pos:column="22">"Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\r\n"<pos:position pos:line="110" pos:column="92"/></literal></expr>;<pos:position pos:line="110" pos:column="93"/></expr_stmt></block></then></if>

  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><operator pos:line="112" pos:column="6">(<pos:position pos:line="112" pos:column="7"/></operator> <operator pos:line="112" pos:column="8">(<pos:position pos:line="112" pos:column="9"/></operator><name pos:line="112" pos:column="9">HTTPREQ_POST<pos:position pos:line="112" pos:column="21"/></name> <operator pos:line="112" pos:column="22">==<pos:position pos:line="112" pos:column="24"/></operator> <name><name pos:line="112" pos:column="25">data<pos:position pos:line="112" pos:column="29"/></name><operator pos:line="112" pos:column="29">-&gt;<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="31">set<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">.<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="35">httpreq<pos:position pos:line="112" pos:column="42"/></name></name><operator pos:line="112" pos:column="42">)<pos:position pos:line="112" pos:column="43"/></operator> <operator pos:line="112" pos:column="44">||<pos:position pos:line="112" pos:column="46"/></operator>
       <operator pos:line="113" pos:column="8">(<pos:position pos:line="113" pos:column="9"/></operator><name pos:line="113" pos:column="9">HTTPREQ_POST_FORM<pos:position pos:line="113" pos:column="26"/></name> <operator pos:line="113" pos:column="27">==<pos:position pos:line="113" pos:column="29"/></operator> <name><name pos:line="113" pos:column="30">data<pos:position pos:line="113" pos:column="34"/></name><operator pos:line="113" pos:column="34">-&gt;<pos:position pos:line="113" pos:column="39"/></operator><name pos:line="113" pos:column="36">set<pos:position pos:line="113" pos:column="39"/></name><operator pos:line="113" pos:column="39">.<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="40">httpreq<pos:position pos:line="113" pos:column="47"/></name></name><operator pos:line="113" pos:column="47">)<pos:position pos:line="113" pos:column="48"/></operator> <operator pos:line="113" pos:column="49">||<pos:position pos:line="113" pos:column="51"/></operator>
       <operator pos:line="114" pos:column="8">(<pos:position pos:line="114" pos:column="9"/></operator><name pos:line="114" pos:column="9">HTTPREQ_PUT<pos:position pos:line="114" pos:column="20"/></name> <operator pos:line="114" pos:column="21">==<pos:position pos:line="114" pos:column="23"/></operator> <name><name pos:line="114" pos:column="24">data<pos:position pos:line="114" pos:column="28"/></name><operator pos:line="114" pos:column="28">-&gt;<pos:position pos:line="114" pos:column="33"/></operator><name pos:line="114" pos:column="30">set<pos:position pos:line="114" pos:column="33"/></name><operator pos:line="114" pos:column="33">.<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="34">httpreq<pos:position pos:line="114" pos:column="41"/></name></name><operator pos:line="114" pos:column="41">)<pos:position pos:line="114" pos:column="42"/></operator> <operator pos:line="114" pos:column="43">)<pos:position pos:line="114" pos:column="44"/></operator> <operator pos:line="114" pos:column="45">&amp;&amp;<pos:position pos:line="114" pos:column="55"/></operator>
     <name><name pos:line="115" pos:column="6">conn<pos:position pos:line="115" pos:column="10"/></name><operator pos:line="115" pos:column="10">-&gt;<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="12">resume_from<pos:position pos:line="115" pos:column="23"/></name></name></expr>)<pos:position pos:line="115" pos:column="24"/></condition><then pos:line="115" pos:column="24"> <block pos:line="115" pos:column="25">{
    <comment type="block" format="doxygen" pos:line="116" pos:column="5">/**********************************************************************
     * Resuming upload in HTTP means that we PUT or POST and that we have
     * got a resume_from value set. The resume value has already created
     * a Range: header that will be passed along. We need to "fast forward"
     * the file the given number of bytes and decrease the assume upload
     * file size before we continue this venture in the dark lands of HTTP.
     *********************************************************************/</comment>
   
    <if pos:line="124" pos:column="5">if<condition pos:line="124" pos:column="7">(<expr><name><name pos:line="124" pos:column="8">conn<pos:position pos:line="124" pos:column="12"/></name><operator pos:line="124" pos:column="12">-&gt;<pos:position pos:line="124" pos:column="17"/></operator><name pos:line="124" pos:column="14">resume_from<pos:position pos:line="124" pos:column="25"/></name></name> <operator pos:line="124" pos:column="26">&lt;<pos:position pos:line="124" pos:column="30"/></operator> <literal type="number" pos:line="124" pos:column="28">0<pos:position pos:line="124" pos:column="29"/></literal></expr> )<pos:position pos:line="124" pos:column="31"/></condition><then pos:line="124" pos:column="31"> <block pos:line="124" pos:column="32">{
      <comment type="block" pos:line="125" pos:column="7">/*
       * This is meant to get the size of the present remote-file by itself.
       * We don't support this now. Bail out!
       */</comment>
       <expr_stmt><expr><name><name pos:line="129" pos:column="8">conn<pos:position pos:line="129" pos:column="12"/></name><operator pos:line="129" pos:column="12">-&gt;<pos:position pos:line="129" pos:column="17"/></operator><name pos:line="129" pos:column="14">resume_from<pos:position pos:line="129" pos:column="25"/></name></name> <operator pos:line="129" pos:column="26">=<pos:position pos:line="129" pos:column="27"/></operator> <literal type="number" pos:line="129" pos:column="28">0<pos:position pos:line="129" pos:column="29"/></literal></expr>;<pos:position pos:line="129" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>

    <if pos:line="132" pos:column="5">if<condition pos:line="132" pos:column="7">(<expr><name><name pos:line="132" pos:column="8">conn<pos:position pos:line="132" pos:column="12"/></name><operator pos:line="132" pos:column="12">-&gt;<pos:position pos:line="132" pos:column="17"/></operator><name pos:line="132" pos:column="14">resume_from<pos:position pos:line="132" pos:column="25"/></name></name></expr>)<pos:position pos:line="132" pos:column="26"/></condition><then pos:line="132" pos:column="26"> <block pos:line="132" pos:column="27">{
      <comment type="block" pos:line="133" pos:column="7">/* do we still game? */</comment>
      <decl_stmt><decl><type><name pos:line="134" pos:column="7">int<pos:position pos:line="134" pos:column="10"/></name></type> <name pos:line="134" pos:column="11">passed<pos:position pos:line="134" pos:column="17"/></name><init pos:line="134" pos:column="17">=<expr><literal type="number" pos:line="134" pos:column="18">0<pos:position pos:line="134" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="134" pos:column="20"/></decl_stmt>

      <comment type="block" pos:line="136" pos:column="7">/* Now, let's read off the proper amount of bytes from the
         input. If we knew it was a proper file we could've just
         fseek()ed but we only have a stream here */</comment>
      <do pos:line="139" pos:column="7">do <block pos:line="139" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="140" pos:column="9">int<pos:position pos:line="140" pos:column="12"/></name></type> <name pos:line="140" pos:column="13">readthisamountnow<pos:position pos:line="140" pos:column="30"/></name> <init pos:line="140" pos:column="31">= <expr><operator pos:line="140" pos:column="33">(<pos:position pos:line="140" pos:column="34"/></operator><name><name pos:line="140" pos:column="34">conn<pos:position pos:line="140" pos:column="38"/></name><operator pos:line="140" pos:column="38">-&gt;<pos:position pos:line="140" pos:column="43"/></operator><name pos:line="140" pos:column="40">resume_from<pos:position pos:line="140" pos:column="51"/></name></name> <operator pos:line="140" pos:column="52">-<pos:position pos:line="140" pos:column="53"/></operator> <name pos:line="140" pos:column="54">passed<pos:position pos:line="140" pos:column="60"/></name><operator pos:line="140" pos:column="60">)<pos:position pos:line="140" pos:column="61"/></operator></expr></init></decl>;<pos:position pos:line="140" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="141" pos:column="9">int<pos:position pos:line="141" pos:column="12"/></name></type> <name pos:line="141" pos:column="13">actuallyread<pos:position pos:line="141" pos:column="25"/></name></decl>;<pos:position pos:line="141" pos:column="26"/></decl_stmt>

        <if pos:line="143" pos:column="9">if<condition pos:line="143" pos:column="11">(<expr><name pos:line="143" pos:column="12">readthisamountnow<pos:position pos:line="143" pos:column="29"/></name> <operator pos:line="143" pos:column="30">&gt;<pos:position pos:line="143" pos:column="34"/></operator> <name pos:line="143" pos:column="32">BUFSIZE<pos:position pos:line="143" pos:column="39"/></name></expr>)<pos:position pos:line="143" pos:column="40"/></condition><then pos:line="143" pos:column="40">
          <block type="pseudo"><expr_stmt><expr><name pos:line="144" pos:column="11">readthisamountnow<pos:position pos:line="144" pos:column="28"/></name> <operator pos:line="144" pos:column="29">=<pos:position pos:line="144" pos:column="30"/></operator> <name pos:line="144" pos:column="31">BUFSIZE<pos:position pos:line="144" pos:column="38"/></name></expr>;<pos:position pos:line="144" pos:column="39"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="146" pos:column="9">actuallyread<pos:position pos:line="146" pos:column="21"/></name> <operator pos:line="146" pos:column="22">=<pos:position pos:line="146" pos:column="23"/></operator>
          <call><name><name pos:line="147" pos:column="11">data<pos:position pos:line="147" pos:column="15"/></name><operator pos:line="147" pos:column="15">-&gt;<pos:position pos:line="147" pos:column="20"/></operator><name pos:line="147" pos:column="17">set<pos:position pos:line="147" pos:column="20"/></name><operator pos:line="147" pos:column="20">.<pos:position pos:line="147" pos:column="21"/></operator><name pos:line="147" pos:column="21">fread<pos:position pos:line="147" pos:column="26"/></name></name><argument_list pos:line="147" pos:column="26">(<argument><expr><name><name pos:line="147" pos:column="27">data<pos:position pos:line="147" pos:column="31"/></name><operator pos:line="147" pos:column="31">-&gt;<pos:position pos:line="147" pos:column="36"/></operator><name pos:line="147" pos:column="33">state<pos:position pos:line="147" pos:column="38"/></name><operator pos:line="147" pos:column="38">.<pos:position pos:line="147" pos:column="39"/></operator><name pos:line="147" pos:column="39">buffer<pos:position pos:line="147" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="47">1<pos:position pos:line="147" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="50">readthisamountnow<pos:position pos:line="147" pos:column="67"/></name></expr></argument>,
                          <argument><expr><name><name pos:line="148" pos:column="27">data<pos:position pos:line="148" pos:column="31"/></name><operator pos:line="148" pos:column="31">-&gt;<pos:position pos:line="148" pos:column="36"/></operator><name pos:line="148" pos:column="33">set<pos:position pos:line="148" pos:column="36"/></name><operator pos:line="148" pos:column="36">.<pos:position pos:line="148" pos:column="37"/></operator><name pos:line="148" pos:column="37">in<pos:position pos:line="148" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name pos:line="150" pos:column="9">passed<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">+=<pos:position pos:line="150" pos:column="18"/></operator> <name pos:line="150" pos:column="19">actuallyread<pos:position pos:line="150" pos:column="31"/></name></expr>;<pos:position pos:line="150" pos:column="32"/></expr_stmt>
        <if pos:line="151" pos:column="9">if<condition pos:line="151" pos:column="11">(<expr><name pos:line="151" pos:column="12">actuallyread<pos:position pos:line="151" pos:column="24"/></name> <operator pos:line="151" pos:column="25">!=<pos:position pos:line="151" pos:column="27"/></operator> <name pos:line="151" pos:column="28">readthisamountnow<pos:position pos:line="151" pos:column="45"/></name></expr>)<pos:position pos:line="151" pos:column="46"/></condition><then pos:line="151" pos:column="46"> <block pos:line="151" pos:column="47">{
          <expr_stmt><expr><call><name pos:line="152" pos:column="11">failf<pos:position pos:line="152" pos:column="16"/></name><argument_list pos:line="152" pos:column="16">(<argument><expr><name pos:line="152" pos:column="17">data<pos:position pos:line="152" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="23">"Could only read %d bytes from the input\n"<pos:position pos:line="152" pos:column="66"/></literal></expr></argument>,
                <argument><expr><name pos:line="153" pos:column="17">passed<pos:position pos:line="153" pos:column="23"/></name></expr></argument>)<pos:position pos:line="153" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="25"/></expr_stmt>
          <return pos:line="154" pos:column="11">return <expr><name pos:line="154" pos:column="18">CURLE_READ_ERROR<pos:position pos:line="154" pos:column="34"/></name></expr>;<pos:position pos:line="154" pos:column="35"/></return>
        }<pos:position pos:line="155" pos:column="10"/></block></then></if>
      }<pos:position pos:line="156" pos:column="8"/></block> while<condition pos:line="156" pos:column="14">(<expr><name pos:line="156" pos:column="15">passed<pos:position pos:line="156" pos:column="21"/></name> <operator pos:line="156" pos:column="22">!=<pos:position pos:line="156" pos:column="24"/></operator> <name><name pos:line="156" pos:column="25">conn<pos:position pos:line="156" pos:column="29"/></name><operator pos:line="156" pos:column="29">-&gt;<pos:position pos:line="156" pos:column="34"/></operator><name pos:line="156" pos:column="31">resume_from<pos:position pos:line="156" pos:column="42"/></name></name></expr>)<pos:position pos:line="156" pos:column="43"/></condition>;<pos:position pos:line="156" pos:column="44"/></do> <comment type="block" pos:line="156" pos:column="45">/* loop until done */</comment>

      <comment type="block" pos:line="158" pos:column="7">/* now, decrease the size of the read */</comment>
      <if pos:line="159" pos:column="7">if<condition pos:line="159" pos:column="9">(<expr><name><name pos:line="159" pos:column="10">data<pos:position pos:line="159" pos:column="14"/></name><operator pos:line="159" pos:column="14">-&gt;<pos:position pos:line="159" pos:column="19"/></operator><name pos:line="159" pos:column="16">set<pos:position pos:line="159" pos:column="19"/></name><operator pos:line="159" pos:column="19">.<pos:position pos:line="159" pos:column="20"/></operator><name pos:line="159" pos:column="20">infilesize<pos:position pos:line="159" pos:column="30"/></name></name><operator pos:line="159" pos:column="30">&gt;<pos:position pos:line="159" pos:column="34"/></operator><literal type="number" pos:line="159" pos:column="31">0<pos:position pos:line="159" pos:column="32"/></literal></expr>)<pos:position pos:line="159" pos:column="33"/></condition><then pos:line="159" pos:column="33"> <block pos:line="159" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="160" pos:column="9">data<pos:position pos:line="160" pos:column="13"/></name><operator pos:line="160" pos:column="13">-&gt;<pos:position pos:line="160" pos:column="18"/></operator><name pos:line="160" pos:column="15">set<pos:position pos:line="160" pos:column="18"/></name><operator pos:line="160" pos:column="18">.<pos:position pos:line="160" pos:column="19"/></operator><name pos:line="160" pos:column="19">infilesize<pos:position pos:line="160" pos:column="29"/></name></name> <operator pos:line="160" pos:column="30">-=<pos:position pos:line="160" pos:column="32"/></operator> <name><name pos:line="160" pos:column="33">conn<pos:position pos:line="160" pos:column="37"/></name><operator pos:line="160" pos:column="37">-&gt;<pos:position pos:line="160" pos:column="42"/></operator><name pos:line="160" pos:column="39">resume_from<pos:position pos:line="160" pos:column="50"/></name></name></expr>;<pos:position pos:line="160" pos:column="51"/></expr_stmt>

        <if pos:line="162" pos:column="9">if<condition pos:line="162" pos:column="11">(<expr><name><name pos:line="162" pos:column="12">data<pos:position pos:line="162" pos:column="16"/></name><operator pos:line="162" pos:column="16">-&gt;<pos:position pos:line="162" pos:column="21"/></operator><name pos:line="162" pos:column="18">set<pos:position pos:line="162" pos:column="21"/></name><operator pos:line="162" pos:column="21">.<pos:position pos:line="162" pos:column="22"/></operator><name pos:line="162" pos:column="22">infilesize<pos:position pos:line="162" pos:column="32"/></name></name> <operator pos:line="162" pos:column="33">&lt;=<pos:position pos:line="162" pos:column="38"/></operator> <literal type="number" pos:line="162" pos:column="36">0<pos:position pos:line="162" pos:column="37"/></literal></expr>)<pos:position pos:line="162" pos:column="38"/></condition><then pos:line="162" pos:column="38"> <block pos:line="162" pos:column="39">{
          <expr_stmt><expr><call><name pos:line="163" pos:column="11">failf<pos:position pos:line="163" pos:column="16"/></name><argument_list pos:line="163" pos:column="16">(<argument><expr><name pos:line="163" pos:column="17">data<pos:position pos:line="163" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="23">"File already completely uploaded\n"<pos:position pos:line="163" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="61"/></expr_stmt>
          <return pos:line="164" pos:column="11">return <expr><name pos:line="164" pos:column="18">CURLE_PARTIAL_FILE<pos:position pos:line="164" pos:column="36"/></name></expr>;<pos:position pos:line="164" pos:column="37"/></return>
        }<pos:position pos:line="165" pos:column="10"/></block></then></if>
      }<pos:position pos:line="166" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="167" pos:column="7">/* we've passed, proceed as normal */</comment>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>
  }<pos:position pos:line="169" pos:column="4"/></block></then></if>
  <if pos:line="170" pos:column="3">if<condition pos:line="170" pos:column="5">(<expr><name><name pos:line="170" pos:column="6">conn<pos:position pos:line="170" pos:column="10"/></name><operator pos:line="170" pos:column="10">-&gt;<pos:position pos:line="170" pos:column="15"/></operator><name pos:line="170" pos:column="12">bits<pos:position pos:line="170" pos:column="16"/></name><operator pos:line="170" pos:column="16">.<pos:position pos:line="170" pos:column="17"/></operator><name pos:line="170" pos:column="17">use_range<pos:position pos:line="170" pos:column="26"/></name></name></expr>)<pos:position pos:line="170" pos:column="27"/></condition><then pos:line="170" pos:column="27"> <block pos:line="170" pos:column="28">{
    <comment type="block" pos:line="171" pos:column="5">/*
     * A range is selected. We use different headers whether we're downloading
     * or uploading and we always let customized headers override our internal
     * ones if any such are specified.
     */</comment>
    <if pos:line="176" pos:column="5">if<condition pos:line="176" pos:column="7">(<expr><operator pos:line="176" pos:column="8">(<pos:position pos:line="176" pos:column="9"/></operator><name><name pos:line="176" pos:column="9">data<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">-&gt;<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="15">set<pos:position pos:line="176" pos:column="18"/></name><operator pos:line="176" pos:column="18">.<pos:position pos:line="176" pos:column="19"/></operator><name pos:line="176" pos:column="19">httpreq<pos:position pos:line="176" pos:column="26"/></name></name> <operator pos:line="176" pos:column="27">==<pos:position pos:line="176" pos:column="29"/></operator> <name pos:line="176" pos:column="30">HTTPREQ_GET<pos:position pos:line="176" pos:column="41"/></name><operator pos:line="176" pos:column="41">)<pos:position pos:line="176" pos:column="42"/></operator> <operator pos:line="176" pos:column="43">&amp;&amp;<pos:position pos:line="176" pos:column="53"/></operator>
       <operator pos:line="177" pos:column="8">!<pos:position pos:line="177" pos:column="9"/></operator><call><name pos:line="177" pos:column="9">checkheaders<pos:position pos:line="177" pos:column="21"/></name><argument_list pos:line="177" pos:column="21">(<argument><expr><name pos:line="177" pos:column="22">data<pos:position pos:line="177" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="28">"Range:"<pos:position pos:line="177" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="38"/></condition><then pos:line="177" pos:column="38"> <block pos:line="177" pos:column="39">{
      <expr_stmt><expr><name><name pos:line="178" pos:column="7">conn<pos:position pos:line="178" pos:column="11"/></name><operator pos:line="178" pos:column="11">-&gt;<pos:position pos:line="178" pos:column="16"/></operator><name pos:line="178" pos:column="13">allocptr<pos:position pos:line="178" pos:column="21"/></name><operator pos:line="178" pos:column="21">.<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="22">rangeline<pos:position pos:line="178" pos:column="31"/></name></name> <operator pos:line="178" pos:column="32">=<pos:position pos:line="178" pos:column="33"/></operator> <call><name pos:line="178" pos:column="34">aprintf<pos:position pos:line="178" pos:column="41"/></name><argument_list pos:line="178" pos:column="41">(<argument><expr><literal type="string" pos:line="178" pos:column="42">"Range: bytes=%s\r\n"<pos:position pos:line="178" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="65">conn<pos:position pos:line="178" pos:column="69"/></name><operator pos:line="178" pos:column="69">-&gt;<pos:position pos:line="178" pos:column="74"/></operator><name pos:line="178" pos:column="71">range<pos:position pos:line="178" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="179" pos:column="6"/></block></then>
    <elseif pos:line="180" pos:column="5">else <if pos:line="180" pos:column="10">if<condition pos:line="180" pos:column="12">(<expr><operator pos:line="180" pos:column="13">(<pos:position pos:line="180" pos:column="14"/></operator><name><name pos:line="180" pos:column="14">data<pos:position pos:line="180" pos:column="18"/></name><operator pos:line="180" pos:column="18">-&gt;<pos:position pos:line="180" pos:column="23"/></operator><name pos:line="180" pos:column="20">set<pos:position pos:line="180" pos:column="23"/></name><operator pos:line="180" pos:column="23">.<pos:position pos:line="180" pos:column="24"/></operator><name pos:line="180" pos:column="24">httpreq<pos:position pos:line="180" pos:column="31"/></name></name> <operator pos:line="180" pos:column="32">!=<pos:position pos:line="180" pos:column="34"/></operator> <name pos:line="180" pos:column="35">HTTPREQ_GET<pos:position pos:line="180" pos:column="46"/></name><operator pos:line="180" pos:column="46">)<pos:position pos:line="180" pos:column="47"/></operator> <operator pos:line="180" pos:column="48">&amp;&amp;<pos:position pos:line="180" pos:column="58"/></operator>
            <operator pos:line="181" pos:column="13">!<pos:position pos:line="181" pos:column="14"/></operator><call><name pos:line="181" pos:column="14">checkheaders<pos:position pos:line="181" pos:column="26"/></name><argument_list pos:line="181" pos:column="26">(<argument><expr><name pos:line="181" pos:column="27">data<pos:position pos:line="181" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="33">"Content-Range:"<pos:position pos:line="181" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="51"/></condition><then pos:line="181" pos:column="51"> <block pos:line="181" pos:column="52">{

      <if pos:line="183" pos:column="7">if<condition pos:line="183" pos:column="9">(<expr><name><name pos:line="183" pos:column="10">conn<pos:position pos:line="183" pos:column="14"/></name><operator pos:line="183" pos:column="14">-&gt;<pos:position pos:line="183" pos:column="19"/></operator><name pos:line="183" pos:column="16">resume_from<pos:position pos:line="183" pos:column="27"/></name></name></expr>)<pos:position pos:line="183" pos:column="28"/></condition><then pos:line="183" pos:column="28"> <block pos:line="183" pos:column="29">{
        <comment type="block" pos:line="184" pos:column="9">/* This is because "resume" was selected */</comment>
        <decl_stmt><decl><type><name pos:line="185" pos:column="9">long<pos:position pos:line="185" pos:column="13"/></name></type> <name pos:line="185" pos:column="14">total_expected_size<pos:position pos:line="185" pos:column="33"/></name><init pos:line="185" pos:column="33">= <expr><name><name pos:line="185" pos:column="35">conn<pos:position pos:line="185" pos:column="39"/></name><operator pos:line="185" pos:column="39">-&gt;<pos:position pos:line="185" pos:column="44"/></operator><name pos:line="185" pos:column="41">resume_from<pos:position pos:line="185" pos:column="52"/></name></name> <operator pos:line="185" pos:column="53">+<pos:position pos:line="185" pos:column="54"/></operator> <name><name pos:line="185" pos:column="55">data<pos:position pos:line="185" pos:column="59"/></name><operator pos:line="185" pos:column="59">-&gt;<pos:position pos:line="185" pos:column="64"/></operator><name pos:line="185" pos:column="61">set<pos:position pos:line="185" pos:column="64"/></name><operator pos:line="185" pos:column="64">.<pos:position pos:line="185" pos:column="65"/></operator><name pos:line="185" pos:column="65">infilesize<pos:position pos:line="185" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="185" pos:column="76"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="186" pos:column="9">conn<pos:position pos:line="186" pos:column="13"/></name><operator pos:line="186" pos:column="13">-&gt;<pos:position pos:line="186" pos:column="18"/></operator><name pos:line="186" pos:column="15">allocptr<pos:position pos:line="186" pos:column="23"/></name><operator pos:line="186" pos:column="23">.<pos:position pos:line="186" pos:column="24"/></operator><name pos:line="186" pos:column="24">rangeline<pos:position pos:line="186" pos:column="33"/></name></name> <operator pos:line="186" pos:column="34">=<pos:position pos:line="186" pos:column="35"/></operator> <call><name pos:line="186" pos:column="36">aprintf<pos:position pos:line="186" pos:column="43"/></name><argument_list pos:line="186" pos:column="43">(<argument><expr><literal type="string" pos:line="186" pos:column="44">"Content-Range: bytes %s%ld/%ld\r\n"<pos:position pos:line="186" pos:column="80"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="187" pos:column="39">conn<pos:position pos:line="187" pos:column="43"/></name><operator pos:line="187" pos:column="43">-&gt;<pos:position pos:line="187" pos:column="48"/></operator><name pos:line="187" pos:column="45">range<pos:position pos:line="187" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="52">total_expected_size<pos:position pos:line="187" pos:column="71"/></name><operator pos:line="187" pos:column="71">-<pos:position pos:line="187" pos:column="72"/></operator><literal type="number" pos:line="187" pos:column="72">1<pos:position pos:line="187" pos:column="73"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="188" pos:column="39">total_expected_size<pos:position pos:line="188" pos:column="58"/></name></expr></argument>)<pos:position pos:line="188" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="189" pos:column="8"/></block></then>
      <else pos:line="190" pos:column="7">else <block pos:line="190" pos:column="12">{
        <comment type="block" pos:line="191" pos:column="9">/* Range was selected and then we just pass the incoming range and 
           append total size */</comment>
        <expr_stmt><expr><name><name pos:line="193" pos:column="9">conn<pos:position pos:line="193" pos:column="13"/></name><operator pos:line="193" pos:column="13">-&gt;<pos:position pos:line="193" pos:column="18"/></operator><name pos:line="193" pos:column="15">allocptr<pos:position pos:line="193" pos:column="23"/></name><operator pos:line="193" pos:column="23">.<pos:position pos:line="193" pos:column="24"/></operator><name pos:line="193" pos:column="24">rangeline<pos:position pos:line="193" pos:column="33"/></name></name> <operator pos:line="193" pos:column="34">=<pos:position pos:line="193" pos:column="35"/></operator> <call><name pos:line="193" pos:column="36">aprintf<pos:position pos:line="193" pos:column="43"/></name><argument_list pos:line="193" pos:column="43">(<argument><expr><literal type="string" pos:line="193" pos:column="44">"Content-Range: bytes %s/%d\r\n"<pos:position pos:line="193" pos:column="76"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="194" pos:column="39">conn<pos:position pos:line="194" pos:column="43"/></name><operator pos:line="194" pos:column="43">-&gt;<pos:position pos:line="194" pos:column="48"/></operator><name pos:line="194" pos:column="45">range<pos:position pos:line="194" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="52">data<pos:position pos:line="194" pos:column="56"/></name><operator pos:line="194" pos:column="56">-&gt;<pos:position pos:line="194" pos:column="61"/></operator><name pos:line="194" pos:column="58">set<pos:position pos:line="194" pos:column="61"/></name><operator pos:line="194" pos:column="61">.<pos:position pos:line="194" pos:column="62"/></operator><name pos:line="194" pos:column="62">infilesize<pos:position pos:line="194" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="195" pos:column="8"/></block></else></if>
    }<pos:position pos:line="196" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="197" pos:column="4"/></block></then></if>

  <do pos:line="199" pos:column="3">do <block pos:line="199" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="200" pos:column="5">send_buffer<pos:position pos:line="200" pos:column="16"/></name> <modifier pos:line="200" pos:column="17">*<pos:position pos:line="200" pos:column="18"/></modifier></type><name pos:line="200" pos:column="18">req_buffer<pos:position pos:line="200" pos:column="28"/></name></decl>;<pos:position pos:line="200" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="201" pos:column="5">struct<pos:position pos:line="201" pos:column="11"/></name> <name pos:line="201" pos:column="12">curl_slist<pos:position pos:line="201" pos:column="22"/></name></name> <modifier pos:line="201" pos:column="23">*<pos:position pos:line="201" pos:column="24"/></modifier></type><name pos:line="201" pos:column="24">headers<pos:position pos:line="201" pos:column="31"/></name><init pos:line="201" pos:column="31">=<expr><name><name pos:line="201" pos:column="32">data<pos:position pos:line="201" pos:column="36"/></name><operator pos:line="201" pos:column="36">-&gt;<pos:position pos:line="201" pos:column="41"/></operator><name pos:line="201" pos:column="38">set<pos:position pos:line="201" pos:column="41"/></name><operator pos:line="201" pos:column="41">.<pos:position pos:line="201" pos:column="42"/></operator><name pos:line="201" pos:column="42">headers<pos:position pos:line="201" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="201" pos:column="50"/></decl_stmt>

    <comment type="block" pos:line="203" pos:column="5">/* initialize a dynamic send-buffer */</comment>
    <expr_stmt><expr><name pos:line="204" pos:column="5">req_buffer<pos:position pos:line="204" pos:column="15"/></name> <operator pos:line="204" pos:column="16">=<pos:position pos:line="204" pos:column="17"/></operator> <call><name pos:line="204" pos:column="18">add_buffer_init<pos:position pos:line="204" pos:column="33"/></name><argument_list pos:line="204" pos:column="33">()<pos:position pos:line="204" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="206" pos:column="5">/* add the main request stuff */</comment>
    <expr_stmt><expr><call><name pos:line="207" pos:column="5">add_bufferf<pos:position pos:line="207" pos:column="16"/></name><argument_list pos:line="207" pos:column="16">(<argument><expr><name pos:line="207" pos:column="17">req_buffer<pos:position pos:line="207" pos:column="27"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="208" pos:column="17">"%s "<pos:position pos:line="208" pos:column="22"/></literal> <comment type="block" pos:line="208" pos:column="23">/* GET/HEAD/POST/PUT */</comment>
                <literal type="string" pos:line="209" pos:column="17">"%s HTTP/1.1\r\n"<pos:position pos:line="209" pos:column="34"/></literal> <comment type="block" pos:line="209" pos:column="35">/* path */</comment>
                <literal type="string" pos:line="210" pos:column="17">"%s"<pos:position pos:line="210" pos:column="21"/></literal> <comment type="block" pos:line="210" pos:column="22">/* proxyuserpwd */</comment>
                <literal type="string" pos:line="211" pos:column="17">"%s"<pos:position pos:line="211" pos:column="21"/></literal> <comment type="block" pos:line="211" pos:column="22">/* userpwd */</comment>
                <literal type="string" pos:line="212" pos:column="17">"%s"<pos:position pos:line="212" pos:column="21"/></literal> <comment type="block" pos:line="212" pos:column="22">/* range */</comment>
                <literal type="string" pos:line="213" pos:column="17">"%s"<pos:position pos:line="213" pos:column="21"/></literal> <comment type="block" pos:line="213" pos:column="22">/* user agent */</comment>
                <literal type="string" pos:line="214" pos:column="17">"%s"<pos:position pos:line="214" pos:column="21"/></literal> <comment type="block" pos:line="214" pos:column="22">/* cookie */</comment>
                <literal type="string" pos:line="215" pos:column="17">"%s"<pos:position pos:line="215" pos:column="21"/></literal> <comment type="block" pos:line="215" pos:column="22">/* host */</comment>
                <literal type="string" pos:line="216" pos:column="17">"%s"<pos:position pos:line="216" pos:column="21"/></literal> <comment type="block" pos:line="216" pos:column="22">/* pragma */</comment>
                <literal type="string" pos:line="217" pos:column="17">"%s"<pos:position pos:line="217" pos:column="21"/></literal> <comment type="block" pos:line="217" pos:column="22">/* accept */</comment>
                <literal type="string" pos:line="218" pos:column="17">"%s"<pos:position pos:line="218" pos:column="21"/></literal></expr></argument>, <comment type="block" pos:line="218" pos:column="23">/* referer */</comment>

                <argument><expr><ternary><condition><expr><name><name pos:line="220" pos:column="17">data<pos:position pos:line="220" pos:column="21"/></name><operator pos:line="220" pos:column="21">-&gt;<pos:position pos:line="220" pos:column="26"/></operator><name pos:line="220" pos:column="23">set<pos:position pos:line="220" pos:column="26"/></name><operator pos:line="220" pos:column="26">.<pos:position pos:line="220" pos:column="27"/></operator><name pos:line="220" pos:column="27">customrequest<pos:position pos:line="220" pos:column="40"/></name></name></expr>?<pos:position pos:line="220" pos:column="41"/></condition><then><expr><name><name pos:line="220" pos:column="41">data<pos:position pos:line="220" pos:column="45"/></name><operator pos:line="220" pos:column="45">-&gt;<pos:position pos:line="220" pos:column="50"/></operator><name pos:line="220" pos:column="47">set<pos:position pos:line="220" pos:column="50"/></name><operator pos:line="220" pos:column="50">.<pos:position pos:line="220" pos:column="51"/></operator><name pos:line="220" pos:column="51">customrequest<pos:position pos:line="220" pos:column="64"/></name></name></expr></then><else pos:line="220" pos:column="64">:
                <expr><operator pos:line="221" pos:column="17">(<pos:position pos:line="221" pos:column="18"/></operator><ternary><condition><expr><name><name pos:line="221" pos:column="18">data<pos:position pos:line="221" pos:column="22"/></name><operator pos:line="221" pos:column="22">-&gt;<pos:position pos:line="221" pos:column="27"/></operator><name pos:line="221" pos:column="24">set<pos:position pos:line="221" pos:column="27"/></name><operator pos:line="221" pos:column="27">.<pos:position pos:line="221" pos:column="28"/></operator><name pos:line="221" pos:column="28">no_body<pos:position pos:line="221" pos:column="35"/></name></name></expr>?<pos:position pos:line="221" pos:column="36"/></condition><then><expr><literal type="string" pos:line="221" pos:column="36">"HEAD"<pos:position pos:line="221" pos:column="42"/></literal></expr></then><else pos:line="221" pos:column="42">:
                 <expr><ternary><condition><expr><operator pos:line="222" pos:column="18">(<pos:position pos:line="222" pos:column="19"/></operator><operator pos:line="222" pos:column="19">(<pos:position pos:line="222" pos:column="20"/></operator><name pos:line="222" pos:column="20">HTTPREQ_POST<pos:position pos:line="222" pos:column="32"/></name> <operator pos:line="222" pos:column="33">==<pos:position pos:line="222" pos:column="35"/></operator> <name><name pos:line="222" pos:column="36">data<pos:position pos:line="222" pos:column="40"/></name><operator pos:line="222" pos:column="40">-&gt;<pos:position pos:line="222" pos:column="45"/></operator><name pos:line="222" pos:column="42">set<pos:position pos:line="222" pos:column="45"/></name><operator pos:line="222" pos:column="45">.<pos:position pos:line="222" pos:column="46"/></operator><name pos:line="222" pos:column="46">httpreq<pos:position pos:line="222" pos:column="53"/></name></name><operator pos:line="222" pos:column="53">)<pos:position pos:line="222" pos:column="54"/></operator> <operator pos:line="222" pos:column="55">||<pos:position pos:line="222" pos:column="57"/></operator>
                  <operator pos:line="223" pos:column="19">(<pos:position pos:line="223" pos:column="20"/></operator><name pos:line="223" pos:column="20">HTTPREQ_POST_FORM<pos:position pos:line="223" pos:column="37"/></name> <operator pos:line="223" pos:column="38">==<pos:position pos:line="223" pos:column="40"/></operator> <name><name pos:line="223" pos:column="41">data<pos:position pos:line="223" pos:column="45"/></name><operator pos:line="223" pos:column="45">-&gt;<pos:position pos:line="223" pos:column="50"/></operator><name pos:line="223" pos:column="47">set<pos:position pos:line="223" pos:column="50"/></name><operator pos:line="223" pos:column="50">.<pos:position pos:line="223" pos:column="51"/></operator><name pos:line="223" pos:column="51">httpreq<pos:position pos:line="223" pos:column="58"/></name></name><operator pos:line="223" pos:column="58">)<pos:position pos:line="223" pos:column="59"/></operator><operator pos:line="223" pos:column="59">)<pos:position pos:line="223" pos:column="60"/></operator></expr>?<pos:position pos:line="223" pos:column="61"/></condition><then><expr><literal type="string" pos:line="223" pos:column="61">"POST"<pos:position pos:line="223" pos:column="67"/></literal></expr></then><else pos:line="223" pos:column="67">:
                 <expr><ternary><condition><expr><operator pos:line="224" pos:column="18">(<pos:position pos:line="224" pos:column="19"/></operator><name pos:line="224" pos:column="19">HTTPREQ_PUT<pos:position pos:line="224" pos:column="30"/></name> <operator pos:line="224" pos:column="31">==<pos:position pos:line="224" pos:column="33"/></operator> <name><name pos:line="224" pos:column="34">data<pos:position pos:line="224" pos:column="38"/></name><operator pos:line="224" pos:column="38">-&gt;<pos:position pos:line="224" pos:column="43"/></operator><name pos:line="224" pos:column="40">set<pos:position pos:line="224" pos:column="43"/></name><operator pos:line="224" pos:column="43">.<pos:position pos:line="224" pos:column="44"/></operator><name pos:line="224" pos:column="44">httpreq<pos:position pos:line="224" pos:column="51"/></name></name><operator pos:line="224" pos:column="51">)<pos:position pos:line="224" pos:column="52"/></operator></expr>?<pos:position pos:line="224" pos:column="53"/></condition><then><expr><literal type="string" pos:line="224" pos:column="53">"PUT"<pos:position pos:line="224" pos:column="58"/></literal></expr></then><else pos:line="224" pos:column="58">:<expr><literal type="string" pos:line="224" pos:column="59">"GET"<pos:position pos:line="224" pos:column="64"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary><operator pos:line="224" pos:column="64">)<pos:position pos:line="224" pos:column="65"/></operator></expr></else></ternary></expr></argument>,
                <argument><expr><name pos:line="225" pos:column="17">ppath<pos:position pos:line="225" pos:column="22"/></name></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="226" pos:column="17">(<pos:position pos:line="226" pos:column="18"/></operator><name><name pos:line="226" pos:column="18">conn<pos:position pos:line="226" pos:column="22"/></name><operator pos:line="226" pos:column="22">-&gt;<pos:position pos:line="226" pos:column="27"/></operator><name pos:line="226" pos:column="24">bits<pos:position pos:line="226" pos:column="28"/></name><operator pos:line="226" pos:column="28">.<pos:position pos:line="226" pos:column="29"/></operator><name pos:line="226" pos:column="29">proxy_user_passwd<pos:position pos:line="226" pos:column="46"/></name></name> <operator pos:line="226" pos:column="47">&amp;&amp;<pos:position pos:line="226" pos:column="57"/></operator>
                 <name><name pos:line="227" pos:column="18">conn<pos:position pos:line="227" pos:column="22"/></name><operator pos:line="227" pos:column="22">-&gt;<pos:position pos:line="227" pos:column="27"/></operator><name pos:line="227" pos:column="24">allocptr<pos:position pos:line="227" pos:column="32"/></name><operator pos:line="227" pos:column="32">.<pos:position pos:line="227" pos:column="33"/></operator><name pos:line="227" pos:column="33">proxyuserpwd<pos:position pos:line="227" pos:column="45"/></name></name><operator pos:line="227" pos:column="45">)<pos:position pos:line="227" pos:column="46"/></operator></expr>?<pos:position pos:line="227" pos:column="47"/></condition><then><expr><name><name pos:line="227" pos:column="47">conn<pos:position pos:line="227" pos:column="51"/></name><operator pos:line="227" pos:column="51">-&gt;<pos:position pos:line="227" pos:column="56"/></operator><name pos:line="227" pos:column="53">allocptr<pos:position pos:line="227" pos:column="61"/></name><operator pos:line="227" pos:column="61">.<pos:position pos:line="227" pos:column="62"/></operator><name pos:line="227" pos:column="62">proxyuserpwd<pos:position pos:line="227" pos:column="74"/></name></name></expr></then><else pos:line="227" pos:column="74">:<expr><literal type="string" pos:line="227" pos:column="75">""<pos:position pos:line="227" pos:column="77"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="228" pos:column="17">(<pos:position pos:line="228" pos:column="18"/></operator><name><name pos:line="228" pos:column="18">conn<pos:position pos:line="228" pos:column="22"/></name><operator pos:line="228" pos:column="22">-&gt;<pos:position pos:line="228" pos:column="27"/></operator><name pos:line="228" pos:column="24">bits<pos:position pos:line="228" pos:column="28"/></name><operator pos:line="228" pos:column="28">.<pos:position pos:line="228" pos:column="29"/></operator><name pos:line="228" pos:column="29">user_passwd<pos:position pos:line="228" pos:column="40"/></name></name> <operator pos:line="228" pos:column="41">&amp;&amp;<pos:position pos:line="228" pos:column="51"/></operator> <name><name pos:line="228" pos:column="44">conn<pos:position pos:line="228" pos:column="48"/></name><operator pos:line="228" pos:column="48">-&gt;<pos:position pos:line="228" pos:column="53"/></operator><name pos:line="228" pos:column="50">allocptr<pos:position pos:line="228" pos:column="58"/></name><operator pos:line="228" pos:column="58">.<pos:position pos:line="228" pos:column="59"/></operator><name pos:line="228" pos:column="59">userpwd<pos:position pos:line="228" pos:column="66"/></name></name><operator pos:line="228" pos:column="66">)<pos:position pos:line="228" pos:column="67"/></operator></expr>?<pos:position pos:line="228" pos:column="68"/></condition><then pos:line="228" pos:column="68">
                <expr><name><name pos:line="229" pos:column="17">conn<pos:position pos:line="229" pos:column="21"/></name><operator pos:line="229" pos:column="21">-&gt;<pos:position pos:line="229" pos:column="26"/></operator><name pos:line="229" pos:column="23">allocptr<pos:position pos:line="229" pos:column="31"/></name><operator pos:line="229" pos:column="31">.<pos:position pos:line="229" pos:column="32"/></operator><name pos:line="229" pos:column="32">userpwd<pos:position pos:line="229" pos:column="39"/></name></name></expr></then><else pos:line="229" pos:column="39">:<expr><literal type="string" pos:line="229" pos:column="40">""<pos:position pos:line="229" pos:column="42"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="230" pos:column="17">(<pos:position pos:line="230" pos:column="18"/></operator><name><name pos:line="230" pos:column="18">conn<pos:position pos:line="230" pos:column="22"/></name><operator pos:line="230" pos:column="22">-&gt;<pos:position pos:line="230" pos:column="27"/></operator><name pos:line="230" pos:column="24">bits<pos:position pos:line="230" pos:column="28"/></name><operator pos:line="230" pos:column="28">.<pos:position pos:line="230" pos:column="29"/></operator><name pos:line="230" pos:column="29">use_range<pos:position pos:line="230" pos:column="38"/></name></name> <operator pos:line="230" pos:column="39">&amp;&amp;<pos:position pos:line="230" pos:column="49"/></operator> <name><name pos:line="230" pos:column="42">conn<pos:position pos:line="230" pos:column="46"/></name><operator pos:line="230" pos:column="46">-&gt;<pos:position pos:line="230" pos:column="51"/></operator><name pos:line="230" pos:column="48">allocptr<pos:position pos:line="230" pos:column="56"/></name><operator pos:line="230" pos:column="56">.<pos:position pos:line="230" pos:column="57"/></operator><name pos:line="230" pos:column="57">rangeline<pos:position pos:line="230" pos:column="66"/></name></name><operator pos:line="230" pos:column="66">)<pos:position pos:line="230" pos:column="67"/></operator></expr>?<pos:position pos:line="230" pos:column="68"/></condition><then pos:line="230" pos:column="68">
                <expr><name><name pos:line="231" pos:column="17">conn<pos:position pos:line="231" pos:column="21"/></name><operator pos:line="231" pos:column="21">-&gt;<pos:position pos:line="231" pos:column="26"/></operator><name pos:line="231" pos:column="23">allocptr<pos:position pos:line="231" pos:column="31"/></name><operator pos:line="231" pos:column="31">.<pos:position pos:line="231" pos:column="32"/></operator><name pos:line="231" pos:column="32">rangeline<pos:position pos:line="231" pos:column="41"/></name></name></expr></then><else pos:line="231" pos:column="41">:<expr><literal type="string" pos:line="231" pos:column="42">""<pos:position pos:line="231" pos:column="44"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="232" pos:column="17">(<pos:position pos:line="232" pos:column="18"/></operator><name><name pos:line="232" pos:column="18">data<pos:position pos:line="232" pos:column="22"/></name><operator pos:line="232" pos:column="22">-&gt;<pos:position pos:line="232" pos:column="27"/></operator><name pos:line="232" pos:column="24">set<pos:position pos:line="232" pos:column="27"/></name><operator pos:line="232" pos:column="27">.<pos:position pos:line="232" pos:column="28"/></operator><name pos:line="232" pos:column="28">useragent<pos:position pos:line="232" pos:column="37"/></name></name> <operator pos:line="232" pos:column="38">&amp;&amp;<pos:position pos:line="232" pos:column="48"/></operator> <operator pos:line="232" pos:column="41">*<pos:position pos:line="232" pos:column="42"/></operator><name><name pos:line="232" pos:column="42">data<pos:position pos:line="232" pos:column="46"/></name><operator pos:line="232" pos:column="46">-&gt;<pos:position pos:line="232" pos:column="51"/></operator><name pos:line="232" pos:column="48">set<pos:position pos:line="232" pos:column="51"/></name><operator pos:line="232" pos:column="51">.<pos:position pos:line="232" pos:column="52"/></operator><name pos:line="232" pos:column="52">useragent<pos:position pos:line="232" pos:column="61"/></name></name> <operator pos:line="232" pos:column="62">&amp;&amp;<pos:position pos:line="232" pos:column="72"/></operator> <name><name pos:line="232" pos:column="65">conn<pos:position pos:line="232" pos:column="69"/></name><operator pos:line="232" pos:column="69">-&gt;<pos:position pos:line="232" pos:column="74"/></operator><name pos:line="232" pos:column="71">allocptr<pos:position pos:line="232" pos:column="79"/></name><operator pos:line="232" pos:column="79">.<pos:position pos:line="232" pos:column="80"/></operator><name pos:line="232" pos:column="80">uagent<pos:position pos:line="232" pos:column="86"/></name></name><operator pos:line="232" pos:column="86">)<pos:position pos:line="232" pos:column="87"/></operator></expr>?<pos:position pos:line="232" pos:column="88"/></condition><then pos:line="232" pos:column="88">
                <expr><name><name pos:line="233" pos:column="17">conn<pos:position pos:line="233" pos:column="21"/></name><operator pos:line="233" pos:column="21">-&gt;<pos:position pos:line="233" pos:column="26"/></operator><name pos:line="233" pos:column="23">allocptr<pos:position pos:line="233" pos:column="31"/></name><operator pos:line="233" pos:column="31">.<pos:position pos:line="233" pos:column="32"/></operator><name pos:line="233" pos:column="32">uagent<pos:position pos:line="233" pos:column="38"/></name></name></expr></then><else pos:line="233" pos:column="38">:<expr><literal type="string" pos:line="233" pos:column="39">""<pos:position pos:line="233" pos:column="41"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><operator pos:line="234" pos:column="17">(<pos:position pos:line="234" pos:column="18"/></operator><ternary><condition><expr><name><name pos:line="234" pos:column="18">conn<pos:position pos:line="234" pos:column="22"/></name><operator pos:line="234" pos:column="22">-&gt;<pos:position pos:line="234" pos:column="27"/></operator><name pos:line="234" pos:column="24">allocptr<pos:position pos:line="234" pos:column="32"/></name><operator pos:line="234" pos:column="32">.<pos:position pos:line="234" pos:column="33"/></operator><name pos:line="234" pos:column="33">cookie<pos:position pos:line="234" pos:column="39"/></name></name></expr>?<pos:position pos:line="234" pos:column="40"/></condition><then><expr><name><name pos:line="234" pos:column="40">conn<pos:position pos:line="234" pos:column="44"/></name><operator pos:line="234" pos:column="44">-&gt;<pos:position pos:line="234" pos:column="49"/></operator><name pos:line="234" pos:column="46">allocptr<pos:position pos:line="234" pos:column="54"/></name><operator pos:line="234" pos:column="54">.<pos:position pos:line="234" pos:column="55"/></operator><name pos:line="234" pos:column="55">cookie<pos:position pos:line="234" pos:column="61"/></name></name></expr></then><else pos:line="234" pos:column="61">:<expr><literal type="string" pos:line="234" pos:column="62">""<pos:position pos:line="234" pos:column="64"/></literal></expr></else></ternary><operator pos:line="234" pos:column="64">)<pos:position pos:line="234" pos:column="65"/></operator></expr></argument>, <comment type="block" pos:line="234" pos:column="67">/* Cookie: &lt;data&gt; */</comment>
                <argument><expr><operator pos:line="235" pos:column="17">(<pos:position pos:line="235" pos:column="18"/></operator><ternary><condition><expr><name><name pos:line="235" pos:column="18">conn<pos:position pos:line="235" pos:column="22"/></name><operator pos:line="235" pos:column="22">-&gt;<pos:position pos:line="235" pos:column="27"/></operator><name pos:line="235" pos:column="24">allocptr<pos:position pos:line="235" pos:column="32"/></name><operator pos:line="235" pos:column="32">.<pos:position pos:line="235" pos:column="33"/></operator><name pos:line="235" pos:column="33">host<pos:position pos:line="235" pos:column="37"/></name></name></expr>?<pos:position pos:line="235" pos:column="38"/></condition><then><expr><name><name pos:line="235" pos:column="38">conn<pos:position pos:line="235" pos:column="42"/></name><operator pos:line="235" pos:column="42">-&gt;<pos:position pos:line="235" pos:column="47"/></operator><name pos:line="235" pos:column="44">allocptr<pos:position pos:line="235" pos:column="52"/></name><operator pos:line="235" pos:column="52">.<pos:position pos:line="235" pos:column="53"/></operator><name pos:line="235" pos:column="53">host<pos:position pos:line="235" pos:column="57"/></name></name></expr></then><else pos:line="235" pos:column="57">:<expr><literal type="string" pos:line="235" pos:column="58">""<pos:position pos:line="235" pos:column="60"/></literal></expr></else></ternary><operator pos:line="235" pos:column="60">)<pos:position pos:line="235" pos:column="61"/></operator></expr></argument>, <comment type="block" pos:line="235" pos:column="63">/* Host: host */</comment>
                <argument><expr><ternary><condition><expr><name><name pos:line="236" pos:column="17">http<pos:position pos:line="236" pos:column="21"/></name><operator pos:line="236" pos:column="21">-&gt;<pos:position pos:line="236" pos:column="26"/></operator><name pos:line="236" pos:column="23">p_pragma<pos:position pos:line="236" pos:column="31"/></name></name></expr>?<pos:position pos:line="236" pos:column="32"/></condition><then><expr><name><name pos:line="236" pos:column="32">http<pos:position pos:line="236" pos:column="36"/></name><operator pos:line="236" pos:column="36">-&gt;<pos:position pos:line="236" pos:column="41"/></operator><name pos:line="236" pos:column="38">p_pragma<pos:position pos:line="236" pos:column="46"/></name></name></expr></then><else pos:line="236" pos:column="46">:<expr><literal type="string" pos:line="236" pos:column="47">""<pos:position pos:line="236" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><name><name pos:line="237" pos:column="17">http<pos:position pos:line="237" pos:column="21"/></name><operator pos:line="237" pos:column="21">-&gt;<pos:position pos:line="237" pos:column="26"/></operator><name pos:line="237" pos:column="23">p_accept<pos:position pos:line="237" pos:column="31"/></name></name></expr>?<pos:position pos:line="237" pos:column="32"/></condition><then><expr><name><name pos:line="237" pos:column="32">http<pos:position pos:line="237" pos:column="36"/></name><operator pos:line="237" pos:column="36">-&gt;<pos:position pos:line="237" pos:column="41"/></operator><name pos:line="237" pos:column="38">p_accept<pos:position pos:line="237" pos:column="46"/></name></name></expr></then><else pos:line="237" pos:column="46">:<expr><literal type="string" pos:line="237" pos:column="47">""<pos:position pos:line="237" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
                <argument><expr><ternary><condition><expr><operator pos:line="238" pos:column="17">(<pos:position pos:line="238" pos:column="18"/></operator><name><name pos:line="238" pos:column="18">data<pos:position pos:line="238" pos:column="22"/></name><operator pos:line="238" pos:column="22">-&gt;<pos:position pos:line="238" pos:column="27"/></operator><name pos:line="238" pos:column="24">change<pos:position pos:line="238" pos:column="30"/></name><operator pos:line="238" pos:column="30">.<pos:position pos:line="238" pos:column="31"/></operator><name pos:line="238" pos:column="31">referer<pos:position pos:line="238" pos:column="38"/></name></name> <operator pos:line="238" pos:column="39">&amp;&amp;<pos:position pos:line="238" pos:column="49"/></operator> <name><name pos:line="238" pos:column="42">conn<pos:position pos:line="238" pos:column="46"/></name><operator pos:line="238" pos:column="46">-&gt;<pos:position pos:line="238" pos:column="51"/></operator><name pos:line="238" pos:column="48">allocptr<pos:position pos:line="238" pos:column="56"/></name><operator pos:line="238" pos:column="56">.<pos:position pos:line="238" pos:column="57"/></operator><name pos:line="238" pos:column="57">ref<pos:position pos:line="238" pos:column="60"/></name></name><operator pos:line="238" pos:column="60">)<pos:position pos:line="238" pos:column="61"/></operator></expr>?<pos:position pos:line="238" pos:column="62"/></condition><then><expr><name><name pos:line="238" pos:column="62">conn<pos:position pos:line="238" pos:column="66"/></name><operator pos:line="238" pos:column="66">-&gt;<pos:position pos:line="238" pos:column="71"/></operator><name pos:line="238" pos:column="68">allocptr<pos:position pos:line="238" pos:column="76"/></name><operator pos:line="238" pos:column="76">.<pos:position pos:line="238" pos:column="77"/></operator><name pos:line="238" pos:column="77">ref<pos:position pos:line="238" pos:column="80"/></name></name></expr></then><else pos:line="238" pos:column="80">:<expr><literal type="string" pos:line="238" pos:column="81">""<pos:position pos:line="238" pos:column="83"/></literal></expr></else></ternary></expr></argument> <comment type="block" pos:line="238" pos:column="84">/* Referer: &lt;data&gt; &lt;CRLF&gt; */</comment>
                )<pos:position pos:line="239" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="19"/></expr_stmt>

    <if pos:line="241" pos:column="5">if<condition pos:line="241" pos:column="7">(<expr><name pos:line="241" pos:column="8">co<pos:position pos:line="241" pos:column="10"/></name></expr>)<pos:position pos:line="241" pos:column="11"/></condition><then pos:line="241" pos:column="11"> <block pos:line="241" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="242" pos:column="7">int<pos:position pos:line="242" pos:column="10"/></name></type> <name pos:line="242" pos:column="11">count<pos:position pos:line="242" pos:column="16"/></name><init pos:line="242" pos:column="16">=<expr><literal type="number" pos:line="242" pos:column="17">0<pos:position pos:line="242" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="242" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name><name pos:line="243" pos:column="7">struct<pos:position pos:line="243" pos:column="13"/></name> <name pos:line="243" pos:column="14">Cookie<pos:position pos:line="243" pos:column="20"/></name></name> <modifier pos:line="243" pos:column="21">*<pos:position pos:line="243" pos:column="22"/></modifier></type><name pos:line="243" pos:column="22">store<pos:position pos:line="243" pos:column="27"/></name><init pos:line="243" pos:column="27">=<expr><name pos:line="243" pos:column="28">co<pos:position pos:line="243" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="243" pos:column="31"/></decl_stmt>
      <comment type="block" pos:line="244" pos:column="7">/* now loop through all cookies that matched */</comment>
      <while pos:line="245" pos:column="7">while<condition pos:line="245" pos:column="12">(<expr><name pos:line="245" pos:column="13">co<pos:position pos:line="245" pos:column="15"/></name></expr>)<pos:position pos:line="245" pos:column="16"/></condition> <block pos:line="245" pos:column="17">{
        <if pos:line="246" pos:column="9">if<condition pos:line="246" pos:column="11">(<expr><name><name pos:line="246" pos:column="12">co<pos:position pos:line="246" pos:column="14"/></name><operator pos:line="246" pos:column="14">-&gt;<pos:position pos:line="246" pos:column="19"/></operator><name pos:line="246" pos:column="16">value<pos:position pos:line="246" pos:column="21"/></name></name> <operator pos:line="246" pos:column="22">&amp;&amp;<pos:position pos:line="246" pos:column="32"/></operator> <call><name pos:line="246" pos:column="25">strlen<pos:position pos:line="246" pos:column="31"/></name><argument_list pos:line="246" pos:column="31">(<argument><expr><name><name pos:line="246" pos:column="32">co<pos:position pos:line="246" pos:column="34"/></name><operator pos:line="246" pos:column="34">-&gt;<pos:position pos:line="246" pos:column="39"/></operator><name pos:line="246" pos:column="36">value<pos:position pos:line="246" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="246" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="246" pos:column="43"/></condition><then pos:line="246" pos:column="43"> <block pos:line="246" pos:column="44">{
          <if pos:line="247" pos:column="11">if<condition pos:line="247" pos:column="13">(<expr><literal type="number" pos:line="247" pos:column="14">0<pos:position pos:line="247" pos:column="15"/></literal> <operator pos:line="247" pos:column="16">==<pos:position pos:line="247" pos:column="18"/></operator> <name pos:line="247" pos:column="19">count<pos:position pos:line="247" pos:column="24"/></name></expr>)<pos:position pos:line="247" pos:column="25"/></condition><then pos:line="247" pos:column="25"> <block pos:line="247" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="248" pos:column="13">add_bufferf<pos:position pos:line="248" pos:column="24"/></name><argument_list pos:line="248" pos:column="24">(<argument><expr><name pos:line="248" pos:column="25">req_buffer<pos:position pos:line="248" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="37">"Cookie: "<pos:position pos:line="248" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="49"/></expr_stmt>
          }<pos:position pos:line="249" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="250" pos:column="11">add_bufferf<pos:position pos:line="250" pos:column="22"/></name><argument_list pos:line="250" pos:column="22">(<argument><expr><name pos:line="250" pos:column="23">req_buffer<pos:position pos:line="250" pos:column="33"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="251" pos:column="23">"%s%s=%s"<pos:position pos:line="251" pos:column="32"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="251" pos:column="34">count<pos:position pos:line="251" pos:column="39"/></name></expr>?<pos:position pos:line="251" pos:column="40"/></condition><then><expr><literal type="string" pos:line="251" pos:column="40">"; "<pos:position pos:line="251" pos:column="44"/></literal></expr></then><else pos:line="251" pos:column="44">:<expr><literal type="string" pos:line="251" pos:column="45">""<pos:position pos:line="251" pos:column="47"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="49">co<pos:position pos:line="251" pos:column="51"/></name><operator pos:line="251" pos:column="51">-&gt;<pos:position pos:line="251" pos:column="56"/></operator><name pos:line="251" pos:column="53">name<pos:position pos:line="251" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="59">co<pos:position pos:line="251" pos:column="61"/></name><operator pos:line="251" pos:column="61">-&gt;<pos:position pos:line="251" pos:column="66"/></operator><name pos:line="251" pos:column="63">value<pos:position pos:line="251" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="251" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="70"/></expr_stmt>
          <expr_stmt><expr><name pos:line="252" pos:column="11">count<pos:position pos:line="252" pos:column="16"/></name><operator pos:line="252" pos:column="16">++<pos:position pos:line="252" pos:column="18"/></operator></expr>;<pos:position pos:line="252" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="253" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="254" pos:column="9">co<pos:position pos:line="254" pos:column="11"/></name> <operator pos:line="254" pos:column="12">=<pos:position pos:line="254" pos:column="13"/></operator> <name><name pos:line="254" pos:column="14">co<pos:position pos:line="254" pos:column="16"/></name><operator pos:line="254" pos:column="16">-&gt;<pos:position pos:line="254" pos:column="21"/></operator><name pos:line="254" pos:column="18">next<pos:position pos:line="254" pos:column="22"/></name></name></expr>;<pos:position pos:line="254" pos:column="23"/></expr_stmt> <comment type="block" pos:line="254" pos:column="24">/* next cookie please */</comment>
      }<pos:position pos:line="255" pos:column="8"/></block></while>
      <if pos:line="256" pos:column="7">if<condition pos:line="256" pos:column="9">(<expr><name pos:line="256" pos:column="10">count<pos:position pos:line="256" pos:column="15"/></name></expr>)<pos:position pos:line="256" pos:column="16"/></condition><then pos:line="256" pos:column="16"> <block pos:line="256" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">add_buffer<pos:position pos:line="257" pos:column="19"/></name><argument_list pos:line="257" pos:column="19">(<argument><expr><name pos:line="257" pos:column="20">req_buffer<pos:position pos:line="257" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="32">"\r\n"<pos:position pos:line="257" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="40">2<pos:position pos:line="257" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="258" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="259" pos:column="7">Curl_cookie_freelist<pos:position pos:line="259" pos:column="27"/></name><argument_list pos:line="259" pos:column="27">(<argument><expr><name pos:line="259" pos:column="28">store<pos:position pos:line="259" pos:column="33"/></name></expr></argument>)<pos:position pos:line="259" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="35"/></expr_stmt> <comment type="block" pos:line="259" pos:column="36">/* free the cookie list */</comment>
      <expr_stmt><expr><name pos:line="260" pos:column="7">co<pos:position pos:line="260" pos:column="9"/></name><operator pos:line="260" pos:column="9">=<pos:position pos:line="260" pos:column="10"/></operator><name pos:line="260" pos:column="10">NULL<pos:position pos:line="260" pos:column="14"/></name></expr>;<pos:position pos:line="260" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="261" pos:column="6"/></block></then></if>

    <if pos:line="263" pos:column="5">if<condition pos:line="263" pos:column="7">(<expr><name><name pos:line="263" pos:column="8">data<pos:position pos:line="263" pos:column="12"/></name><operator pos:line="263" pos:column="12">-&gt;<pos:position pos:line="263" pos:column="17"/></operator><name pos:line="263" pos:column="14">set<pos:position pos:line="263" pos:column="17"/></name><operator pos:line="263" pos:column="17">.<pos:position pos:line="263" pos:column="18"/></operator><name pos:line="263" pos:column="18">timecondition<pos:position pos:line="263" pos:column="31"/></name></name></expr>)<pos:position pos:line="263" pos:column="32"/></condition><then pos:line="263" pos:column="32"> <block pos:line="263" pos:column="33">{
      <decl_stmt><decl><type><name><name pos:line="264" pos:column="7">struct<pos:position pos:line="264" pos:column="13"/></name> <name pos:line="264" pos:column="14">tm<pos:position pos:line="264" pos:column="16"/></name></name> <modifier pos:line="264" pos:column="17">*<pos:position pos:line="264" pos:column="18"/></modifier></type><name pos:line="264" pos:column="18">thistime<pos:position pos:line="264" pos:column="26"/></name></decl>;<pos:position pos:line="264" pos:column="27"/></decl_stmt>

      <comment type="block" pos:line="266" pos:column="7">/* Phil Karn (Fri, 13 Apr 2001) pointed out that the If-Modified-Since
       * header family should have their times set in GMT as RFC2616 defines:
       * "All HTTP date/time stamps MUST be represented in Greenwich Mean Time
       * (GMT), without exception. For the purposes of HTTP, GMT is exactly
       * equal to UTC (Coordinated Universal Time)." (see page 20 of RFC2616).
       */</comment>

<cpp:ifdef pos:line="273" pos:column="1">#<cpp:directive pos:line="273" pos:column="2">ifdef<pos:position pos:line="273" pos:column="7"/></cpp:directive> <name pos:line="273" pos:column="8">HAVE_LOCALTIME_R<pos:position pos:line="273" pos:column="24"/></name></cpp:ifdef>
      <comment type="block" pos:line="274" pos:column="7">/* thread-safe version */</comment>
      <comment type="block" pos:line="275" pos:column="7">/* We assume that the presense of localtime_r() proves the presense
         of gmtime_r() which is a bit ugly but might work */</comment>
      <decl_stmt><decl><type><name><name pos:line="277" pos:column="7">struct<pos:position pos:line="277" pos:column="13"/></name> <name pos:line="277" pos:column="14">tm<pos:position pos:line="277" pos:column="16"/></name></name></type> <name pos:line="277" pos:column="17">keeptime<pos:position pos:line="277" pos:column="25"/></name></decl>;<pos:position pos:line="277" pos:column="26"/></decl_stmt>
      <expr_stmt><expr><name pos:line="278" pos:column="7">thistime<pos:position pos:line="278" pos:column="15"/></name> <operator pos:line="278" pos:column="16">=<pos:position pos:line="278" pos:column="17"/></operator> <operator pos:line="278" pos:column="18">(<pos:position pos:line="278" pos:column="19"/></operator>struct <name pos:line="278" pos:column="26">tm<pos:position pos:line="278" pos:column="28"/></name> <operator pos:line="278" pos:column="29">*<pos:position pos:line="278" pos:column="30"/></operator><operator pos:line="278" pos:column="30">)<pos:position pos:line="278" pos:column="31"/></operator><call><name pos:line="278" pos:column="31">gmtime_r<pos:position pos:line="278" pos:column="39"/></name><argument_list pos:line="278" pos:column="39">(<argument><expr><operator pos:line="278" pos:column="40">&amp;<pos:position pos:line="278" pos:column="45"/></operator><name><name pos:line="278" pos:column="41">data<pos:position pos:line="278" pos:column="45"/></name><operator pos:line="278" pos:column="45">-&gt;<pos:position pos:line="278" pos:column="50"/></operator><name pos:line="278" pos:column="47">set<pos:position pos:line="278" pos:column="50"/></name><operator pos:line="278" pos:column="50">.<pos:position pos:line="278" pos:column="51"/></operator><name pos:line="278" pos:column="51">timevalue<pos:position pos:line="278" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="62">&amp;<pos:position pos:line="278" pos:column="67"/></operator><name pos:line="278" pos:column="63">keeptime<pos:position pos:line="278" pos:column="71"/></name></expr></argument>)<pos:position pos:line="278" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="73"/></expr_stmt>
<cpp:else pos:line="279" pos:column="1">#<cpp:directive pos:line="279" pos:column="2">else<pos:position pos:line="279" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="280" pos:column="7">thistime<pos:position pos:line="280" pos:column="15"/></name> <operator pos:line="280" pos:column="16">=<pos:position pos:line="280" pos:column="17"/></operator> <call><name pos:line="280" pos:column="18">gmtime<pos:position pos:line="280" pos:column="24"/></name><argument_list pos:line="280" pos:column="24">(<argument><expr><operator pos:line="280" pos:column="25">&amp;<pos:position pos:line="280" pos:column="30"/></operator><name><name pos:line="280" pos:column="26">data<pos:position pos:line="280" pos:column="30"/></name><operator pos:line="280" pos:column="30">-&gt;<pos:position pos:line="280" pos:column="35"/></operator><name pos:line="280" pos:column="32">set<pos:position pos:line="280" pos:column="35"/></name><operator pos:line="280" pos:column="35">.<pos:position pos:line="280" pos:column="36"/></operator><name pos:line="280" pos:column="36">timevalue<pos:position pos:line="280" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="280" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">endif<pos:position pos:line="281" pos:column="7"/></cpp:directive></cpp:endif>
      <if pos:line="282" pos:column="7">if<condition pos:line="282" pos:column="9">(<expr><name pos:line="282" pos:column="10">NULL<pos:position pos:line="282" pos:column="14"/></name> <operator pos:line="282" pos:column="15">==<pos:position pos:line="282" pos:column="17"/></operator> <name pos:line="282" pos:column="18">thistime<pos:position pos:line="282" pos:column="26"/></name></expr>)<pos:position pos:line="282" pos:column="27"/></condition><then pos:line="282" pos:column="27"> <block pos:line="282" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="283" pos:column="9">failf<pos:position pos:line="283" pos:column="14"/></name><argument_list pos:line="283" pos:column="14">(<argument><expr><name pos:line="283" pos:column="15">data<pos:position pos:line="283" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="21">"localtime() failed!"<pos:position pos:line="283" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="44"/></expr_stmt>
        <return pos:line="284" pos:column="9">return <expr><name pos:line="284" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="284" pos:column="35"/></name></expr>;<pos:position pos:line="284" pos:column="36"/></return>
      }<pos:position pos:line="285" pos:column="8"/></block></then></if>

<cpp:ifdef pos:line="287" pos:column="1">#<cpp:directive pos:line="287" pos:column="2">ifdef<pos:position pos:line="287" pos:column="7"/></cpp:directive> <name pos:line="287" pos:column="8">HAVE_STRFTIME<pos:position pos:line="287" pos:column="21"/></name></cpp:ifdef>
      <comment type="block" pos:line="288" pos:column="7">/* format: "Tue, 15 Nov 1994 12:45:26 GMT" */</comment>
      <expr_stmt><expr><call><name pos:line="289" pos:column="7">strftime<pos:position pos:line="289" pos:column="15"/></name><argument_list pos:line="289" pos:column="15">(<argument><expr><name pos:line="289" pos:column="16">buf<pos:position pos:line="289" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="289" pos:column="21">BUFSIZE<pos:position pos:line="289" pos:column="28"/></name><operator pos:line="289" pos:column="28">-<pos:position pos:line="289" pos:column="29"/></operator><literal type="number" pos:line="289" pos:column="29">1<pos:position pos:line="289" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="32">"%a, %d %b %Y %H:%M:%S %Z"<pos:position pos:line="289" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="289" pos:column="60">thistime<pos:position pos:line="289" pos:column="68"/></name></expr></argument>)<pos:position pos:line="289" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="70"/></expr_stmt>
<cpp:else pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">else<pos:position pos:line="290" pos:column="6"/></cpp:directive></cpp:else>
      <comment type="block" pos:line="291" pos:column="7">/* TODO: Right, we *could* write a replacement here */</comment>
      <expr_stmt><expr><call><name pos:line="292" pos:column="7">strcpy<pos:position pos:line="292" pos:column="13"/></name><argument_list pos:line="292" pos:column="13">(<argument><expr><name pos:line="292" pos:column="14">buf<pos:position pos:line="292" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="19">"no strftime() support"<pos:position pos:line="292" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="293" pos:column="1">#<cpp:directive pos:line="293" pos:column="2">endif<pos:position pos:line="293" pos:column="7"/></cpp:directive></cpp:endif>
      <switch pos:line="294" pos:column="7">switch<condition pos:line="294" pos:column="13">(<expr><name><name pos:line="294" pos:column="14">data<pos:position pos:line="294" pos:column="18"/></name><operator pos:line="294" pos:column="18">-&gt;<pos:position pos:line="294" pos:column="23"/></operator><name pos:line="294" pos:column="20">set<pos:position pos:line="294" pos:column="23"/></name><operator pos:line="294" pos:column="23">.<pos:position pos:line="294" pos:column="24"/></operator><name pos:line="294" pos:column="24">timecondition<pos:position pos:line="294" pos:column="37"/></name></name></expr>)<pos:position pos:line="294" pos:column="38"/></condition> <block pos:line="294" pos:column="39">{
      <case pos:line="295" pos:column="7">case <expr><name pos:line="295" pos:column="12">TIMECOND_IFMODSINCE<pos:position pos:line="295" pos:column="31"/></name></expr>:<pos:position pos:line="295" pos:column="32"/></case>
      <default pos:line="296" pos:column="7">default:<pos:position pos:line="296" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="297" pos:column="9">add_bufferf<pos:position pos:line="297" pos:column="20"/></name><argument_list pos:line="297" pos:column="20">(<argument><expr><name pos:line="297" pos:column="21">req_buffer<pos:position pos:line="297" pos:column="31"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="298" pos:column="21">"If-Modified-Since: %s\r\n"<pos:position pos:line="298" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="298" pos:column="50">buf<pos:position pos:line="298" pos:column="53"/></name></expr></argument>)<pos:position pos:line="298" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="55"/></expr_stmt>
        <break pos:line="299" pos:column="9">break;<pos:position pos:line="299" pos:column="15"/></break>
      <case pos:line="300" pos:column="7">case <expr><name pos:line="300" pos:column="12">TIMECOND_IFUNMODSINCE<pos:position pos:line="300" pos:column="33"/></name></expr>:<pos:position pos:line="300" pos:column="34"/></case>
        <expr_stmt><expr><call><name pos:line="301" pos:column="9">add_bufferf<pos:position pos:line="301" pos:column="20"/></name><argument_list pos:line="301" pos:column="20">(<argument><expr><name pos:line="301" pos:column="21">req_buffer<pos:position pos:line="301" pos:column="31"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="302" pos:column="21">"If-Unmodified-Since: %s\r\n"<pos:position pos:line="302" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="302" pos:column="52">buf<pos:position pos:line="302" pos:column="55"/></name></expr></argument>)<pos:position pos:line="302" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="57"/></expr_stmt>
        <break pos:line="303" pos:column="9">break;<pos:position pos:line="303" pos:column="15"/></break>
      <case pos:line="304" pos:column="7">case <expr><name pos:line="304" pos:column="12">TIMECOND_LASTMOD<pos:position pos:line="304" pos:column="28"/></name></expr>:<pos:position pos:line="304" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="305" pos:column="9">add_bufferf<pos:position pos:line="305" pos:column="20"/></name><argument_list pos:line="305" pos:column="20">(<argument><expr><name pos:line="305" pos:column="21">req_buffer<pos:position pos:line="305" pos:column="31"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="306" pos:column="21">"Last-Modified: %s\r\n"<pos:position pos:line="306" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="306" pos:column="46">buf<pos:position pos:line="306" pos:column="49"/></name></expr></argument>)<pos:position pos:line="306" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="51"/></expr_stmt>
        <break pos:line="307" pos:column="9">break;<pos:position pos:line="307" pos:column="15"/></break>
      }<pos:position pos:line="308" pos:column="8"/></block></switch>
    }<pos:position pos:line="309" pos:column="6"/></block></then></if>

    <while pos:line="311" pos:column="5">while<condition pos:line="311" pos:column="10">(<expr><name pos:line="311" pos:column="11">headers<pos:position pos:line="311" pos:column="18"/></name></expr>)<pos:position pos:line="311" pos:column="19"/></condition> <block pos:line="311" pos:column="20">{
      <decl_stmt><decl><type><name pos:line="312" pos:column="7">char<pos:position pos:line="312" pos:column="11"/></name> <modifier pos:line="312" pos:column="12">*<pos:position pos:line="312" pos:column="13"/></modifier></type><name pos:line="312" pos:column="13">ptr<pos:position pos:line="312" pos:column="16"/></name> <init pos:line="312" pos:column="17">= <expr><call><name pos:line="312" pos:column="19">strchr<pos:position pos:line="312" pos:column="25"/></name><argument_list pos:line="312" pos:column="25">(<argument><expr><name><name pos:line="312" pos:column="26">headers<pos:position pos:line="312" pos:column="33"/></name><operator pos:line="312" pos:column="33">-&gt;<pos:position pos:line="312" pos:column="38"/></operator><name pos:line="312" pos:column="35">data<pos:position pos:line="312" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="312" pos:column="41">':'<pos:position pos:line="312" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="312" pos:column="46"/></decl_stmt>
      <if pos:line="313" pos:column="7">if<condition pos:line="313" pos:column="9">(<expr><name pos:line="313" pos:column="10">ptr<pos:position pos:line="313" pos:column="13"/></name></expr>)<pos:position pos:line="313" pos:column="14"/></condition><then pos:line="313" pos:column="14"> <block pos:line="313" pos:column="15">{
        <comment type="block" pos:line="314" pos:column="9">/* we require a colon for this to be a true header */</comment>

        <expr_stmt><expr><name pos:line="316" pos:column="9">ptr<pos:position pos:line="316" pos:column="12"/></name><operator pos:line="316" pos:column="12">++<pos:position pos:line="316" pos:column="14"/></operator></expr>;<pos:position pos:line="316" pos:column="15"/></expr_stmt> <comment type="block" pos:line="316" pos:column="16">/* pass the colon */</comment>
        <while pos:line="317" pos:column="9">while<condition pos:line="317" pos:column="14">(<expr><operator pos:line="317" pos:column="15">*<pos:position pos:line="317" pos:column="16"/></operator><name pos:line="317" pos:column="16">ptr<pos:position pos:line="317" pos:column="19"/></name> <operator pos:line="317" pos:column="20">&amp;&amp;<pos:position pos:line="317" pos:column="30"/></operator> <call><name pos:line="317" pos:column="23">isspace<pos:position pos:line="317" pos:column="30"/></name><argument_list pos:line="317" pos:column="30">(<argument><expr><operator pos:line="317" pos:column="31">(<pos:position pos:line="317" pos:column="32"/></operator><name pos:line="317" pos:column="32">int<pos:position pos:line="317" pos:column="35"/></name><operator pos:line="317" pos:column="35">)<pos:position pos:line="317" pos:column="36"/></operator><operator pos:line="317" pos:column="36">*<pos:position pos:line="317" pos:column="37"/></operator><name pos:line="317" pos:column="37">ptr<pos:position pos:line="317" pos:column="40"/></name></expr></argument>)<pos:position pos:line="317" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="317" pos:column="42"/></condition>
          <block type="pseudo"><expr_stmt><expr><name pos:line="318" pos:column="11">ptr<pos:position pos:line="318" pos:column="14"/></name><operator pos:line="318" pos:column="14">++<pos:position pos:line="318" pos:column="16"/></operator></expr>;<pos:position pos:line="318" pos:column="17"/></expr_stmt></block></while>

        <if pos:line="320" pos:column="9">if<condition pos:line="320" pos:column="11">(<expr><operator pos:line="320" pos:column="12">*<pos:position pos:line="320" pos:column="13"/></operator><name pos:line="320" pos:column="13">ptr<pos:position pos:line="320" pos:column="16"/></name></expr>)<pos:position pos:line="320" pos:column="17"/></condition><then pos:line="320" pos:column="17"> <block pos:line="320" pos:column="18">{
          <comment type="block" pos:line="321" pos:column="11">/* only send this if the contents was non-blank */</comment>

          <expr_stmt><expr><call><name pos:line="323" pos:column="11">add_bufferf<pos:position pos:line="323" pos:column="22"/></name><argument_list pos:line="323" pos:column="22">(<argument><expr><name pos:line="323" pos:column="23">req_buffer<pos:position pos:line="323" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="323" pos:column="35">"%s\r\n"<pos:position pos:line="323" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="323" pos:column="45">headers<pos:position pos:line="323" pos:column="52"/></name><operator pos:line="323" pos:column="52">-&gt;<pos:position pos:line="323" pos:column="57"/></operator><name pos:line="323" pos:column="54">data<pos:position pos:line="323" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="323" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="324" pos:column="10"/></block></then></if>
      }<pos:position pos:line="325" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="326" pos:column="7">headers<pos:position pos:line="326" pos:column="14"/></name> <operator pos:line="326" pos:column="15">=<pos:position pos:line="326" pos:column="16"/></operator> <name><name pos:line="326" pos:column="17">headers<pos:position pos:line="326" pos:column="24"/></name><operator pos:line="326" pos:column="24">-&gt;<pos:position pos:line="326" pos:column="29"/></operator><name pos:line="326" pos:column="26">next<pos:position pos:line="326" pos:column="30"/></name></name></expr>;<pos:position pos:line="326" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="327" pos:column="6"/></block></while>

    <if pos:line="329" pos:column="5">if<condition pos:line="329" pos:column="7">(<expr><name pos:line="329" pos:column="8">HTTPREQ_POST_FORM<pos:position pos:line="329" pos:column="25"/></name> <operator pos:line="329" pos:column="26">==<pos:position pos:line="329" pos:column="28"/></operator> <name><name pos:line="329" pos:column="29">data<pos:position pos:line="329" pos:column="33"/></name><operator pos:line="329" pos:column="33">-&gt;<pos:position pos:line="329" pos:column="38"/></operator><name pos:line="329" pos:column="35">set<pos:position pos:line="329" pos:column="38"/></name><operator pos:line="329" pos:column="38">.<pos:position pos:line="329" pos:column="39"/></operator><name pos:line="329" pos:column="39">httpreq<pos:position pos:line="329" pos:column="46"/></name></name></expr>)<pos:position pos:line="329" pos:column="47"/></condition><then pos:line="329" pos:column="47"> <block pos:line="329" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="330" pos:column="7">char<pos:position pos:line="330" pos:column="11"/></name></type> <name><name pos:line="330" pos:column="12">contentType<pos:position pos:line="330" pos:column="23"/></name><index pos:line="330" pos:column="23">[<expr><literal type="number" pos:line="330" pos:column="24">256<pos:position pos:line="330" pos:column="27"/></literal></expr>]<pos:position pos:line="330" pos:column="28"/></index></name></decl>;<pos:position pos:line="330" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="331" pos:column="7">int<pos:position pos:line="331" pos:column="10"/></name></type> <name pos:line="331" pos:column="11">linelength<pos:position pos:line="331" pos:column="21"/></name><init pos:line="331" pos:column="21">=<expr><literal type="number" pos:line="331" pos:column="22">0<pos:position pos:line="331" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="331" pos:column="24"/></decl_stmt>
      <if pos:line="332" pos:column="7">if<condition pos:line="332" pos:column="9">(<expr><call><name pos:line="332" pos:column="10">Curl_FormInit<pos:position pos:line="332" pos:column="23"/></name><argument_list pos:line="332" pos:column="23">(<argument><expr><operator pos:line="332" pos:column="24">&amp;<pos:position pos:line="332" pos:column="29"/></operator><name><name pos:line="332" pos:column="25">http<pos:position pos:line="332" pos:column="29"/></name><operator pos:line="332" pos:column="29">-&gt;<pos:position pos:line="332" pos:column="34"/></operator><name pos:line="332" pos:column="31">form<pos:position pos:line="332" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="332" pos:column="37">http<pos:position pos:line="332" pos:column="41"/></name><operator pos:line="332" pos:column="41">-&gt;<pos:position pos:line="332" pos:column="46"/></operator><name pos:line="332" pos:column="43">sendit<pos:position pos:line="332" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="332" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="332" pos:column="51"/></condition><then pos:line="332" pos:column="51"> <block pos:line="332" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="333" pos:column="9">failf<pos:position pos:line="333" pos:column="14"/></name><argument_list pos:line="333" pos:column="14">(<argument><expr><name pos:line="333" pos:column="15">data<pos:position pos:line="333" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="21">"Internal HTTP POST error!\n"<pos:position pos:line="333" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="52"/></expr_stmt>
        <return pos:line="334" pos:column="9">return <expr><name pos:line="334" pos:column="16">CURLE_HTTP_POST_ERROR<pos:position pos:line="334" pos:column="37"/></name></expr>;<pos:position pos:line="334" pos:column="38"/></return>
      }<pos:position pos:line="335" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="337" pos:column="7">http<pos:position pos:line="337" pos:column="11"/></name><operator pos:line="337" pos:column="11">-&gt;<pos:position pos:line="337" pos:column="16"/></operator><name pos:line="337" pos:column="13">storefread<pos:position pos:line="337" pos:column="23"/></name></name> <operator pos:line="337" pos:column="24">=<pos:position pos:line="337" pos:column="25"/></operator> <name><name pos:line="337" pos:column="26">data<pos:position pos:line="337" pos:column="30"/></name><operator pos:line="337" pos:column="30">-&gt;<pos:position pos:line="337" pos:column="35"/></operator><name pos:line="337" pos:column="32">set<pos:position pos:line="337" pos:column="35"/></name><operator pos:line="337" pos:column="35">.<pos:position pos:line="337" pos:column="36"/></operator><name pos:line="337" pos:column="36">fread<pos:position pos:line="337" pos:column="41"/></name></name></expr>;<pos:position pos:line="337" pos:column="42"/></expr_stmt> <comment type="block" pos:line="337" pos:column="43">/* backup */</comment>
      <expr_stmt><expr><name><name pos:line="338" pos:column="7">http<pos:position pos:line="338" pos:column="11"/></name><operator pos:line="338" pos:column="11">-&gt;<pos:position pos:line="338" pos:column="16"/></operator><name pos:line="338" pos:column="13">in<pos:position pos:line="338" pos:column="15"/></name></name> <operator pos:line="338" pos:column="16">=<pos:position pos:line="338" pos:column="17"/></operator> <name><name pos:line="338" pos:column="18">data<pos:position pos:line="338" pos:column="22"/></name><operator pos:line="338" pos:column="22">-&gt;<pos:position pos:line="338" pos:column="27"/></operator><name pos:line="338" pos:column="24">set<pos:position pos:line="338" pos:column="27"/></name><operator pos:line="338" pos:column="27">.<pos:position pos:line="338" pos:column="28"/></operator><name pos:line="338" pos:column="28">in<pos:position pos:line="338" pos:column="30"/></name></name></expr>;<pos:position pos:line="338" pos:column="31"/></expr_stmt> <comment type="block" pos:line="338" pos:column="32">/* backup */</comment>
          
      <expr_stmt><expr><name><name pos:line="340" pos:column="7">data<pos:position pos:line="340" pos:column="11"/></name><operator pos:line="340" pos:column="11">-&gt;<pos:position pos:line="340" pos:column="16"/></operator><name pos:line="340" pos:column="13">set<pos:position pos:line="340" pos:column="16"/></name><operator pos:line="340" pos:column="16">.<pos:position pos:line="340" pos:column="17"/></operator><name pos:line="340" pos:column="17">fread<pos:position pos:line="340" pos:column="22"/></name></name> <operator pos:line="340" pos:column="23">=<pos:position pos:line="340" pos:column="24"/></operator> <operator pos:line="340" pos:column="25">(<pos:position pos:line="340" pos:column="26"/></operator><name pos:line="340" pos:column="26">curl_read_callback<pos:position pos:line="340" pos:column="44"/></name><operator pos:line="340" pos:column="44">)<pos:position pos:line="340" pos:column="45"/></operator>
        <name pos:line="341" pos:column="9">Curl_FormReader<pos:position pos:line="341" pos:column="24"/></name></expr>;<pos:position pos:line="341" pos:column="25"/></expr_stmt> <comment type="block" pos:line="341" pos:column="26">/* set the read function to read from the
                            generated form data */</comment>
      <expr_stmt><expr><name><name pos:line="343" pos:column="7">data<pos:position pos:line="343" pos:column="11"/></name><operator pos:line="343" pos:column="11">-&gt;<pos:position pos:line="343" pos:column="16"/></operator><name pos:line="343" pos:column="13">set<pos:position pos:line="343" pos:column="16"/></name><operator pos:line="343" pos:column="16">.<pos:position pos:line="343" pos:column="17"/></operator><name pos:line="343" pos:column="17">in<pos:position pos:line="343" pos:column="19"/></name></name> <operator pos:line="343" pos:column="20">=<pos:position pos:line="343" pos:column="21"/></operator> <operator pos:line="343" pos:column="22">(<pos:position pos:line="343" pos:column="23"/></operator><name pos:line="343" pos:column="23">FILE<pos:position pos:line="343" pos:column="27"/></name> <operator pos:line="343" pos:column="28">*<pos:position pos:line="343" pos:column="29"/></operator><operator pos:line="343" pos:column="29">)<pos:position pos:line="343" pos:column="30"/></operator><operator pos:line="343" pos:column="30">&amp;<pos:position pos:line="343" pos:column="35"/></operator><name><name pos:line="343" pos:column="31">http<pos:position pos:line="343" pos:column="35"/></name><operator pos:line="343" pos:column="35">-&gt;<pos:position pos:line="343" pos:column="40"/></operator><name pos:line="343" pos:column="37">form<pos:position pos:line="343" pos:column="41"/></name></name></expr>;<pos:position pos:line="343" pos:column="42"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="345" pos:column="7">add_bufferf<pos:position pos:line="345" pos:column="18"/></name><argument_list pos:line="345" pos:column="18">(<argument><expr><name pos:line="345" pos:column="19">req_buffer<pos:position pos:line="345" pos:column="29"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="346" pos:column="19">"Content-Length: %d\r\n"<pos:position pos:line="346" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="45">http<pos:position pos:line="346" pos:column="49"/></name><operator pos:line="346" pos:column="49">-&gt;<pos:position pos:line="346" pos:column="54"/></operator><name pos:line="346" pos:column="51">postsize<pos:position pos:line="346" pos:column="59"/></name></name><operator pos:line="346" pos:column="59">-<pos:position pos:line="346" pos:column="60"/></operator><literal type="number" pos:line="346" pos:column="60">2<pos:position pos:line="346" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="63"/></expr_stmt>

      <if pos:line="348" pos:column="7">if<condition pos:line="348" pos:column="9">(<expr><operator pos:line="348" pos:column="10">!<pos:position pos:line="348" pos:column="11"/></operator><call><name pos:line="348" pos:column="11">checkheaders<pos:position pos:line="348" pos:column="23"/></name><argument_list pos:line="348" pos:column="23">(<argument><expr><name pos:line="348" pos:column="24">data<pos:position pos:line="348" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="30">"Expect:"<pos:position pos:line="348" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="348" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="348" pos:column="41"/></condition><then pos:line="348" pos:column="41"> <block pos:line="348" pos:column="42">{
        <comment type="block" pos:line="349" pos:column="9">/* if not disabled explicitly we add a Expect: 100-continue
           to the headers which actually speeds up post operations (as
           there is one packet coming back from the web server) */</comment>
        <expr_stmt><expr><call><name pos:line="352" pos:column="9">add_bufferf<pos:position pos:line="352" pos:column="20"/></name><argument_list pos:line="352" pos:column="20">(<argument><expr><name pos:line="352" pos:column="21">req_buffer<pos:position pos:line="352" pos:column="31"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="353" pos:column="21">"Expect: 100-continue\r\n"<pos:position pos:line="353" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="354" pos:column="9">data<pos:position pos:line="354" pos:column="13"/></name><operator pos:line="354" pos:column="13">-&gt;<pos:position pos:line="354" pos:column="18"/></operator><name pos:line="354" pos:column="15">set<pos:position pos:line="354" pos:column="18"/></name><operator pos:line="354" pos:column="18">.<pos:position pos:line="354" pos:column="19"/></operator><name pos:line="354" pos:column="19">expect100header<pos:position pos:line="354" pos:column="34"/></name></name> <operator pos:line="354" pos:column="35">=<pos:position pos:line="354" pos:column="36"/></operator> <name pos:line="354" pos:column="37">TRUE<pos:position pos:line="354" pos:column="41"/></name></expr>;<pos:position pos:line="354" pos:column="42"/></expr_stmt>

        <comment type="block" pos:line="356" pos:column="9">/* Get Content-Type: line from Curl_FormReadOneLine, which happens
           to always be the first line. We can know this for sure since
           we always build the formpost linked list the same way! */</comment>
        <expr_stmt><expr><name pos:line="359" pos:column="9">linelength<pos:position pos:line="359" pos:column="19"/></name> <operator pos:line="359" pos:column="20">=<pos:position pos:line="359" pos:column="21"/></operator> <call><name pos:line="359" pos:column="22">Curl_FormReadOneLine<pos:position pos:line="359" pos:column="42"/></name> <argument_list pos:line="359" pos:column="43">(<argument><expr><name pos:line="359" pos:column="44">contentType<pos:position pos:line="359" pos:column="55"/></name></expr></argument>,
                                           <argument><expr><sizeof pos:line="360" pos:column="44">sizeof<argument_list pos:line="360" pos:column="50">(<argument><expr><name pos:line="360" pos:column="51">contentType<pos:position pos:line="360" pos:column="62"/></name></expr></argument>)<pos:position pos:line="360" pos:column="63"/></argument_list></sizeof></expr></argument>,
                                           <argument><expr><literal type="number" pos:line="361" pos:column="44">1<pos:position pos:line="361" pos:column="45"/></literal></expr></argument>,
                                           <argument><expr><operator pos:line="362" pos:column="44">(<pos:position pos:line="362" pos:column="45"/></operator><name pos:line="362" pos:column="45">FILE<pos:position pos:line="362" pos:column="49"/></name> <operator pos:line="362" pos:column="50">*<pos:position pos:line="362" pos:column="51"/></operator><operator pos:line="362" pos:column="51">)<pos:position pos:line="362" pos:column="52"/></operator><operator pos:line="362" pos:column="52">&amp;<pos:position pos:line="362" pos:column="57"/></operator><name><name pos:line="362" pos:column="53">http<pos:position pos:line="362" pos:column="57"/></name><operator pos:line="362" pos:column="57">-&gt;<pos:position pos:line="362" pos:column="62"/></operator><name pos:line="362" pos:column="59">form<pos:position pos:line="362" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="362" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="65"/></expr_stmt>
        <if pos:line="363" pos:column="9">if<condition pos:line="363" pos:column="11">(<expr><name pos:line="363" pos:column="12">linelength<pos:position pos:line="363" pos:column="22"/></name> <operator pos:line="363" pos:column="23">==<pos:position pos:line="363" pos:column="25"/></operator> <operator pos:line="363" pos:column="26">-<pos:position pos:line="363" pos:column="27"/></operator><literal type="number" pos:line="363" pos:column="27">1<pos:position pos:line="363" pos:column="28"/></literal></expr>)<pos:position pos:line="363" pos:column="29"/></condition><then pos:line="363" pos:column="29"> <block pos:line="363" pos:column="30">{
          <expr_stmt><expr><call><name pos:line="364" pos:column="11">failf<pos:position pos:line="364" pos:column="16"/></name><argument_list pos:line="364" pos:column="16">(<argument><expr><name pos:line="364" pos:column="17">data<pos:position pos:line="364" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="364" pos:column="23">"Could not get Content-Type header line!\n"<pos:position pos:line="364" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="68"/></expr_stmt>
          <return pos:line="365" pos:column="11">return <expr><name pos:line="365" pos:column="18">CURLE_HTTP_POST_ERROR<pos:position pos:line="365" pos:column="39"/></name></expr>;<pos:position pos:line="365" pos:column="40"/></return>
        }<pos:position pos:line="366" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="367" pos:column="9">add_buffer<pos:position pos:line="367" pos:column="19"/></name><argument_list pos:line="367" pos:column="19">(<argument><expr><name pos:line="367" pos:column="20">req_buffer<pos:position pos:line="367" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="32">contentType<pos:position pos:line="367" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="45">linelength<pos:position pos:line="367" pos:column="55"/></name></expr></argument>)<pos:position pos:line="367" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="368" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="370" pos:column="7">/* set upload size to the progress meter */</comment>
      <expr_stmt><expr><call><name pos:line="371" pos:column="7">Curl_pgrsSetUploadSize<pos:position pos:line="371" pos:column="29"/></name><argument_list pos:line="371" pos:column="29">(<argument><expr><name pos:line="371" pos:column="30">data<pos:position pos:line="371" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="371" pos:column="36">http<pos:position pos:line="371" pos:column="40"/></name><operator pos:line="371" pos:column="40">-&gt;<pos:position pos:line="371" pos:column="45"/></operator><name pos:line="371" pos:column="42">postsize<pos:position pos:line="371" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="371" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="52"/></expr_stmt>

      <comment type="block" pos:line="373" pos:column="7">/* fire away the whole request to the server */</comment>
      <expr_stmt><expr><name><name pos:line="374" pos:column="7">data<pos:position pos:line="374" pos:column="11"/></name><operator pos:line="374" pos:column="11">-&gt;<pos:position pos:line="374" pos:column="16"/></operator><name pos:line="374" pos:column="13">info<pos:position pos:line="374" pos:column="17"/></name><operator pos:line="374" pos:column="17">.<pos:position pos:line="374" pos:column="18"/></operator><name pos:line="374" pos:column="18">request_size<pos:position pos:line="374" pos:column="30"/></name></name> <operator pos:line="374" pos:column="31">=<pos:position pos:line="374" pos:column="32"/></operator> 
        <call><name pos:line="375" pos:column="9">add_buffer_send<pos:position pos:line="375" pos:column="24"/></name><argument_list pos:line="375" pos:column="24">(<argument><expr><name><name pos:line="375" pos:column="25">conn<pos:position pos:line="375" pos:column="29"/></name><operator pos:line="375" pos:column="29">-&gt;<pos:position pos:line="375" pos:column="34"/></operator><name pos:line="375" pos:column="31">firstsocket<pos:position pos:line="375" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="44">conn<pos:position pos:line="375" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="50">req_buffer<pos:position pos:line="375" pos:column="60"/></name></expr></argument>)<pos:position pos:line="375" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="62"/></expr_stmt>

      <comment type="block" pos:line="377" pos:column="7">/* setup variables for the upcoming transfer */</comment>
      <expr_stmt><expr><name pos:line="378" pos:column="7">result<pos:position pos:line="378" pos:column="13"/></name> <operator pos:line="378" pos:column="14">=<pos:position pos:line="378" pos:column="15"/></operator> <call><name pos:line="378" pos:column="16">Curl_Transfer<pos:position pos:line="378" pos:column="29"/></name><argument_list pos:line="378" pos:column="29">(<argument><expr><name pos:line="378" pos:column="30">conn<pos:position pos:line="378" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="378" pos:column="36">conn<pos:position pos:line="378" pos:column="40"/></name><operator pos:line="378" pos:column="40">-&gt;<pos:position pos:line="378" pos:column="45"/></operator><name pos:line="378" pos:column="42">firstsocket<pos:position pos:line="378" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="378" pos:column="55">-<pos:position pos:line="378" pos:column="56"/></operator><literal type="number" pos:line="378" pos:column="56">1<pos:position pos:line="378" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="378" pos:column="59">TRUE<pos:position pos:line="378" pos:column="63"/></name></expr></argument>,
                             <argument><expr><operator pos:line="379" pos:column="30">&amp;<pos:position pos:line="379" pos:column="35"/></operator><name><name pos:line="379" pos:column="31">http<pos:position pos:line="379" pos:column="35"/></name><operator pos:line="379" pos:column="35">-&gt;<pos:position pos:line="379" pos:column="40"/></operator><name pos:line="379" pos:column="37">readbytecount<pos:position pos:line="379" pos:column="50"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="380" pos:column="30">conn<pos:position pos:line="380" pos:column="34"/></name><operator pos:line="380" pos:column="34">-&gt;<pos:position pos:line="380" pos:column="39"/></operator><name pos:line="380" pos:column="36">firstsocket<pos:position pos:line="380" pos:column="47"/></name></name></expr></argument>,
                             <argument><expr><operator pos:line="381" pos:column="30">&amp;<pos:position pos:line="381" pos:column="35"/></operator><name><name pos:line="381" pos:column="31">http<pos:position pos:line="381" pos:column="35"/></name><operator pos:line="381" pos:column="35">-&gt;<pos:position pos:line="381" pos:column="40"/></operator><name pos:line="381" pos:column="37">writebytecount<pos:position pos:line="381" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="381" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="53"/></expr_stmt>
      <if pos:line="382" pos:column="7">if<condition pos:line="382" pos:column="9">(<expr><name pos:line="382" pos:column="10">result<pos:position pos:line="382" pos:column="16"/></name></expr>)<pos:position pos:line="382" pos:column="17"/></condition><then pos:line="382" pos:column="17"> <block pos:line="382" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="383" pos:column="9">Curl_formclean<pos:position pos:line="383" pos:column="23"/></name><argument_list pos:line="383" pos:column="23">(<argument><expr><name><name pos:line="383" pos:column="24">http<pos:position pos:line="383" pos:column="28"/></name><operator pos:line="383" pos:column="28">-&gt;<pos:position pos:line="383" pos:column="33"/></operator><name pos:line="383" pos:column="30">sendit<pos:position pos:line="383" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="383" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="38"/></expr_stmt> <comment type="block" pos:line="383" pos:column="39">/* free that whole lot */</comment>
        <return pos:line="384" pos:column="9">return <expr><name pos:line="384" pos:column="16">result<pos:position pos:line="384" pos:column="22"/></name></expr>;<pos:position pos:line="384" pos:column="23"/></return>
      }<pos:position pos:line="385" pos:column="8"/></block></then></if>
    }<pos:position pos:line="386" pos:column="6"/></block></then>
    <elseif pos:line="387" pos:column="5">else <if pos:line="387" pos:column="10">if<condition pos:line="387" pos:column="12">(<expr><name pos:line="387" pos:column="13">HTTPREQ_PUT<pos:position pos:line="387" pos:column="24"/></name> <operator pos:line="387" pos:column="25">==<pos:position pos:line="387" pos:column="27"/></operator> <name><name pos:line="387" pos:column="28">data<pos:position pos:line="387" pos:column="32"/></name><operator pos:line="387" pos:column="32">-&gt;<pos:position pos:line="387" pos:column="37"/></operator><name pos:line="387" pos:column="34">set<pos:position pos:line="387" pos:column="37"/></name><operator pos:line="387" pos:column="37">.<pos:position pos:line="387" pos:column="38"/></operator><name pos:line="387" pos:column="38">httpreq<pos:position pos:line="387" pos:column="45"/></name></name></expr>)<pos:position pos:line="387" pos:column="46"/></condition><then pos:line="387" pos:column="46"> <block pos:line="387" pos:column="47">{
      <comment type="block" pos:line="388" pos:column="7">/* Let's PUT the data to the server! */</comment>

      <if pos:line="390" pos:column="7">if<condition pos:line="390" pos:column="9">(<expr><name><name pos:line="390" pos:column="10">data<pos:position pos:line="390" pos:column="14"/></name><operator pos:line="390" pos:column="14">-&gt;<pos:position pos:line="390" pos:column="19"/></operator><name pos:line="390" pos:column="16">set<pos:position pos:line="390" pos:column="19"/></name><operator pos:line="390" pos:column="19">.<pos:position pos:line="390" pos:column="20"/></operator><name pos:line="390" pos:column="20">infilesize<pos:position pos:line="390" pos:column="30"/></name></name><operator pos:line="390" pos:column="30">&gt;<pos:position pos:line="390" pos:column="34"/></operator><literal type="number" pos:line="390" pos:column="31">0<pos:position pos:line="390" pos:column="32"/></literal></expr>)<pos:position pos:line="390" pos:column="33"/></condition><then pos:line="390" pos:column="33"> <block pos:line="390" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="391" pos:column="9">add_bufferf<pos:position pos:line="391" pos:column="20"/></name><argument_list pos:line="391" pos:column="20">(<argument><expr><name pos:line="391" pos:column="21">req_buffer<pos:position pos:line="391" pos:column="31"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="392" pos:column="21">"Content-Length: %d\r\n\r\n"<pos:position pos:line="392" pos:column="49"/></literal></expr></argument>, <comment type="block" pos:line="392" pos:column="51">/* file size */</comment>
                    <argument><expr><name><name pos:line="393" pos:column="21">data<pos:position pos:line="393" pos:column="25"/></name><operator pos:line="393" pos:column="25">-&gt;<pos:position pos:line="393" pos:column="30"/></operator><name pos:line="393" pos:column="27">set<pos:position pos:line="393" pos:column="30"/></name><operator pos:line="393" pos:column="30">.<pos:position pos:line="393" pos:column="31"/></operator><name pos:line="393" pos:column="31">infilesize<pos:position pos:line="393" pos:column="41"/></name></name></expr></argument> )<pos:position pos:line="393" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="394" pos:column="8"/></block></then>
      <else pos:line="395" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="396" pos:column="9">add_bufferf<pos:position pos:line="396" pos:column="20"/></name><argument_list pos:line="396" pos:column="20">(<argument><expr><name pos:line="396" pos:column="21">req_buffer<pos:position pos:line="396" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="396" pos:column="33">"\015\012"<pos:position pos:line="396" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="396" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="45"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="398" pos:column="7">/* set the upload size to the progress meter */</comment>
      <expr_stmt><expr><call><name pos:line="399" pos:column="7">Curl_pgrsSetUploadSize<pos:position pos:line="399" pos:column="29"/></name><argument_list pos:line="399" pos:column="29">(<argument><expr><name pos:line="399" pos:column="30">data<pos:position pos:line="399" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="399" pos:column="36">data<pos:position pos:line="399" pos:column="40"/></name><operator pos:line="399" pos:column="40">-&gt;<pos:position pos:line="399" pos:column="45"/></operator><name pos:line="399" pos:column="42">set<pos:position pos:line="399" pos:column="45"/></name><operator pos:line="399" pos:column="45">.<pos:position pos:line="399" pos:column="46"/></operator><name pos:line="399" pos:column="46">infilesize<pos:position pos:line="399" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="399" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="399" pos:column="58"/></expr_stmt>

      <comment type="block" pos:line="401" pos:column="7">/* this sends the buffer and frees all the buffer resources */</comment>
      <expr_stmt><expr><name><name pos:line="402" pos:column="7">data<pos:position pos:line="402" pos:column="11"/></name><operator pos:line="402" pos:column="11">-&gt;<pos:position pos:line="402" pos:column="16"/></operator><name pos:line="402" pos:column="13">info<pos:position pos:line="402" pos:column="17"/></name><operator pos:line="402" pos:column="17">.<pos:position pos:line="402" pos:column="18"/></operator><name pos:line="402" pos:column="18">request_size<pos:position pos:line="402" pos:column="30"/></name></name> <operator pos:line="402" pos:column="31">=<pos:position pos:line="402" pos:column="32"/></operator> 
        <call><name pos:line="403" pos:column="9">add_buffer_send<pos:position pos:line="403" pos:column="24"/></name><argument_list pos:line="403" pos:column="24">(<argument><expr><name><name pos:line="403" pos:column="25">conn<pos:position pos:line="403" pos:column="29"/></name><operator pos:line="403" pos:column="29">-&gt;<pos:position pos:line="403" pos:column="34"/></operator><name pos:line="403" pos:column="31">firstsocket<pos:position pos:line="403" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="44">conn<pos:position pos:line="403" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="50">req_buffer<pos:position pos:line="403" pos:column="60"/></name></expr></argument>)<pos:position pos:line="403" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="62"/></expr_stmt>

      <comment type="block" pos:line="405" pos:column="7">/* prepare for transfer */</comment>
      <expr_stmt><expr><name pos:line="406" pos:column="7">result<pos:position pos:line="406" pos:column="13"/></name> <operator pos:line="406" pos:column="14">=<pos:position pos:line="406" pos:column="15"/></operator> <call><name pos:line="406" pos:column="16">Curl_Transfer<pos:position pos:line="406" pos:column="29"/></name><argument_list pos:line="406" pos:column="29">(<argument><expr><name pos:line="406" pos:column="30">conn<pos:position pos:line="406" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="406" pos:column="36">conn<pos:position pos:line="406" pos:column="40"/></name><operator pos:line="406" pos:column="40">-&gt;<pos:position pos:line="406" pos:column="45"/></operator><name pos:line="406" pos:column="42">firstsocket<pos:position pos:line="406" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="406" pos:column="55">-<pos:position pos:line="406" pos:column="56"/></operator><literal type="number" pos:line="406" pos:column="56">1<pos:position pos:line="406" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="406" pos:column="59">TRUE<pos:position pos:line="406" pos:column="63"/></name></expr></argument>,
                        <argument><expr><operator pos:line="407" pos:column="25">&amp;<pos:position pos:line="407" pos:column="30"/></operator><name><name pos:line="407" pos:column="26">http<pos:position pos:line="407" pos:column="30"/></name><operator pos:line="407" pos:column="30">-&gt;<pos:position pos:line="407" pos:column="35"/></operator><name pos:line="407" pos:column="32">readbytecount<pos:position pos:line="407" pos:column="45"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="408" pos:column="25">conn<pos:position pos:line="408" pos:column="29"/></name><operator pos:line="408" pos:column="29">-&gt;<pos:position pos:line="408" pos:column="34"/></operator><name pos:line="408" pos:column="31">firstsocket<pos:position pos:line="408" pos:column="42"/></name></name></expr></argument>,
                        <argument><expr><operator pos:line="409" pos:column="25">&amp;<pos:position pos:line="409" pos:column="30"/></operator><name><name pos:line="409" pos:column="26">http<pos:position pos:line="409" pos:column="30"/></name><operator pos:line="409" pos:column="30">-&gt;<pos:position pos:line="409" pos:column="35"/></operator><name pos:line="409" pos:column="32">writebytecount<pos:position pos:line="409" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="409" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="48"/></expr_stmt>
      <if pos:line="410" pos:column="7">if<condition pos:line="410" pos:column="9">(<expr><name pos:line="410" pos:column="10">result<pos:position pos:line="410" pos:column="16"/></name></expr>)<pos:position pos:line="410" pos:column="17"/></condition><then pos:line="410" pos:column="17">
        <block type="pseudo"><return pos:line="411" pos:column="9">return <expr><name pos:line="411" pos:column="16">result<pos:position pos:line="411" pos:column="22"/></name></expr>;<pos:position pos:line="411" pos:column="23"/></return></block></then></if>
      
    }<pos:position pos:line="413" pos:column="6"/></block></then></if></elseif>
    <else pos:line="414" pos:column="5">else <block pos:line="414" pos:column="10">{
      <if pos:line="415" pos:column="7">if<condition pos:line="415" pos:column="9">(<expr><name pos:line="415" pos:column="10">HTTPREQ_POST<pos:position pos:line="415" pos:column="22"/></name> <operator pos:line="415" pos:column="23">==<pos:position pos:line="415" pos:column="25"/></operator> <name><name pos:line="415" pos:column="26">data<pos:position pos:line="415" pos:column="30"/></name><operator pos:line="415" pos:column="30">-&gt;<pos:position pos:line="415" pos:column="35"/></operator><name pos:line="415" pos:column="32">set<pos:position pos:line="415" pos:column="35"/></name><operator pos:line="415" pos:column="35">.<pos:position pos:line="415" pos:column="36"/></operator><name pos:line="415" pos:column="36">httpreq<pos:position pos:line="415" pos:column="43"/></name></name></expr>)<pos:position pos:line="415" pos:column="44"/></condition><then pos:line="415" pos:column="44"> <block pos:line="415" pos:column="45">{
        <comment type="block" pos:line="416" pos:column="9">/* this is the simple POST, using x-www-form-urlencoded style */</comment>

        <if pos:line="418" pos:column="9">if<condition pos:line="418" pos:column="11">(<expr><operator pos:line="418" pos:column="12">!<pos:position pos:line="418" pos:column="13"/></operator><name><name pos:line="418" pos:column="13">data<pos:position pos:line="418" pos:column="17"/></name><operator pos:line="418" pos:column="17">-&gt;<pos:position pos:line="418" pos:column="22"/></operator><name pos:line="418" pos:column="19">set<pos:position pos:line="418" pos:column="22"/></name><operator pos:line="418" pos:column="22">.<pos:position pos:line="418" pos:column="23"/></operator><name pos:line="418" pos:column="23">postfields<pos:position pos:line="418" pos:column="33"/></name></name></expr>)<pos:position pos:line="418" pos:column="34"/></condition><then pos:line="418" pos:column="34"> <block pos:line="418" pos:column="35">{
          <comment type="block" pos:line="419" pos:column="11">/*
           * This is an attempt to do a POST without having anything to
           * actually send. Let's make a NULL pointer equal "" here. Good/bad
           * ?
           */</comment>
          <expr_stmt><expr><name><name pos:line="424" pos:column="11">data<pos:position pos:line="424" pos:column="15"/></name><operator pos:line="424" pos:column="15">-&gt;<pos:position pos:line="424" pos:column="20"/></operator><name pos:line="424" pos:column="17">set<pos:position pos:line="424" pos:column="20"/></name><operator pos:line="424" pos:column="20">.<pos:position pos:line="424" pos:column="21"/></operator><name pos:line="424" pos:column="21">postfields<pos:position pos:line="424" pos:column="31"/></name></name> <operator pos:line="424" pos:column="32">=<pos:position pos:line="424" pos:column="33"/></operator> <operator pos:line="424" pos:column="34">(<pos:position pos:line="424" pos:column="35"/></operator><name pos:line="424" pos:column="35">char<pos:position pos:line="424" pos:column="39"/></name> <operator pos:line="424" pos:column="40">*<pos:position pos:line="424" pos:column="41"/></operator><operator pos:line="424" pos:column="41">)<pos:position pos:line="424" pos:column="42"/></operator><literal type="string" pos:line="424" pos:column="42">""<pos:position pos:line="424" pos:column="44"/></literal></expr>;<pos:position pos:line="424" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="425" pos:column="11">data<pos:position pos:line="425" pos:column="15"/></name><operator pos:line="425" pos:column="15">-&gt;<pos:position pos:line="425" pos:column="20"/></operator><name pos:line="425" pos:column="17">set<pos:position pos:line="425" pos:column="20"/></name><operator pos:line="425" pos:column="20">.<pos:position pos:line="425" pos:column="21"/></operator><name pos:line="425" pos:column="21">postfieldsize<pos:position pos:line="425" pos:column="34"/></name></name> <operator pos:line="425" pos:column="35">=<pos:position pos:line="425" pos:column="36"/></operator> <literal type="number" pos:line="425" pos:column="37">0<pos:position pos:line="425" pos:column="38"/></literal></expr>;<pos:position pos:line="425" pos:column="39"/></expr_stmt> <comment type="block" pos:line="425" pos:column="40">/* it might been set to something illegal,
                                      anything &gt; 0 would be! */</comment>
        }<pos:position pos:line="427" pos:column="10"/></block></then></if>

        <if pos:line="429" pos:column="9">if<condition pos:line="429" pos:column="11">(<expr><operator pos:line="429" pos:column="12">!<pos:position pos:line="429" pos:column="13"/></operator><call><name pos:line="429" pos:column="13">checkheaders<pos:position pos:line="429" pos:column="25"/></name><argument_list pos:line="429" pos:column="25">(<argument><expr><name pos:line="429" pos:column="26">data<pos:position pos:line="429" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="429" pos:column="32">"Content-Length:"<pos:position pos:line="429" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="429" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="429" pos:column="51"/></condition><then pos:line="429" pos:column="51">
          <comment type="block" pos:line="430" pos:column="11">/* we allow replacing this header, although it isn't very wise to
             actually set your own */</comment>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="432" pos:column="11">add_bufferf<pos:position pos:line="432" pos:column="22"/></name><argument_list pos:line="432" pos:column="22">(<argument><expr><name pos:line="432" pos:column="23">req_buffer<pos:position pos:line="432" pos:column="33"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="433" pos:column="23">"Content-Length: %d\r\n"<pos:position pos:line="433" pos:column="47"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="434" pos:column="23">(<pos:position pos:line="434" pos:column="24"/></operator><ternary><condition><expr><name><name pos:line="434" pos:column="24">data<pos:position pos:line="434" pos:column="28"/></name><operator pos:line="434" pos:column="28">-&gt;<pos:position pos:line="434" pos:column="33"/></operator><name pos:line="434" pos:column="30">set<pos:position pos:line="434" pos:column="33"/></name><operator pos:line="434" pos:column="33">.<pos:position pos:line="434" pos:column="34"/></operator><name pos:line="434" pos:column="34">postfieldsize<pos:position pos:line="434" pos:column="47"/></name></name></expr>?<pos:position pos:line="434" pos:column="48"/></condition><then><expr><name><name pos:line="434" pos:column="48">data<pos:position pos:line="434" pos:column="52"/></name><operator pos:line="434" pos:column="52">-&gt;<pos:position pos:line="434" pos:column="57"/></operator><name pos:line="434" pos:column="54">set<pos:position pos:line="434" pos:column="57"/></name><operator pos:line="434" pos:column="57">.<pos:position pos:line="434" pos:column="58"/></operator><name pos:line="434" pos:column="58">postfieldsize<pos:position pos:line="434" pos:column="71"/></name></name></expr></then><else pos:line="434" pos:column="71">:
                       <expr><call><name pos:line="435" pos:column="24">strlen<pos:position pos:line="435" pos:column="30"/></name><argument_list pos:line="435" pos:column="30">(<argument><expr><name><name pos:line="435" pos:column="31">data<pos:position pos:line="435" pos:column="35"/></name><operator pos:line="435" pos:column="35">-&gt;<pos:position pos:line="435" pos:column="40"/></operator><name pos:line="435" pos:column="37">set<pos:position pos:line="435" pos:column="40"/></name><operator pos:line="435" pos:column="40">.<pos:position pos:line="435" pos:column="41"/></operator><name pos:line="435" pos:column="41">postfields<pos:position pos:line="435" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="435" pos:column="52"/></argument_list></call></expr></else></ternary><operator pos:line="435" pos:column="52">)<pos:position pos:line="435" pos:column="53"/></operator></expr></argument> )<pos:position pos:line="435" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="56"/></expr_stmt></block></then></if>

        <if pos:line="437" pos:column="9">if<condition pos:line="437" pos:column="11">(<expr><operator pos:line="437" pos:column="12">!<pos:position pos:line="437" pos:column="13"/></operator><call><name pos:line="437" pos:column="13">checkheaders<pos:position pos:line="437" pos:column="25"/></name><argument_list pos:line="437" pos:column="25">(<argument><expr><name pos:line="437" pos:column="26">data<pos:position pos:line="437" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="437" pos:column="32">"Content-Type:"<pos:position pos:line="437" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="437" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="437" pos:column="49"/></condition><then pos:line="437" pos:column="49">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="438" pos:column="11">add_bufferf<pos:position pos:line="438" pos:column="22"/></name><argument_list pos:line="438" pos:column="22">(<argument><expr><name pos:line="438" pos:column="23">req_buffer<pos:position pos:line="438" pos:column="33"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="439" pos:column="23">"Content-Type: application/x-www-form-urlencoded\r\n"<pos:position pos:line="439" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="78"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="441" pos:column="9">/* and here comes the actual data */</comment>
        <if pos:line="442" pos:column="9">if<condition pos:line="442" pos:column="11">(<expr><name><name pos:line="442" pos:column="12">data<pos:position pos:line="442" pos:column="16"/></name><operator pos:line="442" pos:column="16">-&gt;<pos:position pos:line="442" pos:column="21"/></operator><name pos:line="442" pos:column="18">set<pos:position pos:line="442" pos:column="21"/></name><operator pos:line="442" pos:column="21">.<pos:position pos:line="442" pos:column="22"/></operator><name pos:line="442" pos:column="22">postfieldsize<pos:position pos:line="442" pos:column="35"/></name></name></expr>)<pos:position pos:line="442" pos:column="36"/></condition><then pos:line="442" pos:column="36"> <block pos:line="442" pos:column="37">{
          <expr_stmt><expr><call><name pos:line="443" pos:column="11">add_buffer<pos:position pos:line="443" pos:column="21"/></name><argument_list pos:line="443" pos:column="21">(<argument><expr><name pos:line="443" pos:column="22">req_buffer<pos:position pos:line="443" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="443" pos:column="34">"\r\n"<pos:position pos:line="443" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="443" pos:column="42">2<pos:position pos:line="443" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="443" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="45"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="444" pos:column="11">add_buffer<pos:position pos:line="444" pos:column="21"/></name><argument_list pos:line="444" pos:column="21">(<argument><expr><name pos:line="444" pos:column="22">req_buffer<pos:position pos:line="444" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="444" pos:column="34">data<pos:position pos:line="444" pos:column="38"/></name><operator pos:line="444" pos:column="38">-&gt;<pos:position pos:line="444" pos:column="43"/></operator><name pos:line="444" pos:column="40">set<pos:position pos:line="444" pos:column="43"/></name><operator pos:line="444" pos:column="43">.<pos:position pos:line="444" pos:column="44"/></operator><name pos:line="444" pos:column="44">postfields<pos:position pos:line="444" pos:column="54"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="445" pos:column="22">data<pos:position pos:line="445" pos:column="26"/></name><operator pos:line="445" pos:column="26">-&gt;<pos:position pos:line="445" pos:column="31"/></operator><name pos:line="445" pos:column="28">set<pos:position pos:line="445" pos:column="31"/></name><operator pos:line="445" pos:column="31">.<pos:position pos:line="445" pos:column="32"/></operator><name pos:line="445" pos:column="32">postfieldsize<pos:position pos:line="445" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="445" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="47"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="446" pos:column="11">add_buffer<pos:position pos:line="446" pos:column="21"/></name><argument_list pos:line="446" pos:column="21">(<argument><expr><name pos:line="446" pos:column="22">req_buffer<pos:position pos:line="446" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="446" pos:column="34">"\r\n"<pos:position pos:line="446" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="446" pos:column="42">2<pos:position pos:line="446" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="446" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="447" pos:column="10"/></block></then>
        <else pos:line="448" pos:column="9">else <block pos:line="448" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="449" pos:column="11">add_bufferf<pos:position pos:line="449" pos:column="22"/></name><argument_list pos:line="449" pos:column="22">(<argument><expr><name pos:line="449" pos:column="23">req_buffer<pos:position pos:line="449" pos:column="33"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="450" pos:column="23">"\r\n"<pos:position pos:line="450" pos:column="29"/></literal>
                      <literal type="string" pos:line="451" pos:column="23">"%s\r\n"<pos:position pos:line="451" pos:column="31"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="452" pos:column="23">data<pos:position pos:line="452" pos:column="27"/></name><operator pos:line="452" pos:column="27">-&gt;<pos:position pos:line="452" pos:column="32"/></operator><name pos:line="452" pos:column="29">set<pos:position pos:line="452" pos:column="32"/></name><operator pos:line="452" pos:column="32">.<pos:position pos:line="452" pos:column="33"/></operator><name pos:line="452" pos:column="33">postfields<pos:position pos:line="452" pos:column="43"/></name></name></expr></argument> )<pos:position pos:line="452" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="453" pos:column="10"/></block></else></if>
      }<pos:position pos:line="454" pos:column="8"/></block></then>
      <else pos:line="455" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="456" pos:column="9">add_buffer<pos:position pos:line="456" pos:column="19"/></name><argument_list pos:line="456" pos:column="19">(<argument><expr><name pos:line="456" pos:column="20">req_buffer<pos:position pos:line="456" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="456" pos:column="32">"\r\n"<pos:position pos:line="456" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="456" pos:column="40">2<pos:position pos:line="456" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="456" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="43"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="458" pos:column="7">/* issue the request */</comment>
      <expr_stmt><expr><name><name pos:line="459" pos:column="7">data<pos:position pos:line="459" pos:column="11"/></name><operator pos:line="459" pos:column="11">-&gt;<pos:position pos:line="459" pos:column="16"/></operator><name pos:line="459" pos:column="13">info<pos:position pos:line="459" pos:column="17"/></name><operator pos:line="459" pos:column="17">.<pos:position pos:line="459" pos:column="18"/></operator><name pos:line="459" pos:column="18">request_size<pos:position pos:line="459" pos:column="30"/></name></name> <operator pos:line="459" pos:column="31">=<pos:position pos:line="459" pos:column="32"/></operator> 
        <call><name pos:line="460" pos:column="9">add_buffer_send<pos:position pos:line="460" pos:column="24"/></name><argument_list pos:line="460" pos:column="24">(<argument><expr><name><name pos:line="460" pos:column="25">conn<pos:position pos:line="460" pos:column="29"/></name><operator pos:line="460" pos:column="29">-&gt;<pos:position pos:line="460" pos:column="34"/></operator><name pos:line="460" pos:column="31">firstsocket<pos:position pos:line="460" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="44">conn<pos:position pos:line="460" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="50">req_buffer<pos:position pos:line="460" pos:column="60"/></name></expr></argument>)<pos:position pos:line="460" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="62"/></expr_stmt>

      <comment type="block" pos:line="462" pos:column="7">/* HTTP GET/HEAD download: */</comment>
      <expr_stmt><expr><name pos:line="463" pos:column="7">result<pos:position pos:line="463" pos:column="13"/></name> <operator pos:line="463" pos:column="14">=<pos:position pos:line="463" pos:column="15"/></operator> <call><name pos:line="463" pos:column="16">Curl_Transfer<pos:position pos:line="463" pos:column="29"/></name><argument_list pos:line="463" pos:column="29">(<argument><expr><name pos:line="463" pos:column="30">conn<pos:position pos:line="463" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="463" pos:column="36">conn<pos:position pos:line="463" pos:column="40"/></name><operator pos:line="463" pos:column="40">-&gt;<pos:position pos:line="463" pos:column="45"/></operator><name pos:line="463" pos:column="42">firstsocket<pos:position pos:line="463" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="463" pos:column="55">-<pos:position pos:line="463" pos:column="56"/></operator><literal type="number" pos:line="463" pos:column="56">1<pos:position pos:line="463" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="463" pos:column="59">TRUE<pos:position pos:line="463" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="65">bytecount<pos:position pos:line="463" pos:column="74"/></name></expr></argument>,
                        <argument><expr><operator pos:line="464" pos:column="25">-<pos:position pos:line="464" pos:column="26"/></operator><literal type="number" pos:line="464" pos:column="26">1<pos:position pos:line="464" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="464" pos:column="29">NULL<pos:position pos:line="464" pos:column="33"/></name></expr></argument>)<pos:position pos:line="464" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="464" pos:column="35"/></expr_stmt> <comment type="block" pos:line="464" pos:column="36">/* nothing to upload */</comment>
    }<pos:position pos:line="465" pos:column="6"/></block></else></if>
    <if pos:line="466" pos:column="5">if<condition pos:line="466" pos:column="7">(<expr><name pos:line="466" pos:column="8">result<pos:position pos:line="466" pos:column="14"/></name></expr>)<pos:position pos:line="466" pos:column="15"/></condition><then pos:line="466" pos:column="15">
      <block type="pseudo"><return pos:line="467" pos:column="7">return <expr><name pos:line="467" pos:column="14">result<pos:position pos:line="467" pos:column="20"/></name></expr>;<pos:position pos:line="467" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="468" pos:column="4"/></block> while <condition pos:line="468" pos:column="11">(<expr><literal type="number" pos:line="468" pos:column="12">0<pos:position pos:line="468" pos:column="13"/></literal></expr>)<pos:position pos:line="468" pos:column="14"/></condition>;<pos:position pos:line="468" pos:column="15"/></do> <comment type="block" pos:line="468" pos:column="16">/* this is just a left-over from the multiple document download
                  attempts */</comment>

  <return pos:line="471" pos:column="3">return <expr><name pos:line="471" pos:column="10">CURLE_OK<pos:position pos:line="471" pos:column="18"/></name></expr>;<pos:position pos:line="471" pos:column="19"/></return>
}<pos:position pos:line="472" pos:column="2"/></block></function></unit>

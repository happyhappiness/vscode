<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_305_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Curl_getnameinfo_a<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">struct<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">sockaddr<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">sa<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">curl_socklen_t<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">salen<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
              <parameter><decl><type><name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type> <name pos:line="3" pos:column="22">nodename<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="32">curl_socklen_t<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">nodenamelen<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
              <parameter><decl><type><name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type> <name pos:line="4" pos:column="22">servname<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="32">curl_socklen_t<pos:position pos:line="4" pos:column="46"/></name></type> <name pos:line="4" pos:column="47">servnamelen<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>,
              <parameter><decl><type><name pos:line="5" pos:column="15">int<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">flags<pos:position pos:line="5" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="25"/></parameter_list>

<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type> <name pos:line="8" pos:column="10">enodename<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type> <name pos:line="9" pos:column="10">eservname<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">i<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">enodename<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">char<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">eservname<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">char<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">nodename<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">&amp;&amp;<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="18">nodenamelen<pos:position pos:line="16" pos:column="29"/></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
    <block type="pseudo"><if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">enodename<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">malloc<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">nodenamelen<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">EAI_MEMORY<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return></block></then></if></block></then></if>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">servname<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&amp;&amp;<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="18">servnamelen<pos:position pos:line="20" pos:column="29"/></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30">
    <block type="pseudo"><if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">!<pos:position pos:line="21" pos:column="9"/></operator><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">eservname<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">malloc<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">servnamelen<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43"> <block pos:line="21" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">free<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">enodename<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><name pos:line="23" pos:column="14">EAI_MEMORY<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></return>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">status<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">getnameinfo<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">sa<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">salen<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">enodename<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">nodenamelen<pos:position pos:line="26" pos:column="57"/></name></expr></argument>,
                       <argument><expr><name pos:line="27" pos:column="24">eservname<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">servnamelen<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">flags<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>

  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><operator pos:line="29" pos:column="6">!<pos:position pos:line="29" pos:column="7"/></operator><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14"> <block pos:line="29" pos:column="15">{
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">enodename<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18"> <block pos:line="30" pos:column="19">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">i<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <call><name pos:line="31" pos:column="11">QadrtConvertE2A<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">nodename<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">enodename<pos:position pos:line="31" pos:column="46"/></name></expr></argument>,
        <argument><expr><name pos:line="32" pos:column="9">nodenamelen<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">-<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="23">1<pos:position pos:line="32" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="26">strlen<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">enodename<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">nodename<pos:position pos:line="33" pos:column="15"/></name><index pos:line="33" pos:column="15">[<expr><name pos:line="33" pos:column="16">i<pos:position pos:line="33" pos:column="17"/></name></expr>]<pos:position pos:line="33" pos:column="18"/></index></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="char" pos:line="33" pos:column="21">'\0'<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>

    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name pos:line="36" pos:column="8">eservname<pos:position pos:line="36" pos:column="17"/></name></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18"> <block pos:line="36" pos:column="19">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">i<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">QadrtConvertE2A<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">servname<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">eservname<pos:position pos:line="37" pos:column="46"/></name></expr></argument>,
        <argument><expr><name pos:line="38" pos:column="9">servnamelen<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">-<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">1<pos:position pos:line="38" pos:column="24"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="26">strlen<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">eservname<pos:position pos:line="38" pos:column="42"/></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">servname<pos:position pos:line="39" pos:column="15"/></name><index pos:line="39" pos:column="15">[<expr><name pos:line="39" pos:column="16">i<pos:position pos:line="39" pos:column="17"/></name></expr>]<pos:position pos:line="39" pos:column="18"/></index></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="char" pos:line="39" pos:column="21">'\0'<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="43" pos:column="3">free<pos:position pos:line="43" pos:column="7"/></name><argument_list pos:line="43" pos:column="7">(<argument><expr><name pos:line="43" pos:column="8">enodename<pos:position pos:line="43" pos:column="17"/></name></expr></argument>)<pos:position pos:line="43" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">free<pos:position pos:line="44" pos:column="7"/></name><argument_list pos:line="44" pos:column="7">(<argument><expr><name pos:line="44" pos:column="8">eservname<pos:position pos:line="44" pos:column="17"/></name></expr></argument>)<pos:position pos:line="44" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">status<pos:position pos:line="45" pos:column="16"/></name></expr>;<pos:position pos:line="45" pos:column="17"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1897_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ftp_domore_getsock<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">curl_socket_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">socks<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">numsocks<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">ftp_conn<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ftpc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">proto<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">ftpc<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">numsocks<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">GETSOCK_BLANK<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* When in DO_MORE state, we could be either waiting for us to connect to a
   * remote site, or we could wait for that site to connect to us. Or just
   * handle ordinary commands.
   */</comment>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">FTP_STOP<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">==<pos:position pos:line="14" pos:column="17"/></operator> <name><name pos:line="14" pos:column="18">ftpc<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">state<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">bits<pos:position pos:line="15" pos:column="13"/></name> <init pos:line="15" pos:column="14">= <expr><call><name pos:line="15" pos:column="16">GETSOCK_READSOCK<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* if stopped and still in this state, then we're also waiting for a
       connect on the secondary connection */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">socks<pos:position pos:line="19" pos:column="10"/></name><index pos:line="19" pos:column="10">[<expr><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal></expr>]<pos:position pos:line="19" pos:column="13"/></index></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="16">conn<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">sock<pos:position pos:line="19" pos:column="26"/></name><index pos:line="19" pos:column="26">[<expr><name pos:line="19" pos:column="27">FIRSTSOCKET<pos:position pos:line="19" pos:column="38"/></name></expr>]<pos:position pos:line="19" pos:column="39"/></index></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">!<pos:position pos:line="21" pos:column="9"/></operator><name><name pos:line="21" pos:column="9">conn<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">data<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">set<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">ftp_use_port<pos:position pos:line="21" pos:column="37"/></name></name></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <block pos:line="21" pos:column="39">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">int<pos:position pos:line="22" pos:column="10"/></name></type> <name pos:line="22" pos:column="11">s<pos:position pos:line="22" pos:column="12"/></name></decl>;<pos:position pos:line="22" pos:column="13"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">int<pos:position pos:line="23" pos:column="10"/></name></type> <name pos:line="23" pos:column="11">i<pos:position pos:line="23" pos:column="12"/></name></decl>;<pos:position pos:line="23" pos:column="13"/></decl_stmt>
      <comment type="block" pos:line="24" pos:column="7">/* PORT is used to tell the server to connect to us, and during that we
         don't do happy eyeballs, but we do if we connect to the server */</comment>
      <for pos:line="26" pos:column="7">for<control pos:line="26" pos:column="10">(<init><expr><name pos:line="26" pos:column="11">s<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr><operator pos:line="26" pos:column="16">,<pos:position pos:line="26" pos:column="17"/></operator> <expr><name pos:line="26" pos:column="18">i<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></init> <condition><expr><name pos:line="26" pos:column="25">i<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">&lt;<pos:position pos:line="26" pos:column="30"/></operator><literal type="number" pos:line="26" pos:column="27">2<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></condition> <incr><expr><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">++<pos:position pos:line="26" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="34"/></control> <block pos:line="26" pos:column="35">{
        <if pos:line="27" pos:column="9">if<condition pos:line="27" pos:column="11">(<expr><name><name pos:line="27" pos:column="12">conn<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">tempsock<pos:position pos:line="27" pos:column="26"/></name><index pos:line="27" pos:column="26">[<expr><name pos:line="27" pos:column="27">i<pos:position pos:line="27" pos:column="28"/></name></expr>]<pos:position pos:line="27" pos:column="29"/></index></name> <operator pos:line="27" pos:column="30">!=<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="27" pos:column="48"/></name></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49"> <block pos:line="27" pos:column="50">{
          <expr_stmt><expr><name><name pos:line="28" pos:column="11">socks<pos:position pos:line="28" pos:column="16"/></name><index pos:line="28" pos:column="16">[<expr><name pos:line="28" pos:column="17">s<pos:position pos:line="28" pos:column="18"/></name></expr>]<pos:position pos:line="28" pos:column="19"/></index></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="22">conn<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">tempsock<pos:position pos:line="28" pos:column="36"/></name><index pos:line="28" pos:column="36">[<expr><name pos:line="28" pos:column="37">i<pos:position pos:line="28" pos:column="38"/></name></expr>]<pos:position pos:line="28" pos:column="39"/></index></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
          <expr_stmt><expr><name pos:line="29" pos:column="11">bits<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">|=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">GETSOCK_WRITESOCK<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">s<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">++<pos:position pos:line="29" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
      }<pos:position pos:line="31" pos:column="8"/></block></for>
    }<pos:position pos:line="32" pos:column="6"/></block></then>
    <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">socks<pos:position pos:line="34" pos:column="12"/></name><index pos:line="34" pos:column="12">[<expr><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal></expr>]<pos:position pos:line="34" pos:column="15"/></index></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name><name pos:line="34" pos:column="18">conn<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">sock<pos:position pos:line="34" pos:column="28"/></name><index pos:line="34" pos:column="28">[<expr><name pos:line="34" pos:column="29">SECONDARYSOCKET<pos:position pos:line="34" pos:column="44"/></name></expr>]<pos:position pos:line="34" pos:column="45"/></index></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">bits<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">|=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">GETSOCK_WRITESOCK<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call> <operator pos:line="35" pos:column="36">|<pos:position pos:line="35" pos:column="37"/></operator> <call><name pos:line="35" pos:column="38">GETSOCK_READSOCK<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><literal type="number" pos:line="35" pos:column="55">1<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">bits<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>
  <return pos:line="40" pos:column="3">return <expr><call><name pos:line="40" pos:column="10">Curl_pp_getsock<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator><name><name pos:line="40" pos:column="27">conn<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">proto<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">.<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">ftpc<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">.<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">pp<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">socks<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">numsocks<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

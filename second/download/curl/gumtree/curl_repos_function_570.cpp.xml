<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_570.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">ftp_parse_url_path<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">connectdata<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">conn<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">retcode<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">CURLE_OK<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">FTP<pos:position pos:line="6" pos:column="13"/></name></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ftp<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">dlen<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">slash_pos<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>  <comment type="block" pos:line="9" pos:column="21">/* position of the first '/' char in curpos */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">cur_pos<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name><name pos:line="10" pos:column="19">conn<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">path<pos:position pos:line="10" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt> <comment type="block" pos:line="10" pos:column="31">/* current position in path. point at the begin
                                 of next path component */</comment>

  <comment type="block" pos:line="13" pos:column="3">/* the ftp struct is already inited in ftp_connect() */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">ftp<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name><name pos:line="14" pos:column="9">conn<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">proto<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">ftp<pos:position pos:line="14" pos:column="24"/></name></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">ftp<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">ctl_valid<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">FALSE<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="17" pos:column="3">ftp<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">dirdepth<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">ftp<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">diralloc<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">5<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt> <comment type="block" pos:line="18" pos:column="22">/* default dir depth to allocate */</comment>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">ftp<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">dirs<pos:position pos:line="19" pos:column="12"/></name></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">(<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">char<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><operator pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></operator><operator pos:line="19" pos:column="23">)<pos:position pos:line="19" pos:column="24"/></operator><call><name pos:line="19" pos:column="24">calloc<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">ftp<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">diralloc<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="46">sizeof<argument_list pos:line="19" pos:column="52">(<argument><expr><name><name pos:line="19" pos:column="53">ftp<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">dirs<pos:position pos:line="19" pos:column="62"/></name><index pos:line="19" pos:column="62">[<expr><literal type="number" pos:line="19" pos:column="63">0<pos:position pos:line="19" pos:column="64"/></literal></expr>]<pos:position pos:line="19" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><operator pos:line="20" pos:column="6">!<pos:position pos:line="20" pos:column="7"/></operator><name><name pos:line="20" pos:column="7">ftp<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">dirs<pos:position pos:line="20" pos:column="16"/></name></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* parse the URL path into separate path components */</comment>
  <while pos:line="24" pos:column="3">while<condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">slash_pos<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator><call><name pos:line="24" pos:column="20">strchr<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">cur_pos<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="36">'/'<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator></expr>)<pos:position pos:line="24" pos:column="42"/></condition> <block pos:line="24" pos:column="43">{
    <comment type="block" pos:line="25" pos:column="5">/* 1 or 0 to indicate absolute directory */</comment>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">bool<pos:position pos:line="26" pos:column="9"/></name></type> <name pos:line="26" pos:column="10">absolute_dir<pos:position pos:line="26" pos:column="22"/></name> <init pos:line="26" pos:column="23">= <expr><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">cur_pos<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">-<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="36">conn<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">path<pos:position pos:line="26" pos:column="46"/></name></name> <operator pos:line="26" pos:column="47">&gt;<pos:position pos:line="26" pos:column="51"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator> <operator pos:line="26" pos:column="52">&amp;&amp;<pos:position pos:line="26" pos:column="62"/></operator> <operator pos:line="26" pos:column="55">(<pos:position pos:line="26" pos:column="56"/></operator><name><name pos:line="26" pos:column="56">ftp<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">dirdepth<pos:position pos:line="26" pos:column="69"/></name></name> <operator pos:line="26" pos:column="70">==<pos:position pos:line="26" pos:column="72"/></operator> <literal type="number" pos:line="26" pos:column="73">0<pos:position pos:line="26" pos:column="74"/></literal><operator pos:line="26" pos:column="74">)<pos:position pos:line="26" pos:column="75"/></operator></expr></init></decl>;<pos:position pos:line="26" pos:column="76"/></decl_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* seek out the next path component */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">slash_pos<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">cur_pos<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
      <comment type="block" pos:line="30" pos:column="7">/* we skip empty path components, like "x//y" since the FTP command CWD
         requires a parameter and a non-existant parameter a) doesn't work on
         many servers and b) has no effect on the others. */</comment>
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">int<pos:position pos:line="33" pos:column="10"/></name></type> <name pos:line="33" pos:column="11">len<pos:position pos:line="33" pos:column="14"/></name> <init pos:line="33" pos:column="15">= <expr><call pos:line="33" pos:column="17">(<name pos:line="33" pos:column="18">int<pos:position pos:line="33" pos:column="21"/></name>)<argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">slash_pos<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">-<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">cur_pos<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">+<pos:position pos:line="33" pos:column="44"/></operator> <name pos:line="33" pos:column="45">absolute_dir<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="59"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">ftp<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">dirs<pos:position pos:line="34" pos:column="16"/></name><index pos:line="34" pos:column="16">[<expr><name><name pos:line="34" pos:column="17">ftp<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">dirdepth<pos:position pos:line="34" pos:column="30"/></name></name></expr>]<pos:position pos:line="34" pos:column="31"/></index></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <call><name pos:line="34" pos:column="34">curl_unescape<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name pos:line="34" pos:column="48">cur_pos<pos:position pos:line="34" pos:column="55"/></name> <operator pos:line="34" pos:column="56">-<pos:position pos:line="34" pos:column="57"/></operator> <name pos:line="34" pos:column="58">absolute_dir<pos:position pos:line="34" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="72">len<pos:position pos:line="34" pos:column="75"/></name></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt>

      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><operator pos:line="36" pos:column="11">!<pos:position pos:line="36" pos:column="12"/></operator><name><name pos:line="36" pos:column="12">ftp<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">dirs<pos:position pos:line="36" pos:column="21"/></name><index pos:line="36" pos:column="21">[<expr><name><name pos:line="36" pos:column="22">ftp<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">-&gt;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="27">dirdepth<pos:position pos:line="36" pos:column="35"/></name></name></expr>]<pos:position pos:line="36" pos:column="36"/></index></name></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37"> <block pos:line="36" pos:column="38">{ <comment type="block" pos:line="36" pos:column="40">/* run out of memory ... */</comment>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">failf<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">data<pos:position pos:line="37" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="21">"no memory"<pos:position pos:line="37" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">freedirs<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">ftp<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="39" pos:column="35"/></name></expr>;<pos:position pos:line="39" pos:column="36"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><call><name pos:line="41" pos:column="11">isBadFtpString<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name><name pos:line="41" pos:column="26">ftp<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">dirs<pos:position pos:line="41" pos:column="35"/></name><index pos:line="41" pos:column="35">[<expr><name><name pos:line="41" pos:column="36">ftp<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">-&gt;<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="41">dirdepth<pos:position pos:line="41" pos:column="49"/></name></name></expr>]<pos:position pos:line="41" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="52"/></condition><then pos:line="41" pos:column="52"> <block pos:line="41" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">freedirs<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">ftp<pos:position pos:line="42" pos:column="21"/></name></expr></argument>)<pos:position pos:line="42" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="43" pos:column="35"/></name></expr>;<pos:position pos:line="43" pos:column="36"/></return>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <else pos:line="46" pos:column="5">else <block pos:line="46" pos:column="10">{
      <expr_stmt><expr><name pos:line="47" pos:column="7">cur_pos<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">slash_pos<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">+<pos:position pos:line="47" pos:column="28"/></operator> <literal type="number" pos:line="47" pos:column="29">1<pos:position pos:line="47" pos:column="30"/></literal></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt> <comment type="block" pos:line="47" pos:column="32">/* jump to the rest of the string */</comment>
      <continue pos:line="48" pos:column="7">continue;<pos:position pos:line="48" pos:column="16"/></continue>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><operator pos:line="51" pos:column="8">!<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">retcode<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17"> <block pos:line="51" pos:column="18">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">cur_pos<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">slash_pos<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">+<pos:position pos:line="52" pos:column="28"/></operator> <literal type="number" pos:line="52" pos:column="29">1<pos:position pos:line="52" pos:column="30"/></literal></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt> <comment type="block" pos:line="52" pos:column="32">/* jump to the rest of the string */</comment>
      <if pos:line="53" pos:column="7">if<condition pos:line="53" pos:column="9">(<expr><operator pos:line="53" pos:column="10">++<pos:position pos:line="53" pos:column="12"/></operator><name><name pos:line="53" pos:column="12">ftp<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">dirdepth<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">&gt;=<pos:position pos:line="53" pos:column="31"/></operator> <name><name pos:line="53" pos:column="29">ftp<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">diralloc<pos:position pos:line="53" pos:column="42"/></name></name></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43"> <block pos:line="53" pos:column="44">{
        <comment type="block" pos:line="54" pos:column="9">/* enlarge array */</comment>
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">char<pos:position pos:line="55" pos:column="13"/></name> <modifier pos:line="55" pos:column="14">*<pos:position pos:line="55" pos:column="15"/></modifier></type><name pos:line="55" pos:column="15">bigger<pos:position pos:line="55" pos:column="21"/></name></decl>;<pos:position pos:line="55" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">ftp<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">diralloc<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">*=<pos:position pos:line="56" pos:column="25"/></operator> <literal type="number" pos:line="56" pos:column="26">2<pos:position pos:line="56" pos:column="27"/></literal></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt> <comment type="block" pos:line="56" pos:column="29">/* double the size each time */</comment>
        <expr_stmt><expr><name pos:line="57" pos:column="9">bigger<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <call><name pos:line="57" pos:column="18">realloc<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name><name pos:line="57" pos:column="26">ftp<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">dirs<pos:position pos:line="57" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="37">ftp<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">diralloc<pos:position pos:line="57" pos:column="50"/></name></name> <operator pos:line="57" pos:column="51">*<pos:position pos:line="57" pos:column="52"/></operator> <sizeof pos:line="57" pos:column="53">sizeof<argument_list pos:line="57" pos:column="59">(<argument><expr><name><name pos:line="57" pos:column="60">ftp<pos:position pos:line="57" pos:column="63"/></name><operator pos:line="57" pos:column="63">-&gt;<pos:position pos:line="57" pos:column="68"/></operator><name pos:line="57" pos:column="65">dirs<pos:position pos:line="57" pos:column="69"/></name><index pos:line="57" pos:column="69">[<expr><literal type="number" pos:line="57" pos:column="70">0<pos:position pos:line="57" pos:column="71"/></literal></expr>]<pos:position pos:line="57" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
        <if pos:line="58" pos:column="9">if<condition pos:line="58" pos:column="11">(<expr><operator pos:line="58" pos:column="12">!<pos:position pos:line="58" pos:column="13"/></operator><name pos:line="58" pos:column="13">bigger<pos:position pos:line="58" pos:column="19"/></name></expr>)<pos:position pos:line="58" pos:column="20"/></condition><then pos:line="58" pos:column="20"> <block pos:line="58" pos:column="21">{
          <expr_stmt><expr><name><name pos:line="59" pos:column="11">ftp<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">dirdepth<pos:position pos:line="59" pos:column="24"/></name></name><operator pos:line="59" pos:column="24">--<pos:position pos:line="59" pos:column="26"/></operator></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="60" pos:column="11">freedirs<pos:position pos:line="60" pos:column="19"/></name><argument_list pos:line="60" pos:column="19">(<argument><expr><name pos:line="60" pos:column="20">ftp<pos:position pos:line="60" pos:column="23"/></name></expr></argument>)<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
          <return pos:line="61" pos:column="11">return <expr><name pos:line="61" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="61" pos:column="37"/></name></expr>;<pos:position pos:line="61" pos:column="38"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">ftp<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">dirs<pos:position pos:line="63" pos:column="18"/></name></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <operator pos:line="63" pos:column="21">(<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">char<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">*<pos:position pos:line="63" pos:column="28"/></operator><operator pos:line="63" pos:column="28">*<pos:position pos:line="63" pos:column="29"/></operator><operator pos:line="63" pos:column="29">)<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">bigger<pos:position pos:line="63" pos:column="36"/></name></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
  }<pos:position pos:line="66" pos:column="4"/></block></while>

  <expr_stmt><expr><name><name pos:line="68" pos:column="3">ftp<pos:position pos:line="68" pos:column="6"/></name><operator pos:line="68" pos:column="6">-&gt;<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="8">file<pos:position pos:line="68" pos:column="12"/></name></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <name pos:line="68" pos:column="15">cur_pos<pos:position pos:line="68" pos:column="22"/></name></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>  <comment type="block" pos:line="68" pos:column="25">/* the rest is the file name */</comment>

  <if pos:line="70" pos:column="3">if<condition pos:line="70" pos:column="5">(<expr><operator pos:line="70" pos:column="6">*<pos:position pos:line="70" pos:column="7"/></operator><name><name pos:line="70" pos:column="7">ftp<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">-&gt;<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="12">file<pos:position pos:line="70" pos:column="16"/></name></name></expr>)<pos:position pos:line="70" pos:column="17"/></condition><then pos:line="70" pos:column="17"> <block pos:line="70" pos:column="18">{
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">ftp<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">-&gt;<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="10">file<pos:position pos:line="71" pos:column="14"/></name></name> <operator pos:line="71" pos:column="15">=<pos:position pos:line="71" pos:column="16"/></operator> <call><name pos:line="71" pos:column="17">curl_unescape<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name><name pos:line="71" pos:column="31">ftp<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">file<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="42">0<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><name pos:line="72" pos:column="8">NULL<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">==<pos:position pos:line="72" pos:column="15"/></operator> <name><name pos:line="72" pos:column="16">ftp<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">-&gt;<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="21">file<pos:position pos:line="72" pos:column="25"/></name></name></expr>)<pos:position pos:line="72" pos:column="26"/></condition><then pos:line="72" pos:column="26"> <block pos:line="72" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">freedirs<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">ftp<pos:position pos:line="73" pos:column="19"/></name></expr></argument>)<pos:position pos:line="73" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">failf<pos:position pos:line="74" pos:column="12"/></name><argument_list pos:line="74" pos:column="12">(<argument><expr><name pos:line="74" pos:column="13">data<pos:position pos:line="74" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="19">"no memory"<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
      <return pos:line="75" pos:column="7">return <expr><name pos:line="75" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="75" pos:column="33"/></name></expr>;<pos:position pos:line="75" pos:column="34"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><call><name pos:line="77" pos:column="9">isBadFtpString<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><name><name pos:line="77" pos:column="24">ftp<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">-&gt;<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="29">file<pos:position pos:line="77" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35"> <block pos:line="77" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="78" pos:column="7">freedirs<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><name pos:line="78" pos:column="16">ftp<pos:position pos:line="78" pos:column="19"/></name></expr></argument>)<pos:position pos:line="78" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
      <return pos:line="79" pos:column="7">return <expr><name pos:line="79" pos:column="14">CURLE_URL_MALFORMAT<pos:position pos:line="79" pos:column="33"/></name></expr>;<pos:position pos:line="79" pos:column="34"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
  }<pos:position pos:line="81" pos:column="4"/></block></then>
  <else pos:line="82" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="5">ftp<pos:position pos:line="83" pos:column="8"/></name><operator pos:line="83" pos:column="8">-&gt;<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="10">file<pos:position pos:line="83" pos:column="14"/></name></name><operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="15">NULL<pos:position pos:line="83" pos:column="19"/></name></expr>;<pos:position pos:line="83" pos:column="20"/></expr_stmt></block></else></if> <comment type="block" pos:line="83" pos:column="21">/* instead of point to a zero byte, we make it a NULL
                       pointer */</comment>

  <expr_stmt><expr><name><name pos:line="86" pos:column="3">ftp<pos:position pos:line="86" pos:column="6"/></name><operator pos:line="86" pos:column="6">-&gt;<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="8">cwddone<pos:position pos:line="86" pos:column="15"/></name></name> <operator pos:line="86" pos:column="16">=<pos:position pos:line="86" pos:column="17"/></operator> <name pos:line="86" pos:column="18">FALSE<pos:position pos:line="86" pos:column="23"/></name></expr>;<pos:position pos:line="86" pos:column="24"/></expr_stmt> <comment type="block" pos:line="86" pos:column="25">/* default to not done */</comment>

  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><name><name pos:line="88" pos:column="6">ftp<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">-&gt;<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="11">prevpath<pos:position pos:line="88" pos:column="19"/></name></name></expr>)<pos:position pos:line="88" pos:column="20"/></condition><then pos:line="88" pos:column="20"> <block pos:line="88" pos:column="21">{
    <comment type="block" pos:line="89" pos:column="5">/* prevpath is "raw" so we convert the input path before we compare the
       strings */</comment>
    <decl_stmt><decl><type><name pos:line="91" pos:column="5">char<pos:position pos:line="91" pos:column="9"/></name> <modifier pos:line="91" pos:column="10">*<pos:position pos:line="91" pos:column="11"/></modifier></type><name pos:line="91" pos:column="11">path<pos:position pos:line="91" pos:column="15"/></name> <init pos:line="91" pos:column="16">= <expr><call><name pos:line="91" pos:column="18">curl_unescape<pos:position pos:line="91" pos:column="31"/></name><argument_list pos:line="91" pos:column="31">(<argument><expr><name><name pos:line="91" pos:column="32">conn<pos:position pos:line="91" pos:column="36"/></name><operator pos:line="91" pos:column="36">-&gt;<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="38">path<pos:position pos:line="91" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="44">0<pos:position pos:line="91" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="91" pos:column="47"/></decl_stmt>
    <if pos:line="92" pos:column="5">if<condition pos:line="92" pos:column="7">(<expr><operator pos:line="92" pos:column="8">!<pos:position pos:line="92" pos:column="9"/></operator><name pos:line="92" pos:column="9">path<pos:position pos:line="92" pos:column="13"/></name></expr>)<pos:position pos:line="92" pos:column="14"/></condition><then pos:line="92" pos:column="14">
      <block type="pseudo"><return pos:line="93" pos:column="7">return <expr><name pos:line="93" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="93" pos:column="33"/></name></expr>;<pos:position pos:line="93" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="95" pos:column="5">dlen<pos:position pos:line="95" pos:column="9"/></name> <operator pos:line="95" pos:column="10">=<pos:position pos:line="95" pos:column="11"/></operator> <call><name pos:line="95" pos:column="12">strlen<pos:position pos:line="95" pos:column="18"/></name><argument_list pos:line="95" pos:column="18">(<argument><expr><name pos:line="95" pos:column="19">path<pos:position pos:line="95" pos:column="23"/></name></expr></argument>)<pos:position pos:line="95" pos:column="24"/></argument_list></call> <operator pos:line="95" pos:column="25">-<pos:position pos:line="95" pos:column="26"/></operator> <operator pos:line="95" pos:column="27">(<pos:position pos:line="95" pos:column="28"/></operator><ternary><condition><expr><name><name pos:line="95" pos:column="28">ftp<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">file<pos:position pos:line="95" pos:column="37"/></name></name></expr>?<pos:position pos:line="95" pos:column="38"/></condition><then><expr><call><name pos:line="95" pos:column="38">strlen<pos:position pos:line="95" pos:column="44"/></name><argument_list pos:line="95" pos:column="44">(<argument><expr><name><name pos:line="95" pos:column="45">ftp<pos:position pos:line="95" pos:column="48"/></name><operator pos:line="95" pos:column="48">-&gt;<pos:position pos:line="95" pos:column="53"/></operator><name pos:line="95" pos:column="50">file<pos:position pos:line="95" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="55"/></argument_list></call></expr></then><else pos:line="95" pos:column="55">:<expr><literal type="number" pos:line="95" pos:column="56">0<pos:position pos:line="95" pos:column="57"/></literal></expr></else></ternary><operator pos:line="95" pos:column="57">)<pos:position pos:line="95" pos:column="58"/></operator></expr>;<pos:position pos:line="95" pos:column="59"/></expr_stmt>
    <if pos:line="96" pos:column="5">if<condition pos:line="96" pos:column="7">(<expr><operator pos:line="96" pos:column="8">(<pos:position pos:line="96" pos:column="9"/></operator><name pos:line="96" pos:column="9">dlen<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">==<pos:position pos:line="96" pos:column="16"/></operator> <call><name pos:line="96" pos:column="17">strlen<pos:position pos:line="96" pos:column="23"/></name><argument_list pos:line="96" pos:column="23">(<argument><expr><name><name pos:line="96" pos:column="24">ftp<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">-&gt;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="29">prevpath<pos:position pos:line="96" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="38"/></argument_list></call><operator pos:line="96" pos:column="38">)<pos:position pos:line="96" pos:column="39"/></operator> <operator pos:line="96" pos:column="40">&amp;&amp;<pos:position pos:line="96" pos:column="50"/></operator>
       <call><name pos:line="97" pos:column="8">curl_strnequal<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name pos:line="97" pos:column="23">path<pos:position pos:line="97" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="29">ftp<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">prevpath<pos:position pos:line="97" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="44">dlen<pos:position pos:line="97" pos:column="48"/></name></expr></argument>)<pos:position pos:line="97" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="50"/></condition><then pos:line="97" pos:column="50"> <block pos:line="97" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">infof<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="19">"Request has same path as previous transfer\n"<pos:position pos:line="98" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="99" pos:column="7">ftp<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">-&gt;<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="12">cwddone<pos:position pos:line="99" pos:column="19"/></name></name> <operator pos:line="99" pos:column="20">=<pos:position pos:line="99" pos:column="21"/></operator> <name pos:line="99" pos:column="22">TRUE<pos:position pos:line="99" pos:column="26"/></name></expr>;<pos:position pos:line="99" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">free<pos:position pos:line="101" pos:column="9"/></name><argument_list pos:line="101" pos:column="9">(<argument><expr><name pos:line="101" pos:column="10">path<pos:position pos:line="101" pos:column="14"/></name></expr></argument>)<pos:position pos:line="101" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if>

  <return pos:line="104" pos:column="3">return <expr><name pos:line="104" pos:column="10">retcode<pos:position pos:line="104" pos:column="17"/></name></expr>;<pos:position pos:line="104" pos:column="18"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

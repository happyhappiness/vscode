<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_723.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">hex_to_uint<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name><name pos:line="3" pos:column="7">v<pos:position pos:line="3" pos:column="8"/></name><index pos:line="3" pos:column="8">[<expr><literal type="number" pos:line="3" pos:column="9">2<pos:position pos:line="3" pos:column="10"/></literal></expr>]<pos:position pos:line="3" pos:column="11"/></index></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <for pos:line="5" pos:column="3">for<control pos:line="5" pos:column="6">(<init><expr><name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <literal type="number" pos:line="5" pos:column="11">0<pos:position pos:line="5" pos:column="12"/></literal></expr>;<pos:position pos:line="5" pos:column="13"/></init> <condition><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&lt;<pos:position pos:line="5" pos:column="20"/></operator> <literal type="number" pos:line="5" pos:column="18">2<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></condition> <incr><expr><operator pos:line="5" pos:column="21">++<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">i<pos:position pos:line="5" pos:column="24"/></name></expr></incr>)<pos:position pos:line="5" pos:column="25"/></control> <block pos:line="5" pos:column="26">{
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">v<pos:position pos:line="6" pos:column="6"/></name><index pos:line="6" pos:column="6">[<expr><name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></expr>]<pos:position pos:line="6" pos:column="9"/></index></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">Curl_raw_toupper<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name><name pos:line="6" pos:column="29">s<pos:position pos:line="6" pos:column="30"/></name><index pos:line="6" pos:column="30">[<expr><name pos:line="6" pos:column="31">i<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
    <if pos:line="7" pos:column="5">if<condition pos:line="7" pos:column="7">(<expr><literal type="char" pos:line="7" pos:column="8">'0'<pos:position pos:line="7" pos:column="11"/></literal> <operator pos:line="7" pos:column="12">&lt;=<pos:position pos:line="7" pos:column="17"/></operator> <name><name pos:line="7" pos:column="15">v<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name></expr>]<pos:position pos:line="7" pos:column="19"/></index></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <name><name pos:line="7" pos:column="23">v<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><name pos:line="7" pos:column="25">i<pos:position pos:line="7" pos:column="26"/></name></expr>]<pos:position pos:line="7" pos:column="27"/></index></name> <operator pos:line="7" pos:column="28">&lt;=<pos:position pos:line="7" pos:column="33"/></operator> <literal type="char" pos:line="7" pos:column="31">'9'<pos:position pos:line="7" pos:column="34"/></literal></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
      <expr_stmt><expr><name><name pos:line="8" pos:column="7">v<pos:position pos:line="8" pos:column="8"/></name><index pos:line="8" pos:column="8">[<expr><name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></expr>]<pos:position pos:line="8" pos:column="11"/></index></name> <operator pos:line="8" pos:column="12">-=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="char" pos:line="8" pos:column="15">'0'<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if<condition pos:line="10" pos:column="12">(<expr><literal type="char" pos:line="10" pos:column="13">'A'<pos:position pos:line="10" pos:column="16"/></literal> <operator pos:line="10" pos:column="17">&lt;=<pos:position pos:line="10" pos:column="22"/></operator> <name><name pos:line="10" pos:column="20">v<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name></expr>]<pos:position pos:line="10" pos:column="24"/></index></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="28">v<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><name pos:line="10" pos:column="30">i<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name> <operator pos:line="10" pos:column="33">&lt;=<pos:position pos:line="10" pos:column="38"/></operator> <literal type="char" pos:line="10" pos:column="36">'Z'<pos:position pos:line="10" pos:column="39"/></literal></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40"> <block pos:line="10" pos:column="41">{
      <expr_stmt><expr><name><name pos:line="11" pos:column="7">v<pos:position pos:line="11" pos:column="8"/></name><index pos:line="11" pos:column="8">[<expr><name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></expr>]<pos:position pos:line="11" pos:column="11"/></index></name> <operator pos:line="11" pos:column="12">-=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="char" pos:line="11" pos:column="15">'A'<pos:position pos:line="11" pos:column="18"/></literal><operator pos:line="11" pos:column="18">-<pos:position pos:line="11" pos:column="19"/></operator><literal type="number" pos:line="11" pos:column="19">10<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="13" pos:column="4"/></block></for>
  <return pos:line="14" pos:column="3">return <expr><call pos:line="14" pos:column="10">(<name pos:line="14" pos:column="11">unsigned<pos:position pos:line="14" pos:column="19"/></name> <name pos:line="14" pos:column="20">char<pos:position pos:line="14" pos:column="24"/></name>)<argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">(<pos:position pos:line="14" pos:column="27"/></operator><name><name pos:line="14" pos:column="27">v<pos:position pos:line="14" pos:column="28"/></name><index pos:line="14" pos:column="28">[<expr><literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal></expr>]<pos:position pos:line="14" pos:column="31"/></index></name> <operator pos:line="14" pos:column="32">&lt;&lt;<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="35">4<pos:position pos:line="14" pos:column="36"/></literal><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator> <operator pos:line="14" pos:column="38">|<pos:position pos:line="14" pos:column="39"/></operator> <name><name pos:line="14" pos:column="40">v<pos:position pos:line="14" pos:column="41"/></name><index pos:line="14" pos:column="41">[<expr><literal type="number" pos:line="14" pos:column="42">1<pos:position pos:line="14" pos:column="43"/></literal></expr>]<pos:position pos:line="14" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1322.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">disconnect_if_dead<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name><name pos:line="2" pos:column="32">struct<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">SessionHandle<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">data<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">pipeLen<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name><name pos:line="4" pos:column="20">conn<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">send_pipe<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">size<pos:position pos:line="4" pos:column="41"/></name></name> <operator pos:line="4" pos:column="42">+<pos:position pos:line="4" pos:column="43"/></operator> <name><name pos:line="4" pos:column="44">conn<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">recv_pipe<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">-&gt;<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="61">size<pos:position pos:line="4" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">pipeLen<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&amp;&amp;<pos:position pos:line="5" pos:column="25"/></operator> <operator pos:line="5" pos:column="18">!<pos:position pos:line="5" pos:column="19"/></operator><name><name pos:line="5" pos:column="19">conn<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">inuse<pos:position pos:line="5" pos:column="30"/></name></name></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31"> <block pos:line="5" pos:column="32">{
    <comment type="block" pos:line="6" pos:column="5">/* The check for a dead socket makes sense only if there are no
       handles in pipeline and the connection isn't already marked in
       use */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">bool<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">dead<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name><name pos:line="10" pos:column="8">conn<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">handler<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">protocol<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">&amp;<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="34">CURLPROTO_RTSP<pos:position pos:line="10" pos:column="48"/></name></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49">
      <comment type="block" pos:line="11" pos:column="7">/* RTSP is a special case due to RTP interleaving */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">dead<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">Curl_rtsp_connisdead<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">conn<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="7">dead<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">SocketIsDead<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name><name pos:line="14" pos:column="27">conn<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">sock<pos:position pos:line="14" pos:column="37"/></name><index pos:line="14" pos:column="37">[<expr><name pos:line="14" pos:column="38">FIRSTSOCKET<pos:position pos:line="14" pos:column="49"/></name></expr>]<pos:position pos:line="14" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt></block></else></if>

    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">dead<pos:position pos:line="16" pos:column="12"/></name></expr>)<pos:position pos:line="16" pos:column="13"/></condition><then pos:line="16" pos:column="13"> <block pos:line="16" pos:column="14">{
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">conn<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">data<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">data<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">infof<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">data<pos:position pos:line="18" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"Connection %ld seems to be dead!\n"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="57">conn<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">-&gt;<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="63">connection_id<pos:position pos:line="18" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>

      <comment type="block" pos:line="20" pos:column="7">/* disconnect resources */</comment>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">Curl_disconnect<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">conn<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <comment type="block" pos:line="21" pos:column="29">/* dead_connection */</comment><argument><expr><name pos:line="21" pos:column="50">TRUE<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><name pos:line="22" pos:column="14">TRUE<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <return pos:line="25" pos:column="3">return <expr><name pos:line="25" pos:column="10">FALSE<pos:position pos:line="25" pos:column="15"/></name></expr>;<pos:position pos:line="25" pos:column="16"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_132_curl-7.9.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">FormData<pos:position pos:line="1" pos:column="16"/></name></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Curl_getFormData<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">HttpPost<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">post<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">sizep<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">FormData<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">form<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FormData<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">firstform<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">HttpPost<pos:position pos:line="7" pos:column="18"/></name></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">file<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">size<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">=<expr><literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">boundary<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">fileboundary<pos:position pos:line="11" pos:column="21"/></name><init pos:line="11" pos:column="21">=<expr><name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><operator pos:line="13" pos:column="6">!<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">post<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="14" pos:column="18">/* no input =&gt; no output! */</comment>

  <expr_stmt><expr><name pos:line="16" pos:column="3">boundary<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">Curl_FormBoundary<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">()<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  
  <comment type="block" pos:line="18" pos:column="3">/* Make the first line of the output */</comment>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">AddFormDataf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="17">form<pos:position pos:line="19" pos:column="21"/></name></expr></argument>,
               <argument><expr><literal type="string" pos:line="20" pos:column="16">"Content-Type: multipart/form-data;"<pos:position pos:line="20" pos:column="52"/></literal>
               <literal type="string" pos:line="21" pos:column="16">" boundary=%s\r\n"<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>,
               <argument><expr><name pos:line="22" pos:column="16">boundary<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
  <comment type="block" pos:line="23" pos:column="3">/* we DO NOT count that line since that'll be part of the header! */</comment>

  <expr_stmt><expr><name pos:line="25" pos:column="3">firstform<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">form<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
  
  <do pos:line="27" pos:column="3">do <block pos:line="27" pos:column="6">{

    <comment type="block" pos:line="29" pos:column="5">/* boundary */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">size<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">+=<pos:position pos:line="30" pos:column="12"/></operator> <call><name pos:line="30" pos:column="13">AddFormDataf<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><operator pos:line="30" pos:column="26">&amp;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="27">form<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="33">"\r\n--%s\r\n"<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">boundary<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="32" pos:column="5">size<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">+=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">AddFormData<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><operator pos:line="32" pos:column="25">&amp;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="26">form<pos:position pos:line="32" pos:column="30"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="33" pos:column="25">"Content-Disposition: form-data; name=\""<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="68">0<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">size<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">+=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">AddFormData<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="26">form<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="32">post<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">name<pos:position pos:line="35" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="44">post<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">namelength<pos:position pos:line="35" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">size<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">+=<pos:position pos:line="37" pos:column="12"/></operator> <call><name pos:line="37" pos:column="13">AddFormData<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><operator pos:line="37" pos:column="25">&amp;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="26">form<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="32">"\""<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="38">0<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>

    <if pos:line="39" pos:column="5">if<condition pos:line="39" pos:column="7">(<expr><name><name pos:line="39" pos:column="8">post<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">more<pos:position pos:line="39" pos:column="18"/></name></name></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19"> <block pos:line="39" pos:column="20">{
      <comment type="block" pos:line="40" pos:column="7">/* If used, this is a link to more file names, we must then do
         the magic to include several files with the same field name */</comment>

      <expr_stmt><expr><name pos:line="43" pos:column="7">fileboundary<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <call><name pos:line="43" pos:column="22">Curl_FormBoundary<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">()<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

      <expr_stmt><expr><name pos:line="45" pos:column="7">size<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">+=<pos:position pos:line="45" pos:column="14"/></operator> <call><name pos:line="45" pos:column="15">AddFormDataf<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><operator pos:line="45" pos:column="28">&amp;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="29">form<pos:position pos:line="45" pos:column="33"/></name></expr></argument>,
			   <argument><expr><literal type="string" pos:line="46" pos:column="28">"\r\nContent-Type: multipart/mixed,"<pos:position pos:line="46" pos:column="64"/></literal>
			   <literal type="string" pos:line="47" pos:column="28">" boundary=%s\r\n"<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>,
			   <argument><expr><name pos:line="48" pos:column="28">fileboundary<pos:position pos:line="48" pos:column="40"/></name></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="51" pos:column="5">file<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <name pos:line="51" pos:column="12">post<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>

    <do pos:line="53" pos:column="5">do <block pos:line="53" pos:column="8">{
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><name><name pos:line="54" pos:column="10">post<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">more<pos:position pos:line="54" pos:column="20"/></name></name></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21"> <block pos:line="54" pos:column="22">{
	<comment type="block" pos:line="55" pos:column="9">/* if multiple-file */</comment>
	<expr_stmt><expr><name pos:line="56" pos:column="9">size<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">+=<pos:position pos:line="56" pos:column="16"/></operator> <call><name pos:line="56" pos:column="17">AddFormDataf<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><operator pos:line="56" pos:column="30">&amp;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="31">form<pos:position pos:line="56" pos:column="35"/></name></expr></argument>,
			     <argument><expr><literal type="string" pos:line="57" pos:column="30">"\r\n--%s\r\nContent-Disposition: attachment; filename=\"%s\""<pos:position pos:line="57" pos:column="92"/></literal></expr></argument>,
			     <argument><expr><name pos:line="58" pos:column="30">fileboundary<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="44">file<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">-&gt;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="50">contents<pos:position pos:line="58" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then>
      <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if<condition pos:line="60" pos:column="14">(<expr><name><name pos:line="60" pos:column="15">post<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">flags<pos:position pos:line="60" pos:column="26"/></name></name> <operator pos:line="60" pos:column="27">&amp;<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="29">HTTPPOST_FILENAME<pos:position pos:line="60" pos:column="46"/></name></expr>)<pos:position pos:line="60" pos:column="47"/></condition><then pos:line="60" pos:column="47"> <block pos:line="60" pos:column="48">{
	<expr_stmt><expr><name pos:line="61" pos:column="9">size<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">+=<pos:position pos:line="61" pos:column="16"/></operator> <call><name pos:line="61" pos:column="17">AddFormDataf<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><operator pos:line="61" pos:column="30">&amp;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="31">form<pos:position pos:line="61" pos:column="35"/></name></expr></argument>,
			     <argument><expr><literal type="string" pos:line="62" pos:column="30">"; filename=\"%s\""<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="63" pos:column="30">post<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">contents<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="64" pos:column="8"/></block></then></if></elseif></if>
      
      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">(<expr><name><name pos:line="66" pos:column="10">file<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">contenttype<pos:position pos:line="66" pos:column="27"/></name></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28"> <block pos:line="66" pos:column="29">{
	<comment type="block" pos:line="67" pos:column="9">/* we have a specified type */</comment>
	<expr_stmt><expr><name pos:line="68" pos:column="9">size<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">+=<pos:position pos:line="68" pos:column="16"/></operator> <call><name pos:line="68" pos:column="17">AddFormDataf<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">&amp;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="31">form<pos:position pos:line="68" pos:column="35"/></name></expr></argument>,
			     <argument><expr><literal type="string" pos:line="69" pos:column="30">"\r\nContent-Type: %s"<pos:position pos:line="69" pos:column="52"/></literal></expr></argument>,
			     <argument><expr><name><name pos:line="70" pos:column="30">file<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">-&gt;<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="36">contenttype<pos:position pos:line="70" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>

<cpp:if pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">if<pos:position pos:line="73" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="73" pos:column="5">0<pos:position pos:line="73" pos:column="6"/></literal></expr></cpp:if>
      <comment type="block" pos:line="74" pos:column="7">/* The header Content-Transfer-Encoding: seems to confuse some receivers
       * (like the built-in PHP engine). While I can't see any reason why it
       * should, I can just as well skip this to the benefit of the users who
       * are using such confused receivers.
       */</comment>
      
      if(file-&gt;contenttype &amp;&amp;
	 !strnequal("text/", file-&gt;contenttype, 5)) {
	<comment type="block" pos:line="82" pos:column="9">/* this is not a text content, mention our binary encoding */</comment>
	size += AddFormData(&amp;form, "\r\nContent-Transfer-Encoding: binary", 0);
      }
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name pos:line="87" pos:column="7">size<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">+=<pos:position pos:line="87" pos:column="14"/></operator> <call><name pos:line="87" pos:column="15">AddFormData<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><operator pos:line="87" pos:column="27">&amp;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="28">form<pos:position pos:line="87" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="34">"\r\n\r\n"<pos:position pos:line="87" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="46">0<pos:position pos:line="87" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="49"/></expr_stmt>

      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><operator pos:line="89" pos:column="10">(<pos:position pos:line="89" pos:column="11"/></operator><name><name pos:line="89" pos:column="11">post<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">flags<pos:position pos:line="89" pos:column="22"/></name></name> <operator pos:line="89" pos:column="23">&amp;<pos:position pos:line="89" pos:column="28"/></operator> <name pos:line="89" pos:column="25">HTTPPOST_FILENAME<pos:position pos:line="89" pos:column="42"/></name><operator pos:line="89" pos:column="42">)<pos:position pos:line="89" pos:column="43"/></operator> <operator pos:line="89" pos:column="44">||<pos:position pos:line="89" pos:column="46"/></operator>
	 <operator pos:line="90" pos:column="10">(<pos:position pos:line="90" pos:column="11"/></operator><name><name pos:line="90" pos:column="11">post<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">-&gt;<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="17">flags<pos:position pos:line="90" pos:column="22"/></name></name> <operator pos:line="90" pos:column="23">&amp;<pos:position pos:line="90" pos:column="28"/></operator> <name pos:line="90" pos:column="25">HTTPPOST_READFILE<pos:position pos:line="90" pos:column="42"/></name><operator pos:line="90" pos:column="42">)<pos:position pos:line="90" pos:column="43"/></operator></expr>)<pos:position pos:line="90" pos:column="44"/></condition><then pos:line="90" pos:column="44"> <block pos:line="90" pos:column="45">{
	<comment type="block" pos:line="91" pos:column="9">/* we should include the contents from the specified file */</comment>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">FILE<pos:position pos:line="92" pos:column="13"/></name> <modifier pos:line="92" pos:column="14">*<pos:position pos:line="92" pos:column="15"/></modifier></type><name pos:line="92" pos:column="15">fileread<pos:position pos:line="92" pos:column="23"/></name></decl>;<pos:position pos:line="92" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">char<pos:position pos:line="93" pos:column="13"/></name></type> <name><name pos:line="93" pos:column="14">buffer<pos:position pos:line="93" pos:column="20"/></name><index pos:line="93" pos:column="20">[<expr><literal type="number" pos:line="93" pos:column="21">1024<pos:position pos:line="93" pos:column="25"/></literal></expr>]<pos:position pos:line="93" pos:column="26"/></index></name></decl>;<pos:position pos:line="93" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="94" pos:column="9">int<pos:position pos:line="94" pos:column="12"/></name></type> <name pos:line="94" pos:column="13">nread<pos:position pos:line="94" pos:column="18"/></name></decl>;<pos:position pos:line="94" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><name pos:line="96" pos:column="9">fileread<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">=<pos:position pos:line="96" pos:column="19"/></operator> <ternary><condition><expr><call><name pos:line="96" pos:column="20">strequal<pos:position pos:line="96" pos:column="28"/></name><argument_list pos:line="96" pos:column="28">(<argument><expr><literal type="string" pos:line="96" pos:column="29">"-"<pos:position pos:line="96" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="34">file<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">-&gt;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="40">contents<pos:position pos:line="96" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="49"/></argument_list></call></expr>?<pos:position pos:line="96" pos:column="50"/></condition><then><expr><name pos:line="96" pos:column="50">stdin<pos:position pos:line="96" pos:column="55"/></name></expr></then><else pos:line="96" pos:column="55">:
          <comment type="block" pos:line="97" pos:column="11">/* binary read for win32 crap */</comment>
<comment type="block" pos:line="98" pos:column="1">/*VMS??*/</comment> <expr><call><name pos:line="98" pos:column="11">fopen<pos:position pos:line="98" pos:column="16"/></name><argument_list pos:line="98" pos:column="16">(<argument><expr><name><name pos:line="98" pos:column="17">file<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">contents<pos:position pos:line="98" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="33">"rb"<pos:position pos:line="98" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>  <comment type="block" pos:line="98" pos:column="41">/* ONLY ALLOWS FOR STREAM FILES ON VMS */</comment>
<comment type="block" pos:line="99" pos:column="1">/*VMS?? Stream files are OK, as are FIXED &amp; VAR files WITHOUT implied CC */</comment>
<comment type="block" pos:line="100" pos:column="1">/*VMS?? For implied CC, every record needs to have a \n appended &amp; 1 added to SIZE */</comment>
	<if pos:line="101" pos:column="9">if<condition pos:line="101" pos:column="11">(<expr><name pos:line="101" pos:column="12">fileread<pos:position pos:line="101" pos:column="20"/></name></expr>)<pos:position pos:line="101" pos:column="21"/></condition><then pos:line="101" pos:column="21"> <block pos:line="101" pos:column="22">{
	  <while pos:line="102" pos:column="11">while<condition pos:line="102" pos:column="16">(<expr><operator pos:line="102" pos:column="17">(<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="18">nread<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">=<pos:position pos:line="102" pos:column="25"/></operator> <call><name pos:line="102" pos:column="26">fread<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><name pos:line="102" pos:column="32">buffer<pos:position pos:line="102" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="40">1<pos:position pos:line="102" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="43">1024<pos:position pos:line="102" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="49">fileread<pos:position pos:line="102" pos:column="57"/></name></expr></argument>)<pos:position pos:line="102" pos:column="58"/></argument_list></call><operator pos:line="102" pos:column="58">)<pos:position pos:line="102" pos:column="59"/></operator></expr>)<pos:position pos:line="102" pos:column="60"/></condition> <block pos:line="102" pos:column="61">{
	    <expr_stmt><expr><name pos:line="103" pos:column="13">size<pos:position pos:line="103" pos:column="17"/></name> <operator pos:line="103" pos:column="18">+=<pos:position pos:line="103" pos:column="20"/></operator> <call><name pos:line="103" pos:column="21">AddFormData<pos:position pos:line="103" pos:column="32"/></name><argument_list pos:line="103" pos:column="32">(<argument><expr><operator pos:line="103" pos:column="33">&amp;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="34">form<pos:position pos:line="103" pos:column="38"/></name></expr></argument>,
				<argument><expr><name pos:line="104" pos:column="33">buffer<pos:position pos:line="104" pos:column="39"/></name></expr></argument>,
				<argument><expr><name pos:line="105" pos:column="33">nread<pos:position pos:line="105" pos:column="38"/></name></expr></argument>)<pos:position pos:line="105" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="40"/></expr_stmt>
	  }<pos:position pos:line="106" pos:column="12"/></block></while>
          <if pos:line="107" pos:column="11">if<condition pos:line="107" pos:column="13">(<expr><name pos:line="107" pos:column="14">fileread<pos:position pos:line="107" pos:column="22"/></name> <operator pos:line="107" pos:column="23">!=<pos:position pos:line="107" pos:column="25"/></operator> <name pos:line="107" pos:column="26">stdin<pos:position pos:line="107" pos:column="31"/></name></expr>)<pos:position pos:line="107" pos:column="32"/></condition><then pos:line="107" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="13">fclose<pos:position pos:line="108" pos:column="19"/></name><argument_list pos:line="108" pos:column="19">(<argument><expr><name pos:line="108" pos:column="20">fileread<pos:position pos:line="108" pos:column="28"/></name></expr></argument>)<pos:position pos:line="108" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt></block></then></if>
	}<pos:position pos:line="109" pos:column="10"/></block></then> <else pos:line="109" pos:column="11">else <block pos:line="109" pos:column="16">{
	  <expr_stmt><expr><name pos:line="110" pos:column="11">size<pos:position pos:line="110" pos:column="15"/></name> <operator pos:line="110" pos:column="16">+=<pos:position pos:line="110" pos:column="18"/></operator> <call><name pos:line="110" pos:column="19">AddFormData<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">(<argument><expr><operator pos:line="110" pos:column="31">&amp;<pos:position pos:line="110" pos:column="36"/></operator><name pos:line="110" pos:column="32">form<pos:position pos:line="110" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="38">"[File wasn't found by client]"<pos:position pos:line="110" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="71">0<pos:position pos:line="110" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></else></if>
      }<pos:position pos:line="112" pos:column="8"/></block></then> <else pos:line="112" pos:column="9">else <block pos:line="112" pos:column="14">{
	<comment type="block" pos:line="113" pos:column="9">/* include the contents we got */</comment>
	<expr_stmt><expr><name pos:line="114" pos:column="9">size<pos:position pos:line="114" pos:column="13"/></name> <operator pos:line="114" pos:column="14">+=<pos:position pos:line="114" pos:column="16"/></operator> <call><name pos:line="114" pos:column="17">AddFormData<pos:position pos:line="114" pos:column="28"/></name><argument_list pos:line="114" pos:column="28">(<argument><expr><operator pos:line="114" pos:column="29">&amp;<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="30">form<pos:position pos:line="114" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="36">post<pos:position pos:line="114" pos:column="40"/></name><operator pos:line="114" pos:column="40">-&gt;<pos:position pos:line="114" pos:column="45"/></operator><name pos:line="114" pos:column="42">contents<pos:position pos:line="114" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="52">post<pos:position pos:line="114" pos:column="56"/></name><operator pos:line="114" pos:column="56">-&gt;<pos:position pos:line="114" pos:column="61"/></operator><name pos:line="114" pos:column="58">contentslength<pos:position pos:line="114" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="115" pos:column="8"/></block></else></if>
    }<pos:position pos:line="116" pos:column="6"/></block> while<condition pos:line="116" pos:column="12">(<expr><operator pos:line="116" pos:column="13">(<pos:position pos:line="116" pos:column="14"/></operator><name pos:line="116" pos:column="14">file<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">=<pos:position pos:line="116" pos:column="20"/></operator> <name><name pos:line="116" pos:column="21">file<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">more<pos:position pos:line="116" pos:column="31"/></name></name><operator pos:line="116" pos:column="31">)<pos:position pos:line="116" pos:column="32"/></operator></expr>)<pos:position pos:line="116" pos:column="33"/></condition>;<pos:position pos:line="116" pos:column="34"/></do> <comment type="block" pos:line="116" pos:column="35">/* for each specified file for this field */</comment>

    <if pos:line="118" pos:column="5">if<condition pos:line="118" pos:column="7">(<expr><name><name pos:line="118" pos:column="8">post<pos:position pos:line="118" pos:column="12"/></name><operator pos:line="118" pos:column="12">-&gt;<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="14">more<pos:position pos:line="118" pos:column="18"/></name></name></expr>)<pos:position pos:line="118" pos:column="19"/></condition><then pos:line="118" pos:column="19"> <block pos:line="118" pos:column="20">{
      <comment type="block" pos:line="119" pos:column="7">/* this was a multiple-file inclusion, make a termination file
         boundary: */</comment>
      <expr_stmt><expr><name pos:line="121" pos:column="7">size<pos:position pos:line="121" pos:column="11"/></name> <operator pos:line="121" pos:column="12">+=<pos:position pos:line="121" pos:column="14"/></operator> <call><name pos:line="121" pos:column="15">AddFormDataf<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><operator pos:line="121" pos:column="28">&amp;<pos:position pos:line="121" pos:column="33"/></operator><name pos:line="121" pos:column="29">form<pos:position pos:line="121" pos:column="33"/></name></expr></argument>,
			   <argument><expr><literal type="string" pos:line="122" pos:column="28">"\r\n--%s--"<pos:position pos:line="122" pos:column="40"/></literal></expr></argument>,
			   <argument><expr><name pos:line="123" pos:column="28">fileboundary<pos:position pos:line="123" pos:column="40"/></name></expr></argument>)<pos:position pos:line="123" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="42"/></expr_stmt>     
      <expr_stmt><expr><call><name pos:line="124" pos:column="7">free<pos:position pos:line="124" pos:column="11"/></name><argument_list pos:line="124" pos:column="11">(<argument><expr><name pos:line="124" pos:column="12">fileboundary<pos:position pos:line="124" pos:column="24"/></name></expr></argument>)<pos:position pos:line="124" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

  }<pos:position pos:line="127" pos:column="4"/></block> while<condition pos:line="127" pos:column="10">(<expr><operator pos:line="127" pos:column="11">(<pos:position pos:line="127" pos:column="12"/></operator><name pos:line="127" pos:column="12">post<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">=<pos:position pos:line="127" pos:column="17"/></operator><name><name pos:line="127" pos:column="17">post<pos:position pos:line="127" pos:column="21"/></name><operator pos:line="127" pos:column="21">-&gt;<pos:position pos:line="127" pos:column="26"/></operator><name pos:line="127" pos:column="23">next<pos:position pos:line="127" pos:column="27"/></name></name><operator pos:line="127" pos:column="27">)<pos:position pos:line="127" pos:column="28"/></operator></expr>)<pos:position pos:line="127" pos:column="29"/></condition>;<pos:position pos:line="127" pos:column="30"/></do> <comment type="block" pos:line="127" pos:column="31">/* for each field */</comment>

  <comment type="block" pos:line="129" pos:column="3">/* end-boundary for everything */</comment>
  <expr_stmt><expr><name pos:line="130" pos:column="3">size<pos:position pos:line="130" pos:column="7"/></name> <operator pos:line="130" pos:column="8">+=<pos:position pos:line="130" pos:column="10"/></operator> <call><name pos:line="130" pos:column="11">AddFormDataf<pos:position pos:line="130" pos:column="23"/></name><argument_list pos:line="130" pos:column="23">(<argument><expr><operator pos:line="130" pos:column="24">&amp;<pos:position pos:line="130" pos:column="29"/></operator><name pos:line="130" pos:column="25">form<pos:position pos:line="130" pos:column="29"/></name></expr></argument>,
		       <argument><expr><literal type="string" pos:line="131" pos:column="24">"\r\n--%s--\r\n"<pos:position pos:line="131" pos:column="40"/></literal></expr></argument>,
		       <argument><expr><name pos:line="132" pos:column="24">boundary<pos:position pos:line="132" pos:column="32"/></name></expr></argument>)<pos:position pos:line="132" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="134" pos:column="3">*<pos:position pos:line="134" pos:column="4"/></operator><name pos:line="134" pos:column="4">sizep<pos:position pos:line="134" pos:column="9"/></name> <operator pos:line="134" pos:column="10">=<pos:position pos:line="134" pos:column="11"/></operator> <name pos:line="134" pos:column="12">size<pos:position pos:line="134" pos:column="16"/></name></expr>;<pos:position pos:line="134" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="136" pos:column="3">free<pos:position pos:line="136" pos:column="7"/></name><argument_list pos:line="136" pos:column="7">(<argument><expr><name pos:line="136" pos:column="8">boundary<pos:position pos:line="136" pos:column="16"/></name></expr></argument>)<pos:position pos:line="136" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="18"/></expr_stmt>

  <return pos:line="138" pos:column="3">return <expr><name pos:line="138" pos:column="10">firstform<pos:position pos:line="138" pos:column="19"/></name></expr>;<pos:position pos:line="138" pos:column="20"/></return>
}<pos:position pos:line="139" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1295.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">struct<pos:position pos:line="1" pos:column="26"/></name> <name pos:line="1" pos:column="27">connectdata<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">bool<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">done<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">HTTP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">http<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ppath<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">data<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">state<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">.<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">path<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">bool<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">paste_ftp_userpwd<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">FALSE<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">ftp_typecode<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><sizeof pos:line="8" pos:column="21">sizeof<argument_list pos:line="8" pos:column="27">(<argument><expr><literal type="string" pos:line="8" pos:column="28">"/;type=?"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></sizeof></expr>]<pos:position pos:line="8" pos:column="40"/></index></name> <init pos:line="8" pos:column="41">= <expr><literal type="string" pos:line="8" pos:column="43">""<pos:position pos:line="8" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">host<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name><name pos:line="9" pos:column="22">conn<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">host<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">name<pos:position pos:line="9" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">te<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="string" pos:line="10" pos:column="20">""<pos:position pos:line="10" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt> <comment type="block" pos:line="10" pos:column="24">/* transfer-encoding */</comment>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">ptr<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">request<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">Curl_HttpReq<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">httpreq<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><name><name pos:line="13" pos:column="26">data<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">set<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">.<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">httpreq<pos:position pos:line="13" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><operator pos:line="14" pos:column="5">!<pos:position pos:line="14" pos:column="6"/></operator><call><name pos:line="14" pos:column="6">defined<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">CURL_DISABLE_COOKIES<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">addcookies<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><name pos:line="15" pos:column="22">NULL<pos:position pos:line="15" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">curl_off_t<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">included_body<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="18" pos:column="3">const<pos:position pos:line="18" pos:column="8"/></specifier> <name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">httpstring<pos:position pos:line="18" pos:column="25"/></name></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">Curl_send_buffer<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">req_buffer<pos:position pos:line="19" pos:column="31"/></name></decl>;<pos:position pos:line="19" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">curl_off_t<pos:position pos:line="20" pos:column="13"/></name></type> <name pos:line="20" pos:column="14">postsize<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt> <comment type="block" pos:line="20" pos:column="28">/* curl_off_t to handle large file sizes */</comment>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">seekerr<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><name pos:line="21" pos:column="17">CURL_SEEKFUNC_OK<pos:position pos:line="21" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* Always consider the DO phase done after this function call, even if there
     may be parts of the request that is not yet sent, since we can deal with
     the rest of the request in the PERFORM phase. */</comment>
  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">done<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">TRUE<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>

  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><name><name pos:line="28" pos:column="6">conn<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">httpversion<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">&lt;<pos:position pos:line="28" pos:column="28"/></operator> <literal type="number" pos:line="28" pos:column="26">20<pos:position pos:line="28" pos:column="28"/></literal></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{ <comment type="block" pos:line="28" pos:column="32">/* unless the connection is re-used and already
                                  http2 */</comment>
    <switch pos:line="30" pos:column="5">switch<condition pos:line="30" pos:column="11">(<expr><name><name pos:line="30" pos:column="12">conn<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">negnpn<pos:position pos:line="30" pos:column="24"/></name></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition> <block pos:line="30" pos:column="26">{
    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">NPN_HTTP2<pos:position pos:line="31" pos:column="19"/></name></expr>:<pos:position pos:line="31" pos:column="20"/></case>
      <expr_stmt><expr><name pos:line="32" pos:column="7">result<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">Curl_http2_init<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">conn<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">result<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">result<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="36" pos:column="7">result<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">Curl_http2_setup<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">conn<pos:position pos:line="36" pos:column="37"/></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
      <if pos:line="37" pos:column="7">if<condition pos:line="37" pos:column="9">(<expr><name pos:line="37" pos:column="10">result<pos:position pos:line="37" pos:column="16"/></name></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17">
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">result<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="40" pos:column="7">result<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">Curl_http2_switched<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">conn<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">NULL<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="48">0<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
      <if pos:line="41" pos:column="7">if<condition pos:line="41" pos:column="9">(<expr><name pos:line="41" pos:column="10">result<pos:position pos:line="41" pos:column="16"/></name></expr>)<pos:position pos:line="41" pos:column="17"/></condition><then pos:line="41" pos:column="17">
        <block type="pseudo"><return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">result<pos:position pos:line="42" pos:column="22"/></name></expr>;<pos:position pos:line="42" pos:column="23"/></return></block></then></if>
      <break pos:line="43" pos:column="7">break;<pos:position pos:line="43" pos:column="13"/></break>
    <case pos:line="44" pos:column="5">case <expr><name pos:line="44" pos:column="10">NPN_HTTP1_1<pos:position pos:line="44" pos:column="21"/></name></expr>:<pos:position pos:line="44" pos:column="22"/></case>
      <comment type="block" pos:line="45" pos:column="7">/* continue with HTTP/1.1 when explicitly requested */</comment>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>
    <default pos:line="47" pos:column="5">default:<pos:position pos:line="47" pos:column="13"/></default>
      <comment type="block" pos:line="48" pos:column="7">/* and as fallback */</comment>
      <break pos:line="49" pos:column="7">break;<pos:position pos:line="49" pos:column="13"/></break>
    }<pos:position pos:line="50" pos:column="6"/></block></switch>
  }<pos:position pos:line="51" pos:column="4"/></block></then>
  <else pos:line="52" pos:column="3">else <block pos:line="52" pos:column="8">{
    <comment type="block" pos:line="53" pos:column="5">/* prepare for a http2 request */</comment>
    <expr_stmt><expr><name pos:line="54" pos:column="5">result<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">Curl_http2_setup<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">conn<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name pos:line="55" pos:column="8">result<pos:position pos:line="55" pos:column="14"/></name></expr>)<pos:position pos:line="55" pos:column="15"/></condition><then pos:line="55" pos:column="15">
      <block type="pseudo"><return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">result<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="59" pos:column="3">http<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">=<pos:position pos:line="59" pos:column="9"/></operator> <name><name pos:line="59" pos:column="10">data<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">req<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">protop<pos:position pos:line="59" pos:column="26"/></name></name></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>

  <if pos:line="61" pos:column="3">if<condition pos:line="61" pos:column="5">(<expr><operator pos:line="61" pos:column="6">!<pos:position pos:line="61" pos:column="7"/></operator><name><name pos:line="61" pos:column="7">data<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">state<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">this_is_a_follow<pos:position pos:line="61" pos:column="35"/></name></name></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36"> <block pos:line="61" pos:column="37">{
    <comment type="block" pos:line="62" pos:column="5">/* this is not a followed location, get the original host name */</comment>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><name><name pos:line="63" pos:column="8">data<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">state<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">first_host<pos:position pos:line="63" pos:column="30"/></name></name></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31">
      <comment type="block" pos:line="64" pos:column="7">/* Free to avoid leaking memory on multiple requests*/</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="7">free<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name><name pos:line="65" pos:column="12">data<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">state<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">.<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">first_host<pos:position pos:line="65" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="67" pos:column="5">data<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">state<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">.<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">first_host<pos:position pos:line="67" pos:column="27"/></name></name> <operator pos:line="67" pos:column="28">=<pos:position pos:line="67" pos:column="29"/></operator> <call><name pos:line="67" pos:column="30">strdup<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name><name pos:line="67" pos:column="37">conn<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">-&gt;<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="43">host<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">.<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="48">name<pos:position pos:line="67" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="54"/></expr_stmt>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><operator pos:line="68" pos:column="8">!<pos:position pos:line="68" pos:column="9"/></operator><name><name pos:line="68" pos:column="9">data<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">state<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">.<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="21">first_host<pos:position pos:line="68" pos:column="31"/></name></name></expr>)<pos:position pos:line="68" pos:column="32"/></condition><then pos:line="68" pos:column="32">
      <block type="pseudo"><return pos:line="69" pos:column="7">return <expr><name pos:line="69" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="71" pos:column="3">http<pos:position pos:line="71" pos:column="7"/></name><operator pos:line="71" pos:column="7">-&gt;<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="9">writebytecount<pos:position pos:line="71" pos:column="23"/></name></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name><name pos:line="71" pos:column="26">http<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-&gt;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="32">readbytecount<pos:position pos:line="71" pos:column="45"/></name></name> <operator pos:line="71" pos:column="46">=<pos:position pos:line="71" pos:column="47"/></operator> <literal type="number" pos:line="71" pos:column="48">0<pos:position pos:line="71" pos:column="49"/></literal></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt>

  <if pos:line="73" pos:column="3">if<condition pos:line="73" pos:column="5">(<expr><operator pos:line="73" pos:column="6">(<pos:position pos:line="73" pos:column="7"/></operator><name><name pos:line="73" pos:column="7">conn<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">-&gt;<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="13">handler<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">-&gt;<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="22">protocol<pos:position pos:line="73" pos:column="30"/></name></name><operator pos:line="73" pos:column="30">&amp;<pos:position pos:line="73" pos:column="35"/></operator><operator pos:line="73" pos:column="31">(<pos:position pos:line="73" pos:column="32"/></operator><name pos:line="73" pos:column="32">PROTO_FAMILY_HTTP<pos:position pos:line="73" pos:column="49"/></name><operator pos:line="73" pos:column="49">|<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="50">CURLPROTO_FTP<pos:position pos:line="73" pos:column="63"/></name><operator pos:line="73" pos:column="63">)<pos:position pos:line="73" pos:column="64"/></operator><operator pos:line="73" pos:column="64">)<pos:position pos:line="73" pos:column="65"/></operator> <operator pos:line="73" pos:column="66">&amp;&amp;<pos:position pos:line="73" pos:column="76"/></operator>
     <name><name pos:line="74" pos:column="6">data<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">-&gt;<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="12">set<pos:position pos:line="74" pos:column="15"/></name><operator pos:line="74" pos:column="15">.<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="16">upload<pos:position pos:line="74" pos:column="22"/></name></name></expr>)<pos:position pos:line="74" pos:column="23"/></condition><then pos:line="74" pos:column="23"> <block pos:line="74" pos:column="24">{
    <expr_stmt><expr><name pos:line="75" pos:column="5">httpreq<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <name pos:line="75" pos:column="15">HTTPREQ_PUT<pos:position pos:line="75" pos:column="26"/></name></expr>;<pos:position pos:line="75" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="78" pos:column="3">/* Now set the 'request' pointer to the proper request string */</comment>
  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">(<expr><name><name pos:line="79" pos:column="6">data<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">set<pos:position pos:line="79" pos:column="15"/></name><operator pos:line="79" pos:column="15">.<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="16">str<pos:position pos:line="79" pos:column="19"/></name><index pos:line="79" pos:column="19">[<expr><name pos:line="79" pos:column="20">STRING_CUSTOMREQUEST<pos:position pos:line="79" pos:column="40"/></name></expr>]<pos:position pos:line="79" pos:column="41"/></index></name></expr>)<pos:position pos:line="79" pos:column="42"/></condition><then pos:line="79" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="5">request<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <name><name pos:line="80" pos:column="15">data<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">-&gt;<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="21">set<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">.<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="25">str<pos:position pos:line="80" pos:column="28"/></name><index pos:line="80" pos:column="28">[<expr><name pos:line="80" pos:column="29">STRING_CUSTOMREQUEST<pos:position pos:line="80" pos:column="49"/></name></expr>]<pos:position pos:line="80" pos:column="50"/></index></name></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt></block></then>
  <else pos:line="81" pos:column="3">else <block pos:line="81" pos:column="8">{
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><name><name pos:line="82" pos:column="8">data<pos:position pos:line="82" pos:column="12"/></name><operator pos:line="82" pos:column="12">-&gt;<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="14">set<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">.<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">opt_no_body<pos:position pos:line="82" pos:column="29"/></name></name></expr>)<pos:position pos:line="82" pos:column="30"/></condition><then pos:line="82" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="7">request<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <literal type="string" pos:line="83" pos:column="17">"HEAD"<pos:position pos:line="83" pos:column="23"/></literal></expr>;<pos:position pos:line="83" pos:column="24"/></expr_stmt></block></then>
    <else pos:line="84" pos:column="5">else <block pos:line="84" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">DEBUGASSERT<pos:position pos:line="85" pos:column="18"/></name><argument_list pos:line="85" pos:column="18">(<argument><expr><operator pos:line="85" pos:column="19">(<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="20">httpreq<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">&gt;<pos:position pos:line="85" pos:column="32"/></operator> <name pos:line="85" pos:column="30">HTTPREQ_NONE<pos:position pos:line="85" pos:column="42"/></name><operator pos:line="85" pos:column="42">)<pos:position pos:line="85" pos:column="43"/></operator> <operator pos:line="85" pos:column="44">&amp;&amp;<pos:position pos:line="85" pos:column="54"/></operator> <operator pos:line="85" pos:column="47">(<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="48">httpreq<pos:position pos:line="85" pos:column="55"/></name> <operator pos:line="85" pos:column="56">&lt;<pos:position pos:line="85" pos:column="60"/></operator> <name pos:line="85" pos:column="58">HTTPREQ_LAST<pos:position pos:line="85" pos:column="70"/></name><operator pos:line="85" pos:column="70">)<pos:position pos:line="85" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="85" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="73"/></expr_stmt>
      <switch pos:line="86" pos:column="7">switch<condition pos:line="86" pos:column="13">(<expr><name pos:line="86" pos:column="14">httpreq<pos:position pos:line="86" pos:column="21"/></name></expr>)<pos:position pos:line="86" pos:column="22"/></condition> <block pos:line="86" pos:column="23">{
      <case pos:line="87" pos:column="7">case <expr><name pos:line="87" pos:column="12">HTTPREQ_POST<pos:position pos:line="87" pos:column="24"/></name></expr>:<pos:position pos:line="87" pos:column="25"/></case>
      <case pos:line="88" pos:column="7">case <expr><name pos:line="88" pos:column="12">HTTPREQ_POST_FORM<pos:position pos:line="88" pos:column="29"/></name></expr>:<pos:position pos:line="88" pos:column="30"/></case>
        <expr_stmt><expr><name pos:line="89" pos:column="9">request<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">=<pos:position pos:line="89" pos:column="18"/></operator> <literal type="string" pos:line="89" pos:column="19">"POST"<pos:position pos:line="89" pos:column="25"/></literal></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>
        <break pos:line="90" pos:column="9">break;<pos:position pos:line="90" pos:column="15"/></break>
      <case pos:line="91" pos:column="7">case <expr><name pos:line="91" pos:column="12">HTTPREQ_PUT<pos:position pos:line="91" pos:column="23"/></name></expr>:<pos:position pos:line="91" pos:column="24"/></case>
        <expr_stmt><expr><name pos:line="92" pos:column="9">request<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <literal type="string" pos:line="92" pos:column="19">"PUT"<pos:position pos:line="92" pos:column="24"/></literal></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt>
        <break pos:line="93" pos:column="9">break;<pos:position pos:line="93" pos:column="15"/></break>
      <default pos:line="94" pos:column="7">default:<pos:position pos:line="94" pos:column="15"/></default> <comment type="block" pos:line="94" pos:column="16">/* this should never happen */</comment>
      <case pos:line="95" pos:column="7">case <expr><name pos:line="95" pos:column="12">HTTPREQ_GET<pos:position pos:line="95" pos:column="23"/></name></expr>:<pos:position pos:line="95" pos:column="24"/></case>
        <expr_stmt><expr><name pos:line="96" pos:column="9">request<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator> <literal type="string" pos:line="96" pos:column="19">"GET"<pos:position pos:line="96" pos:column="24"/></literal></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt>
        <break pos:line="97" pos:column="9">break;<pos:position pos:line="97" pos:column="15"/></break>
      <case pos:line="98" pos:column="7">case <expr><name pos:line="98" pos:column="12">HTTPREQ_HEAD<pos:position pos:line="98" pos:column="24"/></name></expr>:<pos:position pos:line="98" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="99" pos:column="9">request<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <literal type="string" pos:line="99" pos:column="19">"HEAD"<pos:position pos:line="99" pos:column="25"/></literal></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt>
        <break pos:line="100" pos:column="9">break;<pos:position pos:line="100" pos:column="15"/></break>
      }<pos:position pos:line="101" pos:column="8"/></block></switch>
    }<pos:position pos:line="102" pos:column="6"/></block></else></if>
  }<pos:position pos:line="103" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="105" pos:column="3">/* The User-Agent string might have been allocated in url.c already, because
     it might have been used in the proxy connect, but if we have got a header
     with the user-agent string specified, we erase the previously made string
     here. */</comment>
  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><call><name pos:line="109" pos:column="6">Curl_checkheaders<pos:position pos:line="109" pos:column="23"/></name><argument_list pos:line="109" pos:column="23">(<argument><expr><name pos:line="109" pos:column="24">conn<pos:position pos:line="109" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="30">"User-Agent:"<pos:position pos:line="109" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="44"/></argument_list></call> <operator pos:line="109" pos:column="45">&amp;&amp;<pos:position pos:line="109" pos:column="55"/></operator> <name><name pos:line="109" pos:column="48">conn<pos:position pos:line="109" pos:column="52"/></name><operator pos:line="109" pos:column="52">-&gt;<pos:position pos:line="109" pos:column="57"/></operator><name pos:line="109" pos:column="54">allocptr<pos:position pos:line="109" pos:column="62"/></name><operator pos:line="109" pos:column="62">.<pos:position pos:line="109" pos:column="63"/></operator><name pos:line="109" pos:column="63">uagent<pos:position pos:line="109" pos:column="69"/></name></name></expr>)<pos:position pos:line="109" pos:column="70"/></condition><then pos:line="109" pos:column="70"> <block pos:line="109" pos:column="71">{
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">free<pos:position pos:line="110" pos:column="9"/></name><argument_list pos:line="110" pos:column="9">(<argument><expr><name><name pos:line="110" pos:column="10">conn<pos:position pos:line="110" pos:column="14"/></name><operator pos:line="110" pos:column="14">-&gt;<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="16">allocptr<pos:position pos:line="110" pos:column="24"/></name><operator pos:line="110" pos:column="24">.<pos:position pos:line="110" pos:column="25"/></operator><name pos:line="110" pos:column="25">uagent<pos:position pos:line="110" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">conn<pos:position pos:line="111" pos:column="9"/></name><operator pos:line="111" pos:column="9">-&gt;<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="11">allocptr<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">.<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">uagent<pos:position pos:line="111" pos:column="26"/></name></name><operator pos:line="111" pos:column="26">=<pos:position pos:line="111" pos:column="27"/></operator><name pos:line="111" pos:column="27">NULL<pos:position pos:line="111" pos:column="31"/></name></expr>;<pos:position pos:line="111" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="112" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="114" pos:column="3">/* setup the authentication headers */</comment>
  <expr_stmt><expr><name pos:line="115" pos:column="3">result<pos:position pos:line="115" pos:column="9"/></name> <operator pos:line="115" pos:column="10">=<pos:position pos:line="115" pos:column="11"/></operator> <call><name pos:line="115" pos:column="12">Curl_http_output_auth<pos:position pos:line="115" pos:column="33"/></name><argument_list pos:line="115" pos:column="33">(<argument><expr><name pos:line="115" pos:column="34">conn<pos:position pos:line="115" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="40">request<pos:position pos:line="115" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="49">ppath<pos:position pos:line="115" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="56">FALSE<pos:position pos:line="115" pos:column="61"/></name></expr></argument>)<pos:position pos:line="115" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="63"/></expr_stmt>
  <if pos:line="116" pos:column="3">if<condition pos:line="116" pos:column="5">(<expr><name pos:line="116" pos:column="6">result<pos:position pos:line="116" pos:column="12"/></name></expr>)<pos:position pos:line="116" pos:column="13"/></condition><then pos:line="116" pos:column="13">
    <block type="pseudo"><return pos:line="117" pos:column="5">return <expr><name pos:line="117" pos:column="12">result<pos:position pos:line="117" pos:column="18"/></name></expr>;<pos:position pos:line="117" pos:column="19"/></return></block></then></if>

  <if pos:line="119" pos:column="3">if<condition pos:line="119" pos:column="5">(<expr><operator pos:line="119" pos:column="6">(<pos:position pos:line="119" pos:column="7"/></operator><name><name pos:line="119" pos:column="7">data<pos:position pos:line="119" pos:column="11"/></name><operator pos:line="119" pos:column="11">-&gt;<pos:position pos:line="119" pos:column="16"/></operator><name pos:line="119" pos:column="13">state<pos:position pos:line="119" pos:column="18"/></name><operator pos:line="119" pos:column="18">.<pos:position pos:line="119" pos:column="19"/></operator><name pos:line="119" pos:column="19">authhost<pos:position pos:line="119" pos:column="27"/></name><operator pos:line="119" pos:column="27">.<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="28">multi<pos:position pos:line="119" pos:column="33"/></name></name> <operator pos:line="119" pos:column="34">||<pos:position pos:line="119" pos:column="36"/></operator> <name><name pos:line="119" pos:column="37">data<pos:position pos:line="119" pos:column="41"/></name><operator pos:line="119" pos:column="41">-&gt;<pos:position pos:line="119" pos:column="46"/></operator><name pos:line="119" pos:column="43">state<pos:position pos:line="119" pos:column="48"/></name><operator pos:line="119" pos:column="48">.<pos:position pos:line="119" pos:column="49"/></operator><name pos:line="119" pos:column="49">authproxy<pos:position pos:line="119" pos:column="58"/></name><operator pos:line="119" pos:column="58">.<pos:position pos:line="119" pos:column="59"/></operator><name pos:line="119" pos:column="59">multi<pos:position pos:line="119" pos:column="64"/></name></name><operator pos:line="119" pos:column="64">)<pos:position pos:line="119" pos:column="65"/></operator> <operator pos:line="119" pos:column="66">&amp;&amp;<pos:position pos:line="119" pos:column="76"/></operator>
     <operator pos:line="120" pos:column="6">(<pos:position pos:line="120" pos:column="7"/></operator><name pos:line="120" pos:column="7">httpreq<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">!=<pos:position pos:line="120" pos:column="17"/></operator> <name pos:line="120" pos:column="18">HTTPREQ_GET<pos:position pos:line="120" pos:column="29"/></name><operator pos:line="120" pos:column="29">)<pos:position pos:line="120" pos:column="30"/></operator> <operator pos:line="120" pos:column="31">&amp;&amp;<pos:position pos:line="120" pos:column="41"/></operator>
     <operator pos:line="121" pos:column="6">(<pos:position pos:line="121" pos:column="7"/></operator><name pos:line="121" pos:column="7">httpreq<pos:position pos:line="121" pos:column="14"/></name> <operator pos:line="121" pos:column="15">!=<pos:position pos:line="121" pos:column="17"/></operator> <name pos:line="121" pos:column="18">HTTPREQ_HEAD<pos:position pos:line="121" pos:column="30"/></name><operator pos:line="121" pos:column="30">)<pos:position pos:line="121" pos:column="31"/></operator></expr>)<pos:position pos:line="121" pos:column="32"/></condition><then pos:line="121" pos:column="32"> <block pos:line="121" pos:column="33">{
    <comment type="block" pos:line="122" pos:column="5">/* Auth is required and we are not authenticated yet. Make a PUT or POST
       with content-length zero as a "probe". */</comment>
    <expr_stmt><expr><name><name pos:line="124" pos:column="5">conn<pos:position pos:line="124" pos:column="9"/></name><operator pos:line="124" pos:column="9">-&gt;<pos:position pos:line="124" pos:column="14"/></operator><name pos:line="124" pos:column="11">bits<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">authneg<pos:position pos:line="124" pos:column="23"/></name></name> <operator pos:line="124" pos:column="24">=<pos:position pos:line="124" pos:column="25"/></operator> <name pos:line="124" pos:column="26">TRUE<pos:position pos:line="124" pos:column="30"/></name></expr>;<pos:position pos:line="124" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="125" pos:column="4"/></block></then>
  <else pos:line="126" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="127" pos:column="5">conn<pos:position pos:line="127" pos:column="9"/></name><operator pos:line="127" pos:column="9">-&gt;<pos:position pos:line="127" pos:column="14"/></operator><name pos:line="127" pos:column="11">bits<pos:position pos:line="127" pos:column="15"/></name><operator pos:line="127" pos:column="15">.<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="16">authneg<pos:position pos:line="127" pos:column="23"/></name></name> <operator pos:line="127" pos:column="24">=<pos:position pos:line="127" pos:column="25"/></operator> <name pos:line="127" pos:column="26">FALSE<pos:position pos:line="127" pos:column="31"/></name></expr>;<pos:position pos:line="127" pos:column="32"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="129" pos:column="3">Curl_safefree<pos:position pos:line="129" pos:column="16"/></name><argument_list pos:line="129" pos:column="16">(<argument><expr><name><name pos:line="129" pos:column="17">conn<pos:position pos:line="129" pos:column="21"/></name><operator pos:line="129" pos:column="21">-&gt;<pos:position pos:line="129" pos:column="26"/></operator><name pos:line="129" pos:column="23">allocptr<pos:position pos:line="129" pos:column="31"/></name><operator pos:line="129" pos:column="31">.<pos:position pos:line="129" pos:column="32"/></operator><name pos:line="129" pos:column="32">ref<pos:position pos:line="129" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="37"/></expr_stmt>
  <if pos:line="130" pos:column="3">if<condition pos:line="130" pos:column="5">(<expr><name><name pos:line="130" pos:column="6">data<pos:position pos:line="130" pos:column="10"/></name><operator pos:line="130" pos:column="10">-&gt;<pos:position pos:line="130" pos:column="15"/></operator><name pos:line="130" pos:column="12">change<pos:position pos:line="130" pos:column="18"/></name><operator pos:line="130" pos:column="18">.<pos:position pos:line="130" pos:column="19"/></operator><name pos:line="130" pos:column="19">referer<pos:position pos:line="130" pos:column="26"/></name></name> <operator pos:line="130" pos:column="27">&amp;&amp;<pos:position pos:line="130" pos:column="37"/></operator> <operator pos:line="130" pos:column="30">!<pos:position pos:line="130" pos:column="31"/></operator><call><name pos:line="130" pos:column="31">Curl_checkheaders<pos:position pos:line="130" pos:column="48"/></name><argument_list pos:line="130" pos:column="48">(<argument><expr><name pos:line="130" pos:column="49">conn<pos:position pos:line="130" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="55">"Referer:"<pos:position pos:line="130" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="67"/></condition><then pos:line="130" pos:column="67"> <block pos:line="130" pos:column="68">{
    <expr_stmt><expr><name><name pos:line="131" pos:column="5">conn<pos:position pos:line="131" pos:column="9"/></name><operator pos:line="131" pos:column="9">-&gt;<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="11">allocptr<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">.<pos:position pos:line="131" pos:column="20"/></operator><name pos:line="131" pos:column="20">ref<pos:position pos:line="131" pos:column="23"/></name></name> <operator pos:line="131" pos:column="24">=<pos:position pos:line="131" pos:column="25"/></operator> <call><name pos:line="131" pos:column="26">aprintf<pos:position pos:line="131" pos:column="33"/></name><argument_list pos:line="131" pos:column="33">(<argument><expr><literal type="string" pos:line="131" pos:column="34">"Referer: %s\r\n"<pos:position pos:line="131" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="53">data<pos:position pos:line="131" pos:column="57"/></name><operator pos:line="131" pos:column="57">-&gt;<pos:position pos:line="131" pos:column="62"/></operator><name pos:line="131" pos:column="59">change<pos:position pos:line="131" pos:column="65"/></name><operator pos:line="131" pos:column="65">.<pos:position pos:line="131" pos:column="66"/></operator><name pos:line="131" pos:column="66">referer<pos:position pos:line="131" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="75"/></expr_stmt>
    <if pos:line="132" pos:column="5">if<condition pos:line="132" pos:column="7">(<expr><operator pos:line="132" pos:column="8">!<pos:position pos:line="132" pos:column="9"/></operator><name><name pos:line="132" pos:column="9">conn<pos:position pos:line="132" pos:column="13"/></name><operator pos:line="132" pos:column="13">-&gt;<pos:position pos:line="132" pos:column="18"/></operator><name pos:line="132" pos:column="15">allocptr<pos:position pos:line="132" pos:column="23"/></name><operator pos:line="132" pos:column="23">.<pos:position pos:line="132" pos:column="24"/></operator><name pos:line="132" pos:column="24">ref<pos:position pos:line="132" pos:column="27"/></name></name></expr>)<pos:position pos:line="132" pos:column="28"/></condition><then pos:line="132" pos:column="28">
      <block type="pseudo"><return pos:line="133" pos:column="7">return <expr><name pos:line="133" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="133" pos:column="33"/></name></expr>;<pos:position pos:line="133" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="134" pos:column="4"/></block></then>
  <else pos:line="135" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="5">conn<pos:position pos:line="136" pos:column="9"/></name><operator pos:line="136" pos:column="9">-&gt;<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="11">allocptr<pos:position pos:line="136" pos:column="19"/></name><operator pos:line="136" pos:column="19">.<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="20">ref<pos:position pos:line="136" pos:column="23"/></name></name> <operator pos:line="136" pos:column="24">=<pos:position pos:line="136" pos:column="25"/></operator> <name pos:line="136" pos:column="26">NULL<pos:position pos:line="136" pos:column="30"/></name></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt></block></else></if>

<cpp:if pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">if<pos:position pos:line="138" pos:column="4"/></cpp:directive> <expr><operator pos:line="138" pos:column="5">!<pos:position pos:line="138" pos:column="6"/></operator><call><name pos:line="138" pos:column="6">defined<pos:position pos:line="138" pos:column="13"/></name><argument_list pos:line="138" pos:column="13">(<argument><expr><name pos:line="138" pos:column="14">CURL_DISABLE_COOKIES<pos:position pos:line="138" pos:column="34"/></name></expr></argument>)<pos:position pos:line="138" pos:column="35"/></argument_list></call></expr></cpp:if>
  <if pos:line="139" pos:column="3">if<condition pos:line="139" pos:column="5">(<expr><name><name pos:line="139" pos:column="6">data<pos:position pos:line="139" pos:column="10"/></name><operator pos:line="139" pos:column="10">-&gt;<pos:position pos:line="139" pos:column="15"/></operator><name pos:line="139" pos:column="12">set<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">.<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="16">str<pos:position pos:line="139" pos:column="19"/></name><index pos:line="139" pos:column="19">[<expr><name pos:line="139" pos:column="20">STRING_COOKIE<pos:position pos:line="139" pos:column="33"/></name></expr>]<pos:position pos:line="139" pos:column="34"/></index></name> <operator pos:line="139" pos:column="35">&amp;&amp;<pos:position pos:line="139" pos:column="45"/></operator> <operator pos:line="139" pos:column="38">!<pos:position pos:line="139" pos:column="39"/></operator><call><name pos:line="139" pos:column="39">Curl_checkheaders<pos:position pos:line="139" pos:column="56"/></name><argument_list pos:line="139" pos:column="56">(<argument><expr><name pos:line="139" pos:column="57">conn<pos:position pos:line="139" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="63">"Cookie:"<pos:position pos:line="139" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="74"/></condition><then pos:line="139" pos:column="74">
    <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="5">addcookies<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">=<pos:position pos:line="140" pos:column="17"/></operator> <name><name pos:line="140" pos:column="18">data<pos:position pos:line="140" pos:column="22"/></name><operator pos:line="140" pos:column="22">-&gt;<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="24">set<pos:position pos:line="140" pos:column="27"/></name><operator pos:line="140" pos:column="27">.<pos:position pos:line="140" pos:column="28"/></operator><name pos:line="140" pos:column="28">str<pos:position pos:line="140" pos:column="31"/></name><index pos:line="140" pos:column="31">[<expr><name pos:line="140" pos:column="32">STRING_COOKIE<pos:position pos:line="140" pos:column="45"/></name></expr>]<pos:position pos:line="140" pos:column="46"/></index></name></expr>;<pos:position pos:line="140" pos:column="47"/></expr_stmt></block></then></if>
<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif<pos:position pos:line="141" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="143" pos:column="3">if<condition pos:line="143" pos:column="5">(<expr><operator pos:line="143" pos:column="6">!<pos:position pos:line="143" pos:column="7"/></operator><call><name pos:line="143" pos:column="7">Curl_checkheaders<pos:position pos:line="143" pos:column="24"/></name><argument_list pos:line="143" pos:column="24">(<argument><expr><name pos:line="143" pos:column="25">conn<pos:position pos:line="143" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="31">"Accept-Encoding:"<pos:position pos:line="143" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="50"/></argument_list></call> <operator pos:line="143" pos:column="51">&amp;&amp;<pos:position pos:line="143" pos:column="61"/></operator>
     <name><name pos:line="144" pos:column="6">data<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">-&gt;<pos:position pos:line="144" pos:column="15"/></operator><name pos:line="144" pos:column="12">set<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">.<pos:position pos:line="144" pos:column="16"/></operator><name pos:line="144" pos:column="16">str<pos:position pos:line="144" pos:column="19"/></name><index pos:line="144" pos:column="19">[<expr><name pos:line="144" pos:column="20">STRING_ENCODING<pos:position pos:line="144" pos:column="35"/></name></expr>]<pos:position pos:line="144" pos:column="36"/></index></name></expr>)<pos:position pos:line="144" pos:column="37"/></condition><then pos:line="144" pos:column="37"> <block pos:line="144" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="145" pos:column="5">Curl_safefree<pos:position pos:line="145" pos:column="18"/></name><argument_list pos:line="145" pos:column="18">(<argument><expr><name><name pos:line="145" pos:column="19">conn<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">-&gt;<pos:position pos:line="145" pos:column="28"/></operator><name pos:line="145" pos:column="25">allocptr<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">.<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="34">accept_encoding<pos:position pos:line="145" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="146" pos:column="5">conn<pos:position pos:line="146" pos:column="9"/></name><operator pos:line="146" pos:column="9">-&gt;<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="11">allocptr<pos:position pos:line="146" pos:column="19"/></name><operator pos:line="146" pos:column="19">.<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="20">accept_encoding<pos:position pos:line="146" pos:column="35"/></name></name> <operator pos:line="146" pos:column="36">=<pos:position pos:line="146" pos:column="37"/></operator>
      <call><name pos:line="147" pos:column="7">aprintf<pos:position pos:line="147" pos:column="14"/></name><argument_list pos:line="147" pos:column="14">(<argument><expr><literal type="string" pos:line="147" pos:column="15">"Accept-Encoding: %s\r\n"<pos:position pos:line="147" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="42">data<pos:position pos:line="147" pos:column="46"/></name><operator pos:line="147" pos:column="46">-&gt;<pos:position pos:line="147" pos:column="51"/></operator><name pos:line="147" pos:column="48">set<pos:position pos:line="147" pos:column="51"/></name><operator pos:line="147" pos:column="51">.<pos:position pos:line="147" pos:column="52"/></operator><name pos:line="147" pos:column="52">str<pos:position pos:line="147" pos:column="55"/></name><index pos:line="147" pos:column="55">[<expr><name pos:line="147" pos:column="56">STRING_ENCODING<pos:position pos:line="147" pos:column="71"/></name></expr>]<pos:position pos:line="147" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="147" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="74"/></expr_stmt>
    <if pos:line="148" pos:column="5">if<condition pos:line="148" pos:column="7">(<expr><operator pos:line="148" pos:column="8">!<pos:position pos:line="148" pos:column="9"/></operator><name><name pos:line="148" pos:column="9">conn<pos:position pos:line="148" pos:column="13"/></name><operator pos:line="148" pos:column="13">-&gt;<pos:position pos:line="148" pos:column="18"/></operator><name pos:line="148" pos:column="15">allocptr<pos:position pos:line="148" pos:column="23"/></name><operator pos:line="148" pos:column="23">.<pos:position pos:line="148" pos:column="24"/></operator><name pos:line="148" pos:column="24">accept_encoding<pos:position pos:line="148" pos:column="39"/></name></name></expr>)<pos:position pos:line="148" pos:column="40"/></condition><then pos:line="148" pos:column="40">
      <block type="pseudo"><return pos:line="149" pos:column="7">return <expr><name pos:line="149" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="149" pos:column="33"/></name></expr>;<pos:position pos:line="149" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">ifdef<pos:position pos:line="152" pos:column="7"/></cpp:directive> <name pos:line="152" pos:column="8">HAVE_LIBZ<pos:position pos:line="152" pos:column="17"/></name></cpp:ifdef>
  <comment type="block" pos:line="153" pos:column="3">/* we only consider transfer-encoding magic if libz support is built-in */</comment>

  <if pos:line="155" pos:column="3">if<condition pos:line="155" pos:column="5">(<expr><operator pos:line="155" pos:column="6">!<pos:position pos:line="155" pos:column="7"/></operator><call><name pos:line="155" pos:column="7">Curl_checkheaders<pos:position pos:line="155" pos:column="24"/></name><argument_list pos:line="155" pos:column="24">(<argument><expr><name pos:line="155" pos:column="25">conn<pos:position pos:line="155" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="31">"TE:"<pos:position pos:line="155" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="37"/></argument_list></call> <operator pos:line="155" pos:column="38">&amp;&amp;<pos:position pos:line="155" pos:column="48"/></operator>
     <name><name pos:line="156" pos:column="6">data<pos:position pos:line="156" pos:column="10"/></name><operator pos:line="156" pos:column="10">-&gt;<pos:position pos:line="156" pos:column="15"/></operator><name pos:line="156" pos:column="12">set<pos:position pos:line="156" pos:column="15"/></name><operator pos:line="156" pos:column="15">.<pos:position pos:line="156" pos:column="16"/></operator><name pos:line="156" pos:column="16">http_transfer_encoding<pos:position pos:line="156" pos:column="38"/></name></name></expr>)<pos:position pos:line="156" pos:column="39"/></condition><then pos:line="156" pos:column="39"> <block pos:line="156" pos:column="40">{
    <comment type="block" pos:line="157" pos:column="5">/* When we are to insert a TE: header in the request, we must also insert
       TE in a Connection: header, so we need to merge the custom provided
       Connection: header and prevent the original to get sent. Note that if
       the user has inserted his/hers own TE: header we don't do this magic
       but then assume that the user will handle it all! */</comment>
    <decl_stmt><decl><type><name pos:line="162" pos:column="5">char<pos:position pos:line="162" pos:column="9"/></name> <modifier pos:line="162" pos:column="10">*<pos:position pos:line="162" pos:column="11"/></modifier></type><name pos:line="162" pos:column="11">cptr<pos:position pos:line="162" pos:column="15"/></name> <init pos:line="162" pos:column="16">= <expr><call><name pos:line="162" pos:column="18">Curl_checkheaders<pos:position pos:line="162" pos:column="35"/></name><argument_list pos:line="162" pos:column="35">(<argument><expr><name pos:line="162" pos:column="36">conn<pos:position pos:line="162" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="42">"Connection:"<pos:position pos:line="162" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="162" pos:column="57"/></decl_stmt>
<cpp:define pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">define<pos:position pos:line="163" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="163" pos:column="9">TE_HEADER<pos:position pos:line="163" pos:column="18"/></name></cpp:macro> <cpp:value pos:line="163" pos:column="19">"TE: gzip\r\n"<pos:position pos:line="163" pos:column="33"/></cpp:value></cpp:define>

    <expr_stmt><expr><call><name pos:line="165" pos:column="5">Curl_safefree<pos:position pos:line="165" pos:column="18"/></name><argument_list pos:line="165" pos:column="18">(<argument><expr><name><name pos:line="165" pos:column="19">conn<pos:position pos:line="165" pos:column="23"/></name><operator pos:line="165" pos:column="23">-&gt;<pos:position pos:line="165" pos:column="28"/></operator><name pos:line="165" pos:column="25">allocptr<pos:position pos:line="165" pos:column="33"/></name><operator pos:line="165" pos:column="33">.<pos:position pos:line="165" pos:column="34"/></operator><name pos:line="165" pos:column="34">te<pos:position pos:line="165" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="167" pos:column="5">/* Create the (updated) Connection: header */</comment>
    <expr_stmt><expr><name><name pos:line="168" pos:column="5">conn<pos:position pos:line="168" pos:column="9"/></name><operator pos:line="168" pos:column="9">-&gt;<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="11">allocptr<pos:position pos:line="168" pos:column="19"/></name><operator pos:line="168" pos:column="19">.<pos:position pos:line="168" pos:column="20"/></operator><name pos:line="168" pos:column="20">te<pos:position pos:line="168" pos:column="22"/></name></name> <operator pos:line="168" pos:column="23">=<pos:position pos:line="168" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="168" pos:column="25">cptr<pos:position pos:line="168" pos:column="29"/></name></expr>?<pos:position pos:line="168" pos:column="30"/></condition><then pos:line="168" pos:column="30"> <expr><call><name pos:line="168" pos:column="31">aprintf<pos:position pos:line="168" pos:column="38"/></name><argument_list pos:line="168" pos:column="38">(<argument><expr><literal type="string" pos:line="168" pos:column="39">"%s, TE\r\n"<pos:position pos:line="168" pos:column="51"/></literal> <name pos:line="168" pos:column="52">TE_HEADER<pos:position pos:line="168" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="63">cptr<pos:position pos:line="168" pos:column="67"/></name></expr></argument>)<pos:position pos:line="168" pos:column="68"/></argument_list></call></expr></then><else pos:line="168" pos:column="68">:
      <expr><call><name pos:line="169" pos:column="7">strdup<pos:position pos:line="169" pos:column="13"/></name><argument_list pos:line="169" pos:column="13">(<argument><expr><literal type="string" pos:line="169" pos:column="14">"Connection: TE\r\n"<pos:position pos:line="169" pos:column="34"/></literal> <name pos:line="169" pos:column="35">TE_HEADER<pos:position pos:line="169" pos:column="44"/></name></expr></argument>)<pos:position pos:line="169" pos:column="45"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="169" pos:column="46"/></expr_stmt>

    <if pos:line="171" pos:column="5">if<condition pos:line="171" pos:column="7">(<expr><operator pos:line="171" pos:column="8">!<pos:position pos:line="171" pos:column="9"/></operator><name><name pos:line="171" pos:column="9">conn<pos:position pos:line="171" pos:column="13"/></name><operator pos:line="171" pos:column="13">-&gt;<pos:position pos:line="171" pos:column="18"/></operator><name pos:line="171" pos:column="15">allocptr<pos:position pos:line="171" pos:column="23"/></name><operator pos:line="171" pos:column="23">.<pos:position pos:line="171" pos:column="24"/></operator><name pos:line="171" pos:column="24">te<pos:position pos:line="171" pos:column="26"/></name></name></expr>)<pos:position pos:line="171" pos:column="27"/></condition><then pos:line="171" pos:column="27">
      <block type="pseudo"><return pos:line="172" pos:column="7">return <expr><name pos:line="172" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="172" pos:column="33"/></name></expr>;<pos:position pos:line="172" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="173" pos:column="4"/></block></then></if>
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif<pos:position pos:line="174" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="176" pos:column="3">if<condition pos:line="176" pos:column="5">(<expr><name><name pos:line="176" pos:column="6">conn<pos:position pos:line="176" pos:column="10"/></name><operator pos:line="176" pos:column="10">-&gt;<pos:position pos:line="176" pos:column="15"/></operator><name pos:line="176" pos:column="12">httpversion<pos:position pos:line="176" pos:column="23"/></name></name> <operator pos:line="176" pos:column="24">==<pos:position pos:line="176" pos:column="26"/></operator> <literal type="number" pos:line="176" pos:column="27">20<pos:position pos:line="176" pos:column="29"/></literal></expr>)<pos:position pos:line="176" pos:column="30"/></condition><then pos:line="176" pos:column="30">
    <comment type="block" pos:line="177" pos:column="5">/* In HTTP2 forbids Transfer-Encoding: chunked */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="178" pos:column="5">ptr<pos:position pos:line="178" pos:column="8"/></name> <operator pos:line="178" pos:column="9">=<pos:position pos:line="178" pos:column="10"/></operator> <name pos:line="178" pos:column="11">NULL<pos:position pos:line="178" pos:column="15"/></name></expr>;<pos:position pos:line="178" pos:column="16"/></expr_stmt></block></then>
  <else pos:line="179" pos:column="3">else <block pos:line="179" pos:column="8">{
    <expr_stmt><expr><name pos:line="180" pos:column="5">ptr<pos:position pos:line="180" pos:column="8"/></name> <operator pos:line="180" pos:column="9">=<pos:position pos:line="180" pos:column="10"/></operator> <call><name pos:line="180" pos:column="11">Curl_checkheaders<pos:position pos:line="180" pos:column="28"/></name><argument_list pos:line="180" pos:column="28">(<argument><expr><name pos:line="180" pos:column="29">conn<pos:position pos:line="180" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="35">"Transfer-Encoding:"<pos:position pos:line="180" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="57"/></expr_stmt>
    <if pos:line="181" pos:column="5">if<condition pos:line="181" pos:column="7">(<expr><name pos:line="181" pos:column="8">ptr<pos:position pos:line="181" pos:column="11"/></name></expr>)<pos:position pos:line="181" pos:column="12"/></condition><then pos:line="181" pos:column="12"> <block pos:line="181" pos:column="13">{
      <comment type="block" pos:line="182" pos:column="7">/* Some kind of TE is requested, check if 'chunked' is chosen */</comment>
      <expr_stmt><expr><name><name pos:line="183" pos:column="7">data<pos:position pos:line="183" pos:column="11"/></name><operator pos:line="183" pos:column="11">-&gt;<pos:position pos:line="183" pos:column="16"/></operator><name pos:line="183" pos:column="13">req<pos:position pos:line="183" pos:column="16"/></name><operator pos:line="183" pos:column="16">.<pos:position pos:line="183" pos:column="17"/></operator><name pos:line="183" pos:column="17">upload_chunky<pos:position pos:line="183" pos:column="30"/></name></name> <operator pos:line="183" pos:column="31">=<pos:position pos:line="183" pos:column="32"/></operator>
        <call><name pos:line="184" pos:column="9">Curl_compareheader<pos:position pos:line="184" pos:column="27"/></name><argument_list pos:line="184" pos:column="27">(<argument><expr><name pos:line="184" pos:column="28">ptr<pos:position pos:line="184" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="33">"Transfer-Encoding:"<pos:position pos:line="184" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="55">"chunked"<pos:position pos:line="184" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="185" pos:column="6"/></block></then>
    <else pos:line="186" pos:column="5">else <block pos:line="186" pos:column="10">{
      <if pos:line="187" pos:column="7">if<condition pos:line="187" pos:column="9">(<expr><operator pos:line="187" pos:column="10">(<pos:position pos:line="187" pos:column="11"/></operator><name><name pos:line="187" pos:column="11">conn<pos:position pos:line="187" pos:column="15"/></name><operator pos:line="187" pos:column="15">-&gt;<pos:position pos:line="187" pos:column="20"/></operator><name pos:line="187" pos:column="17">handler<pos:position pos:line="187" pos:column="24"/></name><operator pos:line="187" pos:column="24">-&gt;<pos:position pos:line="187" pos:column="29"/></operator><name pos:line="187" pos:column="26">protocol<pos:position pos:line="187" pos:column="34"/></name></name><operator pos:line="187" pos:column="34">&amp;<pos:position pos:line="187" pos:column="39"/></operator><name pos:line="187" pos:column="35">PROTO_FAMILY_HTTP<pos:position pos:line="187" pos:column="52"/></name><operator pos:line="187" pos:column="52">)<pos:position pos:line="187" pos:column="53"/></operator> <operator pos:line="187" pos:column="54">&amp;&amp;<pos:position pos:line="187" pos:column="64"/></operator>
         <name><name pos:line="188" pos:column="10">data<pos:position pos:line="188" pos:column="14"/></name><operator pos:line="188" pos:column="14">-&gt;<pos:position pos:line="188" pos:column="19"/></operator><name pos:line="188" pos:column="16">set<pos:position pos:line="188" pos:column="19"/></name><operator pos:line="188" pos:column="19">.<pos:position pos:line="188" pos:column="20"/></operator><name pos:line="188" pos:column="20">upload<pos:position pos:line="188" pos:column="26"/></name></name> <operator pos:line="188" pos:column="27">&amp;&amp;<pos:position pos:line="188" pos:column="37"/></operator>
         <operator pos:line="189" pos:column="10">(<pos:position pos:line="189" pos:column="11"/></operator><name><name pos:line="189" pos:column="11">data<pos:position pos:line="189" pos:column="15"/></name><operator pos:line="189" pos:column="15">-&gt;<pos:position pos:line="189" pos:column="20"/></operator><name pos:line="189" pos:column="17">state<pos:position pos:line="189" pos:column="22"/></name><operator pos:line="189" pos:column="22">.<pos:position pos:line="189" pos:column="23"/></operator><name pos:line="189" pos:column="23">infilesize<pos:position pos:line="189" pos:column="33"/></name></name> <operator pos:line="189" pos:column="34">==<pos:position pos:line="189" pos:column="36"/></operator> <operator pos:line="189" pos:column="37">-<pos:position pos:line="189" pos:column="38"/></operator><literal type="number" pos:line="189" pos:column="38">1<pos:position pos:line="189" pos:column="39"/></literal><operator pos:line="189" pos:column="39">)<pos:position pos:line="189" pos:column="40"/></operator></expr>)<pos:position pos:line="189" pos:column="41"/></condition><then pos:line="189" pos:column="41"> <block pos:line="189" pos:column="42">{
        <if pos:line="190" pos:column="9">if<condition pos:line="190" pos:column="11">(<expr><name><name pos:line="190" pos:column="12">conn<pos:position pos:line="190" pos:column="16"/></name><operator pos:line="190" pos:column="16">-&gt;<pos:position pos:line="190" pos:column="21"/></operator><name pos:line="190" pos:column="18">bits<pos:position pos:line="190" pos:column="22"/></name><operator pos:line="190" pos:column="22">.<pos:position pos:line="190" pos:column="23"/></operator><name pos:line="190" pos:column="23">authneg<pos:position pos:line="190" pos:column="30"/></name></name></expr>)<pos:position pos:line="190" pos:column="31"/></condition><then pos:line="190" pos:column="31">
          <comment type="block" pos:line="191" pos:column="11">/* don't enable chunked during auth neg */</comment>
          <block type="pseudo"><empty_stmt pos:line="192" pos:column="11">;<pos:position pos:line="192" pos:column="12"/></empty_stmt></block></then>
        <elseif pos:line="193" pos:column="9">else <if pos:line="193" pos:column="14">if<condition pos:line="193" pos:column="16">(<expr><call><name pos:line="193" pos:column="17">use_http_1_1plus<pos:position pos:line="193" pos:column="33"/></name><argument_list pos:line="193" pos:column="33">(<argument><expr><name pos:line="193" pos:column="34">data<pos:position pos:line="193" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="40">conn<pos:position pos:line="193" pos:column="44"/></name></expr></argument>)<pos:position pos:line="193" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="193" pos:column="46"/></condition><then pos:line="193" pos:column="46"> <block pos:line="193" pos:column="47">{
          <comment type="block" pos:line="194" pos:column="11">/* HTTP, upload, unknown file size and not HTTP 1.0 */</comment>
          <expr_stmt><expr><name><name pos:line="195" pos:column="11">data<pos:position pos:line="195" pos:column="15"/></name><operator pos:line="195" pos:column="15">-&gt;<pos:position pos:line="195" pos:column="20"/></operator><name pos:line="195" pos:column="17">req<pos:position pos:line="195" pos:column="20"/></name><operator pos:line="195" pos:column="20">.<pos:position pos:line="195" pos:column="21"/></operator><name pos:line="195" pos:column="21">upload_chunky<pos:position pos:line="195" pos:column="34"/></name></name> <operator pos:line="195" pos:column="35">=<pos:position pos:line="195" pos:column="36"/></operator> <name pos:line="195" pos:column="37">TRUE<pos:position pos:line="195" pos:column="41"/></name></expr>;<pos:position pos:line="195" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="196" pos:column="10"/></block></then></if></elseif>
        <else pos:line="197" pos:column="9">else <block pos:line="197" pos:column="14">{
          <expr_stmt><expr><call><name pos:line="198" pos:column="11">failf<pos:position pos:line="198" pos:column="16"/></name><argument_list pos:line="198" pos:column="16">(<argument><expr><name pos:line="198" pos:column="17">data<pos:position pos:line="198" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="23">"Chunky upload is not supported by HTTP 1.0"<pos:position pos:line="198" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="69"/></expr_stmt>
          <return pos:line="199" pos:column="11">return <expr><name pos:line="199" pos:column="18">CURLE_UPLOAD_FAILED<pos:position pos:line="199" pos:column="37"/></name></expr>;<pos:position pos:line="199" pos:column="38"/></return>
        }<pos:position pos:line="200" pos:column="10"/></block></else></if>
      }<pos:position pos:line="201" pos:column="8"/></block></then>
      <else pos:line="202" pos:column="7">else <block pos:line="202" pos:column="12">{
        <comment type="block" pos:line="203" pos:column="9">/* else, no chunky upload */</comment>
        <expr_stmt><expr><name><name pos:line="204" pos:column="9">data<pos:position pos:line="204" pos:column="13"/></name><operator pos:line="204" pos:column="13">-&gt;<pos:position pos:line="204" pos:column="18"/></operator><name pos:line="204" pos:column="15">req<pos:position pos:line="204" pos:column="18"/></name><operator pos:line="204" pos:column="18">.<pos:position pos:line="204" pos:column="19"/></operator><name pos:line="204" pos:column="19">upload_chunky<pos:position pos:line="204" pos:column="32"/></name></name> <operator pos:line="204" pos:column="33">=<pos:position pos:line="204" pos:column="34"/></operator> <name pos:line="204" pos:column="35">FALSE<pos:position pos:line="204" pos:column="40"/></name></expr>;<pos:position pos:line="204" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="205" pos:column="8"/></block></else></if>

      <if pos:line="207" pos:column="7">if<condition pos:line="207" pos:column="9">(<expr><name><name pos:line="207" pos:column="10">data<pos:position pos:line="207" pos:column="14"/></name><operator pos:line="207" pos:column="14">-&gt;<pos:position pos:line="207" pos:column="19"/></operator><name pos:line="207" pos:column="16">req<pos:position pos:line="207" pos:column="19"/></name><operator pos:line="207" pos:column="19">.<pos:position pos:line="207" pos:column="20"/></operator><name pos:line="207" pos:column="20">upload_chunky<pos:position pos:line="207" pos:column="33"/></name></name></expr>)<pos:position pos:line="207" pos:column="34"/></condition><then pos:line="207" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="208" pos:column="9">te<pos:position pos:line="208" pos:column="11"/></name> <operator pos:line="208" pos:column="12">=<pos:position pos:line="208" pos:column="13"/></operator> <literal type="string" pos:line="208" pos:column="14">"Transfer-Encoding: chunked\r\n"<pos:position pos:line="208" pos:column="46"/></literal></expr>;<pos:position pos:line="208" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="209" pos:column="6"/></block></else></if>
  }<pos:position pos:line="210" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="212" pos:column="3">Curl_safefree<pos:position pos:line="212" pos:column="16"/></name><argument_list pos:line="212" pos:column="16">(<argument><expr><name><name pos:line="212" pos:column="17">conn<pos:position pos:line="212" pos:column="21"/></name><operator pos:line="212" pos:column="21">-&gt;<pos:position pos:line="212" pos:column="26"/></operator><name pos:line="212" pos:column="23">allocptr<pos:position pos:line="212" pos:column="31"/></name><operator pos:line="212" pos:column="31">.<pos:position pos:line="212" pos:column="32"/></operator><name pos:line="212" pos:column="32">host<pos:position pos:line="212" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="214" pos:column="3">ptr<pos:position pos:line="214" pos:column="6"/></name> <operator pos:line="214" pos:column="7">=<pos:position pos:line="214" pos:column="8"/></operator> <call><name pos:line="214" pos:column="9">Curl_checkheaders<pos:position pos:line="214" pos:column="26"/></name><argument_list pos:line="214" pos:column="26">(<argument><expr><name pos:line="214" pos:column="27">conn<pos:position pos:line="214" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="33">"Host:"<pos:position pos:line="214" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="42"/></expr_stmt>
  <if pos:line="215" pos:column="3">if<condition pos:line="215" pos:column="5">(<expr><name pos:line="215" pos:column="6">ptr<pos:position pos:line="215" pos:column="9"/></name> <operator pos:line="215" pos:column="10">&amp;&amp;<pos:position pos:line="215" pos:column="20"/></operator> <operator pos:line="215" pos:column="13">(<pos:position pos:line="215" pos:column="14"/></operator><operator pos:line="215" pos:column="14">!<pos:position pos:line="215" pos:column="15"/></operator><name><name pos:line="215" pos:column="15">data<pos:position pos:line="215" pos:column="19"/></name><operator pos:line="215" pos:column="19">-&gt;<pos:position pos:line="215" pos:column="24"/></operator><name pos:line="215" pos:column="21">state<pos:position pos:line="215" pos:column="26"/></name><operator pos:line="215" pos:column="26">.<pos:position pos:line="215" pos:column="27"/></operator><name pos:line="215" pos:column="27">this_is_a_follow<pos:position pos:line="215" pos:column="43"/></name></name> <operator pos:line="215" pos:column="44">||<pos:position pos:line="215" pos:column="46"/></operator>
             <call><name pos:line="216" pos:column="14">Curl_raw_equal<pos:position pos:line="216" pos:column="28"/></name><argument_list pos:line="216" pos:column="28">(<argument><expr><name><name pos:line="216" pos:column="29">data<pos:position pos:line="216" pos:column="33"/></name><operator pos:line="216" pos:column="33">-&gt;<pos:position pos:line="216" pos:column="38"/></operator><name pos:line="216" pos:column="35">state<pos:position pos:line="216" pos:column="40"/></name><operator pos:line="216" pos:column="40">.<pos:position pos:line="216" pos:column="41"/></operator><name pos:line="216" pos:column="41">first_host<pos:position pos:line="216" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="53">conn<pos:position pos:line="216" pos:column="57"/></name><operator pos:line="216" pos:column="57">-&gt;<pos:position pos:line="216" pos:column="62"/></operator><name pos:line="216" pos:column="59">host<pos:position pos:line="216" pos:column="63"/></name><operator pos:line="216" pos:column="63">.<pos:position pos:line="216" pos:column="64"/></operator><name pos:line="216" pos:column="64">name<pos:position pos:line="216" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="216" pos:column="69"/></argument_list></call><operator pos:line="216" pos:column="69">)<pos:position pos:line="216" pos:column="70"/></operator></expr>)<pos:position pos:line="216" pos:column="71"/></condition><then pos:line="216" pos:column="71"> <block pos:line="216" pos:column="72">{
<cpp:if pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">if<pos:position pos:line="217" pos:column="4"/></cpp:directive> <expr><operator pos:line="217" pos:column="5">!<pos:position pos:line="217" pos:column="6"/></operator><call><name pos:line="217" pos:column="6">defined<pos:position pos:line="217" pos:column="13"/></name><argument_list pos:line="217" pos:column="13">(<argument><expr><name pos:line="217" pos:column="14">CURL_DISABLE_COOKIES<pos:position pos:line="217" pos:column="34"/></name></expr></argument>)<pos:position pos:line="217" pos:column="35"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="218" pos:column="5">/* If we have a given custom Host: header, we extract the host name in
       order to possibly use it for cookie reasons later on. We only allow the
       custom Host: header if this is NOT a redirect, as setting Host: in the
       redirected request is being out on thin ice. Except if the host name
       is the same as the first one! */</comment>
    <decl_stmt><decl><type><name pos:line="223" pos:column="5">char<pos:position pos:line="223" pos:column="9"/></name> <modifier pos:line="223" pos:column="10">*<pos:position pos:line="223" pos:column="11"/></modifier></type><name pos:line="223" pos:column="11">cookiehost<pos:position pos:line="223" pos:column="21"/></name> <init pos:line="223" pos:column="22">= <expr><call><name pos:line="223" pos:column="24">Curl_copy_header_value<pos:position pos:line="223" pos:column="46"/></name><argument_list pos:line="223" pos:column="46">(<argument><expr><name pos:line="223" pos:column="47">ptr<pos:position pos:line="223" pos:column="50"/></name></expr></argument>)<pos:position pos:line="223" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="223" pos:column="52"/></decl_stmt>
    <if pos:line="224" pos:column="5">if<condition pos:line="224" pos:column="7">(<expr><operator pos:line="224" pos:column="8">!<pos:position pos:line="224" pos:column="9"/></operator><name pos:line="224" pos:column="9">cookiehost<pos:position pos:line="224" pos:column="19"/></name></expr>)<pos:position pos:line="224" pos:column="20"/></condition><then pos:line="224" pos:column="20">
      <block type="pseudo"><return pos:line="225" pos:column="7">return <expr><name pos:line="225" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="225" pos:column="33"/></name></expr>;<pos:position pos:line="225" pos:column="34"/></return></block></then></if>
    <if pos:line="226" pos:column="5">if<condition pos:line="226" pos:column="7">(<expr><operator pos:line="226" pos:column="8">!<pos:position pos:line="226" pos:column="9"/></operator><operator pos:line="226" pos:column="9">*<pos:position pos:line="226" pos:column="10"/></operator><name pos:line="226" pos:column="10">cookiehost<pos:position pos:line="226" pos:column="20"/></name></expr>)<pos:position pos:line="226" pos:column="21"/></condition><then pos:line="226" pos:column="21">
      <comment type="block" pos:line="227" pos:column="7">/* ignore empty data */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="228" pos:column="7">free<pos:position pos:line="228" pos:column="11"/></name><argument_list pos:line="228" pos:column="11">(<argument><expr><name pos:line="228" pos:column="12">cookiehost<pos:position pos:line="228" pos:column="22"/></name></expr></argument>)<pos:position pos:line="228" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="24"/></expr_stmt></block></then>
    <else pos:line="229" pos:column="5">else <block pos:line="229" pos:column="10">{
      <comment type="block" pos:line="230" pos:column="7">/* If the host begins with '[', we start searching for the port after
         the bracket has been closed */</comment>
      <decl_stmt><decl><type><name pos:line="232" pos:column="7">int<pos:position pos:line="232" pos:column="10"/></name></type> <name pos:line="232" pos:column="11">startsearch<pos:position pos:line="232" pos:column="22"/></name> <init pos:line="232" pos:column="23">= <expr><literal type="number" pos:line="232" pos:column="25">0<pos:position pos:line="232" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="232" pos:column="27"/></decl_stmt>
      <if pos:line="233" pos:column="7">if<condition pos:line="233" pos:column="9">(<expr><operator pos:line="233" pos:column="10">*<pos:position pos:line="233" pos:column="11"/></operator><name pos:line="233" pos:column="11">cookiehost<pos:position pos:line="233" pos:column="21"/></name> <operator pos:line="233" pos:column="22">==<pos:position pos:line="233" pos:column="24"/></operator> <literal type="char" pos:line="233" pos:column="25">'['<pos:position pos:line="233" pos:column="28"/></literal></expr>)<pos:position pos:line="233" pos:column="29"/></condition><then pos:line="233" pos:column="29"> <block pos:line="233" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="234" pos:column="9">char<pos:position pos:line="234" pos:column="13"/></name> <modifier pos:line="234" pos:column="14">*<pos:position pos:line="234" pos:column="15"/></modifier></type><name pos:line="234" pos:column="15">closingbracket<pos:position pos:line="234" pos:column="29"/></name></decl>;<pos:position pos:line="234" pos:column="30"/></decl_stmt>
        <comment type="block" pos:line="235" pos:column="9">/* since the 'cookiehost' is an allocated memory area that will be
           freed later we cannot simply increment the pointer */</comment>
        <expr_stmt><expr><call><name pos:line="237" pos:column="9">memmove<pos:position pos:line="237" pos:column="16"/></name><argument_list pos:line="237" pos:column="16">(<argument><expr><name pos:line="237" pos:column="17">cookiehost<pos:position pos:line="237" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="29">cookiehost<pos:position pos:line="237" pos:column="39"/></name> <operator pos:line="237" pos:column="40">+<pos:position pos:line="237" pos:column="41"/></operator> <literal type="number" pos:line="237" pos:column="42">1<pos:position pos:line="237" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="237" pos:column="45">strlen<pos:position pos:line="237" pos:column="51"/></name><argument_list pos:line="237" pos:column="51">(<argument><expr><name pos:line="237" pos:column="52">cookiehost<pos:position pos:line="237" pos:column="62"/></name></expr></argument>)<pos:position pos:line="237" pos:column="63"/></argument_list></call> <operator pos:line="237" pos:column="64">-<pos:position pos:line="237" pos:column="65"/></operator> <literal type="number" pos:line="237" pos:column="66">1<pos:position pos:line="237" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="238" pos:column="9">closingbracket<pos:position pos:line="238" pos:column="23"/></name> <operator pos:line="238" pos:column="24">=<pos:position pos:line="238" pos:column="25"/></operator> <call><name pos:line="238" pos:column="26">strchr<pos:position pos:line="238" pos:column="32"/></name><argument_list pos:line="238" pos:column="32">(<argument><expr><name pos:line="238" pos:column="33">cookiehost<pos:position pos:line="238" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="238" pos:column="45">']'<pos:position pos:line="238" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="50"/></expr_stmt>
        <if pos:line="239" pos:column="9">if<condition pos:line="239" pos:column="11">(<expr><name pos:line="239" pos:column="12">closingbracket<pos:position pos:line="239" pos:column="26"/></name></expr>)<pos:position pos:line="239" pos:column="27"/></condition><then pos:line="239" pos:column="27">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="240" pos:column="11">*<pos:position pos:line="240" pos:column="12"/></operator><name pos:line="240" pos:column="12">closingbracket<pos:position pos:line="240" pos:column="26"/></name> <operator pos:line="240" pos:column="27">=<pos:position pos:line="240" pos:column="28"/></operator> <literal type="number" pos:line="240" pos:column="29">0<pos:position pos:line="240" pos:column="30"/></literal></expr>;<pos:position pos:line="240" pos:column="31"/></expr_stmt></block></then></if>
      }<pos:position pos:line="241" pos:column="8"/></block></then>
      <else pos:line="242" pos:column="7">else <block pos:line="242" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="243" pos:column="9">char<pos:position pos:line="243" pos:column="13"/></name> <modifier pos:line="243" pos:column="14">*<pos:position pos:line="243" pos:column="15"/></modifier></type><name pos:line="243" pos:column="15">colon<pos:position pos:line="243" pos:column="20"/></name> <init pos:line="243" pos:column="21">= <expr><call><name pos:line="243" pos:column="23">strchr<pos:position pos:line="243" pos:column="29"/></name><argument_list pos:line="243" pos:column="29">(<argument><expr><name pos:line="243" pos:column="30">cookiehost<pos:position pos:line="243" pos:column="40"/></name> <operator pos:line="243" pos:column="41">+<pos:position pos:line="243" pos:column="42"/></operator> <name pos:line="243" pos:column="43">startsearch<pos:position pos:line="243" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="243" pos:column="56">':'<pos:position pos:line="243" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="243" pos:column="61"/></decl_stmt>
        <if pos:line="244" pos:column="9">if<condition pos:line="244" pos:column="11">(<expr><name pos:line="244" pos:column="12">colon<pos:position pos:line="244" pos:column="17"/></name></expr>)<pos:position pos:line="244" pos:column="18"/></condition><then pos:line="244" pos:column="18">
          <block type="pseudo"><expr_stmt><expr><operator pos:line="245" pos:column="11">*<pos:position pos:line="245" pos:column="12"/></operator><name pos:line="245" pos:column="12">colon<pos:position pos:line="245" pos:column="17"/></name> <operator pos:line="245" pos:column="18">=<pos:position pos:line="245" pos:column="19"/></operator> <literal type="number" pos:line="245" pos:column="20">0<pos:position pos:line="245" pos:column="21"/></literal></expr>;<pos:position pos:line="245" pos:column="22"/></expr_stmt></block></then></if> <comment type="block" pos:line="245" pos:column="23">/* The host must not include an embedded port number */</comment>
      }<pos:position pos:line="246" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="247" pos:column="7">Curl_safefree<pos:position pos:line="247" pos:column="20"/></name><argument_list pos:line="247" pos:column="20">(<argument><expr><name><name pos:line="247" pos:column="21">conn<pos:position pos:line="247" pos:column="25"/></name><operator pos:line="247" pos:column="25">-&gt;<pos:position pos:line="247" pos:column="30"/></operator><name pos:line="247" pos:column="27">allocptr<pos:position pos:line="247" pos:column="35"/></name><operator pos:line="247" pos:column="35">.<pos:position pos:line="247" pos:column="36"/></operator><name pos:line="247" pos:column="36">cookiehost<pos:position pos:line="247" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="248" pos:column="7">conn<pos:position pos:line="248" pos:column="11"/></name><operator pos:line="248" pos:column="11">-&gt;<pos:position pos:line="248" pos:column="16"/></operator><name pos:line="248" pos:column="13">allocptr<pos:position pos:line="248" pos:column="21"/></name><operator pos:line="248" pos:column="21">.<pos:position pos:line="248" pos:column="22"/></operator><name pos:line="248" pos:column="22">cookiehost<pos:position pos:line="248" pos:column="32"/></name></name> <operator pos:line="248" pos:column="33">=<pos:position pos:line="248" pos:column="34"/></operator> <name pos:line="248" pos:column="35">cookiehost<pos:position pos:line="248" pos:column="45"/></name></expr>;<pos:position pos:line="248" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="249" pos:column="6"/></block></else></if>
<cpp:endif pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">endif<pos:position pos:line="250" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="252" pos:column="5">conn<pos:position pos:line="252" pos:column="9"/></name><operator pos:line="252" pos:column="9">-&gt;<pos:position pos:line="252" pos:column="14"/></operator><name pos:line="252" pos:column="11">allocptr<pos:position pos:line="252" pos:column="19"/></name><operator pos:line="252" pos:column="19">.<pos:position pos:line="252" pos:column="20"/></operator><name pos:line="252" pos:column="20">host<pos:position pos:line="252" pos:column="24"/></name></name> <operator pos:line="252" pos:column="25">=<pos:position pos:line="252" pos:column="26"/></operator> <name pos:line="252" pos:column="27">NULL<pos:position pos:line="252" pos:column="31"/></name></expr>;<pos:position pos:line="252" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="253" pos:column="4"/></block></then>
  <else pos:line="254" pos:column="3">else <block pos:line="254" pos:column="8">{
    <comment type="block" pos:line="255" pos:column="5">/* When building Host: headers, we must put the host name within
       [brackets] if the host name is a plain IPv6-address. RFC2732-style. */</comment>

    <if pos:line="258" pos:column="5">if<condition pos:line="258" pos:column="7">(<expr><operator pos:line="258" pos:column="8">(<pos:position pos:line="258" pos:column="9"/></operator><operator pos:line="258" pos:column="9">(<pos:position pos:line="258" pos:column="10"/></operator><name><name pos:line="258" pos:column="10">conn<pos:position pos:line="258" pos:column="14"/></name><operator pos:line="258" pos:column="14">-&gt;<pos:position pos:line="258" pos:column="19"/></operator><name pos:line="258" pos:column="16">given<pos:position pos:line="258" pos:column="21"/></name><operator pos:line="258" pos:column="21">-&gt;<pos:position pos:line="258" pos:column="26"/></operator><name pos:line="258" pos:column="23">protocol<pos:position pos:line="258" pos:column="31"/></name></name><operator pos:line="258" pos:column="31">&amp;<pos:position pos:line="258" pos:column="36"/></operator><name pos:line="258" pos:column="32">CURLPROTO_HTTPS<pos:position pos:line="258" pos:column="47"/></name><operator pos:line="258" pos:column="47">)<pos:position pos:line="258" pos:column="48"/></operator> <operator pos:line="258" pos:column="49">&amp;&amp;<pos:position pos:line="258" pos:column="59"/></operator>
        <operator pos:line="259" pos:column="9">(<pos:position pos:line="259" pos:column="10"/></operator><name><name pos:line="259" pos:column="10">conn<pos:position pos:line="259" pos:column="14"/></name><operator pos:line="259" pos:column="14">-&gt;<pos:position pos:line="259" pos:column="19"/></operator><name pos:line="259" pos:column="16">remote_port<pos:position pos:line="259" pos:column="27"/></name></name> <operator pos:line="259" pos:column="28">==<pos:position pos:line="259" pos:column="30"/></operator> <name pos:line="259" pos:column="31">PORT_HTTPS<pos:position pos:line="259" pos:column="41"/></name><operator pos:line="259" pos:column="41">)<pos:position pos:line="259" pos:column="42"/></operator><operator pos:line="259" pos:column="42">)<pos:position pos:line="259" pos:column="43"/></operator> <operator pos:line="259" pos:column="44">||<pos:position pos:line="259" pos:column="46"/></operator>
       <operator pos:line="260" pos:column="8">(<pos:position pos:line="260" pos:column="9"/></operator><operator pos:line="260" pos:column="9">(<pos:position pos:line="260" pos:column="10"/></operator><name><name pos:line="260" pos:column="10">conn<pos:position pos:line="260" pos:column="14"/></name><operator pos:line="260" pos:column="14">-&gt;<pos:position pos:line="260" pos:column="19"/></operator><name pos:line="260" pos:column="16">given<pos:position pos:line="260" pos:column="21"/></name><operator pos:line="260" pos:column="21">-&gt;<pos:position pos:line="260" pos:column="26"/></operator><name pos:line="260" pos:column="23">protocol<pos:position pos:line="260" pos:column="31"/></name></name><operator pos:line="260" pos:column="31">&amp;<pos:position pos:line="260" pos:column="36"/></operator><name pos:line="260" pos:column="32">CURLPROTO_HTTP<pos:position pos:line="260" pos:column="46"/></name><operator pos:line="260" pos:column="46">)<pos:position pos:line="260" pos:column="47"/></operator> <operator pos:line="260" pos:column="48">&amp;&amp;<pos:position pos:line="260" pos:column="58"/></operator>
        <operator pos:line="261" pos:column="9">(<pos:position pos:line="261" pos:column="10"/></operator><name><name pos:line="261" pos:column="10">conn<pos:position pos:line="261" pos:column="14"/></name><operator pos:line="261" pos:column="14">-&gt;<pos:position pos:line="261" pos:column="19"/></operator><name pos:line="261" pos:column="16">remote_port<pos:position pos:line="261" pos:column="27"/></name></name> <operator pos:line="261" pos:column="28">==<pos:position pos:line="261" pos:column="30"/></operator> <name pos:line="261" pos:column="31">PORT_HTTP<pos:position pos:line="261" pos:column="40"/></name><operator pos:line="261" pos:column="40">)<pos:position pos:line="261" pos:column="41"/></operator><operator pos:line="261" pos:column="41">)<pos:position pos:line="261" pos:column="42"/></operator></expr> )<pos:position pos:line="261" pos:column="44"/></condition><then pos:line="261" pos:column="44">
      <comment type="block" pos:line="262" pos:column="7">/* if(HTTPS on port 443) OR (HTTP on port 80) then don't include
         the port number in the host string */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="264" pos:column="7">conn<pos:position pos:line="264" pos:column="11"/></name><operator pos:line="264" pos:column="11">-&gt;<pos:position pos:line="264" pos:column="16"/></operator><name pos:line="264" pos:column="13">allocptr<pos:position pos:line="264" pos:column="21"/></name><operator pos:line="264" pos:column="21">.<pos:position pos:line="264" pos:column="22"/></operator><name pos:line="264" pos:column="22">host<pos:position pos:line="264" pos:column="26"/></name></name> <operator pos:line="264" pos:column="27">=<pos:position pos:line="264" pos:column="28"/></operator> <call><name pos:line="264" pos:column="29">aprintf<pos:position pos:line="264" pos:column="36"/></name><argument_list pos:line="264" pos:column="36">(<argument><expr><literal type="string" pos:line="264" pos:column="37">"Host: %s%s%s\r\n"<pos:position pos:line="264" pos:column="55"/></literal></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="265" pos:column="37">conn<pos:position pos:line="265" pos:column="41"/></name><operator pos:line="265" pos:column="41">-&gt;<pos:position pos:line="265" pos:column="46"/></operator><name pos:line="265" pos:column="43">bits<pos:position pos:line="265" pos:column="47"/></name><operator pos:line="265" pos:column="47">.<pos:position pos:line="265" pos:column="48"/></operator><name pos:line="265" pos:column="48">ipv6_ip<pos:position pos:line="265" pos:column="55"/></name></name></expr>?<pos:position pos:line="265" pos:column="56"/></condition><then><expr><literal type="string" pos:line="265" pos:column="56">"["<pos:position pos:line="265" pos:column="59"/></literal></expr></then><else pos:line="265" pos:column="59">:<expr><literal type="string" pos:line="265" pos:column="60">""<pos:position pos:line="265" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name pos:line="266" pos:column="37">host<pos:position pos:line="266" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="267" pos:column="37">conn<pos:position pos:line="267" pos:column="41"/></name><operator pos:line="267" pos:column="41">-&gt;<pos:position pos:line="267" pos:column="46"/></operator><name pos:line="267" pos:column="43">bits<pos:position pos:line="267" pos:column="47"/></name><operator pos:line="267" pos:column="47">.<pos:position pos:line="267" pos:column="48"/></operator><name pos:line="267" pos:column="48">ipv6_ip<pos:position pos:line="267" pos:column="55"/></name></name></expr>?<pos:position pos:line="267" pos:column="56"/></condition><then><expr><literal type="string" pos:line="267" pos:column="56">"]"<pos:position pos:line="267" pos:column="59"/></literal></expr></then><else pos:line="267" pos:column="59">:<expr><literal type="string" pos:line="267" pos:column="60">""<pos:position pos:line="267" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="267" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="64"/></expr_stmt></block></then>
    <else pos:line="268" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="269" pos:column="7">conn<pos:position pos:line="269" pos:column="11"/></name><operator pos:line="269" pos:column="11">-&gt;<pos:position pos:line="269" pos:column="16"/></operator><name pos:line="269" pos:column="13">allocptr<pos:position pos:line="269" pos:column="21"/></name><operator pos:line="269" pos:column="21">.<pos:position pos:line="269" pos:column="22"/></operator><name pos:line="269" pos:column="22">host<pos:position pos:line="269" pos:column="26"/></name></name> <operator pos:line="269" pos:column="27">=<pos:position pos:line="269" pos:column="28"/></operator> <call><name pos:line="269" pos:column="29">aprintf<pos:position pos:line="269" pos:column="36"/></name><argument_list pos:line="269" pos:column="36">(<argument><expr><literal type="string" pos:line="269" pos:column="37">"Host: %s%s%s:%hu\r\n"<pos:position pos:line="269" pos:column="59"/></literal></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="270" pos:column="37">conn<pos:position pos:line="270" pos:column="41"/></name><operator pos:line="270" pos:column="41">-&gt;<pos:position pos:line="270" pos:column="46"/></operator><name pos:line="270" pos:column="43">bits<pos:position pos:line="270" pos:column="47"/></name><operator pos:line="270" pos:column="47">.<pos:position pos:line="270" pos:column="48"/></operator><name pos:line="270" pos:column="48">ipv6_ip<pos:position pos:line="270" pos:column="55"/></name></name></expr>?<pos:position pos:line="270" pos:column="56"/></condition><then><expr><literal type="string" pos:line="270" pos:column="56">"["<pos:position pos:line="270" pos:column="59"/></literal></expr></then><else pos:line="270" pos:column="59">:<expr><literal type="string" pos:line="270" pos:column="60">""<pos:position pos:line="270" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name pos:line="271" pos:column="37">host<pos:position pos:line="271" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="272" pos:column="37">conn<pos:position pos:line="272" pos:column="41"/></name><operator pos:line="272" pos:column="41">-&gt;<pos:position pos:line="272" pos:column="46"/></operator><name pos:line="272" pos:column="43">bits<pos:position pos:line="272" pos:column="47"/></name><operator pos:line="272" pos:column="47">.<pos:position pos:line="272" pos:column="48"/></operator><name pos:line="272" pos:column="48">ipv6_ip<pos:position pos:line="272" pos:column="55"/></name></name></expr>?<pos:position pos:line="272" pos:column="56"/></condition><then><expr><literal type="string" pos:line="272" pos:column="56">"]"<pos:position pos:line="272" pos:column="59"/></literal></expr></then><else pos:line="272" pos:column="59">:<expr><literal type="string" pos:line="272" pos:column="60">""<pos:position pos:line="272" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name><name pos:line="273" pos:column="37">conn<pos:position pos:line="273" pos:column="41"/></name><operator pos:line="273" pos:column="41">-&gt;<pos:position pos:line="273" pos:column="46"/></operator><name pos:line="273" pos:column="43">remote_port<pos:position pos:line="273" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="273" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="56"/></expr_stmt></block></else></if>

    <if pos:line="275" pos:column="5">if<condition pos:line="275" pos:column="7">(<expr><operator pos:line="275" pos:column="8">!<pos:position pos:line="275" pos:column="9"/></operator><name><name pos:line="275" pos:column="9">conn<pos:position pos:line="275" pos:column="13"/></name><operator pos:line="275" pos:column="13">-&gt;<pos:position pos:line="275" pos:column="18"/></operator><name pos:line="275" pos:column="15">allocptr<pos:position pos:line="275" pos:column="23"/></name><operator pos:line="275" pos:column="23">.<pos:position pos:line="275" pos:column="24"/></operator><name pos:line="275" pos:column="24">host<pos:position pos:line="275" pos:column="28"/></name></name></expr>)<pos:position pos:line="275" pos:column="29"/></condition><then pos:line="275" pos:column="29">
      <comment type="block" pos:line="276" pos:column="7">/* without Host: we can't make a nice request */</comment>
      <block type="pseudo"><return pos:line="277" pos:column="7">return <expr><name pos:line="277" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="277" pos:column="33"/></name></expr>;<pos:position pos:line="277" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="278" pos:column="4"/></block></else></if>

<cpp:ifndef pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">ifndef<pos:position pos:line="280" pos:column="8"/></cpp:directive> <name pos:line="280" pos:column="9">CURL_DISABLE_PROXY<pos:position pos:line="280" pos:column="27"/></name></cpp:ifndef>
  <if pos:line="281" pos:column="3">if<condition pos:line="281" pos:column="5">(<expr><name><name pos:line="281" pos:column="6">conn<pos:position pos:line="281" pos:column="10"/></name><operator pos:line="281" pos:column="10">-&gt;<pos:position pos:line="281" pos:column="15"/></operator><name pos:line="281" pos:column="12">bits<pos:position pos:line="281" pos:column="16"/></name><operator pos:line="281" pos:column="16">.<pos:position pos:line="281" pos:column="17"/></operator><name pos:line="281" pos:column="17">httpproxy<pos:position pos:line="281" pos:column="26"/></name></name> <operator pos:line="281" pos:column="27">&amp;&amp;<pos:position pos:line="281" pos:column="37"/></operator> <operator pos:line="281" pos:column="30">!<pos:position pos:line="281" pos:column="31"/></operator><name><name pos:line="281" pos:column="31">conn<pos:position pos:line="281" pos:column="35"/></name><operator pos:line="281" pos:column="35">-&gt;<pos:position pos:line="281" pos:column="40"/></operator><name pos:line="281" pos:column="37">bits<pos:position pos:line="281" pos:column="41"/></name><operator pos:line="281" pos:column="41">.<pos:position pos:line="281" pos:column="42"/></operator><name pos:line="281" pos:column="42">tunnel_proxy<pos:position pos:line="281" pos:column="54"/></name></name></expr>)<pos:position pos:line="281" pos:column="55"/></condition><then pos:line="281" pos:column="55">  <block pos:line="281" pos:column="57">{
    <comment type="block" pos:line="282" pos:column="5">/* Using a proxy but does not tunnel through it */</comment>

    <comment type="block" pos:line="284" pos:column="5">/* The path sent to the proxy is in fact the entire URL. But if the remote
       host is a IDN-name, we must make sure that the request we produce only
       uses the encoded host name! */</comment>
    <if pos:line="287" pos:column="5">if<condition pos:line="287" pos:column="7">(<expr><name><name pos:line="287" pos:column="8">conn<pos:position pos:line="287" pos:column="12"/></name><operator pos:line="287" pos:column="12">-&gt;<pos:position pos:line="287" pos:column="17"/></operator><name pos:line="287" pos:column="14">host<pos:position pos:line="287" pos:column="18"/></name><operator pos:line="287" pos:column="18">.<pos:position pos:line="287" pos:column="19"/></operator><name pos:line="287" pos:column="19">dispname<pos:position pos:line="287" pos:column="27"/></name></name> <operator pos:line="287" pos:column="28">!=<pos:position pos:line="287" pos:column="30"/></operator> <name><name pos:line="287" pos:column="31">conn<pos:position pos:line="287" pos:column="35"/></name><operator pos:line="287" pos:column="35">-&gt;<pos:position pos:line="287" pos:column="40"/></operator><name pos:line="287" pos:column="37">host<pos:position pos:line="287" pos:column="41"/></name><operator pos:line="287" pos:column="41">.<pos:position pos:line="287" pos:column="42"/></operator><name pos:line="287" pos:column="42">name<pos:position pos:line="287" pos:column="46"/></name></name></expr>)<pos:position pos:line="287" pos:column="47"/></condition><then pos:line="287" pos:column="47"> <block pos:line="287" pos:column="48">{
      <decl_stmt><decl><type><name pos:line="288" pos:column="7">char<pos:position pos:line="288" pos:column="11"/></name> <modifier pos:line="288" pos:column="12">*<pos:position pos:line="288" pos:column="13"/></modifier></type><name pos:line="288" pos:column="13">url<pos:position pos:line="288" pos:column="16"/></name> <init pos:line="288" pos:column="17">= <expr><name><name pos:line="288" pos:column="19">data<pos:position pos:line="288" pos:column="23"/></name><operator pos:line="288" pos:column="23">-&gt;<pos:position pos:line="288" pos:column="28"/></operator><name pos:line="288" pos:column="25">change<pos:position pos:line="288" pos:column="31"/></name><operator pos:line="288" pos:column="31">.<pos:position pos:line="288" pos:column="32"/></operator><name pos:line="288" pos:column="32">url<pos:position pos:line="288" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="288" pos:column="36"/></decl_stmt>
      <expr_stmt><expr><name pos:line="289" pos:column="7">ptr<pos:position pos:line="289" pos:column="10"/></name> <operator pos:line="289" pos:column="11">=<pos:position pos:line="289" pos:column="12"/></operator> <call><name pos:line="289" pos:column="13">strstr<pos:position pos:line="289" pos:column="19"/></name><argument_list pos:line="289" pos:column="19">(<argument><expr><name pos:line="289" pos:column="20">url<pos:position pos:line="289" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="25">conn<pos:position pos:line="289" pos:column="29"/></name><operator pos:line="289" pos:column="29">-&gt;<pos:position pos:line="289" pos:column="34"/></operator><name pos:line="289" pos:column="31">host<pos:position pos:line="289" pos:column="35"/></name><operator pos:line="289" pos:column="35">.<pos:position pos:line="289" pos:column="36"/></operator><name pos:line="289" pos:column="36">dispname<pos:position pos:line="289" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="289" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="46"/></expr_stmt>
      <if pos:line="290" pos:column="7">if<condition pos:line="290" pos:column="9">(<expr><name pos:line="290" pos:column="10">ptr<pos:position pos:line="290" pos:column="13"/></name></expr>)<pos:position pos:line="290" pos:column="14"/></condition><then pos:line="290" pos:column="14"> <block pos:line="290" pos:column="15">{
        <comment type="block" pos:line="291" pos:column="9">/* This is where the display name starts in the URL, now replace this
           part with the encoded name. TODO: This method of replacing the host
           name is rather crude as I believe there's a slight risk that the
           user has entered a user name or password that contain the host name
           string. */</comment>
        <decl_stmt><decl><type><name pos:line="296" pos:column="9">size_t<pos:position pos:line="296" pos:column="15"/></name></type> <name pos:line="296" pos:column="16">currlen<pos:position pos:line="296" pos:column="23"/></name> <init pos:line="296" pos:column="24">= <expr><call><name pos:line="296" pos:column="26">strlen<pos:position pos:line="296" pos:column="32"/></name><argument_list pos:line="296" pos:column="32">(<argument><expr><name><name pos:line="296" pos:column="33">conn<pos:position pos:line="296" pos:column="37"/></name><operator pos:line="296" pos:column="37">-&gt;<pos:position pos:line="296" pos:column="42"/></operator><name pos:line="296" pos:column="39">host<pos:position pos:line="296" pos:column="43"/></name><operator pos:line="296" pos:column="43">.<pos:position pos:line="296" pos:column="44"/></operator><name pos:line="296" pos:column="44">dispname<pos:position pos:line="296" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="296" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="296" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="297" pos:column="9">size_t<pos:position pos:line="297" pos:column="15"/></name></type> <name pos:line="297" pos:column="16">newlen<pos:position pos:line="297" pos:column="22"/></name> <init pos:line="297" pos:column="23">= <expr><call><name pos:line="297" pos:column="25">strlen<pos:position pos:line="297" pos:column="31"/></name><argument_list pos:line="297" pos:column="31">(<argument><expr><name><name pos:line="297" pos:column="32">conn<pos:position pos:line="297" pos:column="36"/></name><operator pos:line="297" pos:column="36">-&gt;<pos:position pos:line="297" pos:column="41"/></operator><name pos:line="297" pos:column="38">host<pos:position pos:line="297" pos:column="42"/></name><operator pos:line="297" pos:column="42">.<pos:position pos:line="297" pos:column="43"/></operator><name pos:line="297" pos:column="43">name<pos:position pos:line="297" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="297" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="297" pos:column="49"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="298" pos:column="9">size_t<pos:position pos:line="298" pos:column="15"/></name></type> <name pos:line="298" pos:column="16">urllen<pos:position pos:line="298" pos:column="22"/></name> <init pos:line="298" pos:column="23">= <expr><call><name pos:line="298" pos:column="25">strlen<pos:position pos:line="298" pos:column="31"/></name><argument_list pos:line="298" pos:column="31">(<argument><expr><name pos:line="298" pos:column="32">url<pos:position pos:line="298" pos:column="35"/></name></expr></argument>)<pos:position pos:line="298" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="298" pos:column="37"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="300" pos:column="9">char<pos:position pos:line="300" pos:column="13"/></name> <modifier pos:line="300" pos:column="14">*<pos:position pos:line="300" pos:column="15"/></modifier></type><name pos:line="300" pos:column="15">newurl<pos:position pos:line="300" pos:column="21"/></name></decl>;<pos:position pos:line="300" pos:column="22"/></decl_stmt>

        <expr_stmt><expr><name pos:line="302" pos:column="9">newurl<pos:position pos:line="302" pos:column="15"/></name> <operator pos:line="302" pos:column="16">=<pos:position pos:line="302" pos:column="17"/></operator> <call><name pos:line="302" pos:column="18">malloc<pos:position pos:line="302" pos:column="24"/></name><argument_list pos:line="302" pos:column="24">(<argument><expr><name pos:line="302" pos:column="25">urllen<pos:position pos:line="302" pos:column="31"/></name> <operator pos:line="302" pos:column="32">+<pos:position pos:line="302" pos:column="33"/></operator> <name pos:line="302" pos:column="34">newlen<pos:position pos:line="302" pos:column="40"/></name> <operator pos:line="302" pos:column="41">-<pos:position pos:line="302" pos:column="42"/></operator> <name pos:line="302" pos:column="43">currlen<pos:position pos:line="302" pos:column="50"/></name> <operator pos:line="302" pos:column="51">+<pos:position pos:line="302" pos:column="52"/></operator> <literal type="number" pos:line="302" pos:column="53">1<pos:position pos:line="302" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="56"/></expr_stmt>
        <if pos:line="303" pos:column="9">if<condition pos:line="303" pos:column="11">(<expr><name pos:line="303" pos:column="12">newurl<pos:position pos:line="303" pos:column="18"/></name></expr>)<pos:position pos:line="303" pos:column="19"/></condition><then pos:line="303" pos:column="19"> <block pos:line="303" pos:column="20">{
          <comment type="block" pos:line="304" pos:column="11">/* copy the part before the host name */</comment>
          <expr_stmt><expr><call><name pos:line="305" pos:column="11">memcpy<pos:position pos:line="305" pos:column="17"/></name><argument_list pos:line="305" pos:column="17">(<argument><expr><name pos:line="305" pos:column="18">newurl<pos:position pos:line="305" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="26">url<pos:position pos:line="305" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="31">ptr<pos:position pos:line="305" pos:column="34"/></name> <operator pos:line="305" pos:column="35">-<pos:position pos:line="305" pos:column="36"/></operator> <name pos:line="305" pos:column="37">url<pos:position pos:line="305" pos:column="40"/></name></expr></argument>)<pos:position pos:line="305" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="42"/></expr_stmt>
          <comment type="block" pos:line="306" pos:column="11">/* append the new host name instead of the old */</comment>
          <expr_stmt><expr><call><name pos:line="307" pos:column="11">memcpy<pos:position pos:line="307" pos:column="17"/></name><argument_list pos:line="307" pos:column="17">(<argument><expr><name pos:line="307" pos:column="18">newurl<pos:position pos:line="307" pos:column="24"/></name> <operator pos:line="307" pos:column="25">+<pos:position pos:line="307" pos:column="26"/></operator> <operator pos:line="307" pos:column="27">(<pos:position pos:line="307" pos:column="28"/></operator><name pos:line="307" pos:column="28">ptr<pos:position pos:line="307" pos:column="31"/></name> <operator pos:line="307" pos:column="32">-<pos:position pos:line="307" pos:column="33"/></operator> <name pos:line="307" pos:column="34">url<pos:position pos:line="307" pos:column="37"/></name><operator pos:line="307" pos:column="37">)<pos:position pos:line="307" pos:column="38"/></operator></expr></argument>, <argument><expr><name><name pos:line="307" pos:column="40">conn<pos:position pos:line="307" pos:column="44"/></name><operator pos:line="307" pos:column="44">-&gt;<pos:position pos:line="307" pos:column="49"/></operator><name pos:line="307" pos:column="46">host<pos:position pos:line="307" pos:column="50"/></name><operator pos:line="307" pos:column="50">.<pos:position pos:line="307" pos:column="51"/></operator><name pos:line="307" pos:column="51">name<pos:position pos:line="307" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="57">newlen<pos:position pos:line="307" pos:column="63"/></name></expr></argument>)<pos:position pos:line="307" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="65"/></expr_stmt>
          <comment type="block" pos:line="308" pos:column="11">/* append the piece after the host name */</comment>
          <expr_stmt><expr><call><name pos:line="309" pos:column="11">memcpy<pos:position pos:line="309" pos:column="17"/></name><argument_list pos:line="309" pos:column="17">(<argument><expr><name pos:line="309" pos:column="18">newurl<pos:position pos:line="309" pos:column="24"/></name> <operator pos:line="309" pos:column="25">+<pos:position pos:line="309" pos:column="26"/></operator> <name pos:line="309" pos:column="27">newlen<pos:position pos:line="309" pos:column="33"/></name> <operator pos:line="309" pos:column="34">+<pos:position pos:line="309" pos:column="35"/></operator> <operator pos:line="309" pos:column="36">(<pos:position pos:line="309" pos:column="37"/></operator><name pos:line="309" pos:column="37">ptr<pos:position pos:line="309" pos:column="40"/></name> <operator pos:line="309" pos:column="41">-<pos:position pos:line="309" pos:column="42"/></operator> <name pos:line="309" pos:column="43">url<pos:position pos:line="309" pos:column="46"/></name><operator pos:line="309" pos:column="46">)<pos:position pos:line="309" pos:column="47"/></operator></expr></argument>,
                 <argument><expr><name pos:line="310" pos:column="18">ptr<pos:position pos:line="310" pos:column="21"/></name> <operator pos:line="310" pos:column="22">+<pos:position pos:line="310" pos:column="23"/></operator> <name pos:line="310" pos:column="24">currlen<pos:position pos:line="310" pos:column="31"/></name></expr></argument>, <comment type="block" pos:line="310" pos:column="33">/* copy the trailing zero byte too */</comment>
                 <argument><expr><name pos:line="311" pos:column="18">urllen<pos:position pos:line="311" pos:column="24"/></name> <operator pos:line="311" pos:column="25">-<pos:position pos:line="311" pos:column="26"/></operator> <operator pos:line="311" pos:column="27">(<pos:position pos:line="311" pos:column="28"/></operator><name pos:line="311" pos:column="28">ptr<pos:position pos:line="311" pos:column="31"/></name><operator pos:line="311" pos:column="31">-<pos:position pos:line="311" pos:column="32"/></operator><name pos:line="311" pos:column="32">url<pos:position pos:line="311" pos:column="35"/></name><operator pos:line="311" pos:column="35">)<pos:position pos:line="311" pos:column="36"/></operator> <operator pos:line="311" pos:column="37">-<pos:position pos:line="311" pos:column="38"/></operator> <name pos:line="311" pos:column="39">currlen<pos:position pos:line="311" pos:column="46"/></name> <operator pos:line="311" pos:column="47">+<pos:position pos:line="311" pos:column="48"/></operator> <literal type="number" pos:line="311" pos:column="49">1<pos:position pos:line="311" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="311" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="52"/></expr_stmt>
          <if pos:line="312" pos:column="11">if<condition pos:line="312" pos:column="13">(<expr><name><name pos:line="312" pos:column="14">data<pos:position pos:line="312" pos:column="18"/></name><operator pos:line="312" pos:column="18">-&gt;<pos:position pos:line="312" pos:column="23"/></operator><name pos:line="312" pos:column="20">change<pos:position pos:line="312" pos:column="26"/></name><operator pos:line="312" pos:column="26">.<pos:position pos:line="312" pos:column="27"/></operator><name pos:line="312" pos:column="27">url_alloc<pos:position pos:line="312" pos:column="36"/></name></name></expr>)<pos:position pos:line="312" pos:column="37"/></condition><then pos:line="312" pos:column="37"> <block pos:line="312" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="313" pos:column="13">Curl_safefree<pos:position pos:line="313" pos:column="26"/></name><argument_list pos:line="313" pos:column="26">(<argument><expr><name><name pos:line="313" pos:column="27">data<pos:position pos:line="313" pos:column="31"/></name><operator pos:line="313" pos:column="31">-&gt;<pos:position pos:line="313" pos:column="36"/></operator><name pos:line="313" pos:column="33">change<pos:position pos:line="313" pos:column="39"/></name><operator pos:line="313" pos:column="39">.<pos:position pos:line="313" pos:column="40"/></operator><name pos:line="313" pos:column="40">url<pos:position pos:line="313" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="313" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="314" pos:column="13">data<pos:position pos:line="314" pos:column="17"/></name><operator pos:line="314" pos:column="17">-&gt;<pos:position pos:line="314" pos:column="22"/></operator><name pos:line="314" pos:column="19">change<pos:position pos:line="314" pos:column="25"/></name><operator pos:line="314" pos:column="25">.<pos:position pos:line="314" pos:column="26"/></operator><name pos:line="314" pos:column="26">url_alloc<pos:position pos:line="314" pos:column="35"/></name></name> <operator pos:line="314" pos:column="36">=<pos:position pos:line="314" pos:column="37"/></operator> <name pos:line="314" pos:column="38">FALSE<pos:position pos:line="314" pos:column="43"/></name></expr>;<pos:position pos:line="314" pos:column="44"/></expr_stmt>
          }<pos:position pos:line="315" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name><name pos:line="316" pos:column="11">data<pos:position pos:line="316" pos:column="15"/></name><operator pos:line="316" pos:column="15">-&gt;<pos:position pos:line="316" pos:column="20"/></operator><name pos:line="316" pos:column="17">change<pos:position pos:line="316" pos:column="23"/></name><operator pos:line="316" pos:column="23">.<pos:position pos:line="316" pos:column="24"/></operator><name pos:line="316" pos:column="24">url<pos:position pos:line="316" pos:column="27"/></name></name> <operator pos:line="316" pos:column="28">=<pos:position pos:line="316" pos:column="29"/></operator> <name pos:line="316" pos:column="30">newurl<pos:position pos:line="316" pos:column="36"/></name></expr>;<pos:position pos:line="316" pos:column="37"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="317" pos:column="11">data<pos:position pos:line="317" pos:column="15"/></name><operator pos:line="317" pos:column="15">-&gt;<pos:position pos:line="317" pos:column="20"/></operator><name pos:line="317" pos:column="17">change<pos:position pos:line="317" pos:column="23"/></name><operator pos:line="317" pos:column="23">.<pos:position pos:line="317" pos:column="24"/></operator><name pos:line="317" pos:column="24">url_alloc<pos:position pos:line="317" pos:column="33"/></name></name> <operator pos:line="317" pos:column="34">=<pos:position pos:line="317" pos:column="35"/></operator> <name pos:line="317" pos:column="36">TRUE<pos:position pos:line="317" pos:column="40"/></name></expr>;<pos:position pos:line="317" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="318" pos:column="10"/></block></then>
        <else pos:line="319" pos:column="9">else
          <block type="pseudo"><return pos:line="320" pos:column="11">return <expr><name pos:line="320" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="320" pos:column="37"/></name></expr>;<pos:position pos:line="320" pos:column="38"/></return></block></else></if>
      }<pos:position pos:line="321" pos:column="8"/></block></then></if>
    }<pos:position pos:line="322" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="323" pos:column="5">ppath<pos:position pos:line="323" pos:column="10"/></name> <operator pos:line="323" pos:column="11">=<pos:position pos:line="323" pos:column="12"/></operator> <name><name pos:line="323" pos:column="13">data<pos:position pos:line="323" pos:column="17"/></name><operator pos:line="323" pos:column="17">-&gt;<pos:position pos:line="323" pos:column="22"/></operator><name pos:line="323" pos:column="19">change<pos:position pos:line="323" pos:column="25"/></name><operator pos:line="323" pos:column="25">.<pos:position pos:line="323" pos:column="26"/></operator><name pos:line="323" pos:column="26">url<pos:position pos:line="323" pos:column="29"/></name></name></expr>;<pos:position pos:line="323" pos:column="30"/></expr_stmt>
    <if pos:line="324" pos:column="5">if<condition pos:line="324" pos:column="7">(<expr><call><name pos:line="324" pos:column="8">checkprefix<pos:position pos:line="324" pos:column="19"/></name><argument_list pos:line="324" pos:column="19">(<argument><expr><literal type="string" pos:line="324" pos:column="20">"ftp://"<pos:position pos:line="324" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="324" pos:column="30">ppath<pos:position pos:line="324" pos:column="35"/></name></expr></argument>)<pos:position pos:line="324" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="324" pos:column="37"/></condition><then pos:line="324" pos:column="37"> <block pos:line="324" pos:column="38">{
      <if pos:line="325" pos:column="7">if<condition pos:line="325" pos:column="9">(<expr><name><name pos:line="325" pos:column="10">data<pos:position pos:line="325" pos:column="14"/></name><operator pos:line="325" pos:column="14">-&gt;<pos:position pos:line="325" pos:column="19"/></operator><name pos:line="325" pos:column="16">set<pos:position pos:line="325" pos:column="19"/></name><operator pos:line="325" pos:column="19">.<pos:position pos:line="325" pos:column="20"/></operator><name pos:line="325" pos:column="20">proxy_transfer_mode<pos:position pos:line="325" pos:column="39"/></name></name></expr>)<pos:position pos:line="325" pos:column="40"/></condition><then pos:line="325" pos:column="40"> <block pos:line="325" pos:column="41">{
        <comment type="block" pos:line="326" pos:column="9">/* when doing ftp, append ;type=&lt;a|i&gt; if not present */</comment>
        <decl_stmt><decl><type><name pos:line="327" pos:column="9">char<pos:position pos:line="327" pos:column="13"/></name> <modifier pos:line="327" pos:column="14">*<pos:position pos:line="327" pos:column="15"/></modifier></type><name pos:line="327" pos:column="15">type<pos:position pos:line="327" pos:column="19"/></name> <init pos:line="327" pos:column="20">= <expr><call><name pos:line="327" pos:column="22">strstr<pos:position pos:line="327" pos:column="28"/></name><argument_list pos:line="327" pos:column="28">(<argument><expr><name pos:line="327" pos:column="29">ppath<pos:position pos:line="327" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="36">";type="<pos:position pos:line="327" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="327" pos:column="46"/></decl_stmt>
        <if pos:line="328" pos:column="9">if<condition pos:line="328" pos:column="11">(<expr><name pos:line="328" pos:column="12">type<pos:position pos:line="328" pos:column="16"/></name> <operator pos:line="328" pos:column="17">&amp;&amp;<pos:position pos:line="328" pos:column="27"/></operator> <name><name pos:line="328" pos:column="20">type<pos:position pos:line="328" pos:column="24"/></name><index pos:line="328" pos:column="24">[<expr><literal type="number" pos:line="328" pos:column="25">6<pos:position pos:line="328" pos:column="26"/></literal></expr>]<pos:position pos:line="328" pos:column="27"/></index></name> <operator pos:line="328" pos:column="28">&amp;&amp;<pos:position pos:line="328" pos:column="38"/></operator> <name><name pos:line="328" pos:column="31">type<pos:position pos:line="328" pos:column="35"/></name><index pos:line="328" pos:column="35">[<expr><literal type="number" pos:line="328" pos:column="36">7<pos:position pos:line="328" pos:column="37"/></literal></expr>]<pos:position pos:line="328" pos:column="38"/></index></name> <operator pos:line="328" pos:column="39">==<pos:position pos:line="328" pos:column="41"/></operator> <literal type="number" pos:line="328" pos:column="42">0<pos:position pos:line="328" pos:column="43"/></literal></expr>)<pos:position pos:line="328" pos:column="44"/></condition><then pos:line="328" pos:column="44"> <block pos:line="328" pos:column="45">{
          <switch pos:line="329" pos:column="11">switch <condition pos:line="329" pos:column="18">(<expr><call><name pos:line="329" pos:column="19">Curl_raw_toupper<pos:position pos:line="329" pos:column="35"/></name><argument_list pos:line="329" pos:column="35">(<argument><expr><name><name pos:line="329" pos:column="36">type<pos:position pos:line="329" pos:column="40"/></name><index pos:line="329" pos:column="40">[<expr><literal type="number" pos:line="329" pos:column="41">6<pos:position pos:line="329" pos:column="42"/></literal></expr>]<pos:position pos:line="329" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="329" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="329" pos:column="45"/></condition> <block pos:line="329" pos:column="46">{
          <case pos:line="330" pos:column="11">case <expr><literal type="char" pos:line="330" pos:column="16">'A'<pos:position pos:line="330" pos:column="19"/></literal></expr>:<pos:position pos:line="330" pos:column="20"/></case>
          <case pos:line="331" pos:column="11">case <expr><literal type="char" pos:line="331" pos:column="16">'D'<pos:position pos:line="331" pos:column="19"/></literal></expr>:<pos:position pos:line="331" pos:column="20"/></case>
          <case pos:line="332" pos:column="11">case <expr><literal type="char" pos:line="332" pos:column="16">'I'<pos:position pos:line="332" pos:column="19"/></literal></expr>:<pos:position pos:line="332" pos:column="20"/></case>
            <break pos:line="333" pos:column="13">break;<pos:position pos:line="333" pos:column="19"/></break>
          <default pos:line="334" pos:column="11">default:<pos:position pos:line="334" pos:column="19"/></default>
            <expr_stmt><expr><name pos:line="335" pos:column="13">type<pos:position pos:line="335" pos:column="17"/></name> <operator pos:line="335" pos:column="18">=<pos:position pos:line="335" pos:column="19"/></operator> <name pos:line="335" pos:column="20">NULL<pos:position pos:line="335" pos:column="24"/></name></expr>;<pos:position pos:line="335" pos:column="25"/></expr_stmt>
          }<pos:position pos:line="336" pos:column="12"/></block></switch>
        }<pos:position pos:line="337" pos:column="10"/></block></then></if>
        <if pos:line="338" pos:column="9">if<condition pos:line="338" pos:column="11">(<expr><operator pos:line="338" pos:column="12">!<pos:position pos:line="338" pos:column="13"/></operator><name pos:line="338" pos:column="13">type<pos:position pos:line="338" pos:column="17"/></name></expr>)<pos:position pos:line="338" pos:column="18"/></condition><then pos:line="338" pos:column="18"> <block pos:line="338" pos:column="19">{
          <decl_stmt><decl><type><name pos:line="339" pos:column="11">char<pos:position pos:line="339" pos:column="15"/></name> <modifier pos:line="339" pos:column="16">*<pos:position pos:line="339" pos:column="17"/></modifier></type><name pos:line="339" pos:column="17">p<pos:position pos:line="339" pos:column="18"/></name> <init pos:line="339" pos:column="19">= <expr><name pos:line="339" pos:column="21">ftp_typecode<pos:position pos:line="339" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="339" pos:column="34"/></decl_stmt>
          <comment type="block" pos:line="340" pos:column="11">/* avoid sending invalid URLs like ftp://example.com;type=i if the
           * user specified ftp://example.com without the slash */</comment>
          <if pos:line="342" pos:column="11">if<condition pos:line="342" pos:column="13">(<expr><operator pos:line="342" pos:column="14">!<pos:position pos:line="342" pos:column="15"/></operator><operator pos:line="342" pos:column="15">*<pos:position pos:line="342" pos:column="16"/></operator><name><name pos:line="342" pos:column="16">data<pos:position pos:line="342" pos:column="20"/></name><operator pos:line="342" pos:column="20">-&gt;<pos:position pos:line="342" pos:column="25"/></operator><name pos:line="342" pos:column="22">state<pos:position pos:line="342" pos:column="27"/></name><operator pos:line="342" pos:column="27">.<pos:position pos:line="342" pos:column="28"/></operator><name pos:line="342" pos:column="28">path<pos:position pos:line="342" pos:column="32"/></name></name> <operator pos:line="342" pos:column="33">&amp;&amp;<pos:position pos:line="342" pos:column="43"/></operator> <name><name pos:line="342" pos:column="36">ppath<pos:position pos:line="342" pos:column="41"/></name><index pos:line="342" pos:column="41">[<expr><call><name pos:line="342" pos:column="42">strlen<pos:position pos:line="342" pos:column="48"/></name><argument_list pos:line="342" pos:column="48">(<argument><expr><name pos:line="342" pos:column="49">ppath<pos:position pos:line="342" pos:column="54"/></name></expr></argument>)<pos:position pos:line="342" pos:column="55"/></argument_list></call> <operator pos:line="342" pos:column="56">-<pos:position pos:line="342" pos:column="57"/></operator> <literal type="number" pos:line="342" pos:column="58">1<pos:position pos:line="342" pos:column="59"/></literal></expr>]<pos:position pos:line="342" pos:column="60"/></index></name> <operator pos:line="342" pos:column="61">!=<pos:position pos:line="342" pos:column="63"/></operator> <literal type="char" pos:line="342" pos:column="64">'/'<pos:position pos:line="342" pos:column="67"/></literal></expr>)<pos:position pos:line="342" pos:column="68"/></condition><then pos:line="342" pos:column="68"> <block pos:line="342" pos:column="69">{
            <expr_stmt><expr><operator pos:line="343" pos:column="13">*<pos:position pos:line="343" pos:column="14"/></operator><name pos:line="343" pos:column="14">p<pos:position pos:line="343" pos:column="15"/></name><operator pos:line="343" pos:column="15">++<pos:position pos:line="343" pos:column="17"/></operator> <operator pos:line="343" pos:column="18">=<pos:position pos:line="343" pos:column="19"/></operator> <literal type="char" pos:line="343" pos:column="20">'/'<pos:position pos:line="343" pos:column="23"/></literal></expr>;<pos:position pos:line="343" pos:column="24"/></expr_stmt>
          }<pos:position pos:line="344" pos:column="12"/></block></then></if>
          <expr_stmt><expr><call><name pos:line="345" pos:column="11">snprintf<pos:position pos:line="345" pos:column="19"/></name><argument_list pos:line="345" pos:column="19">(<argument><expr><name pos:line="345" pos:column="20">p<pos:position pos:line="345" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="345" pos:column="23">sizeof<argument_list pos:line="345" pos:column="29">(<argument><expr><name pos:line="345" pos:column="30">ftp_typecode<pos:position pos:line="345" pos:column="42"/></name></expr></argument>)<pos:position pos:line="345" pos:column="43"/></argument_list></sizeof> <operator pos:line="345" pos:column="44">-<pos:position pos:line="345" pos:column="45"/></operator> <literal type="number" pos:line="345" pos:column="46">1<pos:position pos:line="345" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="49">";type=%c"<pos:position pos:line="345" pos:column="59"/></literal></expr></argument>,
                   <argument><expr><ternary><condition><expr><name><name pos:line="346" pos:column="20">data<pos:position pos:line="346" pos:column="24"/></name><operator pos:line="346" pos:column="24">-&gt;<pos:position pos:line="346" pos:column="29"/></operator><name pos:line="346" pos:column="26">set<pos:position pos:line="346" pos:column="29"/></name><operator pos:line="346" pos:column="29">.<pos:position pos:line="346" pos:column="30"/></operator><name pos:line="346" pos:column="30">prefer_ascii<pos:position pos:line="346" pos:column="42"/></name></name></expr> ?<pos:position pos:line="346" pos:column="44"/></condition><then pos:line="346" pos:column="44"> <expr><literal type="char" pos:line="346" pos:column="45">'a'<pos:position pos:line="346" pos:column="48"/></literal></expr> <pos:position pos:line="346" pos:column="49"/></then><else pos:line="346" pos:column="49">: <expr><literal type="char" pos:line="346" pos:column="51">'i'<pos:position pos:line="346" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="346" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="347" pos:column="10"/></block></then></if>
      }<pos:position pos:line="348" pos:column="8"/></block></then></if>
      <if pos:line="349" pos:column="7">if<condition pos:line="349" pos:column="9">(<expr><name><name pos:line="349" pos:column="10">conn<pos:position pos:line="349" pos:column="14"/></name><operator pos:line="349" pos:column="14">-&gt;<pos:position pos:line="349" pos:column="19"/></operator><name pos:line="349" pos:column="16">bits<pos:position pos:line="349" pos:column="20"/></name><operator pos:line="349" pos:column="20">.<pos:position pos:line="349" pos:column="21"/></operator><name pos:line="349" pos:column="21">user_passwd<pos:position pos:line="349" pos:column="32"/></name></name> <operator pos:line="349" pos:column="33">&amp;&amp;<pos:position pos:line="349" pos:column="43"/></operator> <operator pos:line="349" pos:column="36">!<pos:position pos:line="349" pos:column="37"/></operator><name><name pos:line="349" pos:column="37">conn<pos:position pos:line="349" pos:column="41"/></name><operator pos:line="349" pos:column="41">-&gt;<pos:position pos:line="349" pos:column="46"/></operator><name pos:line="349" pos:column="43">bits<pos:position pos:line="349" pos:column="47"/></name><operator pos:line="349" pos:column="47">.<pos:position pos:line="349" pos:column="48"/></operator><name pos:line="349" pos:column="48">userpwd_in_url<pos:position pos:line="349" pos:column="62"/></name></name></expr>)<pos:position pos:line="349" pos:column="63"/></condition><then pos:line="349" pos:column="63">
        <block type="pseudo"><expr_stmt><expr><name pos:line="350" pos:column="9">paste_ftp_userpwd<pos:position pos:line="350" pos:column="26"/></name> <operator pos:line="350" pos:column="27">=<pos:position pos:line="350" pos:column="28"/></operator> <name pos:line="350" pos:column="29">TRUE<pos:position pos:line="350" pos:column="33"/></name></expr>;<pos:position pos:line="350" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="351" pos:column="6"/></block></then></if>
  }<pos:position pos:line="352" pos:column="4"/></block></then></if>
<cpp:endif pos:line="353" pos:column="1">#<cpp:directive pos:line="353" pos:column="2">endif<pos:position pos:line="353" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="353" pos:column="8">/* CURL_DISABLE_PROXY */</comment>

  <if pos:line="355" pos:column="3">if<condition pos:line="355" pos:column="5">(<expr><name pos:line="355" pos:column="6">HTTPREQ_POST_FORM<pos:position pos:line="355" pos:column="23"/></name> <operator pos:line="355" pos:column="24">==<pos:position pos:line="355" pos:column="26"/></operator> <name pos:line="355" pos:column="27">httpreq<pos:position pos:line="355" pos:column="34"/></name></expr>)<pos:position pos:line="355" pos:column="35"/></condition><then pos:line="355" pos:column="35"> <block pos:line="355" pos:column="36">{
    <comment type="block" pos:line="356" pos:column="5">/* we must build the whole post sequence first, so that we have a size of
       the whole transfer before we start to send it */</comment>
    <expr_stmt><expr><name pos:line="358" pos:column="5">result<pos:position pos:line="358" pos:column="11"/></name> <operator pos:line="358" pos:column="12">=<pos:position pos:line="358" pos:column="13"/></operator> <call><name pos:line="358" pos:column="14">Curl_getformdata<pos:position pos:line="358" pos:column="30"/></name><argument_list pos:line="358" pos:column="30">(<argument><expr><name pos:line="358" pos:column="31">data<pos:position pos:line="358" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="358" pos:column="37">&amp;<pos:position pos:line="358" pos:column="42"/></operator><name><name pos:line="358" pos:column="38">http<pos:position pos:line="358" pos:column="42"/></name><operator pos:line="358" pos:column="42">-&gt;<pos:position pos:line="358" pos:column="47"/></operator><name pos:line="358" pos:column="44">sendit<pos:position pos:line="358" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="358" pos:column="52">data<pos:position pos:line="358" pos:column="56"/></name><operator pos:line="358" pos:column="56">-&gt;<pos:position pos:line="358" pos:column="61"/></operator><name pos:line="358" pos:column="58">set<pos:position pos:line="358" pos:column="61"/></name><operator pos:line="358" pos:column="61">.<pos:position pos:line="358" pos:column="62"/></operator><name pos:line="358" pos:column="62">httppost<pos:position pos:line="358" pos:column="70"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="359" pos:column="31">Curl_checkheaders<pos:position pos:line="359" pos:column="48"/></name><argument_list pos:line="359" pos:column="48">(<argument><expr><name pos:line="359" pos:column="49">conn<pos:position pos:line="359" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="359" pos:column="55">"Content-Type:"<pos:position pos:line="359" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="359" pos:column="71"/></argument_list></call></expr></argument>,
                              <argument><expr><operator pos:line="360" pos:column="31">&amp;<pos:position pos:line="360" pos:column="36"/></operator><name><name pos:line="360" pos:column="32">http<pos:position pos:line="360" pos:column="36"/></name><operator pos:line="360" pos:column="36">-&gt;<pos:position pos:line="360" pos:column="41"/></operator><name pos:line="360" pos:column="38">postsize<pos:position pos:line="360" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="360" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="48"/></expr_stmt>
    <if pos:line="361" pos:column="5">if<condition pos:line="361" pos:column="7">(<expr><name pos:line="361" pos:column="8">result<pos:position pos:line="361" pos:column="14"/></name></expr>)<pos:position pos:line="361" pos:column="15"/></condition><then pos:line="361" pos:column="15">
      <block type="pseudo"><return pos:line="362" pos:column="7">return <expr><name pos:line="362" pos:column="14">result<pos:position pos:line="362" pos:column="20"/></name></expr>;<pos:position pos:line="362" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="363" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="365" pos:column="3">http<pos:position pos:line="365" pos:column="7"/></name><operator pos:line="365" pos:column="7">-&gt;<pos:position pos:line="365" pos:column="12"/></operator><name pos:line="365" pos:column="9">p_accept<pos:position pos:line="365" pos:column="17"/></name></name> <operator pos:line="365" pos:column="18">=<pos:position pos:line="365" pos:column="19"/></operator> <ternary><condition><expr><call><name pos:line="365" pos:column="20">Curl_checkheaders<pos:position pos:line="365" pos:column="37"/></name><argument_list pos:line="365" pos:column="37">(<argument><expr><name pos:line="365" pos:column="38">conn<pos:position pos:line="365" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="365" pos:column="44">"Accept:"<pos:position pos:line="365" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="365" pos:column="54"/></argument_list></call></expr>?<pos:position pos:line="365" pos:column="55"/></condition><then><expr><name pos:line="365" pos:column="55">NULL<pos:position pos:line="365" pos:column="59"/></name></expr></then><else pos:line="365" pos:column="59">:<expr><literal type="string" pos:line="365" pos:column="60">"Accept: */*\r\n"<pos:position pos:line="365" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="365" pos:column="78"/></expr_stmt>

  <if pos:line="367" pos:column="3">if<condition pos:line="367" pos:column="5">(<expr><operator pos:line="367" pos:column="6">(<pos:position pos:line="367" pos:column="7"/></operator> <operator pos:line="367" pos:column="8">(<pos:position pos:line="367" pos:column="9"/></operator><name pos:line="367" pos:column="9">HTTPREQ_POST<pos:position pos:line="367" pos:column="21"/></name> <operator pos:line="367" pos:column="22">==<pos:position pos:line="367" pos:column="24"/></operator> <name pos:line="367" pos:column="25">httpreq<pos:position pos:line="367" pos:column="32"/></name><operator pos:line="367" pos:column="32">)<pos:position pos:line="367" pos:column="33"/></operator> <operator pos:line="367" pos:column="34">||<pos:position pos:line="367" pos:column="36"/></operator>
       <operator pos:line="368" pos:column="8">(<pos:position pos:line="368" pos:column="9"/></operator><name pos:line="368" pos:column="9">HTTPREQ_POST_FORM<pos:position pos:line="368" pos:column="26"/></name> <operator pos:line="368" pos:column="27">==<pos:position pos:line="368" pos:column="29"/></operator> <name pos:line="368" pos:column="30">httpreq<pos:position pos:line="368" pos:column="37"/></name><operator pos:line="368" pos:column="37">)<pos:position pos:line="368" pos:column="38"/></operator> <operator pos:line="368" pos:column="39">||<pos:position pos:line="368" pos:column="41"/></operator>
       <operator pos:line="369" pos:column="8">(<pos:position pos:line="369" pos:column="9"/></operator><name pos:line="369" pos:column="9">HTTPREQ_PUT<pos:position pos:line="369" pos:column="20"/></name> <operator pos:line="369" pos:column="21">==<pos:position pos:line="369" pos:column="23"/></operator> <name pos:line="369" pos:column="24">httpreq<pos:position pos:line="369" pos:column="31"/></name><operator pos:line="369" pos:column="31">)<pos:position pos:line="369" pos:column="32"/></operator> <operator pos:line="369" pos:column="33">)<pos:position pos:line="369" pos:column="34"/></operator> <operator pos:line="369" pos:column="35">&amp;&amp;<pos:position pos:line="369" pos:column="45"/></operator>
     <name><name pos:line="370" pos:column="6">data<pos:position pos:line="370" pos:column="10"/></name><operator pos:line="370" pos:column="10">-&gt;<pos:position pos:line="370" pos:column="15"/></operator><name pos:line="370" pos:column="12">state<pos:position pos:line="370" pos:column="17"/></name><operator pos:line="370" pos:column="17">.<pos:position pos:line="370" pos:column="18"/></operator><name pos:line="370" pos:column="18">resume_from<pos:position pos:line="370" pos:column="29"/></name></name></expr>)<pos:position pos:line="370" pos:column="30"/></condition><then pos:line="370" pos:column="30"> <block pos:line="370" pos:column="31">{
    <comment type="block" format="doxygen" pos:line="371" pos:column="5">/**********************************************************************
     * Resuming upload in HTTP means that we PUT or POST and that we have
     * got a resume_from value set. The resume value has already created
     * a Range: header that will be passed along. We need to "fast forward"
     * the file the given number of bytes and decrease the assume upload
     * file size before we continue this venture in the dark lands of HTTP.
     *********************************************************************/</comment>

    <if pos:line="379" pos:column="5">if<condition pos:line="379" pos:column="7">(<expr><name><name pos:line="379" pos:column="8">data<pos:position pos:line="379" pos:column="12"/></name><operator pos:line="379" pos:column="12">-&gt;<pos:position pos:line="379" pos:column="17"/></operator><name pos:line="379" pos:column="14">state<pos:position pos:line="379" pos:column="19"/></name><operator pos:line="379" pos:column="19">.<pos:position pos:line="379" pos:column="20"/></operator><name pos:line="379" pos:column="20">resume_from<pos:position pos:line="379" pos:column="31"/></name></name> <operator pos:line="379" pos:column="32">&lt;<pos:position pos:line="379" pos:column="36"/></operator> <literal type="number" pos:line="379" pos:column="34">0<pos:position pos:line="379" pos:column="35"/></literal></expr> )<pos:position pos:line="379" pos:column="37"/></condition><then pos:line="379" pos:column="37"> <block pos:line="379" pos:column="38">{
      <comment type="block" pos:line="380" pos:column="7">/*
       * This is meant to get the size of the present remote-file by itself.
       * We don't support this now. Bail out!
       */</comment>
      <expr_stmt><expr><name><name pos:line="384" pos:column="7">data<pos:position pos:line="384" pos:column="11"/></name><operator pos:line="384" pos:column="11">-&gt;<pos:position pos:line="384" pos:column="16"/></operator><name pos:line="384" pos:column="13">state<pos:position pos:line="384" pos:column="18"/></name><operator pos:line="384" pos:column="18">.<pos:position pos:line="384" pos:column="19"/></operator><name pos:line="384" pos:column="19">resume_from<pos:position pos:line="384" pos:column="30"/></name></name> <operator pos:line="384" pos:column="31">=<pos:position pos:line="384" pos:column="32"/></operator> <literal type="number" pos:line="384" pos:column="33">0<pos:position pos:line="384" pos:column="34"/></literal></expr>;<pos:position pos:line="384" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="385" pos:column="6"/></block></then></if>

    <if pos:line="387" pos:column="5">if<condition pos:line="387" pos:column="7">(<expr><name><name pos:line="387" pos:column="8">data<pos:position pos:line="387" pos:column="12"/></name><operator pos:line="387" pos:column="12">-&gt;<pos:position pos:line="387" pos:column="17"/></operator><name pos:line="387" pos:column="14">state<pos:position pos:line="387" pos:column="19"/></name><operator pos:line="387" pos:column="19">.<pos:position pos:line="387" pos:column="20"/></operator><name pos:line="387" pos:column="20">resume_from<pos:position pos:line="387" pos:column="31"/></name></name> <operator pos:line="387" pos:column="32">&amp;&amp;<pos:position pos:line="387" pos:column="42"/></operator> <operator pos:line="387" pos:column="35">!<pos:position pos:line="387" pos:column="36"/></operator><name><name pos:line="387" pos:column="36">data<pos:position pos:line="387" pos:column="40"/></name><operator pos:line="387" pos:column="40">-&gt;<pos:position pos:line="387" pos:column="45"/></operator><name pos:line="387" pos:column="42">state<pos:position pos:line="387" pos:column="47"/></name><operator pos:line="387" pos:column="47">.<pos:position pos:line="387" pos:column="48"/></operator><name pos:line="387" pos:column="48">this_is_a_follow<pos:position pos:line="387" pos:column="64"/></name></name></expr>)<pos:position pos:line="387" pos:column="65"/></condition><then pos:line="387" pos:column="65"> <block pos:line="387" pos:column="66">{
      <comment type="block" pos:line="388" pos:column="7">/* do we still game? */</comment>

      <comment type="block" pos:line="390" pos:column="7">/* Now, let's read off the proper amount of bytes from the
         input. */</comment>
      <if pos:line="392" pos:column="7">if<condition pos:line="392" pos:column="9">(<expr><name><name pos:line="392" pos:column="10">conn<pos:position pos:line="392" pos:column="14"/></name><operator pos:line="392" pos:column="14">-&gt;<pos:position pos:line="392" pos:column="19"/></operator><name pos:line="392" pos:column="16">seek_func<pos:position pos:line="392" pos:column="25"/></name></name></expr>)<pos:position pos:line="392" pos:column="26"/></condition><then pos:line="392" pos:column="26"> <block pos:line="392" pos:column="27">{
        <expr_stmt><expr><name pos:line="393" pos:column="9">seekerr<pos:position pos:line="393" pos:column="16"/></name> <operator pos:line="393" pos:column="17">=<pos:position pos:line="393" pos:column="18"/></operator> <call><name><name pos:line="393" pos:column="19">conn<pos:position pos:line="393" pos:column="23"/></name><operator pos:line="393" pos:column="23">-&gt;<pos:position pos:line="393" pos:column="28"/></operator><name pos:line="393" pos:column="25">seek_func<pos:position pos:line="393" pos:column="34"/></name></name><argument_list pos:line="393" pos:column="34">(<argument><expr><name><name pos:line="393" pos:column="35">conn<pos:position pos:line="393" pos:column="39"/></name><operator pos:line="393" pos:column="39">-&gt;<pos:position pos:line="393" pos:column="44"/></operator><name pos:line="393" pos:column="41">seek_client<pos:position pos:line="393" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="393" pos:column="54">data<pos:position pos:line="393" pos:column="58"/></name><operator pos:line="393" pos:column="58">-&gt;<pos:position pos:line="393" pos:column="63"/></operator><name pos:line="393" pos:column="60">state<pos:position pos:line="393" pos:column="65"/></name><operator pos:line="393" pos:column="65">.<pos:position pos:line="393" pos:column="66"/></operator><name pos:line="393" pos:column="66">resume_from<pos:position pos:line="393" pos:column="77"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="394" pos:column="35">SEEK_SET<pos:position pos:line="394" pos:column="43"/></name></expr></argument>)<pos:position pos:line="394" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="395" pos:column="8"/></block></then></if>

      <if pos:line="397" pos:column="7">if<condition pos:line="397" pos:column="9">(<expr><name pos:line="397" pos:column="10">seekerr<pos:position pos:line="397" pos:column="17"/></name> <operator pos:line="397" pos:column="18">!=<pos:position pos:line="397" pos:column="20"/></operator> <name pos:line="397" pos:column="21">CURL_SEEKFUNC_OK<pos:position pos:line="397" pos:column="37"/></name></expr>)<pos:position pos:line="397" pos:column="38"/></condition><then pos:line="397" pos:column="38"> <block pos:line="397" pos:column="39">{
        <if pos:line="398" pos:column="9">if<condition pos:line="398" pos:column="11">(<expr><name pos:line="398" pos:column="12">seekerr<pos:position pos:line="398" pos:column="19"/></name> <operator pos:line="398" pos:column="20">!=<pos:position pos:line="398" pos:column="22"/></operator> <name pos:line="398" pos:column="23">CURL_SEEKFUNC_CANTSEEK<pos:position pos:line="398" pos:column="45"/></name></expr>)<pos:position pos:line="398" pos:column="46"/></condition><then pos:line="398" pos:column="46"> <block pos:line="398" pos:column="47">{
          <expr_stmt><expr><call><name pos:line="399" pos:column="11">failf<pos:position pos:line="399" pos:column="16"/></name><argument_list pos:line="399" pos:column="16">(<argument><expr><name pos:line="399" pos:column="17">data<pos:position pos:line="399" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="399" pos:column="23">"Could not seek stream"<pos:position pos:line="399" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="399" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="399" pos:column="48"/></expr_stmt>
          <return pos:line="400" pos:column="11">return <expr><name pos:line="400" pos:column="18">CURLE_READ_ERROR<pos:position pos:line="400" pos:column="34"/></name></expr>;<pos:position pos:line="400" pos:column="35"/></return>
        }<pos:position pos:line="401" pos:column="10"/></block></then>
        <comment type="block" pos:line="402" pos:column="9">/* when seekerr == CURL_SEEKFUNC_CANTSEEK (can't seek to offset) */</comment>
        <else pos:line="403" pos:column="9">else <block pos:line="403" pos:column="14">{
          <decl_stmt><decl><type><name pos:line="404" pos:column="11">curl_off_t<pos:position pos:line="404" pos:column="21"/></name></type> <name pos:line="404" pos:column="22">passed<pos:position pos:line="404" pos:column="28"/></name><init pos:line="404" pos:column="28">=<expr><literal type="number" pos:line="404" pos:column="29">0<pos:position pos:line="404" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="404" pos:column="31"/></decl_stmt>
          <do pos:line="405" pos:column="11">do <block pos:line="405" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="406" pos:column="13">size_t<pos:position pos:line="406" pos:column="19"/></name></type> <name pos:line="406" pos:column="20">readthisamountnow<pos:position pos:line="406" pos:column="37"/></name> <init pos:line="406" pos:column="38">=
              <expr><ternary><condition><expr><operator pos:line="407" pos:column="15">(<pos:position pos:line="407" pos:column="16"/></operator><name><name pos:line="407" pos:column="16">data<pos:position pos:line="407" pos:column="20"/></name><operator pos:line="407" pos:column="20">-&gt;<pos:position pos:line="407" pos:column="25"/></operator><name pos:line="407" pos:column="22">state<pos:position pos:line="407" pos:column="27"/></name><operator pos:line="407" pos:column="27">.<pos:position pos:line="407" pos:column="28"/></operator><name pos:line="407" pos:column="28">resume_from<pos:position pos:line="407" pos:column="39"/></name></name> <operator pos:line="407" pos:column="40">-<pos:position pos:line="407" pos:column="41"/></operator> <name pos:line="407" pos:column="42">passed<pos:position pos:line="407" pos:column="48"/></name> <operator pos:line="407" pos:column="49">&gt;<pos:position pos:line="407" pos:column="53"/></operator> <call><name pos:line="407" pos:column="51">CURL_OFF_T_C<pos:position pos:line="407" pos:column="63"/></name><argument_list pos:line="407" pos:column="63">(<argument><expr><name pos:line="407" pos:column="64">BUFSIZE<pos:position pos:line="407" pos:column="71"/></name></expr></argument>)<pos:position pos:line="407" pos:column="72"/></argument_list></call><operator pos:line="407" pos:column="72">)<pos:position pos:line="407" pos:column="73"/></operator></expr> ?<pos:position pos:line="407" pos:column="75"/></condition><then pos:line="407" pos:column="75">
              <expr><name pos:line="408" pos:column="15">BUFSIZE<pos:position pos:line="408" pos:column="22"/></name></expr> <pos:position pos:line="408" pos:column="23"/></then><else pos:line="408" pos:column="23">: <expr><call><name pos:line="408" pos:column="25">curlx_sotouz<pos:position pos:line="408" pos:column="37"/></name><argument_list pos:line="408" pos:column="37">(<argument><expr><name><name pos:line="408" pos:column="38">data<pos:position pos:line="408" pos:column="42"/></name><operator pos:line="408" pos:column="42">-&gt;<pos:position pos:line="408" pos:column="47"/></operator><name pos:line="408" pos:column="44">state<pos:position pos:line="408" pos:column="49"/></name><operator pos:line="408" pos:column="49">.<pos:position pos:line="408" pos:column="50"/></operator><name pos:line="408" pos:column="50">resume_from<pos:position pos:line="408" pos:column="61"/></name></name> <operator pos:line="408" pos:column="62">-<pos:position pos:line="408" pos:column="63"/></operator> <name pos:line="408" pos:column="64">passed<pos:position pos:line="408" pos:column="70"/></name></expr></argument>)<pos:position pos:line="408" pos:column="71"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="408" pos:column="72"/></decl_stmt>

            <decl_stmt><decl><type><name pos:line="410" pos:column="13">size_t<pos:position pos:line="410" pos:column="19"/></name></type> <name pos:line="410" pos:column="20">actuallyread<pos:position pos:line="410" pos:column="32"/></name> <init pos:line="410" pos:column="33">=
              <expr><call><name><name pos:line="411" pos:column="15">data<pos:position pos:line="411" pos:column="19"/></name><operator pos:line="411" pos:column="19">-&gt;<pos:position pos:line="411" pos:column="24"/></operator><name pos:line="411" pos:column="21">set<pos:position pos:line="411" pos:column="24"/></name><operator pos:line="411" pos:column="24">.<pos:position pos:line="411" pos:column="25"/></operator><name pos:line="411" pos:column="25">fread_func<pos:position pos:line="411" pos:column="35"/></name></name><argument_list pos:line="411" pos:column="35">(<argument><expr><name><name pos:line="411" pos:column="36">data<pos:position pos:line="411" pos:column="40"/></name><operator pos:line="411" pos:column="40">-&gt;<pos:position pos:line="411" pos:column="45"/></operator><name pos:line="411" pos:column="42">state<pos:position pos:line="411" pos:column="47"/></name><operator pos:line="411" pos:column="47">.<pos:position pos:line="411" pos:column="48"/></operator><name pos:line="411" pos:column="48">buffer<pos:position pos:line="411" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="411" pos:column="56">1<pos:position pos:line="411" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="411" pos:column="59">readthisamountnow<pos:position pos:line="411" pos:column="76"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="412" pos:column="36">data<pos:position pos:line="412" pos:column="40"/></name><operator pos:line="412" pos:column="40">-&gt;<pos:position pos:line="412" pos:column="45"/></operator><name pos:line="412" pos:column="42">set<pos:position pos:line="412" pos:column="45"/></name><operator pos:line="412" pos:column="45">.<pos:position pos:line="412" pos:column="46"/></operator><name pos:line="412" pos:column="46">in<pos:position pos:line="412" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="412" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="412" pos:column="50"/></decl_stmt>

            <expr_stmt><expr><name pos:line="414" pos:column="13">passed<pos:position pos:line="414" pos:column="19"/></name> <operator pos:line="414" pos:column="20">+=<pos:position pos:line="414" pos:column="22"/></operator> <name pos:line="414" pos:column="23">actuallyread<pos:position pos:line="414" pos:column="35"/></name></expr>;<pos:position pos:line="414" pos:column="36"/></expr_stmt>
            <if pos:line="415" pos:column="13">if<condition pos:line="415" pos:column="15">(<expr><operator pos:line="415" pos:column="16">(<pos:position pos:line="415" pos:column="17"/></operator><name pos:line="415" pos:column="17">actuallyread<pos:position pos:line="415" pos:column="29"/></name> <operator pos:line="415" pos:column="30">==<pos:position pos:line="415" pos:column="32"/></operator> <literal type="number" pos:line="415" pos:column="33">0<pos:position pos:line="415" pos:column="34"/></literal><operator pos:line="415" pos:column="34">)<pos:position pos:line="415" pos:column="35"/></operator> <operator pos:line="415" pos:column="36">||<pos:position pos:line="415" pos:column="38"/></operator> <operator pos:line="415" pos:column="39">(<pos:position pos:line="415" pos:column="40"/></operator><name pos:line="415" pos:column="40">actuallyread<pos:position pos:line="415" pos:column="52"/></name> <operator pos:line="415" pos:column="53">&gt;<pos:position pos:line="415" pos:column="57"/></operator> <name pos:line="415" pos:column="55">readthisamountnow<pos:position pos:line="415" pos:column="72"/></name><operator pos:line="415" pos:column="72">)<pos:position pos:line="415" pos:column="73"/></operator></expr>)<pos:position pos:line="415" pos:column="74"/></condition><then pos:line="415" pos:column="74"> <block pos:line="415" pos:column="75">{
              <comment type="block" pos:line="416" pos:column="15">/* this checks for greater-than only to make sure that the
                 CURL_READFUNC_ABORT return code still aborts */</comment>
              <expr_stmt><expr><call><name pos:line="418" pos:column="15">failf<pos:position pos:line="418" pos:column="20"/></name><argument_list pos:line="418" pos:column="20">(<argument><expr><name pos:line="418" pos:column="21">data<pos:position pos:line="418" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="418" pos:column="27">"Could only read %"<pos:position pos:line="418" pos:column="46"/></literal> <name pos:line="418" pos:column="47">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="418" pos:column="69"/></name>
                    <literal type="string" pos:line="419" pos:column="21">" bytes from the input"<pos:position pos:line="419" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="419" pos:column="46">passed<pos:position pos:line="419" pos:column="52"/></name></expr></argument>)<pos:position pos:line="419" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="54"/></expr_stmt>
              <return pos:line="420" pos:column="15">return <expr><name pos:line="420" pos:column="22">CURLE_READ_ERROR<pos:position pos:line="420" pos:column="38"/></name></expr>;<pos:position pos:line="420" pos:column="39"/></return>
            }<pos:position pos:line="421" pos:column="14"/></block></then></if>
          }<pos:position pos:line="422" pos:column="12"/></block> while<condition pos:line="422" pos:column="18">(<expr><name pos:line="422" pos:column="19">passed<pos:position pos:line="422" pos:column="25"/></name> <operator pos:line="422" pos:column="26">&lt;<pos:position pos:line="422" pos:column="30"/></operator> <name><name pos:line="422" pos:column="28">data<pos:position pos:line="422" pos:column="32"/></name><operator pos:line="422" pos:column="32">-&gt;<pos:position pos:line="422" pos:column="37"/></operator><name pos:line="422" pos:column="34">state<pos:position pos:line="422" pos:column="39"/></name><operator pos:line="422" pos:column="39">.<pos:position pos:line="422" pos:column="40"/></operator><name pos:line="422" pos:column="40">resume_from<pos:position pos:line="422" pos:column="51"/></name></name></expr>)<pos:position pos:line="422" pos:column="52"/></condition>;<pos:position pos:line="422" pos:column="53"/></do>
        }<pos:position pos:line="423" pos:column="10"/></block></else></if>
      }<pos:position pos:line="424" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="426" pos:column="7">/* now, decrease the size of the read */</comment>
      <if pos:line="427" pos:column="7">if<condition pos:line="427" pos:column="9">(<expr><name><name pos:line="427" pos:column="10">data<pos:position pos:line="427" pos:column="14"/></name><operator pos:line="427" pos:column="14">-&gt;<pos:position pos:line="427" pos:column="19"/></operator><name pos:line="427" pos:column="16">state<pos:position pos:line="427" pos:column="21"/></name><operator pos:line="427" pos:column="21">.<pos:position pos:line="427" pos:column="22"/></operator><name pos:line="427" pos:column="22">infilesize<pos:position pos:line="427" pos:column="32"/></name></name><operator pos:line="427" pos:column="32">&gt;<pos:position pos:line="427" pos:column="36"/></operator><literal type="number" pos:line="427" pos:column="33">0<pos:position pos:line="427" pos:column="34"/></literal></expr>)<pos:position pos:line="427" pos:column="35"/></condition><then pos:line="427" pos:column="35"> <block pos:line="427" pos:column="36">{
        <expr_stmt><expr><name><name pos:line="428" pos:column="9">data<pos:position pos:line="428" pos:column="13"/></name><operator pos:line="428" pos:column="13">-&gt;<pos:position pos:line="428" pos:column="18"/></operator><name pos:line="428" pos:column="15">state<pos:position pos:line="428" pos:column="20"/></name><operator pos:line="428" pos:column="20">.<pos:position pos:line="428" pos:column="21"/></operator><name pos:line="428" pos:column="21">infilesize<pos:position pos:line="428" pos:column="31"/></name></name> <operator pos:line="428" pos:column="32">-=<pos:position pos:line="428" pos:column="34"/></operator> <name><name pos:line="428" pos:column="35">data<pos:position pos:line="428" pos:column="39"/></name><operator pos:line="428" pos:column="39">-&gt;<pos:position pos:line="428" pos:column="44"/></operator><name pos:line="428" pos:column="41">state<pos:position pos:line="428" pos:column="46"/></name><operator pos:line="428" pos:column="46">.<pos:position pos:line="428" pos:column="47"/></operator><name pos:line="428" pos:column="47">resume_from<pos:position pos:line="428" pos:column="58"/></name></name></expr>;<pos:position pos:line="428" pos:column="59"/></expr_stmt>

        <if pos:line="430" pos:column="9">if<condition pos:line="430" pos:column="11">(<expr><name><name pos:line="430" pos:column="12">data<pos:position pos:line="430" pos:column="16"/></name><operator pos:line="430" pos:column="16">-&gt;<pos:position pos:line="430" pos:column="21"/></operator><name pos:line="430" pos:column="18">state<pos:position pos:line="430" pos:column="23"/></name><operator pos:line="430" pos:column="23">.<pos:position pos:line="430" pos:column="24"/></operator><name pos:line="430" pos:column="24">infilesize<pos:position pos:line="430" pos:column="34"/></name></name> <operator pos:line="430" pos:column="35">&lt;=<pos:position pos:line="430" pos:column="40"/></operator> <literal type="number" pos:line="430" pos:column="38">0<pos:position pos:line="430" pos:column="39"/></literal></expr>)<pos:position pos:line="430" pos:column="40"/></condition><then pos:line="430" pos:column="40"> <block pos:line="430" pos:column="41">{
          <expr_stmt><expr><call><name pos:line="431" pos:column="11">failf<pos:position pos:line="431" pos:column="16"/></name><argument_list pos:line="431" pos:column="16">(<argument><expr><name pos:line="431" pos:column="17">data<pos:position pos:line="431" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="431" pos:column="23">"File already completely uploaded"<pos:position pos:line="431" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="431" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="59"/></expr_stmt>
          <return pos:line="432" pos:column="11">return <expr><name pos:line="432" pos:column="18">CURLE_PARTIAL_FILE<pos:position pos:line="432" pos:column="36"/></name></expr>;<pos:position pos:line="432" pos:column="37"/></return>
        }<pos:position pos:line="433" pos:column="10"/></block></then></if>
      }<pos:position pos:line="434" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="435" pos:column="7">/* we've passed, proceed as normal */</comment>
    }<pos:position pos:line="436" pos:column="6"/></block></then></if>
  }<pos:position pos:line="437" pos:column="4"/></block></then></if>
  <if pos:line="438" pos:column="3">if<condition pos:line="438" pos:column="5">(<expr><name><name pos:line="438" pos:column="6">data<pos:position pos:line="438" pos:column="10"/></name><operator pos:line="438" pos:column="10">-&gt;<pos:position pos:line="438" pos:column="15"/></operator><name pos:line="438" pos:column="12">state<pos:position pos:line="438" pos:column="17"/></name><operator pos:line="438" pos:column="17">.<pos:position pos:line="438" pos:column="18"/></operator><name pos:line="438" pos:column="18">use_range<pos:position pos:line="438" pos:column="27"/></name></name></expr>)<pos:position pos:line="438" pos:column="28"/></condition><then pos:line="438" pos:column="28"> <block pos:line="438" pos:column="29">{
    <comment type="block" pos:line="439" pos:column="5">/*
     * A range is selected. We use different headers whether we're downloading
     * or uploading and we always let customized headers override our internal
     * ones if any such are specified.
     */</comment>
    <if pos:line="444" pos:column="5">if<condition pos:line="444" pos:column="7">(<expr><operator pos:line="444" pos:column="8">(<pos:position pos:line="444" pos:column="9"/></operator><operator pos:line="444" pos:column="9">(<pos:position pos:line="444" pos:column="10"/></operator><name pos:line="444" pos:column="10">httpreq<pos:position pos:line="444" pos:column="17"/></name> <operator pos:line="444" pos:column="18">==<pos:position pos:line="444" pos:column="20"/></operator> <name pos:line="444" pos:column="21">HTTPREQ_GET<pos:position pos:line="444" pos:column="32"/></name><operator pos:line="444" pos:column="32">)<pos:position pos:line="444" pos:column="33"/></operator> <operator pos:line="444" pos:column="34">||<pos:position pos:line="444" pos:column="36"/></operator> <operator pos:line="444" pos:column="37">(<pos:position pos:line="444" pos:column="38"/></operator><name pos:line="444" pos:column="38">httpreq<pos:position pos:line="444" pos:column="45"/></name> <operator pos:line="444" pos:column="46">==<pos:position pos:line="444" pos:column="48"/></operator> <name pos:line="444" pos:column="49">HTTPREQ_HEAD<pos:position pos:line="444" pos:column="61"/></name><operator pos:line="444" pos:column="61">)<pos:position pos:line="444" pos:column="62"/></operator><operator pos:line="444" pos:column="62">)<pos:position pos:line="444" pos:column="63"/></operator> <operator pos:line="444" pos:column="64">&amp;&amp;<pos:position pos:line="444" pos:column="74"/></operator>
       <operator pos:line="445" pos:column="8">!<pos:position pos:line="445" pos:column="9"/></operator><call><name pos:line="445" pos:column="9">Curl_checkheaders<pos:position pos:line="445" pos:column="26"/></name><argument_list pos:line="445" pos:column="26">(<argument><expr><name pos:line="445" pos:column="27">conn<pos:position pos:line="445" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="445" pos:column="33">"Range:"<pos:position pos:line="445" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="445" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="445" pos:column="43"/></condition><then pos:line="445" pos:column="43"> <block pos:line="445" pos:column="44">{
      <comment type="block" pos:line="446" pos:column="7">/* if a line like this was already allocated, free the previous one */</comment>
      <if pos:line="447" pos:column="7">if<condition pos:line="447" pos:column="9">(<expr><name><name pos:line="447" pos:column="10">conn<pos:position pos:line="447" pos:column="14"/></name><operator pos:line="447" pos:column="14">-&gt;<pos:position pos:line="447" pos:column="19"/></operator><name pos:line="447" pos:column="16">allocptr<pos:position pos:line="447" pos:column="24"/></name><operator pos:line="447" pos:column="24">.<pos:position pos:line="447" pos:column="25"/></operator><name pos:line="447" pos:column="25">rangeline<pos:position pos:line="447" pos:column="34"/></name></name></expr>)<pos:position pos:line="447" pos:column="35"/></condition><then pos:line="447" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="448" pos:column="9">free<pos:position pos:line="448" pos:column="13"/></name><argument_list pos:line="448" pos:column="13">(<argument><expr><name><name pos:line="448" pos:column="14">conn<pos:position pos:line="448" pos:column="18"/></name><operator pos:line="448" pos:column="18">-&gt;<pos:position pos:line="448" pos:column="23"/></operator><name pos:line="448" pos:column="20">allocptr<pos:position pos:line="448" pos:column="28"/></name><operator pos:line="448" pos:column="28">.<pos:position pos:line="448" pos:column="29"/></operator><name pos:line="448" pos:column="29">rangeline<pos:position pos:line="448" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="448" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="40"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="449" pos:column="7">conn<pos:position pos:line="449" pos:column="11"/></name><operator pos:line="449" pos:column="11">-&gt;<pos:position pos:line="449" pos:column="16"/></operator><name pos:line="449" pos:column="13">allocptr<pos:position pos:line="449" pos:column="21"/></name><operator pos:line="449" pos:column="21">.<pos:position pos:line="449" pos:column="22"/></operator><name pos:line="449" pos:column="22">rangeline<pos:position pos:line="449" pos:column="31"/></name></name> <operator pos:line="449" pos:column="32">=<pos:position pos:line="449" pos:column="33"/></operator> <call><name pos:line="449" pos:column="34">aprintf<pos:position pos:line="449" pos:column="41"/></name><argument_list pos:line="449" pos:column="41">(<argument><expr><literal type="string" pos:line="449" pos:column="42">"Range: bytes=%s\r\n"<pos:position pos:line="449" pos:column="63"/></literal></expr></argument>,
                                         <argument><expr><name><name pos:line="450" pos:column="42">data<pos:position pos:line="450" pos:column="46"/></name><operator pos:line="450" pos:column="46">-&gt;<pos:position pos:line="450" pos:column="51"/></operator><name pos:line="450" pos:column="48">state<pos:position pos:line="450" pos:column="53"/></name><operator pos:line="450" pos:column="53">.<pos:position pos:line="450" pos:column="54"/></operator><name pos:line="450" pos:column="54">range<pos:position pos:line="450" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="450" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="451" pos:column="6"/></block></then>
    <elseif pos:line="452" pos:column="5">else <if pos:line="452" pos:column="10">if<condition pos:line="452" pos:column="12">(<expr><operator pos:line="452" pos:column="13">(<pos:position pos:line="452" pos:column="14"/></operator><name pos:line="452" pos:column="14">httpreq<pos:position pos:line="452" pos:column="21"/></name> <operator pos:line="452" pos:column="22">!=<pos:position pos:line="452" pos:column="24"/></operator> <name pos:line="452" pos:column="25">HTTPREQ_GET<pos:position pos:line="452" pos:column="36"/></name><operator pos:line="452" pos:column="36">)<pos:position pos:line="452" pos:column="37"/></operator> <operator pos:line="452" pos:column="38">&amp;&amp;<pos:position pos:line="452" pos:column="48"/></operator>
            <operator pos:line="453" pos:column="13">!<pos:position pos:line="453" pos:column="14"/></operator><call><name pos:line="453" pos:column="14">Curl_checkheaders<pos:position pos:line="453" pos:column="31"/></name><argument_list pos:line="453" pos:column="31">(<argument><expr><name pos:line="453" pos:column="32">conn<pos:position pos:line="453" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="453" pos:column="38">"Content-Range:"<pos:position pos:line="453" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="453" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="453" pos:column="56"/></condition><then pos:line="453" pos:column="56"> <block pos:line="453" pos:column="57">{

      <comment type="block" pos:line="455" pos:column="7">/* if a line like this was already allocated, free the previous one */</comment>
      <if pos:line="456" pos:column="7">if<condition pos:line="456" pos:column="9">(<expr><name><name pos:line="456" pos:column="10">conn<pos:position pos:line="456" pos:column="14"/></name><operator pos:line="456" pos:column="14">-&gt;<pos:position pos:line="456" pos:column="19"/></operator><name pos:line="456" pos:column="16">allocptr<pos:position pos:line="456" pos:column="24"/></name><operator pos:line="456" pos:column="24">.<pos:position pos:line="456" pos:column="25"/></operator><name pos:line="456" pos:column="25">rangeline<pos:position pos:line="456" pos:column="34"/></name></name></expr>)<pos:position pos:line="456" pos:column="35"/></condition><then pos:line="456" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="457" pos:column="9">free<pos:position pos:line="457" pos:column="13"/></name><argument_list pos:line="457" pos:column="13">(<argument><expr><name><name pos:line="457" pos:column="14">conn<pos:position pos:line="457" pos:column="18"/></name><operator pos:line="457" pos:column="18">-&gt;<pos:position pos:line="457" pos:column="23"/></operator><name pos:line="457" pos:column="20">allocptr<pos:position pos:line="457" pos:column="28"/></name><operator pos:line="457" pos:column="28">.<pos:position pos:line="457" pos:column="29"/></operator><name pos:line="457" pos:column="29">rangeline<pos:position pos:line="457" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="457" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="40"/></expr_stmt></block></then></if>

      <if pos:line="459" pos:column="7">if<condition pos:line="459" pos:column="9">(<expr><name><name pos:line="459" pos:column="10">data<pos:position pos:line="459" pos:column="14"/></name><operator pos:line="459" pos:column="14">-&gt;<pos:position pos:line="459" pos:column="19"/></operator><name pos:line="459" pos:column="16">set<pos:position pos:line="459" pos:column="19"/></name><operator pos:line="459" pos:column="19">.<pos:position pos:line="459" pos:column="20"/></operator><name pos:line="459" pos:column="20">set_resume_from<pos:position pos:line="459" pos:column="35"/></name></name> <operator pos:line="459" pos:column="36">&lt;<pos:position pos:line="459" pos:column="40"/></operator> <literal type="number" pos:line="459" pos:column="38">0<pos:position pos:line="459" pos:column="39"/></literal></expr>)<pos:position pos:line="459" pos:column="40"/></condition><then pos:line="459" pos:column="40"> <block pos:line="459" pos:column="41">{
        <comment type="block" pos:line="460" pos:column="9">/* Upload resume was asked for, but we don't know the size of the
           remote part so we tell the server (and act accordingly) that we
           upload the whole file (again) */</comment>
        <expr_stmt><expr><name><name pos:line="463" pos:column="9">conn<pos:position pos:line="463" pos:column="13"/></name><operator pos:line="463" pos:column="13">-&gt;<pos:position pos:line="463" pos:column="18"/></operator><name pos:line="463" pos:column="15">allocptr<pos:position pos:line="463" pos:column="23"/></name><operator pos:line="463" pos:column="23">.<pos:position pos:line="463" pos:column="24"/></operator><name pos:line="463" pos:column="24">rangeline<pos:position pos:line="463" pos:column="33"/></name></name> <operator pos:line="463" pos:column="34">=<pos:position pos:line="463" pos:column="35"/></operator>
          <call><name pos:line="464" pos:column="11">aprintf<pos:position pos:line="464" pos:column="18"/></name><argument_list pos:line="464" pos:column="18">(<argument><expr><literal type="string" pos:line="464" pos:column="19">"Content-Range: bytes 0-%"<pos:position pos:line="464" pos:column="45"/></literal> <name pos:line="464" pos:column="46">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="464" pos:column="68"/></name>
                  <literal type="string" pos:line="465" pos:column="19">"/%"<pos:position pos:line="465" pos:column="23"/></literal> <name pos:line="465" pos:column="24">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="465" pos:column="46"/></name> <literal type="string" pos:line="465" pos:column="47">"\r\n"<pos:position pos:line="465" pos:column="53"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="466" pos:column="19">data<pos:position pos:line="466" pos:column="23"/></name><operator pos:line="466" pos:column="23">-&gt;<pos:position pos:line="466" pos:column="28"/></operator><name pos:line="466" pos:column="25">state<pos:position pos:line="466" pos:column="30"/></name><operator pos:line="466" pos:column="30">.<pos:position pos:line="466" pos:column="31"/></operator><name pos:line="466" pos:column="31">infilesize<pos:position pos:line="466" pos:column="41"/></name></name> <operator pos:line="466" pos:column="42">-<pos:position pos:line="466" pos:column="43"/></operator> <literal type="number" pos:line="466" pos:column="44">1<pos:position pos:line="466" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="466" pos:column="47">data<pos:position pos:line="466" pos:column="51"/></name><operator pos:line="466" pos:column="51">-&gt;<pos:position pos:line="466" pos:column="56"/></operator><name pos:line="466" pos:column="53">state<pos:position pos:line="466" pos:column="58"/></name><operator pos:line="466" pos:column="58">.<pos:position pos:line="466" pos:column="59"/></operator><name pos:line="466" pos:column="59">infilesize<pos:position pos:line="466" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="466" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="71"/></expr_stmt>

      }<pos:position pos:line="468" pos:column="8"/></block></then>
      <elseif pos:line="469" pos:column="7">else <if pos:line="469" pos:column="12">if<condition pos:line="469" pos:column="14">(<expr><name><name pos:line="469" pos:column="15">data<pos:position pos:line="469" pos:column="19"/></name><operator pos:line="469" pos:column="19">-&gt;<pos:position pos:line="469" pos:column="24"/></operator><name pos:line="469" pos:column="21">state<pos:position pos:line="469" pos:column="26"/></name><operator pos:line="469" pos:column="26">.<pos:position pos:line="469" pos:column="27"/></operator><name pos:line="469" pos:column="27">resume_from<pos:position pos:line="469" pos:column="38"/></name></name></expr>)<pos:position pos:line="469" pos:column="39"/></condition><then pos:line="469" pos:column="39"> <block pos:line="469" pos:column="40">{
        <comment type="block" pos:line="470" pos:column="9">/* This is because "resume" was selected */</comment>
        <decl_stmt><decl><type><name pos:line="471" pos:column="9">curl_off_t<pos:position pos:line="471" pos:column="19"/></name></type> <name pos:line="471" pos:column="20">total_expected_size<pos:position pos:line="471" pos:column="39"/></name><init pos:line="471" pos:column="39">=
          <expr><name><name pos:line="472" pos:column="11">data<pos:position pos:line="472" pos:column="15"/></name><operator pos:line="472" pos:column="15">-&gt;<pos:position pos:line="472" pos:column="20"/></operator><name pos:line="472" pos:column="17">state<pos:position pos:line="472" pos:column="22"/></name><operator pos:line="472" pos:column="22">.<pos:position pos:line="472" pos:column="23"/></operator><name pos:line="472" pos:column="23">resume_from<pos:position pos:line="472" pos:column="34"/></name></name> <operator pos:line="472" pos:column="35">+<pos:position pos:line="472" pos:column="36"/></operator> <name><name pos:line="472" pos:column="37">data<pos:position pos:line="472" pos:column="41"/></name><operator pos:line="472" pos:column="41">-&gt;<pos:position pos:line="472" pos:column="46"/></operator><name pos:line="472" pos:column="43">state<pos:position pos:line="472" pos:column="48"/></name><operator pos:line="472" pos:column="48">.<pos:position pos:line="472" pos:column="49"/></operator><name pos:line="472" pos:column="49">infilesize<pos:position pos:line="472" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="472" pos:column="60"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="473" pos:column="9">conn<pos:position pos:line="473" pos:column="13"/></name><operator pos:line="473" pos:column="13">-&gt;<pos:position pos:line="473" pos:column="18"/></operator><name pos:line="473" pos:column="15">allocptr<pos:position pos:line="473" pos:column="23"/></name><operator pos:line="473" pos:column="23">.<pos:position pos:line="473" pos:column="24"/></operator><name pos:line="473" pos:column="24">rangeline<pos:position pos:line="473" pos:column="33"/></name></name> <operator pos:line="473" pos:column="34">=<pos:position pos:line="473" pos:column="35"/></operator>
          <call><name pos:line="474" pos:column="11">aprintf<pos:position pos:line="474" pos:column="18"/></name><argument_list pos:line="474" pos:column="18">(<argument><expr><literal type="string" pos:line="474" pos:column="19">"Content-Range: bytes %s%"<pos:position pos:line="474" pos:column="45"/></literal> <name pos:line="474" pos:column="46">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="474" pos:column="68"/></name>
                  <literal type="string" pos:line="475" pos:column="19">"/%"<pos:position pos:line="475" pos:column="23"/></literal> <name pos:line="475" pos:column="24">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="475" pos:column="46"/></name> <literal type="string" pos:line="475" pos:column="47">"\r\n"<pos:position pos:line="475" pos:column="53"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="476" pos:column="19">data<pos:position pos:line="476" pos:column="23"/></name><operator pos:line="476" pos:column="23">-&gt;<pos:position pos:line="476" pos:column="28"/></operator><name pos:line="476" pos:column="25">state<pos:position pos:line="476" pos:column="30"/></name><operator pos:line="476" pos:column="30">.<pos:position pos:line="476" pos:column="31"/></operator><name pos:line="476" pos:column="31">range<pos:position pos:line="476" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="476" pos:column="38">total_expected_size<pos:position pos:line="476" pos:column="57"/></name><operator pos:line="476" pos:column="57">-<pos:position pos:line="476" pos:column="58"/></operator><literal type="number" pos:line="476" pos:column="58">1<pos:position pos:line="476" pos:column="59"/></literal></expr></argument>,
                  <argument><expr><name pos:line="477" pos:column="19">total_expected_size<pos:position pos:line="477" pos:column="38"/></name></expr></argument>)<pos:position pos:line="477" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="478" pos:column="8"/></block></then></if></elseif>
      <else pos:line="479" pos:column="7">else <block pos:line="479" pos:column="12">{
        <comment type="block" pos:line="480" pos:column="9">/* Range was selected and then we just pass the incoming range and
           append total size */</comment>
        <expr_stmt><expr><name><name pos:line="482" pos:column="9">conn<pos:position pos:line="482" pos:column="13"/></name><operator pos:line="482" pos:column="13">-&gt;<pos:position pos:line="482" pos:column="18"/></operator><name pos:line="482" pos:column="15">allocptr<pos:position pos:line="482" pos:column="23"/></name><operator pos:line="482" pos:column="23">.<pos:position pos:line="482" pos:column="24"/></operator><name pos:line="482" pos:column="24">rangeline<pos:position pos:line="482" pos:column="33"/></name></name> <operator pos:line="482" pos:column="34">=<pos:position pos:line="482" pos:column="35"/></operator>
          <call><name pos:line="483" pos:column="11">aprintf<pos:position pos:line="483" pos:column="18"/></name><argument_list pos:line="483" pos:column="18">(<argument><expr><literal type="string" pos:line="483" pos:column="19">"Content-Range: bytes %s/%"<pos:position pos:line="483" pos:column="46"/></literal> <name pos:line="483" pos:column="47">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="483" pos:column="69"/></name> <literal type="string" pos:line="483" pos:column="70">"\r\n"<pos:position pos:line="483" pos:column="76"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="484" pos:column="19">data<pos:position pos:line="484" pos:column="23"/></name><operator pos:line="484" pos:column="23">-&gt;<pos:position pos:line="484" pos:column="28"/></operator><name pos:line="484" pos:column="25">state<pos:position pos:line="484" pos:column="30"/></name><operator pos:line="484" pos:column="30">.<pos:position pos:line="484" pos:column="31"/></operator><name pos:line="484" pos:column="31">range<pos:position pos:line="484" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="484" pos:column="38">data<pos:position pos:line="484" pos:column="42"/></name><operator pos:line="484" pos:column="42">-&gt;<pos:position pos:line="484" pos:column="47"/></operator><name pos:line="484" pos:column="44">state<pos:position pos:line="484" pos:column="49"/></name><operator pos:line="484" pos:column="49">.<pos:position pos:line="484" pos:column="50"/></operator><name pos:line="484" pos:column="50">infilesize<pos:position pos:line="484" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="484" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="485" pos:column="8"/></block></else></if>
      <if pos:line="486" pos:column="7">if<condition pos:line="486" pos:column="9">(<expr><operator pos:line="486" pos:column="10">!<pos:position pos:line="486" pos:column="11"/></operator><name><name pos:line="486" pos:column="11">conn<pos:position pos:line="486" pos:column="15"/></name><operator pos:line="486" pos:column="15">-&gt;<pos:position pos:line="486" pos:column="20"/></operator><name pos:line="486" pos:column="17">allocptr<pos:position pos:line="486" pos:column="25"/></name><operator pos:line="486" pos:column="25">.<pos:position pos:line="486" pos:column="26"/></operator><name pos:line="486" pos:column="26">rangeline<pos:position pos:line="486" pos:column="35"/></name></name></expr>)<pos:position pos:line="486" pos:column="36"/></condition><then pos:line="486" pos:column="36">
        <block type="pseudo"><return pos:line="487" pos:column="9">return <expr><name pos:line="487" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="487" pos:column="35"/></name></expr>;<pos:position pos:line="487" pos:column="36"/></return></block></then></if>
    }<pos:position pos:line="488" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="489" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="491" pos:column="3">/* Use 1.1 unless the user specifically asked for 1.0 or the server only
     supports 1.0 */</comment>
  <expr_stmt><expr><name pos:line="493" pos:column="3">httpstring<pos:position pos:line="493" pos:column="13"/></name><operator pos:line="493" pos:column="13">=<pos:position pos:line="493" pos:column="14"/></operator> <ternary><condition><expr><call><name pos:line="493" pos:column="15">use_http_1_1plus<pos:position pos:line="493" pos:column="31"/></name><argument_list pos:line="493" pos:column="31">(<argument><expr><name pos:line="493" pos:column="32">data<pos:position pos:line="493" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="493" pos:column="38">conn<pos:position pos:line="493" pos:column="42"/></name></expr></argument>)<pos:position pos:line="493" pos:column="43"/></argument_list></call></expr>?<pos:position pos:line="493" pos:column="44"/></condition><then><expr><literal type="string" pos:line="493" pos:column="44">"1.1"<pos:position pos:line="493" pos:column="49"/></literal></expr></then><else pos:line="493" pos:column="49">:<expr><literal type="string" pos:line="493" pos:column="50">"1.0"<pos:position pos:line="493" pos:column="55"/></literal></expr></else></ternary></expr>;<pos:position pos:line="493" pos:column="56"/></expr_stmt>

  <comment type="block" pos:line="495" pos:column="3">/* initialize a dynamic send-buffer */</comment>
  <expr_stmt><expr><name pos:line="496" pos:column="3">req_buffer<pos:position pos:line="496" pos:column="13"/></name> <operator pos:line="496" pos:column="14">=<pos:position pos:line="496" pos:column="15"/></operator> <call><name pos:line="496" pos:column="16">Curl_add_buffer_init<pos:position pos:line="496" pos:column="36"/></name><argument_list pos:line="496" pos:column="36">()<pos:position pos:line="496" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="39"/></expr_stmt>

  <if pos:line="498" pos:column="3">if<condition pos:line="498" pos:column="5">(<expr><operator pos:line="498" pos:column="6">!<pos:position pos:line="498" pos:column="7"/></operator><name pos:line="498" pos:column="7">req_buffer<pos:position pos:line="498" pos:column="17"/></name></expr>)<pos:position pos:line="498" pos:column="18"/></condition><then pos:line="498" pos:column="18">
    <block type="pseudo"><return pos:line="499" pos:column="5">return <expr><name pos:line="499" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="499" pos:column="31"/></name></expr>;<pos:position pos:line="499" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="501" pos:column="3">/* add the main request stuff */</comment>
  <comment type="block" pos:line="502" pos:column="3">/* GET/HEAD/POST/PUT */</comment>
  <expr_stmt><expr><name pos:line="503" pos:column="3">result<pos:position pos:line="503" pos:column="9"/></name> <operator pos:line="503" pos:column="10">=<pos:position pos:line="503" pos:column="11"/></operator> <call><name pos:line="503" pos:column="12">Curl_add_bufferf<pos:position pos:line="503" pos:column="28"/></name><argument_list pos:line="503" pos:column="28">(<argument><expr><name pos:line="503" pos:column="29">req_buffer<pos:position pos:line="503" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="503" pos:column="41">"%s "<pos:position pos:line="503" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="503" pos:column="48">request<pos:position pos:line="503" pos:column="55"/></name></expr></argument>)<pos:position pos:line="503" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="503" pos:column="57"/></expr_stmt>
  <if pos:line="504" pos:column="3">if<condition pos:line="504" pos:column="5">(<expr><name pos:line="504" pos:column="6">result<pos:position pos:line="504" pos:column="12"/></name></expr>)<pos:position pos:line="504" pos:column="13"/></condition><then pos:line="504" pos:column="13">
    <block type="pseudo"><return pos:line="505" pos:column="5">return <expr><name pos:line="505" pos:column="12">result<pos:position pos:line="505" pos:column="18"/></name></expr>;<pos:position pos:line="505" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="507" pos:column="3">/* url */</comment>
  <if pos:line="508" pos:column="3">if<condition pos:line="508" pos:column="5">(<expr><name pos:line="508" pos:column="6">paste_ftp_userpwd<pos:position pos:line="508" pos:column="23"/></name></expr>)<pos:position pos:line="508" pos:column="24"/></condition><then pos:line="508" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="509" pos:column="5">result<pos:position pos:line="509" pos:column="11"/></name> <operator pos:line="509" pos:column="12">=<pos:position pos:line="509" pos:column="13"/></operator> <call><name pos:line="509" pos:column="14">Curl_add_bufferf<pos:position pos:line="509" pos:column="30"/></name><argument_list pos:line="509" pos:column="30">(<argument><expr><name pos:line="509" pos:column="31">req_buffer<pos:position pos:line="509" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="509" pos:column="43">"ftp://%s:%s@%s"<pos:position pos:line="509" pos:column="59"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="510" pos:column="31">conn<pos:position pos:line="510" pos:column="35"/></name><operator pos:line="510" pos:column="35">-&gt;<pos:position pos:line="510" pos:column="40"/></operator><name pos:line="510" pos:column="37">user<pos:position pos:line="510" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="510" pos:column="43">conn<pos:position pos:line="510" pos:column="47"/></name><operator pos:line="510" pos:column="47">-&gt;<pos:position pos:line="510" pos:column="52"/></operator><name pos:line="510" pos:column="49">passwd<pos:position pos:line="510" pos:column="55"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="511" pos:column="31">ppath<pos:position pos:line="511" pos:column="36"/></name> <operator pos:line="511" pos:column="37">+<pos:position pos:line="511" pos:column="38"/></operator> <sizeof pos:line="511" pos:column="39">sizeof<argument_list pos:line="511" pos:column="45">(<argument><expr><literal type="string" pos:line="511" pos:column="46">"ftp://"<pos:position pos:line="511" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="511" pos:column="55"/></argument_list></sizeof> <operator pos:line="511" pos:column="56">-<pos:position pos:line="511" pos:column="57"/></operator> <literal type="number" pos:line="511" pos:column="58">1<pos:position pos:line="511" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="511" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="511" pos:column="61"/></expr_stmt></block></then>
  <else pos:line="512" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="513" pos:column="5">result<pos:position pos:line="513" pos:column="11"/></name> <operator pos:line="513" pos:column="12">=<pos:position pos:line="513" pos:column="13"/></operator> <call><name pos:line="513" pos:column="14">Curl_add_buffer<pos:position pos:line="513" pos:column="29"/></name><argument_list pos:line="513" pos:column="29">(<argument><expr><name pos:line="513" pos:column="30">req_buffer<pos:position pos:line="513" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="513" pos:column="42">ppath<pos:position pos:line="513" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="513" pos:column="49">strlen<pos:position pos:line="513" pos:column="55"/></name><argument_list pos:line="513" pos:column="55">(<argument><expr><name pos:line="513" pos:column="56">ppath<pos:position pos:line="513" pos:column="61"/></name></expr></argument>)<pos:position pos:line="513" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="513" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="64"/></expr_stmt></block></else></if>
  <if pos:line="514" pos:column="3">if<condition pos:line="514" pos:column="5">(<expr><name pos:line="514" pos:column="6">result<pos:position pos:line="514" pos:column="12"/></name></expr>)<pos:position pos:line="514" pos:column="13"/></condition><then pos:line="514" pos:column="13">
    <block type="pseudo"><return pos:line="515" pos:column="5">return <expr><name pos:line="515" pos:column="12">result<pos:position pos:line="515" pos:column="18"/></name></expr>;<pos:position pos:line="515" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="517" pos:column="3">result<pos:position pos:line="517" pos:column="9"/></name> <operator pos:line="517" pos:column="10">=<pos:position pos:line="517" pos:column="11"/></operator>
    <call><name pos:line="518" pos:column="5">Curl_add_bufferf<pos:position pos:line="518" pos:column="21"/></name><argument_list pos:line="518" pos:column="21">(<argument><expr><name pos:line="518" pos:column="22">req_buffer<pos:position pos:line="518" pos:column="32"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="519" pos:column="22">"%s"<pos:position pos:line="519" pos:column="26"/></literal> <comment type="block" pos:line="519" pos:column="27">/* ftp typecode (;type=x) */</comment>
                     <literal type="string" pos:line="520" pos:column="22">" HTTP/%s\r\n"<pos:position pos:line="520" pos:column="36"/></literal> <comment type="block" pos:line="520" pos:column="37">/* HTTP version */</comment>
                     <literal type="string" pos:line="521" pos:column="22">"%s"<pos:position pos:line="521" pos:column="26"/></literal> <comment type="block" pos:line="521" pos:column="27">/* proxyuserpwd */</comment>
                     <literal type="string" pos:line="522" pos:column="22">"%s"<pos:position pos:line="522" pos:column="26"/></literal> <comment type="block" pos:line="522" pos:column="27">/* userpwd */</comment>
                     <literal type="string" pos:line="523" pos:column="22">"%s"<pos:position pos:line="523" pos:column="26"/></literal> <comment type="block" pos:line="523" pos:column="27">/* range */</comment>
                     <literal type="string" pos:line="524" pos:column="22">"%s"<pos:position pos:line="524" pos:column="26"/></literal> <comment type="block" pos:line="524" pos:column="27">/* user agent */</comment>
                     <literal type="string" pos:line="525" pos:column="22">"%s"<pos:position pos:line="525" pos:column="26"/></literal> <comment type="block" pos:line="525" pos:column="27">/* host */</comment>
                     <literal type="string" pos:line="526" pos:column="22">"%s"<pos:position pos:line="526" pos:column="26"/></literal> <comment type="block" pos:line="526" pos:column="27">/* accept */</comment>
                     <literal type="string" pos:line="527" pos:column="22">"%s"<pos:position pos:line="527" pos:column="26"/></literal> <comment type="block" pos:line="527" pos:column="27">/* TE: */</comment>
                     <literal type="string" pos:line="528" pos:column="22">"%s"<pos:position pos:line="528" pos:column="26"/></literal> <comment type="block" pos:line="528" pos:column="27">/* accept-encoding */</comment>
                     <literal type="string" pos:line="529" pos:column="22">"%s"<pos:position pos:line="529" pos:column="26"/></literal> <comment type="block" pos:line="529" pos:column="27">/* referer */</comment>
                     <literal type="string" pos:line="530" pos:column="22">"%s"<pos:position pos:line="530" pos:column="26"/></literal> <comment type="block" pos:line="530" pos:column="27">/* Proxy-Connection */</comment>
                     <literal type="string" pos:line="531" pos:column="22">"%s"<pos:position pos:line="531" pos:column="26"/></literal></expr></argument>,<comment type="block" pos:line="531" pos:column="27">/* transfer-encoding */</comment>

                     <argument><expr><name pos:line="533" pos:column="22">ftp_typecode<pos:position pos:line="533" pos:column="34"/></name></expr></argument>,
                     <argument><expr><name pos:line="534" pos:column="22">httpstring<pos:position pos:line="534" pos:column="32"/></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="535" pos:column="22">conn<pos:position pos:line="535" pos:column="26"/></name><operator pos:line="535" pos:column="26">-&gt;<pos:position pos:line="535" pos:column="31"/></operator><name pos:line="535" pos:column="28">allocptr<pos:position pos:line="535" pos:column="36"/></name><operator pos:line="535" pos:column="36">.<pos:position pos:line="535" pos:column="37"/></operator><name pos:line="535" pos:column="37">proxyuserpwd<pos:position pos:line="535" pos:column="49"/></name></name></expr>?<pos:position pos:line="535" pos:column="50"/></condition><then pos:line="535" pos:column="50">
                     <expr><name><name pos:line="536" pos:column="22">conn<pos:position pos:line="536" pos:column="26"/></name><operator pos:line="536" pos:column="26">-&gt;<pos:position pos:line="536" pos:column="31"/></operator><name pos:line="536" pos:column="28">allocptr<pos:position pos:line="536" pos:column="36"/></name><operator pos:line="536" pos:column="36">.<pos:position pos:line="536" pos:column="37"/></operator><name pos:line="536" pos:column="37">proxyuserpwd<pos:position pos:line="536" pos:column="49"/></name></name></expr></then><else pos:line="536" pos:column="49">:<expr><literal type="string" pos:line="536" pos:column="50">""<pos:position pos:line="536" pos:column="52"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="537" pos:column="22">conn<pos:position pos:line="537" pos:column="26"/></name><operator pos:line="537" pos:column="26">-&gt;<pos:position pos:line="537" pos:column="31"/></operator><name pos:line="537" pos:column="28">allocptr<pos:position pos:line="537" pos:column="36"/></name><operator pos:line="537" pos:column="36">.<pos:position pos:line="537" pos:column="37"/></operator><name pos:line="537" pos:column="37">userpwd<pos:position pos:line="537" pos:column="44"/></name></name></expr>?<pos:position pos:line="537" pos:column="45"/></condition><then><expr><name><name pos:line="537" pos:column="45">conn<pos:position pos:line="537" pos:column="49"/></name><operator pos:line="537" pos:column="49">-&gt;<pos:position pos:line="537" pos:column="54"/></operator><name pos:line="537" pos:column="51">allocptr<pos:position pos:line="537" pos:column="59"/></name><operator pos:line="537" pos:column="59">.<pos:position pos:line="537" pos:column="60"/></operator><name pos:line="537" pos:column="60">userpwd<pos:position pos:line="537" pos:column="67"/></name></name></expr></then><else pos:line="537" pos:column="67">:<expr><literal type="string" pos:line="537" pos:column="68">""<pos:position pos:line="537" pos:column="70"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><operator pos:line="538" pos:column="22">(<pos:position pos:line="538" pos:column="23"/></operator><name><name pos:line="538" pos:column="23">data<pos:position pos:line="538" pos:column="27"/></name><operator pos:line="538" pos:column="27">-&gt;<pos:position pos:line="538" pos:column="32"/></operator><name pos:line="538" pos:column="29">state<pos:position pos:line="538" pos:column="34"/></name><operator pos:line="538" pos:column="34">.<pos:position pos:line="538" pos:column="35"/></operator><name pos:line="538" pos:column="35">use_range<pos:position pos:line="538" pos:column="44"/></name></name> <operator pos:line="538" pos:column="45">&amp;&amp;<pos:position pos:line="538" pos:column="55"/></operator> <name><name pos:line="538" pos:column="48">conn<pos:position pos:line="538" pos:column="52"/></name><operator pos:line="538" pos:column="52">-&gt;<pos:position pos:line="538" pos:column="57"/></operator><name pos:line="538" pos:column="54">allocptr<pos:position pos:line="538" pos:column="62"/></name><operator pos:line="538" pos:column="62">.<pos:position pos:line="538" pos:column="63"/></operator><name pos:line="538" pos:column="63">rangeline<pos:position pos:line="538" pos:column="72"/></name></name><operator pos:line="538" pos:column="72">)<pos:position pos:line="538" pos:column="73"/></operator></expr>?<pos:position pos:line="538" pos:column="74"/></condition><then pos:line="538" pos:column="74">
                     <expr><name><name pos:line="539" pos:column="22">conn<pos:position pos:line="539" pos:column="26"/></name><operator pos:line="539" pos:column="26">-&gt;<pos:position pos:line="539" pos:column="31"/></operator><name pos:line="539" pos:column="28">allocptr<pos:position pos:line="539" pos:column="36"/></name><operator pos:line="539" pos:column="36">.<pos:position pos:line="539" pos:column="37"/></operator><name pos:line="539" pos:column="37">rangeline<pos:position pos:line="539" pos:column="46"/></name></name></expr></then><else pos:line="539" pos:column="46">:<expr><literal type="string" pos:line="539" pos:column="47">""<pos:position pos:line="539" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><operator pos:line="540" pos:column="22">(<pos:position pos:line="540" pos:column="23"/></operator><name><name pos:line="540" pos:column="23">data<pos:position pos:line="540" pos:column="27"/></name><operator pos:line="540" pos:column="27">-&gt;<pos:position pos:line="540" pos:column="32"/></operator><name pos:line="540" pos:column="29">set<pos:position pos:line="540" pos:column="32"/></name><operator pos:line="540" pos:column="32">.<pos:position pos:line="540" pos:column="33"/></operator><name pos:line="540" pos:column="33">str<pos:position pos:line="540" pos:column="36"/></name><index pos:line="540" pos:column="36">[<expr><name pos:line="540" pos:column="37">STRING_USERAGENT<pos:position pos:line="540" pos:column="53"/></name></expr>]<pos:position pos:line="540" pos:column="54"/></index></name> <operator pos:line="540" pos:column="55">&amp;&amp;<pos:position pos:line="540" pos:column="65"/></operator>
                      <operator pos:line="541" pos:column="23">*<pos:position pos:line="541" pos:column="24"/></operator><name><name pos:line="541" pos:column="24">data<pos:position pos:line="541" pos:column="28"/></name><operator pos:line="541" pos:column="28">-&gt;<pos:position pos:line="541" pos:column="33"/></operator><name pos:line="541" pos:column="30">set<pos:position pos:line="541" pos:column="33"/></name><operator pos:line="541" pos:column="33">.<pos:position pos:line="541" pos:column="34"/></operator><name pos:line="541" pos:column="34">str<pos:position pos:line="541" pos:column="37"/></name><index pos:line="541" pos:column="37">[<expr><name pos:line="541" pos:column="38">STRING_USERAGENT<pos:position pos:line="541" pos:column="54"/></name></expr>]<pos:position pos:line="541" pos:column="55"/></index></name> <operator pos:line="541" pos:column="56">&amp;&amp;<pos:position pos:line="541" pos:column="66"/></operator>
                      <name><name pos:line="542" pos:column="23">conn<pos:position pos:line="542" pos:column="27"/></name><operator pos:line="542" pos:column="27">-&gt;<pos:position pos:line="542" pos:column="32"/></operator><name pos:line="542" pos:column="29">allocptr<pos:position pos:line="542" pos:column="37"/></name><operator pos:line="542" pos:column="37">.<pos:position pos:line="542" pos:column="38"/></operator><name pos:line="542" pos:column="38">uagent<pos:position pos:line="542" pos:column="44"/></name></name><operator pos:line="542" pos:column="44">)<pos:position pos:line="542" pos:column="45"/></operator></expr>?<pos:position pos:line="542" pos:column="46"/></condition><then pos:line="542" pos:column="46">
                     <expr><name><name pos:line="543" pos:column="22">conn<pos:position pos:line="543" pos:column="26"/></name><operator pos:line="543" pos:column="26">-&gt;<pos:position pos:line="543" pos:column="31"/></operator><name pos:line="543" pos:column="28">allocptr<pos:position pos:line="543" pos:column="36"/></name><operator pos:line="543" pos:column="36">.<pos:position pos:line="543" pos:column="37"/></operator><name pos:line="543" pos:column="37">uagent<pos:position pos:line="543" pos:column="43"/></name></name></expr></then><else pos:line="543" pos:column="43">:<expr><literal type="string" pos:line="543" pos:column="44">""<pos:position pos:line="543" pos:column="46"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><operator pos:line="544" pos:column="22">(<pos:position pos:line="544" pos:column="23"/></operator><ternary><condition><expr><name><name pos:line="544" pos:column="23">conn<pos:position pos:line="544" pos:column="27"/></name><operator pos:line="544" pos:column="27">-&gt;<pos:position pos:line="544" pos:column="32"/></operator><name pos:line="544" pos:column="29">allocptr<pos:position pos:line="544" pos:column="37"/></name><operator pos:line="544" pos:column="37">.<pos:position pos:line="544" pos:column="38"/></operator><name pos:line="544" pos:column="38">host<pos:position pos:line="544" pos:column="42"/></name></name></expr>?<pos:position pos:line="544" pos:column="43"/></condition><then><expr><name><name pos:line="544" pos:column="43">conn<pos:position pos:line="544" pos:column="47"/></name><operator pos:line="544" pos:column="47">-&gt;<pos:position pos:line="544" pos:column="52"/></operator><name pos:line="544" pos:column="49">allocptr<pos:position pos:line="544" pos:column="57"/></name><operator pos:line="544" pos:column="57">.<pos:position pos:line="544" pos:column="58"/></operator><name pos:line="544" pos:column="58">host<pos:position pos:line="544" pos:column="62"/></name></name></expr></then><else pos:line="544" pos:column="62">:<expr><literal type="string" pos:line="544" pos:column="63">""<pos:position pos:line="544" pos:column="65"/></literal></expr></else></ternary><operator pos:line="544" pos:column="65">)<pos:position pos:line="544" pos:column="66"/></operator></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="545" pos:column="22">http<pos:position pos:line="545" pos:column="26"/></name><operator pos:line="545" pos:column="26">-&gt;<pos:position pos:line="545" pos:column="31"/></operator><name pos:line="545" pos:column="28">p_accept<pos:position pos:line="545" pos:column="36"/></name></name></expr>?<pos:position pos:line="545" pos:column="37"/></condition><then><expr><name><name pos:line="545" pos:column="37">http<pos:position pos:line="545" pos:column="41"/></name><operator pos:line="545" pos:column="41">-&gt;<pos:position pos:line="545" pos:column="46"/></operator><name pos:line="545" pos:column="43">p_accept<pos:position pos:line="545" pos:column="51"/></name></name></expr></then><else pos:line="545" pos:column="51">:<expr><literal type="string" pos:line="545" pos:column="52">""<pos:position pos:line="545" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="546" pos:column="22">conn<pos:position pos:line="546" pos:column="26"/></name><operator pos:line="546" pos:column="26">-&gt;<pos:position pos:line="546" pos:column="31"/></operator><name pos:line="546" pos:column="28">allocptr<pos:position pos:line="546" pos:column="36"/></name><operator pos:line="546" pos:column="36">.<pos:position pos:line="546" pos:column="37"/></operator><name pos:line="546" pos:column="37">te<pos:position pos:line="546" pos:column="39"/></name></name></expr>?<pos:position pos:line="546" pos:column="40"/></condition><then><expr><name><name pos:line="546" pos:column="40">conn<pos:position pos:line="546" pos:column="44"/></name><operator pos:line="546" pos:column="44">-&gt;<pos:position pos:line="546" pos:column="49"/></operator><name pos:line="546" pos:column="46">allocptr<pos:position pos:line="546" pos:column="54"/></name><operator pos:line="546" pos:column="54">.<pos:position pos:line="546" pos:column="55"/></operator><name pos:line="546" pos:column="55">te<pos:position pos:line="546" pos:column="57"/></name></name></expr></then><else pos:line="546" pos:column="57">:<expr><literal type="string" pos:line="546" pos:column="58">""<pos:position pos:line="546" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><operator pos:line="547" pos:column="22">(<pos:position pos:line="547" pos:column="23"/></operator><name><name pos:line="547" pos:column="23">data<pos:position pos:line="547" pos:column="27"/></name><operator pos:line="547" pos:column="27">-&gt;<pos:position pos:line="547" pos:column="32"/></operator><name pos:line="547" pos:column="29">set<pos:position pos:line="547" pos:column="32"/></name><operator pos:line="547" pos:column="32">.<pos:position pos:line="547" pos:column="33"/></operator><name pos:line="547" pos:column="33">str<pos:position pos:line="547" pos:column="36"/></name><index pos:line="547" pos:column="36">[<expr><name pos:line="547" pos:column="37">STRING_ENCODING<pos:position pos:line="547" pos:column="52"/></name></expr>]<pos:position pos:line="547" pos:column="53"/></index></name> <operator pos:line="547" pos:column="54">&amp;&amp;<pos:position pos:line="547" pos:column="64"/></operator>
                      <operator pos:line="548" pos:column="23">*<pos:position pos:line="548" pos:column="24"/></operator><name><name pos:line="548" pos:column="24">data<pos:position pos:line="548" pos:column="28"/></name><operator pos:line="548" pos:column="28">-&gt;<pos:position pos:line="548" pos:column="33"/></operator><name pos:line="548" pos:column="30">set<pos:position pos:line="548" pos:column="33"/></name><operator pos:line="548" pos:column="33">.<pos:position pos:line="548" pos:column="34"/></operator><name pos:line="548" pos:column="34">str<pos:position pos:line="548" pos:column="37"/></name><index pos:line="548" pos:column="37">[<expr><name pos:line="548" pos:column="38">STRING_ENCODING<pos:position pos:line="548" pos:column="53"/></name></expr>]<pos:position pos:line="548" pos:column="54"/></index></name> <operator pos:line="548" pos:column="55">&amp;&amp;<pos:position pos:line="548" pos:column="65"/></operator>
                      <name><name pos:line="549" pos:column="23">conn<pos:position pos:line="549" pos:column="27"/></name><operator pos:line="549" pos:column="27">-&gt;<pos:position pos:line="549" pos:column="32"/></operator><name pos:line="549" pos:column="29">allocptr<pos:position pos:line="549" pos:column="37"/></name><operator pos:line="549" pos:column="37">.<pos:position pos:line="549" pos:column="38"/></operator><name pos:line="549" pos:column="38">accept_encoding<pos:position pos:line="549" pos:column="53"/></name></name><operator pos:line="549" pos:column="53">)<pos:position pos:line="549" pos:column="54"/></operator></expr>?<pos:position pos:line="549" pos:column="55"/></condition><then pos:line="549" pos:column="55">
                     <expr><name><name pos:line="550" pos:column="22">conn<pos:position pos:line="550" pos:column="26"/></name><operator pos:line="550" pos:column="26">-&gt;<pos:position pos:line="550" pos:column="31"/></operator><name pos:line="550" pos:column="28">allocptr<pos:position pos:line="550" pos:column="36"/></name><operator pos:line="550" pos:column="36">.<pos:position pos:line="550" pos:column="37"/></operator><name pos:line="550" pos:column="37">accept_encoding<pos:position pos:line="550" pos:column="52"/></name></name></expr></then><else pos:line="550" pos:column="52">:<expr><literal type="string" pos:line="550" pos:column="53">""<pos:position pos:line="550" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><operator pos:line="551" pos:column="22">(<pos:position pos:line="551" pos:column="23"/></operator><name><name pos:line="551" pos:column="23">data<pos:position pos:line="551" pos:column="27"/></name><operator pos:line="551" pos:column="27">-&gt;<pos:position pos:line="551" pos:column="32"/></operator><name pos:line="551" pos:column="29">change<pos:position pos:line="551" pos:column="35"/></name><operator pos:line="551" pos:column="35">.<pos:position pos:line="551" pos:column="36"/></operator><name pos:line="551" pos:column="36">referer<pos:position pos:line="551" pos:column="43"/></name></name> <operator pos:line="551" pos:column="44">&amp;&amp;<pos:position pos:line="551" pos:column="54"/></operator> <name><name pos:line="551" pos:column="47">conn<pos:position pos:line="551" pos:column="51"/></name><operator pos:line="551" pos:column="51">-&gt;<pos:position pos:line="551" pos:column="56"/></operator><name pos:line="551" pos:column="53">allocptr<pos:position pos:line="551" pos:column="61"/></name><operator pos:line="551" pos:column="61">.<pos:position pos:line="551" pos:column="62"/></operator><name pos:line="551" pos:column="62">ref<pos:position pos:line="551" pos:column="65"/></name></name><operator pos:line="551" pos:column="65">)<pos:position pos:line="551" pos:column="66"/></operator></expr>?<pos:position pos:line="551" pos:column="67"/></condition><then pos:line="551" pos:column="67">
                     <expr><name><name pos:line="552" pos:column="22">conn<pos:position pos:line="552" pos:column="26"/></name><operator pos:line="552" pos:column="26">-&gt;<pos:position pos:line="552" pos:column="31"/></operator><name pos:line="552" pos:column="28">allocptr<pos:position pos:line="552" pos:column="36"/></name><operator pos:line="552" pos:column="36">.<pos:position pos:line="552" pos:column="37"/></operator><name pos:line="552" pos:column="37">ref<pos:position pos:line="552" pos:column="40"/></name></name></expr></then><else pos:line="552" pos:column="40">:<expr><literal type="string" pos:line="552" pos:column="41">""<pos:position pos:line="552" pos:column="43"/></literal></expr></else></ternary></expr></argument> <comment type="block" pos:line="552" pos:column="44">/* Referer: &lt;data&gt; */</comment>,
                     <argument><expr><ternary><condition><expr><operator pos:line="553" pos:column="22">(<pos:position pos:line="553" pos:column="23"/></operator><name><name pos:line="553" pos:column="23">conn<pos:position pos:line="553" pos:column="27"/></name><operator pos:line="553" pos:column="27">-&gt;<pos:position pos:line="553" pos:column="32"/></operator><name pos:line="553" pos:column="29">bits<pos:position pos:line="553" pos:column="33"/></name><operator pos:line="553" pos:column="33">.<pos:position pos:line="553" pos:column="34"/></operator><name pos:line="553" pos:column="34">httpproxy<pos:position pos:line="553" pos:column="43"/></name></name> <operator pos:line="553" pos:column="44">&amp;&amp;<pos:position pos:line="553" pos:column="54"/></operator>
                      <operator pos:line="554" pos:column="23">!<pos:position pos:line="554" pos:column="24"/></operator><name><name pos:line="554" pos:column="24">conn<pos:position pos:line="554" pos:column="28"/></name><operator pos:line="554" pos:column="28">-&gt;<pos:position pos:line="554" pos:column="33"/></operator><name pos:line="554" pos:column="30">bits<pos:position pos:line="554" pos:column="34"/></name><operator pos:line="554" pos:column="34">.<pos:position pos:line="554" pos:column="35"/></operator><name pos:line="554" pos:column="35">tunnel_proxy<pos:position pos:line="554" pos:column="47"/></name></name> <operator pos:line="554" pos:column="48">&amp;&amp;<pos:position pos:line="554" pos:column="58"/></operator>
                      <operator pos:line="555" pos:column="23">!<pos:position pos:line="555" pos:column="24"/></operator><call><name pos:line="555" pos:column="24">Curl_checkProxyheaders<pos:position pos:line="555" pos:column="46"/></name><argument_list pos:line="555" pos:column="46">(<argument><expr><name pos:line="555" pos:column="47">conn<pos:position pos:line="555" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="555" pos:column="53">"Proxy-Connection:"<pos:position pos:line="555" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="555" pos:column="73"/></argument_list></call><operator pos:line="555" pos:column="73">)<pos:position pos:line="555" pos:column="74"/></operator></expr>?<pos:position pos:line="555" pos:column="75"/></condition><then pos:line="555" pos:column="75">
                     <expr><literal type="string" pos:line="556" pos:column="22">"Proxy-Connection: Keep-Alive\r\n"<pos:position pos:line="556" pos:column="56"/></literal></expr></then><else pos:line="556" pos:column="56">:<expr><literal type="string" pos:line="556" pos:column="57">""<pos:position pos:line="556" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><name pos:line="557" pos:column="22">te<pos:position pos:line="557" pos:column="24"/></name></expr></argument>
      )<pos:position pos:line="558" pos:column="8"/></argument_list></call></expr>;<pos:position pos:line="558" pos:column="9"/></expr_stmt>

  <comment type="block" pos:line="560" pos:column="3">/*
   * Free userpwd for Negotiate/NTLM. Cannot reuse as it is associated with
   * the connection and shouldn't be repeated over it either.
   */</comment>
  <switch pos:line="564" pos:column="3">switch <condition pos:line="564" pos:column="10">(<expr><name><name pos:line="564" pos:column="11">data<pos:position pos:line="564" pos:column="15"/></name><operator pos:line="564" pos:column="15">-&gt;<pos:position pos:line="564" pos:column="20"/></operator><name pos:line="564" pos:column="17">state<pos:position pos:line="564" pos:column="22"/></name><operator pos:line="564" pos:column="22">.<pos:position pos:line="564" pos:column="23"/></operator><name pos:line="564" pos:column="23">authhost<pos:position pos:line="564" pos:column="31"/></name><operator pos:line="564" pos:column="31">.<pos:position pos:line="564" pos:column="32"/></operator><name pos:line="564" pos:column="32">picked<pos:position pos:line="564" pos:column="38"/></name></name></expr>)<pos:position pos:line="564" pos:column="39"/></condition> <block pos:line="564" pos:column="40">{
  <case pos:line="565" pos:column="3">case <expr><name pos:line="565" pos:column="8">CURLAUTH_NEGOTIATE<pos:position pos:line="565" pos:column="26"/></name></expr>:<pos:position pos:line="565" pos:column="27"/></case>
  <case pos:line="566" pos:column="3">case <expr><name pos:line="566" pos:column="8">CURLAUTH_NTLM<pos:position pos:line="566" pos:column="21"/></name></expr>:<pos:position pos:line="566" pos:column="22"/></case>
  <case pos:line="567" pos:column="3">case <expr><name pos:line="567" pos:column="8">CURLAUTH_NTLM_WB<pos:position pos:line="567" pos:column="24"/></name></expr>:<pos:position pos:line="567" pos:column="25"/></case>
    <expr_stmt><expr><call><name pos:line="568" pos:column="5">Curl_safefree<pos:position pos:line="568" pos:column="18"/></name><argument_list pos:line="568" pos:column="18">(<argument><expr><name><name pos:line="568" pos:column="19">conn<pos:position pos:line="568" pos:column="23"/></name><operator pos:line="568" pos:column="23">-&gt;<pos:position pos:line="568" pos:column="28"/></operator><name pos:line="568" pos:column="25">allocptr<pos:position pos:line="568" pos:column="33"/></name><operator pos:line="568" pos:column="33">.<pos:position pos:line="568" pos:column="34"/></operator><name pos:line="568" pos:column="34">userpwd<pos:position pos:line="568" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="568" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="43"/></expr_stmt>
    <break pos:line="569" pos:column="5">break;<pos:position pos:line="569" pos:column="11"/></break>
  }<pos:position pos:line="570" pos:column="4"/></block></switch>

  <comment type="block" pos:line="572" pos:column="3">/*
   * Same for proxyuserpwd
   */</comment>
  <switch pos:line="575" pos:column="3">switch <condition pos:line="575" pos:column="10">(<expr><name><name pos:line="575" pos:column="11">data<pos:position pos:line="575" pos:column="15"/></name><operator pos:line="575" pos:column="15">-&gt;<pos:position pos:line="575" pos:column="20"/></operator><name pos:line="575" pos:column="17">state<pos:position pos:line="575" pos:column="22"/></name><operator pos:line="575" pos:column="22">.<pos:position pos:line="575" pos:column="23"/></operator><name pos:line="575" pos:column="23">authproxy<pos:position pos:line="575" pos:column="32"/></name><operator pos:line="575" pos:column="32">.<pos:position pos:line="575" pos:column="33"/></operator><name pos:line="575" pos:column="33">picked<pos:position pos:line="575" pos:column="39"/></name></name></expr>)<pos:position pos:line="575" pos:column="40"/></condition> <block pos:line="575" pos:column="41">{
  <case pos:line="576" pos:column="3">case <expr><name pos:line="576" pos:column="8">CURLAUTH_NEGOTIATE<pos:position pos:line="576" pos:column="26"/></name></expr>:<pos:position pos:line="576" pos:column="27"/></case>
  <case pos:line="577" pos:column="3">case <expr><name pos:line="577" pos:column="8">CURLAUTH_NTLM<pos:position pos:line="577" pos:column="21"/></name></expr>:<pos:position pos:line="577" pos:column="22"/></case>
  <case pos:line="578" pos:column="3">case <expr><name pos:line="578" pos:column="8">CURLAUTH_NTLM_WB<pos:position pos:line="578" pos:column="24"/></name></expr>:<pos:position pos:line="578" pos:column="25"/></case>
    <expr_stmt><expr><call><name pos:line="579" pos:column="5">Curl_safefree<pos:position pos:line="579" pos:column="18"/></name><argument_list pos:line="579" pos:column="18">(<argument><expr><name><name pos:line="579" pos:column="19">conn<pos:position pos:line="579" pos:column="23"/></name><operator pos:line="579" pos:column="23">-&gt;<pos:position pos:line="579" pos:column="28"/></operator><name pos:line="579" pos:column="25">allocptr<pos:position pos:line="579" pos:column="33"/></name><operator pos:line="579" pos:column="33">.<pos:position pos:line="579" pos:column="34"/></operator><name pos:line="579" pos:column="34">proxyuserpwd<pos:position pos:line="579" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="579" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="579" pos:column="48"/></expr_stmt>
    <break pos:line="580" pos:column="5">break;<pos:position pos:line="580" pos:column="11"/></break>
  }<pos:position pos:line="581" pos:column="4"/></block></switch>

  <if pos:line="583" pos:column="3">if<condition pos:line="583" pos:column="5">(<expr><name pos:line="583" pos:column="6">result<pos:position pos:line="583" pos:column="12"/></name></expr>)<pos:position pos:line="583" pos:column="13"/></condition><then pos:line="583" pos:column="13">
    <block type="pseudo"><return pos:line="584" pos:column="5">return <expr><name pos:line="584" pos:column="12">result<pos:position pos:line="584" pos:column="18"/></name></expr>;<pos:position pos:line="584" pos:column="19"/></return></block></then></if>

  <if pos:line="586" pos:column="3">if<condition pos:line="586" pos:column="5">(<expr><operator pos:line="586" pos:column="6">!<pos:position pos:line="586" pos:column="7"/></operator><operator pos:line="586" pos:column="7">(<pos:position pos:line="586" pos:column="8"/></operator><name><name pos:line="586" pos:column="8">conn<pos:position pos:line="586" pos:column="12"/></name><operator pos:line="586" pos:column="12">-&gt;<pos:position pos:line="586" pos:column="17"/></operator><name pos:line="586" pos:column="14">handler<pos:position pos:line="586" pos:column="21"/></name><operator pos:line="586" pos:column="21">-&gt;<pos:position pos:line="586" pos:column="26"/></operator><name pos:line="586" pos:column="23">flags<pos:position pos:line="586" pos:column="28"/></name></name><operator pos:line="586" pos:column="28">&amp;<pos:position pos:line="586" pos:column="33"/></operator><name pos:line="586" pos:column="29">PROTOPT_SSL<pos:position pos:line="586" pos:column="40"/></name><operator pos:line="586" pos:column="40">)<pos:position pos:line="586" pos:column="41"/></operator> <operator pos:line="586" pos:column="42">&amp;&amp;<pos:position pos:line="586" pos:column="52"/></operator>
     <name><name pos:line="587" pos:column="6">conn<pos:position pos:line="587" pos:column="10"/></name><operator pos:line="587" pos:column="10">-&gt;<pos:position pos:line="587" pos:column="15"/></operator><name pos:line="587" pos:column="12">httpversion<pos:position pos:line="587" pos:column="23"/></name></name> <operator pos:line="587" pos:column="24">!=<pos:position pos:line="587" pos:column="26"/></operator> <literal type="number" pos:line="587" pos:column="27">20<pos:position pos:line="587" pos:column="29"/></literal> <operator pos:line="587" pos:column="30">&amp;&amp;<pos:position pos:line="587" pos:column="40"/></operator>
     <operator pos:line="588" pos:column="6">(<pos:position pos:line="588" pos:column="7"/></operator><name><name pos:line="588" pos:column="7">data<pos:position pos:line="588" pos:column="11"/></name><operator pos:line="588" pos:column="11">-&gt;<pos:position pos:line="588" pos:column="16"/></operator><name pos:line="588" pos:column="13">set<pos:position pos:line="588" pos:column="16"/></name><operator pos:line="588" pos:column="16">.<pos:position pos:line="588" pos:column="17"/></operator><name pos:line="588" pos:column="17">httpversion<pos:position pos:line="588" pos:column="28"/></name></name> <operator pos:line="588" pos:column="29">==<pos:position pos:line="588" pos:column="31"/></operator> <name pos:line="588" pos:column="32">CURL_HTTP_VERSION_2_0<pos:position pos:line="588" pos:column="53"/></name><operator pos:line="588" pos:column="53">)<pos:position pos:line="588" pos:column="54"/></operator></expr>)<pos:position pos:line="588" pos:column="55"/></condition><then pos:line="588" pos:column="55"> <block pos:line="588" pos:column="56">{
    <comment type="block" pos:line="589" pos:column="5">/* append HTTP2 upgrade magic stuff to the HTTP request if it isn't done
       over SSL */</comment>
    <expr_stmt><expr><name pos:line="591" pos:column="5">result<pos:position pos:line="591" pos:column="11"/></name> <operator pos:line="591" pos:column="12">=<pos:position pos:line="591" pos:column="13"/></operator> <call><name pos:line="591" pos:column="14">Curl_http2_request_upgrade<pos:position pos:line="591" pos:column="40"/></name><argument_list pos:line="591" pos:column="40">(<argument><expr><name pos:line="591" pos:column="41">req_buffer<pos:position pos:line="591" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="591" pos:column="53">conn<pos:position pos:line="591" pos:column="57"/></name></expr></argument>)<pos:position pos:line="591" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="591" pos:column="59"/></expr_stmt>
    <if pos:line="592" pos:column="5">if<condition pos:line="592" pos:column="7">(<expr><name pos:line="592" pos:column="8">result<pos:position pos:line="592" pos:column="14"/></name></expr>)<pos:position pos:line="592" pos:column="15"/></condition><then pos:line="592" pos:column="15">
      <block type="pseudo"><return pos:line="593" pos:column="7">return <expr><name pos:line="593" pos:column="14">result<pos:position pos:line="593" pos:column="20"/></name></expr>;<pos:position pos:line="593" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="594" pos:column="4"/></block></then></if>

<cpp:if pos:line="596" pos:column="1">#<cpp:directive pos:line="596" pos:column="2">if<pos:position pos:line="596" pos:column="4"/></cpp:directive> <expr><operator pos:line="596" pos:column="5">!<pos:position pos:line="596" pos:column="6"/></operator><call><name pos:line="596" pos:column="6">defined<pos:position pos:line="596" pos:column="13"/></name><argument_list pos:line="596" pos:column="13">(<argument><expr><name pos:line="596" pos:column="14">CURL_DISABLE_COOKIES<pos:position pos:line="596" pos:column="34"/></name></expr></argument>)<pos:position pos:line="596" pos:column="35"/></argument_list></call></expr></cpp:if>
  <if pos:line="597" pos:column="3">if<condition pos:line="597" pos:column="5">(<expr><name><name pos:line="597" pos:column="6">data<pos:position pos:line="597" pos:column="10"/></name><operator pos:line="597" pos:column="10">-&gt;<pos:position pos:line="597" pos:column="15"/></operator><name pos:line="597" pos:column="12">cookies<pos:position pos:line="597" pos:column="19"/></name></name> <operator pos:line="597" pos:column="20">||<pos:position pos:line="597" pos:column="22"/></operator> <name pos:line="597" pos:column="23">addcookies<pos:position pos:line="597" pos:column="33"/></name></expr>)<pos:position pos:line="597" pos:column="34"/></condition><then pos:line="597" pos:column="34"> <block pos:line="597" pos:column="35">{
    <decl_stmt><decl><type><name><name pos:line="598" pos:column="5">struct<pos:position pos:line="598" pos:column="11"/></name> <name pos:line="598" pos:column="12">Cookie<pos:position pos:line="598" pos:column="18"/></name></name> <modifier pos:line="598" pos:column="19">*<pos:position pos:line="598" pos:column="20"/></modifier></type><name pos:line="598" pos:column="20">co<pos:position pos:line="598" pos:column="22"/></name><init pos:line="598" pos:column="22">=<expr><name pos:line="598" pos:column="23">NULL<pos:position pos:line="598" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="598" pos:column="28"/></decl_stmt> <comment type="block" pos:line="598" pos:column="29">/* no cookies from start */</comment>
    <decl_stmt><decl><type><name pos:line="599" pos:column="5">int<pos:position pos:line="599" pos:column="8"/></name></type> <name pos:line="599" pos:column="9">count<pos:position pos:line="599" pos:column="14"/></name><init pos:line="599" pos:column="14">=<expr><literal type="number" pos:line="599" pos:column="15">0<pos:position pos:line="599" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="599" pos:column="17"/></decl_stmt>

    <if pos:line="601" pos:column="5">if<condition pos:line="601" pos:column="7">(<expr><name><name pos:line="601" pos:column="8">data<pos:position pos:line="601" pos:column="12"/></name><operator pos:line="601" pos:column="12">-&gt;<pos:position pos:line="601" pos:column="17"/></operator><name pos:line="601" pos:column="14">cookies<pos:position pos:line="601" pos:column="21"/></name></name></expr>)<pos:position pos:line="601" pos:column="22"/></condition><then pos:line="601" pos:column="22"> <block pos:line="601" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="602" pos:column="7">Curl_share_lock<pos:position pos:line="602" pos:column="22"/></name><argument_list pos:line="602" pos:column="22">(<argument><expr><name pos:line="602" pos:column="23">data<pos:position pos:line="602" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="602" pos:column="29">CURL_LOCK_DATA_COOKIE<pos:position pos:line="602" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="602" pos:column="52">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="602" pos:column="75"/></name></expr></argument>)<pos:position pos:line="602" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="602" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name pos:line="603" pos:column="7">co<pos:position pos:line="603" pos:column="9"/></name> <operator pos:line="603" pos:column="10">=<pos:position pos:line="603" pos:column="11"/></operator> <call><name pos:line="603" pos:column="12">Curl_cookie_getlist<pos:position pos:line="603" pos:column="31"/></name><argument_list pos:line="603" pos:column="31">(<argument><expr><name><name pos:line="603" pos:column="32">data<pos:position pos:line="603" pos:column="36"/></name><operator pos:line="603" pos:column="36">-&gt;<pos:position pos:line="603" pos:column="41"/></operator><name pos:line="603" pos:column="38">cookies<pos:position pos:line="603" pos:column="45"/></name></name></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="604" pos:column="32">conn<pos:position pos:line="604" pos:column="36"/></name><operator pos:line="604" pos:column="36">-&gt;<pos:position pos:line="604" pos:column="41"/></operator><name pos:line="604" pos:column="38">allocptr<pos:position pos:line="604" pos:column="46"/></name><operator pos:line="604" pos:column="46">.<pos:position pos:line="604" pos:column="47"/></operator><name pos:line="604" pos:column="47">cookiehost<pos:position pos:line="604" pos:column="57"/></name></name></expr>?<pos:position pos:line="604" pos:column="58"/></condition><then pos:line="604" pos:column="58">
                               <expr><name><name pos:line="605" pos:column="32">conn<pos:position pos:line="605" pos:column="36"/></name><operator pos:line="605" pos:column="36">-&gt;<pos:position pos:line="605" pos:column="41"/></operator><name pos:line="605" pos:column="38">allocptr<pos:position pos:line="605" pos:column="46"/></name><operator pos:line="605" pos:column="46">.<pos:position pos:line="605" pos:column="47"/></operator><name pos:line="605" pos:column="47">cookiehost<pos:position pos:line="605" pos:column="57"/></name></name></expr></then><else pos:line="605" pos:column="57">:<expr><name pos:line="605" pos:column="58">host<pos:position pos:line="605" pos:column="62"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><name><name pos:line="606" pos:column="32">data<pos:position pos:line="606" pos:column="36"/></name><operator pos:line="606" pos:column="36">-&gt;<pos:position pos:line="606" pos:column="41"/></operator><name pos:line="606" pos:column="38">state<pos:position pos:line="606" pos:column="43"/></name><operator pos:line="606" pos:column="43">.<pos:position pos:line="606" pos:column="44"/></operator><name pos:line="606" pos:column="44">path<pos:position pos:line="606" pos:column="48"/></name></name></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="607" pos:column="32">(<pos:position pos:line="607" pos:column="33"/></operator><name><name pos:line="607" pos:column="33">conn<pos:position pos:line="607" pos:column="37"/></name><operator pos:line="607" pos:column="37">-&gt;<pos:position pos:line="607" pos:column="42"/></operator><name pos:line="607" pos:column="39">handler<pos:position pos:line="607" pos:column="46"/></name><operator pos:line="607" pos:column="46">-&gt;<pos:position pos:line="607" pos:column="51"/></operator><name pos:line="607" pos:column="48">protocol<pos:position pos:line="607" pos:column="56"/></name></name><operator pos:line="607" pos:column="56">&amp;<pos:position pos:line="607" pos:column="61"/></operator><name pos:line="607" pos:column="57">CURLPROTO_HTTPS<pos:position pos:line="607" pos:column="72"/></name><operator pos:line="607" pos:column="72">)<pos:position pos:line="607" pos:column="73"/></operator></expr>?<pos:position pos:line="607" pos:column="74"/></condition><then pos:line="607" pos:column="74">
                               <expr><name pos:line="608" pos:column="32">TRUE<pos:position pos:line="608" pos:column="36"/></name></expr></then><else pos:line="608" pos:column="36">:<expr><name pos:line="608" pos:column="37">FALSE<pos:position pos:line="608" pos:column="42"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="608" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="609" pos:column="7">Curl_share_unlock<pos:position pos:line="609" pos:column="24"/></name><argument_list pos:line="609" pos:column="24">(<argument><expr><name pos:line="609" pos:column="25">data<pos:position pos:line="609" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="609" pos:column="31">CURL_LOCK_DATA_COOKIE<pos:position pos:line="609" pos:column="52"/></name></expr></argument>)<pos:position pos:line="609" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="610" pos:column="6"/></block></then></if>
    <if pos:line="611" pos:column="5">if<condition pos:line="611" pos:column="7">(<expr><name pos:line="611" pos:column="8">co<pos:position pos:line="611" pos:column="10"/></name></expr>)<pos:position pos:line="611" pos:column="11"/></condition><then pos:line="611" pos:column="11"> <block pos:line="611" pos:column="12">{
      <decl_stmt><decl><type><name><name pos:line="612" pos:column="7">struct<pos:position pos:line="612" pos:column="13"/></name> <name pos:line="612" pos:column="14">Cookie<pos:position pos:line="612" pos:column="20"/></name></name> <modifier pos:line="612" pos:column="21">*<pos:position pos:line="612" pos:column="22"/></modifier></type><name pos:line="612" pos:column="22">store<pos:position pos:line="612" pos:column="27"/></name><init pos:line="612" pos:column="27">=<expr><name pos:line="612" pos:column="28">co<pos:position pos:line="612" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="612" pos:column="31"/></decl_stmt>
      <comment type="block" pos:line="613" pos:column="7">/* now loop through all cookies that matched */</comment>
      <while pos:line="614" pos:column="7">while<condition pos:line="614" pos:column="12">(<expr><name pos:line="614" pos:column="13">co<pos:position pos:line="614" pos:column="15"/></name></expr>)<pos:position pos:line="614" pos:column="16"/></condition> <block pos:line="614" pos:column="17">{
        <if pos:line="615" pos:column="9">if<condition pos:line="615" pos:column="11">(<expr><name><name pos:line="615" pos:column="12">co<pos:position pos:line="615" pos:column="14"/></name><operator pos:line="615" pos:column="14">-&gt;<pos:position pos:line="615" pos:column="19"/></operator><name pos:line="615" pos:column="16">value<pos:position pos:line="615" pos:column="21"/></name></name></expr>)<pos:position pos:line="615" pos:column="22"/></condition><then pos:line="615" pos:column="22"> <block pos:line="615" pos:column="23">{
          <if pos:line="616" pos:column="11">if<condition pos:line="616" pos:column="13">(<expr><literal type="number" pos:line="616" pos:column="14">0<pos:position pos:line="616" pos:column="15"/></literal> <operator pos:line="616" pos:column="16">==<pos:position pos:line="616" pos:column="18"/></operator> <name pos:line="616" pos:column="19">count<pos:position pos:line="616" pos:column="24"/></name></expr>)<pos:position pos:line="616" pos:column="25"/></condition><then pos:line="616" pos:column="25"> <block pos:line="616" pos:column="26">{
            <expr_stmt><expr><name pos:line="617" pos:column="13">result<pos:position pos:line="617" pos:column="19"/></name> <operator pos:line="617" pos:column="20">=<pos:position pos:line="617" pos:column="21"/></operator> <call><name pos:line="617" pos:column="22">Curl_add_bufferf<pos:position pos:line="617" pos:column="38"/></name><argument_list pos:line="617" pos:column="38">(<argument><expr><name pos:line="617" pos:column="39">req_buffer<pos:position pos:line="617" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="617" pos:column="51">"Cookie: "<pos:position pos:line="617" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="617" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="617" pos:column="63"/></expr_stmt>
            <if pos:line="618" pos:column="13">if<condition pos:line="618" pos:column="15">(<expr><name pos:line="618" pos:column="16">result<pos:position pos:line="618" pos:column="22"/></name></expr>)<pos:position pos:line="618" pos:column="23"/></condition><then pos:line="618" pos:column="23">
              <block type="pseudo"><break pos:line="619" pos:column="15">break;<pos:position pos:line="619" pos:column="21"/></break></block></then></if>
          }<pos:position pos:line="620" pos:column="12"/></block></then></if>
          <expr_stmt><expr><name pos:line="621" pos:column="11">result<pos:position pos:line="621" pos:column="17"/></name> <operator pos:line="621" pos:column="18">=<pos:position pos:line="621" pos:column="19"/></operator> <call><name pos:line="621" pos:column="20">Curl_add_bufferf<pos:position pos:line="621" pos:column="36"/></name><argument_list pos:line="621" pos:column="36">(<argument><expr><name pos:line="621" pos:column="37">req_buffer<pos:position pos:line="621" pos:column="47"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="622" pos:column="37">"%s%s=%s"<pos:position pos:line="622" pos:column="46"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="622" pos:column="48">count<pos:position pos:line="622" pos:column="53"/></name></expr>?<pos:position pos:line="622" pos:column="54"/></condition><then><expr><literal type="string" pos:line="622" pos:column="54">"; "<pos:position pos:line="622" pos:column="58"/></literal></expr></then><else pos:line="622" pos:column="58">:<expr><literal type="string" pos:line="622" pos:column="59">""<pos:position pos:line="622" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
                                    <argument><expr><name><name pos:line="623" pos:column="37">co<pos:position pos:line="623" pos:column="39"/></name><operator pos:line="623" pos:column="39">-&gt;<pos:position pos:line="623" pos:column="44"/></operator><name pos:line="623" pos:column="41">name<pos:position pos:line="623" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="623" pos:column="47">co<pos:position pos:line="623" pos:column="49"/></name><operator pos:line="623" pos:column="49">-&gt;<pos:position pos:line="623" pos:column="54"/></operator><name pos:line="623" pos:column="51">value<pos:position pos:line="623" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="623" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="623" pos:column="58"/></expr_stmt>
          <if pos:line="624" pos:column="11">if<condition pos:line="624" pos:column="13">(<expr><name pos:line="624" pos:column="14">result<pos:position pos:line="624" pos:column="20"/></name></expr>)<pos:position pos:line="624" pos:column="21"/></condition><then pos:line="624" pos:column="21">
            <block type="pseudo"><break pos:line="625" pos:column="13">break;<pos:position pos:line="625" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="626" pos:column="11">count<pos:position pos:line="626" pos:column="16"/></name><operator pos:line="626" pos:column="16">++<pos:position pos:line="626" pos:column="18"/></operator></expr>;<pos:position pos:line="626" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="627" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="628" pos:column="9">co<pos:position pos:line="628" pos:column="11"/></name> <operator pos:line="628" pos:column="12">=<pos:position pos:line="628" pos:column="13"/></operator> <name><name pos:line="628" pos:column="14">co<pos:position pos:line="628" pos:column="16"/></name><operator pos:line="628" pos:column="16">-&gt;<pos:position pos:line="628" pos:column="21"/></operator><name pos:line="628" pos:column="18">next<pos:position pos:line="628" pos:column="22"/></name></name></expr>;<pos:position pos:line="628" pos:column="23"/></expr_stmt> <comment type="block" pos:line="628" pos:column="24">/* next cookie please */</comment>
      }<pos:position pos:line="629" pos:column="8"/></block></while>
      <expr_stmt><expr><call><name pos:line="630" pos:column="7">Curl_cookie_freelist<pos:position pos:line="630" pos:column="27"/></name><argument_list pos:line="630" pos:column="27">(<argument><expr><name pos:line="630" pos:column="28">store<pos:position pos:line="630" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="630" pos:column="35">FALSE<pos:position pos:line="630" pos:column="40"/></name></expr></argument>)<pos:position pos:line="630" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="630" pos:column="42"/></expr_stmt> <comment type="block" pos:line="630" pos:column="43">/* free the cookie list */</comment>
    }<pos:position pos:line="631" pos:column="6"/></block></then></if>
    <if pos:line="632" pos:column="5">if<condition pos:line="632" pos:column="7">(<expr><name pos:line="632" pos:column="8">addcookies<pos:position pos:line="632" pos:column="18"/></name> <operator pos:line="632" pos:column="19">&amp;&amp;<pos:position pos:line="632" pos:column="29"/></operator> <operator pos:line="632" pos:column="22">!<pos:position pos:line="632" pos:column="23"/></operator><name pos:line="632" pos:column="23">result<pos:position pos:line="632" pos:column="29"/></name></expr>)<pos:position pos:line="632" pos:column="30"/></condition><then pos:line="632" pos:column="30"> <block pos:line="632" pos:column="31">{
      <if pos:line="633" pos:column="7">if<condition pos:line="633" pos:column="9">(<expr><operator pos:line="633" pos:column="10">!<pos:position pos:line="633" pos:column="11"/></operator><name pos:line="633" pos:column="11">count<pos:position pos:line="633" pos:column="16"/></name></expr>)<pos:position pos:line="633" pos:column="17"/></condition><then pos:line="633" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="634" pos:column="9">result<pos:position pos:line="634" pos:column="15"/></name> <operator pos:line="634" pos:column="16">=<pos:position pos:line="634" pos:column="17"/></operator> <call><name pos:line="634" pos:column="18">Curl_add_bufferf<pos:position pos:line="634" pos:column="34"/></name><argument_list pos:line="634" pos:column="34">(<argument><expr><name pos:line="634" pos:column="35">req_buffer<pos:position pos:line="634" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="634" pos:column="47">"Cookie: "<pos:position pos:line="634" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="634" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="634" pos:column="59"/></expr_stmt></block></then></if>
      <if pos:line="635" pos:column="7">if<condition pos:line="635" pos:column="9">(<expr><operator pos:line="635" pos:column="10">!<pos:position pos:line="635" pos:column="11"/></operator><name pos:line="635" pos:column="11">result<pos:position pos:line="635" pos:column="17"/></name></expr>)<pos:position pos:line="635" pos:column="18"/></condition><then pos:line="635" pos:column="18"> <block pos:line="635" pos:column="19">{
        <expr_stmt><expr><name pos:line="636" pos:column="9">result<pos:position pos:line="636" pos:column="15"/></name> <operator pos:line="636" pos:column="16">=<pos:position pos:line="636" pos:column="17"/></operator> <call><name pos:line="636" pos:column="18">Curl_add_bufferf<pos:position pos:line="636" pos:column="34"/></name><argument_list pos:line="636" pos:column="34">(<argument><expr><name pos:line="636" pos:column="35">req_buffer<pos:position pos:line="636" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="636" pos:column="47">"%s%s"<pos:position pos:line="636" pos:column="53"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="636" pos:column="55">count<pos:position pos:line="636" pos:column="60"/></name></expr>?<pos:position pos:line="636" pos:column="61"/></condition><then><expr><literal type="string" pos:line="636" pos:column="61">"; "<pos:position pos:line="636" pos:column="65"/></literal></expr></then><else pos:line="636" pos:column="65">:<expr><literal type="string" pos:line="636" pos:column="66">""<pos:position pos:line="636" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
                                  <argument><expr><name pos:line="637" pos:column="35">addcookies<pos:position pos:line="637" pos:column="45"/></name></expr></argument>)<pos:position pos:line="637" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="637" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="638" pos:column="9">count<pos:position pos:line="638" pos:column="14"/></name><operator pos:line="638" pos:column="14">++<pos:position pos:line="638" pos:column="16"/></operator></expr>;<pos:position pos:line="638" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="639" pos:column="8"/></block></then></if>
    }<pos:position pos:line="640" pos:column="6"/></block></then></if>
    <if pos:line="641" pos:column="5">if<condition pos:line="641" pos:column="7">(<expr><name pos:line="641" pos:column="8">count<pos:position pos:line="641" pos:column="13"/></name> <operator pos:line="641" pos:column="14">&amp;&amp;<pos:position pos:line="641" pos:column="24"/></operator> <operator pos:line="641" pos:column="17">!<pos:position pos:line="641" pos:column="18"/></operator><name pos:line="641" pos:column="18">result<pos:position pos:line="641" pos:column="24"/></name></expr>)<pos:position pos:line="641" pos:column="25"/></condition><then pos:line="641" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="642" pos:column="7">result<pos:position pos:line="642" pos:column="13"/></name> <operator pos:line="642" pos:column="14">=<pos:position pos:line="642" pos:column="15"/></operator> <call><name pos:line="642" pos:column="16">Curl_add_buffer<pos:position pos:line="642" pos:column="31"/></name><argument_list pos:line="642" pos:column="31">(<argument><expr><name pos:line="642" pos:column="32">req_buffer<pos:position pos:line="642" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="642" pos:column="44">"\r\n"<pos:position pos:line="642" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="642" pos:column="52">2<pos:position pos:line="642" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="642" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="642" pos:column="55"/></expr_stmt></block></then></if>

    <if pos:line="644" pos:column="5">if<condition pos:line="644" pos:column="7">(<expr><name pos:line="644" pos:column="8">result<pos:position pos:line="644" pos:column="14"/></name></expr>)<pos:position pos:line="644" pos:column="15"/></condition><then pos:line="644" pos:column="15">
      <block type="pseudo"><return pos:line="645" pos:column="7">return <expr><name pos:line="645" pos:column="14">result<pos:position pos:line="645" pos:column="20"/></name></expr>;<pos:position pos:line="645" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="646" pos:column="4"/></block></then></if>
<cpp:endif pos:line="647" pos:column="1">#<cpp:directive pos:line="647" pos:column="2">endif<pos:position pos:line="647" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="649" pos:column="3">if<condition pos:line="649" pos:column="5">(<expr><name><name pos:line="649" pos:column="6">data<pos:position pos:line="649" pos:column="10"/></name><operator pos:line="649" pos:column="10">-&gt;<pos:position pos:line="649" pos:column="15"/></operator><name pos:line="649" pos:column="12">set<pos:position pos:line="649" pos:column="15"/></name><operator pos:line="649" pos:column="15">.<pos:position pos:line="649" pos:column="16"/></operator><name pos:line="649" pos:column="16">timecondition<pos:position pos:line="649" pos:column="29"/></name></name></expr>)<pos:position pos:line="649" pos:column="30"/></condition><then pos:line="649" pos:column="30"> <block pos:line="649" pos:column="31">{
    <expr_stmt><expr><name pos:line="650" pos:column="5">result<pos:position pos:line="650" pos:column="11"/></name> <operator pos:line="650" pos:column="12">=<pos:position pos:line="650" pos:column="13"/></operator> <call><name pos:line="650" pos:column="14">Curl_add_timecondition<pos:position pos:line="650" pos:column="36"/></name><argument_list pos:line="650" pos:column="36">(<argument><expr><name pos:line="650" pos:column="37">data<pos:position pos:line="650" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="650" pos:column="43">req_buffer<pos:position pos:line="650" pos:column="53"/></name></expr></argument>)<pos:position pos:line="650" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="650" pos:column="55"/></expr_stmt>
    <if pos:line="651" pos:column="5">if<condition pos:line="651" pos:column="7">(<expr><name pos:line="651" pos:column="8">result<pos:position pos:line="651" pos:column="14"/></name></expr>)<pos:position pos:line="651" pos:column="15"/></condition><then pos:line="651" pos:column="15">
      <block type="pseudo"><return pos:line="652" pos:column="7">return <expr><name pos:line="652" pos:column="14">result<pos:position pos:line="652" pos:column="20"/></name></expr>;<pos:position pos:line="652" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="653" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="655" pos:column="3">result<pos:position pos:line="655" pos:column="9"/></name> <operator pos:line="655" pos:column="10">=<pos:position pos:line="655" pos:column="11"/></operator> <call><name pos:line="655" pos:column="12">Curl_add_custom_headers<pos:position pos:line="655" pos:column="35"/></name><argument_list pos:line="655" pos:column="35">(<argument><expr><name pos:line="655" pos:column="36">conn<pos:position pos:line="655" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="655" pos:column="42">FALSE<pos:position pos:line="655" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="655" pos:column="49">req_buffer<pos:position pos:line="655" pos:column="59"/></name></expr></argument>)<pos:position pos:line="655" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="655" pos:column="61"/></expr_stmt>
  <if pos:line="656" pos:column="3">if<condition pos:line="656" pos:column="5">(<expr><name pos:line="656" pos:column="6">result<pos:position pos:line="656" pos:column="12"/></name></expr>)<pos:position pos:line="656" pos:column="13"/></condition><then pos:line="656" pos:column="13">
    <block type="pseudo"><return pos:line="657" pos:column="5">return <expr><name pos:line="657" pos:column="12">result<pos:position pos:line="657" pos:column="18"/></name></expr>;<pos:position pos:line="657" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="659" pos:column="3">http<pos:position pos:line="659" pos:column="7"/></name><operator pos:line="659" pos:column="7">-&gt;<pos:position pos:line="659" pos:column="12"/></operator><name pos:line="659" pos:column="9">postdata<pos:position pos:line="659" pos:column="17"/></name></name> <operator pos:line="659" pos:column="18">=<pos:position pos:line="659" pos:column="19"/></operator> <name pos:line="659" pos:column="20">NULL<pos:position pos:line="659" pos:column="24"/></name></expr>;<pos:position pos:line="659" pos:column="25"/></expr_stmt>  <comment type="block" pos:line="659" pos:column="27">/* nothing to post at this point */</comment>
  <expr_stmt><expr><call><name pos:line="660" pos:column="3">Curl_pgrsSetUploadSize<pos:position pos:line="660" pos:column="25"/></name><argument_list pos:line="660" pos:column="25">(<argument><expr><name pos:line="660" pos:column="26">data<pos:position pos:line="660" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="660" pos:column="32">-<pos:position pos:line="660" pos:column="33"/></operator><literal type="number" pos:line="660" pos:column="33">1<pos:position pos:line="660" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="660" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="660" pos:column="36"/></expr_stmt> <comment type="block" pos:line="660" pos:column="37">/* upload size is unknown atm */</comment>

  <comment type="block" pos:line="662" pos:column="3">/* If 'authdone' is FALSE, we must not set the write socket index to the
     Curl_transfer() call below, as we're not ready to actually upload any
     data yet. */</comment>

  <switch pos:line="666" pos:column="3">switch<condition pos:line="666" pos:column="9">(<expr><name pos:line="666" pos:column="10">httpreq<pos:position pos:line="666" pos:column="17"/></name></expr>)<pos:position pos:line="666" pos:column="18"/></condition> <block pos:line="666" pos:column="19">{

  <case pos:line="668" pos:column="3">case <expr><name pos:line="668" pos:column="8">HTTPREQ_POST_FORM<pos:position pos:line="668" pos:column="25"/></name></expr>:<pos:position pos:line="668" pos:column="26"/></case>
    <if pos:line="669" pos:column="5">if<condition pos:line="669" pos:column="7">(<expr><operator pos:line="669" pos:column="8">!<pos:position pos:line="669" pos:column="9"/></operator><name><name pos:line="669" pos:column="9">http<pos:position pos:line="669" pos:column="13"/></name><operator pos:line="669" pos:column="13">-&gt;<pos:position pos:line="669" pos:column="18"/></operator><name pos:line="669" pos:column="15">sendit<pos:position pos:line="669" pos:column="21"/></name></name> <operator pos:line="669" pos:column="22">||<pos:position pos:line="669" pos:column="24"/></operator> <name><name pos:line="669" pos:column="25">conn<pos:position pos:line="669" pos:column="29"/></name><operator pos:line="669" pos:column="29">-&gt;<pos:position pos:line="669" pos:column="34"/></operator><name pos:line="669" pos:column="31">bits<pos:position pos:line="669" pos:column="35"/></name><operator pos:line="669" pos:column="35">.<pos:position pos:line="669" pos:column="36"/></operator><name pos:line="669" pos:column="36">authneg<pos:position pos:line="669" pos:column="43"/></name></name></expr>)<pos:position pos:line="669" pos:column="44"/></condition><then pos:line="669" pos:column="44"> <block pos:line="669" pos:column="45">{
      <comment type="block" pos:line="670" pos:column="7">/* nothing to post! */</comment>
      <expr_stmt><expr><name pos:line="671" pos:column="7">result<pos:position pos:line="671" pos:column="13"/></name> <operator pos:line="671" pos:column="14">=<pos:position pos:line="671" pos:column="15"/></operator> <call><name pos:line="671" pos:column="16">Curl_add_bufferf<pos:position pos:line="671" pos:column="32"/></name><argument_list pos:line="671" pos:column="32">(<argument><expr><name pos:line="671" pos:column="33">req_buffer<pos:position pos:line="671" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="671" pos:column="45">"Content-Length: 0\r\n\r\n"<pos:position pos:line="671" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="671" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="671" pos:column="74"/></expr_stmt>
      <if pos:line="672" pos:column="7">if<condition pos:line="672" pos:column="9">(<expr><name pos:line="672" pos:column="10">result<pos:position pos:line="672" pos:column="16"/></name></expr>)<pos:position pos:line="672" pos:column="17"/></condition><then pos:line="672" pos:column="17">
        <block type="pseudo"><return pos:line="673" pos:column="9">return <expr><name pos:line="673" pos:column="16">result<pos:position pos:line="673" pos:column="22"/></name></expr>;<pos:position pos:line="673" pos:column="23"/></return></block></then></if>

      <expr_stmt><expr><name pos:line="675" pos:column="7">result<pos:position pos:line="675" pos:column="13"/></name> <operator pos:line="675" pos:column="14">=<pos:position pos:line="675" pos:column="15"/></operator> <call><name pos:line="675" pos:column="16">Curl_add_buffer_send<pos:position pos:line="675" pos:column="36"/></name><argument_list pos:line="675" pos:column="36">(<argument><expr><name pos:line="675" pos:column="37">req_buffer<pos:position pos:line="675" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="675" pos:column="49">conn<pos:position pos:line="675" pos:column="53"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="676" pos:column="37">&amp;<pos:position pos:line="676" pos:column="42"/></operator><name><name pos:line="676" pos:column="38">data<pos:position pos:line="676" pos:column="42"/></name><operator pos:line="676" pos:column="42">-&gt;<pos:position pos:line="676" pos:column="47"/></operator><name pos:line="676" pos:column="44">info<pos:position pos:line="676" pos:column="48"/></name><operator pos:line="676" pos:column="48">.<pos:position pos:line="676" pos:column="49"/></operator><name pos:line="676" pos:column="49">request_size<pos:position pos:line="676" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="676" pos:column="63">0<pos:position pos:line="676" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="676" pos:column="66">FIRSTSOCKET<pos:position pos:line="676" pos:column="77"/></name></expr></argument>)<pos:position pos:line="676" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="676" pos:column="79"/></expr_stmt>
      <if pos:line="677" pos:column="7">if<condition pos:line="677" pos:column="9">(<expr><name pos:line="677" pos:column="10">result<pos:position pos:line="677" pos:column="16"/></name></expr>)<pos:position pos:line="677" pos:column="17"/></condition><then pos:line="677" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="678" pos:column="9">failf<pos:position pos:line="678" pos:column="14"/></name><argument_list pos:line="678" pos:column="14">(<argument><expr><name pos:line="678" pos:column="15">data<pos:position pos:line="678" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="678" pos:column="21">"Failed sending POST request"<pos:position pos:line="678" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="678" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="678" pos:column="52"/></expr_stmt></block></then>
      <else pos:line="679" pos:column="7">else
        <comment type="block" pos:line="680" pos:column="9">/* setup variables for the upcoming transfer */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="681" pos:column="9">Curl_setup_transfer<pos:position pos:line="681" pos:column="28"/></name><argument_list pos:line="681" pos:column="28">(<argument><expr><name pos:line="681" pos:column="29">conn<pos:position pos:line="681" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="681" pos:column="35">FIRSTSOCKET<pos:position pos:line="681" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="681" pos:column="48">-<pos:position pos:line="681" pos:column="49"/></operator><literal type="number" pos:line="681" pos:column="49">1<pos:position pos:line="681" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="681" pos:column="52">TRUE<pos:position pos:line="681" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="681" pos:column="58">&amp;<pos:position pos:line="681" pos:column="63"/></operator><name><name pos:line="681" pos:column="59">http<pos:position pos:line="681" pos:column="63"/></name><operator pos:line="681" pos:column="63">-&gt;<pos:position pos:line="681" pos:column="68"/></operator><name pos:line="681" pos:column="65">readbytecount<pos:position pos:line="681" pos:column="78"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="682" pos:column="29">-<pos:position pos:line="682" pos:column="30"/></operator><literal type="number" pos:line="682" pos:column="30">1<pos:position pos:line="682" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="682" pos:column="33">NULL<pos:position pos:line="682" pos:column="37"/></name></expr></argument>)<pos:position pos:line="682" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="682" pos:column="39"/></expr_stmt></block></else></if>
      <break pos:line="683" pos:column="7">break;<pos:position pos:line="683" pos:column="13"/></break>
    }<pos:position pos:line="684" pos:column="6"/></block></then></if>

    <if pos:line="686" pos:column="5">if<condition pos:line="686" pos:column="7">(<expr><call><name pos:line="686" pos:column="8">Curl_FormInit<pos:position pos:line="686" pos:column="21"/></name><argument_list pos:line="686" pos:column="21">(<argument><expr><operator pos:line="686" pos:column="22">&amp;<pos:position pos:line="686" pos:column="27"/></operator><name><name pos:line="686" pos:column="23">http<pos:position pos:line="686" pos:column="27"/></name><operator pos:line="686" pos:column="27">-&gt;<pos:position pos:line="686" pos:column="32"/></operator><name pos:line="686" pos:column="29">form<pos:position pos:line="686" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="686" pos:column="35">http<pos:position pos:line="686" pos:column="39"/></name><operator pos:line="686" pos:column="39">-&gt;<pos:position pos:line="686" pos:column="44"/></operator><name pos:line="686" pos:column="41">sendit<pos:position pos:line="686" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="686" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="686" pos:column="49"/></condition><then pos:line="686" pos:column="49"> <block pos:line="686" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="687" pos:column="7">failf<pos:position pos:line="687" pos:column="12"/></name><argument_list pos:line="687" pos:column="12">(<argument><expr><name pos:line="687" pos:column="13">data<pos:position pos:line="687" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="687" pos:column="19">"Internal HTTP POST error!"<pos:position pos:line="687" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="687" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="687" pos:column="48"/></expr_stmt>
      <return pos:line="688" pos:column="7">return <expr><name pos:line="688" pos:column="14">CURLE_HTTP_POST_ERROR<pos:position pos:line="688" pos:column="35"/></name></expr>;<pos:position pos:line="688" pos:column="36"/></return>
    }<pos:position pos:line="689" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="691" pos:column="5">/* Get the currently set callback function pointer and store that in the
       form struct since we might want the actual user-provided callback later
       on. The conn-&gt;fread_func pointer itself will be changed for the
       multipart case to the function that returns a multipart formatted
       stream. */</comment>
    <expr_stmt><expr><name><name pos:line="696" pos:column="5">http<pos:position pos:line="696" pos:column="9"/></name><operator pos:line="696" pos:column="9">-&gt;<pos:position pos:line="696" pos:column="14"/></operator><name pos:line="696" pos:column="11">form<pos:position pos:line="696" pos:column="15"/></name><operator pos:line="696" pos:column="15">.<pos:position pos:line="696" pos:column="16"/></operator><name pos:line="696" pos:column="16">fread_func<pos:position pos:line="696" pos:column="26"/></name></name> <operator pos:line="696" pos:column="27">=<pos:position pos:line="696" pos:column="28"/></operator> <name><name pos:line="696" pos:column="29">conn<pos:position pos:line="696" pos:column="33"/></name><operator pos:line="696" pos:column="33">-&gt;<pos:position pos:line="696" pos:column="38"/></operator><name pos:line="696" pos:column="35">fread_func<pos:position pos:line="696" pos:column="45"/></name></name></expr>;<pos:position pos:line="696" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="698" pos:column="5">/* Set the read function to read from the generated form data */</comment>
    <expr_stmt><expr><name><name pos:line="699" pos:column="5">conn<pos:position pos:line="699" pos:column="9"/></name><operator pos:line="699" pos:column="9">-&gt;<pos:position pos:line="699" pos:column="14"/></operator><name pos:line="699" pos:column="11">fread_func<pos:position pos:line="699" pos:column="21"/></name></name> <operator pos:line="699" pos:column="22">=<pos:position pos:line="699" pos:column="23"/></operator> <operator pos:line="699" pos:column="24">(<pos:position pos:line="699" pos:column="25"/></operator><name pos:line="699" pos:column="25">curl_read_callback<pos:position pos:line="699" pos:column="43"/></name><operator pos:line="699" pos:column="43">)<pos:position pos:line="699" pos:column="44"/></operator><name pos:line="699" pos:column="44">Curl_FormReader<pos:position pos:line="699" pos:column="59"/></name></expr>;<pos:position pos:line="699" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="700" pos:column="5">conn<pos:position pos:line="700" pos:column="9"/></name><operator pos:line="700" pos:column="9">-&gt;<pos:position pos:line="700" pos:column="14"/></operator><name pos:line="700" pos:column="11">fread_in<pos:position pos:line="700" pos:column="19"/></name></name> <operator pos:line="700" pos:column="20">=<pos:position pos:line="700" pos:column="21"/></operator> <operator pos:line="700" pos:column="22">&amp;<pos:position pos:line="700" pos:column="27"/></operator><name><name pos:line="700" pos:column="23">http<pos:position pos:line="700" pos:column="27"/></name><operator pos:line="700" pos:column="27">-&gt;<pos:position pos:line="700" pos:column="32"/></operator><name pos:line="700" pos:column="29">form<pos:position pos:line="700" pos:column="33"/></name></name></expr>;<pos:position pos:line="700" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="702" pos:column="5">http<pos:position pos:line="702" pos:column="9"/></name><operator pos:line="702" pos:column="9">-&gt;<pos:position pos:line="702" pos:column="14"/></operator><name pos:line="702" pos:column="11">sending<pos:position pos:line="702" pos:column="18"/></name></name> <operator pos:line="702" pos:column="19">=<pos:position pos:line="702" pos:column="20"/></operator> <name pos:line="702" pos:column="21">HTTPSEND_BODY<pos:position pos:line="702" pos:column="34"/></name></expr>;<pos:position pos:line="702" pos:column="35"/></expr_stmt>

    <if pos:line="704" pos:column="5">if<condition pos:line="704" pos:column="7">(<expr><operator pos:line="704" pos:column="8">!<pos:position pos:line="704" pos:column="9"/></operator><name><name pos:line="704" pos:column="9">data<pos:position pos:line="704" pos:column="13"/></name><operator pos:line="704" pos:column="13">-&gt;<pos:position pos:line="704" pos:column="18"/></operator><name pos:line="704" pos:column="15">req<pos:position pos:line="704" pos:column="18"/></name><operator pos:line="704" pos:column="18">.<pos:position pos:line="704" pos:column="19"/></operator><name pos:line="704" pos:column="19">upload_chunky<pos:position pos:line="704" pos:column="32"/></name></name> <operator pos:line="704" pos:column="33">&amp;&amp;<pos:position pos:line="704" pos:column="43"/></operator>
       <operator pos:line="705" pos:column="8">!<pos:position pos:line="705" pos:column="9"/></operator><call><name pos:line="705" pos:column="9">Curl_checkheaders<pos:position pos:line="705" pos:column="26"/></name><argument_list pos:line="705" pos:column="26">(<argument><expr><name pos:line="705" pos:column="27">conn<pos:position pos:line="705" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="705" pos:column="33">"Content-Length:"<pos:position pos:line="705" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="705" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="705" pos:column="52"/></condition><then pos:line="705" pos:column="52"> <block pos:line="705" pos:column="53">{
      <comment type="block" pos:line="706" pos:column="7">/* only add Content-Length if not uploading chunked */</comment>
      <expr_stmt><expr><name pos:line="707" pos:column="7">result<pos:position pos:line="707" pos:column="13"/></name> <operator pos:line="707" pos:column="14">=<pos:position pos:line="707" pos:column="15"/></operator> <call><name pos:line="707" pos:column="16">Curl_add_bufferf<pos:position pos:line="707" pos:column="32"/></name><argument_list pos:line="707" pos:column="32">(<argument><expr><name pos:line="707" pos:column="33">req_buffer<pos:position pos:line="707" pos:column="43"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="708" pos:column="33">"Content-Length: %"<pos:position pos:line="708" pos:column="52"/></literal> <name pos:line="708" pos:column="53">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="708" pos:column="75"/></name>
                                <literal type="string" pos:line="709" pos:column="33">"\r\n"<pos:position pos:line="709" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="709" pos:column="41">http<pos:position pos:line="709" pos:column="45"/></name><operator pos:line="709" pos:column="45">-&gt;<pos:position pos:line="709" pos:column="50"/></operator><name pos:line="709" pos:column="47">postsize<pos:position pos:line="709" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="709" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="709" pos:column="57"/></expr_stmt>
      <if pos:line="710" pos:column="7">if<condition pos:line="710" pos:column="9">(<expr><name pos:line="710" pos:column="10">result<pos:position pos:line="710" pos:column="16"/></name></expr>)<pos:position pos:line="710" pos:column="17"/></condition><then pos:line="710" pos:column="17">
        <block type="pseudo"><return pos:line="711" pos:column="9">return <expr><name pos:line="711" pos:column="16">result<pos:position pos:line="711" pos:column="22"/></name></expr>;<pos:position pos:line="711" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="712" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="714" pos:column="5">result<pos:position pos:line="714" pos:column="11"/></name> <operator pos:line="714" pos:column="12">=<pos:position pos:line="714" pos:column="13"/></operator> <call><name pos:line="714" pos:column="14">expect100<pos:position pos:line="714" pos:column="23"/></name><argument_list pos:line="714" pos:column="23">(<argument><expr><name pos:line="714" pos:column="24">data<pos:position pos:line="714" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="714" pos:column="30">conn<pos:position pos:line="714" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="714" pos:column="36">req_buffer<pos:position pos:line="714" pos:column="46"/></name></expr></argument>)<pos:position pos:line="714" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="714" pos:column="48"/></expr_stmt>
    <if pos:line="715" pos:column="5">if<condition pos:line="715" pos:column="7">(<expr><name pos:line="715" pos:column="8">result<pos:position pos:line="715" pos:column="14"/></name></expr>)<pos:position pos:line="715" pos:column="15"/></condition><then pos:line="715" pos:column="15">
      <block type="pseudo"><return pos:line="716" pos:column="7">return <expr><name pos:line="716" pos:column="14">result<pos:position pos:line="716" pos:column="20"/></name></expr>;<pos:position pos:line="716" pos:column="21"/></return></block></then></if>

    <block pos:line="718" pos:column="5">{

      <comment type="block" pos:line="720" pos:column="7">/* Get Content-Type: line from Curl_formpostheader.
       */</comment>
      <decl_stmt><decl><type><name pos:line="722" pos:column="7">char<pos:position pos:line="722" pos:column="11"/></name> <modifier pos:line="722" pos:column="12">*<pos:position pos:line="722" pos:column="13"/></modifier></type><name pos:line="722" pos:column="13">contentType<pos:position pos:line="722" pos:column="24"/></name></decl>;<pos:position pos:line="722" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="723" pos:column="7">size_t<pos:position pos:line="723" pos:column="13"/></name></type> <name pos:line="723" pos:column="14">linelength<pos:position pos:line="723" pos:column="24"/></name><init pos:line="723" pos:column="24">=<expr><literal type="number" pos:line="723" pos:column="25">0<pos:position pos:line="723" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="723" pos:column="27"/></decl_stmt>
      <expr_stmt><expr><name pos:line="724" pos:column="7">contentType<pos:position pos:line="724" pos:column="18"/></name> <operator pos:line="724" pos:column="19">=<pos:position pos:line="724" pos:column="20"/></operator> <call><name pos:line="724" pos:column="21">Curl_formpostheader<pos:position pos:line="724" pos:column="40"/></name><argument_list pos:line="724" pos:column="40">(<argument><expr><operator pos:line="724" pos:column="41">(<pos:position pos:line="724" pos:column="42"/></operator><name pos:line="724" pos:column="42">void<pos:position pos:line="724" pos:column="46"/></name> <operator pos:line="724" pos:column="47">*<pos:position pos:line="724" pos:column="48"/></operator><operator pos:line="724" pos:column="48">)<pos:position pos:line="724" pos:column="49"/></operator><operator pos:line="724" pos:column="49">&amp;<pos:position pos:line="724" pos:column="54"/></operator><name><name pos:line="724" pos:column="50">http<pos:position pos:line="724" pos:column="54"/></name><operator pos:line="724" pos:column="54">-&gt;<pos:position pos:line="724" pos:column="59"/></operator><name pos:line="724" pos:column="56">form<pos:position pos:line="724" pos:column="60"/></name></name></expr></argument>,
                                        <argument><expr><operator pos:line="725" pos:column="41">&amp;<pos:position pos:line="725" pos:column="46"/></operator><name pos:line="725" pos:column="42">linelength<pos:position pos:line="725" pos:column="52"/></name></expr></argument>)<pos:position pos:line="725" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="725" pos:column="54"/></expr_stmt>
      <if pos:line="726" pos:column="7">if<condition pos:line="726" pos:column="9">(<expr><operator pos:line="726" pos:column="10">!<pos:position pos:line="726" pos:column="11"/></operator><name pos:line="726" pos:column="11">contentType<pos:position pos:line="726" pos:column="22"/></name></expr>)<pos:position pos:line="726" pos:column="23"/></condition><then pos:line="726" pos:column="23"> <block pos:line="726" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="727" pos:column="9">failf<pos:position pos:line="727" pos:column="14"/></name><argument_list pos:line="727" pos:column="14">(<argument><expr><name pos:line="727" pos:column="15">data<pos:position pos:line="727" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="727" pos:column="21">"Could not get Content-Type header line!"<pos:position pos:line="727" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="727" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="727" pos:column="64"/></expr_stmt>
        <return pos:line="728" pos:column="9">return <expr><name pos:line="728" pos:column="16">CURLE_HTTP_POST_ERROR<pos:position pos:line="728" pos:column="37"/></name></expr>;<pos:position pos:line="728" pos:column="38"/></return>
      }<pos:position pos:line="729" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="731" pos:column="7">result<pos:position pos:line="731" pos:column="13"/></name> <operator pos:line="731" pos:column="14">=<pos:position pos:line="731" pos:column="15"/></operator> <call><name pos:line="731" pos:column="16">Curl_add_buffer<pos:position pos:line="731" pos:column="31"/></name><argument_list pos:line="731" pos:column="31">(<argument><expr><name pos:line="731" pos:column="32">req_buffer<pos:position pos:line="731" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="731" pos:column="44">contentType<pos:position pos:line="731" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="731" pos:column="57">linelength<pos:position pos:line="731" pos:column="67"/></name></expr></argument>)<pos:position pos:line="731" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="69"/></expr_stmt>
      <if pos:line="732" pos:column="7">if<condition pos:line="732" pos:column="9">(<expr><name pos:line="732" pos:column="10">result<pos:position pos:line="732" pos:column="16"/></name></expr>)<pos:position pos:line="732" pos:column="17"/></condition><then pos:line="732" pos:column="17">
        <block type="pseudo"><return pos:line="733" pos:column="9">return <expr><name pos:line="733" pos:column="16">result<pos:position pos:line="733" pos:column="22"/></name></expr>;<pos:position pos:line="733" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="734" pos:column="6"/></block>

    <comment type="block" pos:line="736" pos:column="5">/* make the request end in a true CRLF */</comment>
    <expr_stmt><expr><name pos:line="737" pos:column="5">result<pos:position pos:line="737" pos:column="11"/></name> <operator pos:line="737" pos:column="12">=<pos:position pos:line="737" pos:column="13"/></operator> <call><name pos:line="737" pos:column="14">Curl_add_buffer<pos:position pos:line="737" pos:column="29"/></name><argument_list pos:line="737" pos:column="29">(<argument><expr><name pos:line="737" pos:column="30">req_buffer<pos:position pos:line="737" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="737" pos:column="42">"\r\n"<pos:position pos:line="737" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="737" pos:column="50">2<pos:position pos:line="737" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="737" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="737" pos:column="53"/></expr_stmt>
    <if pos:line="738" pos:column="5">if<condition pos:line="738" pos:column="7">(<expr><name pos:line="738" pos:column="8">result<pos:position pos:line="738" pos:column="14"/></name></expr>)<pos:position pos:line="738" pos:column="15"/></condition><then pos:line="738" pos:column="15">
      <block type="pseudo"><return pos:line="739" pos:column="7">return <expr><name pos:line="739" pos:column="14">result<pos:position pos:line="739" pos:column="20"/></name></expr>;<pos:position pos:line="739" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="741" pos:column="5">/* set upload size to the progress meter */</comment>
    <expr_stmt><expr><call><name pos:line="742" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="742" pos:column="27"/></name><argument_list pos:line="742" pos:column="27">(<argument><expr><name pos:line="742" pos:column="28">data<pos:position pos:line="742" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="742" pos:column="34">http<pos:position pos:line="742" pos:column="38"/></name><operator pos:line="742" pos:column="38">-&gt;<pos:position pos:line="742" pos:column="43"/></operator><name pos:line="742" pos:column="40">postsize<pos:position pos:line="742" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="742" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="742" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="744" pos:column="5">/* fire away the whole request to the server */</comment>
    <expr_stmt><expr><name pos:line="745" pos:column="5">result<pos:position pos:line="745" pos:column="11"/></name> <operator pos:line="745" pos:column="12">=<pos:position pos:line="745" pos:column="13"/></operator> <call><name pos:line="745" pos:column="14">Curl_add_buffer_send<pos:position pos:line="745" pos:column="34"/></name><argument_list pos:line="745" pos:column="34">(<argument><expr><name pos:line="745" pos:column="35">req_buffer<pos:position pos:line="745" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="745" pos:column="47">conn<pos:position pos:line="745" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="746" pos:column="35">&amp;<pos:position pos:line="746" pos:column="40"/></operator><name><name pos:line="746" pos:column="36">data<pos:position pos:line="746" pos:column="40"/></name><operator pos:line="746" pos:column="40">-&gt;<pos:position pos:line="746" pos:column="45"/></operator><name pos:line="746" pos:column="42">info<pos:position pos:line="746" pos:column="46"/></name><operator pos:line="746" pos:column="46">.<pos:position pos:line="746" pos:column="47"/></operator><name pos:line="746" pos:column="47">request_size<pos:position pos:line="746" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="746" pos:column="61">0<pos:position pos:line="746" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="746" pos:column="64">FIRSTSOCKET<pos:position pos:line="746" pos:column="75"/></name></expr></argument>)<pos:position pos:line="746" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="746" pos:column="77"/></expr_stmt>
    <if pos:line="747" pos:column="5">if<condition pos:line="747" pos:column="7">(<expr><name pos:line="747" pos:column="8">result<pos:position pos:line="747" pos:column="14"/></name></expr>)<pos:position pos:line="747" pos:column="15"/></condition><then pos:line="747" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="748" pos:column="7">failf<pos:position pos:line="748" pos:column="12"/></name><argument_list pos:line="748" pos:column="12">(<argument><expr><name pos:line="748" pos:column="13">data<pos:position pos:line="748" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="748" pos:column="19">"Failed sending POST request"<pos:position pos:line="748" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="748" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="748" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="749" pos:column="5">else
      <comment type="block" pos:line="750" pos:column="7">/* setup variables for the upcoming transfer */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="751" pos:column="7">Curl_setup_transfer<pos:position pos:line="751" pos:column="26"/></name><argument_list pos:line="751" pos:column="26">(<argument><expr><name pos:line="751" pos:column="27">conn<pos:position pos:line="751" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="751" pos:column="33">FIRSTSOCKET<pos:position pos:line="751" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="751" pos:column="46">-<pos:position pos:line="751" pos:column="47"/></operator><literal type="number" pos:line="751" pos:column="47">1<pos:position pos:line="751" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="751" pos:column="50">TRUE<pos:position pos:line="751" pos:column="54"/></name></expr></argument>,
                          <argument><expr><operator pos:line="752" pos:column="27">&amp;<pos:position pos:line="752" pos:column="32"/></operator><name><name pos:line="752" pos:column="28">http<pos:position pos:line="752" pos:column="32"/></name><operator pos:line="752" pos:column="32">-&gt;<pos:position pos:line="752" pos:column="37"/></operator><name pos:line="752" pos:column="34">readbytecount<pos:position pos:line="752" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="752" pos:column="49">FIRSTSOCKET<pos:position pos:line="752" pos:column="60"/></name></expr></argument>,
                          <argument><expr><operator pos:line="753" pos:column="27">&amp;<pos:position pos:line="753" pos:column="32"/></operator><name><name pos:line="753" pos:column="28">http<pos:position pos:line="753" pos:column="32"/></name><operator pos:line="753" pos:column="32">-&gt;<pos:position pos:line="753" pos:column="37"/></operator><name pos:line="753" pos:column="34">writebytecount<pos:position pos:line="753" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="753" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="753" pos:column="50"/></expr_stmt></block></else></if>

    <if pos:line="755" pos:column="5">if<condition pos:line="755" pos:column="7">(<expr><name pos:line="755" pos:column="8">result<pos:position pos:line="755" pos:column="14"/></name></expr>)<pos:position pos:line="755" pos:column="15"/></condition><then pos:line="755" pos:column="15"> <block pos:line="755" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="756" pos:column="7">Curl_formclean<pos:position pos:line="756" pos:column="21"/></name><argument_list pos:line="756" pos:column="21">(<argument><expr><operator pos:line="756" pos:column="22">&amp;<pos:position pos:line="756" pos:column="27"/></operator><name><name pos:line="756" pos:column="23">http<pos:position pos:line="756" pos:column="27"/></name><operator pos:line="756" pos:column="27">-&gt;<pos:position pos:line="756" pos:column="32"/></operator><name pos:line="756" pos:column="29">sendit<pos:position pos:line="756" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="756" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="756" pos:column="37"/></expr_stmt> <comment type="block" pos:line="756" pos:column="38">/* free that whole lot */</comment>
      <return pos:line="757" pos:column="7">return <expr><name pos:line="757" pos:column="14">result<pos:position pos:line="757" pos:column="20"/></name></expr>;<pos:position pos:line="757" pos:column="21"/></return>
    }<pos:position pos:line="758" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="760" pos:column="5">/* convert the form data */</comment>
    <expr_stmt><expr><name pos:line="761" pos:column="5">result<pos:position pos:line="761" pos:column="11"/></name> <operator pos:line="761" pos:column="12">=<pos:position pos:line="761" pos:column="13"/></operator> <call><name pos:line="761" pos:column="14">Curl_convert_form<pos:position pos:line="761" pos:column="31"/></name><argument_list pos:line="761" pos:column="31">(<argument><expr><name pos:line="761" pos:column="32">data<pos:position pos:line="761" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="761" pos:column="38">http<pos:position pos:line="761" pos:column="42"/></name><operator pos:line="761" pos:column="42">-&gt;<pos:position pos:line="761" pos:column="47"/></operator><name pos:line="761" pos:column="44">sendit<pos:position pos:line="761" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="761" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="761" pos:column="52"/></expr_stmt>
    <if pos:line="762" pos:column="5">if<condition pos:line="762" pos:column="7">(<expr><name pos:line="762" pos:column="8">result<pos:position pos:line="762" pos:column="14"/></name></expr>)<pos:position pos:line="762" pos:column="15"/></condition><then pos:line="762" pos:column="15"> <block pos:line="762" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="763" pos:column="7">Curl_formclean<pos:position pos:line="763" pos:column="21"/></name><argument_list pos:line="763" pos:column="21">(<argument><expr><operator pos:line="763" pos:column="22">&amp;<pos:position pos:line="763" pos:column="27"/></operator><name><name pos:line="763" pos:column="23">http<pos:position pos:line="763" pos:column="27"/></name><operator pos:line="763" pos:column="27">-&gt;<pos:position pos:line="763" pos:column="32"/></operator><name pos:line="763" pos:column="29">sendit<pos:position pos:line="763" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="763" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="763" pos:column="37"/></expr_stmt> <comment type="block" pos:line="763" pos:column="38">/* free that whole lot */</comment>
      <return pos:line="764" pos:column="7">return <expr><name pos:line="764" pos:column="14">result<pos:position pos:line="764" pos:column="20"/></name></expr>;<pos:position pos:line="764" pos:column="21"/></return>
    }<pos:position pos:line="765" pos:column="6"/></block></then></if>

    <break pos:line="767" pos:column="5">break;<pos:position pos:line="767" pos:column="11"/></break>

  <case pos:line="769" pos:column="3">case <expr><name pos:line="769" pos:column="8">HTTPREQ_PUT<pos:position pos:line="769" pos:column="19"/></name></expr>:<pos:position pos:line="769" pos:column="20"/></case> <comment type="block" pos:line="769" pos:column="21">/* Let's PUT the data to the server! */</comment>

    <if pos:line="771" pos:column="5">if<condition pos:line="771" pos:column="7">(<expr><name><name pos:line="771" pos:column="8">conn<pos:position pos:line="771" pos:column="12"/></name><operator pos:line="771" pos:column="12">-&gt;<pos:position pos:line="771" pos:column="17"/></operator><name pos:line="771" pos:column="14">bits<pos:position pos:line="771" pos:column="18"/></name><operator pos:line="771" pos:column="18">.<pos:position pos:line="771" pos:column="19"/></operator><name pos:line="771" pos:column="19">authneg<pos:position pos:line="771" pos:column="26"/></name></name></expr>)<pos:position pos:line="771" pos:column="27"/></condition><then pos:line="771" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="772" pos:column="7">postsize<pos:position pos:line="772" pos:column="15"/></name> <operator pos:line="772" pos:column="16">=<pos:position pos:line="772" pos:column="17"/></operator> <literal type="number" pos:line="772" pos:column="18">0<pos:position pos:line="772" pos:column="19"/></literal></expr>;<pos:position pos:line="772" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="773" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="774" pos:column="7">postsize<pos:position pos:line="774" pos:column="15"/></name> <operator pos:line="774" pos:column="16">=<pos:position pos:line="774" pos:column="17"/></operator> <name><name pos:line="774" pos:column="18">data<pos:position pos:line="774" pos:column="22"/></name><operator pos:line="774" pos:column="22">-&gt;<pos:position pos:line="774" pos:column="27"/></operator><name pos:line="774" pos:column="24">state<pos:position pos:line="774" pos:column="29"/></name><operator pos:line="774" pos:column="29">.<pos:position pos:line="774" pos:column="30"/></operator><name pos:line="774" pos:column="30">infilesize<pos:position pos:line="774" pos:column="40"/></name></name></expr>;<pos:position pos:line="774" pos:column="41"/></expr_stmt></block></else></if>

    <if pos:line="776" pos:column="5">if<condition pos:line="776" pos:column="7">(<expr><operator pos:line="776" pos:column="8">(<pos:position pos:line="776" pos:column="9"/></operator><name pos:line="776" pos:column="9">postsize<pos:position pos:line="776" pos:column="17"/></name> <operator pos:line="776" pos:column="18">!=<pos:position pos:line="776" pos:column="20"/></operator> <operator pos:line="776" pos:column="21">-<pos:position pos:line="776" pos:column="22"/></operator><literal type="number" pos:line="776" pos:column="22">1<pos:position pos:line="776" pos:column="23"/></literal><operator pos:line="776" pos:column="23">)<pos:position pos:line="776" pos:column="24"/></operator> <operator pos:line="776" pos:column="25">&amp;&amp;<pos:position pos:line="776" pos:column="35"/></operator> <operator pos:line="776" pos:column="28">!<pos:position pos:line="776" pos:column="29"/></operator><name><name pos:line="776" pos:column="29">data<pos:position pos:line="776" pos:column="33"/></name><operator pos:line="776" pos:column="33">-&gt;<pos:position pos:line="776" pos:column="38"/></operator><name pos:line="776" pos:column="35">req<pos:position pos:line="776" pos:column="38"/></name><operator pos:line="776" pos:column="38">.<pos:position pos:line="776" pos:column="39"/></operator><name pos:line="776" pos:column="39">upload_chunky<pos:position pos:line="776" pos:column="52"/></name></name> <operator pos:line="776" pos:column="53">&amp;&amp;<pos:position pos:line="776" pos:column="63"/></operator>
       <operator pos:line="777" pos:column="8">!<pos:position pos:line="777" pos:column="9"/></operator><call><name pos:line="777" pos:column="9">Curl_checkheaders<pos:position pos:line="777" pos:column="26"/></name><argument_list pos:line="777" pos:column="26">(<argument><expr><name pos:line="777" pos:column="27">conn<pos:position pos:line="777" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="777" pos:column="33">"Content-Length:"<pos:position pos:line="777" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="777" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="777" pos:column="52"/></condition><then pos:line="777" pos:column="52"> <block pos:line="777" pos:column="53">{
      <comment type="block" pos:line="778" pos:column="7">/* only add Content-Length if not uploading chunked */</comment>
      <expr_stmt><expr><name pos:line="779" pos:column="7">result<pos:position pos:line="779" pos:column="13"/></name> <operator pos:line="779" pos:column="14">=<pos:position pos:line="779" pos:column="15"/></operator> <call><name pos:line="779" pos:column="16">Curl_add_bufferf<pos:position pos:line="779" pos:column="32"/></name><argument_list pos:line="779" pos:column="32">(<argument><expr><name pos:line="779" pos:column="33">req_buffer<pos:position pos:line="779" pos:column="43"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="780" pos:column="33">"Content-Length: %"<pos:position pos:line="780" pos:column="52"/></literal> <name pos:line="780" pos:column="53">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="780" pos:column="75"/></name>
                                <literal type="string" pos:line="781" pos:column="33">"\r\n"<pos:position pos:line="781" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="781" pos:column="41">postsize<pos:position pos:line="781" pos:column="49"/></name></expr></argument>)<pos:position pos:line="781" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="781" pos:column="51"/></expr_stmt>
      <if pos:line="782" pos:column="7">if<condition pos:line="782" pos:column="9">(<expr><name pos:line="782" pos:column="10">result<pos:position pos:line="782" pos:column="16"/></name></expr>)<pos:position pos:line="782" pos:column="17"/></condition><then pos:line="782" pos:column="17">
        <block type="pseudo"><return pos:line="783" pos:column="9">return <expr><name pos:line="783" pos:column="16">result<pos:position pos:line="783" pos:column="22"/></name></expr>;<pos:position pos:line="783" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="784" pos:column="6"/></block></then></if>

    <if pos:line="786" pos:column="5">if<condition pos:line="786" pos:column="7">(<expr><name pos:line="786" pos:column="8">postsize<pos:position pos:line="786" pos:column="16"/></name> <operator pos:line="786" pos:column="17">!=<pos:position pos:line="786" pos:column="19"/></operator> <literal type="number" pos:line="786" pos:column="20">0<pos:position pos:line="786" pos:column="21"/></literal></expr>)<pos:position pos:line="786" pos:column="22"/></condition><then pos:line="786" pos:column="22"> <block pos:line="786" pos:column="23">{
      <expr_stmt><expr><name pos:line="787" pos:column="7">result<pos:position pos:line="787" pos:column="13"/></name> <operator pos:line="787" pos:column="14">=<pos:position pos:line="787" pos:column="15"/></operator> <call><name pos:line="787" pos:column="16">expect100<pos:position pos:line="787" pos:column="25"/></name><argument_list pos:line="787" pos:column="25">(<argument><expr><name pos:line="787" pos:column="26">data<pos:position pos:line="787" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="787" pos:column="32">conn<pos:position pos:line="787" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="787" pos:column="38">req_buffer<pos:position pos:line="787" pos:column="48"/></name></expr></argument>)<pos:position pos:line="787" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="787" pos:column="50"/></expr_stmt>
      <if pos:line="788" pos:column="7">if<condition pos:line="788" pos:column="9">(<expr><name pos:line="788" pos:column="10">result<pos:position pos:line="788" pos:column="16"/></name></expr>)<pos:position pos:line="788" pos:column="17"/></condition><then pos:line="788" pos:column="17">
        <block type="pseudo"><return pos:line="789" pos:column="9">return <expr><name pos:line="789" pos:column="16">result<pos:position pos:line="789" pos:column="22"/></name></expr>;<pos:position pos:line="789" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="790" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="792" pos:column="5">result<pos:position pos:line="792" pos:column="11"/></name> <operator pos:line="792" pos:column="12">=<pos:position pos:line="792" pos:column="13"/></operator> <call><name pos:line="792" pos:column="14">Curl_add_buffer<pos:position pos:line="792" pos:column="29"/></name><argument_list pos:line="792" pos:column="29">(<argument><expr><name pos:line="792" pos:column="30">req_buffer<pos:position pos:line="792" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="792" pos:column="42">"\r\n"<pos:position pos:line="792" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="792" pos:column="50">2<pos:position pos:line="792" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="792" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="792" pos:column="53"/></expr_stmt> <comment type="block" pos:line="792" pos:column="54">/* end of headers */</comment>
    <if pos:line="793" pos:column="5">if<condition pos:line="793" pos:column="7">(<expr><name pos:line="793" pos:column="8">result<pos:position pos:line="793" pos:column="14"/></name></expr>)<pos:position pos:line="793" pos:column="15"/></condition><then pos:line="793" pos:column="15">
      <block type="pseudo"><return pos:line="794" pos:column="7">return <expr><name pos:line="794" pos:column="14">result<pos:position pos:line="794" pos:column="20"/></name></expr>;<pos:position pos:line="794" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="796" pos:column="5">/* set the upload size to the progress meter */</comment>
    <expr_stmt><expr><call><name pos:line="797" pos:column="5">Curl_pgrsSetUploadSize<pos:position pos:line="797" pos:column="27"/></name><argument_list pos:line="797" pos:column="27">(<argument><expr><name pos:line="797" pos:column="28">data<pos:position pos:line="797" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="797" pos:column="34">postsize<pos:position pos:line="797" pos:column="42"/></name></expr></argument>)<pos:position pos:line="797" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="797" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="799" pos:column="5">/* this sends the buffer and frees all the buffer resources */</comment>
    <expr_stmt><expr><name pos:line="800" pos:column="5">result<pos:position pos:line="800" pos:column="11"/></name> <operator pos:line="800" pos:column="12">=<pos:position pos:line="800" pos:column="13"/></operator> <call><name pos:line="800" pos:column="14">Curl_add_buffer_send<pos:position pos:line="800" pos:column="34"/></name><argument_list pos:line="800" pos:column="34">(<argument><expr><name pos:line="800" pos:column="35">req_buffer<pos:position pos:line="800" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="800" pos:column="47">conn<pos:position pos:line="800" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="801" pos:column="35">&amp;<pos:position pos:line="801" pos:column="40"/></operator><name><name pos:line="801" pos:column="36">data<pos:position pos:line="801" pos:column="40"/></name><operator pos:line="801" pos:column="40">-&gt;<pos:position pos:line="801" pos:column="45"/></operator><name pos:line="801" pos:column="42">info<pos:position pos:line="801" pos:column="46"/></name><operator pos:line="801" pos:column="46">.<pos:position pos:line="801" pos:column="47"/></operator><name pos:line="801" pos:column="47">request_size<pos:position pos:line="801" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="801" pos:column="61">0<pos:position pos:line="801" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="801" pos:column="64">FIRSTSOCKET<pos:position pos:line="801" pos:column="75"/></name></expr></argument>)<pos:position pos:line="801" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="801" pos:column="77"/></expr_stmt>
    <if pos:line="802" pos:column="5">if<condition pos:line="802" pos:column="7">(<expr><name pos:line="802" pos:column="8">result<pos:position pos:line="802" pos:column="14"/></name></expr>)<pos:position pos:line="802" pos:column="15"/></condition><then pos:line="802" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="803" pos:column="7">failf<pos:position pos:line="803" pos:column="12"/></name><argument_list pos:line="803" pos:column="12">(<argument><expr><name pos:line="803" pos:column="13">data<pos:position pos:line="803" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="803" pos:column="19">"Failed sending PUT request"<pos:position pos:line="803" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="803" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="803" pos:column="49"/></expr_stmt></block></then>
    <else pos:line="804" pos:column="5">else
      <comment type="block" pos:line="805" pos:column="7">/* prepare for transfer */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="806" pos:column="7">Curl_setup_transfer<pos:position pos:line="806" pos:column="26"/></name><argument_list pos:line="806" pos:column="26">(<argument><expr><name pos:line="806" pos:column="27">conn<pos:position pos:line="806" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="806" pos:column="33">FIRSTSOCKET<pos:position pos:line="806" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="806" pos:column="46">-<pos:position pos:line="806" pos:column="47"/></operator><literal type="number" pos:line="806" pos:column="47">1<pos:position pos:line="806" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="806" pos:column="50">TRUE<pos:position pos:line="806" pos:column="54"/></name></expr></argument>,
                          <argument><expr><operator pos:line="807" pos:column="27">&amp;<pos:position pos:line="807" pos:column="32"/></operator><name><name pos:line="807" pos:column="28">http<pos:position pos:line="807" pos:column="32"/></name><operator pos:line="807" pos:column="32">-&gt;<pos:position pos:line="807" pos:column="37"/></operator><name pos:line="807" pos:column="34">readbytecount<pos:position pos:line="807" pos:column="47"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="807" pos:column="49">postsize<pos:position pos:line="807" pos:column="57"/></name></expr>?<pos:position pos:line="807" pos:column="58"/></condition><then><expr><name pos:line="807" pos:column="58">FIRSTSOCKET<pos:position pos:line="807" pos:column="69"/></name></expr></then><else pos:line="807" pos:column="69">:<expr><operator pos:line="807" pos:column="70">-<pos:position pos:line="807" pos:column="71"/></operator><literal type="number" pos:line="807" pos:column="71">1<pos:position pos:line="807" pos:column="72"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="808" pos:column="27">postsize<pos:position pos:line="808" pos:column="35"/></name></expr>?<pos:position pos:line="808" pos:column="36"/></condition><then><expr><operator pos:line="808" pos:column="36">&amp;<pos:position pos:line="808" pos:column="41"/></operator><name><name pos:line="808" pos:column="37">http<pos:position pos:line="808" pos:column="41"/></name><operator pos:line="808" pos:column="41">-&gt;<pos:position pos:line="808" pos:column="46"/></operator><name pos:line="808" pos:column="43">writebytecount<pos:position pos:line="808" pos:column="57"/></name></name></expr></then><else pos:line="808" pos:column="57">:<expr><name pos:line="808" pos:column="58">NULL<pos:position pos:line="808" pos:column="62"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="808" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="64"/></expr_stmt></block></else></if>
    <if pos:line="809" pos:column="5">if<condition pos:line="809" pos:column="7">(<expr><name pos:line="809" pos:column="8">result<pos:position pos:line="809" pos:column="14"/></name></expr>)<pos:position pos:line="809" pos:column="15"/></condition><then pos:line="809" pos:column="15">
      <block type="pseudo"><return pos:line="810" pos:column="7">return <expr><name pos:line="810" pos:column="14">result<pos:position pos:line="810" pos:column="20"/></name></expr>;<pos:position pos:line="810" pos:column="21"/></return></block></then></if>
    <break pos:line="811" pos:column="5">break;<pos:position pos:line="811" pos:column="11"/></break>

  <case pos:line="813" pos:column="3">case <expr><name pos:line="813" pos:column="8">HTTPREQ_POST<pos:position pos:line="813" pos:column="20"/></name></expr>:<pos:position pos:line="813" pos:column="21"/></case>
    <comment type="block" pos:line="814" pos:column="5">/* this is the simple POST, using x-www-form-urlencoded style */</comment>

    <if pos:line="816" pos:column="5">if<condition pos:line="816" pos:column="7">(<expr><name><name pos:line="816" pos:column="8">conn<pos:position pos:line="816" pos:column="12"/></name><operator pos:line="816" pos:column="12">-&gt;<pos:position pos:line="816" pos:column="17"/></operator><name pos:line="816" pos:column="14">bits<pos:position pos:line="816" pos:column="18"/></name><operator pos:line="816" pos:column="18">.<pos:position pos:line="816" pos:column="19"/></operator><name pos:line="816" pos:column="19">authneg<pos:position pos:line="816" pos:column="26"/></name></name></expr>)<pos:position pos:line="816" pos:column="27"/></condition><then pos:line="816" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="817" pos:column="7">postsize<pos:position pos:line="817" pos:column="15"/></name> <operator pos:line="817" pos:column="16">=<pos:position pos:line="817" pos:column="17"/></operator> <literal type="number" pos:line="817" pos:column="18">0<pos:position pos:line="817" pos:column="19"/></literal></expr>;<pos:position pos:line="817" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="818" pos:column="5">else <block pos:line="818" pos:column="10">{
      <comment type="block" pos:line="819" pos:column="7">/* figure out the size of the postfields */</comment>
      <expr_stmt><expr><name pos:line="820" pos:column="7">postsize<pos:position pos:line="820" pos:column="15"/></name> <operator pos:line="820" pos:column="16">=<pos:position pos:line="820" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="820" pos:column="18">(<pos:position pos:line="820" pos:column="19"/></operator><name><name pos:line="820" pos:column="19">data<pos:position pos:line="820" pos:column="23"/></name><operator pos:line="820" pos:column="23">-&gt;<pos:position pos:line="820" pos:column="28"/></operator><name pos:line="820" pos:column="25">set<pos:position pos:line="820" pos:column="28"/></name><operator pos:line="820" pos:column="28">.<pos:position pos:line="820" pos:column="29"/></operator><name pos:line="820" pos:column="29">postfieldsize<pos:position pos:line="820" pos:column="42"/></name></name> <operator pos:line="820" pos:column="43">!=<pos:position pos:line="820" pos:column="45"/></operator> <operator pos:line="820" pos:column="46">-<pos:position pos:line="820" pos:column="47"/></operator><literal type="number" pos:line="820" pos:column="47">1<pos:position pos:line="820" pos:column="48"/></literal><operator pos:line="820" pos:column="48">)<pos:position pos:line="820" pos:column="49"/></operator></expr>?<pos:position pos:line="820" pos:column="50"/></condition><then pos:line="820" pos:column="50">
        <expr><name><name pos:line="821" pos:column="9">data<pos:position pos:line="821" pos:column="13"/></name><operator pos:line="821" pos:column="13">-&gt;<pos:position pos:line="821" pos:column="18"/></operator><name pos:line="821" pos:column="15">set<pos:position pos:line="821" pos:column="18"/></name><operator pos:line="821" pos:column="18">.<pos:position pos:line="821" pos:column="19"/></operator><name pos:line="821" pos:column="19">postfieldsize<pos:position pos:line="821" pos:column="32"/></name></name></expr></then><else pos:line="821" pos:column="32">:
        <expr><operator pos:line="822" pos:column="9">(<pos:position pos:line="822" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="822" pos:column="10">data<pos:position pos:line="822" pos:column="14"/></name><operator pos:line="822" pos:column="14">-&gt;<pos:position pos:line="822" pos:column="19"/></operator><name pos:line="822" pos:column="16">set<pos:position pos:line="822" pos:column="19"/></name><operator pos:line="822" pos:column="19">.<pos:position pos:line="822" pos:column="20"/></operator><name pos:line="822" pos:column="20">postfields<pos:position pos:line="822" pos:column="30"/></name></name></expr>?<pos:position pos:line="822" pos:column="31"/></condition><then pos:line="822" pos:column="31"> <expr><operator pos:line="822" pos:column="32">(<pos:position pos:line="822" pos:column="33"/></operator><name pos:line="822" pos:column="33">curl_off_t<pos:position pos:line="822" pos:column="43"/></name><operator pos:line="822" pos:column="43">)<pos:position pos:line="822" pos:column="44"/></operator><call><name pos:line="822" pos:column="44">strlen<pos:position pos:line="822" pos:column="50"/></name><argument_list pos:line="822" pos:column="50">(<argument><expr><name><name pos:line="822" pos:column="51">data<pos:position pos:line="822" pos:column="55"/></name><operator pos:line="822" pos:column="55">-&gt;<pos:position pos:line="822" pos:column="60"/></operator><name pos:line="822" pos:column="57">set<pos:position pos:line="822" pos:column="60"/></name><operator pos:line="822" pos:column="60">.<pos:position pos:line="822" pos:column="61"/></operator><name pos:line="822" pos:column="61">postfields<pos:position pos:line="822" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="822" pos:column="72"/></argument_list></call></expr></then><else pos:line="822" pos:column="72">:<expr><operator pos:line="822" pos:column="73">-<pos:position pos:line="822" pos:column="74"/></operator><literal type="number" pos:line="822" pos:column="74">1<pos:position pos:line="822" pos:column="75"/></literal></expr></else></ternary><operator pos:line="822" pos:column="75">)<pos:position pos:line="822" pos:column="76"/></operator></expr></else></ternary></expr>;<pos:position pos:line="822" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="823" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="825" pos:column="5">/* We only set Content-Length and allow a custom Content-Length if
       we don't upload data chunked, as RFC2616 forbids us to set both
       kinds of headers (Transfer-Encoding: chunked and Content-Length) */</comment>
    <if pos:line="828" pos:column="5">if<condition pos:line="828" pos:column="7">(<expr><operator pos:line="828" pos:column="8">(<pos:position pos:line="828" pos:column="9"/></operator><name pos:line="828" pos:column="9">postsize<pos:position pos:line="828" pos:column="17"/></name> <operator pos:line="828" pos:column="18">!=<pos:position pos:line="828" pos:column="20"/></operator> <operator pos:line="828" pos:column="21">-<pos:position pos:line="828" pos:column="22"/></operator><literal type="number" pos:line="828" pos:column="22">1<pos:position pos:line="828" pos:column="23"/></literal><operator pos:line="828" pos:column="23">)<pos:position pos:line="828" pos:column="24"/></operator> <operator pos:line="828" pos:column="25">&amp;&amp;<pos:position pos:line="828" pos:column="35"/></operator> <operator pos:line="828" pos:column="28">!<pos:position pos:line="828" pos:column="29"/></operator><name><name pos:line="828" pos:column="29">data<pos:position pos:line="828" pos:column="33"/></name><operator pos:line="828" pos:column="33">-&gt;<pos:position pos:line="828" pos:column="38"/></operator><name pos:line="828" pos:column="35">req<pos:position pos:line="828" pos:column="38"/></name><operator pos:line="828" pos:column="38">.<pos:position pos:line="828" pos:column="39"/></operator><name pos:line="828" pos:column="39">upload_chunky<pos:position pos:line="828" pos:column="52"/></name></name> <operator pos:line="828" pos:column="53">&amp;&amp;<pos:position pos:line="828" pos:column="63"/></operator>
       <operator pos:line="829" pos:column="8">!<pos:position pos:line="829" pos:column="9"/></operator><call><name pos:line="829" pos:column="9">Curl_checkheaders<pos:position pos:line="829" pos:column="26"/></name><argument_list pos:line="829" pos:column="26">(<argument><expr><name pos:line="829" pos:column="27">conn<pos:position pos:line="829" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="829" pos:column="33">"Content-Length:"<pos:position pos:line="829" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="829" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="829" pos:column="52"/></condition><then pos:line="829" pos:column="52"> <block pos:line="829" pos:column="53">{
      <comment type="block" pos:line="830" pos:column="7">/* we allow replacing this header if not during auth negotiation,
         although it isn't very wise to actually set your own */</comment>
      <expr_stmt><expr><name pos:line="832" pos:column="7">result<pos:position pos:line="832" pos:column="13"/></name> <operator pos:line="832" pos:column="14">=<pos:position pos:line="832" pos:column="15"/></operator> <call><name pos:line="832" pos:column="16">Curl_add_bufferf<pos:position pos:line="832" pos:column="32"/></name><argument_list pos:line="832" pos:column="32">(<argument><expr><name pos:line="832" pos:column="33">req_buffer<pos:position pos:line="832" pos:column="43"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="833" pos:column="33">"Content-Length: %"<pos:position pos:line="833" pos:column="52"/></literal> <name pos:line="833" pos:column="53">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="833" pos:column="75"/></name>
                                <literal type="string" pos:line="834" pos:column="33">"\r\n"<pos:position pos:line="834" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="834" pos:column="41">postsize<pos:position pos:line="834" pos:column="49"/></name></expr></argument>)<pos:position pos:line="834" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="834" pos:column="51"/></expr_stmt>
      <if pos:line="835" pos:column="7">if<condition pos:line="835" pos:column="9">(<expr><name pos:line="835" pos:column="10">result<pos:position pos:line="835" pos:column="16"/></name></expr>)<pos:position pos:line="835" pos:column="17"/></condition><then pos:line="835" pos:column="17">
        <block type="pseudo"><return pos:line="836" pos:column="9">return <expr><name pos:line="836" pos:column="16">result<pos:position pos:line="836" pos:column="22"/></name></expr>;<pos:position pos:line="836" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="837" pos:column="6"/></block></then></if>

    <if pos:line="839" pos:column="5">if<condition pos:line="839" pos:column="7">(<expr><operator pos:line="839" pos:column="8">!<pos:position pos:line="839" pos:column="9"/></operator><call><name pos:line="839" pos:column="9">Curl_checkheaders<pos:position pos:line="839" pos:column="26"/></name><argument_list pos:line="839" pos:column="26">(<argument><expr><name pos:line="839" pos:column="27">conn<pos:position pos:line="839" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="839" pos:column="33">"Content-Type:"<pos:position pos:line="839" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="839" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="839" pos:column="50"/></condition><then pos:line="839" pos:column="50"> <block pos:line="839" pos:column="51">{
      <expr_stmt><expr><name pos:line="840" pos:column="7">result<pos:position pos:line="840" pos:column="13"/></name> <operator pos:line="840" pos:column="14">=<pos:position pos:line="840" pos:column="15"/></operator> <call><name pos:line="840" pos:column="16">Curl_add_bufferf<pos:position pos:line="840" pos:column="32"/></name><argument_list pos:line="840" pos:column="32">(<argument><expr><name pos:line="840" pos:column="33">req_buffer<pos:position pos:line="840" pos:column="43"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="841" pos:column="33">"Content-Type: application/"<pos:position pos:line="841" pos:column="61"/></literal>
                                <literal type="string" pos:line="842" pos:column="33">"x-www-form-urlencoded\r\n"<pos:position pos:line="842" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="842" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="842" pos:column="62"/></expr_stmt>
      <if pos:line="843" pos:column="7">if<condition pos:line="843" pos:column="9">(<expr><name pos:line="843" pos:column="10">result<pos:position pos:line="843" pos:column="16"/></name></expr>)<pos:position pos:line="843" pos:column="17"/></condition><then pos:line="843" pos:column="17">
        <block type="pseudo"><return pos:line="844" pos:column="9">return <expr><name pos:line="844" pos:column="16">result<pos:position pos:line="844" pos:column="22"/></name></expr>;<pos:position pos:line="844" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="845" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="847" pos:column="5">/* For really small posts we don't use Expect: headers at all, and for
       the somewhat bigger ones we allow the app to disable it. Just make
       sure that the expect100header is always set to the preferred value
       here. */</comment>
    <expr_stmt><expr><name pos:line="851" pos:column="5">ptr<pos:position pos:line="851" pos:column="8"/></name> <operator pos:line="851" pos:column="9">=<pos:position pos:line="851" pos:column="10"/></operator> <call><name pos:line="851" pos:column="11">Curl_checkheaders<pos:position pos:line="851" pos:column="28"/></name><argument_list pos:line="851" pos:column="28">(<argument><expr><name pos:line="851" pos:column="29">conn<pos:position pos:line="851" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="851" pos:column="35">"Expect:"<pos:position pos:line="851" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="851" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="851" pos:column="46"/></expr_stmt>
    <if pos:line="852" pos:column="5">if<condition pos:line="852" pos:column="7">(<expr><name pos:line="852" pos:column="8">ptr<pos:position pos:line="852" pos:column="11"/></name></expr>)<pos:position pos:line="852" pos:column="12"/></condition><then pos:line="852" pos:column="12"> <block pos:line="852" pos:column="13">{
      <expr_stmt><expr><name><name pos:line="853" pos:column="7">data<pos:position pos:line="853" pos:column="11"/></name><operator pos:line="853" pos:column="11">-&gt;<pos:position pos:line="853" pos:column="16"/></operator><name pos:line="853" pos:column="13">state<pos:position pos:line="853" pos:column="18"/></name><operator pos:line="853" pos:column="18">.<pos:position pos:line="853" pos:column="19"/></operator><name pos:line="853" pos:column="19">expect100header<pos:position pos:line="853" pos:column="34"/></name></name> <operator pos:line="853" pos:column="35">=<pos:position pos:line="853" pos:column="36"/></operator>
        <call><name pos:line="854" pos:column="9">Curl_compareheader<pos:position pos:line="854" pos:column="27"/></name><argument_list pos:line="854" pos:column="27">(<argument><expr><name pos:line="854" pos:column="28">ptr<pos:position pos:line="854" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="854" pos:column="33">"Expect:"<pos:position pos:line="854" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="854" pos:column="44">"100-continue"<pos:position pos:line="854" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="854" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="854" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="855" pos:column="6"/></block></then>
    <elseif pos:line="856" pos:column="5">else <if pos:line="856" pos:column="10">if<condition pos:line="856" pos:column="12">(<expr><name pos:line="856" pos:column="13">postsize<pos:position pos:line="856" pos:column="21"/></name> <operator pos:line="856" pos:column="22">&gt;<pos:position pos:line="856" pos:column="26"/></operator> <name pos:line="856" pos:column="24">TINY_INITIAL_POST_SIZE<pos:position pos:line="856" pos:column="46"/></name> <operator pos:line="856" pos:column="47">||<pos:position pos:line="856" pos:column="49"/></operator> <name pos:line="856" pos:column="50">postsize<pos:position pos:line="856" pos:column="58"/></name> <operator pos:line="856" pos:column="59">&lt;<pos:position pos:line="856" pos:column="63"/></operator> <literal type="number" pos:line="856" pos:column="61">0<pos:position pos:line="856" pos:column="62"/></literal></expr>)<pos:position pos:line="856" pos:column="63"/></condition><then pos:line="856" pos:column="63"> <block pos:line="856" pos:column="64">{
      <expr_stmt><expr><name pos:line="857" pos:column="7">result<pos:position pos:line="857" pos:column="13"/></name> <operator pos:line="857" pos:column="14">=<pos:position pos:line="857" pos:column="15"/></operator> <call><name pos:line="857" pos:column="16">expect100<pos:position pos:line="857" pos:column="25"/></name><argument_list pos:line="857" pos:column="25">(<argument><expr><name pos:line="857" pos:column="26">data<pos:position pos:line="857" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="857" pos:column="32">conn<pos:position pos:line="857" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="857" pos:column="38">req_buffer<pos:position pos:line="857" pos:column="48"/></name></expr></argument>)<pos:position pos:line="857" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="857" pos:column="50"/></expr_stmt>
      <if pos:line="858" pos:column="7">if<condition pos:line="858" pos:column="9">(<expr><name pos:line="858" pos:column="10">result<pos:position pos:line="858" pos:column="16"/></name></expr>)<pos:position pos:line="858" pos:column="17"/></condition><then pos:line="858" pos:column="17">
        <block type="pseudo"><return pos:line="859" pos:column="9">return <expr><name pos:line="859" pos:column="16">result<pos:position pos:line="859" pos:column="22"/></name></expr>;<pos:position pos:line="859" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="860" pos:column="6"/></block></then></if></elseif>
    <else pos:line="861" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="862" pos:column="7">data<pos:position pos:line="862" pos:column="11"/></name><operator pos:line="862" pos:column="11">-&gt;<pos:position pos:line="862" pos:column="16"/></operator><name pos:line="862" pos:column="13">state<pos:position pos:line="862" pos:column="18"/></name><operator pos:line="862" pos:column="18">.<pos:position pos:line="862" pos:column="19"/></operator><name pos:line="862" pos:column="19">expect100header<pos:position pos:line="862" pos:column="34"/></name></name> <operator pos:line="862" pos:column="35">=<pos:position pos:line="862" pos:column="36"/></operator> <name pos:line="862" pos:column="37">FALSE<pos:position pos:line="862" pos:column="42"/></name></expr>;<pos:position pos:line="862" pos:column="43"/></expr_stmt></block></else></if>

    <if pos:line="864" pos:column="5">if<condition pos:line="864" pos:column="7">(<expr><name><name pos:line="864" pos:column="8">data<pos:position pos:line="864" pos:column="12"/></name><operator pos:line="864" pos:column="12">-&gt;<pos:position pos:line="864" pos:column="17"/></operator><name pos:line="864" pos:column="14">set<pos:position pos:line="864" pos:column="17"/></name><operator pos:line="864" pos:column="17">.<pos:position pos:line="864" pos:column="18"/></operator><name pos:line="864" pos:column="18">postfields<pos:position pos:line="864" pos:column="28"/></name></name></expr>)<pos:position pos:line="864" pos:column="29"/></condition><then pos:line="864" pos:column="29"> <block pos:line="864" pos:column="30">{

      <comment type="block" pos:line="866" pos:column="7">/* In HTTP2, we send request body in DATA frame regardless of
         its size. */</comment>
      <if pos:line="868" pos:column="7">if<condition pos:line="868" pos:column="9">(<expr><name><name pos:line="868" pos:column="10">conn<pos:position pos:line="868" pos:column="14"/></name><operator pos:line="868" pos:column="14">-&gt;<pos:position pos:line="868" pos:column="19"/></operator><name pos:line="868" pos:column="16">httpversion<pos:position pos:line="868" pos:column="27"/></name></name> <operator pos:line="868" pos:column="28">!=<pos:position pos:line="868" pos:column="30"/></operator> <literal type="number" pos:line="868" pos:column="31">20<pos:position pos:line="868" pos:column="33"/></literal> <operator pos:line="868" pos:column="34">&amp;&amp;<pos:position pos:line="868" pos:column="44"/></operator>
         <operator pos:line="869" pos:column="10">!<pos:position pos:line="869" pos:column="11"/></operator><name><name pos:line="869" pos:column="11">data<pos:position pos:line="869" pos:column="15"/></name><operator pos:line="869" pos:column="15">-&gt;<pos:position pos:line="869" pos:column="20"/></operator><name pos:line="869" pos:column="17">state<pos:position pos:line="869" pos:column="22"/></name><operator pos:line="869" pos:column="22">.<pos:position pos:line="869" pos:column="23"/></operator><name pos:line="869" pos:column="23">expect100header<pos:position pos:line="869" pos:column="38"/></name></name> <operator pos:line="869" pos:column="39">&amp;&amp;<pos:position pos:line="869" pos:column="49"/></operator>
         <operator pos:line="870" pos:column="10">(<pos:position pos:line="870" pos:column="11"/></operator><name pos:line="870" pos:column="11">postsize<pos:position pos:line="870" pos:column="19"/></name> <operator pos:line="870" pos:column="20">&lt;<pos:position pos:line="870" pos:column="24"/></operator> <name pos:line="870" pos:column="22">MAX_INITIAL_POST_SIZE<pos:position pos:line="870" pos:column="43"/></name><operator pos:line="870" pos:column="43">)<pos:position pos:line="870" pos:column="44"/></operator></expr>)<pos:position pos:line="870" pos:column="45"/></condition><then pos:line="870" pos:column="45">  <block pos:line="870" pos:column="47">{
        <comment type="block" pos:line="871" pos:column="9">/* if we don't use expect: 100  AND
           postsize is less than MAX_INITIAL_POST_SIZE

           then append the post data to the HTTP request header. This limit
           is no magic limit but only set to prevent really huge POSTs to
           get the data duplicated with malloc() and family. */</comment>

        <expr_stmt><expr><name pos:line="878" pos:column="9">result<pos:position pos:line="878" pos:column="15"/></name> <operator pos:line="878" pos:column="16">=<pos:position pos:line="878" pos:column="17"/></operator> <call><name pos:line="878" pos:column="18">Curl_add_buffer<pos:position pos:line="878" pos:column="33"/></name><argument_list pos:line="878" pos:column="33">(<argument><expr><name pos:line="878" pos:column="34">req_buffer<pos:position pos:line="878" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="878" pos:column="46">"\r\n"<pos:position pos:line="878" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="878" pos:column="54">2<pos:position pos:line="878" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="878" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="878" pos:column="57"/></expr_stmt> <comment type="block" pos:line="878" pos:column="58">/* end of headers! */</comment>
        <if pos:line="879" pos:column="9">if<condition pos:line="879" pos:column="11">(<expr><name pos:line="879" pos:column="12">result<pos:position pos:line="879" pos:column="18"/></name></expr>)<pos:position pos:line="879" pos:column="19"/></condition><then pos:line="879" pos:column="19">
          <block type="pseudo"><return pos:line="880" pos:column="11">return <expr><name pos:line="880" pos:column="18">result<pos:position pos:line="880" pos:column="24"/></name></expr>;<pos:position pos:line="880" pos:column="25"/></return></block></then></if>

        <if pos:line="882" pos:column="9">if<condition pos:line="882" pos:column="11">(<expr><operator pos:line="882" pos:column="12">!<pos:position pos:line="882" pos:column="13"/></operator><name><name pos:line="882" pos:column="13">data<pos:position pos:line="882" pos:column="17"/></name><operator pos:line="882" pos:column="17">-&gt;<pos:position pos:line="882" pos:column="22"/></operator><name pos:line="882" pos:column="19">req<pos:position pos:line="882" pos:column="22"/></name><operator pos:line="882" pos:column="22">.<pos:position pos:line="882" pos:column="23"/></operator><name pos:line="882" pos:column="23">upload_chunky<pos:position pos:line="882" pos:column="36"/></name></name></expr>)<pos:position pos:line="882" pos:column="37"/></condition><then pos:line="882" pos:column="37"> <block pos:line="882" pos:column="38">{
          <comment type="block" pos:line="883" pos:column="11">/* We're not sending it 'chunked', append it to the request
             already now to reduce the number if send() calls */</comment>
          <expr_stmt><expr><name pos:line="885" pos:column="11">result<pos:position pos:line="885" pos:column="17"/></name> <operator pos:line="885" pos:column="18">=<pos:position pos:line="885" pos:column="19"/></operator> <call><name pos:line="885" pos:column="20">Curl_add_buffer<pos:position pos:line="885" pos:column="35"/></name><argument_list pos:line="885" pos:column="35">(<argument><expr><name pos:line="885" pos:column="36">req_buffer<pos:position pos:line="885" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="885" pos:column="48">data<pos:position pos:line="885" pos:column="52"/></name><operator pos:line="885" pos:column="52">-&gt;<pos:position pos:line="885" pos:column="57"/></operator><name pos:line="885" pos:column="54">set<pos:position pos:line="885" pos:column="57"/></name><operator pos:line="885" pos:column="57">.<pos:position pos:line="885" pos:column="58"/></operator><name pos:line="885" pos:column="58">postfields<pos:position pos:line="885" pos:column="68"/></name></name></expr></argument>,
                                   <argument><expr><operator pos:line="886" pos:column="36">(<pos:position pos:line="886" pos:column="37"/></operator><name pos:line="886" pos:column="37">size_t<pos:position pos:line="886" pos:column="43"/></name><operator pos:line="886" pos:column="43">)<pos:position pos:line="886" pos:column="44"/></operator><name pos:line="886" pos:column="44">postsize<pos:position pos:line="886" pos:column="52"/></name></expr></argument>)<pos:position pos:line="886" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="886" pos:column="54"/></expr_stmt>
          <expr_stmt><expr><name pos:line="887" pos:column="11">included_body<pos:position pos:line="887" pos:column="24"/></name> <operator pos:line="887" pos:column="25">=<pos:position pos:line="887" pos:column="26"/></operator> <name pos:line="887" pos:column="27">postsize<pos:position pos:line="887" pos:column="35"/></name></expr>;<pos:position pos:line="887" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="888" pos:column="10"/></block></then>
        <else pos:line="889" pos:column="9">else <block pos:line="889" pos:column="14">{
          <if pos:line="890" pos:column="11">if<condition pos:line="890" pos:column="13">(<expr><name pos:line="890" pos:column="14">postsize<pos:position pos:line="890" pos:column="22"/></name></expr>)<pos:position pos:line="890" pos:column="23"/></condition><then pos:line="890" pos:column="23"> <block pos:line="890" pos:column="24">{
            <comment type="block" pos:line="891" pos:column="13">/* Append the POST data chunky-style */</comment>
            <expr_stmt><expr><name pos:line="892" pos:column="13">result<pos:position pos:line="892" pos:column="19"/></name> <operator pos:line="892" pos:column="20">=<pos:position pos:line="892" pos:column="21"/></operator> <call><name pos:line="892" pos:column="22">Curl_add_bufferf<pos:position pos:line="892" pos:column="38"/></name><argument_list pos:line="892" pos:column="38">(<argument><expr><name pos:line="892" pos:column="39">req_buffer<pos:position pos:line="892" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="892" pos:column="51">"%x\r\n"<pos:position pos:line="892" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="892" pos:column="61">(<pos:position pos:line="892" pos:column="62"/></operator><name pos:line="892" pos:column="62">int<pos:position pos:line="892" pos:column="65"/></name><operator pos:line="892" pos:column="65">)<pos:position pos:line="892" pos:column="66"/></operator><name pos:line="892" pos:column="66">postsize<pos:position pos:line="892" pos:column="74"/></name></expr></argument>)<pos:position pos:line="892" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="892" pos:column="76"/></expr_stmt>
            <if pos:line="893" pos:column="13">if<condition pos:line="893" pos:column="15">(<expr><operator pos:line="893" pos:column="16">!<pos:position pos:line="893" pos:column="17"/></operator><name pos:line="893" pos:column="17">result<pos:position pos:line="893" pos:column="23"/></name></expr>)<pos:position pos:line="893" pos:column="24"/></condition><then pos:line="893" pos:column="24"> <block pos:line="893" pos:column="25">{
              <expr_stmt><expr><name pos:line="894" pos:column="15">result<pos:position pos:line="894" pos:column="21"/></name> <operator pos:line="894" pos:column="22">=<pos:position pos:line="894" pos:column="23"/></operator> <call><name pos:line="894" pos:column="24">Curl_add_buffer<pos:position pos:line="894" pos:column="39"/></name><argument_list pos:line="894" pos:column="39">(<argument><expr><name pos:line="894" pos:column="40">req_buffer<pos:position pos:line="894" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="894" pos:column="52">data<pos:position pos:line="894" pos:column="56"/></name><operator pos:line="894" pos:column="56">-&gt;<pos:position pos:line="894" pos:column="61"/></operator><name pos:line="894" pos:column="58">set<pos:position pos:line="894" pos:column="61"/></name><operator pos:line="894" pos:column="61">.<pos:position pos:line="894" pos:column="62"/></operator><name pos:line="894" pos:column="62">postfields<pos:position pos:line="894" pos:column="72"/></name></name></expr></argument>,
                                       <argument><expr><operator pos:line="895" pos:column="40">(<pos:position pos:line="895" pos:column="41"/></operator><name pos:line="895" pos:column="41">size_t<pos:position pos:line="895" pos:column="47"/></name><operator pos:line="895" pos:column="47">)<pos:position pos:line="895" pos:column="48"/></operator><name pos:line="895" pos:column="48">postsize<pos:position pos:line="895" pos:column="56"/></name></expr></argument>)<pos:position pos:line="895" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="895" pos:column="58"/></expr_stmt>
              <if pos:line="896" pos:column="15">if<condition pos:line="896" pos:column="17">(<expr><operator pos:line="896" pos:column="18">!<pos:position pos:line="896" pos:column="19"/></operator><name pos:line="896" pos:column="19">result<pos:position pos:line="896" pos:column="25"/></name></expr>)<pos:position pos:line="896" pos:column="26"/></condition><then pos:line="896" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><name pos:line="897" pos:column="17">result<pos:position pos:line="897" pos:column="23"/></name> <operator pos:line="897" pos:column="24">=<pos:position pos:line="897" pos:column="25"/></operator> <call><name pos:line="897" pos:column="26">Curl_add_buffer<pos:position pos:line="897" pos:column="41"/></name><argument_list pos:line="897" pos:column="41">(<argument><expr><name pos:line="897" pos:column="42">req_buffer<pos:position pos:line="897" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="897" pos:column="54">"\r\n"<pos:position pos:line="897" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="897" pos:column="62">2<pos:position pos:line="897" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="897" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="897" pos:column="65"/></expr_stmt></block></then></if>
              <expr_stmt><expr><name pos:line="898" pos:column="15">included_body<pos:position pos:line="898" pos:column="28"/></name> <operator pos:line="898" pos:column="29">=<pos:position pos:line="898" pos:column="30"/></operator> <name pos:line="898" pos:column="31">postsize<pos:position pos:line="898" pos:column="39"/></name> <operator pos:line="898" pos:column="40">+<pos:position pos:line="898" pos:column="41"/></operator> <literal type="number" pos:line="898" pos:column="42">2<pos:position pos:line="898" pos:column="43"/></literal></expr>;<pos:position pos:line="898" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="899" pos:column="14"/></block></then></if>
          }<pos:position pos:line="900" pos:column="12"/></block></then></if>
          <if pos:line="901" pos:column="11">if<condition pos:line="901" pos:column="13">(<expr><operator pos:line="901" pos:column="14">!<pos:position pos:line="901" pos:column="15"/></operator><name pos:line="901" pos:column="15">result<pos:position pos:line="901" pos:column="21"/></name></expr>)<pos:position pos:line="901" pos:column="22"/></condition><then pos:line="901" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="902" pos:column="13">result<pos:position pos:line="902" pos:column="19"/></name> <operator pos:line="902" pos:column="20">=<pos:position pos:line="902" pos:column="21"/></operator> <call><name pos:line="902" pos:column="22">Curl_add_buffer<pos:position pos:line="902" pos:column="37"/></name><argument_list pos:line="902" pos:column="37">(<argument><expr><name pos:line="902" pos:column="38">req_buffer<pos:position pos:line="902" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="902" pos:column="50">"\x30\x0d\x0a\x0d\x0a"<pos:position pos:line="902" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="902" pos:column="74">5<pos:position pos:line="902" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="902" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="902" pos:column="77"/></expr_stmt></block></then></if>
          <comment type="block" pos:line="903" pos:column="11">/* 0  CR  LF  CR  LF */</comment>
          <expr_stmt><expr><name pos:line="904" pos:column="11">included_body<pos:position pos:line="904" pos:column="24"/></name> <operator pos:line="904" pos:column="25">+=<pos:position pos:line="904" pos:column="27"/></operator> <literal type="number" pos:line="904" pos:column="28">5<pos:position pos:line="904" pos:column="29"/></literal></expr>;<pos:position pos:line="904" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="905" pos:column="10"/></block></else></if>
        <if pos:line="906" pos:column="9">if<condition pos:line="906" pos:column="11">(<expr><name pos:line="906" pos:column="12">result<pos:position pos:line="906" pos:column="18"/></name></expr>)<pos:position pos:line="906" pos:column="19"/></condition><then pos:line="906" pos:column="19">
          <block type="pseudo"><return pos:line="907" pos:column="11">return <expr><name pos:line="907" pos:column="18">result<pos:position pos:line="907" pos:column="24"/></name></expr>;<pos:position pos:line="907" pos:column="25"/></return></block></then></if>
        <comment type="block" pos:line="908" pos:column="9">/* Make sure the progress information is accurate */</comment>
        <expr_stmt><expr><call><name pos:line="909" pos:column="9">Curl_pgrsSetUploadSize<pos:position pos:line="909" pos:column="31"/></name><argument_list pos:line="909" pos:column="31">(<argument><expr><name pos:line="909" pos:column="32">data<pos:position pos:line="909" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="909" pos:column="38">postsize<pos:position pos:line="909" pos:column="46"/></name></expr></argument>)<pos:position pos:line="909" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="909" pos:column="48"/></expr_stmt>
      }<pos:position pos:line="910" pos:column="8"/></block></then>
      <else pos:line="911" pos:column="7">else <block pos:line="911" pos:column="12">{
        <comment type="block" pos:line="912" pos:column="9">/* A huge POST coming up, do data separate from the request */</comment>
        <expr_stmt><expr><name><name pos:line="913" pos:column="9">http<pos:position pos:line="913" pos:column="13"/></name><operator pos:line="913" pos:column="13">-&gt;<pos:position pos:line="913" pos:column="18"/></operator><name pos:line="913" pos:column="15">postsize<pos:position pos:line="913" pos:column="23"/></name></name> <operator pos:line="913" pos:column="24">=<pos:position pos:line="913" pos:column="25"/></operator> <name pos:line="913" pos:column="26">postsize<pos:position pos:line="913" pos:column="34"/></name></expr>;<pos:position pos:line="913" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="914" pos:column="9">http<pos:position pos:line="914" pos:column="13"/></name><operator pos:line="914" pos:column="13">-&gt;<pos:position pos:line="914" pos:column="18"/></operator><name pos:line="914" pos:column="15">postdata<pos:position pos:line="914" pos:column="23"/></name></name> <operator pos:line="914" pos:column="24">=<pos:position pos:line="914" pos:column="25"/></operator> <name><name pos:line="914" pos:column="26">data<pos:position pos:line="914" pos:column="30"/></name><operator pos:line="914" pos:column="30">-&gt;<pos:position pos:line="914" pos:column="35"/></operator><name pos:line="914" pos:column="32">set<pos:position pos:line="914" pos:column="35"/></name><operator pos:line="914" pos:column="35">.<pos:position pos:line="914" pos:column="36"/></operator><name pos:line="914" pos:column="36">postfields<pos:position pos:line="914" pos:column="46"/></name></name></expr>;<pos:position pos:line="914" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="916" pos:column="9">http<pos:position pos:line="916" pos:column="13"/></name><operator pos:line="916" pos:column="13">-&gt;<pos:position pos:line="916" pos:column="18"/></operator><name pos:line="916" pos:column="15">sending<pos:position pos:line="916" pos:column="22"/></name></name> <operator pos:line="916" pos:column="23">=<pos:position pos:line="916" pos:column="24"/></operator> <name pos:line="916" pos:column="25">HTTPSEND_BODY<pos:position pos:line="916" pos:column="38"/></name></expr>;<pos:position pos:line="916" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="918" pos:column="9">conn<pos:position pos:line="918" pos:column="13"/></name><operator pos:line="918" pos:column="13">-&gt;<pos:position pos:line="918" pos:column="18"/></operator><name pos:line="918" pos:column="15">fread_func<pos:position pos:line="918" pos:column="25"/></name></name> <operator pos:line="918" pos:column="26">=<pos:position pos:line="918" pos:column="27"/></operator> <operator pos:line="918" pos:column="28">(<pos:position pos:line="918" pos:column="29"/></operator><name pos:line="918" pos:column="29">curl_read_callback<pos:position pos:line="918" pos:column="47"/></name><operator pos:line="918" pos:column="47">)<pos:position pos:line="918" pos:column="48"/></operator><name pos:line="918" pos:column="48">readmoredata<pos:position pos:line="918" pos:column="60"/></name></expr>;<pos:position pos:line="918" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="919" pos:column="9">conn<pos:position pos:line="919" pos:column="13"/></name><operator pos:line="919" pos:column="13">-&gt;<pos:position pos:line="919" pos:column="18"/></operator><name pos:line="919" pos:column="15">fread_in<pos:position pos:line="919" pos:column="23"/></name></name> <operator pos:line="919" pos:column="24">=<pos:position pos:line="919" pos:column="25"/></operator> <operator pos:line="919" pos:column="26">(<pos:position pos:line="919" pos:column="27"/></operator><name pos:line="919" pos:column="27">void<pos:position pos:line="919" pos:column="31"/></name> <operator pos:line="919" pos:column="32">*<pos:position pos:line="919" pos:column="33"/></operator><operator pos:line="919" pos:column="33">)<pos:position pos:line="919" pos:column="34"/></operator><name pos:line="919" pos:column="34">conn<pos:position pos:line="919" pos:column="38"/></name></expr>;<pos:position pos:line="919" pos:column="39"/></expr_stmt>

        <comment type="block" pos:line="921" pos:column="9">/* set the upload size to the progress meter */</comment>
        <expr_stmt><expr><call><name pos:line="922" pos:column="9">Curl_pgrsSetUploadSize<pos:position pos:line="922" pos:column="31"/></name><argument_list pos:line="922" pos:column="31">(<argument><expr><name pos:line="922" pos:column="32">data<pos:position pos:line="922" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="922" pos:column="38">http<pos:position pos:line="922" pos:column="42"/></name><operator pos:line="922" pos:column="42">-&gt;<pos:position pos:line="922" pos:column="47"/></operator><name pos:line="922" pos:column="44">postsize<pos:position pos:line="922" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="922" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="922" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><name pos:line="924" pos:column="9">result<pos:position pos:line="924" pos:column="15"/></name> <operator pos:line="924" pos:column="16">=<pos:position pos:line="924" pos:column="17"/></operator> <call><name pos:line="924" pos:column="18">Curl_add_buffer<pos:position pos:line="924" pos:column="33"/></name><argument_list pos:line="924" pos:column="33">(<argument><expr><name pos:line="924" pos:column="34">req_buffer<pos:position pos:line="924" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="924" pos:column="46">"\r\n"<pos:position pos:line="924" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="924" pos:column="54">2<pos:position pos:line="924" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="924" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="924" pos:column="57"/></expr_stmt> <comment type="block" pos:line="924" pos:column="58">/* end of headers! */</comment>
        <if pos:line="925" pos:column="9">if<condition pos:line="925" pos:column="11">(<expr><name pos:line="925" pos:column="12">result<pos:position pos:line="925" pos:column="18"/></name></expr>)<pos:position pos:line="925" pos:column="19"/></condition><then pos:line="925" pos:column="19">
          <block type="pseudo"><return pos:line="926" pos:column="11">return <expr><name pos:line="926" pos:column="18">result<pos:position pos:line="926" pos:column="24"/></name></expr>;<pos:position pos:line="926" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="927" pos:column="8"/></block></else></if>
    }<pos:position pos:line="928" pos:column="6"/></block></then>
    <else pos:line="929" pos:column="5">else <block pos:line="929" pos:column="10">{
      <expr_stmt><expr><name pos:line="930" pos:column="7">result<pos:position pos:line="930" pos:column="13"/></name> <operator pos:line="930" pos:column="14">=<pos:position pos:line="930" pos:column="15"/></operator> <call><name pos:line="930" pos:column="16">Curl_add_buffer<pos:position pos:line="930" pos:column="31"/></name><argument_list pos:line="930" pos:column="31">(<argument><expr><name pos:line="930" pos:column="32">req_buffer<pos:position pos:line="930" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="930" pos:column="44">"\r\n"<pos:position pos:line="930" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="930" pos:column="52">2<pos:position pos:line="930" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="930" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="930" pos:column="55"/></expr_stmt> <comment type="block" pos:line="930" pos:column="56">/* end of headers! */</comment>
      <if pos:line="931" pos:column="7">if<condition pos:line="931" pos:column="9">(<expr><name pos:line="931" pos:column="10">result<pos:position pos:line="931" pos:column="16"/></name></expr>)<pos:position pos:line="931" pos:column="17"/></condition><then pos:line="931" pos:column="17">
        <block type="pseudo"><return pos:line="932" pos:column="9">return <expr><name pos:line="932" pos:column="16">result<pos:position pos:line="932" pos:column="22"/></name></expr>;<pos:position pos:line="932" pos:column="23"/></return></block></then></if>

      <if pos:line="934" pos:column="7">if<condition pos:line="934" pos:column="9">(<expr><name><name pos:line="934" pos:column="10">data<pos:position pos:line="934" pos:column="14"/></name><operator pos:line="934" pos:column="14">-&gt;<pos:position pos:line="934" pos:column="19"/></operator><name pos:line="934" pos:column="16">req<pos:position pos:line="934" pos:column="19"/></name><operator pos:line="934" pos:column="19">.<pos:position pos:line="934" pos:column="20"/></operator><name pos:line="934" pos:column="20">upload_chunky<pos:position pos:line="934" pos:column="33"/></name></name> <operator pos:line="934" pos:column="34">&amp;&amp;<pos:position pos:line="934" pos:column="44"/></operator> <name><name pos:line="934" pos:column="37">conn<pos:position pos:line="934" pos:column="41"/></name><operator pos:line="934" pos:column="41">-&gt;<pos:position pos:line="934" pos:column="46"/></operator><name pos:line="934" pos:column="43">bits<pos:position pos:line="934" pos:column="47"/></name><operator pos:line="934" pos:column="47">.<pos:position pos:line="934" pos:column="48"/></operator><name pos:line="934" pos:column="48">authneg<pos:position pos:line="934" pos:column="55"/></name></name></expr>)<pos:position pos:line="934" pos:column="56"/></condition><then pos:line="934" pos:column="56"> <block pos:line="934" pos:column="57">{
        <comment type="block" pos:line="935" pos:column="9">/* Chunky upload is selected and we're negotiating auth still, send
           end-of-data only */</comment>
        <expr_stmt><expr><name pos:line="937" pos:column="9">result<pos:position pos:line="937" pos:column="15"/></name> <operator pos:line="937" pos:column="16">=<pos:position pos:line="937" pos:column="17"/></operator> <call><name pos:line="937" pos:column="18">Curl_add_buffer<pos:position pos:line="937" pos:column="33"/></name><argument_list pos:line="937" pos:column="33">(<argument><expr><name pos:line="937" pos:column="34">req_buffer<pos:position pos:line="937" pos:column="44"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="938" pos:column="34">"\x30\x0d\x0a\x0d\x0a"<pos:position pos:line="938" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="938" pos:column="58">5<pos:position pos:line="938" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="938" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="938" pos:column="61"/></expr_stmt>
        <comment type="block" pos:line="939" pos:column="9">/* 0  CR  LF  CR  LF */</comment>
        <if pos:line="940" pos:column="9">if<condition pos:line="940" pos:column="11">(<expr><name pos:line="940" pos:column="12">result<pos:position pos:line="940" pos:column="18"/></name></expr>)<pos:position pos:line="940" pos:column="19"/></condition><then pos:line="940" pos:column="19">
          <block type="pseudo"><return pos:line="941" pos:column="11">return <expr><name pos:line="941" pos:column="18">result<pos:position pos:line="941" pos:column="24"/></name></expr>;<pos:position pos:line="941" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="942" pos:column="8"/></block></then>

      <elseif pos:line="944" pos:column="7">else <if pos:line="944" pos:column="12">if<condition pos:line="944" pos:column="14">(<expr><name><name pos:line="944" pos:column="15">data<pos:position pos:line="944" pos:column="19"/></name><operator pos:line="944" pos:column="19">-&gt;<pos:position pos:line="944" pos:column="24"/></operator><name pos:line="944" pos:column="21">set<pos:position pos:line="944" pos:column="24"/></name><operator pos:line="944" pos:column="24">.<pos:position pos:line="944" pos:column="25"/></operator><name pos:line="944" pos:column="25">postfieldsize<pos:position pos:line="944" pos:column="38"/></name></name></expr>)<pos:position pos:line="944" pos:column="39"/></condition><then pos:line="944" pos:column="39"> <block pos:line="944" pos:column="40">{
        <comment type="block" pos:line="945" pos:column="9">/* set the upload size to the progress meter */</comment>
        <expr_stmt><expr><call><name pos:line="946" pos:column="9">Curl_pgrsSetUploadSize<pos:position pos:line="946" pos:column="31"/></name><argument_list pos:line="946" pos:column="31">(<argument><expr><name pos:line="946" pos:column="32">data<pos:position pos:line="946" pos:column="36"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="946" pos:column="38">postsize<pos:position pos:line="946" pos:column="46"/></name></expr>?<pos:position pos:line="946" pos:column="47"/></condition><then><expr><name pos:line="946" pos:column="47">postsize<pos:position pos:line="946" pos:column="55"/></name></expr></then><else pos:line="946" pos:column="55">:<expr><operator pos:line="946" pos:column="56">-<pos:position pos:line="946" pos:column="57"/></operator><literal type="number" pos:line="946" pos:column="57">1<pos:position pos:line="946" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="946" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="946" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="948" pos:column="9">/* set the pointer to mark that we will send the post body using the
           read callback, but only if we're not in authenticate
           negotiation  */</comment>
        <if pos:line="951" pos:column="9">if<condition pos:line="951" pos:column="11">(<expr><operator pos:line="951" pos:column="12">!<pos:position pos:line="951" pos:column="13"/></operator><name><name pos:line="951" pos:column="13">conn<pos:position pos:line="951" pos:column="17"/></name><operator pos:line="951" pos:column="17">-&gt;<pos:position pos:line="951" pos:column="22"/></operator><name pos:line="951" pos:column="19">bits<pos:position pos:line="951" pos:column="23"/></name><operator pos:line="951" pos:column="23">.<pos:position pos:line="951" pos:column="24"/></operator><name pos:line="951" pos:column="24">authneg<pos:position pos:line="951" pos:column="31"/></name></name></expr>)<pos:position pos:line="951" pos:column="32"/></condition><then pos:line="951" pos:column="32"> <block pos:line="951" pos:column="33">{
          <expr_stmt><expr><name><name pos:line="952" pos:column="11">http<pos:position pos:line="952" pos:column="15"/></name><operator pos:line="952" pos:column="15">-&gt;<pos:position pos:line="952" pos:column="20"/></operator><name pos:line="952" pos:column="17">postdata<pos:position pos:line="952" pos:column="25"/></name></name> <operator pos:line="952" pos:column="26">=<pos:position pos:line="952" pos:column="27"/></operator> <operator pos:line="952" pos:column="28">(<pos:position pos:line="952" pos:column="29"/></operator><name pos:line="952" pos:column="29">char<pos:position pos:line="952" pos:column="33"/></name> <operator pos:line="952" pos:column="34">*<pos:position pos:line="952" pos:column="35"/></operator><operator pos:line="952" pos:column="35">)<pos:position pos:line="952" pos:column="36"/></operator><operator pos:line="952" pos:column="36">&amp;<pos:position pos:line="952" pos:column="41"/></operator><name><name pos:line="952" pos:column="37">http<pos:position pos:line="952" pos:column="41"/></name><operator pos:line="952" pos:column="41">-&gt;<pos:position pos:line="952" pos:column="46"/></operator><name pos:line="952" pos:column="43">postdata<pos:position pos:line="952" pos:column="51"/></name></name></expr>;<pos:position pos:line="952" pos:column="52"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="953" pos:column="11">http<pos:position pos:line="953" pos:column="15"/></name><operator pos:line="953" pos:column="15">-&gt;<pos:position pos:line="953" pos:column="20"/></operator><name pos:line="953" pos:column="17">postsize<pos:position pos:line="953" pos:column="25"/></name></name> <operator pos:line="953" pos:column="26">=<pos:position pos:line="953" pos:column="27"/></operator> <name pos:line="953" pos:column="28">postsize<pos:position pos:line="953" pos:column="36"/></name></expr>;<pos:position pos:line="953" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="954" pos:column="10"/></block></then></if>
      }<pos:position pos:line="955" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="956" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="957" pos:column="5">/* issue the request */</comment>
    <expr_stmt><expr><name pos:line="958" pos:column="5">result<pos:position pos:line="958" pos:column="11"/></name> <operator pos:line="958" pos:column="12">=<pos:position pos:line="958" pos:column="13"/></operator> <call><name pos:line="958" pos:column="14">Curl_add_buffer_send<pos:position pos:line="958" pos:column="34"/></name><argument_list pos:line="958" pos:column="34">(<argument><expr><name pos:line="958" pos:column="35">req_buffer<pos:position pos:line="958" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="958" pos:column="47">conn<pos:position pos:line="958" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="958" pos:column="53">&amp;<pos:position pos:line="958" pos:column="58"/></operator><name><name pos:line="958" pos:column="54">data<pos:position pos:line="958" pos:column="58"/></name><operator pos:line="958" pos:column="58">-&gt;<pos:position pos:line="958" pos:column="63"/></operator><name pos:line="958" pos:column="60">info<pos:position pos:line="958" pos:column="64"/></name><operator pos:line="958" pos:column="64">.<pos:position pos:line="958" pos:column="65"/></operator><name pos:line="958" pos:column="65">request_size<pos:position pos:line="958" pos:column="77"/></name></name></expr></argument>,
                                  <argument><expr><operator pos:line="959" pos:column="35">(<pos:position pos:line="959" pos:column="36"/></operator><name pos:line="959" pos:column="36">size_t<pos:position pos:line="959" pos:column="42"/></name><operator pos:line="959" pos:column="42">)<pos:position pos:line="959" pos:column="43"/></operator><name pos:line="959" pos:column="43">included_body<pos:position pos:line="959" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="959" pos:column="58">FIRSTSOCKET<pos:position pos:line="959" pos:column="69"/></name></expr></argument>)<pos:position pos:line="959" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="959" pos:column="71"/></expr_stmt>

    <if pos:line="961" pos:column="5">if<condition pos:line="961" pos:column="7">(<expr><name pos:line="961" pos:column="8">result<pos:position pos:line="961" pos:column="14"/></name></expr>)<pos:position pos:line="961" pos:column="15"/></condition><then pos:line="961" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="962" pos:column="7">failf<pos:position pos:line="962" pos:column="12"/></name><argument_list pos:line="962" pos:column="12">(<argument><expr><name pos:line="962" pos:column="13">data<pos:position pos:line="962" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="962" pos:column="19">"Failed sending HTTP POST request"<pos:position pos:line="962" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="962" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="962" pos:column="55"/></expr_stmt></block></then>
    <else pos:line="963" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="964" pos:column="7">Curl_setup_transfer<pos:position pos:line="964" pos:column="26"/></name><argument_list pos:line="964" pos:column="26">(<argument><expr><name pos:line="964" pos:column="27">conn<pos:position pos:line="964" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="964" pos:column="33">FIRSTSOCKET<pos:position pos:line="964" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="964" pos:column="46">-<pos:position pos:line="964" pos:column="47"/></operator><literal type="number" pos:line="964" pos:column="47">1<pos:position pos:line="964" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="964" pos:column="50">TRUE<pos:position pos:line="964" pos:column="54"/></name></expr></argument>,
                          <argument><expr><operator pos:line="965" pos:column="27">&amp;<pos:position pos:line="965" pos:column="32"/></operator><name><name pos:line="965" pos:column="28">http<pos:position pos:line="965" pos:column="32"/></name><operator pos:line="965" pos:column="32">-&gt;<pos:position pos:line="965" pos:column="37"/></operator><name pos:line="965" pos:column="34">readbytecount<pos:position pos:line="965" pos:column="47"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="965" pos:column="49">http<pos:position pos:line="965" pos:column="53"/></name><operator pos:line="965" pos:column="53">-&gt;<pos:position pos:line="965" pos:column="58"/></operator><name pos:line="965" pos:column="55">postdata<pos:position pos:line="965" pos:column="63"/></name></name></expr>?<pos:position pos:line="965" pos:column="64"/></condition><then><expr><name pos:line="965" pos:column="64">FIRSTSOCKET<pos:position pos:line="965" pos:column="75"/></name></expr></then><else pos:line="965" pos:column="75">:<expr><operator pos:line="965" pos:column="76">-<pos:position pos:line="965" pos:column="77"/></operator><literal type="number" pos:line="965" pos:column="77">1<pos:position pos:line="965" pos:column="78"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="966" pos:column="27">http<pos:position pos:line="966" pos:column="31"/></name><operator pos:line="966" pos:column="31">-&gt;<pos:position pos:line="966" pos:column="36"/></operator><name pos:line="966" pos:column="33">postdata<pos:position pos:line="966" pos:column="41"/></name></name></expr>?<pos:position pos:line="966" pos:column="42"/></condition><then><expr><operator pos:line="966" pos:column="42">&amp;<pos:position pos:line="966" pos:column="47"/></operator><name><name pos:line="966" pos:column="43">http<pos:position pos:line="966" pos:column="47"/></name><operator pos:line="966" pos:column="47">-&gt;<pos:position pos:line="966" pos:column="52"/></operator><name pos:line="966" pos:column="49">writebytecount<pos:position pos:line="966" pos:column="63"/></name></name></expr></then><else pos:line="966" pos:column="63">:<expr><name pos:line="966" pos:column="64">NULL<pos:position pos:line="966" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="966" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="966" pos:column="70"/></expr_stmt></block></else></if>
    <break pos:line="967" pos:column="5">break;<pos:position pos:line="967" pos:column="11"/></break>

  <default pos:line="969" pos:column="3">default:<pos:position pos:line="969" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="970" pos:column="5">result<pos:position pos:line="970" pos:column="11"/></name> <operator pos:line="970" pos:column="12">=<pos:position pos:line="970" pos:column="13"/></operator> <call><name pos:line="970" pos:column="14">Curl_add_buffer<pos:position pos:line="970" pos:column="29"/></name><argument_list pos:line="970" pos:column="29">(<argument><expr><name pos:line="970" pos:column="30">req_buffer<pos:position pos:line="970" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="970" pos:column="42">"\r\n"<pos:position pos:line="970" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="970" pos:column="50">2<pos:position pos:line="970" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="970" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="970" pos:column="53"/></expr_stmt>
    <if pos:line="971" pos:column="5">if<condition pos:line="971" pos:column="7">(<expr><name pos:line="971" pos:column="8">result<pos:position pos:line="971" pos:column="14"/></name></expr>)<pos:position pos:line="971" pos:column="15"/></condition><then pos:line="971" pos:column="15">
      <block type="pseudo"><return pos:line="972" pos:column="7">return <expr><name pos:line="972" pos:column="14">result<pos:position pos:line="972" pos:column="20"/></name></expr>;<pos:position pos:line="972" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="974" pos:column="5">/* issue the request */</comment>
    <expr_stmt><expr><name pos:line="975" pos:column="5">result<pos:position pos:line="975" pos:column="11"/></name> <operator pos:line="975" pos:column="12">=<pos:position pos:line="975" pos:column="13"/></operator> <call><name pos:line="975" pos:column="14">Curl_add_buffer_send<pos:position pos:line="975" pos:column="34"/></name><argument_list pos:line="975" pos:column="34">(<argument><expr><name pos:line="975" pos:column="35">req_buffer<pos:position pos:line="975" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="975" pos:column="47">conn<pos:position pos:line="975" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="976" pos:column="35">&amp;<pos:position pos:line="976" pos:column="40"/></operator><name><name pos:line="976" pos:column="36">data<pos:position pos:line="976" pos:column="40"/></name><operator pos:line="976" pos:column="40">-&gt;<pos:position pos:line="976" pos:column="45"/></operator><name pos:line="976" pos:column="42">info<pos:position pos:line="976" pos:column="46"/></name><operator pos:line="976" pos:column="46">.<pos:position pos:line="976" pos:column="47"/></operator><name pos:line="976" pos:column="47">request_size<pos:position pos:line="976" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="976" pos:column="61">0<pos:position pos:line="976" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="976" pos:column="64">FIRSTSOCKET<pos:position pos:line="976" pos:column="75"/></name></expr></argument>)<pos:position pos:line="976" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="976" pos:column="77"/></expr_stmt>

    <if pos:line="978" pos:column="5">if<condition pos:line="978" pos:column="7">(<expr><name pos:line="978" pos:column="8">result<pos:position pos:line="978" pos:column="14"/></name></expr>)<pos:position pos:line="978" pos:column="15"/></condition><then pos:line="978" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="979" pos:column="7">failf<pos:position pos:line="979" pos:column="12"/></name><argument_list pos:line="979" pos:column="12">(<argument><expr><name pos:line="979" pos:column="13">data<pos:position pos:line="979" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="979" pos:column="19">"Failed sending HTTP request"<pos:position pos:line="979" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="979" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="979" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="980" pos:column="5">else
      <comment type="block" pos:line="981" pos:column="7">/* HTTP GET/HEAD download: */</comment>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="982" pos:column="7">Curl_setup_transfer<pos:position pos:line="982" pos:column="26"/></name><argument_list pos:line="982" pos:column="26">(<argument><expr><name pos:line="982" pos:column="27">conn<pos:position pos:line="982" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="982" pos:column="33">FIRSTSOCKET<pos:position pos:line="982" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="982" pos:column="46">-<pos:position pos:line="982" pos:column="47"/></operator><literal type="number" pos:line="982" pos:column="47">1<pos:position pos:line="982" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="982" pos:column="50">TRUE<pos:position pos:line="982" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="982" pos:column="56">&amp;<pos:position pos:line="982" pos:column="61"/></operator><name><name pos:line="982" pos:column="57">http<pos:position pos:line="982" pos:column="61"/></name><operator pos:line="982" pos:column="61">-&gt;<pos:position pos:line="982" pos:column="66"/></operator><name pos:line="982" pos:column="63">readbytecount<pos:position pos:line="982" pos:column="76"/></name></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="983" pos:column="27">http<pos:position pos:line="983" pos:column="31"/></name><operator pos:line="983" pos:column="31">-&gt;<pos:position pos:line="983" pos:column="36"/></operator><name pos:line="983" pos:column="33">postdata<pos:position pos:line="983" pos:column="41"/></name></name></expr>?<pos:position pos:line="983" pos:column="42"/></condition><then><expr><name pos:line="983" pos:column="42">FIRSTSOCKET<pos:position pos:line="983" pos:column="53"/></name></expr></then><else pos:line="983" pos:column="53">:<expr><operator pos:line="983" pos:column="54">-<pos:position pos:line="983" pos:column="55"/></operator><literal type="number" pos:line="983" pos:column="55">1<pos:position pos:line="983" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="984" pos:column="27">http<pos:position pos:line="984" pos:column="31"/></name><operator pos:line="984" pos:column="31">-&gt;<pos:position pos:line="984" pos:column="36"/></operator><name pos:line="984" pos:column="33">postdata<pos:position pos:line="984" pos:column="41"/></name></name></expr>?<pos:position pos:line="984" pos:column="42"/></condition><then><expr><operator pos:line="984" pos:column="42">&amp;<pos:position pos:line="984" pos:column="47"/></operator><name><name pos:line="984" pos:column="43">http<pos:position pos:line="984" pos:column="47"/></name><operator pos:line="984" pos:column="47">-&gt;<pos:position pos:line="984" pos:column="52"/></operator><name pos:line="984" pos:column="49">writebytecount<pos:position pos:line="984" pos:column="63"/></name></name></expr></then><else pos:line="984" pos:column="63">:<expr><name pos:line="984" pos:column="64">NULL<pos:position pos:line="984" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="984" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="984" pos:column="70"/></expr_stmt></block></else></if>
  }<pos:position pos:line="985" pos:column="4"/></block></switch>
  <if pos:line="986" pos:column="3">if<condition pos:line="986" pos:column="5">(<expr><name pos:line="986" pos:column="6">result<pos:position pos:line="986" pos:column="12"/></name></expr>)<pos:position pos:line="986" pos:column="13"/></condition><then pos:line="986" pos:column="13">
    <block type="pseudo"><return pos:line="987" pos:column="5">return <expr><name pos:line="987" pos:column="12">result<pos:position pos:line="987" pos:column="18"/></name></expr>;<pos:position pos:line="987" pos:column="19"/></return></block></then></if>

  <if pos:line="989" pos:column="3">if<condition pos:line="989" pos:column="5">(<expr><name><name pos:line="989" pos:column="6">http<pos:position pos:line="989" pos:column="10"/></name><operator pos:line="989" pos:column="10">-&gt;<pos:position pos:line="989" pos:column="15"/></operator><name pos:line="989" pos:column="12">writebytecount<pos:position pos:line="989" pos:column="26"/></name></name></expr>)<pos:position pos:line="989" pos:column="27"/></condition><then pos:line="989" pos:column="27"> <block pos:line="989" pos:column="28">{
    <comment type="block" pos:line="990" pos:column="5">/* if a request-body has been sent off, we make sure this progress is noted
       properly */</comment>
    <expr_stmt><expr><call><name pos:line="992" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="992" pos:column="30"/></name><argument_list pos:line="992" pos:column="30">(<argument><expr><name pos:line="992" pos:column="31">data<pos:position pos:line="992" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="992" pos:column="37">http<pos:position pos:line="992" pos:column="41"/></name><operator pos:line="992" pos:column="41">-&gt;<pos:position pos:line="992" pos:column="46"/></operator><name pos:line="992" pos:column="43">writebytecount<pos:position pos:line="992" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="992" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="992" pos:column="59"/></expr_stmt>
    <if pos:line="993" pos:column="5">if<condition pos:line="993" pos:column="7">(<expr><call><name pos:line="993" pos:column="8">Curl_pgrsUpdate<pos:position pos:line="993" pos:column="23"/></name><argument_list pos:line="993" pos:column="23">(<argument><expr><name pos:line="993" pos:column="24">conn<pos:position pos:line="993" pos:column="28"/></name></expr></argument>)<pos:position pos:line="993" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="993" pos:column="30"/></condition><then pos:line="993" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="994" pos:column="7">result<pos:position pos:line="994" pos:column="13"/></name> <operator pos:line="994" pos:column="14">=<pos:position pos:line="994" pos:column="15"/></operator> <name pos:line="994" pos:column="16">CURLE_ABORTED_BY_CALLBACK<pos:position pos:line="994" pos:column="41"/></name></expr>;<pos:position pos:line="994" pos:column="42"/></expr_stmt></block></then></if>

    <if pos:line="996" pos:column="5">if<condition pos:line="996" pos:column="7">(<expr><name><name pos:line="996" pos:column="8">http<pos:position pos:line="996" pos:column="12"/></name><operator pos:line="996" pos:column="12">-&gt;<pos:position pos:line="996" pos:column="17"/></operator><name pos:line="996" pos:column="14">writebytecount<pos:position pos:line="996" pos:column="28"/></name></name> <operator pos:line="996" pos:column="29">&gt;=<pos:position pos:line="996" pos:column="34"/></operator> <name pos:line="996" pos:column="32">postsize<pos:position pos:line="996" pos:column="40"/></name></expr>)<pos:position pos:line="996" pos:column="41"/></condition><then pos:line="996" pos:column="41"> <block pos:line="996" pos:column="42">{
      <comment type="block" pos:line="997" pos:column="7">/* already sent the entire request body, mark the "upload" as
         complete */</comment>
      <expr_stmt><expr><call><name pos:line="999" pos:column="7">infof<pos:position pos:line="999" pos:column="12"/></name><argument_list pos:line="999" pos:column="12">(<argument><expr><name pos:line="999" pos:column="13">data<pos:position pos:line="999" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="999" pos:column="19">"upload completely sent off: %"<pos:position pos:line="999" pos:column="50"/></literal> <name pos:line="999" pos:column="51">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="999" pos:column="73"/></name>
            <literal type="string" pos:line="1000" pos:column="13">" out of %"<pos:position pos:line="1000" pos:column="24"/></literal> <name pos:line="1000" pos:column="25">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="1000" pos:column="47"/></name> <literal type="string" pos:line="1000" pos:column="48">" bytes\n"<pos:position pos:line="1000" pos:column="58"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="1001" pos:column="13">http<pos:position pos:line="1001" pos:column="17"/></name><operator pos:line="1001" pos:column="17">-&gt;<pos:position pos:line="1001" pos:column="22"/></operator><name pos:line="1001" pos:column="19">writebytecount<pos:position pos:line="1001" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="1001" pos:column="35">postsize<pos:position pos:line="1001" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1001" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1001" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1002" pos:column="7">data<pos:position pos:line="1002" pos:column="11"/></name><operator pos:line="1002" pos:column="11">-&gt;<pos:position pos:line="1002" pos:column="16"/></operator><name pos:line="1002" pos:column="13">req<pos:position pos:line="1002" pos:column="16"/></name><operator pos:line="1002" pos:column="16">.<pos:position pos:line="1002" pos:column="17"/></operator><name pos:line="1002" pos:column="17">upload_done<pos:position pos:line="1002" pos:column="28"/></name></name> <operator pos:line="1002" pos:column="29">=<pos:position pos:line="1002" pos:column="30"/></operator> <name pos:line="1002" pos:column="31">TRUE<pos:position pos:line="1002" pos:column="35"/></name></expr>;<pos:position pos:line="1002" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1003" pos:column="7">data<pos:position pos:line="1003" pos:column="11"/></name><operator pos:line="1003" pos:column="11">-&gt;<pos:position pos:line="1003" pos:column="16"/></operator><name pos:line="1003" pos:column="13">req<pos:position pos:line="1003" pos:column="16"/></name><operator pos:line="1003" pos:column="16">.<pos:position pos:line="1003" pos:column="17"/></operator><name pos:line="1003" pos:column="17">keepon<pos:position pos:line="1003" pos:column="23"/></name></name> <operator pos:line="1003" pos:column="24">&amp;=<pos:position pos:line="1003" pos:column="30"/></operator> <operator pos:line="1003" pos:column="27">~<pos:position pos:line="1003" pos:column="28"/></operator><name pos:line="1003" pos:column="28">KEEP_SEND<pos:position pos:line="1003" pos:column="37"/></name></expr>;<pos:position pos:line="1003" pos:column="38"/></expr_stmt> <comment type="block" pos:line="1003" pos:column="39">/* we're done writing */</comment>
      <expr_stmt><expr><name><name pos:line="1004" pos:column="7">data<pos:position pos:line="1004" pos:column="11"/></name><operator pos:line="1004" pos:column="11">-&gt;<pos:position pos:line="1004" pos:column="16"/></operator><name pos:line="1004" pos:column="13">req<pos:position pos:line="1004" pos:column="16"/></name><operator pos:line="1004" pos:column="16">.<pos:position pos:line="1004" pos:column="17"/></operator><name pos:line="1004" pos:column="17">exp100<pos:position pos:line="1004" pos:column="23"/></name></name> <operator pos:line="1004" pos:column="24">=<pos:position pos:line="1004" pos:column="25"/></operator> <name pos:line="1004" pos:column="26">EXP100_SEND_DATA<pos:position pos:line="1004" pos:column="42"/></name></expr>;<pos:position pos:line="1004" pos:column="43"/></expr_stmt> <comment type="block" pos:line="1004" pos:column="44">/* already sent */</comment>
    }<pos:position pos:line="1005" pos:column="6"/></block></then></if>
  }<pos:position pos:line="1006" pos:column="4"/></block></then></if>

  <return pos:line="1008" pos:column="3">return <expr><name pos:line="1008" pos:column="10">result<pos:position pos:line="1008" pos:column="16"/></name></expr>;<pos:position pos:line="1008" pos:column="17"/></return>
}<pos:position pos:line="1009" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1076_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">handshake<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">gnutls_session<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">session<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">sockindex<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="4" pos:column="27">bool<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">duringconnect<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SessionHandle<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">data<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">conn<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">data<pos:position pos:line="6" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">gtls_inited<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">_Curl_gtls_init<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">()<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt></block></then></if>
  <do pos:line="10" pos:column="3">do <block pos:line="10" pos:column="6">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">rc<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">gnutls_handshake<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">session<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">rc<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">GNUTLS_E_AGAIN<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="31">||<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">(<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">rc<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">==<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">GNUTLS_E_INTERRUPTED<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">)<pos:position pos:line="13" pos:column="62"/></operator></expr>)<pos:position pos:line="13" pos:column="63"/></condition><then pos:line="13" pos:column="63"> <block pos:line="13" pos:column="64">{
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">long<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">timeout_ms<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><call><name pos:line="14" pos:column="25">Curl_timeleft<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">conn<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">NULL<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">duringconnect<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="66"/></decl_stmt>

      <if pos:line="16" pos:column="7">if<condition pos:line="16" pos:column="9">(<expr><name pos:line="16" pos:column="10">timeout_ms<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&lt;<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
        <comment type="block" pos:line="17" pos:column="9">/* a precaution, no need to continue if time already is up */</comment>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">failf<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">data<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="21">"SSL connection timeout"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></return>
      }<pos:position pos:line="20" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="22" pos:column="7">rc<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">Curl_socket_ready<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name><name pos:line="22" pos:column="30">conn<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">sock<pos:position pos:line="22" pos:column="40"/></name><index pos:line="22" pos:column="40">[<expr><name pos:line="22" pos:column="41">sockindex<pos:position pos:line="22" pos:column="50"/></name></expr>]<pos:position pos:line="22" pos:column="51"/></index></name></expr></argument>,
                       <argument><expr><name><name pos:line="23" pos:column="24">conn<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">sock<pos:position pos:line="23" pos:column="34"/></name><index pos:line="23" pos:column="34">[<expr><name pos:line="23" pos:column="35">sockindex<pos:position pos:line="23" pos:column="44"/></name></expr>]<pos:position pos:line="23" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="47">(<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="48">int<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">)<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">timeout_ms<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
      <if pos:line="24" pos:column="7">if<condition pos:line="24" pos:column="9">(<expr><name pos:line="24" pos:column="10">rc<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">&gt;<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17">
        <comment type="block" pos:line="25" pos:column="9">/* reabable or writable, go loop*/</comment>
        <block type="pseudo"><continue pos:line="26" pos:column="9">continue;<pos:position pos:line="26" pos:column="18"/></continue></block></then>
      <elseif pos:line="27" pos:column="7">else <if pos:line="27" pos:column="12">if<condition pos:line="27" pos:column="14">(<expr><literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal> <operator pos:line="27" pos:column="17">==<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">rc<pos:position pos:line="27" pos:column="22"/></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23"> <block pos:line="27" pos:column="24">{
        <comment type="block" pos:line="28" pos:column="9">/* timeout */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">failf<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">data<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="21">"SSL connection timeout"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></return>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if></elseif>
      <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
        <comment type="block" pos:line="33" pos:column="9">/* anything that gets here is fatally bad */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">failf<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">data<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"select/poll on SSL socket, errno: %d"<pos:position pos:line="34" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">SOCKERRNO<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="35" pos:column="39"/></name></expr>;<pos:position pos:line="35" pos:column="40"/></return>
      }<pos:position pos:line="36" pos:column="8"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then>
    <else pos:line="38" pos:column="5">else
      <block type="pseudo"><break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break></block></else></if>
  }<pos:position pos:line="40" pos:column="4"/></block> while<condition pos:line="40" pos:column="10">(<expr><literal type="number" pos:line="40" pos:column="11">1<pos:position pos:line="40" pos:column="12"/></literal></expr>)<pos:position pos:line="40" pos:column="13"/></condition>;<pos:position pos:line="40" pos:column="14"/></do>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><name pos:line="42" pos:column="6">rc<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">&lt;<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="11">0<pos:position pos:line="42" pos:column="12"/></literal></expr>)<pos:position pos:line="42" pos:column="13"/></condition><then pos:line="42" pos:column="13"> <block pos:line="42" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">failf<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">data<pos:position pos:line="43" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="17">"gnutls_handshake() failed: %s"<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="50">gnutls_strerror<pos:position pos:line="43" pos:column="65"/></name><argument_list pos:line="43" pos:column="65">(<argument><expr><name pos:line="43" pos:column="66">rc<pos:position pos:line="43" pos:column="68"/></name></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <return pos:line="47" pos:column="3">return <expr><name pos:line="47" pos:column="10">CURLE_OK<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

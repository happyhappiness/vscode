<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_563_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">read_callback<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ptr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">size<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">nmemb<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">userp<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">LIB587<pos:position pos:line="3" pos:column="14"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="4" pos:column="3">(<pos:position pos:line="4" pos:column="4"/></operator><name pos:line="4" pos:column="4">void<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">)<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="5" pos:column="3">(<pos:position pos:line="5" pos:column="4"/></operator><name pos:line="5" pos:column="4">void<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">)<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">size<pos:position pos:line="5" pos:column="13"/></name></expr>;<pos:position pos:line="5" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="6" pos:column="3">(<pos:position pos:line="6" pos:column="4"/></operator><name pos:line="6" pos:column="4">void<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">)<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">nmemb<pos:position pos:line="6" pos:column="14"/></name></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">(<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">void<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">)<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">userp<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">CURL_READFUNC_ABORT<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></return>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>

  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">WriteThis<pos:position pos:line="11" pos:column="19"/></name></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">pooh<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><operator pos:line="11" pos:column="28">(<pos:position pos:line="11" pos:column="29"/></operator>struct <name pos:line="11" pos:column="36">WriteThis<pos:position pos:line="11" pos:column="45"/></name> <operator pos:line="11" pos:column="46">*<pos:position pos:line="11" pos:column="47"/></operator><operator pos:line="11" pos:column="47">)<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">userp<pos:position pos:line="11" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">size<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">nmemb<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&lt;<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="19">1<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">pooh<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">sizeleft<pos:position pos:line="16" pos:column="20"/></name></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21"> <block pos:line="16" pos:column="22">{
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><operator pos:line="17" pos:column="6">(<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">char<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">*<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">)<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">ptr<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name><name pos:line="17" pos:column="20">pooh<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">readptr<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><literal type="number" pos:line="17" pos:column="34">0<pos:position pos:line="17" pos:column="35"/></literal></expr>]<pos:position pos:line="17" pos:column="36"/></index></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt> <comment type="block" pos:line="17" pos:column="38">/* copy one single byte */</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">pooh<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">readptr<pos:position pos:line="18" pos:column="18"/></name></name><operator pos:line="18" pos:column="18">++<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>                 <comment type="block" pos:line="18" pos:column="38">/* advance pointer */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">pooh<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">sizeleft<pos:position pos:line="19" pos:column="19"/></name></name><operator pos:line="19" pos:column="19">--<pos:position pos:line="19" pos:column="21"/></operator></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>                <comment type="block" pos:line="19" pos:column="38">/* less data left */</comment>
    <return pos:line="20" pos:column="5">return <expr><literal type="number" pos:line="20" pos:column="12">1<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></return>                        <comment type="block" pos:line="20" pos:column="38">/* we return 1 byte at a time! */</comment>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <return pos:line="23" pos:column="3">return <expr><literal type="number" pos:line="23" pos:column="10">0<pos:position pos:line="23" pos:column="11"/></literal></expr>;<pos:position pos:line="23" pos:column="12"/></return>                         <comment type="block" pos:line="23" pos:column="37">/* no more data left to deliver */</comment>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1965_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">choose_mech<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">connectdata<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conn<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">void<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmp_allocation<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">Curl_sec_client_mech<pos:position pos:line="6" pos:column="36"/></name></name> <modifier pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></modifier></type><name pos:line="6" pos:column="38">mech<pos:position pos:line="6" pos:column="42"/></name> <init pos:line="6" pos:column="43">= <expr><operator pos:line="6" pos:column="45">&amp;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="46">Curl_krb5_client_mech<pos:position pos:line="6" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">tmp_allocation<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">realloc<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">app_data<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="44">mech<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">size<pos:position pos:line="8" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">tmp_allocation<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">failf<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">data<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="17">"Failed realloc of size %u"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="46">mech<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">size<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">mech<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">conn<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">app_data<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">tmp_allocation<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">mech<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">init<pos:position pos:line="16" pos:column="16"/></name></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">ret<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name><name pos:line="17" pos:column="11">mech<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">init<pos:position pos:line="17" pos:column="21"/></name></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">conn<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">app_data<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">ret<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12"> <block pos:line="18" pos:column="13">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">infof<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">data<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"Failed initialization for %s. Skipping it.\n"<pos:position pos:line="19" pos:column="65"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="20" pos:column="13">mech<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">name<pos:position pos:line="20" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><name pos:line="21" pos:column="14">CURLE_FAILED_INIT<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">infof<pos:position pos:line="25" pos:column="8"/></name><argument_list pos:line="25" pos:column="8">(<argument><expr><name pos:line="25" pos:column="9">data<pos:position pos:line="25" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="15">"Trying mechanism %s...\n"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="43">mech<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">name<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">ret<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">ftp_send_command<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">conn<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="32">"AUTH %s"<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="43">mech<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">name<pos:position pos:line="26" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
  <if pos:line="27" pos:column="3">if<condition pos:line="27" pos:column="5">(<expr><name pos:line="27" pos:column="6">ret<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">&lt;<pos:position pos:line="27" pos:column="14"/></operator> <literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>)<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14">
    <comment type="block" pos:line="28" pos:column="5">/* FIXME: This error is too generic but it is OK for now. */</comment>
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">CURLE_COULDNT_CONNECT<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></return></block></then></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name pos:line="31" pos:column="6">ret<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">/<pos:position pos:line="31" pos:column="10"/></operator><literal type="number" pos:line="31" pos:column="10">100<pos:position pos:line="31" pos:column="13"/></literal> <operator pos:line="31" pos:column="14">!=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">3<pos:position pos:line="31" pos:column="18"/></literal></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
    <switch pos:line="32" pos:column="5">switch<condition pos:line="32" pos:column="11">(<expr><name pos:line="32" pos:column="12">ret<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition> <block pos:line="32" pos:column="17">{
    <case pos:line="33" pos:column="5">case <expr><literal type="number" pos:line="33" pos:column="10">504<pos:position pos:line="33" pos:column="13"/></literal></expr>:<pos:position pos:line="33" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">infof<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">data<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"Mechanism %s is not supported by the server (server "<pos:position pos:line="34" pos:column="73"/></literal>
            <literal type="string" pos:line="35" pos:column="13">"returned ftp code: 504).\n"<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="43">mech<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">-&gt;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="49">name<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
      <break pos:line="36" pos:column="7">break;<pos:position pos:line="36" pos:column="13"/></break>
    <case pos:line="37" pos:column="5">case <expr><literal type="number" pos:line="37" pos:column="10">534<pos:position pos:line="37" pos:column="13"/></literal></expr>:<pos:position pos:line="37" pos:column="14"/></case>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">infof<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">data<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"Mechanism %s was rejected by the server (server returned "<pos:position pos:line="38" pos:column="78"/></literal>
            <literal type="string" pos:line="39" pos:column="13">"ftp code: 534).\n"<pos:position pos:line="39" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="34">mech<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">-&gt;<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="40">name<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
      <break pos:line="40" pos:column="7">break;<pos:position pos:line="40" pos:column="13"/></break>
    <default pos:line="41" pos:column="5">default:<pos:position pos:line="41" pos:column="13"/></default>
      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><name pos:line="42" pos:column="10">ret<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">/<pos:position pos:line="42" pos:column="14"/></operator><literal type="number" pos:line="42" pos:column="14">100<pos:position pos:line="42" pos:column="17"/></literal> <operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator> <literal type="number" pos:line="42" pos:column="21">5<pos:position pos:line="42" pos:column="22"/></literal></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">infof<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">data<pos:position pos:line="43" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="21">"server does not support the security extensions\n"<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="74"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">CURLE_USE_SSL_FAILED<pos:position pos:line="44" pos:column="36"/></name></expr>;<pos:position pos:line="44" pos:column="37"/></return>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>
      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>
    }<pos:position pos:line="47" pos:column="6"/></block></switch>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">CURLE_LOGIN_DENIED<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></return>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* Authenticate */</comment>
  <expr_stmt><expr><name pos:line="52" pos:column="3">ret<pos:position pos:line="52" pos:column="6"/></name> <operator pos:line="52" pos:column="7">=<pos:position pos:line="52" pos:column="8"/></operator> <call><name><name pos:line="52" pos:column="9">mech<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">auth<pos:position pos:line="52" pos:column="19"/></name></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name><name pos:line="52" pos:column="20">conn<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">app_data<pos:position pos:line="52" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">conn<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>

  <if pos:line="54" pos:column="3">if<condition pos:line="54" pos:column="5">(<expr><name pos:line="54" pos:column="6">ret<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">!=<pos:position pos:line="54" pos:column="12"/></operator> <name pos:line="54" pos:column="13">AUTH_CONTINUE<pos:position pos:line="54" pos:column="26"/></name></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27"> <block pos:line="54" pos:column="28">{
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name pos:line="55" pos:column="8">ret<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">!=<pos:position pos:line="55" pos:column="14"/></operator> <name pos:line="55" pos:column="15">AUTH_OK<pos:position pos:line="55" pos:column="22"/></name></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23"> <block pos:line="55" pos:column="24">{
      <comment type="block" pos:line="56" pos:column="7">/* Mechanism has dumped the error to stderr, don't error here. */</comment>
      <return pos:line="57" pos:column="7">return <expr><operator pos:line="57" pos:column="14">-<pos:position pos:line="57" pos:column="15"/></operator><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">DEBUGASSERT<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">ret<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">==<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">AUTH_OK<pos:position pos:line="59" pos:column="31"/></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="61" pos:column="5">conn<pos:position pos:line="61" pos:column="9"/></name><operator pos:line="61" pos:column="9">-&gt;<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="11">mech<pos:position pos:line="61" pos:column="15"/></name></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">mech<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">conn<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">sec_complete<pos:position pos:line="62" pos:column="23"/></name></name> <operator pos:line="62" pos:column="24">=<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="26">1<pos:position pos:line="62" pos:column="27"/></literal></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">conn<pos:position pos:line="63" pos:column="9"/></name><operator pos:line="63" pos:column="9">-&gt;<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="11">recv<pos:position pos:line="63" pos:column="15"/></name><index pos:line="63" pos:column="15">[<expr><name pos:line="63" pos:column="16">FIRSTSOCKET<pos:position pos:line="63" pos:column="27"/></name></expr>]<pos:position pos:line="63" pos:column="28"/></index></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">sec_recv<pos:position pos:line="63" pos:column="39"/></name></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">conn<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">send<pos:position pos:line="64" pos:column="15"/></name><index pos:line="64" pos:column="15">[<expr><name pos:line="64" pos:column="16">FIRSTSOCKET<pos:position pos:line="64" pos:column="27"/></name></expr>]<pos:position pos:line="64" pos:column="28"/></index></name> <operator pos:line="64" pos:column="29">=<pos:position pos:line="64" pos:column="30"/></operator> <name pos:line="64" pos:column="31">sec_send<pos:position pos:line="64" pos:column="39"/></name></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">conn<pos:position pos:line="65" pos:column="9"/></name><operator pos:line="65" pos:column="9">-&gt;<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="11">recv<pos:position pos:line="65" pos:column="15"/></name><index pos:line="65" pos:column="15">[<expr><name pos:line="65" pos:column="16">SECONDARYSOCKET<pos:position pos:line="65" pos:column="31"/></name></expr>]<pos:position pos:line="65" pos:column="32"/></index></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator> <name pos:line="65" pos:column="35">sec_recv<pos:position pos:line="65" pos:column="43"/></name></expr>;<pos:position pos:line="65" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">conn<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">-&gt;<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="11">send<pos:position pos:line="66" pos:column="15"/></name><index pos:line="66" pos:column="15">[<expr><name pos:line="66" pos:column="16">SECONDARYSOCKET<pos:position pos:line="66" pos:column="31"/></name></expr>]<pos:position pos:line="66" pos:column="32"/></index></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">sec_send<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">conn<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">command_prot<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">PROT_SAFE<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="68" pos:column="5">/* Set the requested protection level */</comment>
    <comment type="block" pos:line="69" pos:column="5">/* BLOCKING */</comment>
    <expr_stmt><expr><operator pos:line="70" pos:column="5">(<pos:position pos:line="70" pos:column="6"/></operator><name pos:line="70" pos:column="6">void<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">)<pos:position pos:line="70" pos:column="11"/></operator><call><name pos:line="70" pos:column="11">sec_set_protection_level<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">conn<pos:position pos:line="70" pos:column="40"/></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">CURLE_OK<pos:position pos:line="73" pos:column="18"/></name></expr>;<pos:position pos:line="73" pos:column="19"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_529.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_post_listtype<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">connectdata<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">conn<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLcode<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">result<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">CURLE_OK<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">SessionHandle<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">conn<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">data<pos:position pos:line="4" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* If this output is to be machine-parsed, the NLST command might be better
     to use, since the LIST command output is not specified or standard in any
     way. It has turned out that the NLST list output is not the same on all
     servers either... */</comment>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">NBFTPSENDF<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">conn<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="20">"%s"<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>,
             <argument><expr><ternary><condition><expr><name><name pos:line="12" pos:column="14">data<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">set<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">customrequest<pos:position pos:line="12" pos:column="37"/></name></name></expr>?<pos:position pos:line="12" pos:column="38"/></condition><then><expr><name><name pos:line="12" pos:column="38">data<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">set<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">customrequest<pos:position pos:line="12" pos:column="61"/></name></name></expr></then><else pos:line="12" pos:column="61">:
             <expr><operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><ternary><condition><expr><name><name pos:line="13" pos:column="15">data<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">set<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">ftp_list_only<pos:position pos:line="13" pos:column="38"/></name></name></expr>?<pos:position pos:line="13" pos:column="39"/></condition><then><expr><literal type="string" pos:line="13" pos:column="39">"NLST"<pos:position pos:line="13" pos:column="45"/></literal></expr></then><else pos:line="13" pos:column="45">:<expr><literal type="string" pos:line="13" pos:column="46">"LIST"<pos:position pos:line="13" pos:column="52"/></literal></expr></else></ternary><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">state<pos:position pos:line="15" pos:column="8"/></name><argument_list pos:line="15" pos:column="8">(<argument><expr><name pos:line="15" pos:column="9">conn<pos:position pos:line="15" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="15">FTP_LIST<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

  <return pos:line="17" pos:column="3">return <expr><name pos:line="17" pos:column="10">result<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

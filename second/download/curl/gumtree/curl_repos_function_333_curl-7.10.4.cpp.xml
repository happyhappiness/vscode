<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_333_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">ftp_perform<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">connectdata<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">conn<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="3" pos:column="22">bool<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">connected<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="38"/></parameter_list>  <comment type="block" pos:line="3" pos:column="40">/* for the TCP connect status after
                                          PASV / PORT */</comment>
<block pos:line="5" pos:column="1">{
  <comment type="block" pos:line="6" pos:column="3">/* this is FTP and no proxy */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name><init pos:line="7" pos:column="18">=<expr><name pos:line="7" pos:column="19">CURLE_OK<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">SessionHandle<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name><init pos:line="8" pos:column="29">=<expr><name><name pos:line="8" pos:column="30">conn<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">data<pos:position pos:line="8" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">buf<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name><name pos:line="9" pos:column="15">data<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">state<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">buffer<pos:position pos:line="9" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt> <comment type="block" pos:line="9" pos:column="35">/* this is our buffer */</comment>

  <comment type="block" pos:line="11" pos:column="3">/* the ftp struct is already inited in Curl_ftp_connect() */</comment>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">FTP<pos:position pos:line="12" pos:column="13"/></name></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">ftp<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><name><name pos:line="12" pos:column="21">conn<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">proto<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">ftp<pos:position pos:line="12" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* Send any QUOTE strings? */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">data<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">set<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">quote<pos:position pos:line="15" pos:column="21"/></name></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">result<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">ftp_sendquote<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">conn<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">data<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">set<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">.<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">quote<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call><operator pos:line="16" pos:column="55">)<pos:position pos:line="16" pos:column="56"/></operator> <operator pos:line="16" pos:column="57">!=<pos:position pos:line="16" pos:column="59"/></operator> <name pos:line="16" pos:column="60">CURLE_OK<pos:position pos:line="16" pos:column="68"/></name></expr>)<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69">
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">result<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
    
  <comment type="block" pos:line="20" pos:column="3">/* This is a re-used connection. Since we change directory to where the
     transfer is taking place, we must now get back to the original dir
     where we ended up after login: */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">conn<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">bits<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">reuse<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">&amp;&amp;<pos:position pos:line="23" pos:column="34"/></operator> <name><name pos:line="23" pos:column="27">ftp<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">entrypath<pos:position pos:line="23" pos:column="41"/></name></name></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">result<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">ftp_cwd<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">conn<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="33">ftp<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">entrypath<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call><operator pos:line="24" pos:column="48">)<pos:position pos:line="24" pos:column="49"/></operator> <operator pos:line="24" pos:column="50">!=<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="53">CURLE_OK<pos:position pos:line="24" pos:column="61"/></name></expr>)<pos:position pos:line="24" pos:column="62"/></condition><then pos:line="24" pos:column="62">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><name pos:line="25" pos:column="14">result<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* change directory first! */</comment>
  <if pos:line="29" pos:column="3">if<condition pos:line="29" pos:column="5">(<expr><name><name pos:line="29" pos:column="6">ftp<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">dir<pos:position pos:line="29" pos:column="14"/></name></name> <operator pos:line="29" pos:column="15">&amp;&amp;<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="18">ftp<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">dir<pos:position pos:line="29" pos:column="26"/></name><index pos:line="29" pos:column="26">[<expr><literal type="number" pos:line="29" pos:column="27">0<pos:position pos:line="29" pos:column="28"/></literal></expr>]<pos:position pos:line="29" pos:column="29"/></index></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">result<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">ftp_cwd<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">conn<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="33">ftp<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">dir<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator> <operator pos:line="30" pos:column="44">!=<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">CURLE_OK<pos:position pos:line="30" pos:column="55"/></name></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">result<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></return></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* Requested time of file? */</comment>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name><name pos:line="35" pos:column="6">data<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">set<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">get_filetime<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">&amp;&amp;<pos:position pos:line="35" pos:column="39"/></operator> <name><name pos:line="35" pos:column="32">ftp<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">file<pos:position pos:line="35" pos:column="41"/></name></name></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">result<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">ftp_getfiletime<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">conn<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="36">ftp<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">-&gt;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="41">file<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
    <if pos:line="37" pos:column="5">if<condition pos:line="37" pos:column="7">(<expr><name pos:line="37" pos:column="8">result<pos:position pos:line="37" pos:column="14"/></name></expr>)<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15">
      <block type="pseudo"><return pos:line="38" pos:column="7">return <expr><name pos:line="38" pos:column="14">result<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* If we have selected NOBODY and HEADER, it means that we only want file
     information. Which in FTP can't be much more than the file size and
     date. */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">data<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">set<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">no_body<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">&amp;&amp;<pos:position pos:line="44" pos:column="34"/></operator> <name><name pos:line="44" pos:column="27">data<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">set<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">include_header<pos:position pos:line="44" pos:column="51"/></name></name> <operator pos:line="44" pos:column="52">&amp;&amp;<pos:position pos:line="44" pos:column="62"/></operator> <name><name pos:line="44" pos:column="55">ftp<pos:position pos:line="44" pos:column="58"/></name><operator pos:line="44" pos:column="58">-&gt;<pos:position pos:line="44" pos:column="63"/></operator><name pos:line="44" pos:column="60">file<pos:position pos:line="44" pos:column="64"/></name></name></expr>)<pos:position pos:line="44" pos:column="65"/></condition><then pos:line="44" pos:column="65"> <block pos:line="44" pos:column="66">{
    <comment type="block" pos:line="45" pos:column="5">/* The SIZE command is _not_ RFC 959 specified, and therefor many servers
       may not support it! It is however the only way we have to get a file's
       size! */</comment>
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">ssize_t<pos:position pos:line="48" pos:column="12"/></name></type> <name pos:line="48" pos:column="13">filesize<pos:position pos:line="48" pos:column="21"/></name></decl>;<pos:position pos:line="48" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">ftp<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">no_transfer<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">TRUE<pos:position pos:line="50" pos:column="28"/></name></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt> <comment type="block" pos:line="50" pos:column="30">/* this means no actual transfer is made */</comment>
    
    <comment type="block" pos:line="52" pos:column="5">/* Some servers return different sizes for different modes, and thus we
       must set the proper type before we check the size */</comment>
    <expr_stmt><expr><name pos:line="54" pos:column="5">result<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">ftp_transfertype<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">conn<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="37">data<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">-&gt;<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="43">set<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">.<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="47">ftp_ascii<pos:position pos:line="54" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><name pos:line="55" pos:column="8">result<pos:position pos:line="55" pos:column="14"/></name></expr>)<pos:position pos:line="55" pos:column="15"/></condition><then pos:line="55" pos:column="15">
      <block type="pseudo"><return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">result<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/* failing to get size is not a serious error */</comment>
    <expr_stmt><expr><name pos:line="59" pos:column="5">result<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">ftp_getsize<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">conn<pos:position pos:line="59" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="32">ftp<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">-&gt;<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="37">file<pos:position pos:line="59" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="43">&amp;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="44">filesize<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>

    <if pos:line="61" pos:column="5">if<condition pos:line="61" pos:column="7">(<expr><name pos:line="61" pos:column="8">CURLE_OK<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">==<pos:position pos:line="61" pos:column="19"/></operator> <name pos:line="61" pos:column="20">result<pos:position pos:line="61" pos:column="26"/></name></expr>)<pos:position pos:line="61" pos:column="27"/></condition><then pos:line="61" pos:column="27"> <block pos:line="61" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">sprintf<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">buf<pos:position pos:line="62" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="20">"Content-Length: %d\r\n"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">filesize<pos:position pos:line="62" pos:column="54"/></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">result<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">Curl_client_write<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">data<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="40">CLIENTWRITE_BOTH<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="58">buf<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="63">0<pos:position pos:line="63" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><name pos:line="64" pos:column="10">result<pos:position pos:line="64" pos:column="16"/></name></expr>)<pos:position pos:line="64" pos:column="17"/></condition><then pos:line="64" pos:column="17">
        <block type="pseudo"><return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">result<pos:position pos:line="65" pos:column="22"/></name></expr>;<pos:position pos:line="65" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="68" pos:column="5">/* If we asked for a time of the file and we actually got one as
       well, we "emulate" a HTTP-style header in our output. */</comment>

<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">HAVE_STRFTIME<pos:position pos:line="71" pos:column="21"/></name></cpp:ifdef>
    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><name><name pos:line="72" pos:column="8">data<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">set<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">get_filetime<pos:position pos:line="72" pos:column="30"/></name></name> <operator pos:line="72" pos:column="31">&amp;&amp;<pos:position pos:line="72" pos:column="41"/></operator> <operator pos:line="72" pos:column="34">(<pos:position pos:line="72" pos:column="35"/></operator><name><name pos:line="72" pos:column="35">data<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">info<pos:position pos:line="72" pos:column="45"/></name><operator pos:line="72" pos:column="45">.<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="46">filetime<pos:position pos:line="72" pos:column="54"/></name></name><operator pos:line="72" pos:column="54">&gt;=<pos:position pos:line="72" pos:column="59"/></operator><literal type="number" pos:line="72" pos:column="56">0<pos:position pos:line="72" pos:column="57"/></literal><operator pos:line="72" pos:column="57">)<pos:position pos:line="72" pos:column="58"/></operator></expr> )<pos:position pos:line="72" pos:column="60"/></condition><then pos:line="72" pos:column="60"> <block pos:line="72" pos:column="61">{
      <decl_stmt><decl><type><name><name pos:line="73" pos:column="7">struct<pos:position pos:line="73" pos:column="13"/></name> <name pos:line="73" pos:column="14">tm<pos:position pos:line="73" pos:column="16"/></name></name> <modifier pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></modifier></type><name pos:line="73" pos:column="18">tm<pos:position pos:line="73" pos:column="20"/></name></decl>;<pos:position pos:line="73" pos:column="21"/></decl_stmt>
<cpp:ifdef pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">ifdef<pos:position pos:line="74" pos:column="7"/></cpp:directive> <name pos:line="74" pos:column="8">HAVE_LOCALTIME_R<pos:position pos:line="74" pos:column="24"/></name></cpp:ifdef>
      <decl_stmt><decl><type><name><name pos:line="75" pos:column="7">struct<pos:position pos:line="75" pos:column="13"/></name> <name pos:line="75" pos:column="14">tm<pos:position pos:line="75" pos:column="16"/></name></name></type> <name pos:line="75" pos:column="17">buffer<pos:position pos:line="75" pos:column="23"/></name></decl>;<pos:position pos:line="75" pos:column="24"/></decl_stmt>
      <expr_stmt><expr><name pos:line="76" pos:column="7">tm<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">=<pos:position pos:line="76" pos:column="11"/></operator> <operator pos:line="76" pos:column="12">(<pos:position pos:line="76" pos:column="13"/></operator>struct <name pos:line="76" pos:column="20">tm<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">*<pos:position pos:line="76" pos:column="24"/></operator><operator pos:line="76" pos:column="24">)<pos:position pos:line="76" pos:column="25"/></operator><call><name pos:line="76" pos:column="25">localtime_r<pos:position pos:line="76" pos:column="36"/></name><argument_list pos:line="76" pos:column="36">(<argument><expr><operator pos:line="76" pos:column="37">&amp;<pos:position pos:line="76" pos:column="42"/></operator><name><name pos:line="76" pos:column="38">data<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">-&gt;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="44">info<pos:position pos:line="76" pos:column="48"/></name><operator pos:line="76" pos:column="48">.<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="49">filetime<pos:position pos:line="76" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="59">&amp;<pos:position pos:line="76" pos:column="64"/></operator><name pos:line="76" pos:column="60">buffer<pos:position pos:line="76" pos:column="66"/></name></expr></argument>)<pos:position pos:line="76" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="68"/></expr_stmt>
<cpp:else pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">else<pos:position pos:line="77" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="78" pos:column="7">tm<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <call><name pos:line="78" pos:column="12">localtime<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><operator pos:line="78" pos:column="22">(<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">unsigned<pos:position pos:line="78" pos:column="31"/></name> <name pos:line="78" pos:column="32">long<pos:position pos:line="78" pos:column="36"/></name> <operator pos:line="78" pos:column="37">*<pos:position pos:line="78" pos:column="38"/></operator><operator pos:line="78" pos:column="38">)<pos:position pos:line="78" pos:column="39"/></operator><operator pos:line="78" pos:column="39">&amp;<pos:position pos:line="78" pos:column="44"/></operator><name><name pos:line="78" pos:column="40">data<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">info<pos:position pos:line="78" pos:column="50"/></name><operator pos:line="78" pos:column="50">.<pos:position pos:line="78" pos:column="51"/></operator><name pos:line="78" pos:column="51">filetime<pos:position pos:line="78" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="80" pos:column="7">/* format: "Tue, 15 Nov 1994 12:45:26 GMT" */</comment>
      <expr_stmt><expr><call><name pos:line="81" pos:column="7">strftime<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">buf<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="21">BUFSIZE<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">-<pos:position pos:line="81" pos:column="29"/></operator><literal type="number" pos:line="81" pos:column="29">1<pos:position pos:line="81" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="32">"Last-Modified: %a, %d %b %Y %H:%M:%S %Z\r\n"<pos:position pos:line="81" pos:column="77"/></literal></expr></argument>,
               <argument><expr><name pos:line="82" pos:column="16">tm<pos:position pos:line="82" pos:column="18"/></name></expr></argument>)<pos:position pos:line="82" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="83" pos:column="7">result<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <call><name pos:line="83" pos:column="16">Curl_client_write<pos:position pos:line="83" pos:column="33"/></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name pos:line="83" pos:column="34">data<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="40">CLIENTWRITE_BOTH<pos:position pos:line="83" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="58">buf<pos:position pos:line="83" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="63">0<pos:position pos:line="83" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="66"/></expr_stmt>
      <if pos:line="84" pos:column="7">if<condition pos:line="84" pos:column="9">(<expr><name pos:line="84" pos:column="10">result<pos:position pos:line="84" pos:column="16"/></name></expr>)<pos:position pos:line="84" pos:column="17"/></condition><then pos:line="84" pos:column="17">
        <block type="pseudo"><return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">result<pos:position pos:line="85" pos:column="22"/></name></expr>;<pos:position pos:line="85" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="89" pos:column="5">return <expr><name pos:line="89" pos:column="12">CURLE_OK<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></return>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <if pos:line="92" pos:column="3">if<condition pos:line="92" pos:column="5">(<expr><name><name pos:line="92" pos:column="6">data<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">set<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">.<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="16">no_body<pos:position pos:line="92" pos:column="23"/></name></name></expr>)<pos:position pos:line="92" pos:column="24"/></condition><then pos:line="92" pos:column="24">
    <comment type="block" pos:line="93" pos:column="5">/* doesn't really transfer any data */</comment>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="94" pos:column="5">ftp<pos:position pos:line="94" pos:column="8"/></name><operator pos:line="94" pos:column="8">-&gt;<pos:position pos:line="94" pos:column="13"/></operator><name pos:line="94" pos:column="10">no_transfer<pos:position pos:line="94" pos:column="21"/></name></name> <operator pos:line="94" pos:column="22">=<pos:position pos:line="94" pos:column="23"/></operator> <name pos:line="94" pos:column="24">TRUE<pos:position pos:line="94" pos:column="28"/></name></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt></block></then>
  <comment type="block" pos:line="95" pos:column="3">/* Get us a second connection up and connected */</comment>
  <elseif pos:line="96" pos:column="3">else <if pos:line="96" pos:column="8">if<condition pos:line="96" pos:column="10">(<expr><name><name pos:line="96" pos:column="11">data<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">-&gt;<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="17">set<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">ftp_use_port<pos:position pos:line="96" pos:column="33"/></name></name></expr>)<pos:position pos:line="96" pos:column="34"/></condition><then pos:line="96" pos:column="34"> <block pos:line="96" pos:column="35">{
    <comment type="block" pos:line="97" pos:column="5">/* We have chosen to use the PORT command */</comment>
    <expr_stmt><expr><name pos:line="98" pos:column="5">result<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">=<pos:position pos:line="98" pos:column="13"/></operator> <call><name pos:line="98" pos:column="14">ftp_use_port<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">conn<pos:position pos:line="98" pos:column="31"/></name></expr></argument>)<pos:position pos:line="98" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="33"/></expr_stmt>
    <if pos:line="99" pos:column="5">if<condition pos:line="99" pos:column="7">(<expr><name pos:line="99" pos:column="8">CURLE_OK<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">==<pos:position pos:line="99" pos:column="19"/></operator> <name pos:line="99" pos:column="20">result<pos:position pos:line="99" pos:column="26"/></name></expr>)<pos:position pos:line="99" pos:column="27"/></condition><then pos:line="99" pos:column="27"> <block pos:line="99" pos:column="28">{
      <comment type="block" pos:line="100" pos:column="7">/* we have the data connection ready */</comment>
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">infof<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">data<pos:position pos:line="101" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="19">"Ordered connect of the data stream with PORT!\n"<pos:position pos:line="101" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="102" pos:column="7">*<pos:position pos:line="102" pos:column="8"/></operator><name pos:line="102" pos:column="8">connected<pos:position pos:line="102" pos:column="17"/></name> <operator pos:line="102" pos:column="18">=<pos:position pos:line="102" pos:column="19"/></operator> <name pos:line="102" pos:column="20">TRUE<pos:position pos:line="102" pos:column="24"/></name></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt> <comment type="block" pos:line="102" pos:column="26">/* mark us "still connected" */</comment>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if></elseif>
  <else pos:line="105" pos:column="3">else <block pos:line="105" pos:column="8">{
    <comment type="block" pos:line="106" pos:column="5">/* We have chosen (this is default) to use the PASV command */</comment>
    <expr_stmt><expr><name pos:line="107" pos:column="5">result<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <call><name pos:line="107" pos:column="14">ftp_use_pasv<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">conn<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="33">connected<pos:position pos:line="107" pos:column="42"/></name></expr></argument>)<pos:position pos:line="107" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="44"/></expr_stmt>
    <if pos:line="108" pos:column="5">if<condition pos:line="108" pos:column="7">(<expr><name pos:line="108" pos:column="8">connected<pos:position pos:line="108" pos:column="17"/></name></expr>)<pos:position pos:line="108" pos:column="18"/></condition><then pos:line="108" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="7">infof<pos:position pos:line="109" pos:column="12"/></name><argument_list pos:line="109" pos:column="12">(<argument><expr><name pos:line="109" pos:column="13">data<pos:position pos:line="109" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="19">"Connected the data stream with PASV!\n"<pos:position pos:line="109" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="61"/></expr_stmt></block></then></if>
  }<pos:position pos:line="110" pos:column="4"/></block></else></if>
  
  <return pos:line="112" pos:column="3">return <expr><name pos:line="112" pos:column="10">result<pos:position pos:line="112" pos:column="16"/></name></expr>;<pos:position pos:line="112" pos:column="17"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

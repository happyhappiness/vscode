<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2366_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">x509_name_oneline<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">X509_NAME<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">a<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">size_t<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">size<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="3" pos:column="5">0<pos:position pos:line="3" pos:column="6"/></literal></expr></cpp:if>
  return X509_NAME_oneline(a, buf, size);
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">BIO<pos:position pos:line="6" pos:column="6"/></name> <modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type><name pos:line="6" pos:column="8">bio_out<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><call><name pos:line="6" pos:column="18">BIO_new<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><call><name pos:line="6" pos:column="26">BIO_s_mem<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">()<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">BUF_MEM<pos:position pos:line="7" pos:column="10"/></name> <modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier></type><name pos:line="7" pos:column="12">biomem<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">bio_out<pos:position pos:line="10" pos:column="14"/></name></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if> <comment type="block" pos:line="11" pos:column="15">/* alloc failed! */</comment>

  <expr_stmt><expr><name pos:line="13" pos:column="3">rc<pos:position pos:line="13" pos:column="5"/></name> <operator pos:line="13" pos:column="6">=<pos:position pos:line="13" pos:column="7"/></operator> <call><name pos:line="13" pos:column="8">X509_NAME_print_ex<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">bio_out<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">a<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">XN_FLAG_SEP_SPLUS_SPC<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">BIO_get_mem_ptr<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">bio_out<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">biomem<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">(<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">size_t<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">)<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">biomem<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">length<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">&lt;<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="31">size<pos:position pos:line="16" pos:column="35"/></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">size<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name><name pos:line="17" pos:column="12">biomem<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">length<pos:position pos:line="17" pos:column="26"/></name></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">size<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">--<pos:position pos:line="19" pos:column="11"/></operator></expr>;<pos:position pos:line="19" pos:column="12"/></expr_stmt></block></else></if> <comment type="block" pos:line="19" pos:column="13">/* don't overwrite the buffer end */</comment>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">memcpy<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name pos:line="21" pos:column="10">buf<pos:position pos:line="21" pos:column="13"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="15">biomem<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">data<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="29">size<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">buf<pos:position pos:line="22" pos:column="6"/></name><index pos:line="22" pos:column="6">[<expr><name pos:line="22" pos:column="7">size<pos:position pos:line="22" pos:column="11"/></name></expr>]<pos:position pos:line="22" pos:column="12"/></index></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">BIO_free<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">bio_out<pos:position pos:line="24" pos:column="19"/></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>

  <return pos:line="26" pos:column="3">return <expr><operator pos:line="26" pos:column="10">!<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">rc<pos:position pos:line="26" pos:column="13"/></name></expr>;<pos:position pos:line="26" pos:column="14"/></return>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_685_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ch_connc<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">SessionHandle<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">data<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">conncache<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">c<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="3" pos:column="24">long<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">newamount<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">i<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">connectdata<pos:position pos:line="6" pos:column="21"/></name></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">newptr<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">newamount<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&lt;<pos:position pos:line="8" pos:column="20"/></operator> <literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">newamount<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt></block></then></if> <comment type="block" pos:line="9" pos:column="20">/* we better have at least one entry */</comment>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">c<pos:position pos:line="11" pos:column="8"/></name></expr>)<pos:position pos:line="11" pos:column="9"/></condition><then pos:line="11" pos:column="9"> <block pos:line="11" pos:column="10">{
    <comment type="block" pos:line="12" pos:column="5">/* we get a NULL pointer passed in as connection cache, which means that
       there is no cache created for this SessionHandle just yet, we create a
       brand new with the requested size.
    */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">data<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">state<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">connc<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">Curl_mk_connc<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">CONNCACHE_PRIVATE<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">newamount<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">!<pos:position pos:line="17" pos:column="9"/></operator><name><name pos:line="17" pos:column="9">data<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">state<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">connc<pos:position pos:line="17" pos:column="26"/></name></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></return></block></then></if>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">CURLE_OK<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name pos:line="22" pos:column="6">newamount<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&lt;<pos:position pos:line="22" pos:column="20"/></operator> <name><name pos:line="22" pos:column="18">c<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">num<pos:position pos:line="22" pos:column="24"/></name></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25"> <block pos:line="22" pos:column="26">{
    <comment type="block" pos:line="23" pos:column="5">/* Since this number is *decreased* from the existing number, we must
       close the possibly open connections that live on the indexes that
       are being removed!

       NOTE: for conncache_multi cases we must make sure that we only
       close handles not in use.
    */</comment>
    <for pos:line="30" pos:column="5">for<control pos:line="30" pos:column="8">(<init><expr><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">newamount<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></init> <condition><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">&lt;<pos:position pos:line="30" pos:column="27"/></operator> <name><name pos:line="30" pos:column="25">c<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">num<pos:position pos:line="30" pos:column="31"/></name></name></expr>;<pos:position pos:line="30" pos:column="32"/></condition> <incr><expr><name pos:line="30" pos:column="33">i<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">++<pos:position pos:line="30" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="37"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">Curl_disconnect<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">c<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">connects<pos:position pos:line="31" pos:column="34"/></name><index pos:line="31" pos:column="34">[<expr><name pos:line="31" pos:column="35">i<pos:position pos:line="31" pos:column="36"/></name></expr>]<pos:position pos:line="31" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt></block></for>

    <comment type="block" pos:line="33" pos:column="5">/* If the most recent connection is no longer valid, mark it
       invalid. */</comment>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><name><name pos:line="35" pos:column="8">data<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">state<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">lastconnect<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">&lt;=<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="35">newamount<pos:position pos:line="35" pos:column="44"/></name></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="7">data<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">state<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">.<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">lastconnect<pos:position pos:line="36" pos:column="30"/></name></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <operator pos:line="36" pos:column="33">-<pos:position pos:line="36" pos:column="34"/></operator><literal type="number" pos:line="36" pos:column="34">1<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name pos:line="38" pos:column="6">newamount<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">&gt;<pos:position pos:line="38" pos:column="20"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>)<pos:position pos:line="38" pos:column="20"/></condition><then pos:line="38" pos:column="20"> <block pos:line="38" pos:column="21">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">newptr<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator>struct <name pos:line="39" pos:column="21">connectdata<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">*<pos:position pos:line="39" pos:column="34"/></operator><operator pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></operator><operator pos:line="39" pos:column="35">)<pos:position pos:line="39" pos:column="36"/></operator>
      <call><name pos:line="40" pos:column="7">realloc<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name><name pos:line="40" pos:column="15">c<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">connects<pos:position pos:line="40" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="28">sizeof<argument_list pos:line="40" pos:column="34">(<argument><expr pos:line="40" pos:column="35">struct <name pos:line="40" pos:column="42">connectdata<pos:position pos:line="40" pos:column="53"/></name> <operator pos:line="40" pos:column="54">*<pos:position pos:line="40" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></sizeof> <operator pos:line="40" pos:column="57">*<pos:position pos:line="40" pos:column="58"/></operator> <name pos:line="40" pos:column="59">newamount<pos:position pos:line="40" pos:column="68"/></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">!<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">newptr<pos:position pos:line="41" pos:column="15"/></name></expr>)<pos:position pos:line="41" pos:column="16"/></condition><then pos:line="41" pos:column="16">
      <comment type="block" pos:line="42" pos:column="7">/* we closed a few connections in vain, but so what? */</comment>
      <block type="pseudo"><return pos:line="43" pos:column="7">return <expr><name pos:line="43" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></return></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/* nullify the newly added pointers */</comment>
    <for pos:line="46" pos:column="5">for<control pos:line="46" pos:column="8">(<init><expr><name pos:line="46" pos:column="9">i<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator><name><name pos:line="46" pos:column="11">c<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">num<pos:position pos:line="46" pos:column="17"/></name></name></expr>;<pos:position pos:line="46" pos:column="18"/></init> <condition><expr><name pos:line="46" pos:column="19">i<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">&lt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">newamount<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></condition> <incr><expr><name pos:line="46" pos:column="32">i<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">++<pos:position pos:line="46" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="36"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="7">newptr<pos:position pos:line="47" pos:column="13"/></name><index pos:line="47" pos:column="13">[<expr><name pos:line="47" pos:column="14">i<pos:position pos:line="47" pos:column="15"/></name></expr>]<pos:position pos:line="47" pos:column="16"/></index></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <name pos:line="47" pos:column="19">NULL<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">c<pos:position pos:line="49" pos:column="6"/></name><operator pos:line="49" pos:column="6">-&gt;<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="8">connects<pos:position pos:line="49" pos:column="16"/></name></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">newptr<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">c<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">num<pos:position pos:line="50" pos:column="11"/></name></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">newamount<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="52" pos:column="3">/* we no longer support less than 1 as size for the connection cache, and
     I'm not sure it ever worked to set it to zero */</comment>
  <return pos:line="54" pos:column="3">return <expr><name pos:line="54" pos:column="10">CURLE_OK<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

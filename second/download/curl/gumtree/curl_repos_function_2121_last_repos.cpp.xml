<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2121_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ContentTypeForFilename<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">filename<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/*
   * If no content type was specified, we scan through a few well-known
   * extensions and pick the first we match!
   */</comment>
  <struct pos:line="9" pos:column="3">struct <name pos:line="9" pos:column="10">ContentType<pos:position pos:line="9" pos:column="21"/></name> <block pos:line="9" pos:column="22">{<public type="default" pos:line="9" pos:column="23">
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">extension<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">type<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
  <pos:position pos:line="12" pos:column="3"/></public>}<pos:position pos:line="12" pos:column="4"/></block>;<pos:position pos:line="12" pos:column="5"/></struct>
  <decl_stmt><decl><specifier pos:line="13" pos:column="3">static<pos:position pos:line="13" pos:column="9"/></specifier> <type><specifier pos:line="13" pos:column="10">const<pos:position pos:line="13" pos:column="15"/></specifier> <name><name pos:line="13" pos:column="16">struct<pos:position pos:line="13" pos:column="22"/></name> <name pos:line="13" pos:column="23">ContentType<pos:position pos:line="13" pos:column="34"/></name></name></type> <name><name pos:line="13" pos:column="35">ctts<pos:position pos:line="13" pos:column="39"/></name><index pos:line="13" pos:column="39">[]<pos:position pos:line="13" pos:column="41"/></index></name> <init pos:line="13" pos:column="42">= <expr><block pos:line="13" pos:column="44">{
    <expr><block pos:line="14" pos:column="5">{<expr><literal type="string" pos:line="14" pos:column="6">".gif"<pos:position pos:line="14" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="14" pos:column="15">"image/gif"<pos:position pos:line="14" pos:column="26"/></literal></expr>}<pos:position pos:line="14" pos:column="27"/></block></expr>,
    <expr><block pos:line="15" pos:column="5">{<expr><literal type="string" pos:line="15" pos:column="6">".jpg"<pos:position pos:line="15" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="15" pos:column="15">"image/jpeg"<pos:position pos:line="15" pos:column="27"/></literal></expr>}<pos:position pos:line="15" pos:column="28"/></block></expr>,
    <expr><block pos:line="16" pos:column="5">{<expr><literal type="string" pos:line="16" pos:column="6">".jpeg"<pos:position pos:line="16" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="16" pos:column="15">"image/jpeg"<pos:position pos:line="16" pos:column="27"/></literal></expr>}<pos:position pos:line="16" pos:column="28"/></block></expr>,
    <expr><block pos:line="17" pos:column="5">{<expr><literal type="string" pos:line="17" pos:column="6">".png"<pos:position pos:line="17" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="17" pos:column="15">"image/png"<pos:position pos:line="17" pos:column="26"/></literal></expr>}<pos:position pos:line="17" pos:column="27"/></block></expr>,
    <expr><block pos:line="18" pos:column="5">{<expr><literal type="string" pos:line="18" pos:column="6">".svg"<pos:position pos:line="18" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="18" pos:column="15">"image/svg+xml"<pos:position pos:line="18" pos:column="30"/></literal></expr>}<pos:position pos:line="18" pos:column="31"/></block></expr>,
    <expr><block pos:line="19" pos:column="5">{<expr><literal type="string" pos:line="19" pos:column="6">".txt"<pos:position pos:line="19" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="19" pos:column="15">"text/plain"<pos:position pos:line="19" pos:column="27"/></literal></expr>}<pos:position pos:line="19" pos:column="28"/></block></expr>,
    <expr><block pos:line="20" pos:column="5">{<expr><literal type="string" pos:line="20" pos:column="6">".htm"<pos:position pos:line="20" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="20" pos:column="15">"text/html"<pos:position pos:line="20" pos:column="26"/></literal></expr>}<pos:position pos:line="20" pos:column="27"/></block></expr>,
    <expr><block pos:line="21" pos:column="5">{<expr><literal type="string" pos:line="21" pos:column="6">".html"<pos:position pos:line="21" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="21" pos:column="15">"text/html"<pos:position pos:line="21" pos:column="26"/></literal></expr>}<pos:position pos:line="21" pos:column="27"/></block></expr>,
    <expr><block pos:line="22" pos:column="5">{<expr><literal type="string" pos:line="22" pos:column="6">".pdf"<pos:position pos:line="22" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="22" pos:column="15">"application/pdf"<pos:position pos:line="22" pos:column="32"/></literal></expr>}<pos:position pos:line="22" pos:column="33"/></block></expr>,
    <expr><block pos:line="23" pos:column="5">{<expr><literal type="string" pos:line="23" pos:column="6">".xml"<pos:position pos:line="23" pos:column="12"/></literal></expr>,  <expr><literal type="string" pos:line="23" pos:column="15">"application/xml"<pos:position pos:line="23" pos:column="32"/></literal></expr>}<pos:position pos:line="23" pos:column="33"/></block></expr>
  }<pos:position pos:line="24" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="24" pos:column="5"/></decl_stmt>

  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">filename<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15"> <block pos:line="26" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">size_t<pos:position pos:line="27" pos:column="11"/></name></type> <name pos:line="27" pos:column="12">len1<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><call><name pos:line="27" pos:column="19">strlen<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">filename<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">char<pos:position pos:line="28" pos:column="15"/></name> <modifier pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></modifier></type><name pos:line="28" pos:column="17">nameend<pos:position pos:line="28" pos:column="24"/></name> <init pos:line="28" pos:column="25">= <expr><name pos:line="28" pos:column="27">filename<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">+<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="38">len1<pos:position pos:line="28" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="43"/></decl_stmt>

    <for pos:line="30" pos:column="5">for<control pos:line="30" pos:column="8">(<init><expr><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></init> <condition><expr><name pos:line="30" pos:column="16">i<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&lt;<pos:position pos:line="30" pos:column="22"/></operator> <sizeof pos:line="30" pos:column="20">sizeof <name pos:line="30" pos:column="27">ctts<pos:position pos:line="30" pos:column="31"/></name></sizeof> <operator pos:line="30" pos:column="32">/<pos:position pos:line="30" pos:column="33"/></operator> <sizeof pos:line="30" pos:column="34">sizeof <name><name pos:line="30" pos:column="41">ctts<pos:position pos:line="30" pos:column="45"/></name><index pos:line="30" pos:column="45">[<expr><literal type="number" pos:line="30" pos:column="46">0<pos:position pos:line="30" pos:column="47"/></literal></expr>]<pos:position pos:line="30" pos:column="48"/></index></name></sizeof></expr>;<pos:position pos:line="30" pos:column="49"/></condition> <incr><expr><name pos:line="30" pos:column="50">i<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">++<pos:position pos:line="30" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="54"/></control> <block pos:line="30" pos:column="55">{
      <decl_stmt><decl><type><name pos:line="31" pos:column="7">size_t<pos:position pos:line="31" pos:column="13"/></name></type> <name pos:line="31" pos:column="14">len2<pos:position pos:line="31" pos:column="18"/></name> <init pos:line="31" pos:column="19">= <expr><call><name pos:line="31" pos:column="21">strlen<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name><name pos:line="31" pos:column="28">ctts<pos:position pos:line="31" pos:column="32"/></name><index pos:line="31" pos:column="32">[<expr><name pos:line="31" pos:column="33">i<pos:position pos:line="31" pos:column="34"/></name></expr>]<pos:position pos:line="31" pos:column="35"/></index></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">extension<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="47"/></decl_stmt>

      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><name pos:line="33" pos:column="10">len1<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">&gt;=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="18">len2<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&amp;&amp;<pos:position pos:line="33" pos:column="33"/></operator> <call><name pos:line="33" pos:column="26">strcasecompare<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">nameend<pos:position pos:line="33" pos:column="48"/></name> <operator pos:line="33" pos:column="49">-<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="51">len2<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="57">ctts<pos:position pos:line="33" pos:column="61"/></name><index pos:line="33" pos:column="61">[<expr><name pos:line="33" pos:column="62">i<pos:position pos:line="33" pos:column="63"/></name></expr>]<pos:position pos:line="33" pos:column="64"/></index></name><operator pos:line="33" pos:column="64">.<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="65">extension<pos:position pos:line="33" pos:column="74"/></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="76"/></condition><then pos:line="33" pos:column="76">
          <block type="pseudo"><return pos:line="34" pos:column="11">return <expr><name><name pos:line="34" pos:column="18">ctts<pos:position pos:line="34" pos:column="22"/></name><index pos:line="34" pos:column="22">[<expr><name pos:line="34" pos:column="23">i<pos:position pos:line="34" pos:column="24"/></name></expr>]<pos:position pos:line="34" pos:column="25"/></index></name><operator pos:line="34" pos:column="25">.<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">type<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></return></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">NULL<pos:position pos:line="37" pos:column="14"/></name></expr>;<pos:position pos:line="37" pos:column="15"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

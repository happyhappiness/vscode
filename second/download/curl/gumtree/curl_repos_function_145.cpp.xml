<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_145.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">glob_match_url<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">filename<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">URLGlob<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">glob<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">target<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">allocsize<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">stringlen<pos:position pos:line="5" pos:column="19"/></name><init pos:line="5" pos:column="19">=<expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">numbuf<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">18<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">appendthis<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">appendlen<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* We cannot use the glob_buffer for storage here since the filename may
   * be longer than the URL we use. We allocate a good start size, then
   * we need to realloc in case of need.
   */</comment>
  <expr_stmt><expr><name pos:line="14" pos:column="3">allocsize<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator><call><name pos:line="14" pos:column="13">strlen<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">filename<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">target<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">malloc<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">allocsize<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">NULL<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">==<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">target<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="17" pos:column="18">/* major failure */</comment>

  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">filename<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition> <block pos:line="19" pos:column="21">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">filename<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <literal type="char" pos:line="20" pos:column="22">'#'<pos:position pos:line="20" pos:column="25"/></literal> <operator pos:line="20" pos:column="26">&amp;&amp;<pos:position pos:line="20" pos:column="36"/></operator> <call><name pos:line="20" pos:column="29">isdigit<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><operator pos:line="20" pos:column="37">(<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">int<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator><name><name pos:line="20" pos:column="42">filename<pos:position pos:line="20" pos:column="50"/></name><index pos:line="20" pos:column="50">[<expr><literal type="number" pos:line="20" pos:column="51">1<pos:position pos:line="20" pos:column="52"/></literal></expr>]<pos:position pos:line="20" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="55"/></condition><then pos:line="20" pos:column="55"> <block pos:line="20" pos:column="56">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">unsigned<pos:position pos:line="21" pos:column="15"/></name> <name pos:line="21" pos:column="16">long<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">char<pos:position pos:line="22" pos:column="11"/></name> <modifier pos:line="22" pos:column="12">*<pos:position pos:line="22" pos:column="13"/></modifier></type><name pos:line="22" pos:column="13">ptr<pos:position pos:line="22" pos:column="16"/></name> <init pos:line="22" pos:column="17">= <expr><name pos:line="22" pos:column="19">filename<pos:position pos:line="22" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="28"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">unsigned<pos:position pos:line="23" pos:column="15"/></name> <name pos:line="23" pos:column="16">long<pos:position pos:line="23" pos:column="20"/></name></type> <name pos:line="23" pos:column="21">num<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><call><name pos:line="23" pos:column="27">strtoul<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><operator pos:line="23" pos:column="35">&amp;<pos:position pos:line="23" pos:column="40"/></operator><name><name pos:line="23" pos:column="36">filename<pos:position pos:line="23" pos:column="44"/></name><index pos:line="23" pos:column="44">[<expr><literal type="number" pos:line="23" pos:column="45">1<pos:position pos:line="23" pos:column="46"/></literal></expr>]<pos:position pos:line="23" pos:column="47"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="49">&amp;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="50">filename<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="60">10<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="64"/></decl_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">i<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name pos:line="24" pos:column="11">num<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>

      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">num<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&amp;&amp;<pos:position pos:line="26" pos:column="25"/></operator> <operator pos:line="26" pos:column="18">(<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">i<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">&lt;=<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="24">glob<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">size<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">/<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="37">2<pos:position pos:line="26" pos:column="38"/></literal><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40"> <block pos:line="26" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">URLPattern<pos:position pos:line="27" pos:column="19"/></name></type> <name pos:line="27" pos:column="20">pat<pos:position pos:line="27" pos:column="23"/></name> <init pos:line="27" pos:column="24">= <expr><name><name pos:line="27" pos:column="26">glob<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">pattern<pos:position pos:line="27" pos:column="39"/></name><index pos:line="27" pos:column="39">[<expr><name pos:line="27" pos:column="40">i<pos:position pos:line="27" pos:column="41"/></name></expr>]<pos:position pos:line="27" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="27" pos:column="43"/></decl_stmt>
        <switch pos:line="28" pos:column="9">switch <condition pos:line="28" pos:column="16">(<expr><name><name pos:line="28" pos:column="17">pat<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">type<pos:position pos:line="28" pos:column="25"/></name></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition> <block pos:line="28" pos:column="27">{
        <case pos:line="29" pos:column="9">case <expr><name pos:line="29" pos:column="14">UPTSet<pos:position pos:line="29" pos:column="20"/></name></expr>:<pos:position pos:line="29" pos:column="21"/></case>
          <expr_stmt><expr><name pos:line="30" pos:column="11">appendthis<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name><name pos:line="30" pos:column="24">pat<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">content<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">.<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">Set<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">.<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">elements<pos:position pos:line="30" pos:column="48"/></name><index pos:line="30" pos:column="48">[<expr><name><name pos:line="30" pos:column="49">pat<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">.<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">content<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">.<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="61">Set<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">.<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="65">ptr_s<pos:position pos:line="30" pos:column="70"/></name></name></expr>]<pos:position pos:line="30" pos:column="71"/></index></name></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
          <expr_stmt><expr><name pos:line="31" pos:column="11">appendlen<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">strlen<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name><name pos:line="31" pos:column="30">pat<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">content<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">.<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">Set<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">elements<pos:position pos:line="31" pos:column="54"/></name><index pos:line="31" pos:column="54">[<expr><name><name pos:line="31" pos:column="55">pat<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">content<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">.<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="67">Set<pos:position pos:line="31" pos:column="70"/></name><operator pos:line="31" pos:column="70">.<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="71">ptr_s<pos:position pos:line="31" pos:column="76"/></name></name></expr>]<pos:position pos:line="31" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
          <break pos:line="32" pos:column="11">break;<pos:position pos:line="32" pos:column="17"/></break>
        <case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">UPTCharRange<pos:position pos:line="33" pos:column="26"/></name></expr>:<pos:position pos:line="33" pos:column="27"/></case>
          <expr_stmt><expr><name><name pos:line="34" pos:column="11">numbuf<pos:position pos:line="34" pos:column="17"/></name><index pos:line="34" pos:column="17">[<expr><literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>]<pos:position pos:line="34" pos:column="20"/></index></name><operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator><name><name pos:line="34" pos:column="21">pat<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">content<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">.<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">CharRange<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">.<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">ptr_c<pos:position pos:line="34" pos:column="48"/></name></name></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="35" pos:column="11">numbuf<pos:position pos:line="35" pos:column="17"/></name><index pos:line="35" pos:column="17">[<expr><literal type="number" pos:line="35" pos:column="18">1<pos:position pos:line="35" pos:column="19"/></literal></expr>]<pos:position pos:line="35" pos:column="20"/></index></name><operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator><literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><name pos:line="36" pos:column="11">appendthis<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">numbuf<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="37" pos:column="11">appendlen<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator><literal type="number" pos:line="37" pos:column="21">1<pos:position pos:line="37" pos:column="22"/></literal></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
          <break pos:line="38" pos:column="11">break;<pos:position pos:line="38" pos:column="17"/></break>
        <case pos:line="39" pos:column="9">case <expr><name pos:line="39" pos:column="14">UPTNumRange<pos:position pos:line="39" pos:column="25"/></name></expr>:<pos:position pos:line="39" pos:column="26"/></case>
          <expr_stmt><expr><call><name pos:line="40" pos:column="11">sprintf<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">numbuf<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="27">"%0*d"<pos:position pos:line="40" pos:column="33"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="41" pos:column="19">pat<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">content<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">.<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">NumRange<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">.<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">padlength<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="42" pos:column="19">pat<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">.<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">content<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">.<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">NumRange<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">.<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">ptr_n<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
          <expr_stmt><expr><name pos:line="43" pos:column="11">appendthis<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <name pos:line="43" pos:column="24">numbuf<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
          <expr_stmt><expr><name pos:line="44" pos:column="11">appendlen<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">strlen<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">numbuf<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
          <break pos:line="45" pos:column="11">break;<pos:position pos:line="45" pos:column="17"/></break>
        <default pos:line="46" pos:column="9">default:<pos:position pos:line="46" pos:column="17"/></default>
          <expr_stmt><expr><call><name pos:line="47" pos:column="11">printf<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><literal type="string" pos:line="47" pos:column="18">"internal error: invalid pattern type (%d)\n"<pos:position pos:line="47" pos:column="63"/></literal></expr></argument>,
                 <argument><expr><operator pos:line="48" pos:column="18">(<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">int<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">)<pos:position pos:line="48" pos:column="23"/></operator><name><name pos:line="48" pos:column="23">pat<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">type<pos:position pos:line="48" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="49" pos:column="11">free<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">target<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
          <return pos:line="50" pos:column="11">return <expr><name pos:line="50" pos:column="18">NULL<pos:position pos:line="50" pos:column="22"/></name></expr>;<pos:position pos:line="50" pos:column="23"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></switch>
      }<pos:position pos:line="52" pos:column="8"/></block></then>
      <else pos:line="53" pos:column="7">else <block pos:line="53" pos:column="12">{
        <comment type="block" pos:line="54" pos:column="9">/* #[num] out of range, use the #[num] in the output */</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">filename<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">ptr<pos:position pos:line="55" pos:column="23"/></name></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">appendthis<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">filename<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">++<pos:position pos:line="56" pos:column="30"/></operator></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">appendlen<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator><literal type="number" pos:line="57" pos:column="19">1<pos:position pos:line="57" pos:column="20"/></literal></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="58" pos:column="8"/></block></else></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then>
    <else pos:line="60" pos:column="5">else <block pos:line="60" pos:column="10">{
      <expr_stmt><expr><name pos:line="61" pos:column="7">appendthis<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">filename<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">++<pos:position pos:line="61" pos:column="28"/></operator></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="62" pos:column="7">appendlen<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator><literal type="number" pos:line="62" pos:column="17">1<pos:position pos:line="62" pos:column="18"/></literal></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>
    <if pos:line="64" pos:column="5">if<condition pos:line="64" pos:column="7">(<expr><name pos:line="64" pos:column="8">appendlen<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">+<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">stringlen<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">&gt;=<pos:position pos:line="64" pos:column="35"/></operator> <name pos:line="64" pos:column="33">allocsize<pos:position pos:line="64" pos:column="42"/></name></expr>)<pos:position pos:line="64" pos:column="43"/></condition><then pos:line="64" pos:column="43"> <block pos:line="64" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="65" pos:column="7">char<pos:position pos:line="65" pos:column="11"/></name> <modifier pos:line="65" pos:column="12">*<pos:position pos:line="65" pos:column="13"/></modifier></type><name pos:line="65" pos:column="13">newstr<pos:position pos:line="65" pos:column="19"/></name></decl>;<pos:position pos:line="65" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><name pos:line="66" pos:column="7">allocsize<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <operator pos:line="66" pos:column="19">(<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">appendlen<pos:position pos:line="66" pos:column="29"/></name> <operator pos:line="66" pos:column="30">+<pos:position pos:line="66" pos:column="31"/></operator> <name pos:line="66" pos:column="32">stringlen<pos:position pos:line="66" pos:column="41"/></name><operator pos:line="66" pos:column="41">)<pos:position pos:line="66" pos:column="42"/></operator><operator pos:line="66" pos:column="42">*<pos:position pos:line="66" pos:column="43"/></operator><literal type="number" pos:line="66" pos:column="43">2<pos:position pos:line="66" pos:column="44"/></literal></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="67" pos:column="7">newstr<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator><call><name pos:line="67" pos:column="14">realloc<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">target<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="30">allocsize<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>
      <if pos:line="68" pos:column="7">if<condition pos:line="68" pos:column="9">(<expr><name pos:line="68" pos:column="10">NULL<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">==<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">newstr<pos:position pos:line="68" pos:column="23"/></name></expr>)<pos:position pos:line="68" pos:column="24"/></condition><then pos:line="68" pos:column="24"> <block pos:line="68" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">free<pos:position pos:line="69" pos:column="13"/></name><argument_list pos:line="69" pos:column="13">(<argument><expr><name pos:line="69" pos:column="14">target<pos:position pos:line="69" pos:column="20"/></name></expr></argument>)<pos:position pos:line="69" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">NULL<pos:position pos:line="70" pos:column="20"/></name></expr>;<pos:position pos:line="70" pos:column="21"/></return>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="72" pos:column="7">target<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">newstr<pos:position pos:line="72" pos:column="20"/></name></expr>;<pos:position pos:line="72" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">memcpy<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">(<argument><expr><operator pos:line="74" pos:column="12">&amp;<pos:position pos:line="74" pos:column="17"/></operator><name><name pos:line="74" pos:column="13">target<pos:position pos:line="74" pos:column="19"/></name><index pos:line="74" pos:column="19">[<expr><name pos:line="74" pos:column="20">stringlen<pos:position pos:line="74" pos:column="29"/></name></expr>]<pos:position pos:line="74" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="32">appendthis<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="44">appendlen<pos:position pos:line="74" pos:column="53"/></name></expr></argument>)<pos:position pos:line="74" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">stringlen<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">+=<pos:position pos:line="75" pos:column="17"/></operator> <name pos:line="75" pos:column="18">appendlen<pos:position pos:line="75" pos:column="27"/></name></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="77" pos:column="3">target<pos:position pos:line="77" pos:column="9"/></name><index pos:line="77" pos:column="9">[<expr><name pos:line="77" pos:column="10">stringlen<pos:position pos:line="77" pos:column="19"/></name></expr>]<pos:position pos:line="77" pos:column="20"/></index></name><operator pos:line="77" pos:column="20">=<pos:position pos:line="77" pos:column="21"/></operator> <literal type="char" pos:line="77" pos:column="22">'\0'<pos:position pos:line="77" pos:column="26"/></literal></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
  <return pos:line="78" pos:column="3">return <expr><name pos:line="78" pos:column="10">target<pos:position pos:line="78" pos:column="16"/></name></expr>;<pos:position pos:line="78" pos:column="17"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

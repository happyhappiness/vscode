<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1835_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">unescape_word<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">Curl_easy<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">data<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">inputbuff<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">newp<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">dictp<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">ptr<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name pos:line="7" pos:column="8">ch<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">olen<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">CURLcode<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">result<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><call><name pos:line="10" pos:column="21">Curl_urldecode<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">data<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">inputbuff<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="53">0<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="56">&amp;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="57">newp<pos:position pos:line="10" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="63">&amp;<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="64">len<pos:position pos:line="10" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="69">FALSE<pos:position pos:line="10" pos:column="74"/></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="76"/></decl_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">newp<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">||<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">result<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">dictp<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <call><name pos:line="14" pos:column="11">malloc<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="20">size_t<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">len<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator><operator pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></operator><literal type="number" pos:line="14" pos:column="32">2<pos:position pos:line="14" pos:column="33"/></literal> <operator pos:line="14" pos:column="34">+<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">1<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt> <comment type="block" pos:line="14" pos:column="40">/* add one for terminating zero */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">dictp<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12"> <block pos:line="15" pos:column="13">{
    <comment type="block" pos:line="16" pos:column="5">/* According to RFC2229 section 2.2, these letters need to be escaped with
       \[letter] */</comment>
    <for pos:line="18" pos:column="5">for<control pos:line="18" pos:column="8">(<init><expr><name pos:line="18" pos:column="9">ptr<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">newp<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></init>
        <condition><expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">ch<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">*<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">ptr<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">)<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">!=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></condition>
        <incr><expr><name pos:line="20" pos:column="9">ptr<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">++<pos:position pos:line="20" pos:column="14"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="15"/></control> <block pos:line="20" pos:column="16">{
      <if pos:line="21" pos:column="7">if<condition pos:line="21" pos:column="9">(<expr><operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">ch<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">&lt;=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="17">32<pos:position pos:line="21" pos:column="19"/></literal><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">||<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">ch<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">==<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">127<pos:position pos:line="21" pos:column="34"/></literal><operator pos:line="21" pos:column="34">)<pos:position pos:line="21" pos:column="35"/></operator> <operator pos:line="21" pos:column="36">||<pos:position pos:line="21" pos:column="38"/></operator>
          <operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">ch<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <literal type="char" pos:line="22" pos:column="18">'\''<pos:position pos:line="22" pos:column="22"/></literal><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">||<pos:position pos:line="22" pos:column="26"/></operator> <operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">ch<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <literal type="char" pos:line="22" pos:column="34">'\"'<pos:position pos:line="22" pos:column="38"/></literal><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator> <operator pos:line="22" pos:column="40">||<pos:position pos:line="22" pos:column="42"/></operator> <operator pos:line="22" pos:column="43">(<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">ch<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">==<pos:position pos:line="22" pos:column="49"/></operator> <literal type="char" pos:line="22" pos:column="50">'\\'<pos:position pos:line="22" pos:column="54"/></literal><operator pos:line="22" pos:column="54">)<pos:position pos:line="22" pos:column="55"/></operator></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56"> <block pos:line="22" pos:column="57">{
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">dictp<pos:position pos:line="23" pos:column="14"/></name><index pos:line="23" pos:column="14">[<expr><name pos:line="23" pos:column="15">olen<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">++<pos:position pos:line="23" pos:column="21"/></operator></expr>]<pos:position pos:line="23" pos:column="22"/></index></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="char" pos:line="23" pos:column="25">'\\'<pos:position pos:line="23" pos:column="29"/></literal></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="24" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">dictp<pos:position pos:line="25" pos:column="12"/></name><index pos:line="25" pos:column="12">[<expr><name pos:line="25" pos:column="13">olen<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">++<pos:position pos:line="25" pos:column="19"/></operator></expr>]<pos:position pos:line="25" pos:column="20"/></index></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">ch<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">dictp<pos:position pos:line="27" pos:column="10"/></name><index pos:line="27" pos:column="10">[<expr><name pos:line="27" pos:column="11">olen<pos:position pos:line="27" pos:column="15"/></name></expr>]<pos:position pos:line="27" pos:column="16"/></index></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">free<pos:position pos:line="29" pos:column="7"/></name><argument_list pos:line="29" pos:column="7">(<argument><expr><name pos:line="29" pos:column="8">newp<pos:position pos:line="29" pos:column="12"/></name></expr></argument>)<pos:position pos:line="29" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="14"/></expr_stmt>
  <return pos:line="30" pos:column="3">return <expr><name pos:line="30" pos:column="10">dictp<pos:position pos:line="30" pos:column="15"/></name></expr>;<pos:position pos:line="30" pos:column="16"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

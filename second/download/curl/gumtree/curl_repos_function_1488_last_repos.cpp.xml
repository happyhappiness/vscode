<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1488_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">parse_remote_port<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">Curl_easy<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">data<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name><name pos:line="2" pos:column="35">struct<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">connectdata<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">conn<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">portptr<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">endbracket<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Note that at this point, the IPv6 address cannot contain any scope
     suffix as that has already been removed in the parseurlandfillconn()
     function */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><literal type="number" pos:line="10" pos:column="7">1<pos:position pos:line="10" pos:column="8"/></literal> <operator pos:line="10" pos:column="9">==<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">sscanf<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name><name pos:line="10" pos:column="19">conn<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">host<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">name<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"[%*45[0123456789abcdefABCDEF:.]%c"<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>,
                  <argument><expr><operator pos:line="11" pos:column="19">&amp;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="20">endbracket<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="33">&amp;&amp;<pos:position pos:line="11" pos:column="43"/></operator>
     <operator pos:line="12" pos:column="6">(<pos:position pos:line="12" pos:column="7"/></operator><literal type="char" pos:line="12" pos:column="7">']'<pos:position pos:line="12" pos:column="10"/></literal> <operator pos:line="12" pos:column="11">==<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">endbracket<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block pos:line="12" pos:column="27">{
    <comment type="block" pos:line="13" pos:column="5">/* this is a RFC2732-style specified IP-address */</comment>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">conn<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">bits<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">ipv6_ip<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">TRUE<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">conn<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">host<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">name<pos:position pos:line="16" pos:column="20"/></name></name><operator pos:line="16" pos:column="20">++<pos:position pos:line="16" pos:column="22"/></operator></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt> <comment type="block" pos:line="16" pos:column="24">/* skip over the starting bracket */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">portptr<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strchr<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name><name pos:line="17" pos:column="22">conn<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">host<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">.<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">name<pos:position pos:line="17" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="39">']'<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><name pos:line="18" pos:column="8">portptr<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
      <expr_stmt><expr><operator pos:line="19" pos:column="7">*<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">portptr<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">++<pos:position pos:line="19" pos:column="17"/></operator> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="char" pos:line="19" pos:column="20">'\0'<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt> <comment type="block" pos:line="19" pos:column="26">/* zero terminate, killing the bracket */</comment>
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><literal type="char" pos:line="20" pos:column="10">':'<pos:position pos:line="20" pos:column="13"/></literal> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">portptr<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">portptr<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">NULL<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt></block></then></if> <comment type="block" pos:line="21" pos:column="25">/* no port number available */</comment>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then>
  <else pos:line="24" pos:column="3">else <block pos:line="24" pos:column="8">{
<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">ENABLE_IPV6<pos:position pos:line="25" pos:column="19"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name><name pos:line="26" pos:column="5">struct<pos:position pos:line="26" pos:column="11"/></name> <name pos:line="26" pos:column="12">in6_addr<pos:position pos:line="26" pos:column="20"/></name></name></type> <name pos:line="26" pos:column="21">in6<pos:position pos:line="26" pos:column="24"/></name></decl>;<pos:position pos:line="26" pos:column="25"/></decl_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><call><name pos:line="27" pos:column="8">Curl_inet_pton<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">AF_INET6<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="33">conn<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">host<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">.<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">name<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="50">&amp;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="51">in6<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call> <operator pos:line="27" pos:column="56">&gt;<pos:position pos:line="27" pos:column="60"/></operator> <literal type="number" pos:line="27" pos:column="58">0<pos:position pos:line="27" pos:column="59"/></literal></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60"> <block pos:line="27" pos:column="61">{
      <comment type="block" pos:line="28" pos:column="7">/* This is a numerical IPv6 address, meaning this is a wrongly formatted
         URL */</comment>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">failf<pos:position pos:line="30" pos:column="12"/></name><argument_list pos:line="30" pos:column="12">(<argument><expr><name pos:line="30" pos:column="13">data<pos:position pos:line="30" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="19">"IPv6 numerical address used in URL without brackets"<pos:position pos:line="30" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>
      <return pos:line="31" pos:column="7">return <expr><name pos:line="31" pos:column="14">CURLE_URL_MALFORMAT<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="35" pos:column="5">portptr<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">strchr<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name><name pos:line="35" pos:column="22">conn<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">host<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">name<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="39">':'<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></else></if>

  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><name><name pos:line="38" pos:column="6">data<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">set<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">use_port<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">&amp;&amp;<pos:position pos:line="38" pos:column="35"/></operator> <name><name pos:line="38" pos:column="28">data<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">state<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">allow_port<pos:position pos:line="38" pos:column="50"/></name></name></expr>)<pos:position pos:line="38" pos:column="51"/></condition><then pos:line="38" pos:column="51"> <block pos:line="38" pos:column="52">{
    <comment type="block" pos:line="39" pos:column="5">/* if set, we use this and ignore the port possibly given in the URL */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">conn<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">remote_port<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <operator pos:line="40" pos:column="25">(<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">unsigned<pos:position pos:line="40" pos:column="34"/></name> <name pos:line="40" pos:column="35">short<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">)<pos:position pos:line="40" pos:column="41"/></operator><name><name pos:line="40" pos:column="41">data<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">set<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">.<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">use_port<pos:position pos:line="40" pos:column="59"/></name></name></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">portptr<pos:position pos:line="41" pos:column="15"/></name></expr>)<pos:position pos:line="41" pos:column="16"/></condition><then pos:line="41" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="42" pos:column="7">*<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">portptr<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <literal type="char" pos:line="42" pos:column="18">'\0'<pos:position pos:line="42" pos:column="22"/></literal></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt></block></then></if> <comment type="block" pos:line="42" pos:column="24">/* cut off the name there anyway - if there was a port
                      number - since the port number is to be ignored! */</comment>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name><name pos:line="44" pos:column="8">conn<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">bits<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">httpproxy<pos:position pos:line="44" pos:column="28"/></name></name></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29"> <block pos:line="44" pos:column="30">{
      <comment type="block" pos:line="45" pos:column="7">/* we need to create new URL with the new port number */</comment>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">char<pos:position pos:line="46" pos:column="11"/></name> <modifier pos:line="46" pos:column="12">*<pos:position pos:line="46" pos:column="13"/></modifier></type><name pos:line="46" pos:column="13">url<pos:position pos:line="46" pos:column="16"/></name></decl>;<pos:position pos:line="46" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="47" pos:column="7">char<pos:position pos:line="47" pos:column="11"/></name></type> <name><name pos:line="47" pos:column="12">type<pos:position pos:line="47" pos:column="16"/></name><index pos:line="47" pos:column="16">[<expr><literal type="number" pos:line="47" pos:column="17">12<pos:position pos:line="47" pos:column="19"/></literal></expr>]<pos:position pos:line="47" pos:column="20"/></index></name><init pos:line="47" pos:column="20">=<expr><literal type="string" pos:line="47" pos:column="21">""<pos:position pos:line="47" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="24"/></decl_stmt>

      <if pos:line="49" pos:column="7">if<condition pos:line="49" pos:column="9">(<expr><name><name pos:line="49" pos:column="10">conn<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">bits<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">.<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">type_set<pos:position pos:line="49" pos:column="29"/></name></name></expr>)<pos:position pos:line="49" pos:column="30"/></condition><then pos:line="49" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="9">snprintf<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">type<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="24">sizeof<argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">type<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="38">";type=%c"<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>,
                 <argument><expr><ternary><condition><expr><name><name pos:line="51" pos:column="18">data<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">set<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">.<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">prefer_ascii<pos:position pos:line="51" pos:column="40"/></name></name></expr>?<pos:position pos:line="51" pos:column="41"/></condition><then><expr><literal type="char" pos:line="51" pos:column="41">'A'<pos:position pos:line="51" pos:column="44"/></literal></expr></then><else pos:line="51" pos:column="44">:
                 <expr><operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><ternary><condition><expr><name><name pos:line="52" pos:column="19">data<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">-&gt;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="25">set<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">.<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="29">ftp_list_only<pos:position pos:line="52" pos:column="42"/></name></name></expr>?<pos:position pos:line="52" pos:column="43"/></condition><then><expr><literal type="char" pos:line="52" pos:column="43">'D'<pos:position pos:line="52" pos:column="46"/></literal></expr></then><else pos:line="52" pos:column="46">:<expr><literal type="char" pos:line="52" pos:column="47">'I'<pos:position pos:line="52" pos:column="50"/></literal></expr></else></ternary><operator pos:line="52" pos:column="50">)<pos:position pos:line="52" pos:column="51"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="54" pos:column="7">/*
       * This synthesized URL isn't always right--suffixes like ;type=A are
       * stripped off. It would be better to work directly from the original
       * URL and simply replace the port part of it.
       */</comment>
      <expr_stmt><expr><name pos:line="59" pos:column="7">url<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">=<pos:position pos:line="59" pos:column="12"/></operator> <call><name pos:line="59" pos:column="13">aprintf<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><literal type="string" pos:line="59" pos:column="21">"%s://%s%s%s:%hu%s%s%s"<pos:position pos:line="59" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="46">conn<pos:position pos:line="59" pos:column="50"/></name><operator pos:line="59" pos:column="50">-&gt;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="52">given<pos:position pos:line="59" pos:column="57"/></name><operator pos:line="59" pos:column="57">-&gt;<pos:position pos:line="59" pos:column="62"/></operator><name pos:line="59" pos:column="59">scheme<pos:position pos:line="59" pos:column="65"/></name></name></expr></argument>,
                    <argument><expr><ternary><condition><expr><name><name pos:line="60" pos:column="21">conn<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">bits<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">.<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="32">ipv6_ip<pos:position pos:line="60" pos:column="39"/></name></name></expr>?<pos:position pos:line="60" pos:column="40"/></condition><then><expr><literal type="string" pos:line="60" pos:column="40">"["<pos:position pos:line="60" pos:column="43"/></literal></expr></then><else pos:line="60" pos:column="43">:<expr><literal type="string" pos:line="60" pos:column="44">""<pos:position pos:line="60" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="48">conn<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">-&gt;<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="54">host<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">.<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="59">name<pos:position pos:line="60" pos:column="63"/></name></name></expr></argument>,
                    <argument><expr><ternary><condition><expr><name><name pos:line="61" pos:column="21">conn<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">bits<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">.<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="32">ipv6_ip<pos:position pos:line="61" pos:column="39"/></name></name></expr>?<pos:position pos:line="61" pos:column="40"/></condition><then><expr><literal type="string" pos:line="61" pos:column="40">"]"<pos:position pos:line="61" pos:column="43"/></literal></expr></then><else pos:line="61" pos:column="43">:<expr><literal type="string" pos:line="61" pos:column="44">""<pos:position pos:line="61" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="48">conn<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">-&gt;<pos:position pos:line="61" pos:column="57"/></operator><name pos:line="61" pos:column="54">remote_port<pos:position pos:line="61" pos:column="65"/></name></name></expr></argument>,
                    <argument><expr><ternary><condition><expr><name><name pos:line="62" pos:column="21">data<pos:position pos:line="62" pos:column="25"/></name><operator pos:line="62" pos:column="25">-&gt;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="27">state<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">.<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="33">slash_removed<pos:position pos:line="62" pos:column="46"/></name></name></expr>?<pos:position pos:line="62" pos:column="47"/></condition><then><expr><literal type="string" pos:line="62" pos:column="47">"/"<pos:position pos:line="62" pos:column="50"/></literal></expr></then><else pos:line="62" pos:column="50">:<expr><literal type="string" pos:line="62" pos:column="51">""<pos:position pos:line="62" pos:column="53"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="55">data<pos:position pos:line="62" pos:column="59"/></name><operator pos:line="62" pos:column="59">-&gt;<pos:position pos:line="62" pos:column="64"/></operator><name pos:line="62" pos:column="61">state<pos:position pos:line="62" pos:column="66"/></name><operator pos:line="62" pos:column="66">.<pos:position pos:line="62" pos:column="67"/></operator><name pos:line="62" pos:column="67">path<pos:position pos:line="62" pos:column="71"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="63" pos:column="21">type<pos:position pos:line="63" pos:column="25"/></name></expr></argument>)<pos:position pos:line="63" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
      <if pos:line="64" pos:column="7">if<condition pos:line="64" pos:column="9">(<expr><operator pos:line="64" pos:column="10">!<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">url<pos:position pos:line="64" pos:column="14"/></name></expr>)<pos:position pos:line="64" pos:column="15"/></condition><then pos:line="64" pos:column="15">
        <block type="pseudo"><return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="65" pos:column="35"/></name></expr>;<pos:position pos:line="65" pos:column="36"/></return></block></then></if>

      <if pos:line="67" pos:column="7">if<condition pos:line="67" pos:column="9">(<expr><name><name pos:line="67" pos:column="10">data<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">change<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">.<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">url_alloc<pos:position pos:line="67" pos:column="32"/></name></name></expr>)<pos:position pos:line="67" pos:column="33"/></condition><then pos:line="67" pos:column="33"> <block pos:line="67" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">Curl_safefree<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name><name pos:line="68" pos:column="23">data<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">change<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">.<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="36">url<pos:position pos:line="68" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">data<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">change<pos:position pos:line="69" pos:column="21"/></name><operator pos:line="69" pos:column="21">.<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">url_alloc<pos:position pos:line="69" pos:column="31"/></name></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator> <name pos:line="69" pos:column="34">FALSE<pos:position pos:line="69" pos:column="39"/></name></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="70" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="72" pos:column="7">data<pos:position pos:line="72" pos:column="11"/></name><operator pos:line="72" pos:column="11">-&gt;<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="13">change<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">.<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="20">url<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <name pos:line="72" pos:column="26">url<pos:position pos:line="72" pos:column="29"/></name></expr>;<pos:position pos:line="72" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">data<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">-&gt;<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="13">change<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">.<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="20">url_alloc<pos:position pos:line="73" pos:column="29"/></name></name> <operator pos:line="73" pos:column="30">=<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="32">TRUE<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
  }<pos:position pos:line="75" pos:column="4"/></block></then>
  <elseif pos:line="76" pos:column="3">else <if pos:line="76" pos:column="8">if<condition pos:line="76" pos:column="10">(<expr><name pos:line="76" pos:column="11">portptr<pos:position pos:line="76" pos:column="18"/></name></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19"> <block pos:line="76" pos:column="20">{
    <comment type="block" pos:line="77" pos:column="5">/* no CURLOPT_PORT given, extract the one from the URL */</comment>

    <decl_stmt><decl><type><name pos:line="79" pos:column="5">char<pos:position pos:line="79" pos:column="9"/></name> <modifier pos:line="79" pos:column="10">*<pos:position pos:line="79" pos:column="11"/></modifier></type><name pos:line="79" pos:column="11">rest<pos:position pos:line="79" pos:column="15"/></name></decl>;<pos:position pos:line="79" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">long<pos:position pos:line="80" pos:column="9"/></name></type> <name pos:line="80" pos:column="10">port<pos:position pos:line="80" pos:column="14"/></name></decl>;<pos:position pos:line="80" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="82" pos:column="5">port<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <call><name pos:line="82" pos:column="12">strtol<pos:position pos:line="82" pos:column="18"/></name><argument_list pos:line="82" pos:column="18">(<argument><expr><name pos:line="82" pos:column="19">portptr<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">+<pos:position pos:line="82" pos:column="28"/></operator> <literal type="number" pos:line="82" pos:column="29">1<pos:position pos:line="82" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="32">&amp;<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="33">rest<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="39">10<pos:position pos:line="82" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt>  <comment type="block" pos:line="82" pos:column="45">/* Port number must be decimal */</comment>

    <if pos:line="84" pos:column="5">if<condition pos:line="84" pos:column="7">(<expr><operator pos:line="84" pos:column="8">(<pos:position pos:line="84" pos:column="9"/></operator><name pos:line="84" pos:column="9">port<pos:position pos:line="84" pos:column="13"/></name> <operator pos:line="84" pos:column="14">&lt;<pos:position pos:line="84" pos:column="18"/></operator> <literal type="number" pos:line="84" pos:column="16">0<pos:position pos:line="84" pos:column="17"/></literal><operator pos:line="84" pos:column="17">)<pos:position pos:line="84" pos:column="18"/></operator> <operator pos:line="84" pos:column="19">||<pos:position pos:line="84" pos:column="21"/></operator> <operator pos:line="84" pos:column="22">(<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="23">port<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">&gt;<pos:position pos:line="84" pos:column="32"/></operator> <literal type="number" pos:line="84" pos:column="30">0xffff<pos:position pos:line="84" pos:column="36"/></literal><operator pos:line="84" pos:column="36">)<pos:position pos:line="84" pos:column="37"/></operator></expr>)<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38"> <block pos:line="84" pos:column="39">{
      <comment type="block" pos:line="85" pos:column="7">/* Single unix standard says port numbers are 16 bits long */</comment>
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">failf<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">data<pos:position pos:line="86" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="19">"Port number out of range"<pos:position pos:line="86" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
      <return pos:line="87" pos:column="7">return <expr><name pos:line="87" pos:column="14">CURLE_URL_MALFORMAT<pos:position pos:line="87" pos:column="33"/></name></expr>;<pos:position pos:line="87" pos:column="34"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <if pos:line="90" pos:column="5">if<condition pos:line="90" pos:column="7">(<expr><name><name pos:line="90" pos:column="8">rest<pos:position pos:line="90" pos:column="12"/></name><index pos:line="90" pos:column="12">[<expr><literal type="number" pos:line="90" pos:column="13">0<pos:position pos:line="90" pos:column="14"/></literal></expr>]<pos:position pos:line="90" pos:column="15"/></index></name></expr>)<pos:position pos:line="90" pos:column="16"/></condition><then pos:line="90" pos:column="16"> <block pos:line="90" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">failf<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><name pos:line="91" pos:column="13">data<pos:position pos:line="91" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="19">"Port number ended with '%c'"<pos:position pos:line="91" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="50">rest<pos:position pos:line="91" pos:column="54"/></name><index pos:line="91" pos:column="54">[<expr><literal type="number" pos:line="91" pos:column="55">0<pos:position pos:line="91" pos:column="56"/></literal></expr>]<pos:position pos:line="91" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="59"/></expr_stmt>
      <return pos:line="92" pos:column="7">return <expr><name pos:line="92" pos:column="14">CURLE_URL_MALFORMAT<pos:position pos:line="92" pos:column="33"/></name></expr>;<pos:position pos:line="92" pos:column="34"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <if pos:line="95" pos:column="5">if<condition pos:line="95" pos:column="7">(<expr><name pos:line="95" pos:column="8">rest<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">!=<pos:position pos:line="95" pos:column="15"/></operator> <operator pos:line="95" pos:column="16">&amp;<pos:position pos:line="95" pos:column="21"/></operator><name><name pos:line="95" pos:column="17">portptr<pos:position pos:line="95" pos:column="24"/></name><index pos:line="95" pos:column="24">[<expr><literal type="number" pos:line="95" pos:column="25">1<pos:position pos:line="95" pos:column="26"/></literal></expr>]<pos:position pos:line="95" pos:column="27"/></index></name></expr>)<pos:position pos:line="95" pos:column="28"/></condition><then pos:line="95" pos:column="28"> <block pos:line="95" pos:column="29">{
      <expr_stmt><expr><operator pos:line="96" pos:column="7">*<pos:position pos:line="96" pos:column="8"/></operator><name pos:line="96" pos:column="8">portptr<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <literal type="char" pos:line="96" pos:column="18">'\0'<pos:position pos:line="96" pos:column="22"/></literal></expr>;<pos:position pos:line="96" pos:column="23"/></expr_stmt> <comment type="block" pos:line="96" pos:column="24">/* cut off the name there */</comment>
      <expr_stmt><expr><name><name pos:line="97" pos:column="7">conn<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">remote_port<pos:position pos:line="97" pos:column="24"/></name></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <call><name pos:line="97" pos:column="27">curlx_ultous<pos:position pos:line="97" pos:column="39"/></name><argument_list pos:line="97" pos:column="39">(<argument><expr><name pos:line="97" pos:column="40">port<pos:position pos:line="97" pos:column="44"/></name></expr></argument>)<pos:position pos:line="97" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then>
    <else pos:line="99" pos:column="5">else <block pos:line="99" pos:column="10">{
      <comment type="block" pos:line="100" pos:column="7">/* Browser behavior adaptation. If there's a colon with no digits after,
         just cut off the name there which makes us ignore the colon and just
         use the default port. Firefox and Chrome both do that. */</comment>
      <expr_stmt><expr><operator pos:line="103" pos:column="7">*<pos:position pos:line="103" pos:column="8"/></operator><name pos:line="103" pos:column="8">portptr<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator> <literal type="char" pos:line="103" pos:column="18">'\0'<pos:position pos:line="103" pos:column="22"/></literal></expr>;<pos:position pos:line="103" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></else></if>
  }<pos:position pos:line="105" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="107" pos:column="3">/* only if remote_port was not already parsed off the URL we use the
     default port number */</comment>
  <if pos:line="109" pos:column="3">if<condition pos:line="109" pos:column="5">(<expr><name><name pos:line="109" pos:column="6">conn<pos:position pos:line="109" pos:column="10"/></name><operator pos:line="109" pos:column="10">-&gt;<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="12">remote_port<pos:position pos:line="109" pos:column="23"/></name></name> <operator pos:line="109" pos:column="24">&lt;<pos:position pos:line="109" pos:column="28"/></operator> <literal type="number" pos:line="109" pos:column="26">0<pos:position pos:line="109" pos:column="27"/></literal></expr>)<pos:position pos:line="109" pos:column="28"/></condition><then pos:line="109" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="110" pos:column="5">conn<pos:position pos:line="110" pos:column="9"/></name><operator pos:line="110" pos:column="9">-&gt;<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="11">remote_port<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">=<pos:position pos:line="110" pos:column="24"/></operator> <operator pos:line="110" pos:column="25">(<pos:position pos:line="110" pos:column="26"/></operator><name pos:line="110" pos:column="26">unsigned<pos:position pos:line="110" pos:column="34"/></name> <name pos:line="110" pos:column="35">short<pos:position pos:line="110" pos:column="40"/></name><operator pos:line="110" pos:column="40">)<pos:position pos:line="110" pos:column="41"/></operator><name><name pos:line="110" pos:column="41">conn<pos:position pos:line="110" pos:column="45"/></name><operator pos:line="110" pos:column="45">-&gt;<pos:position pos:line="110" pos:column="50"/></operator><name pos:line="110" pos:column="47">given<pos:position pos:line="110" pos:column="52"/></name><operator pos:line="110" pos:column="52">-&gt;<pos:position pos:line="110" pos:column="57"/></operator><name pos:line="110" pos:column="54">defport<pos:position pos:line="110" pos:column="61"/></name></name></expr>;<pos:position pos:line="110" pos:column="62"/></expr_stmt></block></then></if>

  <return pos:line="112" pos:column="3">return <expr><name pos:line="112" pos:column="10">CURLE_OK<pos:position pos:line="112" pos:column="18"/></name></expr>;<pos:position pos:line="112" pos:column="19"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

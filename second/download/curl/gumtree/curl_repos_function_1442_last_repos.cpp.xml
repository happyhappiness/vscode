<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1442_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_close<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">Curl_easy<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">data<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">Curl_multi<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">m<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">data<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition><then pos:line="5" pos:column="12">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">CURLE_OK<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">Curl_expire_clear<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt> <comment type="block" pos:line="8" pos:column="28">/* shut off timers */</comment>

  <expr_stmt><expr><name pos:line="10" pos:column="3">m<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <name><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">multi<pos:position pos:line="10" pos:column="18"/></name></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">m<pos:position pos:line="12" pos:column="7"/></name></expr>)<pos:position pos:line="12" pos:column="8"/></condition><then pos:line="12" pos:column="8">
    <comment type="block" pos:line="13" pos:column="5">/* This handle is still part of a multi handle, take care of this first
       and detach this handle from there. */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">curl_multi_remove_handle<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name><name pos:line="15" pos:column="30">data<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">multi<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">data<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></then></if>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name><name pos:line="17" pos:column="6">data<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">multi_easy<pos:position pos:line="17" pos:column="22"/></name></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
    <comment type="block" pos:line="18" pos:column="5">/* when curl_easy_perform() is used, it creates its own multi handle to
       use and this is the one */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_multi_cleanup<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name><name pos:line="20" pos:column="24">data<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">multi_easy<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Destroy the timeout list that is held in the easy handle. It is
     /normally/ done by curl_multi_remove_handle() but this is "just in
     case" */</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">Curl_llist_destroy<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator><name><name pos:line="25" pos:column="23">data<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">state<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">.<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">timeoutlist<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">NULL<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">data<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">magic<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt> <comment type="block" pos:line="27" pos:column="20">/* force a clear AFTER the possibly enforced removal from
                      the multi handle, since that function uses the magic
                      field! */</comment>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><name><name pos:line="31" pos:column="6">data<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">state<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">rangestringalloc<pos:position pos:line="31" pos:column="34"/></name></name></expr>)<pos:position pos:line="31" pos:column="35"/></condition><then pos:line="31" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="5">free<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><name><name pos:line="32" pos:column="10">data<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">state<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">range<pos:position pos:line="32" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/* Free the pathbuffer */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">Curl_safefree<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name><name pos:line="35" pos:column="17">data<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">state<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">pathbuffer<pos:position pos:line="35" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">data<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">state<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">path<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NULL<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="38" pos:column="3">/* freed here just in case DONE wasn't called */</comment>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">Curl_free_request_state<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">data<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* Close down all open SSL info and sessions */</comment>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">Curl_ssl_close_all<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">data<pos:position pos:line="42" pos:column="26"/></name></expr></argument>)<pos:position pos:line="42" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">Curl_safefree<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name><name pos:line="43" pos:column="17">data<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">state<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">.<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">first_host<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">Curl_safefree<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name><name pos:line="44" pos:column="17">data<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">state<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">scratch<pos:position pos:line="44" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">Curl_ssl_free_certinfo<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">data<pos:position pos:line="45" pos:column="30"/></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="47" pos:column="3">/* Cleanup possible redirect junk */</comment>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">free<pos:position pos:line="48" pos:column="7"/></name><argument_list pos:line="48" pos:column="7">(<argument><expr><name><name pos:line="48" pos:column="8">data<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">req<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">.<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">newurl<pos:position pos:line="48" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="49" pos:column="3">data<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">req<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">.<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">newurl<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">NULL<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>

  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><name><name pos:line="51" pos:column="6">data<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">change<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">.<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">referer_alloc<pos:position pos:line="51" pos:column="32"/></name></name></expr>)<pos:position pos:line="51" pos:column="33"/></condition><then pos:line="51" pos:column="33"> <block pos:line="51" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">Curl_safefree<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name><name pos:line="52" pos:column="19">data<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">-&gt;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="25">change<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">.<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="32">referer<pos:position pos:line="52" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">data<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">change<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">.<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">referer_alloc<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <name pos:line="53" pos:column="34">FALSE<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">data<pos:position pos:line="55" pos:column="7"/></name><operator pos:line="55" pos:column="7">-&gt;<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="9">change<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">.<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">referer<pos:position pos:line="55" pos:column="23"/></name></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">NULL<pos:position pos:line="55" pos:column="30"/></name></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>

  <if pos:line="57" pos:column="3">if<condition pos:line="57" pos:column="5">(<expr><name><name pos:line="57" pos:column="6">data<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">change<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">url_alloc<pos:position pos:line="57" pos:column="28"/></name></name></expr>)<pos:position pos:line="57" pos:column="29"/></condition><then pos:line="57" pos:column="29"> <block pos:line="57" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">Curl_safefree<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name><name pos:line="58" pos:column="19">data<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">change<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">.<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">url<pos:position pos:line="58" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">data<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">change<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">url_alloc<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <name pos:line="59" pos:column="30">FALSE<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">data<pos:position pos:line="61" pos:column="7"/></name><operator pos:line="61" pos:column="7">-&gt;<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="9">change<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">url<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="22">NULL<pos:position pos:line="61" pos:column="26"/></name></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">Curl_safefree<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name><name pos:line="63" pos:column="17">data<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">state<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">.<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="29">buffer<pos:position pos:line="63" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">Curl_safefree<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name><name pos:line="64" pos:column="17">data<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">-&gt;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="23">state<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">headerbuff<pos:position pos:line="64" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">Curl_flush_cookies<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">data<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="28">1<pos:position pos:line="66" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">Curl_digest_cleanup<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">data<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">Curl_safefree<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name><name pos:line="70" pos:column="17">data<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">info<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">.<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="28">contenttype<pos:position pos:line="70" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">Curl_safefree<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name><name pos:line="71" pos:column="17">data<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">info<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">.<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">wouldredirect<pos:position pos:line="71" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>

  <comment type="block" pos:line="73" pos:column="3">/* this destroys the channel and we cannot use it anymore after this */</comment>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">Curl_resolver_cleanup<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name><name pos:line="74" pos:column="25">data<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">state<pos:position pos:line="74" pos:column="36"/></name><operator pos:line="74" pos:column="36">.<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="37">resolver<pos:position pos:line="74" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="76" pos:column="3">Curl_http2_cleanup_dependencies<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">data<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">Curl_convert_close<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">data<pos:position pos:line="77" pos:column="26"/></name></expr></argument>)<pos:position pos:line="77" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">Curl_mime_cleanpart<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><operator pos:line="79" pos:column="23">&amp;<pos:position pos:line="79" pos:column="28"/></operator><name><name pos:line="79" pos:column="24">data<pos:position pos:line="79" pos:column="28"/></name><operator pos:line="79" pos:column="28">-&gt;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="30">set<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">.<pos:position pos:line="79" pos:column="34"/></operator><name pos:line="79" pos:column="34">mimepost<pos:position pos:line="79" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="81" pos:column="3">/* No longer a dirty share, if it exists */</comment>
  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">(<expr><name><name pos:line="82" pos:column="6">data<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">-&gt;<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="12">share<pos:position pos:line="82" pos:column="17"/></name></name></expr>)<pos:position pos:line="82" pos:column="18"/></condition><then pos:line="82" pos:column="18"> <block pos:line="82" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">Curl_share_lock<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">data<pos:position pos:line="83" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="27">CURL_LOCK_DATA_SHARE<pos:position pos:line="83" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="49">CURL_LOCK_ACCESS_SINGLE<pos:position pos:line="83" pos:column="72"/></name></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">data<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">share<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">dirty<pos:position pos:line="84" pos:column="23"/></name></name><operator pos:line="84" pos:column="23">--<pos:position pos:line="84" pos:column="25"/></operator></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">Curl_share_unlock<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">data<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="29">CURL_LOCK_DATA_SHARE<pos:position pos:line="85" pos:column="49"/></name></expr></argument>)<pos:position pos:line="85" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><name><name pos:line="88" pos:column="6">data<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">-&gt;<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="12">set<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">.<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">wildcardmatch<pos:position pos:line="88" pos:column="29"/></name></name></expr>)<pos:position pos:line="88" pos:column="30"/></condition><then pos:line="88" pos:column="30"> <block pos:line="88" pos:column="31">{
    <comment type="block" pos:line="89" pos:column="5">/* destruct wildcard structures if it is needed */</comment>
    <decl_stmt><decl><type><name><name pos:line="90" pos:column="5">struct<pos:position pos:line="90" pos:column="11"/></name> <name pos:line="90" pos:column="12">WildcardData<pos:position pos:line="90" pos:column="24"/></name></name> <modifier pos:line="90" pos:column="25">*<pos:position pos:line="90" pos:column="26"/></modifier></type><name pos:line="90" pos:column="26">wc<pos:position pos:line="90" pos:column="28"/></name> <init pos:line="90" pos:column="29">= <expr><operator pos:line="90" pos:column="31">&amp;<pos:position pos:line="90" pos:column="36"/></operator><name><name pos:line="90" pos:column="32">data<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">-&gt;<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="38">wildcard<pos:position pos:line="90" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="90" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">Curl_wildcard_dtor<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><name pos:line="91" pos:column="24">wc<pos:position pos:line="91" pos:column="26"/></name></expr></argument>)<pos:position pos:line="91" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="94" pos:column="3">Curl_freeset<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><name pos:line="94" pos:column="16">data<pos:position pos:line="94" pos:column="20"/></name></expr></argument>)<pos:position pos:line="94" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="95" pos:column="3">free<pos:position pos:line="95" pos:column="7"/></name><argument_list pos:line="95" pos:column="7">(<argument><expr><name pos:line="95" pos:column="8">data<pos:position pos:line="95" pos:column="12"/></name></expr></argument>)<pos:position pos:line="95" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="14"/></expr_stmt>
  <return pos:line="96" pos:column="3">return <expr><name pos:line="96" pos:column="10">CURLE_OK<pos:position pos:line="96" pos:column="18"/></name></expr>;<pos:position pos:line="96" pos:column="19"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

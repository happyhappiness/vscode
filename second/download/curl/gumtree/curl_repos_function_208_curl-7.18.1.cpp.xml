<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_208_curl-7.18.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">data<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">config<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">fill<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[]<pos:position pos:line="7" pos:column="14"/></index></name> <init pos:line="7" pos:column="15">= <expr><literal type="string" pos:line="7" pos:column="17">"test data"<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">config<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">.<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">trace_ascii<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt> <comment type="block" pos:line="9" pos:column="27">/* enable ascii tracing */</comment>

  <expr_stmt><expr><name pos:line="11" pos:column="3">curl<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">curl_easy_init<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">curl<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11"> <block pos:line="12" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">curl_easy_setopt<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">curl<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">CURLOPT_DEBUGFUNCTION<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">my_trace<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_easy_setopt<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">curl<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">CURLOPT_DEBUGDATA<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="47">&amp;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="48">config<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* the DEBUGFUNCTION has no effect until we enable VERBOSE */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">curl_easy_setopt<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">curl<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="45">1<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* setup repeated data string */</comment>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></init> <condition><expr><name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&lt;<pos:position pos:line="19" pos:column="21"/></operator> <sizeof pos:line="19" pos:column="19">sizeof <name pos:line="19" pos:column="26">data<pos:position pos:line="19" pos:column="30"/></name></sizeof></expr>;<pos:position pos:line="19" pos:column="31"/></condition> <incr><expr><operator pos:line="19" pos:column="32">++<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">i<pos:position pos:line="19" pos:column="35"/></name></expr></incr>)<pos:position pos:line="19" pos:column="36"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="9">data<pos:position pos:line="20" pos:column="13"/></name><index pos:line="20" pos:column="13">[<expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name></expr>]<pos:position pos:line="20" pos:column="16"/></index></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <name><name pos:line="20" pos:column="19">fill<pos:position pos:line="20" pos:column="23"/></name><index pos:line="20" pos:column="23">[<expr><name pos:line="20" pos:column="24">i<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">%<pos:position pos:line="20" pos:column="27"/></operator> <sizeof pos:line="20" pos:column="28">sizeof <name pos:line="20" pos:column="35">fill<pos:position pos:line="20" pos:column="39"/></name></sizeof></expr>]<pos:position pos:line="20" pos:column="40"/></index></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt></block></for>

    <comment type="block" pos:line="22" pos:column="5">/* Post */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">curl_easy_setopt<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">curl<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">CURLOPT_POST<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="42">1<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* Setup read callback */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">curl_easy_setopt<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">curl<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">CURLOPT_POSTFIELDSIZE<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="51">sizeof <name pos:line="26" pos:column="58">data<pos:position pos:line="26" pos:column="62"/></name></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">curl_easy_setopt<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">curl<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">CURLOPT_READFUNCTION<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">read_callback<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* Write callback */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">curl_easy_setopt<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">curl<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">CURLOPT_WRITEFUNCTION<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">write_callback<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* Ioctl function */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">curl_easy_setopt<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">curl<pos:position pos:line="33" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">CURLOPT_IOCTLFUNCTION<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">ioctl_callback<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">curl_easy_setopt<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">curl<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">CURLOPT_PROXY<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">libtest_arg2<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">curl_easy_setopt<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">curl<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">CURLOPT_URL<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">URL<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="39" pos:column="5">/* Accept any auth. But for this bug configure proxy with DIGEST, basic might work too, not NTLM */</comment>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">curl_easy_setopt<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">curl<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="28">CURLOPT_PROXYAUTH<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">CURLAUTH_ANY<pos:position pos:line="40" pos:column="59"/></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">res<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <call><name pos:line="42" pos:column="11">curl_easy_perform<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">curl<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">fprintf<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">stderr<pos:position pos:line="43" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="21">"curl_easy_perform = %d\n"<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="49">(<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="50">int<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">)<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="54">res<pos:position pos:line="43" pos:column="57"/></name></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">curl_easy_cleanup<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">curl<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>
  <return pos:line="48" pos:column="3">return <expr><literal type="number" pos:line="48" pos:column="10">0<pos:position pos:line="48" pos:column="11"/></literal></expr>;<pos:position pos:line="48" pos:column="12"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

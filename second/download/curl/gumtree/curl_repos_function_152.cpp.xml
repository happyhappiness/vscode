<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_152.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">WriteOut<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">UrlData<pos:position pos:line="1" pos:column="29"/></name></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">data<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">stream<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">stdout<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><name><name pos:line="4" pos:column="13">data<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">writeinfo<pos:position pos:line="4" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <while pos:line="5" pos:column="3">while<condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ptr<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition> <block pos:line="5" pos:column="15">{
    <if pos:line="6" pos:column="5">if<condition pos:line="6" pos:column="7">(<expr><literal type="char" pos:line="6" pos:column="8">'%'<pos:position pos:line="6" pos:column="11"/></literal> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">ptr<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
      <if pos:line="7" pos:column="7">if<condition pos:line="7" pos:column="9">(<expr><literal type="char" pos:line="7" pos:column="10">'%'<pos:position pos:line="7" pos:column="13"/></literal> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">ptr<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr>]<pos:position pos:line="7" pos:column="23"/></index></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24"> <block pos:line="7" pos:column="25">{
        <comment type="block" pos:line="8" pos:column="9">/* an escaped %-letter */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">fputc<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="char" pos:line="9" pos:column="15">'%'<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">stream<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">ptr<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">+=<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">2<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="11" pos:column="8"/></block></then>
      <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <comment type="block" pos:line="13" pos:column="9">/* this is meant as a variable to output */</comment>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">end<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">keepit<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>
        <if pos:line="17" pos:column="9">if<condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><literal type="char" pos:line="17" pos:column="13">'{'<pos:position pos:line="17" pos:column="16"/></literal> <operator pos:line="17" pos:column="17">==<pos:position pos:line="17" pos:column="19"/></operator> <name><name pos:line="17" pos:column="20">ptr<pos:position pos:line="17" pos:column="23"/></name><index pos:line="17" pos:column="23">[<expr><literal type="number" pos:line="17" pos:column="24">1<pos:position pos:line="17" pos:column="25"/></literal></expr>]<pos:position pos:line="17" pos:column="26"/></index></name><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="31">(<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">end<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator><call><name pos:line="17" pos:column="36">strchr<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">ptr<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="48">'}'<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
          <expr_stmt><expr><name pos:line="18" pos:column="11">ptr<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">+=<pos:position pos:line="18" pos:column="16"/></operator><literal type="number" pos:line="18" pos:column="16">2<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt> <comment type="block" pos:line="18" pos:column="19">/* pass the % and the { */</comment>
          <expr_stmt><expr><name pos:line="19" pos:column="11">keepit<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">end<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
          <expr_stmt><expr><operator pos:line="20" pos:column="11">*<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">end<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt> <comment type="block" pos:line="20" pos:column="19">/* zero terminate */</comment>
          <for pos:line="21" pos:column="11">for<control pos:line="21" pos:column="14">(<init><expr><name pos:line="21" pos:column="15">i<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></init> <condition><expr><name><name pos:line="21" pos:column="20">replacements<pos:position pos:line="21" pos:column="32"/></name><index pos:line="21" pos:column="32">[<expr><name pos:line="21" pos:column="33">i<pos:position pos:line="21" pos:column="34"/></name></expr>]<pos:position pos:line="21" pos:column="35"/></index></name><operator pos:line="21" pos:column="35">.<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">name<pos:position pos:line="21" pos:column="40"/></name></expr>;<pos:position pos:line="21" pos:column="41"/></condition> <incr><expr><name pos:line="21" pos:column="42">i<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">++<pos:position pos:line="21" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="46"/></control> <block pos:line="21" pos:column="47">{
            <if pos:line="22" pos:column="13">if<condition pos:line="22" pos:column="15">(<expr><call><name pos:line="22" pos:column="16">strequal<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">ptr<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="30">replacements<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><name pos:line="22" pos:column="43">i<pos:position pos:line="22" pos:column="44"/></name></expr>]<pos:position pos:line="22" pos:column="45"/></index></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">name<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52"> <block pos:line="22" pos:column="53">{
              <switch pos:line="23" pos:column="15">switch<condition pos:line="23" pos:column="21">(<expr><name><name pos:line="23" pos:column="22">replacements<pos:position pos:line="23" pos:column="34"/></name><index pos:line="23" pos:column="34">[<expr><name pos:line="23" pos:column="35">i<pos:position pos:line="23" pos:column="36"/></name></expr>]<pos:position pos:line="23" pos:column="37"/></index></name><operator pos:line="23" pos:column="37">.<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">id<pos:position pos:line="23" pos:column="40"/></name></expr>)<pos:position pos:line="23" pos:column="41"/></condition> <block pos:line="23" pos:column="42">{
              <case pos:line="24" pos:column="15">case <expr><name pos:line="24" pos:column="20">VAR_EFFECTIVE_URL<pos:position pos:line="24" pos:column="37"/></name></expr>:<pos:position pos:line="24" pos:column="38"/></case>
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">fprintf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">stream<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"%s"<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="25" pos:column="39">data<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">url<pos:position pos:line="25" pos:column="48"/></name></name></expr>?<pos:position pos:line="25" pos:column="49"/></condition><then><expr><name><name pos:line="25" pos:column="49">data<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">url<pos:position pos:line="25" pos:column="58"/></name></name></expr></then><else pos:line="25" pos:column="58">:<expr><literal type="string" pos:line="25" pos:column="59">""<pos:position pos:line="25" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
                <break pos:line="26" pos:column="17">break;<pos:position pos:line="26" pos:column="23"/></break>
              <case pos:line="27" pos:column="15">case <expr><name pos:line="27" pos:column="20">VAR_HTTP_CODE<pos:position pos:line="27" pos:column="33"/></name></expr>:<pos:position pos:line="27" pos:column="34"/></case>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">fprintf<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">stream<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"%03d"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="41">data<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">progress<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">.<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="56">httpcode<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
                <break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>
              <case pos:line="30" pos:column="15">case <expr><name pos:line="30" pos:column="20">VAR_TOTAL_TIME<pos:position pos:line="30" pos:column="34"/></name></expr>:<pos:position pos:line="30" pos:column="35"/></case>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">fprintf<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">stream<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"%.3f"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="41">data<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">progress<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">.<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="56">timespent<pos:position pos:line="31" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
                <break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
              <case pos:line="33" pos:column="15">case <expr><name pos:line="33" pos:column="20">VAR_NAMELOOKUP_TIME<pos:position pos:line="33" pos:column="39"/></name></expr>:<pos:position pos:line="33" pos:column="40"/></case>
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">fprintf<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">stream<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"%.3f"<pos:position pos:line="34" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="41">tvdiff<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name><name pos:line="34" pos:column="48">data<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">-&gt;<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="54">progress<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">.<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="63">t_nslookup<pos:position pos:line="34" pos:column="73"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="35" pos:column="48">data<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">progress<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">.<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">start<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>
              <case pos:line="37" pos:column="15">case <expr><name pos:line="37" pos:column="20">VAR_CONNECT_TIME<pos:position pos:line="37" pos:column="36"/></name></expr>:<pos:position pos:line="37" pos:column="37"/></case>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">fprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">stream<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"%.3f"<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="41">tvdiff<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name><name pos:line="38" pos:column="48">data<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">progress<pos:position pos:line="38" pos:column="62"/></name><operator pos:line="38" pos:column="62">.<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="63">t_connect<pos:position pos:line="38" pos:column="72"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="39" pos:column="48">data<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">progress<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">.<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">start<pos:position pos:line="39" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
                <break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>
              <case pos:line="41" pos:column="15">case <expr><name pos:line="41" pos:column="20">VAR_PRETRANSFER_TIME<pos:position pos:line="41" pos:column="40"/></name></expr>:<pos:position pos:line="41" pos:column="41"/></case>
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">fprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">stream<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="33">"%.3f"<pos:position pos:line="42" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="41">tvdiff<pos:position pos:line="42" pos:column="47"/></name><argument_list pos:line="42" pos:column="47">(<argument><expr><name><name pos:line="42" pos:column="48">data<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">progress<pos:position pos:line="42" pos:column="62"/></name><operator pos:line="42" pos:column="62">.<pos:position pos:line="42" pos:column="63"/></operator><name pos:line="42" pos:column="63">t_pretransfer<pos:position pos:line="42" pos:column="76"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="43" pos:column="48">data<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">-&gt;<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="54">progress<pos:position pos:line="43" pos:column="62"/></name><operator pos:line="43" pos:column="62">.<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="63">start<pos:position pos:line="43" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
                <break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>
              <case pos:line="45" pos:column="15">case <expr><name pos:line="45" pos:column="20">VAR_SIZE_UPLOAD<pos:position pos:line="45" pos:column="35"/></name></expr>:<pos:position pos:line="45" pos:column="36"/></case>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">fprintf<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">stream<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="33">"%.0f"<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="41">data<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">progress<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">.<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="56">uploaded<pos:position pos:line="46" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt>
                <break pos:line="47" pos:column="17">break;<pos:position pos:line="47" pos:column="23"/></break>
              <case pos:line="48" pos:column="15">case <expr><name pos:line="48" pos:column="20">VAR_SIZE_DOWNLOAD<pos:position pos:line="48" pos:column="37"/></name></expr>:<pos:position pos:line="48" pos:column="38"/></case>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">fprintf<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">stream<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="33">"%.0f"<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="41">data<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">-&gt;<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="47">progress<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">.<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="56">downloaded<pos:position pos:line="49" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
                <break pos:line="50" pos:column="17">break;<pos:position pos:line="50" pos:column="23"/></break>
              <case pos:line="51" pos:column="15">case <expr><name pos:line="51" pos:column="20">VAR_SPEED_DOWNLOAD<pos:position pos:line="51" pos:column="38"/></name></expr>:<pos:position pos:line="51" pos:column="39"/></case>
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">fprintf<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">stream<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"%.2f"<pos:position pos:line="52" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="41">data<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">-&gt;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="47">progress<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">.<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="56">dlspeed<pos:position pos:line="52" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
                <break pos:line="53" pos:column="17">break;<pos:position pos:line="53" pos:column="23"/></break>
              <case pos:line="54" pos:column="15">case <expr><name pos:line="54" pos:column="20">VAR_SPEED_UPLOAD<pos:position pos:line="54" pos:column="36"/></name></expr>:<pos:position pos:line="54" pos:column="37"/></case>
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">fprintf<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">stream<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="33">"%.2f"<pos:position pos:line="55" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="41">data<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">progress<pos:position pos:line="55" pos:column="55"/></name><operator pos:line="55" pos:column="55">.<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="56">ulspeed<pos:position pos:line="55" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>
                <break pos:line="56" pos:column="17">break;<pos:position pos:line="56" pos:column="23"/></break>
              }<pos:position pos:line="57" pos:column="16"/></block></switch>
              <break pos:line="58" pos:column="15">break;<pos:position pos:line="58" pos:column="21"/></break>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>
          }<pos:position pos:line="60" pos:column="12"/></block></for>
          <expr_stmt><expr><name pos:line="61" pos:column="11">ptr<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">end<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">+<pos:position pos:line="61" pos:column="19"/></operator><literal type="number" pos:line="61" pos:column="19">1<pos:position pos:line="61" pos:column="20"/></literal></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt> <comment type="block" pos:line="61" pos:column="22">/* pass the end */</comment>
          <expr_stmt><expr><operator pos:line="62" pos:column="11">*<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">end<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">keepit<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then>
        <else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{
          <comment type="block" pos:line="65" pos:column="11">/* illegal syntax, then just output the characters that are used */</comment>
          <expr_stmt><expr><call><name pos:line="66" pos:column="11">fputc<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><literal type="char" pos:line="66" pos:column="17">'%'<pos:position pos:line="66" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="22">stream<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="67" pos:column="11">fputc<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name><name pos:line="67" pos:column="17">ptr<pos:position pos:line="67" pos:column="20"/></name><index pos:line="67" pos:column="20">[<expr><literal type="number" pos:line="67" pos:column="21">1<pos:position pos:line="67" pos:column="22"/></literal></expr>]<pos:position pos:line="67" pos:column="23"/></index></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="25">stream<pos:position pos:line="67" pos:column="31"/></name></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
          <expr_stmt><expr><name pos:line="68" pos:column="11">ptr<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">+=<pos:position pos:line="68" pos:column="16"/></operator><literal type="number" pos:line="68" pos:column="16">2<pos:position pos:line="68" pos:column="17"/></literal></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></else></if>
      }<pos:position pos:line="70" pos:column="8"/></block></else></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if<condition pos:line="72" pos:column="12">(<expr><literal type="char" pos:line="72" pos:column="13">'\\'<pos:position pos:line="72" pos:column="17"/></literal> <operator pos:line="72" pos:column="18">==<pos:position pos:line="72" pos:column="20"/></operator> <operator pos:line="72" pos:column="21">*<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">ptr<pos:position pos:line="72" pos:column="25"/></name></expr>)<pos:position pos:line="72" pos:column="26"/></condition><then pos:line="72" pos:column="26"> <block pos:line="72" pos:column="27">{
      <switch pos:line="73" pos:column="7">switch<condition pos:line="73" pos:column="13">(<expr><name><name pos:line="73" pos:column="14">ptr<pos:position pos:line="73" pos:column="17"/></name><index pos:line="73" pos:column="17">[<expr><literal type="number" pos:line="73" pos:column="18">1<pos:position pos:line="73" pos:column="19"/></literal></expr>]<pos:position pos:line="73" pos:column="20"/></index></name></expr>)<pos:position pos:line="73" pos:column="21"/></condition> <block pos:line="73" pos:column="22">{
      <case pos:line="74" pos:column="7">case <expr><literal type="char" pos:line="74" pos:column="12">'r'<pos:position pos:line="74" pos:column="15"/></literal></expr>:<pos:position pos:line="74" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">fputc<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><literal type="char" pos:line="75" pos:column="15">'\r'<pos:position pos:line="75" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="21">stream<pos:position pos:line="75" pos:column="27"/></name></expr></argument>)<pos:position pos:line="75" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
        <break pos:line="76" pos:column="9">break;<pos:position pos:line="76" pos:column="15"/></break>
      <case pos:line="77" pos:column="7">case <expr><literal type="char" pos:line="77" pos:column="12">'n'<pos:position pos:line="77" pos:column="15"/></literal></expr>:<pos:position pos:line="77" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">fputc<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><literal type="char" pos:line="78" pos:column="15">'\n'<pos:position pos:line="78" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="21">stream<pos:position pos:line="78" pos:column="27"/></name></expr></argument>)<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
        <break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break>
      <case pos:line="80" pos:column="7">case <expr><literal type="char" pos:line="80" pos:column="12">'t'<pos:position pos:line="80" pos:column="15"/></literal></expr>:<pos:position pos:line="80" pos:column="16"/></case>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">fputc<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><literal type="char" pos:line="81" pos:column="15">'\t'<pos:position pos:line="81" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="21">stream<pos:position pos:line="81" pos:column="27"/></name></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break>
      <default pos:line="83" pos:column="7">default:<pos:position pos:line="83" pos:column="15"/></default>
        <comment type="block" pos:line="84" pos:column="9">/* unknown, just output this */</comment>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">fputc<pos:position pos:line="85" pos:column="14"/></name><argument_list pos:line="85" pos:column="14">(<argument><expr><operator pos:line="85" pos:column="15">*<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="16">ptr<pos:position pos:line="85" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="21">stream<pos:position pos:line="85" pos:column="27"/></name></expr></argument>)<pos:position pos:line="85" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">fputc<pos:position pos:line="86" pos:column="14"/></name><argument_list pos:line="86" pos:column="14">(<argument><expr><name><name pos:line="86" pos:column="15">ptr<pos:position pos:line="86" pos:column="18"/></name><index pos:line="86" pos:column="18">[<expr><literal type="number" pos:line="86" pos:column="19">1<pos:position pos:line="86" pos:column="20"/></literal></expr>]<pos:position pos:line="86" pos:column="21"/></index></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="23">stream<pos:position pos:line="86" pos:column="29"/></name></expr></argument>)<pos:position pos:line="86" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
        <break pos:line="87" pos:column="9">break;<pos:position pos:line="87" pos:column="15"/></break>
      }<pos:position pos:line="88" pos:column="8"/></block></switch>
      <expr_stmt><expr><name pos:line="89" pos:column="7">ptr<pos:position pos:line="89" pos:column="10"/></name><operator pos:line="89" pos:column="10">+=<pos:position pos:line="89" pos:column="12"/></operator><literal type="number" pos:line="89" pos:column="12">2<pos:position pos:line="89" pos:column="13"/></literal></expr>;<pos:position pos:line="89" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if></elseif>
    <else pos:line="91" pos:column="5">else <block pos:line="91" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">fputc<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><operator pos:line="92" pos:column="13">*<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">ptr<pos:position pos:line="92" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="19">stream<pos:position pos:line="92" pos:column="25"/></name></expr></argument>)<pos:position pos:line="92" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="93" pos:column="7">ptr<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">++<pos:position pos:line="93" pos:column="12"/></operator></expr>;<pos:position pos:line="93" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></else></if>
  }<pos:position pos:line="95" pos:column="4"/></block></while>
  
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_336_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ParameterError<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">file2string<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">bufp<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">FILE<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">file<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">256<pos:position pos:line="3" pos:column="18"/></literal></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">string<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">stringlen<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">buflen<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">file<pos:position pos:line="9" pos:column="10"/></name></expr>)<pos:position pos:line="9" pos:column="11"/></condition><then pos:line="9" pos:column="11"> <block pos:line="9" pos:column="12">{
    <while pos:line="10" pos:column="5">while<condition pos:line="10" pos:column="10">(<expr><call><name pos:line="10" pos:column="11">fgets<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">buffer<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="25">sizeof<argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">buffer<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">file<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="47"/></condition> <block pos:line="10" pos:column="48">{
      <if pos:line="11" pos:column="7">if<condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">ptr<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">strchr<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">buffer<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="32">'\r'<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">!=<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">NULL<pos:position pos:line="11" pos:column="46"/></name></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">ptr<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="char" pos:line="12" pos:column="16">'\0'<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt></block></then></if>
      <if pos:line="13" pos:column="7">if<condition pos:line="13" pos:column="9">(<expr><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">ptr<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">strchr<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">buffer<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="32">'\n'<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">NULL<pos:position pos:line="13" pos:column="46"/></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">ptr<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="char" pos:line="14" pos:column="16">'\0'<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="15" pos:column="7">buflen<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">strlen<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">buffer<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
      <if pos:line="16" pos:column="7">if<condition pos:line="16" pos:column="9">(<expr><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">ptr<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">realloc<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">string<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">stringlen<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">buflen<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">+<pos:position pos:line="16" pos:column="50"/></operator><literal type="number" pos:line="16" pos:column="50">1<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call><operator pos:line="16" pos:column="52">)<pos:position pos:line="16" pos:column="53"/></operator> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="57">NULL<pos:position pos:line="16" pos:column="61"/></name></expr>)<pos:position pos:line="16" pos:column="62"/></condition><then pos:line="16" pos:column="62"> <block pos:line="16" pos:column="63">{
        <if pos:line="17" pos:column="9">if<condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">string<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="11">free<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">string<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt></block></then></if>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">PARAM_NO_MEM<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></return>
      }<pos:position pos:line="20" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="21" pos:column="7">string<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">ptr<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">strcpy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">string<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">+<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">stringlen<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">buffer<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">stringlen<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">+=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">buflen<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
  <expr_stmt><expr><operator pos:line="26" pos:column="3">*<pos:position pos:line="26" pos:column="4"/></operator><name pos:line="26" pos:column="4">bufp<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">string<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">PARAM_OK<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

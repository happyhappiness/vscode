<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_331_curl-7.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">CURLcode<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">ftp_use_pasv<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">connectdata<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">conn<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="3" pos:column="23">bool<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">connected<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">SessionHandle<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">data<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><name><name pos:line="7" pos:column="15">data<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">state<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">buffer<pos:position pos:line="7" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt> <comment type="block" pos:line="7" pos:column="35">/* this is our buffer */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ftpcode<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt> <comment type="block" pos:line="8" pos:column="16">/* receive FTP response codes in this */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">Curl_dns_entry<pos:position pos:line="10" pos:column="24"/></name></name> <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier></type><name pos:line="10" pos:column="26">addr<pos:position pos:line="10" pos:column="30"/></name><init pos:line="10" pos:column="30">=<expr><name pos:line="10" pos:column="31">NULL<pos:position pos:line="10" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Curl_ipconnect<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">conninfo<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/*
    Here's the excecutive summary on what to do:

    PASV is RFC959, expect:
    227 Entering Passive Mode (a1,a2,a3,a4,p1,p2)

    LPSV is RFC1639, expect:
    228 Entering Long Passive Mode (4,4,a1,a2,a3,a4,2,p1,p2)

    EPSV is RFC2428, expect:
    229 Entering Extended Passive Mode (|||port|)

  */</comment>

<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="27" pos:column="5">1<pos:position pos:line="27" pos:column="6"/></literal></expr></cpp:if>
  <decl_stmt><decl><type><specifier pos:line="28" pos:column="3">const<pos:position pos:line="28" pos:column="8"/></specifier> <name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name><name pos:line="28" pos:column="15">mode<pos:position pos:line="28" pos:column="19"/></name><index pos:line="28" pos:column="19">[]<pos:position pos:line="28" pos:column="21"/></index></name> <init pos:line="28" pos:column="22">= <expr><block pos:line="28" pos:column="24">{ <expr><literal type="string" pos:line="28" pos:column="26">"EPSV"<pos:position pos:line="28" pos:column="32"/></literal></expr>, <expr><literal type="string" pos:line="28" pos:column="34">"PASV"<pos:position pos:line="28" pos:column="40"/></literal></expr>, <expr><name pos:line="28" pos:column="42">NULL<pos:position pos:line="28" pos:column="46"/></name></expr> }<pos:position pos:line="28" pos:column="48"/></block></expr></init></decl>;<pos:position pos:line="28" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">int<pos:position pos:line="29" pos:column="6"/></name></type> <name><name pos:line="29" pos:column="7">results<pos:position pos:line="29" pos:column="14"/></name><index pos:line="29" pos:column="14">[]<pos:position pos:line="29" pos:column="16"/></index></name> <init pos:line="29" pos:column="17">= <expr><block pos:line="29" pos:column="19">{ <expr><literal type="number" pos:line="29" pos:column="21">229<pos:position pos:line="29" pos:column="24"/></literal></expr>, <expr><literal type="number" pos:line="29" pos:column="26">227<pos:position pos:line="29" pos:column="29"/></literal></expr>, <expr><literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal></expr> }<pos:position pos:line="29" pos:column="34"/></block></expr></init></decl>;<pos:position pos:line="29" pos:column="35"/></decl_stmt>
<cpp:else pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">else<pos:position pos:line="30" pos:column="6"/></cpp:directive></cpp:else>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="31" pos:column="5">0<pos:position pos:line="31" pos:column="6"/></literal></expr></cpp:if>
  char *mode[] = { "EPSV", "LPSV", "PASV", NULL };
  int results[] = { 229, 228, 227, 0 };
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><specifier pos:line="35" pos:column="3">const<pos:position pos:line="35" pos:column="8"/></specifier> <name pos:line="35" pos:column="9">char<pos:position pos:line="35" pos:column="13"/></name> <modifier pos:line="35" pos:column="14">*<pos:position pos:line="35" pos:column="15"/></modifier></type><name><name pos:line="35" pos:column="15">mode<pos:position pos:line="35" pos:column="19"/></name><index pos:line="35" pos:column="19">[]<pos:position pos:line="35" pos:column="21"/></index></name> <init pos:line="35" pos:column="22">= <expr><block pos:line="35" pos:column="24">{ <expr><literal type="string" pos:line="35" pos:column="26">"PASV"<pos:position pos:line="35" pos:column="32"/></literal></expr>, <expr><name pos:line="35" pos:column="34">NULL<pos:position pos:line="35" pos:column="38"/></name></expr> }<pos:position pos:line="35" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="35" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="36" pos:column="3">int<pos:position pos:line="36" pos:column="6"/></name></type> <name><name pos:line="36" pos:column="7">results<pos:position pos:line="36" pos:column="14"/></name><index pos:line="36" pos:column="14">[]<pos:position pos:line="36" pos:column="16"/></index></name> <init pos:line="36" pos:column="17">= <expr><block pos:line="36" pos:column="19">{ <expr><literal type="number" pos:line="36" pos:column="21">227<pos:position pos:line="36" pos:column="24"/></literal></expr>, <expr><literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr> }<pos:position pos:line="36" pos:column="29"/></block></expr></init></decl>;<pos:position pos:line="36" pos:column="30"/></decl_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="39" pos:column="3">int<pos:position pos:line="39" pos:column="6"/></name></type> <name pos:line="39" pos:column="7">modeoff<pos:position pos:line="39" pos:column="14"/></name></decl>;<pos:position pos:line="39" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="40" pos:column="3">unsigned<pos:position pos:line="40" pos:column="11"/></name> <name pos:line="40" pos:column="12">short<pos:position pos:line="40" pos:column="17"/></name></type> <name pos:line="40" pos:column="18">connectport<pos:position pos:line="40" pos:column="29"/></name></decl>;<pos:position pos:line="40" pos:column="30"/></decl_stmt> <comment type="block" pos:line="40" pos:column="31">/* the local port connect() should use! */</comment>
  <decl_stmt><decl><type><name pos:line="41" pos:column="3">unsigned<pos:position pos:line="41" pos:column="11"/></name> <name pos:line="41" pos:column="12">short<pos:position pos:line="41" pos:column="17"/></name></type> <name pos:line="41" pos:column="18">newport<pos:position pos:line="41" pos:column="25"/></name><init pos:line="41" pos:column="25">=<expr><literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="28"/></decl_stmt> <comment type="block" pos:line="41" pos:column="29">/* remote port, not necessary the local one */</comment>
  
  <comment type="block" pos:line="43" pos:column="3">/* newhost must be able to hold a full IP-style address in ASCII, which
     in the IPv6 case means 5*8-1 = 39 letters */</comment>
  <decl_stmt><decl><type><name pos:line="45" pos:column="3">char<pos:position pos:line="45" pos:column="7"/></name></type> <name><name pos:line="45" pos:column="8">newhost<pos:position pos:line="45" pos:column="15"/></name><index pos:line="45" pos:column="15">[<expr><literal type="number" pos:line="45" pos:column="16">48<pos:position pos:line="45" pos:column="18"/></literal></expr>]<pos:position pos:line="45" pos:column="19"/></index></name></decl>;<pos:position pos:line="45" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="46" pos:column="3">char<pos:position pos:line="46" pos:column="7"/></name> <modifier pos:line="46" pos:column="8">*<pos:position pos:line="46" pos:column="9"/></modifier></type><name pos:line="46" pos:column="9">newhostp<pos:position pos:line="46" pos:column="17"/></name><init pos:line="46" pos:column="17">=<expr><name pos:line="46" pos:column="18">NULL<pos:position pos:line="46" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="23"/></decl_stmt>
  
  <for pos:line="48" pos:column="3">for <control pos:line="48" pos:column="7">(<init><expr><name pos:line="48" pos:column="8">modeoff<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <operator pos:line="48" pos:column="18">(<pos:position pos:line="48" pos:column="19"/></operator><ternary><condition><expr><name><name pos:line="48" pos:column="19">data<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">set<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">.<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">ftp_use_epsv<pos:position pos:line="48" pos:column="41"/></name></name></expr>?<pos:position pos:line="48" pos:column="42"/></condition><then><expr><literal type="number" pos:line="48" pos:column="42">0<pos:position pos:line="48" pos:column="43"/></literal></expr></then><else pos:line="48" pos:column="43">:<expr><literal type="number" pos:line="48" pos:column="44">1<pos:position pos:line="48" pos:column="45"/></literal></expr></else></ternary><operator pos:line="48" pos:column="45">)<pos:position pos:line="48" pos:column="46"/></operator></expr>;<pos:position pos:line="48" pos:column="47"/></init>
       <condition><expr><name><name pos:line="49" pos:column="8">mode<pos:position pos:line="49" pos:column="12"/></name><index pos:line="49" pos:column="12">[<expr><name pos:line="49" pos:column="13">modeoff<pos:position pos:line="49" pos:column="20"/></name></expr>]<pos:position pos:line="49" pos:column="21"/></index></name></expr>;<pos:position pos:line="49" pos:column="22"/></condition> <incr><expr><name pos:line="49" pos:column="23">modeoff<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">++<pos:position pos:line="49" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="33"/></control> <block pos:line="49" pos:column="34">{
    <expr_stmt><expr><name pos:line="50" pos:column="5">result<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">Curl_ftpsendf<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">conn<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="34">"%s"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="40">mode<pos:position pos:line="50" pos:column="44"/></name><index pos:line="50" pos:column="44">[<expr><name pos:line="50" pos:column="45">modeoff<pos:position pos:line="50" pos:column="52"/></name></expr>]<pos:position pos:line="50" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><name pos:line="51" pos:column="8">result<pos:position pos:line="51" pos:column="14"/></name></expr>)<pos:position pos:line="51" pos:column="15"/></condition><then pos:line="51" pos:column="15">
      <block type="pseudo"><return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">result<pos:position pos:line="52" pos:column="20"/></name></expr>;<pos:position pos:line="52" pos:column="21"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="53" pos:column="5">result<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">Curl_GetFTPResponse<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><operator pos:line="53" pos:column="34">&amp;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="35">nread<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">conn<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="48">&amp;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="49">ftpcode<pos:position pos:line="53" pos:column="56"/></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">result<pos:position pos:line="54" pos:column="14"/></name></expr>)<pos:position pos:line="54" pos:column="15"/></condition><then pos:line="54" pos:column="15">
      <block type="pseudo"><return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">result<pos:position pos:line="55" pos:column="20"/></name></expr>;<pos:position pos:line="55" pos:column="21"/></return></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">ftpcode<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">==<pos:position pos:line="56" pos:column="19"/></operator> <name><name pos:line="56" pos:column="20">results<pos:position pos:line="56" pos:column="27"/></name><index pos:line="56" pos:column="27">[<expr><name pos:line="56" pos:column="28">modeoff<pos:position pos:line="56" pos:column="35"/></name></expr>]<pos:position pos:line="56" pos:column="36"/></index></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37">
      <block type="pseudo"><break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></for>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><operator pos:line="60" pos:column="7">!<pos:position pos:line="60" pos:column="8"/></operator><name><name pos:line="60" pos:column="8">mode<pos:position pos:line="60" pos:column="12"/></name><index pos:line="60" pos:column="12">[<expr><name pos:line="60" pos:column="13">modeoff<pos:position pos:line="60" pos:column="20"/></name></expr>]<pos:position pos:line="60" pos:column="21"/></index></name></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22"> <block pos:line="60" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">failf<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">data<pos:position pos:line="61" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="17">"Odd return code after PASV"<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="62" pos:column="38"/></name></expr>;<pos:position pos:line="62" pos:column="39"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></then>
  <elseif pos:line="64" pos:column="3">else <if pos:line="64" pos:column="8">if <condition pos:line="64" pos:column="11">(<expr><literal type="number" pos:line="64" pos:column="12">227<pos:position pos:line="64" pos:column="15"/></literal> <operator pos:line="64" pos:column="16">==<pos:position pos:line="64" pos:column="18"/></operator> <name><name pos:line="64" pos:column="19">results<pos:position pos:line="64" pos:column="26"/></name><index pos:line="64" pos:column="26">[<expr><name pos:line="64" pos:column="27">modeoff<pos:position pos:line="64" pos:column="34"/></name></expr>]<pos:position pos:line="64" pos:column="35"/></index></name></expr>)<pos:position pos:line="64" pos:column="36"/></condition><then pos:line="64" pos:column="36"> <block pos:line="64" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">int<pos:position pos:line="65" pos:column="8"/></name></type> <name><name pos:line="65" pos:column="9">ip<pos:position pos:line="65" pos:column="11"/></name><index pos:line="65" pos:column="11">[<expr><literal type="number" pos:line="65" pos:column="12">4<pos:position pos:line="65" pos:column="13"/></literal></expr>]<pos:position pos:line="65" pos:column="14"/></index></name></decl>;<pos:position pos:line="65" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="66" pos:column="5">int<pos:position pos:line="66" pos:column="8"/></name></type> <name><name pos:line="66" pos:column="9">port<pos:position pos:line="66" pos:column="13"/></name><index pos:line="66" pos:column="13">[<expr><literal type="number" pos:line="66" pos:column="14">2<pos:position pos:line="66" pos:column="15"/></literal></expr>]<pos:position pos:line="66" pos:column="16"/></index></name></decl>;<pos:position pos:line="66" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">char<pos:position pos:line="67" pos:column="9"/></name> <modifier pos:line="67" pos:column="10">*<pos:position pos:line="67" pos:column="11"/></modifier></type><name pos:line="67" pos:column="11">str<pos:position pos:line="67" pos:column="14"/></name><init pos:line="67" pos:column="14">=<expr><name pos:line="67" pos:column="15">buf<pos:position pos:line="67" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="67" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="69" pos:column="5">/*
     * New 227-parser June 3rd 1999.
     * It now scans for a sequence of six comma-separated numbers and
     * will take them as IP+port indicators.
     *
     * Found reply-strings include:
     * "227 Entering Passive Mode (127,0,0,1,4,51)"
     * "227 Data transfer will passively listen to 127,0,0,1,4,51"
     * "227 Entering passive mode. 127,0,0,1,4,51"
     */</comment>
      
    <while pos:line="80" pos:column="5">while<condition pos:line="80" pos:column="10">(<expr><operator pos:line="80" pos:column="11">*<pos:position pos:line="80" pos:column="12"/></operator><name pos:line="80" pos:column="12">str<pos:position pos:line="80" pos:column="15"/></name></expr>)<pos:position pos:line="80" pos:column="16"/></condition> <block pos:line="80" pos:column="17">{
      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><literal type="number" pos:line="81" pos:column="11">6<pos:position pos:line="81" pos:column="12"/></literal> <operator pos:line="81" pos:column="13">==<pos:position pos:line="81" pos:column="15"/></operator> <call><name pos:line="81" pos:column="16">sscanf<pos:position pos:line="81" pos:column="22"/></name><argument_list pos:line="81" pos:column="22">(<argument><expr><name pos:line="81" pos:column="23">str<pos:position pos:line="81" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="28">"%d,%d,%d,%d,%d,%d"<pos:position pos:line="81" pos:column="47"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="82" pos:column="23">&amp;<pos:position pos:line="82" pos:column="28"/></operator><name><name pos:line="82" pos:column="24">ip<pos:position pos:line="82" pos:column="26"/></name><index pos:line="82" pos:column="26">[<expr><literal type="number" pos:line="82" pos:column="27">0<pos:position pos:line="82" pos:column="28"/></literal></expr>]<pos:position pos:line="82" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="31">&amp;<pos:position pos:line="82" pos:column="36"/></operator><name><name pos:line="82" pos:column="32">ip<pos:position pos:line="82" pos:column="34"/></name><index pos:line="82" pos:column="34">[<expr><literal type="number" pos:line="82" pos:column="35">1<pos:position pos:line="82" pos:column="36"/></literal></expr>]<pos:position pos:line="82" pos:column="37"/></index></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="39">&amp;<pos:position pos:line="82" pos:column="44"/></operator><name><name pos:line="82" pos:column="40">ip<pos:position pos:line="82" pos:column="42"/></name><index pos:line="82" pos:column="42">[<expr><literal type="number" pos:line="82" pos:column="43">2<pos:position pos:line="82" pos:column="44"/></literal></expr>]<pos:position pos:line="82" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="47">&amp;<pos:position pos:line="82" pos:column="52"/></operator><name><name pos:line="82" pos:column="48">ip<pos:position pos:line="82" pos:column="50"/></name><index pos:line="82" pos:column="50">[<expr><literal type="number" pos:line="82" pos:column="51">3<pos:position pos:line="82" pos:column="52"/></literal></expr>]<pos:position pos:line="82" pos:column="53"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="83" pos:column="23">&amp;<pos:position pos:line="83" pos:column="28"/></operator><name><name pos:line="83" pos:column="24">port<pos:position pos:line="83" pos:column="28"/></name><index pos:line="83" pos:column="28">[<expr><literal type="number" pos:line="83" pos:column="29">0<pos:position pos:line="83" pos:column="30"/></literal></expr>]<pos:position pos:line="83" pos:column="31"/></index></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="33">&amp;<pos:position pos:line="83" pos:column="38"/></operator><name><name pos:line="83" pos:column="34">port<pos:position pos:line="83" pos:column="38"/></name><index pos:line="83" pos:column="38">[<expr><literal type="number" pos:line="83" pos:column="39">1<pos:position pos:line="83" pos:column="40"/></literal></expr>]<pos:position pos:line="83" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43">
        <block type="pseudo"><break pos:line="84" pos:column="9">break;<pos:position pos:line="84" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="85" pos:column="7">str<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">++<pos:position pos:line="85" pos:column="12"/></operator></expr>;<pos:position pos:line="85" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></while>

    <if pos:line="88" pos:column="5">if<condition pos:line="88" pos:column="7">(<expr><operator pos:line="88" pos:column="8">!<pos:position pos:line="88" pos:column="9"/></operator><operator pos:line="88" pos:column="9">*<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="10">str<pos:position pos:line="88" pos:column="13"/></name></expr>)<pos:position pos:line="88" pos:column="14"/></condition><then pos:line="88" pos:column="14"> <block pos:line="88" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">failf<pos:position pos:line="89" pos:column="12"/></name><argument_list pos:line="89" pos:column="12">(<argument><expr><name pos:line="89" pos:column="13">data<pos:position pos:line="89" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="19">"Couldn't interpret this 227-reply: %s"<pos:position pos:line="89" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="60">buf<pos:position pos:line="89" pos:column="63"/></name></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="65"/></expr_stmt>
      <return pos:line="90" pos:column="7">return <expr><name pos:line="90" pos:column="14">CURLE_FTP_WEIRD_227_FORMAT<pos:position pos:line="90" pos:column="40"/></name></expr>;<pos:position pos:line="90" pos:column="41"/></return>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="93" pos:column="5">sprintf<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">newhost<pos:position pos:line="93" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="22">"%d.%d.%d.%d"<pos:position pos:line="93" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="37">ip<pos:position pos:line="93" pos:column="39"/></name><index pos:line="93" pos:column="39">[<expr><literal type="number" pos:line="93" pos:column="40">0<pos:position pos:line="93" pos:column="41"/></literal></expr>]<pos:position pos:line="93" pos:column="42"/></index></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="44">ip<pos:position pos:line="93" pos:column="46"/></name><index pos:line="93" pos:column="46">[<expr><literal type="number" pos:line="93" pos:column="47">1<pos:position pos:line="93" pos:column="48"/></literal></expr>]<pos:position pos:line="93" pos:column="49"/></index></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="51">ip<pos:position pos:line="93" pos:column="53"/></name><index pos:line="93" pos:column="53">[<expr><literal type="number" pos:line="93" pos:column="54">2<pos:position pos:line="93" pos:column="55"/></literal></expr>]<pos:position pos:line="93" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="58">ip<pos:position pos:line="93" pos:column="60"/></name><index pos:line="93" pos:column="60">[<expr><literal type="number" pos:line="93" pos:column="61">3<pos:position pos:line="93" pos:column="62"/></literal></expr>]<pos:position pos:line="93" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="94" pos:column="5">newhostp<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <name pos:line="94" pos:column="16">newhost<pos:position pos:line="94" pos:column="23"/></name></expr>;<pos:position pos:line="94" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="95" pos:column="5">newport<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">=<pos:position pos:line="95" pos:column="14"/></operator> <operator pos:line="95" pos:column="15">(<pos:position pos:line="95" pos:column="16"/></operator><name><name pos:line="95" pos:column="16">port<pos:position pos:line="95" pos:column="20"/></name><index pos:line="95" pos:column="20">[<expr><literal type="number" pos:line="95" pos:column="21">0<pos:position pos:line="95" pos:column="22"/></literal></expr>]<pos:position pos:line="95" pos:column="23"/></index></name><operator pos:line="95" pos:column="23">&lt;&lt;<pos:position pos:line="95" pos:column="31"/></operator><literal type="number" pos:line="95" pos:column="25">8<pos:position pos:line="95" pos:column="26"/></literal><operator pos:line="95" pos:column="26">)<pos:position pos:line="95" pos:column="27"/></operator> <operator pos:line="95" pos:column="28">+<pos:position pos:line="95" pos:column="29"/></operator> <name><name pos:line="95" pos:column="30">port<pos:position pos:line="95" pos:column="34"/></name><index pos:line="95" pos:column="34">[<expr><literal type="number" pos:line="95" pos:column="35">1<pos:position pos:line="95" pos:column="36"/></literal></expr>]<pos:position pos:line="95" pos:column="37"/></index></name></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if></elseif>
<cpp:if pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">if<pos:position pos:line="97" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="97" pos:column="5">1<pos:position pos:line="97" pos:column="6"/></literal></expr></cpp:if>
  <elseif pos:line="98" pos:column="3">else <if pos:line="98" pos:column="8">if <condition pos:line="98" pos:column="11">(<expr><literal type="number" pos:line="98" pos:column="12">229<pos:position pos:line="98" pos:column="15"/></literal> <operator pos:line="98" pos:column="16">==<pos:position pos:line="98" pos:column="18"/></operator> <name><name pos:line="98" pos:column="19">results<pos:position pos:line="98" pos:column="26"/></name><index pos:line="98" pos:column="26">[<expr><name pos:line="98" pos:column="27">modeoff<pos:position pos:line="98" pos:column="34"/></name></expr>]<pos:position pos:line="98" pos:column="35"/></index></name></expr>)<pos:position pos:line="98" pos:column="36"/></condition><then pos:line="98" pos:column="36"> <block pos:line="98" pos:column="37">{
    <decl_stmt><decl><type><name pos:line="99" pos:column="5">char<pos:position pos:line="99" pos:column="9"/></name> <modifier pos:line="99" pos:column="10">*<pos:position pos:line="99" pos:column="11"/></modifier></type><name pos:line="99" pos:column="11">ptr<pos:position pos:line="99" pos:column="14"/></name> <init pos:line="99" pos:column="15">= <expr><call><name pos:line="99" pos:column="17">strchr<pos:position pos:line="99" pos:column="23"/></name><argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">buf<pos:position pos:line="99" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="99" pos:column="29">'('<pos:position pos:line="99" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="99" pos:column="34"/></decl_stmt>
    <if pos:line="100" pos:column="5">if<condition pos:line="100" pos:column="7">(<expr><name pos:line="100" pos:column="8">ptr<pos:position pos:line="100" pos:column="11"/></name></expr>)<pos:position pos:line="100" pos:column="12"/></condition><then pos:line="100" pos:column="12"> <block pos:line="100" pos:column="13">{
      <decl_stmt><decl><type><name pos:line="101" pos:column="7">unsigned<pos:position pos:line="101" pos:column="15"/></name> <name pos:line="101" pos:column="16">int<pos:position pos:line="101" pos:column="19"/></name></type> <name pos:line="101" pos:column="20">num<pos:position pos:line="101" pos:column="23"/></name></decl>;<pos:position pos:line="101" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="102" pos:column="7">char<pos:position pos:line="102" pos:column="11"/></name></type> <name><name pos:line="102" pos:column="12">separator<pos:position pos:line="102" pos:column="21"/></name><index pos:line="102" pos:column="21">[<expr><literal type="number" pos:line="102" pos:column="22">4<pos:position pos:line="102" pos:column="23"/></literal></expr>]<pos:position pos:line="102" pos:column="24"/></index></name></decl>;<pos:position pos:line="102" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><name pos:line="103" pos:column="7">ptr<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">++<pos:position pos:line="103" pos:column="12"/></operator></expr>;<pos:position pos:line="103" pos:column="13"/></expr_stmt>
      <if pos:line="104" pos:column="7">if<condition pos:line="104" pos:column="9">(<expr><literal type="number" pos:line="104" pos:column="10">5<pos:position pos:line="104" pos:column="11"/></literal>  <operator pos:line="104" pos:column="13">==<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">sscanf<pos:position pos:line="104" pos:column="22"/></name><argument_list pos:line="104" pos:column="22">(<argument><expr><name pos:line="104" pos:column="23">ptr<pos:position pos:line="104" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="28">"%c%c%c%u%c"<pos:position pos:line="104" pos:column="40"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="105" pos:column="23">&amp;<pos:position pos:line="105" pos:column="28"/></operator><name><name pos:line="105" pos:column="24">separator<pos:position pos:line="105" pos:column="33"/></name><index pos:line="105" pos:column="33">[<expr><literal type="number" pos:line="105" pos:column="34">0<pos:position pos:line="105" pos:column="35"/></literal></expr>]<pos:position pos:line="105" pos:column="36"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="106" pos:column="23">&amp;<pos:position pos:line="106" pos:column="28"/></operator><name><name pos:line="106" pos:column="24">separator<pos:position pos:line="106" pos:column="33"/></name><index pos:line="106" pos:column="33">[<expr><literal type="number" pos:line="106" pos:column="34">1<pos:position pos:line="106" pos:column="35"/></literal></expr>]<pos:position pos:line="106" pos:column="36"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="107" pos:column="23">&amp;<pos:position pos:line="107" pos:column="28"/></operator><name><name pos:line="107" pos:column="24">separator<pos:position pos:line="107" pos:column="33"/></name><index pos:line="107" pos:column="33">[<expr><literal type="number" pos:line="107" pos:column="34">2<pos:position pos:line="107" pos:column="35"/></literal></expr>]<pos:position pos:line="107" pos:column="36"/></index></name></expr></argument>,
                      <argument><expr><operator pos:line="108" pos:column="23">&amp;<pos:position pos:line="108" pos:column="28"/></operator><name pos:line="108" pos:column="24">num<pos:position pos:line="108" pos:column="27"/></name></expr></argument>,
                      <argument><expr><operator pos:line="109" pos:column="23">&amp;<pos:position pos:line="109" pos:column="28"/></operator><name><name pos:line="109" pos:column="24">separator<pos:position pos:line="109" pos:column="33"/></name><index pos:line="109" pos:column="33">[<expr><literal type="number" pos:line="109" pos:column="34">3<pos:position pos:line="109" pos:column="35"/></literal></expr>]<pos:position pos:line="109" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="109" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="38"/></condition><then pos:line="109" pos:column="38"> <block pos:line="109" pos:column="39">{
        <comment type="block" pos:line="110" pos:column="9">/* the four separators should be identical */</comment>
        <expr_stmt><expr><name pos:line="111" pos:column="9">newport<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <name pos:line="111" pos:column="19">num<pos:position pos:line="111" pos:column="22"/></name></expr>;<pos:position pos:line="111" pos:column="23"/></expr_stmt>

        <comment type="block" pos:line="113" pos:column="9">/* we should use the same host we already are connected to */</comment>
        <expr_stmt><expr><name pos:line="114" pos:column="9">newhostp<pos:position pos:line="114" pos:column="17"/></name> <operator pos:line="114" pos:column="18">=<pos:position pos:line="114" pos:column="19"/></operator> <name><name pos:line="114" pos:column="20">conn<pos:position pos:line="114" pos:column="24"/></name><operator pos:line="114" pos:column="24">-&gt;<pos:position pos:line="114" pos:column="29"/></operator><name pos:line="114" pos:column="26">name<pos:position pos:line="114" pos:column="30"/></name></name></expr>;<pos:position pos:line="114" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="115" pos:column="8"/></block></then>                      
      <else pos:line="116" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="9">ptr<pos:position pos:line="117" pos:column="12"/></name><operator pos:line="117" pos:column="12">=<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="13">NULL<pos:position pos:line="117" pos:column="17"/></name></expr>;<pos:position pos:line="117" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
    <if pos:line="119" pos:column="5">if<condition pos:line="119" pos:column="7">(<expr><operator pos:line="119" pos:column="8">!<pos:position pos:line="119" pos:column="9"/></operator><name pos:line="119" pos:column="9">ptr<pos:position pos:line="119" pos:column="12"/></name></expr>)<pos:position pos:line="119" pos:column="13"/></condition><then pos:line="119" pos:column="13"> <block pos:line="119" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="120" pos:column="7">failf<pos:position pos:line="120" pos:column="12"/></name><argument_list pos:line="120" pos:column="12">(<argument><expr><name pos:line="120" pos:column="13">data<pos:position pos:line="120" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="19">"Weirdly formatted EPSV reply"<pos:position pos:line="120" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="51"/></expr_stmt>
      <return pos:line="121" pos:column="7">return <expr><name pos:line="121" pos:column="14">CURLE_FTP_WEIRD_PASV_REPLY<pos:position pos:line="121" pos:column="40"/></name></expr>;<pos:position pos:line="121" pos:column="41"/></return>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>
  }<pos:position pos:line="123" pos:column="4"/></block></then></if></elseif>
<cpp:endif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">endif<pos:position pos:line="124" pos:column="7"/></cpp:directive></cpp:endif>
  <else pos:line="125" pos:column="3">else
    <block type="pseudo"><return pos:line="126" pos:column="5">return <expr><name pos:line="126" pos:column="12">CURLE_FTP_CANT_RECONNECT<pos:position pos:line="126" pos:column="36"/></name></expr>;<pos:position pos:line="126" pos:column="37"/></return></block></else></if>

  <if pos:line="128" pos:column="3">if<condition pos:line="128" pos:column="5">(<expr><name><name pos:line="128" pos:column="6">data<pos:position pos:line="128" pos:column="10"/></name><operator pos:line="128" pos:column="10">-&gt;<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="12">change<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">.<pos:position pos:line="128" pos:column="19"/></operator><name pos:line="128" pos:column="19">proxy<pos:position pos:line="128" pos:column="24"/></name></name></expr>)<pos:position pos:line="128" pos:column="25"/></condition><then pos:line="128" pos:column="25"> <block pos:line="128" pos:column="26">{
    <comment type="block" pos:line="129" pos:column="5">/*
     * This is a tunnel through a http proxy and we need to connect to the
     * proxy again here.
     *
     * We don't want to rely on a former host lookup that might've expired
     * now, instead we remake the lookup here and now!
     */</comment>
    <expr_stmt><expr><name pos:line="136" pos:column="5">addr<pos:position pos:line="136" pos:column="9"/></name> <operator pos:line="136" pos:column="10">=<pos:position pos:line="136" pos:column="11"/></operator> <call><name pos:line="136" pos:column="12">Curl_resolv<pos:position pos:line="136" pos:column="23"/></name><argument_list pos:line="136" pos:column="23">(<argument><expr><name pos:line="136" pos:column="24">data<pos:position pos:line="136" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="30">conn<pos:position pos:line="136" pos:column="34"/></name><operator pos:line="136" pos:column="34">-&gt;<pos:position pos:line="136" pos:column="39"/></operator><name pos:line="136" pos:column="36">proxyhost<pos:position pos:line="136" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="47">conn<pos:position pos:line="136" pos:column="51"/></name><operator pos:line="136" pos:column="51">-&gt;<pos:position pos:line="136" pos:column="56"/></operator><name pos:line="136" pos:column="53">port<pos:position pos:line="136" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="137" pos:column="5">connectport<pos:position pos:line="137" pos:column="16"/></name> <operator pos:line="137" pos:column="17">=<pos:position pos:line="137" pos:column="18"/></operator>
      <operator pos:line="138" pos:column="7">(<pos:position pos:line="138" pos:column="8"/></operator><name pos:line="138" pos:column="8">unsigned<pos:position pos:line="138" pos:column="16"/></name> <name pos:line="138" pos:column="17">short<pos:position pos:line="138" pos:column="22"/></name><operator pos:line="138" pos:column="22">)<pos:position pos:line="138" pos:column="23"/></operator><name><name pos:line="138" pos:column="23">conn<pos:position pos:line="138" pos:column="27"/></name><operator pos:line="138" pos:column="27">-&gt;<pos:position pos:line="138" pos:column="32"/></operator><name pos:line="138" pos:column="29">port<pos:position pos:line="138" pos:column="33"/></name></name></expr>;<pos:position pos:line="138" pos:column="34"/></expr_stmt> <comment type="block" pos:line="138" pos:column="35">/* we connect to the proxy's port */</comment>    

  }<pos:position pos:line="140" pos:column="4"/></block></then>
  <else pos:line="141" pos:column="3">else <block pos:line="141" pos:column="8">{
    <comment type="block" pos:line="142" pos:column="5">/* normal, direct, ftp connection */</comment>
    <expr_stmt><expr><name pos:line="143" pos:column="5">addr<pos:position pos:line="143" pos:column="9"/></name> <operator pos:line="143" pos:column="10">=<pos:position pos:line="143" pos:column="11"/></operator> <call><name pos:line="143" pos:column="12">Curl_resolv<pos:position pos:line="143" pos:column="23"/></name><argument_list pos:line="143" pos:column="23">(<argument><expr><name pos:line="143" pos:column="24">data<pos:position pos:line="143" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="30">newhostp<pos:position pos:line="143" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="40">newport<pos:position pos:line="143" pos:column="47"/></name></expr></argument>)<pos:position pos:line="143" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="49"/></expr_stmt>
    <if pos:line="144" pos:column="5">if<condition pos:line="144" pos:column="7">(<expr><operator pos:line="144" pos:column="8">!<pos:position pos:line="144" pos:column="9"/></operator><name pos:line="144" pos:column="9">addr<pos:position pos:line="144" pos:column="13"/></name></expr>)<pos:position pos:line="144" pos:column="14"/></condition><then pos:line="144" pos:column="14"> <block pos:line="144" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="145" pos:column="7">failf<pos:position pos:line="145" pos:column="12"/></name><argument_list pos:line="145" pos:column="12">(<argument><expr><name pos:line="145" pos:column="13">data<pos:position pos:line="145" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="19">"Can't resolve new host %s:%d"<pos:position pos:line="145" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="51">newhostp<pos:position pos:line="145" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="61">newport<pos:position pos:line="145" pos:column="68"/></name></expr></argument>)<pos:position pos:line="145" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="70"/></expr_stmt>
      <return pos:line="146" pos:column="7">return <expr><name pos:line="146" pos:column="14">CURLE_FTP_CANT_GET_HOST<pos:position pos:line="146" pos:column="37"/></name></expr>;<pos:position pos:line="146" pos:column="38"/></return>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="148" pos:column="5">connectport<pos:position pos:line="148" pos:column="16"/></name> <operator pos:line="148" pos:column="17">=<pos:position pos:line="148" pos:column="18"/></operator> <name pos:line="148" pos:column="19">newport<pos:position pos:line="148" pos:column="26"/></name></expr>;<pos:position pos:line="148" pos:column="27"/></expr_stmt> <comment type="block" pos:line="148" pos:column="28">/* we connect to the remote port */</comment>
  }<pos:position pos:line="149" pos:column="4"/></block></else></if>
    
  <expr_stmt><expr><name pos:line="151" pos:column="3">result<pos:position pos:line="151" pos:column="9"/></name> <operator pos:line="151" pos:column="10">=<pos:position pos:line="151" pos:column="11"/></operator> <call><name pos:line="151" pos:column="12">Curl_connecthost<pos:position pos:line="151" pos:column="28"/></name><argument_list pos:line="151" pos:column="28">(<argument><expr><name pos:line="151" pos:column="29">conn<pos:position pos:line="151" pos:column="33"/></name></expr></argument>,
                            <argument><expr><name pos:line="152" pos:column="29">addr<pos:position pos:line="152" pos:column="33"/></name></expr></argument>,
                            <argument><expr><name pos:line="153" pos:column="29">connectport<pos:position pos:line="153" pos:column="40"/></name></expr></argument>,
                            <argument><expr><operator pos:line="154" pos:column="29">&amp;<pos:position pos:line="154" pos:column="34"/></operator><name><name pos:line="154" pos:column="30">conn<pos:position pos:line="154" pos:column="34"/></name><operator pos:line="154" pos:column="34">-&gt;<pos:position pos:line="154" pos:column="39"/></operator><name pos:line="154" pos:column="36">secondarysocket<pos:position pos:line="154" pos:column="51"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="155" pos:column="29">&amp;<pos:position pos:line="155" pos:column="34"/></operator><name pos:line="155" pos:column="30">conninfo<pos:position pos:line="155" pos:column="38"/></name></expr></argument>,
                            <argument><expr><name pos:line="156" pos:column="29">connected<pos:position pos:line="156" pos:column="38"/></name></expr></argument>)<pos:position pos:line="156" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="158" pos:column="3">Curl_resolv_unlock<pos:position pos:line="158" pos:column="21"/></name><argument_list pos:line="158" pos:column="21">(<argument><expr><name pos:line="158" pos:column="22">data<pos:position pos:line="158" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="28">addr<pos:position pos:line="158" pos:column="32"/></name></expr></argument>)<pos:position pos:line="158" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="34"/></expr_stmt> <comment type="block" pos:line="158" pos:column="35">/* we're done using this address */</comment>

  <comment type="block" pos:line="160" pos:column="3">/*
   * When this is used from the multi interface, this might've returned with
   * the 'connected' set to FALSE and thus we are now awaiting a non-blocking
   * connect to connect and we should not be "hanging" here waiting.
   */</comment>
  
  <if pos:line="166" pos:column="3">if<condition pos:line="166" pos:column="5">(<expr><operator pos:line="166" pos:column="6">(<pos:position pos:line="166" pos:column="7"/></operator><name pos:line="166" pos:column="7">CURLE_OK<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">==<pos:position pos:line="166" pos:column="18"/></operator> <name pos:line="166" pos:column="19">result<pos:position pos:line="166" pos:column="25"/></name><operator pos:line="166" pos:column="25">)<pos:position pos:line="166" pos:column="26"/></operator> <operator pos:line="166" pos:column="27">&amp;&amp;<pos:position pos:line="166" pos:column="37"/></operator>       
     <name><name pos:line="167" pos:column="6">data<pos:position pos:line="167" pos:column="10"/></name><operator pos:line="167" pos:column="10">-&gt;<pos:position pos:line="167" pos:column="15"/></operator><name pos:line="167" pos:column="12">set<pos:position pos:line="167" pos:column="15"/></name><operator pos:line="167" pos:column="15">.<pos:position pos:line="167" pos:column="16"/></operator><name pos:line="167" pos:column="16">verbose<pos:position pos:line="167" pos:column="23"/></name></name></expr>)<pos:position pos:line="167" pos:column="24"/></condition><then pos:line="167" pos:column="24">
    <comment type="block" pos:line="168" pos:column="5">/* this just dumps information about this second connection */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="169" pos:column="5">ftp_pasv_verbose<pos:position pos:line="169" pos:column="21"/></name><argument_list pos:line="169" pos:column="21">(<argument><expr><name pos:line="169" pos:column="22">conn<pos:position pos:line="169" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="28">conninfo<pos:position pos:line="169" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="38">newhostp<pos:position pos:line="169" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="48">connectport<pos:position pos:line="169" pos:column="59"/></name></expr></argument>)<pos:position pos:line="169" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="61"/></expr_stmt></block></then></if>
  
  <if pos:line="171" pos:column="3">if<condition pos:line="171" pos:column="5">(<expr><name pos:line="171" pos:column="6">CURLE_OK<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">!=<pos:position pos:line="171" pos:column="17"/></operator> <name pos:line="171" pos:column="18">result<pos:position pos:line="171" pos:column="24"/></name></expr>)<pos:position pos:line="171" pos:column="25"/></condition><then pos:line="171" pos:column="25">
    <block type="pseudo"><return pos:line="172" pos:column="5">return <expr><name pos:line="172" pos:column="12">result<pos:position pos:line="172" pos:column="18"/></name></expr>;<pos:position pos:line="172" pos:column="19"/></return></block></then></if>

  <if pos:line="174" pos:column="3">if <condition pos:line="174" pos:column="6">(<expr><name><name pos:line="174" pos:column="7">data<pos:position pos:line="174" pos:column="11"/></name><operator pos:line="174" pos:column="11">-&gt;<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="13">set<pos:position pos:line="174" pos:column="16"/></name><operator pos:line="174" pos:column="16">.<pos:position pos:line="174" pos:column="17"/></operator><name pos:line="174" pos:column="17">tunnel_thru_httpproxy<pos:position pos:line="174" pos:column="38"/></name></name></expr>)<pos:position pos:line="174" pos:column="39"/></condition><then pos:line="174" pos:column="39"> <block pos:line="174" pos:column="40">{
    <comment type="block" pos:line="175" pos:column="5">/* We want "seamless" FTP operations through HTTP proxy tunnel */</comment>
    <expr_stmt><expr><name pos:line="176" pos:column="5">result<pos:position pos:line="176" pos:column="11"/></name> <operator pos:line="176" pos:column="12">=<pos:position pos:line="176" pos:column="13"/></operator> <call><name pos:line="176" pos:column="14">Curl_ConnectHTTPProxyTunnel<pos:position pos:line="176" pos:column="41"/></name><argument_list pos:line="176" pos:column="41">(<argument><expr><name pos:line="176" pos:column="42">conn<pos:position pos:line="176" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="48">conn<pos:position pos:line="176" pos:column="52"/></name><operator pos:line="176" pos:column="52">-&gt;<pos:position pos:line="176" pos:column="57"/></operator><name pos:line="176" pos:column="54">secondarysocket<pos:position pos:line="176" pos:column="69"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="177" pos:column="42">newhostp<pos:position pos:line="177" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="52">newport<pos:position pos:line="177" pos:column="59"/></name></expr></argument>)<pos:position pos:line="177" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="61"/></expr_stmt>
    <if pos:line="178" pos:column="5">if<condition pos:line="178" pos:column="7">(<expr><name pos:line="178" pos:column="8">CURLE_OK<pos:position pos:line="178" pos:column="16"/></name> <operator pos:line="178" pos:column="17">!=<pos:position pos:line="178" pos:column="19"/></operator> <name pos:line="178" pos:column="20">result<pos:position pos:line="178" pos:column="26"/></name></expr>)<pos:position pos:line="178" pos:column="27"/></condition><then pos:line="178" pos:column="27">
      <block type="pseudo"><return pos:line="179" pos:column="7">return <expr><name pos:line="179" pos:column="14">result<pos:position pos:line="179" pos:column="20"/></name></expr>;<pos:position pos:line="179" pos:column="21"/></return></block></then></if>
  }<pos:position pos:line="180" pos:column="4"/></block></then></if>

  <return pos:line="182" pos:column="3">return <expr><name pos:line="182" pos:column="10">CURLE_OK<pos:position pos:line="182" pos:column="18"/></name></expr>;<pos:position pos:line="182" pos:column="19"/></return>
}<pos:position pos:line="183" pos:column="2"/></block></function></unit>

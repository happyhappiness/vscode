<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_124.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">ftp_done<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">connectdata<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">conn<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">UrlData<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">data<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">conn<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">data<pos:position pos:line="3" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">FTP<pos:position pos:line="4" pos:column="13"/></name></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ftp<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">proto<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">ftp<pos:position pos:line="4" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">nread<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name><name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">buffer<pos:position pos:line="6" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt> <comment type="block" pos:line="6" pos:column="29">/* this is our buffer */</comment>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_slist<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">qitem<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt> <comment type="block" pos:line="7" pos:column="29">/* QUOTE item */</comment>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">data<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">bits<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">.<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">upload<pos:position pos:line="9" pos:column="23"/></name></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24"> <block pos:line="9" pos:column="25">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><operator pos:line="10" pos:column="9">-<pos:position pos:line="10" pos:column="10"/></operator><literal type="number" pos:line="10" pos:column="10">1<pos:position pos:line="10" pos:column="11"/></literal> <operator pos:line="10" pos:column="12">!=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">infilesize<pos:position pos:line="10" pos:column="31"/></name></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator> <operator pos:line="10" pos:column="33">&amp;&amp;<pos:position pos:line="10" pos:column="43"/></operator> <operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><name><name pos:line="10" pos:column="37">data<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">infilesize<pos:position pos:line="10" pos:column="53"/></name></name> <operator pos:line="10" pos:column="54">!=<pos:position pos:line="10" pos:column="56"/></operator> <operator pos:line="10" pos:column="57">*<pos:position pos:line="10" pos:column="58"/></operator><name><name pos:line="10" pos:column="58">ftp<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">-&gt;<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="63">bytecountp<pos:position pos:line="10" pos:column="73"/></name></name><operator pos:line="10" pos:column="73">)<pos:position pos:line="10" pos:column="74"/></operator></expr>)<pos:position pos:line="10" pos:column="75"/></condition><then pos:line="10" pos:column="75"> <block pos:line="10" pos:column="76">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">failf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">data<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"Wrote only partial file (%d out of %d bytes)"<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>,
            <argument><expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">ftp<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">bytecountp<pos:position pos:line="12" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="31">data<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">infilesize<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">CURLE_PARTIAL_FILE<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then>
  <else pos:line="16" pos:column="3">else <block pos:line="16" pos:column="8">{
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><operator pos:line="17" pos:column="8">(<pos:position pos:line="17" pos:column="9"/></operator><operator pos:line="17" pos:column="9">-<pos:position pos:line="17" pos:column="10"/></operator><literal type="number" pos:line="17" pos:column="10">1<pos:position pos:line="17" pos:column="11"/></literal> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name><name pos:line="17" pos:column="15">conn<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">size<pos:position pos:line="17" pos:column="25"/></name></name><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator> <operator pos:line="17" pos:column="27">&amp;&amp;<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="30">(<pos:position pos:line="17" pos:column="31"/></operator><name><name pos:line="17" pos:column="31">conn<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">size<pos:position pos:line="17" pos:column="41"/></name></name> <operator pos:line="17" pos:column="42">!=<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="45">*<pos:position pos:line="17" pos:column="46"/></operator><name><name pos:line="17" pos:column="46">ftp<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">bytecountp<pos:position pos:line="17" pos:column="61"/></name></name><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator> <operator pos:line="17" pos:column="63">&amp;&amp;<pos:position pos:line="17" pos:column="73"/></operator>
       <operator pos:line="18" pos:column="8">(<pos:position pos:line="18" pos:column="9"/></operator><name><name pos:line="18" pos:column="9">data<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">maxdownload<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">!=<pos:position pos:line="18" pos:column="29"/></operator> <operator pos:line="18" pos:column="30">*<pos:position pos:line="18" pos:column="31"/></operator><name><name pos:line="18" pos:column="31">ftp<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">bytecountp<pos:position pos:line="18" pos:column="46"/></name></name><operator pos:line="18" pos:column="46">)<pos:position pos:line="18" pos:column="47"/></operator></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">failf<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">data<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"Received only partial file"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><name pos:line="20" pos:column="14">CURLE_PARTIAL_FILE<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if<condition pos:line="22" pos:column="12">(<expr><literal type="number" pos:line="22" pos:column="13">0<pos:position pos:line="22" pos:column="14"/></literal> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <operator pos:line="22" pos:column="18">*<pos:position pos:line="22" pos:column="19"/></operator><name><name pos:line="22" pos:column="19">ftp<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">bytecountp<pos:position pos:line="22" pos:column="34"/></name></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35"> <block pos:line="22" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">failf<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">data<pos:position pos:line="23" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="19">"No data was received!"<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">CURLE_FTP_COULDNT_RETR_FILE<pos:position pos:line="24" pos:column="41"/></name></expr>;<pos:position pos:line="24" pos:column="42"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>
  <comment type="block" pos:line="27" pos:column="3">/* shut down the socket to inform the server we're done */</comment>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sclose<pos:position pos:line="28" pos:column="9"/></name><argument_list pos:line="28" pos:column="9">(<argument><expr><name><name pos:line="28" pos:column="10">data<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">secondarysocket<pos:position pos:line="28" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="29" pos:column="3">data<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">secondarysocket<pos:position pos:line="29" pos:column="24"/></name></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <operator pos:line="29" pos:column="27">-<pos:position pos:line="29" pos:column="28"/></operator><literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
    
  <comment type="block" pos:line="31" pos:column="3">/* now let's see what the server says about the transfer we
     just performed: */</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">nread<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">GetLastResponse<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">data<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">firstsocket<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">buf<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">conn<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><name pos:line="34" pos:column="6">nread<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">&lt;<pos:position pos:line="34" pos:column="16"/></operator> <literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></return></block></then></if>

  <comment type="block" pos:line="37" pos:column="3">/* 226 Transfer complete, 250 Requested file action okay, completed. */</comment>
  <if pos:line="38" pos:column="3">if<condition pos:line="38" pos:column="5">(<expr><operator pos:line="38" pos:column="6">!<pos:position pos:line="38" pos:column="7"/></operator><call><name pos:line="38" pos:column="7">strncmp<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">buf<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="20">"226"<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="27">3<pos:position pos:line="38" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call> <operator pos:line="38" pos:column="30">&amp;&amp;<pos:position pos:line="38" pos:column="40"/></operator> <operator pos:line="38" pos:column="33">!<pos:position pos:line="38" pos:column="34"/></operator><call><name pos:line="38" pos:column="34">strncmp<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">buf<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="47">"250"<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="54">3<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="57"/></condition><then pos:line="38" pos:column="57"> <block pos:line="38" pos:column="58">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">failf<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name pos:line="39" pos:column="11">data<pos:position pos:line="39" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="17">"%s"<pos:position pos:line="39" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="23">buf<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">+<pos:position pos:line="39" pos:column="27"/></operator><literal type="number" pos:line="39" pos:column="27">4<pos:position pos:line="39" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">CURLE_FTP_WRITE_ERROR<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Send any post-transfer QUOTE strings? */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><name><name pos:line="44" pos:column="6">data<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">postquote<pos:position pos:line="44" pos:column="21"/></name></name></expr>)<pos:position pos:line="44" pos:column="22"/></condition><then pos:line="44" pos:column="22"> <block pos:line="44" pos:column="23">{
    <expr_stmt><expr><name pos:line="45" pos:column="5">qitem<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <name><name pos:line="45" pos:column="13">data<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">postquote<pos:position pos:line="45" pos:column="28"/></name></name></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
    <comment type="block" pos:line="46" pos:column="5">/* Send all QUOTE strings in same order as on command-line */</comment>
    <while pos:line="47" pos:column="5">while <condition pos:line="47" pos:column="11">(<expr><name pos:line="47" pos:column="12">qitem<pos:position pos:line="47" pos:column="17"/></name></expr>)<pos:position pos:line="47" pos:column="18"/></condition> <block pos:line="47" pos:column="19">{
      <comment type="block" pos:line="48" pos:column="7">/* Send string */</comment>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name><name pos:line="49" pos:column="11">qitem<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">data<pos:position pos:line="49" pos:column="22"/></name></name></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23"> <block pos:line="49" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">sendf<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name><name pos:line="50" pos:column="15">data<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">firstsocket<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">data<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="40">"%s\r\n"<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="50">qitem<pos:position pos:line="50" pos:column="55"/></name><operator pos:line="50" pos:column="55">-&gt;<pos:position pos:line="50" pos:column="60"/></operator><name pos:line="50" pos:column="57">data<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>

        <expr_stmt><expr><name pos:line="52" pos:column="9">nread<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <call><name pos:line="52" pos:column="17">GetLastResponse<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name><name pos:line="52" pos:column="33">data<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">-&gt;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="39">firstsocket<pos:position pos:line="52" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">buf<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">conn<pos:position pos:line="52" pos:column="61"/></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
        <if pos:line="53" pos:column="9">if<condition pos:line="53" pos:column="11">(<expr><name pos:line="53" pos:column="12">nread<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">&lt;<pos:position pos:line="53" pos:column="22"/></operator> <literal type="number" pos:line="53" pos:column="20">0<pos:position pos:line="53" pos:column="21"/></literal></expr>)<pos:position pos:line="53" pos:column="22"/></condition><then pos:line="53" pos:column="22">
          <block type="pseudo"><return pos:line="54" pos:column="11">return <expr><name pos:line="54" pos:column="18">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="54" pos:column="43"/></name></expr>;<pos:position pos:line="54" pos:column="44"/></return></block></then></if>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">buf<pos:position pos:line="56" pos:column="16"/></name><index pos:line="56" pos:column="16">[<expr><literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>]<pos:position pos:line="56" pos:column="19"/></index></name> <operator pos:line="56" pos:column="20">!=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="char" pos:line="56" pos:column="23">'2'<pos:position pos:line="56" pos:column="26"/></literal></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27"> <block pos:line="56" pos:column="28">{
          <expr_stmt><expr><call><name pos:line="57" pos:column="11">failf<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">data<pos:position pos:line="57" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="23">"QUOT string not accepted: %s"<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="58" pos:column="17">qitem<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">data<pos:position pos:line="58" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
          <return pos:line="59" pos:column="11">return <expr><name pos:line="59" pos:column="18">CURLE_FTP_QUOTE_ERROR<pos:position pos:line="59" pos:column="39"/></name></expr>;<pos:position pos:line="59" pos:column="40"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="62" pos:column="7">qitem<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name><name pos:line="62" pos:column="15">qitem<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">next<pos:position pos:line="62" pos:column="26"/></name></name></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></while>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><name><name pos:line="66" pos:column="6">ftp<pos:position pos:line="66" pos:column="9"/></name><operator pos:line="66" pos:column="9">-&gt;<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="11">file<pos:position pos:line="66" pos:column="15"/></name></name></expr>)<pos:position pos:line="66" pos:column="16"/></condition><then pos:line="66" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">free<pos:position pos:line="67" pos:column="9"/></name><argument_list pos:line="67" pos:column="9">(<argument><expr><name><name pos:line="67" pos:column="10">ftp<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">file<pos:position pos:line="67" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="21"/></expr_stmt></block></then></if>
  <if pos:line="68" pos:column="3">if<condition pos:line="68" pos:column="5">(<expr><name><name pos:line="68" pos:column="6">ftp<pos:position pos:line="68" pos:column="9"/></name><operator pos:line="68" pos:column="9">-&gt;<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="11">dir<pos:position pos:line="68" pos:column="14"/></name></name></expr>)<pos:position pos:line="68" pos:column="15"/></condition><then pos:line="68" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="5">free<pos:position pos:line="69" pos:column="9"/></name><argument_list pos:line="69" pos:column="9">(<argument><expr><name><name pos:line="69" pos:column="10">ftp<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">dir<pos:position pos:line="69" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="20"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="71" pos:column="3">/* TBD: the ftp struct is still allocated here */</comment>

  <return pos:line="73" pos:column="3">return <expr><name pos:line="73" pos:column="10">CURLE_OK<pos:position pos:line="73" pos:column="18"/></name></expr>;<pos:position pos:line="73" pos:column="19"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2457_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">nss_recv<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type> <name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* connection data */</comment>
                        <parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">num<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>,                   <comment type="block" pos:line="2" pos:column="52">/* socketindex */</comment>
                        <parameter><decl><type><name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">buf<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>,                 <comment type="block" pos:line="3" pos:column="52">/* store read data here */</comment>
                        <parameter><decl><type><name pos:line="4" pos:column="25">size_t<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">buffersize<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>,         <comment type="block" pos:line="4" pos:column="52">/* max amount to read */</comment>
                        <parameter><decl><type><name pos:line="5" pos:column="25">CURLcode<pos:position pos:line="5" pos:column="33"/></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">curlcode<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="44"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ssize_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">nread<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><call><name pos:line="7" pos:column="19">PR_Recv<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name><name pos:line="7" pos:column="27">conn<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">ssl<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[<expr><name pos:line="7" pos:column="37">num<pos:position pos:line="7" pos:column="40"/></name></expr>]<pos:position pos:line="7" pos:column="41"/></index></name><operator pos:line="7" pos:column="41">.<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">handle<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">buf<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="55">(<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">int<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">buffersize<pos:position pos:line="7" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="72">0<pos:position pos:line="7" pos:column="73"/></literal></expr></argument>,
                          <argument><expr><name pos:line="8" pos:column="27">PR_INTERVAL_NO_WAIT<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">nread<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">&lt;<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16"> <block pos:line="9" pos:column="17">{
    <comment type="block" pos:line="10" pos:column="5">/* failed SSL read */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">PRInt32<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">err<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><call><name pos:line="11" pos:column="19">PR_GetError<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">()<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>

    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name pos:line="13" pos:column="8">err<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">PR_WOULD_BLOCK_ERROR<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">curlcode<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">CURLE_AGAIN<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
      <comment type="block" pos:line="16" pos:column="7">/* print the error number and error string */</comment>
      <decl_stmt><decl><type><specifier pos:line="17" pos:column="7">const<pos:position pos:line="17" pos:column="12"/></specifier> <name pos:line="17" pos:column="13">char<pos:position pos:line="17" pos:column="17"/></name> <modifier pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></modifier></type><name pos:line="17" pos:column="19">err_name<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><call><name pos:line="17" pos:column="30">nss_error_to_name<pos:position pos:line="17" pos:column="47"/></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">err<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="53"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">infof<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name><name pos:line="18" pos:column="13">conn<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">data<pos:position pos:line="18" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"SSL read: errno %d (%s)\n"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">err<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">err_name<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>

      <comment type="block" pos:line="20" pos:column="7">/* print a human-readable message describing the error if available */</comment>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">nss_print_error_message<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name><name pos:line="21" pos:column="31">conn<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">data<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">err<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>

      <expr_stmt><expr><operator pos:line="23" pos:column="7">*<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">curlcode<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <ternary><condition><expr><operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><call><name pos:line="23" pos:column="20">is_cc_error<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">err<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call><operator pos:line="23" pos:column="36">)<pos:position pos:line="23" pos:column="37"/></operator></expr>
        ?<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10"> <expr><name pos:line="24" pos:column="11">CURLE_SSL_CERTPROBLEM<pos:position pos:line="24" pos:column="32"/></name></expr>
        <pos:position pos:line="25" pos:column="9"/></then><else pos:line="25" pos:column="9">: <expr><name pos:line="25" pos:column="11">CURLE_RECV_ERROR<pos:position pos:line="25" pos:column="27"/></name></expr></else></ternary></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>

    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">-<pos:position pos:line="28" pos:column="13"/></operator><literal type="number" pos:line="28" pos:column="13">1<pos:position pos:line="28" pos:column="14"/></literal></expr>;<pos:position pos:line="28" pos:column="15"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">nread<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1558_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smb_request_state<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">bool<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">done<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">smb_request<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">req<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name><name pos:line="3" pos:column="29">conn<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">data<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">req<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">.<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">protop<pos:position pos:line="3" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smb_header<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">h<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">smb_conn<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">smbc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><operator pos:line="5" pos:column="27">&amp;<pos:position pos:line="5" pos:column="32"/></operator><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">proto<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">smbc<pos:position pos:line="5" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">enum<pos:position pos:line="6" pos:column="7"/></name> <name pos:line="6" pos:column="8">smb_req_state<pos:position pos:line="6" pos:column="21"/></name></name></type> <name pos:line="6" pos:column="22">next_state<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">SMB_DONE<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">short<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">len<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">short<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">off<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">void<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">msg<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">smb_nt_create_response<pos:position pos:line="11" pos:column="38"/></name></name> <modifier pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></modifier></type><name pos:line="11" pos:column="40">smb_m<pos:position pos:line="11" pos:column="45"/></name></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Start the request */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">req<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">state<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">==<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">SMB_REQUESTING<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">result<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">smb_send_tree_connect<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">conn<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">result<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15"> <block pos:line="16" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">connclose<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">conn<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"SMB: failed to send tree connect message"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">result<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">request_state<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">conn<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">SMB_TREE_CONNECT<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Send the previous message and check for a response */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">result<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">smb_send_and_recv<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">conn<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="36">&amp;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="37">msg<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
  <if pos:line="26" pos:column="3">if<condition pos:line="26" pos:column="5">(<expr><name pos:line="26" pos:column="6">result<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">&amp;&amp;<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="16">result<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">!=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">CURLE_AGAIN<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">connclose<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name pos:line="27" pos:column="15">conn<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"SMB: failed to communicate"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">result<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">!<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">msg<pos:position pos:line="31" pos:column="10"/></name></expr>)<pos:position pos:line="31" pos:column="11"/></condition><then pos:line="31" pos:column="11">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">CURLE_OK<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="34" pos:column="3">h<pos:position pos:line="34" pos:column="4"/></name> <operator pos:line="34" pos:column="5">=<pos:position pos:line="34" pos:column="6"/></operator> <name pos:line="34" pos:column="7">msg<pos:position pos:line="34" pos:column="10"/></name></expr>;<pos:position pos:line="34" pos:column="11"/></expr_stmt>

  <switch pos:line="36" pos:column="3">switch<condition pos:line="36" pos:column="9">(<expr><name><name pos:line="36" pos:column="10">req<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">state<pos:position pos:line="36" pos:column="20"/></name></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition> <block pos:line="36" pos:column="22">{
  <case pos:line="37" pos:column="3">case <expr><name pos:line="37" pos:column="8">SMB_TREE_CONNECT<pos:position pos:line="37" pos:column="24"/></name></expr>:<pos:position pos:line="37" pos:column="25"/></case>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><name><name pos:line="38" pos:column="8">h<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">status<pos:position pos:line="38" pos:column="17"/></name></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18"> <block pos:line="38" pos:column="19">{
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">req<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">result<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">CURLE_REMOTE_FILE_NOT_FOUND<pos:position pos:line="39" pos:column="48"/></name></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
      <if pos:line="40" pos:column="7">if<condition pos:line="40" pos:column="9">(<expr><name><name pos:line="40" pos:column="10">h<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">status<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">==<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">smb_swap32<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">SMB_ERR_NOACCESS<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="52"/></condition><then pos:line="40" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="9">req<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">result<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">CURLE_REMOTE_ACCESS_DENIED<pos:position pos:line="41" pos:column="49"/></name></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt></block></then></if>
      <break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">req<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">tid<pos:position pos:line="44" pos:column="13"/></name></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">smb_swap16<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">h<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">tid<pos:position pos:line="44" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">next_state<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <name pos:line="45" pos:column="18">SMB_OPEN<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    <break pos:line="46" pos:column="5">break;<pos:position pos:line="46" pos:column="11"/></break>

  <case pos:line="48" pos:column="3">case <expr><name pos:line="48" pos:column="8">SMB_OPEN<pos:position pos:line="48" pos:column="16"/></name></expr>:<pos:position pos:line="48" pos:column="17"/></case>
    <if pos:line="49" pos:column="5">if<condition pos:line="49" pos:column="7">(<expr><name><name pos:line="49" pos:column="8">h<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">status<pos:position pos:line="49" pos:column="17"/></name></name> <operator pos:line="49" pos:column="18">||<pos:position pos:line="49" pos:column="20"/></operator> <name><name pos:line="49" pos:column="21">smbc<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">got<pos:position pos:line="49" pos:column="30"/></name></name> <operator pos:line="49" pos:column="31">&lt;<pos:position pos:line="49" pos:column="35"/></operator> <sizeof pos:line="49" pos:column="33">sizeof<argument_list pos:line="49" pos:column="39">(<argument><expr pos:line="49" pos:column="40">struct <name pos:line="49" pos:column="47">smb_nt_create_response<pos:position pos:line="49" pos:column="69"/></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></sizeof></expr>)<pos:position pos:line="49" pos:column="71"/></condition><then pos:line="49" pos:column="71"> <block pos:line="49" pos:column="72">{
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">req<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">result<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">CURLE_REMOTE_FILE_NOT_FOUND<pos:position pos:line="50" pos:column="48"/></name></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">next_state<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">SMB_TREE_DISCONNECT<pos:position pos:line="51" pos:column="39"/></name></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">smb_m<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <operator pos:line="54" pos:column="13">(<pos:position pos:line="54" pos:column="14"/></operator><specifier pos:line="54" pos:column="14">const<pos:position pos:line="54" pos:column="19"/></specifier> struct <name pos:line="54" pos:column="27">smb_nt_create_response<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">*<pos:position pos:line="54" pos:column="50"/></operator><operator pos:line="54" pos:column="50">)<pos:position pos:line="54" pos:column="51"/></operator> <name pos:line="54" pos:column="52">msg<pos:position pos:line="54" pos:column="55"/></name></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">req<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">-&gt;<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="10">fid<pos:position pos:line="55" pos:column="13"/></name></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">smb_swap16<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name><name pos:line="55" pos:column="27">smb_m<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">-&gt;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="34">fid<pos:position pos:line="55" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">conn<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">data<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">req<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">.<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">offset<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <literal type="number" pos:line="56" pos:column="30">0<pos:position pos:line="56" pos:column="31"/></literal></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
    <if pos:line="57" pos:column="5">if<condition pos:line="57" pos:column="7">(<expr><name><name pos:line="57" pos:column="8">conn<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">data<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">set<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">.<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">upload<pos:position pos:line="57" pos:column="30"/></name></name></expr>)<pos:position pos:line="57" pos:column="31"/></condition><then pos:line="57" pos:column="31"> <block pos:line="57" pos:column="32">{
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">conn<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">-&gt;<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="13">data<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">req<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">.<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">size<pos:position pos:line="58" pos:column="27"/></name></name> <operator pos:line="58" pos:column="28">=<pos:position pos:line="58" pos:column="29"/></operator> <name><name pos:line="58" pos:column="30">conn<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">-&gt;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="36">data<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">-&gt;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="42">state<pos:position pos:line="58" pos:column="47"/></name><operator pos:line="58" pos:column="47">.<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="48">infilesize<pos:position pos:line="58" pos:column="58"/></name></name></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">Curl_pgrsSetUploadSize<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name><name pos:line="59" pos:column="30">conn<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">data<pos:position pos:line="59" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="42">conn<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">-&gt;<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="48">data<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">-&gt;<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="54">req<pos:position pos:line="59" pos:column="57"/></name><operator pos:line="59" pos:column="57">.<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="58">size<pos:position pos:line="59" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="60" pos:column="7">next_state<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">SMB_UPLOAD<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then>
    <else pos:line="62" pos:column="5">else <block pos:line="62" pos:column="10">{
      <expr_stmt><expr><name pos:line="63" pos:column="7">smb_m<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <operator pos:line="63" pos:column="15">(<pos:position pos:line="63" pos:column="16"/></operator><specifier pos:line="63" pos:column="16">const<pos:position pos:line="63" pos:column="21"/></specifier> struct <name pos:line="63" pos:column="29">smb_nt_create_response<pos:position pos:line="63" pos:column="51"/></name><operator pos:line="63" pos:column="51">*<pos:position pos:line="63" pos:column="52"/></operator><operator pos:line="63" pos:column="52">)<pos:position pos:line="63" pos:column="53"/></operator> <name pos:line="63" pos:column="54">msg<pos:position pos:line="63" pos:column="57"/></name></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="64" pos:column="7">conn<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">-&gt;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="13">data<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">req<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">.<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="23">size<pos:position pos:line="64" pos:column="27"/></name></name> <operator pos:line="64" pos:column="28">=<pos:position pos:line="64" pos:column="29"/></operator> <call><name pos:line="64" pos:column="30">smb_swap64<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name><name pos:line="64" pos:column="41">smb_m<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">-&gt;<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="48">end_of_file<pos:position pos:line="64" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">Curl_pgrsSetDownloadSize<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name><name pos:line="65" pos:column="32">conn<pos:position pos:line="65" pos:column="36"/></name><operator pos:line="65" pos:column="36">-&gt;<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="38">data<pos:position pos:line="65" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="44">conn<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">-&gt;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="50">data<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">-&gt;<pos:position pos:line="65" pos:column="59"/></operator><name pos:line="65" pos:column="56">req<pos:position pos:line="65" pos:column="59"/></name><operator pos:line="65" pos:column="59">.<pos:position pos:line="65" pos:column="60"/></operator><name pos:line="65" pos:column="60">size<pos:position pos:line="65" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="66"/></expr_stmt>
      <if pos:line="66" pos:column="7">if<condition pos:line="66" pos:column="9">(<expr><name><name pos:line="66" pos:column="10">conn<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">data<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">set<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">.<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="26">get_filetime<pos:position pos:line="66" pos:column="38"/></name></name></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="9">get_posix_time<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><operator pos:line="67" pos:column="24">&amp;<pos:position pos:line="67" pos:column="29"/></operator><name><name pos:line="67" pos:column="25">conn<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">-&gt;<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="31">data<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">-&gt;<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="37">info<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">.<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">filetime<pos:position pos:line="67" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="52">&amp;<pos:position pos:line="67" pos:column="57"/></operator><name><name pos:line="67" pos:column="53">smb_m<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">-&gt;<pos:position pos:line="67" pos:column="63"/></operator><name pos:line="67" pos:column="60">last_change_time<pos:position pos:line="67" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="78"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="68" pos:column="7">next_state<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">SMB_DOWNLOAD<pos:position pos:line="68" pos:column="32"/></name></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>
    <break pos:line="70" pos:column="5">break;<pos:position pos:line="70" pos:column="11"/></break>

  <case pos:line="72" pos:column="3">case <expr><name pos:line="72" pos:column="8">SMB_DOWNLOAD<pos:position pos:line="72" pos:column="20"/></name></expr>:<pos:position pos:line="72" pos:column="21"/></case>
    <if pos:line="73" pos:column="5">if<condition pos:line="73" pos:column="7">(<expr><name><name pos:line="73" pos:column="8">h<pos:position pos:line="73" pos:column="9"/></name><operator pos:line="73" pos:column="9">-&gt;<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="11">status<pos:position pos:line="73" pos:column="17"/></name></name> <operator pos:line="73" pos:column="18">||<pos:position pos:line="73" pos:column="20"/></operator> <name><name pos:line="73" pos:column="21">smbc<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="27">got<pos:position pos:line="73" pos:column="30"/></name></name> <operator pos:line="73" pos:column="31">&lt;<pos:position pos:line="73" pos:column="35"/></operator> <sizeof pos:line="73" pos:column="33">sizeof<argument_list pos:line="73" pos:column="39">(<argument><expr pos:line="73" pos:column="40">struct <name pos:line="73" pos:column="47">smb_header<pos:position pos:line="73" pos:column="57"/></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></sizeof> <operator pos:line="73" pos:column="59">+<pos:position pos:line="73" pos:column="60"/></operator> <literal type="number" pos:line="73" pos:column="61">14<pos:position pos:line="73" pos:column="63"/></literal></expr>)<pos:position pos:line="73" pos:column="64"/></condition><then pos:line="73" pos:column="64"> <block pos:line="73" pos:column="65">{
      <expr_stmt><expr><name><name pos:line="74" pos:column="7">req<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">-&gt;<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="12">result<pos:position pos:line="74" pos:column="18"/></name></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <name pos:line="74" pos:column="21">CURLE_RECV_ERROR<pos:position pos:line="74" pos:column="37"/></name></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="75" pos:column="7">next_state<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <name pos:line="75" pos:column="20">SMB_CLOSE<pos:position pos:line="75" pos:column="29"/></name></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
      <break pos:line="76" pos:column="7">break;<pos:position pos:line="76" pos:column="13"/></break>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="78" pos:column="5">len<pos:position pos:line="78" pos:column="8"/></name> <operator pos:line="78" pos:column="9">=<pos:position pos:line="78" pos:column="10"/></operator> <call><name pos:line="78" pos:column="11">Curl_read16_le<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><operator pos:line="78" pos:column="26">(<pos:position pos:line="78" pos:column="27"/></operator><operator pos:line="78" pos:column="27">(<pos:position pos:line="78" pos:column="28"/></operator><specifier pos:line="78" pos:column="28">const<pos:position pos:line="78" pos:column="33"/></specifier> <name pos:line="78" pos:column="34">unsigned<pos:position pos:line="78" pos:column="42"/></name> <name pos:line="78" pos:column="43">char<pos:position pos:line="78" pos:column="47"/></name> <operator pos:line="78" pos:column="48">*<pos:position pos:line="78" pos:column="49"/></operator><operator pos:line="78" pos:column="49">)<pos:position pos:line="78" pos:column="50"/></operator> <name pos:line="78" pos:column="51">msg<pos:position pos:line="78" pos:column="54"/></name><operator pos:line="78" pos:column="54">)<pos:position pos:line="78" pos:column="55"/></operator> <operator pos:line="78" pos:column="56">+<pos:position pos:line="78" pos:column="57"/></operator>
                         <sizeof pos:line="79" pos:column="26">sizeof<argument_list pos:line="79" pos:column="32">(<argument><expr pos:line="79" pos:column="33">struct <name pos:line="79" pos:column="40">smb_header<pos:position pos:line="79" pos:column="50"/></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></sizeof> <operator pos:line="79" pos:column="52">+<pos:position pos:line="79" pos:column="53"/></operator> <literal type="number" pos:line="79" pos:column="54">11<pos:position pos:line="79" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="80" pos:column="5">off<pos:position pos:line="80" pos:column="8"/></name> <operator pos:line="80" pos:column="9">=<pos:position pos:line="80" pos:column="10"/></operator> <call><name pos:line="80" pos:column="11">Curl_read16_le<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><operator pos:line="80" pos:column="26">(<pos:position pos:line="80" pos:column="27"/></operator><operator pos:line="80" pos:column="27">(<pos:position pos:line="80" pos:column="28"/></operator><specifier pos:line="80" pos:column="28">const<pos:position pos:line="80" pos:column="33"/></specifier> <name pos:line="80" pos:column="34">unsigned<pos:position pos:line="80" pos:column="42"/></name> <name pos:line="80" pos:column="43">char<pos:position pos:line="80" pos:column="47"/></name> <operator pos:line="80" pos:column="48">*<pos:position pos:line="80" pos:column="49"/></operator><operator pos:line="80" pos:column="49">)<pos:position pos:line="80" pos:column="50"/></operator> <name pos:line="80" pos:column="51">msg<pos:position pos:line="80" pos:column="54"/></name><operator pos:line="80" pos:column="54">)<pos:position pos:line="80" pos:column="55"/></operator> <operator pos:line="80" pos:column="56">+<pos:position pos:line="80" pos:column="57"/></operator>
                         <sizeof pos:line="81" pos:column="26">sizeof<argument_list pos:line="81" pos:column="32">(<argument><expr pos:line="81" pos:column="33">struct <name pos:line="81" pos:column="40">smb_header<pos:position pos:line="81" pos:column="50"/></name></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></sizeof> <operator pos:line="81" pos:column="52">+<pos:position pos:line="81" pos:column="53"/></operator> <literal type="number" pos:line="81" pos:column="54">13<pos:position pos:line="81" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="58"/></expr_stmt>
    <if pos:line="82" pos:column="5">if<condition pos:line="82" pos:column="7">(<expr><name pos:line="82" pos:column="8">len<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">&gt;<pos:position pos:line="82" pos:column="16"/></operator> <literal type="number" pos:line="82" pos:column="14">0<pos:position pos:line="82" pos:column="15"/></literal></expr>)<pos:position pos:line="82" pos:column="16"/></condition><then pos:line="82" pos:column="16"> <block pos:line="82" pos:column="17">{
      <if pos:line="83" pos:column="7">if<condition pos:line="83" pos:column="9">(<expr><name pos:line="83" pos:column="10">off<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">+<pos:position pos:line="83" pos:column="15"/></operator> sizeof<operator pos:line="83" pos:column="22">(<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="23">unsigned<pos:position pos:line="83" pos:column="31"/></name> <name pos:line="83" pos:column="32">int<pos:position pos:line="83" pos:column="35"/></name><operator pos:line="83" pos:column="35">)<pos:position pos:line="83" pos:column="36"/></operator> <operator pos:line="83" pos:column="37">+<pos:position pos:line="83" pos:column="38"/></operator> <name pos:line="83" pos:column="39">len<pos:position pos:line="83" pos:column="42"/></name> <operator pos:line="83" pos:column="43">&gt;<pos:position pos:line="83" pos:column="47"/></operator> <name><name pos:line="83" pos:column="45">smbc<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">-&gt;<pos:position pos:line="83" pos:column="54"/></operator><name pos:line="83" pos:column="51">got<pos:position pos:line="83" pos:column="54"/></name></name></expr>)<pos:position pos:line="83" pos:column="55"/></condition><then pos:line="83" pos:column="55"> <block pos:line="83" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">failf<pos:position pos:line="84" pos:column="14"/></name><argument_list pos:line="84" pos:column="14">(<argument><expr><name><name pos:line="84" pos:column="15">conn<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">-&gt;<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="21">data<pos:position pos:line="84" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="27">"Invalid input packet"<pos:position pos:line="84" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">result<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="18">CURLE_RECV_ERROR<pos:position pos:line="85" pos:column="34"/></name></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="86" pos:column="8"/></block></then>
      <else pos:line="87" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="9">result<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <call><name pos:line="88" pos:column="18">Curl_client_write<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">conn<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="42">CLIENTWRITE_BODY<pos:position pos:line="88" pos:column="58"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="89" pos:column="36">(<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="37">char<pos:position pos:line="89" pos:column="41"/></name> <operator pos:line="89" pos:column="42">*<pos:position pos:line="89" pos:column="43"/></operator><operator pos:line="89" pos:column="43">)<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="44">msg<pos:position pos:line="89" pos:column="47"/></name> <operator pos:line="89" pos:column="48">+<pos:position pos:line="89" pos:column="49"/></operator> <name pos:line="89" pos:column="50">off<pos:position pos:line="89" pos:column="53"/></name> <operator pos:line="89" pos:column="54">+<pos:position pos:line="89" pos:column="55"/></operator> sizeof<operator pos:line="89" pos:column="62">(<pos:position pos:line="89" pos:column="63"/></operator><name pos:line="89" pos:column="63">unsigned<pos:position pos:line="89" pos:column="71"/></name> <name pos:line="89" pos:column="72">int<pos:position pos:line="89" pos:column="75"/></name><operator pos:line="89" pos:column="75">)<pos:position pos:line="89" pos:column="76"/></operator></expr></argument>,
                                   <argument><expr><name pos:line="90" pos:column="36">len<pos:position pos:line="90" pos:column="39"/></name></expr></argument>)<pos:position pos:line="90" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt></block></else></if>
      <if pos:line="91" pos:column="7">if<condition pos:line="91" pos:column="9">(<expr><name pos:line="91" pos:column="10">result<pos:position pos:line="91" pos:column="16"/></name></expr>)<pos:position pos:line="91" pos:column="17"/></condition><then pos:line="91" pos:column="17"> <block pos:line="91" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">req<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">-&gt;<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="14">result<pos:position pos:line="92" pos:column="20"/></name></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="23">result<pos:position pos:line="92" pos:column="29"/></name></expr>;<pos:position pos:line="92" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="93" pos:column="9">next_state<pos:position pos:line="93" pos:column="19"/></name> <operator pos:line="93" pos:column="20">=<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="22">SMB_CLOSE<pos:position pos:line="93" pos:column="31"/></name></expr>;<pos:position pos:line="93" pos:column="32"/></expr_stmt>
        <break pos:line="94" pos:column="9">break;<pos:position pos:line="94" pos:column="15"/></break>
      }<pos:position pos:line="95" pos:column="8"/></block></then></if>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="97" pos:column="5">conn<pos:position pos:line="97" pos:column="9"/></name><operator pos:line="97" pos:column="9">-&gt;<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="11">data<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">req<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">.<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">bytecount<pos:position pos:line="97" pos:column="30"/></name></name> <operator pos:line="97" pos:column="31">+=<pos:position pos:line="97" pos:column="33"/></operator> <name pos:line="97" pos:column="34">len<pos:position pos:line="97" pos:column="37"/></name></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">conn<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">-&gt;<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="11">data<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">-&gt;<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="17">req<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">.<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="21">offset<pos:position pos:line="98" pos:column="27"/></name></name> <operator pos:line="98" pos:column="28">+=<pos:position pos:line="98" pos:column="30"/></operator> <name pos:line="98" pos:column="31">len<pos:position pos:line="98" pos:column="34"/></name></expr>;<pos:position pos:line="98" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">Curl_pgrsSetDownloadCounter<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name><name pos:line="99" pos:column="33">conn<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">-&gt;<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="39">data<pos:position pos:line="99" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="45">conn<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">-&gt;<pos:position pos:line="99" pos:column="54"/></operator><name pos:line="99" pos:column="51">data<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">-&gt;<pos:position pos:line="99" pos:column="60"/></operator><name pos:line="99" pos:column="57">req<pos:position pos:line="99" pos:column="60"/></name><operator pos:line="99" pos:column="60">.<pos:position pos:line="99" pos:column="61"/></operator><name pos:line="99" pos:column="61">bytecount<pos:position pos:line="99" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="100" pos:column="5">next_state<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <ternary><condition><expr><operator pos:line="100" pos:column="18">(<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="19">len<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">&lt;<pos:position pos:line="100" pos:column="27"/></operator> <name pos:line="100" pos:column="25">MAX_PAYLOAD_SIZE<pos:position pos:line="100" pos:column="41"/></name><operator pos:line="100" pos:column="41">)<pos:position pos:line="100" pos:column="42"/></operator></expr> ?<pos:position pos:line="100" pos:column="44"/></condition><then pos:line="100" pos:column="44"> <expr><name pos:line="100" pos:column="45">SMB_CLOSE<pos:position pos:line="100" pos:column="54"/></name></expr> <pos:position pos:line="100" pos:column="55"/></then><else pos:line="100" pos:column="55">: <expr><name pos:line="100" pos:column="57">SMB_DOWNLOAD<pos:position pos:line="100" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="100" pos:column="70"/></expr_stmt>
    <break pos:line="101" pos:column="5">break;<pos:position pos:line="101" pos:column="11"/></break>

  <case pos:line="103" pos:column="3">case <expr><name pos:line="103" pos:column="8">SMB_UPLOAD<pos:position pos:line="103" pos:column="18"/></name></expr>:<pos:position pos:line="103" pos:column="19"/></case>
    <if pos:line="104" pos:column="5">if<condition pos:line="104" pos:column="7">(<expr><name><name pos:line="104" pos:column="8">h<pos:position pos:line="104" pos:column="9"/></name><operator pos:line="104" pos:column="9">-&gt;<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="11">status<pos:position pos:line="104" pos:column="17"/></name></name> <operator pos:line="104" pos:column="18">||<pos:position pos:line="104" pos:column="20"/></operator> <name><name pos:line="104" pos:column="21">smbc<pos:position pos:line="104" pos:column="25"/></name><operator pos:line="104" pos:column="25">-&gt;<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="27">got<pos:position pos:line="104" pos:column="30"/></name></name> <operator pos:line="104" pos:column="31">&lt;<pos:position pos:line="104" pos:column="35"/></operator> <sizeof pos:line="104" pos:column="33">sizeof<argument_list pos:line="104" pos:column="39">(<argument><expr pos:line="104" pos:column="40">struct <name pos:line="104" pos:column="47">smb_header<pos:position pos:line="104" pos:column="57"/></name></expr></argument>)<pos:position pos:line="104" pos:column="58"/></argument_list></sizeof> <operator pos:line="104" pos:column="59">+<pos:position pos:line="104" pos:column="60"/></operator> <literal type="number" pos:line="104" pos:column="61">6<pos:position pos:line="104" pos:column="62"/></literal></expr>)<pos:position pos:line="104" pos:column="63"/></condition><then pos:line="104" pos:column="63"> <block pos:line="104" pos:column="64">{
      <expr_stmt><expr><name><name pos:line="105" pos:column="7">req<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">-&gt;<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="12">result<pos:position pos:line="105" pos:column="18"/></name></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <name pos:line="105" pos:column="21">CURLE_UPLOAD_FAILED<pos:position pos:line="105" pos:column="40"/></name></expr>;<pos:position pos:line="105" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="106" pos:column="7">next_state<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">=<pos:position pos:line="106" pos:column="19"/></operator> <name pos:line="106" pos:column="20">SMB_CLOSE<pos:position pos:line="106" pos:column="29"/></name></expr>;<pos:position pos:line="106" pos:column="30"/></expr_stmt>
      <break pos:line="107" pos:column="7">break;<pos:position pos:line="107" pos:column="13"/></break>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="109" pos:column="5">len<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">=<pos:position pos:line="109" pos:column="10"/></operator> <call><name pos:line="109" pos:column="11">Curl_read16_le<pos:position pos:line="109" pos:column="25"/></name><argument_list pos:line="109" pos:column="25">(<argument><expr><operator pos:line="109" pos:column="26">(<pos:position pos:line="109" pos:column="27"/></operator><operator pos:line="109" pos:column="27">(<pos:position pos:line="109" pos:column="28"/></operator><specifier pos:line="109" pos:column="28">const<pos:position pos:line="109" pos:column="33"/></specifier> <name pos:line="109" pos:column="34">unsigned<pos:position pos:line="109" pos:column="42"/></name> <name pos:line="109" pos:column="43">char<pos:position pos:line="109" pos:column="47"/></name> <operator pos:line="109" pos:column="48">*<pos:position pos:line="109" pos:column="49"/></operator><operator pos:line="109" pos:column="49">)<pos:position pos:line="109" pos:column="50"/></operator> <name pos:line="109" pos:column="51">msg<pos:position pos:line="109" pos:column="54"/></name><operator pos:line="109" pos:column="54">)<pos:position pos:line="109" pos:column="55"/></operator> <operator pos:line="109" pos:column="56">+<pos:position pos:line="109" pos:column="57"/></operator>
                         <sizeof pos:line="110" pos:column="26">sizeof<argument_list pos:line="110" pos:column="32">(<argument><expr pos:line="110" pos:column="33">struct <name pos:line="110" pos:column="40">smb_header<pos:position pos:line="110" pos:column="50"/></name></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></sizeof> <operator pos:line="110" pos:column="52">+<pos:position pos:line="110" pos:column="53"/></operator> <literal type="number" pos:line="110" pos:column="54">5<pos:position pos:line="110" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">conn<pos:position pos:line="111" pos:column="9"/></name><operator pos:line="111" pos:column="9">-&gt;<pos:position pos:line="111" pos:column="14"/></operator><name pos:line="111" pos:column="11">data<pos:position pos:line="111" pos:column="15"/></name><operator pos:line="111" pos:column="15">-&gt;<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="17">req<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">.<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="21">bytecount<pos:position pos:line="111" pos:column="30"/></name></name> <operator pos:line="111" pos:column="31">+=<pos:position pos:line="111" pos:column="33"/></operator> <name pos:line="111" pos:column="34">len<pos:position pos:line="111" pos:column="37"/></name></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="112" pos:column="5">conn<pos:position pos:line="112" pos:column="9"/></name><operator pos:line="112" pos:column="9">-&gt;<pos:position pos:line="112" pos:column="14"/></operator><name pos:line="112" pos:column="11">data<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">-&gt;<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="17">req<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">.<pos:position pos:line="112" pos:column="21"/></operator><name pos:line="112" pos:column="21">offset<pos:position pos:line="112" pos:column="27"/></name></name> <operator pos:line="112" pos:column="28">+=<pos:position pos:line="112" pos:column="30"/></operator> <name pos:line="112" pos:column="31">len<pos:position pos:line="112" pos:column="34"/></name></expr>;<pos:position pos:line="112" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">Curl_pgrsSetUploadCounter<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><name><name pos:line="113" pos:column="31">conn<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">-&gt;<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="37">data<pos:position pos:line="113" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="43">conn<pos:position pos:line="113" pos:column="47"/></name><operator pos:line="113" pos:column="47">-&gt;<pos:position pos:line="113" pos:column="52"/></operator><name pos:line="113" pos:column="49">data<pos:position pos:line="113" pos:column="53"/></name><operator pos:line="113" pos:column="53">-&gt;<pos:position pos:line="113" pos:column="58"/></operator><name pos:line="113" pos:column="55">req<pos:position pos:line="113" pos:column="58"/></name><operator pos:line="113" pos:column="58">.<pos:position pos:line="113" pos:column="59"/></operator><name pos:line="113" pos:column="59">bytecount<pos:position pos:line="113" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="70"/></expr_stmt>
    <if pos:line="114" pos:column="5">if<condition pos:line="114" pos:column="7">(<expr><name><name pos:line="114" pos:column="8">conn<pos:position pos:line="114" pos:column="12"/></name><operator pos:line="114" pos:column="12">-&gt;<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="14">data<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">-&gt;<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="20">req<pos:position pos:line="114" pos:column="23"/></name><operator pos:line="114" pos:column="23">.<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="24">bytecount<pos:position pos:line="114" pos:column="33"/></name></name> <operator pos:line="114" pos:column="34">&gt;=<pos:position pos:line="114" pos:column="39"/></operator> <name><name pos:line="114" pos:column="37">conn<pos:position pos:line="114" pos:column="41"/></name><operator pos:line="114" pos:column="41">-&gt;<pos:position pos:line="114" pos:column="46"/></operator><name pos:line="114" pos:column="43">data<pos:position pos:line="114" pos:column="47"/></name><operator pos:line="114" pos:column="47">-&gt;<pos:position pos:line="114" pos:column="52"/></operator><name pos:line="114" pos:column="49">req<pos:position pos:line="114" pos:column="52"/></name><operator pos:line="114" pos:column="52">.<pos:position pos:line="114" pos:column="53"/></operator><name pos:line="114" pos:column="53">size<pos:position pos:line="114" pos:column="57"/></name></name></expr>)<pos:position pos:line="114" pos:column="58"/></condition><then pos:line="114" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="115" pos:column="7">next_state<pos:position pos:line="115" pos:column="17"/></name> <operator pos:line="115" pos:column="18">=<pos:position pos:line="115" pos:column="19"/></operator> <name pos:line="115" pos:column="20">SMB_CLOSE<pos:position pos:line="115" pos:column="29"/></name></expr>;<pos:position pos:line="115" pos:column="30"/></expr_stmt></block></then>
    <else pos:line="116" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="7">next_state<pos:position pos:line="117" pos:column="17"/></name> <operator pos:line="117" pos:column="18">=<pos:position pos:line="117" pos:column="19"/></operator> <name pos:line="117" pos:column="20">SMB_UPLOAD<pos:position pos:line="117" pos:column="30"/></name></expr>;<pos:position pos:line="117" pos:column="31"/></expr_stmt></block></else></if>
    <break pos:line="118" pos:column="5">break;<pos:position pos:line="118" pos:column="11"/></break>

  <case pos:line="120" pos:column="3">case <expr><name pos:line="120" pos:column="8">SMB_CLOSE<pos:position pos:line="120" pos:column="17"/></name></expr>:<pos:position pos:line="120" pos:column="18"/></case>
    <comment type="block" pos:line="121" pos:column="5">/* We don't care if the close failed, proceed to tree disconnect anyway */</comment>
    <expr_stmt><expr><name pos:line="122" pos:column="5">next_state<pos:position pos:line="122" pos:column="15"/></name> <operator pos:line="122" pos:column="16">=<pos:position pos:line="122" pos:column="17"/></operator> <name pos:line="122" pos:column="18">SMB_TREE_DISCONNECT<pos:position pos:line="122" pos:column="37"/></name></expr>;<pos:position pos:line="122" pos:column="38"/></expr_stmt>
    <break pos:line="123" pos:column="5">break;<pos:position pos:line="123" pos:column="11"/></break>

  <case pos:line="125" pos:column="3">case <expr><name pos:line="125" pos:column="8">SMB_TREE_DISCONNECT<pos:position pos:line="125" pos:column="27"/></name></expr>:<pos:position pos:line="125" pos:column="28"/></case>
    <expr_stmt><expr><name pos:line="126" pos:column="5">next_state<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <name pos:line="126" pos:column="18">SMB_DONE<pos:position pos:line="126" pos:column="26"/></name></expr>;<pos:position pos:line="126" pos:column="27"/></expr_stmt>
    <break pos:line="127" pos:column="5">break;<pos:position pos:line="127" pos:column="11"/></break>

  <default pos:line="129" pos:column="3">default:<pos:position pos:line="129" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="130" pos:column="5">smb_pop_message<pos:position pos:line="130" pos:column="20"/></name><argument_list pos:line="130" pos:column="20">(<argument><expr><name pos:line="130" pos:column="21">conn<pos:position pos:line="130" pos:column="25"/></name></expr></argument>)<pos:position pos:line="130" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="27"/></expr_stmt>
    <return pos:line="131" pos:column="5">return <expr><name pos:line="131" pos:column="12">CURLE_OK<pos:position pos:line="131" pos:column="20"/></name></expr>;<pos:position pos:line="131" pos:column="21"/></return> <comment type="block" pos:line="131" pos:column="22">/* ignore */</comment>
  }<pos:position pos:line="132" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="134" pos:column="3">smb_pop_message<pos:position pos:line="134" pos:column="18"/></name><argument_list pos:line="134" pos:column="18">(<argument><expr><name pos:line="134" pos:column="19">conn<pos:position pos:line="134" pos:column="23"/></name></expr></argument>)<pos:position pos:line="134" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="25"/></expr_stmt>

  <switch pos:line="136" pos:column="3">switch<condition pos:line="136" pos:column="9">(<expr><name pos:line="136" pos:column="10">next_state<pos:position pos:line="136" pos:column="20"/></name></expr>)<pos:position pos:line="136" pos:column="21"/></condition> <block pos:line="136" pos:column="22">{
  <case pos:line="137" pos:column="3">case <expr><name pos:line="137" pos:column="8">SMB_OPEN<pos:position pos:line="137" pos:column="16"/></name></expr>:<pos:position pos:line="137" pos:column="17"/></case>
    <expr_stmt><expr><name pos:line="138" pos:column="5">result<pos:position pos:line="138" pos:column="11"/></name> <operator pos:line="138" pos:column="12">=<pos:position pos:line="138" pos:column="13"/></operator> <call><name pos:line="138" pos:column="14">smb_send_open<pos:position pos:line="138" pos:column="27"/></name><argument_list pos:line="138" pos:column="27">(<argument><expr><name pos:line="138" pos:column="28">conn<pos:position pos:line="138" pos:column="32"/></name></expr></argument>)<pos:position pos:line="138" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="34"/></expr_stmt>
    <break pos:line="139" pos:column="5">break;<pos:position pos:line="139" pos:column="11"/></break>

  <case pos:line="141" pos:column="3">case <expr><name pos:line="141" pos:column="8">SMB_DOWNLOAD<pos:position pos:line="141" pos:column="20"/></name></expr>:<pos:position pos:line="141" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="142" pos:column="5">result<pos:position pos:line="142" pos:column="11"/></name> <operator pos:line="142" pos:column="12">=<pos:position pos:line="142" pos:column="13"/></operator> <call><name pos:line="142" pos:column="14">smb_send_read<pos:position pos:line="142" pos:column="27"/></name><argument_list pos:line="142" pos:column="27">(<argument><expr><name pos:line="142" pos:column="28">conn<pos:position pos:line="142" pos:column="32"/></name></expr></argument>)<pos:position pos:line="142" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
    <break pos:line="143" pos:column="5">break;<pos:position pos:line="143" pos:column="11"/></break>

  <case pos:line="145" pos:column="3">case <expr><name pos:line="145" pos:column="8">SMB_UPLOAD<pos:position pos:line="145" pos:column="18"/></name></expr>:<pos:position pos:line="145" pos:column="19"/></case>
    <expr_stmt><expr><name pos:line="146" pos:column="5">result<pos:position pos:line="146" pos:column="11"/></name> <operator pos:line="146" pos:column="12">=<pos:position pos:line="146" pos:column="13"/></operator> <call><name pos:line="146" pos:column="14">smb_send_write<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><name pos:line="146" pos:column="29">conn<pos:position pos:line="146" pos:column="33"/></name></expr></argument>)<pos:position pos:line="146" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="35"/></expr_stmt>
    <break pos:line="147" pos:column="5">break;<pos:position pos:line="147" pos:column="11"/></break>

  <case pos:line="149" pos:column="3">case <expr><name pos:line="149" pos:column="8">SMB_CLOSE<pos:position pos:line="149" pos:column="17"/></name></expr>:<pos:position pos:line="149" pos:column="18"/></case>
    <expr_stmt><expr><name pos:line="150" pos:column="5">result<pos:position pos:line="150" pos:column="11"/></name> <operator pos:line="150" pos:column="12">=<pos:position pos:line="150" pos:column="13"/></operator> <call><name pos:line="150" pos:column="14">smb_send_close<pos:position pos:line="150" pos:column="28"/></name><argument_list pos:line="150" pos:column="28">(<argument><expr><name pos:line="150" pos:column="29">conn<pos:position pos:line="150" pos:column="33"/></name></expr></argument>)<pos:position pos:line="150" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="35"/></expr_stmt>
    <break pos:line="151" pos:column="5">break;<pos:position pos:line="151" pos:column="11"/></break>

  <case pos:line="153" pos:column="3">case <expr><name pos:line="153" pos:column="8">SMB_TREE_DISCONNECT<pos:position pos:line="153" pos:column="27"/></name></expr>:<pos:position pos:line="153" pos:column="28"/></case>
    <expr_stmt><expr><name pos:line="154" pos:column="5">result<pos:position pos:line="154" pos:column="11"/></name> <operator pos:line="154" pos:column="12">=<pos:position pos:line="154" pos:column="13"/></operator> <call><name pos:line="154" pos:column="14">smb_send_tree_disconnect<pos:position pos:line="154" pos:column="38"/></name><argument_list pos:line="154" pos:column="38">(<argument><expr><name pos:line="154" pos:column="39">conn<pos:position pos:line="154" pos:column="43"/></name></expr></argument>)<pos:position pos:line="154" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="45"/></expr_stmt>
    <break pos:line="155" pos:column="5">break;<pos:position pos:line="155" pos:column="11"/></break>

  <case pos:line="157" pos:column="3">case <expr><name pos:line="157" pos:column="8">SMB_DONE<pos:position pos:line="157" pos:column="16"/></name></expr>:<pos:position pos:line="157" pos:column="17"/></case>
    <expr_stmt><expr><name pos:line="158" pos:column="5">result<pos:position pos:line="158" pos:column="11"/></name> <operator pos:line="158" pos:column="12">=<pos:position pos:line="158" pos:column="13"/></operator> <name><name pos:line="158" pos:column="14">req<pos:position pos:line="158" pos:column="17"/></name><operator pos:line="158" pos:column="17">-&gt;<pos:position pos:line="158" pos:column="22"/></operator><name pos:line="158" pos:column="19">result<pos:position pos:line="158" pos:column="25"/></name></name></expr>;<pos:position pos:line="158" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="159" pos:column="5">*<pos:position pos:line="159" pos:column="6"/></operator><name pos:line="159" pos:column="6">done<pos:position pos:line="159" pos:column="10"/></name> <operator pos:line="159" pos:column="11">=<pos:position pos:line="159" pos:column="12"/></operator> <literal type="boolean" pos:line="159" pos:column="13">true<pos:position pos:line="159" pos:column="17"/></literal></expr>;<pos:position pos:line="159" pos:column="18"/></expr_stmt>
    <break pos:line="160" pos:column="5">break;<pos:position pos:line="160" pos:column="11"/></break>

  <default pos:line="162" pos:column="3">default:<pos:position pos:line="162" pos:column="11"/></default>
    <break pos:line="163" pos:column="5">break;<pos:position pos:line="163" pos:column="11"/></break>
  }<pos:position pos:line="164" pos:column="4"/></block></switch>

  <if pos:line="166" pos:column="3">if<condition pos:line="166" pos:column="5">(<expr><name pos:line="166" pos:column="6">result<pos:position pos:line="166" pos:column="12"/></name></expr>)<pos:position pos:line="166" pos:column="13"/></condition><then pos:line="166" pos:column="13"> <block pos:line="166" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="167" pos:column="5">connclose<pos:position pos:line="167" pos:column="14"/></name><argument_list pos:line="167" pos:column="14">(<argument><expr><name pos:line="167" pos:column="15">conn<pos:position pos:line="167" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="21">"SMB: failed to send message"<pos:position pos:line="167" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="52"/></expr_stmt>
    <return pos:line="168" pos:column="5">return <expr><name pos:line="168" pos:column="12">result<pos:position pos:line="168" pos:column="18"/></name></expr>;<pos:position pos:line="168" pos:column="19"/></return>
  }<pos:position pos:line="169" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="171" pos:column="3">request_state<pos:position pos:line="171" pos:column="16"/></name><argument_list pos:line="171" pos:column="16">(<argument><expr><name pos:line="171" pos:column="17">conn<pos:position pos:line="171" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="23">next_state<pos:position pos:line="171" pos:column="33"/></name></expr></argument>)<pos:position pos:line="171" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="35"/></expr_stmt>

  <return pos:line="173" pos:column="3">return <expr><name pos:line="173" pos:column="10">CURLE_OK<pos:position pos:line="173" pos:column="18"/></name></expr>;<pos:position pos:line="173" pos:column="19"/></return>
}<pos:position pos:line="174" pos:column="2"/></block></function></unit>

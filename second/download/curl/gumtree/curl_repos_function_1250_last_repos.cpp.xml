<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1250_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">curl_memdebug<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">logname<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if<condition pos:line="3" pos:column="5">(<expr><operator pos:line="3" pos:column="6">!<pos:position pos:line="3" pos:column="7"/></operator><name pos:line="3" pos:column="7">logfile<pos:position pos:line="3" pos:column="14"/></name></expr>)<pos:position pos:line="3" pos:column="15"/></condition><then pos:line="3" pos:column="15"> <block pos:line="3" pos:column="16">{
    <if pos:line="4" pos:column="5">if<condition pos:line="4" pos:column="7">(<expr><name pos:line="4" pos:column="8">logname<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">&amp;&amp;<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">logname<pos:position pos:line="4" pos:column="27"/></name></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="7">logfile<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <call><name pos:line="5" pos:column="17">fopen<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">logname<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">FOPEN_WRITETEXT<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="49"/></expr_stmt></block></then>
    <else pos:line="6" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="7">logfile<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">stderr<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt></block></else></if>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">MEMDEBUG_LOG_SYNC<pos:position pos:line="8" pos:column="25"/></name></cpp:ifdef>
    <comment type="block" pos:line="9" pos:column="5">/* Flush the log file after every line so the log isn't lost in a crash */</comment>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name pos:line="10" pos:column="8">logfile<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">setbuf<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">logfile<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">char<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">NULL<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></then></if>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

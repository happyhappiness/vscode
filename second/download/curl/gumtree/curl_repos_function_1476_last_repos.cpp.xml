<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1476_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">findprotocol<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">Curl_easy<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">data<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                             <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">connectdata<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">conn<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">protostr<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">Curl_handler<pos:position pos:line="5" pos:column="28"/></name></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier> <specifier pos:line="5" pos:column="31">const<pos:position pos:line="5" pos:column="36"/></specifier> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">pp<pos:position pos:line="5" pos:column="40"/></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">Curl_handler<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">p<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Scan protocol handler table and match against 'protostr' to set a few
     variables based on the URL. Now that the handler may be changed later
     when the protocol specific setup function is called. */</comment>
  <for pos:line="11" pos:column="3">for<control pos:line="11" pos:column="6">(<init><expr><name pos:line="11" pos:column="7">pp<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">protocols<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></init> <condition><expr><operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">p<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <operator pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">pp<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator> <operator pos:line="11" pos:column="33">!=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">NULL<pos:position pos:line="11" pos:column="40"/></name></expr>;<pos:position pos:line="11" pos:column="41"/></condition> <incr><expr><name pos:line="11" pos:column="42">pp<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="47"/></control> <block pos:line="11" pos:column="48">{
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><call><name pos:line="12" pos:column="8">strcasecompare<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name><name pos:line="12" pos:column="23">p<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">scheme<pos:position pos:line="12" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">protostr<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <block pos:line="12" pos:column="45">{
      <comment type="block" pos:line="13" pos:column="7">/* Protocol found in table. Check if allowed */</comment>
      <if pos:line="14" pos:column="7">if<condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">!<pos:position pos:line="14" pos:column="11"/></operator><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name><name pos:line="14" pos:column="12">data<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">set<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">allowed_protocols<pos:position pos:line="14" pos:column="39"/></name></name> <operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator> <name><name pos:line="14" pos:column="42">p<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">protocol<pos:position pos:line="14" pos:column="53"/></name></name><operator pos:line="14" pos:column="53">)<pos:position pos:line="14" pos:column="54"/></operator></expr>)<pos:position pos:line="14" pos:column="55"/></condition><then pos:line="14" pos:column="55">
        <comment type="block" pos:line="15" pos:column="9">/* nope, get out */</comment>
        <block type="pseudo"><break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="18" pos:column="7">/* it is allowed for "normal" request, now do an extra check if this is
         the result of a redirect */</comment>
      <if pos:line="20" pos:column="7">if<condition pos:line="20" pos:column="9">(<expr><name><name pos:line="20" pos:column="10">data<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">state<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">this_is_a_follow<pos:position pos:line="20" pos:column="38"/></name></name> <operator pos:line="20" pos:column="39">&amp;&amp;<pos:position pos:line="20" pos:column="49"/></operator>
         <operator pos:line="21" pos:column="10">!<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name><name pos:line="21" pos:column="12">data<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">set<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">redir_protocols<pos:position pos:line="21" pos:column="37"/></name></name> <operator pos:line="21" pos:column="38">&amp;<pos:position pos:line="21" pos:column="43"/></operator> <name><name pos:line="21" pos:column="40">p<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">protocol<pos:position pos:line="21" pos:column="51"/></name></name><operator pos:line="21" pos:column="51">)<pos:position pos:line="21" pos:column="52"/></operator></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
        <comment type="block" pos:line="22" pos:column="9">/* nope, get out */</comment>
        <block type="pseudo"><break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="25" pos:column="7">/* Perform setup complement if some. */</comment>
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">conn<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">handler<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">conn<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">given<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">p<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>

      <comment type="block" pos:line="28" pos:column="7">/* 'port' and 'remote_port' are set in setup_connection_internals() */</comment>
      <return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">CURLE_OK<pos:position pos:line="29" pos:column="22"/></name></expr>;<pos:position pos:line="29" pos:column="23"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></for>


  <comment type="block" pos:line="34" pos:column="3">/* The protocol was not found in the table, but we don't have to assign it
     to anything since it is already assigned to a dummy-struct in the
     create_conn() function when the connectdata struct is allocated. */</comment>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">failf<pos:position pos:line="37" pos:column="8"/></name><argument_list pos:line="37" pos:column="8">(<argument><expr><name pos:line="37" pos:column="9">data<pos:position pos:line="37" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="15">"Protocol \"%s\" not supported or disabled in "<pos:position pos:line="37" pos:column="62"/></literal> <name pos:line="37" pos:column="63">LIBCURL_NAME<pos:position pos:line="37" pos:column="75"/></name></expr></argument>,
        <argument><expr><name pos:line="38" pos:column="9">protostr<pos:position pos:line="38" pos:column="17"/></name></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>

  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

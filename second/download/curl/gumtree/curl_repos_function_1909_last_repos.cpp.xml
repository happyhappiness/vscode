<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1909_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_state_ul_setup<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">bool<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">sizechecked<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">FTP<pos:position pos:line="5" pos:column="13"/></name></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ftp<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">conn<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">data<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">req<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">.<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">protop<pos:position pos:line="5" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">data<pos:position pos:line="6" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">ftp_conn<pos:position pos:line="7" pos:column="18"/></name></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">ftpc<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">proto<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">ftpc<pos:position pos:line="7" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">seekerr<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">CURL_SEEKFUNC_OK<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">(<pos:position pos:line="10" pos:column="7"/></operator><name><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">state<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">resume_from<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">&amp;&amp;<pos:position pos:line="10" pos:column="41"/></operator> <operator pos:line="10" pos:column="34">!<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">sizechecked<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">||<pos:position pos:line="10" pos:column="50"/></operator>
     <operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name><name pos:line="11" pos:column="8">data<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">state<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">resume_from<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">&gt;<pos:position pos:line="11" pos:column="36"/></operator> <literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">&amp;&amp;<pos:position pos:line="11" pos:column="47"/></operator> <name pos:line="11" pos:column="40">sizechecked<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <block pos:line="11" pos:column="54">{
    <comment type="block" pos:line="12" pos:column="5">/* we're about to continue the uploading of a file */</comment>
    <comment type="block" pos:line="13" pos:column="5">/* 1. get already existing file's size. We use the SIZE command for this
       which may not exist in the server!  The SIZE command is not in
       RFC959. */</comment>

    <comment type="block" pos:line="17" pos:column="5">/* 2. This used to set REST. But since we can do append, we
       don't another ftp command. We just skip the source file
       offset and then we APPEND the rest on the file instead */</comment>

    <comment type="block" pos:line="21" pos:column="5">/* 3. pass file-size number of bytes in the source file */</comment>
    <comment type="block" pos:line="22" pos:column="5">/* 4. lower the infilesize counter */</comment>
    <comment type="block" pos:line="23" pos:column="5">/* =&gt; transfer as usual */</comment>

    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name><name pos:line="25" pos:column="8">data<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">state<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">resume_from<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">&lt;<pos:position pos:line="25" pos:column="36"/></operator> <literal type="number" pos:line="25" pos:column="34">0<pos:position pos:line="25" pos:column="35"/></literal></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
      <comment type="block" pos:line="26" pos:column="7">/* Got no given size to start from, figure it out */</comment>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">PPSENDF<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">&amp;<pos:position pos:line="27" pos:column="20"/></operator><name><name pos:line="27" pos:column="16">ftpc<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">pp<pos:position pos:line="27" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="26">"SIZE %s"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="37">ftpc<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">file<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">state<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">conn<pos:position pos:line="28" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="19">FTP_STOR_SIZE<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">result<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* enable append */</comment>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">data<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">set<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">ftp_append<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">TRUE<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* Let's read off the proper amount of bytes from the input. */</comment>
    <if pos:line="36" pos:column="5">if<condition pos:line="36" pos:column="7">(<expr><name><name pos:line="36" pos:column="8">conn<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">seek_func<pos:position pos:line="36" pos:column="23"/></name></name></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block pos:line="36" pos:column="25">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">seekerr<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call><name><name pos:line="37" pos:column="17">conn<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">seek_func<pos:position pos:line="37" pos:column="32"/></name></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">conn<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">seek_client<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="52">data<pos:position pos:line="37" pos:column="56"/></name><operator pos:line="37" pos:column="56">-&gt;<pos:position pos:line="37" pos:column="61"/></operator><name pos:line="37" pos:column="58">state<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">.<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="64">resume_from<pos:position pos:line="37" pos:column="75"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="38" pos:column="33">SEEK_SET<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><name pos:line="41" pos:column="8">seekerr<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">!=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">CURL_SEEKFUNC_OK<pos:position pos:line="41" pos:column="35"/></name></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36"> <block pos:line="41" pos:column="37">{
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">curl_off_t<pos:position pos:line="42" pos:column="17"/></name></type> <name pos:line="42" pos:column="18">passed<pos:position pos:line="42" pos:column="24"/></name> <init pos:line="42" pos:column="25">= <expr><literal type="number" pos:line="42" pos:column="27">0<pos:position pos:line="42" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="29"/></decl_stmt>
      <if pos:line="43" pos:column="7">if<condition pos:line="43" pos:column="9">(<expr><name pos:line="43" pos:column="10">seekerr<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">!=<pos:position pos:line="43" pos:column="20"/></operator> <name pos:line="43" pos:column="21">CURL_SEEKFUNC_CANTSEEK<pos:position pos:line="43" pos:column="43"/></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">failf<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">data<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="21">"Could not seek stream"<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">CURLE_FTP_COULDNT_USE_REST<pos:position pos:line="45" pos:column="42"/></name></expr>;<pos:position pos:line="45" pos:column="43"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="47" pos:column="7">/* seekerr == CURL_SEEKFUNC_CANTSEEK (can't seek to offset) */</comment>
      <do pos:line="48" pos:column="7">do <block pos:line="48" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">size_t<pos:position pos:line="49" pos:column="15"/></name></type> <name pos:line="49" pos:column="16">readthisamountnow<pos:position pos:line="49" pos:column="33"/></name> <init pos:line="49" pos:column="34">=
          <expr><ternary><condition><expr><operator pos:line="50" pos:column="11">(<pos:position pos:line="50" pos:column="12"/></operator><name><name pos:line="50" pos:column="12">data<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">state<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">resume_from<pos:position pos:line="50" pos:column="35"/></name></name> <operator pos:line="50" pos:column="36">-<pos:position pos:line="50" pos:column="37"/></operator> <name pos:line="50" pos:column="38">passed<pos:position pos:line="50" pos:column="44"/></name> <operator pos:line="50" pos:column="45">&gt;<pos:position pos:line="50" pos:column="49"/></operator> <name><name pos:line="50" pos:column="47">data<pos:position pos:line="50" pos:column="51"/></name><operator pos:line="50" pos:column="51">-&gt;<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="53">set<pos:position pos:line="50" pos:column="56"/></name><operator pos:line="50" pos:column="56">.<pos:position pos:line="50" pos:column="57"/></operator><name pos:line="50" pos:column="57">buffer_size<pos:position pos:line="50" pos:column="68"/></name></name><operator pos:line="50" pos:column="68">)<pos:position pos:line="50" pos:column="69"/></operator></expr> ?<pos:position pos:line="50" pos:column="71"/></condition><then pos:line="50" pos:column="71">
          <expr><operator pos:line="51" pos:column="11">(<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="12">size_t<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">)<pos:position pos:line="51" pos:column="19"/></operator><name><name pos:line="51" pos:column="19">data<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">-&gt;<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="25">set<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">.<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="29">buffer_size<pos:position pos:line="51" pos:column="40"/></name></name></expr> <pos:position pos:line="51" pos:column="41"/></then><else pos:line="51" pos:column="41">:
          <expr><call><name pos:line="52" pos:column="11">curlx_sotouz<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name><name pos:line="52" pos:column="24">data<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">state<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">.<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">resume_from<pos:position pos:line="52" pos:column="47"/></name></name> <operator pos:line="52" pos:column="48">-<pos:position pos:line="52" pos:column="49"/></operator> <name pos:line="52" pos:column="50">passed<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="52" pos:column="58"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="54" pos:column="9">size_t<pos:position pos:line="54" pos:column="15"/></name></type> <name pos:line="54" pos:column="16">actuallyread<pos:position pos:line="54" pos:column="28"/></name> <init pos:line="54" pos:column="29">=
          <expr><call><name><name pos:line="55" pos:column="11">data<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">state<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">.<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">fread_func<pos:position pos:line="55" pos:column="33"/></name></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name><name pos:line="55" pos:column="34">data<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">state<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">.<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="46">buffer<pos:position pos:line="55" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="54">1<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">readthisamountnow<pos:position pos:line="55" pos:column="74"/></name></expr></argument>,
                                 <argument><expr><name><name pos:line="56" pos:column="34">data<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">state<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">.<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="46">in<pos:position pos:line="56" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="50"/></decl_stmt>

        <expr_stmt><expr><name pos:line="58" pos:column="9">passed<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">+=<pos:position pos:line="58" pos:column="18"/></operator> <name pos:line="58" pos:column="19">actuallyread<pos:position pos:line="58" pos:column="31"/></name></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
        <if pos:line="59" pos:column="9">if<condition pos:line="59" pos:column="11">(<expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">actuallyread<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <literal type="number" pos:line="59" pos:column="29">0<pos:position pos:line="59" pos:column="30"/></literal><operator pos:line="59" pos:column="30">)<pos:position pos:line="59" pos:column="31"/></operator> <operator pos:line="59" pos:column="32">||<pos:position pos:line="59" pos:column="34"/></operator> <operator pos:line="59" pos:column="35">(<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">actuallyread<pos:position pos:line="59" pos:column="48"/></name> <operator pos:line="59" pos:column="49">&gt;<pos:position pos:line="59" pos:column="53"/></operator> <name pos:line="59" pos:column="51">readthisamountnow<pos:position pos:line="59" pos:column="68"/></name><operator pos:line="59" pos:column="68">)<pos:position pos:line="59" pos:column="69"/></operator></expr>)<pos:position pos:line="59" pos:column="70"/></condition><then pos:line="59" pos:column="70"> <block pos:line="59" pos:column="71">{
          <comment type="block" pos:line="60" pos:column="11">/* this checks for greater-than only to make sure that the
             CURL_READFUNC_ABORT return code still aborts */</comment>
          <expr_stmt><expr><call><name pos:line="62" pos:column="11">failf<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">data<pos:position pos:line="62" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="23">"Failed to read data"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="46"/></expr_stmt>
          <return pos:line="63" pos:column="11">return <expr><name pos:line="63" pos:column="18">CURLE_FTP_COULDNT_USE_REST<pos:position pos:line="63" pos:column="44"/></name></expr>;<pos:position pos:line="63" pos:column="45"/></return>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
      }<pos:position pos:line="65" pos:column="8"/></block> while<condition pos:line="65" pos:column="14">(<expr><name pos:line="65" pos:column="15">passed<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">&lt;<pos:position pos:line="65" pos:column="26"/></operator> <name><name pos:line="65" pos:column="24">data<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">-&gt;<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="30">state<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">.<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="36">resume_from<pos:position pos:line="65" pos:column="47"/></name></name></expr>)<pos:position pos:line="65" pos:column="48"/></condition>;<pos:position pos:line="65" pos:column="49"/></do>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="67" pos:column="5">/* now, decrease the size of the read */</comment>
    <if pos:line="68" pos:column="5">if<condition pos:line="68" pos:column="7">(<expr><name><name pos:line="68" pos:column="8">data<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">state<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">.<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">infilesize<pos:position pos:line="68" pos:column="30"/></name></name><operator pos:line="68" pos:column="30">&gt;<pos:position pos:line="68" pos:column="34"/></operator><literal type="number" pos:line="68" pos:column="31">0<pos:position pos:line="68" pos:column="32"/></literal></expr>)<pos:position pos:line="68" pos:column="33"/></condition><then pos:line="68" pos:column="33"> <block pos:line="68" pos:column="34">{
      <expr_stmt><expr><name><name pos:line="69" pos:column="7">data<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">state<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">.<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="19">infilesize<pos:position pos:line="69" pos:column="29"/></name></name> <operator pos:line="69" pos:column="30">-=<pos:position pos:line="69" pos:column="32"/></operator> <name><name pos:line="69" pos:column="33">data<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-&gt;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="39">state<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">.<pos:position pos:line="69" pos:column="45"/></operator><name pos:line="69" pos:column="45">resume_from<pos:position pos:line="69" pos:column="56"/></name></name></expr>;<pos:position pos:line="69" pos:column="57"/></expr_stmt>

      <if pos:line="71" pos:column="7">if<condition pos:line="71" pos:column="9">(<expr><name><name pos:line="71" pos:column="10">data<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">state<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">.<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">infilesize<pos:position pos:line="71" pos:column="32"/></name></name> <operator pos:line="71" pos:column="33">&lt;=<pos:position pos:line="71" pos:column="38"/></operator> <literal type="number" pos:line="71" pos:column="36">0<pos:position pos:line="71" pos:column="37"/></literal></expr>)<pos:position pos:line="71" pos:column="38"/></condition><then pos:line="71" pos:column="38"> <block pos:line="71" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">infof<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><name pos:line="72" pos:column="15">data<pos:position pos:line="72" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="21">"File already completely uploaded\n"<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="74" pos:column="9">/* no data to transfer */</comment>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">Curl_setup_transfer<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">conn<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="35">-<pos:position pos:line="75" pos:column="36"/></operator><literal type="number" pos:line="75" pos:column="36">1<pos:position pos:line="75" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="39">-<pos:position pos:line="75" pos:column="40"/></operator><literal type="number" pos:line="75" pos:column="40">1<pos:position pos:line="75" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">FALSE<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="50">NULL<pos:position pos:line="75" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="56">-<pos:position pos:line="75" pos:column="57"/></operator><literal type="number" pos:line="75" pos:column="57">1<pos:position pos:line="75" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="60">NULL<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt>

        <comment type="block" pos:line="77" pos:column="9">/* Set -&gt;transfer so that we won't get any error in
         * ftp_done() because we didn't transfer anything! */</comment>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">ftp<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">-&gt;<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="14">transfer<pos:position pos:line="79" pos:column="22"/></name></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">FTPTRANSFER_NONE<pos:position pos:line="79" pos:column="41"/></name></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="81" pos:column="9">state<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">conn<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="21">FTP_STOP<pos:position pos:line="81" pos:column="29"/></name></expr></argument>)<pos:position pos:line="81" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt>
        <return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">CURLE_OK<pos:position pos:line="82" pos:column="24"/></name></expr>;<pos:position pos:line="82" pos:column="25"/></return>
      }<pos:position pos:line="83" pos:column="8"/></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="85" pos:column="5">/* we've passed, proceed as normal */</comment>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if> <comment type="block" pos:line="86" pos:column="5">/* resume_from */</comment>

  <expr_stmt><expr><call><name pos:line="88" pos:column="3">PPSENDF<pos:position pos:line="88" pos:column="10"/></name><argument_list pos:line="88" pos:column="10">(<argument><expr><operator pos:line="88" pos:column="11">&amp;<pos:position pos:line="88" pos:column="16"/></operator><name><name pos:line="88" pos:column="12">ftpc<pos:position pos:line="88" pos:column="16"/></name><operator pos:line="88" pos:column="16">-&gt;<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="18">pp<pos:position pos:line="88" pos:column="20"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="88" pos:column="22">data<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">-&gt;<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="28">set<pos:position pos:line="88" pos:column="31"/></name><operator pos:line="88" pos:column="31">.<pos:position pos:line="88" pos:column="32"/></operator><name pos:line="88" pos:column="32">ftp_append<pos:position pos:line="88" pos:column="42"/></name></name></expr>?<pos:position pos:line="88" pos:column="43"/></condition><then><expr><literal type="string" pos:line="88" pos:column="43">"APPE %s"<pos:position pos:line="88" pos:column="52"/></literal></expr></then><else pos:line="88" pos:column="52">:<expr><literal type="string" pos:line="88" pos:column="53">"STOR %s"<pos:position pos:line="88" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
          <argument><expr><name><name pos:line="89" pos:column="11">ftpc<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">file<pos:position pos:line="89" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="91" pos:column="3">state<pos:position pos:line="91" pos:column="8"/></name><argument_list pos:line="91" pos:column="8">(<argument><expr><name pos:line="91" pos:column="9">conn<pos:position pos:line="91" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="15">FTP_STOR<pos:position pos:line="91" pos:column="23"/></name></expr></argument>)<pos:position pos:line="91" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt>

  <return pos:line="93" pos:column="3">return <expr><name pos:line="93" pos:column="10">result<pos:position pos:line="93" pos:column="16"/></name></expr>;<pos:position pos:line="93" pos:column="17"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

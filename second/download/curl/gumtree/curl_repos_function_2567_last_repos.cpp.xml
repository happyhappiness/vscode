<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2567_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_ssl_addsessionid<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">void<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">ssl_sessionid<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="3" pos:column="32">size_t<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">idsize<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="4" pos:column="32">int<pos:position pos:line="4" pos:column="35"/></name></type> <name pos:line="4" pos:column="36">sockindex<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt> <comment type="block" pos:line="7" pos:column="40">/* the mother of all structs */</comment>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">curl_ssl_session<pos:position pos:line="8" pos:column="26"/></name></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">store<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><operator pos:line="8" pos:column="36">&amp;<pos:position pos:line="8" pos:column="41"/></operator><name><name pos:line="8" pos:column="37">data<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">state<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">.<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">session<pos:position pos:line="8" pos:column="56"/></name><index pos:line="8" pos:column="56">[<expr><literal type="number" pos:line="8" pos:column="57">0<pos:position pos:line="8" pos:column="58"/></literal></expr>]<pos:position pos:line="8" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">long<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">oldest_age<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name><name pos:line="9" pos:column="21">data<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">state<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">session<pos:position pos:line="9" pos:column="40"/></name><index pos:line="9" pos:column="40">[<expr><literal type="number" pos:line="9" pos:column="41">0<pos:position pos:line="9" pos:column="42"/></literal></expr>]<pos:position pos:line="9" pos:column="43"/></index></name><operator pos:line="9" pos:column="43">.<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">age<pos:position pos:line="9" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt> <comment type="block" pos:line="9" pos:column="49">/* zero if unused */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">clone_host<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">clone_conn_to_host<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">conn_to_port<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">long<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">general_age<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">const<pos:position pos:line="14" pos:column="8"/></specifier> <name pos:line="14" pos:column="9">bool<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">isProxy<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><call><name pos:line="14" pos:column="24">CONNECT_PROXY_SSL<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">()<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="15" pos:column="3">struct<pos:position pos:line="15" pos:column="9"/></name> <name pos:line="15" pos:column="10">ssl_primary_config<pos:position pos:line="15" pos:column="28"/></name></name> <modifier pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></modifier> <specifier pos:line="15" pos:column="31">const<pos:position pos:line="15" pos:column="36"/></specifier></type> <name pos:line="15" pos:column="37">ssl_config<pos:position pos:line="15" pos:column="47"/></name> <init pos:line="15" pos:column="48">= <expr><ternary><condition><expr><name pos:line="15" pos:column="50">isProxy<pos:position pos:line="15" pos:column="57"/></name></expr> ?<pos:position pos:line="15" pos:column="59"/></condition><then pos:line="15" pos:column="59">
    <expr><operator pos:line="16" pos:column="5">&amp;<pos:position pos:line="16" pos:column="10"/></operator><name><name pos:line="16" pos:column="6">conn<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">proxy_ssl_config<pos:position pos:line="16" pos:column="28"/></name></name></expr> <pos:position pos:line="16" pos:column="29"/></then><else pos:line="16" pos:column="29">:
    <expr><operator pos:line="17" pos:column="5">&amp;<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="6">conn<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">ssl_config<pos:position pos:line="17" pos:column="22"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">DEBUGASSERT<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><call><name pos:line="19" pos:column="15">SSL_SET_OPTION<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name><name pos:line="19" pos:column="30">primary<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">.<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">sessionid<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">clone_host<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">strdup<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><ternary><condition><expr><name pos:line="21" pos:column="23">isProxy<pos:position pos:line="21" pos:column="30"/></name></expr> ?<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> <expr><name><name pos:line="21" pos:column="33">conn<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">http_proxy<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">.<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">host<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">.<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="55">name<pos:position pos:line="21" pos:column="59"/></name></name></expr> <pos:position pos:line="21" pos:column="60"/></then><else pos:line="21" pos:column="60">: <expr><name><name pos:line="21" pos:column="62">conn<pos:position pos:line="21" pos:column="66"/></name><operator pos:line="21" pos:column="66">-&gt;<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="68">host<pos:position pos:line="21" pos:column="72"/></name><operator pos:line="21" pos:column="72">.<pos:position pos:line="21" pos:column="73"/></operator><name pos:line="21" pos:column="73">name<pos:position pos:line="21" pos:column="77"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">clone_host<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></return></block></then></if> <comment type="block" pos:line="23" pos:column="33">/* bail out */</comment>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name><name pos:line="25" pos:column="6">conn<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">bits<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">conn_to_host<pos:position pos:line="25" pos:column="29"/></name></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">clone_conn_to_host<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">strdup<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name><name pos:line="26" pos:column="33">conn<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">conn_to_host<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">.<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">name<pos:position pos:line="26" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><operator pos:line="27" pos:column="8">!<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">clone_conn_to_host<pos:position pos:line="27" pos:column="27"/></name></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28"> <block pos:line="27" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">free<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">clone_host<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
      <return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></return> <comment type="block" pos:line="29" pos:column="35">/* bail out */</comment>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></then>
  <else pos:line="32" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="5">clone_conn_to_host<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">NULL<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt></block></else></if>

  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><name><name pos:line="35" pos:column="6">conn<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">bits<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">conn_to_port<pos:position pos:line="35" pos:column="29"/></name></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="5">conn_to_port<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name><name pos:line="36" pos:column="20">conn<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">conn_to_port<pos:position pos:line="36" pos:column="38"/></name></name></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt></block></then>
  <else pos:line="37" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="5">conn_to_port<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="20">-<pos:position pos:line="38" pos:column="21"/></operator><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="40" pos:column="3">/* Now we should add the session ID and the host name to the cache, (remove
     the oldest if necessary) */</comment>

  <comment type="block" pos:line="43" pos:column="3">/* If using shared SSL session, lock! */</comment>
  <if pos:line="44" pos:column="3">if<condition pos:line="44" pos:column="5">(<expr><call><name pos:line="44" pos:column="6">SSLSESSION_SHARED<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">data<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30"> <block pos:line="44" pos:column="31">{
    <expr_stmt><expr><name pos:line="45" pos:column="5">general_age<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <operator pos:line="45" pos:column="19">&amp;<pos:position pos:line="45" pos:column="24"/></operator><name><name pos:line="45" pos:column="20">data<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">share<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">sessionage<pos:position pos:line="45" pos:column="43"/></name></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></then>
  <else pos:line="47" pos:column="3">else <block pos:line="47" pos:column="8">{
    <expr_stmt><expr><name pos:line="48" pos:column="5">general_age<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <operator pos:line="48" pos:column="19">&amp;<pos:position pos:line="48" pos:column="24"/></operator><name><name pos:line="48" pos:column="20">data<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">-&gt;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="26">state<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">.<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">sessionage<pos:position pos:line="48" pos:column="42"/></name></name></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="51" pos:column="3">/* find an empty slot for us, or find the oldest */</comment>
  <for pos:line="52" pos:column="3">for<control pos:line="52" pos:column="6">(<init><expr><name pos:line="52" pos:column="7">i<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <literal type="number" pos:line="52" pos:column="11">1<pos:position pos:line="52" pos:column="12"/></literal></expr>;<pos:position pos:line="52" pos:column="13"/></init> <condition><expr><operator pos:line="52" pos:column="14">(<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">i<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">&lt;<pos:position pos:line="52" pos:column="21"/></operator> <name><name pos:line="52" pos:column="19">data<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">-&gt;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="25">set<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">.<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="29">general_ssl<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">.<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="41">max_ssl_sessions<pos:position pos:line="52" pos:column="57"/></name></name><operator pos:line="52" pos:column="57">)<pos:position pos:line="52" pos:column="58"/></operator> <operator pos:line="52" pos:column="59">&amp;&amp;<pos:position pos:line="52" pos:column="69"/></operator>
        <name><name pos:line="53" pos:column="9">data<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">state<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">session<pos:position pos:line="53" pos:column="28"/></name><index pos:line="53" pos:column="28">[<expr><name pos:line="53" pos:column="29">i<pos:position pos:line="53" pos:column="30"/></name></expr>]<pos:position pos:line="53" pos:column="31"/></index></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">sessionid<pos:position pos:line="53" pos:column="41"/></name></expr>;<pos:position pos:line="53" pos:column="42"/></condition> <incr><expr><name pos:line="53" pos:column="43">i<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">++<pos:position pos:line="53" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="47"/></control> <block pos:line="53" pos:column="48">{
    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name><name pos:line="54" pos:column="8">data<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">state<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">session<pos:position pos:line="54" pos:column="27"/></name><index pos:line="54" pos:column="27">[<expr><name pos:line="54" pos:column="28">i<pos:position pos:line="54" pos:column="29"/></name></expr>]<pos:position pos:line="54" pos:column="30"/></index></name><operator pos:line="54" pos:column="30">.<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">age<pos:position pos:line="54" pos:column="34"/></name> <operator pos:line="54" pos:column="35">&lt;<pos:position pos:line="54" pos:column="39"/></operator> <name pos:line="54" pos:column="37">oldest_age<pos:position pos:line="54" pos:column="47"/></name></expr>)<pos:position pos:line="54" pos:column="48"/></condition><then pos:line="54" pos:column="48"> <block pos:line="54" pos:column="49">{
      <expr_stmt><expr><name pos:line="55" pos:column="7">oldest_age<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name><name pos:line="55" pos:column="20">data<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">-&gt;<pos:position pos:line="55" pos:column="29"/></operator><name pos:line="55" pos:column="26">state<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">.<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">session<pos:position pos:line="55" pos:column="39"/></name><index pos:line="55" pos:column="39">[<expr><name pos:line="55" pos:column="40">i<pos:position pos:line="55" pos:column="41"/></name></expr>]<pos:position pos:line="55" pos:column="42"/></index></name><operator pos:line="55" pos:column="42">.<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="43">age<pos:position pos:line="55" pos:column="46"/></name></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="56" pos:column="7">store<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <operator pos:line="56" pos:column="15">&amp;<pos:position pos:line="56" pos:column="20"/></operator><name><name pos:line="56" pos:column="16">data<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">state<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">session<pos:position pos:line="56" pos:column="35"/></name><index pos:line="56" pos:column="35">[<expr><name pos:line="56" pos:column="36">i<pos:position pos:line="56" pos:column="37"/></name></expr>]<pos:position pos:line="56" pos:column="38"/></index></name></expr>;<pos:position pos:line="56" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></for>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">i<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">==<pos:position pos:line="59" pos:column="10"/></operator> <name><name pos:line="59" pos:column="11">data<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">set<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">.<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">general_ssl<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">.<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="33">max_ssl_sessions<pos:position pos:line="59" pos:column="49"/></name></name></expr>)<pos:position pos:line="59" pos:column="50"/></condition><then pos:line="59" pos:column="50">
    <comment type="block" pos:line="60" pos:column="5">/* cache is full, we must "kill" the oldest entry! */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="5">Curl_ssl_kill_session<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">(<argument><expr><name pos:line="61" pos:column="27">store<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt></block></then>
  <else pos:line="62" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="5">store<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">=<pos:position pos:line="63" pos:column="12"/></operator> <operator pos:line="63" pos:column="13">&amp;<pos:position pos:line="63" pos:column="18"/></operator><name><name pos:line="63" pos:column="14">data<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">state<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">.<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">session<pos:position pos:line="63" pos:column="33"/></name><index pos:line="63" pos:column="33">[<expr><name pos:line="63" pos:column="34">i<pos:position pos:line="63" pos:column="35"/></name></expr>]<pos:position pos:line="63" pos:column="36"/></index></name></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt></block></else></if> <comment type="block" pos:line="63" pos:column="38">/* use this slot */</comment>

  <comment type="block" pos:line="65" pos:column="3">/* now init the session struct wisely */</comment>
  <expr_stmt><expr><name><name pos:line="66" pos:column="3">store<pos:position pos:line="66" pos:column="8"/></name><operator pos:line="66" pos:column="8">-&gt;<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="10">sessionid<pos:position pos:line="66" pos:column="19"/></name></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <name pos:line="66" pos:column="22">ssl_sessionid<pos:position pos:line="66" pos:column="35"/></name></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="67" pos:column="3">store<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">idsize<pos:position pos:line="67" pos:column="16"/></name></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="19">idsize<pos:position pos:line="67" pos:column="25"/></name></expr>;<pos:position pos:line="67" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="68" pos:column="3">store<pos:position pos:line="68" pos:column="8"/></name><operator pos:line="68" pos:column="8">-&gt;<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="10">age<pos:position pos:line="68" pos:column="13"/></name></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <operator pos:line="68" pos:column="16">*<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">general_age<pos:position pos:line="68" pos:column="28"/></name></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>    <comment type="block" pos:line="68" pos:column="33">/* set current age */</comment>
  <comment type="block" pos:line="69" pos:column="3">/* free it if there's one already present */</comment>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">free<pos:position pos:line="70" pos:column="7"/></name><argument_list pos:line="70" pos:column="7">(<argument><expr><name><name pos:line="70" pos:column="8">store<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">name<pos:position pos:line="70" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">free<pos:position pos:line="71" pos:column="7"/></name><argument_list pos:line="71" pos:column="7">(<argument><expr><name><name pos:line="71" pos:column="8">store<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">conn_to_host<pos:position pos:line="71" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="72" pos:column="3">store<pos:position pos:line="72" pos:column="8"/></name><operator pos:line="72" pos:column="8">-&gt;<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="10">name<pos:position pos:line="72" pos:column="14"/></name></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <name pos:line="72" pos:column="17">clone_host<pos:position pos:line="72" pos:column="27"/></name></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt>               <comment type="block" pos:line="72" pos:column="43">/* clone host name */</comment>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">store<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">conn_to_host<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">clone_conn_to_host<pos:position pos:line="73" pos:column="43"/></name></expr>;<pos:position pos:line="73" pos:column="44"/></expr_stmt> <comment type="block" pos:line="73" pos:column="45">/* clone connect to host name */</comment>
  <expr_stmt><expr><name><name pos:line="74" pos:column="3">store<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">conn_to_port<pos:position pos:line="74" pos:column="22"/></name></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="25">conn_to_port<pos:position pos:line="74" pos:column="37"/></name></expr>;<pos:position pos:line="74" pos:column="38"/></expr_stmt> <comment type="block" pos:line="74" pos:column="39">/* connect to port number */</comment>
  <comment type="block" pos:line="75" pos:column="3">/* port number */</comment>
  <expr_stmt><expr><name><name pos:line="76" pos:column="3">store<pos:position pos:line="76" pos:column="8"/></name><operator pos:line="76" pos:column="8">-&gt;<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="10">remote_port<pos:position pos:line="76" pos:column="21"/></name></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="76" pos:column="24">isProxy<pos:position pos:line="76" pos:column="31"/></name></expr> ?<pos:position pos:line="76" pos:column="33"/></condition><then pos:line="76" pos:column="33"> <expr><operator pos:line="76" pos:column="34">(<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="35">int<pos:position pos:line="76" pos:column="38"/></name><operator pos:line="76" pos:column="38">)<pos:position pos:line="76" pos:column="39"/></operator><name><name pos:line="76" pos:column="39">conn<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">-&gt;<pos:position pos:line="76" pos:column="48"/></operator><name pos:line="76" pos:column="45">port<pos:position pos:line="76" pos:column="49"/></name></name></expr> <pos:position pos:line="76" pos:column="50"/></then><else pos:line="76" pos:column="50">: <expr><name><name pos:line="76" pos:column="52">conn<pos:position pos:line="76" pos:column="56"/></name><operator pos:line="76" pos:column="56">-&gt;<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="58">remote_port<pos:position pos:line="76" pos:column="69"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="76" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="77" pos:column="3">store<pos:position pos:line="77" pos:column="8"/></name><operator pos:line="77" pos:column="8">-&gt;<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="10">scheme<pos:position pos:line="77" pos:column="16"/></name></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <name><name pos:line="77" pos:column="19">conn<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">-&gt;<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="25">handler<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">scheme<pos:position pos:line="77" pos:column="40"/></name></name></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt>

  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">(<expr><operator pos:line="79" pos:column="6">!<pos:position pos:line="79" pos:column="7"/></operator><call><name pos:line="79" pos:column="7">Curl_clone_primary_ssl_config<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name pos:line="79" pos:column="37">ssl_config<pos:position pos:line="79" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="49">&amp;<pos:position pos:line="79" pos:column="54"/></operator><name><name pos:line="79" pos:column="50">store<pos:position pos:line="79" pos:column="55"/></name><operator pos:line="79" pos:column="55">-&gt;<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="57">ssl_config<pos:position pos:line="79" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="69"/></condition><then pos:line="79" pos:column="69"> <block pos:line="79" pos:column="70">{
    <expr_stmt><expr><name><name pos:line="80" pos:column="5">store<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">-&gt;<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="12">sessionid<pos:position pos:line="80" pos:column="21"/></name></name> <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">NULL<pos:position pos:line="80" pos:column="28"/></name></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt> <comment type="block" pos:line="80" pos:column="30">/* let caller free sessionid */</comment>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">free<pos:position pos:line="81" pos:column="9"/></name><argument_list pos:line="81" pos:column="9">(<argument><expr><name pos:line="81" pos:column="10">clone_host<pos:position pos:line="81" pos:column="20"/></name></expr></argument>)<pos:position pos:line="81" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">free<pos:position pos:line="82" pos:column="9"/></name><argument_list pos:line="82" pos:column="9">(<argument><expr><name pos:line="82" pos:column="10">clone_conn_to_host<pos:position pos:line="82" pos:column="28"/></name></expr></argument>)<pos:position pos:line="82" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>
    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="83" pos:column="31"/></name></expr>;<pos:position pos:line="83" pos:column="32"/></return>
  }<pos:position pos:line="84" pos:column="4"/></block></then></if>

  <return pos:line="86" pos:column="3">return <expr><name pos:line="86" pos:column="10">CURLE_OK<pos:position pos:line="86" pos:column="18"/></name></expr>;<pos:position pos:line="86" pos:column="19"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

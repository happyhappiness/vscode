<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_907_curl-7.55.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">peek_ipv6<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">str<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">skip<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/*
   * Scan for a potential IPv6 literal.
   * - Valid globs contain a hyphen and &lt;= 1 colon.
   * - IPv6 literals contain no hyphens and &gt;= 2 colons.
   */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">colons<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">str<pos:position pos:line="10" pos:column="9"/></name><index pos:line="10" pos:column="9">[<expr><name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">++<pos:position pos:line="10" pos:column="13"/></operator></expr>]<pos:position pos:line="10" pos:column="14"/></index></name> <operator pos:line="10" pos:column="15">!=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="char" pos:line="10" pos:column="18">'['<pos:position pos:line="10" pos:column="21"/></literal></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">FALSE<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <for pos:line="13" pos:column="3">for<control pos:line="13" pos:column="6">(<init pos:line="13" pos:column="7">;<pos:position pos:line="13" pos:column="8"/></init><condition pos:line="13" pos:column="8">;<pos:position pos:line="13" pos:column="9"/></condition><incr/>)<pos:position pos:line="13" pos:column="10"/></control> <block pos:line="13" pos:column="11">{
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">c<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><name><name pos:line="14" pos:column="20">str<pos:position pos:line="14" pos:column="23"/></name><index pos:line="14" pos:column="23">[<expr><name pos:line="14" pos:column="24">i<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">++<pos:position pos:line="14" pos:column="27"/></operator></expr>]<pos:position pos:line="14" pos:column="28"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><call><name pos:line="15" pos:column="8">ISALNUM<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">c<pos:position pos:line="15" pos:column="17"/></name></expr></argument>)<pos:position pos:line="15" pos:column="18"/></argument_list></call> <operator pos:line="15" pos:column="19">||<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">c<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">==<pos:position pos:line="15" pos:column="26"/></operator> <literal type="char" pos:line="15" pos:column="27">'.'<pos:position pos:line="15" pos:column="30"/></literal> <operator pos:line="15" pos:column="31">||<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">c<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">==<pos:position pos:line="15" pos:column="38"/></operator> <literal type="char" pos:line="15" pos:column="39">'%'<pos:position pos:line="15" pos:column="42"/></literal></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
      <comment type="block" pos:line="16" pos:column="7">/* ok */</comment>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if<condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">c<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <literal type="char" pos:line="18" pos:column="18">':'<pos:position pos:line="18" pos:column="21"/></literal></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
      <expr_stmt><expr><name pos:line="19" pos:column="7">colons<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">++<pos:position pos:line="19" pos:column="15"/></operator></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if<condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">c<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <literal type="char" pos:line="21" pos:column="18">']'<pos:position pos:line="21" pos:column="21"/></literal></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22"> <block pos:line="21" pos:column="23">{
      <expr_stmt><expr><operator pos:line="22" pos:column="7">*<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">skip<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">i<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><ternary><condition><expr><name pos:line="23" pos:column="14">colons<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&gt;=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="24">2<pos:position pos:line="23" pos:column="25"/></literal></expr> ?<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <expr><name pos:line="23" pos:column="28">TRUE<pos:position pos:line="23" pos:column="32"/></name></expr> <pos:position pos:line="23" pos:column="33"/></then><else pos:line="23" pos:column="33">: <expr><name pos:line="23" pos:column="35">FALSE<pos:position pos:line="23" pos:column="40"/></name></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="41"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
      <return pos:line="26" pos:column="7">return <expr><name pos:line="26" pos:column="14">FALSE<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
  }<pos:position pos:line="28" pos:column="4"/></block></for>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

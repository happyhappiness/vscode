<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2662_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">nss_do_connect<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">sockindex<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ssl_connect_data<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">connssl<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><operator pos:line="3" pos:column="38">&amp;<pos:position pos:line="3" pos:column="43"/></operator><name><name pos:line="3" pos:column="39">conn<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">-&gt;<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="45">ssl<pos:position pos:line="3" pos:column="48"/></name><index pos:line="3" pos:column="48">[<expr><name pos:line="3" pos:column="49">sockindex<pos:position pos:line="3" pos:column="58"/></name></expr>]<pos:position pos:line="3" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">CURLcode<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">result<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">PRUint32<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">timeout<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">long<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier> <specifier pos:line="7" pos:column="10">const<pos:position pos:line="7" pos:column="15"/></specifier></type> <name pos:line="7" pos:column="16">certverifyresult<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><ternary><condition><expr><call><name pos:line="7" pos:column="35">SSL_IS_PROXY<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">()<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr> ?<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51">
    <expr><operator pos:line="8" pos:column="5">&amp;<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">set<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">proxy_ssl<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">certverifyresult<pos:position pos:line="8" pos:column="42"/></name></name></expr> <pos:position pos:line="8" pos:column="43"/></then><else pos:line="8" pos:column="43">: <expr><operator pos:line="8" pos:column="45">&amp;<pos:position pos:line="8" pos:column="50"/></operator><name><name pos:line="8" pos:column="46">data<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">set<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">.<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="56">ssl<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">certverifyresult<pos:position pos:line="8" pos:column="76"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="77"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier> <specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier></type> <name pos:line="9" pos:column="22">pinnedpubkey<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><ternary><condition><expr><call><name pos:line="9" pos:column="37">SSL_IS_PROXY<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">()<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr> ?<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53">
              <expr><name><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">set<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">str<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><name pos:line="10" pos:column="29">STRING_SSL_PINNEDPUBLICKEY_PROXY<pos:position pos:line="10" pos:column="61"/></name></expr>]<pos:position pos:line="10" pos:column="62"/></index></name></expr> <pos:position pos:line="10" pos:column="63"/></then><else pos:line="10" pos:column="63">:
              <expr><name><name pos:line="11" pos:column="15">data<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">set<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">str<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><name pos:line="11" pos:column="29">STRING_SSL_PINNEDPUBLICKEY_ORIG<pos:position pos:line="11" pos:column="60"/></name></expr>]<pos:position pos:line="11" pos:column="61"/></index></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="62"/></decl_stmt>


  <comment type="block" pos:line="14" pos:column="3">/* check timeout situation */</comment>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">time_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">time_left<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><call><name pos:line="15" pos:column="28">Curl_timeleft<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">data<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">NULL<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">TRUE<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="60"/></decl_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">time_left<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&lt;<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">failf<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">data<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="17">"timed out before SSL handshake"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">result<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">CURLE_OPERATION_TIMEDOUT<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <goto pos:line="19" pos:column="5">goto <name pos:line="19" pos:column="10">error<pos:position pos:line="19" pos:column="15"/></name>;<pos:position pos:line="19" pos:column="16"/></goto>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* Force the handshake now */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">timeout<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <call><name pos:line="23" pos:column="13">PR_MillisecondsToInterval<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">(<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">PRUint32<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator> <name pos:line="23" pos:column="50">time_left<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><call><name pos:line="24" pos:column="6">SSL_ForceHandshakeWithTimeout<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name><name pos:line="24" pos:column="36">BACKEND<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">handle<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">timeout<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call> <operator pos:line="24" pos:column="62">!=<pos:position pos:line="24" pos:column="64"/></operator> <name pos:line="24" pos:column="65">SECSuccess<pos:position pos:line="24" pos:column="75"/></name></expr>)<pos:position pos:line="24" pos:column="76"/></condition><then pos:line="24" pos:column="76"> <block pos:line="24" pos:column="77">{
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><call><name pos:line="25" pos:column="8">PR_GetError<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">()<pos:position pos:line="25" pos:column="21"/></argument_list></call> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">PR_WOULD_BLOCK_ERROR<pos:position pos:line="25" pos:column="45"/></name></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
      <comment type="block" pos:line="26" pos:column="7">/* blocking direction is updated by nss_update_connecting_state() */</comment>
      <block type="pseudo"><return pos:line="27" pos:column="7">return <expr><name pos:line="27" pos:column="14">CURLE_AGAIN<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></return></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if<condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">certverifyresult<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">==<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="34">SSL_ERROR_BAD_CERT_DOMAIN<pos:position pos:line="28" pos:column="59"/></name></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">result<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="29" pos:column="46"/></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if<condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">certverifyresult<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">!=<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr>)<pos:position pos:line="30" pos:column="36"/></condition><then pos:line="30" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">result<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></then></if></elseif></if>
    <goto pos:line="32" pos:column="5">goto <name pos:line="32" pos:column="10">error<pos:position pos:line="32" pos:column="15"/></name>;<pos:position pos:line="32" pos:column="16"/></goto>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">result<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <call><name pos:line="35" pos:column="12">display_conn_info<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">conn<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="36">BACKEND<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">handle<pos:position pos:line="35" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name pos:line="36" pos:column="6">result<pos:position pos:line="36" pos:column="12"/></name></expr>)<pos:position pos:line="36" pos:column="13"/></condition><then pos:line="36" pos:column="13">
    <block type="pseudo"><goto pos:line="37" pos:column="5">goto <name pos:line="37" pos:column="10">error<pos:position pos:line="37" pos:column="15"/></name>;<pos:position pos:line="37" pos:column="16"/></goto></block></then></if>

  <if pos:line="39" pos:column="3">if<condition pos:line="39" pos:column="5">(<expr><call><name pos:line="39" pos:column="6">SSL_SET_OPTION<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">issuercert<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33"> <block pos:line="39" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">SECStatus<pos:position pos:line="40" pos:column="14"/></name></type> <name pos:line="40" pos:column="15">ret<pos:position pos:line="40" pos:column="18"/></name> <init pos:line="40" pos:column="19">= <expr><name pos:line="40" pos:column="21">SECFailure<pos:position pos:line="40" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">char<pos:position pos:line="41" pos:column="9"/></name> <modifier pos:line="41" pos:column="10">*<pos:position pos:line="41" pos:column="11"/></modifier></type><name pos:line="41" pos:column="11">nickname<pos:position pos:line="41" pos:column="19"/></name> <init pos:line="41" pos:column="20">= <expr><call><name pos:line="41" pos:column="22">dup_nickname<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">data<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="41">SSL_SET_OPTION<pos:position pos:line="41" pos:column="55"/></name><argument_list pos:line="41" pos:column="55">(<argument><expr><name pos:line="41" pos:column="56">issuercert<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="69"/></decl_stmt>
    <if pos:line="42" pos:column="5">if<condition pos:line="42" pos:column="7">(<expr><name pos:line="42" pos:column="8">nickname<pos:position pos:line="42" pos:column="16"/></name></expr>)<pos:position pos:line="42" pos:column="17"/></condition><then pos:line="42" pos:column="17"> <block pos:line="42" pos:column="18">{
      <comment type="block" pos:line="43" pos:column="7">/* we support only nicknames in case of issuercert for now */</comment>
      <expr_stmt><expr><name pos:line="44" pos:column="7">ret<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <call><name pos:line="44" pos:column="13">check_issuer_cert<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name><name pos:line="44" pos:column="31">BACKEND<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">handle<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">nickname<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">free<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name pos:line="45" pos:column="12">nickname<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if<condition pos:line="48" pos:column="7">(<expr><name pos:line="48" pos:column="8">SECFailure<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">ret<pos:position pos:line="48" pos:column="25"/></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26"> <block pos:line="48" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">infof<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">data<pos:position pos:line="49" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="19">"SSL certificate issuer check failed\n"<pos:position pos:line="49" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name pos:line="50" pos:column="7">result<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <name pos:line="50" pos:column="16">CURLE_SSL_ISSUER_ERROR<pos:position pos:line="50" pos:column="38"/></name></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
      <goto pos:line="51" pos:column="7">goto <name pos:line="51" pos:column="12">error<pos:position pos:line="51" pos:column="17"/></name>;<pos:position pos:line="51" pos:column="18"/></goto>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">infof<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">data<pos:position pos:line="54" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="19">"SSL certificate issuer check ok\n"<pos:position pos:line="54" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="58" pos:column="3">result<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <call><name pos:line="58" pos:column="12">cmp_peer_pubkey<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">connssl<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">pinnedpubkey<pos:position pos:line="58" pos:column="49"/></name></expr></argument>)<pos:position pos:line="58" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt>
  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><name pos:line="59" pos:column="6">result<pos:position pos:line="59" pos:column="12"/></name></expr>)<pos:position pos:line="59" pos:column="13"/></condition><then pos:line="59" pos:column="13">
    <comment type="block" pos:line="60" pos:column="5">/* status already printed */</comment>
    <block type="pseudo"><goto pos:line="61" pos:column="5">goto <name pos:line="61" pos:column="10">error<pos:position pos:line="61" pos:column="15"/></name>;<pos:position pos:line="61" pos:column="16"/></goto></block></then></if>

  <return pos:line="63" pos:column="3">return <expr><name pos:line="63" pos:column="10">CURLE_OK<pos:position pos:line="63" pos:column="18"/></name></expr>;<pos:position pos:line="63" pos:column="19"/></return>

<label><name pos:line="65" pos:column="1">error<pos:position pos:line="65" pos:column="6"/></name>:<pos:position pos:line="65" pos:column="7"/></label>
  <return pos:line="66" pos:column="3">return <expr><call><name pos:line="66" pos:column="10">nss_fail_connect<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">connssl<pos:position pos:line="66" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="36">data<pos:position pos:line="66" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="42">result<pos:position pos:line="66" pos:column="48"/></name></expr></argument>)<pos:position pos:line="66" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="50"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

 );
  puts(
 "          sent to stdout to be in text mode for win32 systems.\n"
 "\n"
 "          If this option is used twice, the second one will  dis­\n"
 "          able ASCII usage.\n"
-"     --connect-timeout <seconds>\n"
-"          Maximum  time  in seconds that you allow the connection\n"
-"          to the server to take.  This only limits the connection\n"
-"          phase,  once  curl  has  connected this option is of no\n"
-"          more use. This option  didn't  work  in  win32  systems\n"
+"     --ciphers <list of ciphers>\n"
+"          (SSL) Specifies which ciphers to use in the connection.\n"
+"          The list of ciphers must be using valid  ciphers.  Read\n"
+"          up   on   SSL   cipher   list   details  on  this  URL:\n"
+"          http://www.openssl.org/docs/apps/ciphers.html   (Option\n"
+"          added in curl 7.9)\n"
+"\n"
 );
  puts(
+"          If  this option is used severl times, the last one will\n"
+"          override the others.\n"
+"\n"
+"     --connect-timeout <seconds>\n"
+"          Maximum time in seconds that you allow  the  connection\n"
+"          to the server to take.  This only limits the connection\n"
+"          phase, once curl has connected this  option  is  of  no\n"
+"          more  use.  This  option  didn't  work in win32 systems\n"
 "          until 7.7.2.  See also the --max-time option.\n"
 "\n"
+);
+ puts(
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
-"     -c/--continue\n"
-"          Deprecated. Use '-C -' instead.  Continue/Resume a pre­\n"
-"          vious  file  transfer.  This instructs curl to continue\n"
-"          appending data on the  file  where  it  was  previously\n"
-"          left,  possibly  because  of a broken connection to the\n"
-"          server. There must be a named physical file  to  append\n"
+"     -c/--cookie-jar <file name>\n"
+"          Specify  to which file you want curl to write all cook­\n"
+"          ies after a completed operation. Curl writes all  cook­\n"
+"          ies  previously  read  from a specified file as well as\n"
+"          all cookies received from remote server(s). If no cook­\n"
+"          ies  are  known, no file will be written. The file will\n"
 );
  puts(
-"          to  for  this to work.  Note: Upload resume is depening\n"
-"          on a command named SIZE not always present in  all  ftp\n"
-"          servers! Upload resume is for FTP only.  HTTP resume is\n"
-"          only possible with HTTP/1.1 or later servers.\n"
+"          be written using the Netscape cookie  file  format.  If\n"
+"          you  set the file name to a single dash, \"-\", the cook­\n"
+"          ies will be written to stdout. (Option  added  in  curl\n"
+"          7.9)\n"
+"\n"
+"          If this option is used several times, the last specfied\n"
+"          file name will be used.\n"
 "\n"
 "     -C/--continue-at <offset>\n"
 "          Continue/Resume a previous file transfer at  the  given\n"
 "          offset.  The  given offset is the exact number of bytes\n"
-"          that will be skipped counted from the beginning of  the\n"
 );
  puts(
+"          that will be skipped counted from the beginning of  the\n"
 "          source file before it is transfered to the destination.\n"
 "          If used with uploads, the ftp server command SIZE  will\n"
 "          not  be  used  by  curl. Upload resume is for FTP only.\n"
 "          HTTP resume is only possible  with  HTTP/1.1  or  later\n"
 "          servers.\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -d/--data <data>\n"
-"          (HTTP) Sends the specified data in a  POST  request  to\n"
 );
  puts(
+"          (HTTP) Sends the specified data in a  POST  request  to\n"
 "          the HTTP server, in a way that can emulate as if a user\n"
 "          has filled in a HTML form and pressed the  submit  but­\n"
 "          ton.  Note  that  the data is sent exactly as specified\n"
 "          with no extra processing (with all newlines  cut  off).\n"
 "          The  data  is  expected  to be \"url-encoded\". This will\n"
 "          cause curl to pass the data to  the  server  using  the\n"
-"          content-type application/x-www-form-urlencoded. Compare\n"
 );
  puts(
+"          content-type application/x-www-form-urlencoded. Compare\n"
 "          to -F. If more than one -d/--data option is used on the\n"
 "          same  command  line,  the data pieces specified will be\n"
 "          merged together with a separating &-letter. Thus, using\n"
 "          '-d  name=daniel  -d skill=lousy' would generate a post\n"
 "          chunk that looks like 'name=daniel&skill=lousy'.\n"
 "\n"
 "          If you start the data  with  the  letter  @,  the  rest\n"
-"          should  be  a  file name to read the data from, or - if\n"
 );
  puts(
-"          you want  curl  to  read  the  data  from  stdin.   The\n"
-"          contents  of the file must already be url-encoded. Mul­\n"
-"          tiple files can also be specified. Posting data from  a\n"
-"          file  named  'foobar'  would  thus be done with \"--data\n"
-"          @foobar\".\n"
+"          should  be  a  file name to read the data from, or - if\n"
+"          you want curl to read the data from  stdin.   The  con­\n"
+"          tents of the file must already be url-encoded. Multiple\n"
+"          files can also be specified. Posting data from  a  file\n"
+"          named  'foobar'  would  thus be done with \"--data @foo­\n"
+"          bar\".\n"
 "\n"
 "          To post data purely binary, you should instead use  the\n"
 "          --data-binary option.\n"
 "\n"
 "          -d/--data is the same as --data-ascii.\n"
 "\n"
-"          If  this option is used several times, the ones follow­\n"
 );
  puts(
+"          If  this option is used several times, the ones follow­\n"
 "          ing the first will append data.\n"
 "\n"
 "     --data-ascii <data>\n"
 "          (HTTP) This is an alias for the -d/--data option.\n"
 "\n"
 "          If this option is used several times, the ones  follow­\n"
 "          ing the first will append data.\n"
 "\n"
 "     --data-binary <data>\n"
 "          (HTTP)  This  posts data in a similar manner as --data-\n"
 "          ascii does, although when using this option the  entire\n"
-"          context  of  the posted data is kept as-is. If you want\n"
 );
  puts(
+"          context  of  the posted data is kept as-is. If you want\n"
 "          to post a binary file without the  strip-newlines  fea­\n"
 "          ture of the --data-ascii option, this is for you.\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "          If this option is used several times, the ones  follow­\n"
 "          ing the first will append data.\n"
 "\n"
 "     -D/--dump-header <file>\n"
 "          (HTTP/FTP)  Write  the HTTP headers to this file. Write\n"
-"          the FTP file info to this file if -I/--head is used.\n"
-"\n"
 );
  puts(
+"          the FTP file info to this file if -I/--head is used.\n"
+"\n"
 "          This option is handy to use when you want to store  the\n"
 "          cookies  that  a  HTTP  site  sends to you. The cookies\n"
 "          could then be read in a second curl invoke by using the\n"
 "          -b/--cookie option!\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -e/--referer <URL>\n"
 "          (HTTP) Sends the \"Referer Page\" information to the HTTP\n"
-"          server.  This can also be set with the -H/--header flag\n"
 );
  puts(
+"          server.  This can also be set with the -H/--header flag\n"
 "          of course.  When used with -L/--location you can append\n"
 "          \";auto\"  to  the referer URL to make curl automatically\n"
 "          set the  previous  URL  when  it  follows  a  Location:\n"
 "          header.  The  \";auto\" string can be used alone, even if\n"
 "          you don't set an initial referer.\n"
+"\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     --egd-file <file>\n"
-"          (HTTPS)  Specify the path name to the Entropy Gathering\n"
 );
  puts(
+"          (HTTPS)  Specify the path name to the Entropy Gathering\n"
 "          Daemon socket. The socket is used to  seed  the  random\n"
 "          engine  for SSL connections. See also the --random-file\n"
 "          option.\n"
 "\n"
 "     -E/--cert <certificate[:password]>\n"
 "          (HTTPS) Tells curl to  use  the  specified  certificate\n"
 "          file  when  getting  a file with HTTPS. The certificate\n"
 "          must be in PEM format.  If the optional password  isn't\n"
-"          specified, it will be queried for on the terminal. Note\n"
 );
  puts(
+"          specified, it will be queried for on the terminal. Note\n"
 "          that this certificate is the private key and  the  pri­\n"
 "          vate certificate concatenated!\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     --cacert <CA certificate>\n"
 "          (HTTPS) Tells curl to  use  the  specified  certificate\n"
 "          file to verify the peer. The certificate must be in PEM\n"
 "          format.\n"
 "\n"
+);
+ puts(
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -f/--fail\n"
-);
- puts(
 "          (HTTP)  Fail  silently  (no  output  at  all) on server\n"
 "          errors. This is mostly done like this to better  enable\n"
 "          scripts  etc  to  better  deal with failed attempts. In\n"
 "          normal cases when a HTTP server fails to deliver a doc­\n"
 "          ument,  it  returns  a  HTML document stating so (which\n"
 "          often also describes why and more). This flag will pre­\n"
-"          vent  curl  from  outputting  that  and  fail  silently\n"
-"          instead.\n"
-"\n"
 );
  puts(
+"          vent  curl  from  outputting  that  and  fail  silently\n"
+"          instead.\n"
 "          If this option is used twice,  the  second  will  again\n"
 "          disable silent failure.\n"
 "\n"
 "     -F/--form <name=content>\n"
 "          (HTTP) This lets curl emulate a filled in form in which\n"
 "          a user has pressed the submit button. This causes  curl\n"
 "          to POST data using the content-type multipart/form-data\n"
 "          according to RFC1867. This enables uploading of  binary\n"
-"          files etc. To force the 'content' part to be be a file,\n"
 );
  puts(
+"          files etc. To force the 'content' part to be be a file,\n"
 "          prefix the file name with an @ sign. To  just  get  the\n"
 "          content part from a file, prefix the file name with the\n"
 "          letter <. The difference between @ and < is then that @\n"
 "          makes a file get attached in the post as a file upload,\n"
-"          while the <  makes  a  text  field  and  just  get  the\n"
-"          contents for that text field from a file.\n"
+"          while the < makes a text field and just  get  the  con­\n"
+"          tents for that text field from a file.\n"
 "\n"
-"          Example,  to  send  your  password  file to the server,\n"
 );
  puts(
+"          Example,  to  send  your  password  file to the server,\n"
 "          where 'password' is the name of the form-field to which\n"
 "          /etc/passwd will be the input:\n"
 "\n"
 "          curl -F password=@/etc/passwd www.mypasswords.com\n"
 "\n"
 "          To read the file's content from stdin insted of a file,\n"
 "          use - where the file name should've been. This goes for\n"
 "          both @ and < constructs.\n"
 "\n"
 "          This option can be used multiple times.\n"
 "\n"
 "     -g/--globoff\n"
-"          This  option  switches  off  the \"URL globbing parser\".\n"
 );
  puts(
+"          This  option  switches  off  the \"URL globbing parser\".\n"
 "          When you set this option, you  can  specify  URLs  that\n"
 "          contain  the  letters  {}[]  without  having them being\n"
 "          interpreted by curl itself. Note that these letters are\n"
 "          not  normal  legal  URL  contents  but  they  should be\n"
 "          encoded according to the URI standard. (Option added in\n"
 "          curl 7.6)\n"
 "\n"
 "     -G/--get\n"
 "          When  used,  this  option  will make all data specified\n"
-"          with -d/--data or --data-binary to be used  in  a  HTTP\n"
 );
  puts(
+"          with -d/--data or --data-binary to be used  in  a  HTTP\n"
 "          GET  request instead of the POST request that otherwise\n"
 "          would be used. The data will be  appended  to  the  URL\n"
-"          with a '?'  separator.\n"
+"          with a '?'  separator. (Option added in curl 7.9)\n"
 "\n"
 "     -h/--help\n"
 "          Usage help.\n"
 "\n"
 "     -H/--header <header>\n"
 "          (HTTP) Extra header to use when getting a web page. You\n"
 "          may specify any number of extra headers. Note  that  if\n"
+);
+ puts(
 "          you  should  add a custom header that has the same name\n"
-"          as one of the internal ones curl would use, your exter­\n"
+"          as one of  the  internal  ones  curl  would  use,  your\n"
+"          externally  set  header  will  be  used  instead of the\n"
+"          internal one. This allows you  to  make  even  trickier\n"
+"          stuff  than  curl  would  normally  do.  You should not\n"
+"          replace internally set  headers  without  knowing  per­\n"
+"          fectly  well  what  you're doing. Replacing an internal\n"
 );
  puts(
-"          nally  set  header will be used instead of the internal\n"
-"          one. This allows you to make even trickier  stuff  than\n"
-"          curl  would  normally do. You should not replace inter­\n"
-"          nally set headers without knowing perfectly  well  what\n"
-"          you're  doing.  Replacing  an  internal header with one\n"
-"          without content on the right side  of  the  colon  will\n"
-"          prevent that header from appearing.\n"
+"          header with one without content on the  right  side  of\n"
+"          the colon will prevent that header from appearing.\n"
 "\n"
 "          This option can be used multiple times.\n"
 "\n"
-);
- puts(
 "     -i/--include\n"
 "          (HTTP) Include the HTTP-header in the output. The HTTP-\n"
 "          header includes things like server-name,  date  of  the\n"
 "          document, HTTP-version and more...\n"
+"\n"
 "          If  this  option  is  used twice, the second will again\n"
 "          disable header include.\n"
 "\n"
 "     --interface <name>\n"
+);
+ puts(
 "          Perform an operation using a specified  interface.  You\n"
 "          can  enter  interface name, IP address or host name. An\n"
 "          example could look like:\n"
 "\n"
-);
- puts(
 "          curl --interface eth0:1 http://www.netscape.com/\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -I/--head\n"
 "          (HTTP/FTP)  Fetch  the  HTTP-header  only! HTTP-servers\n"
 "          feature the command HEAD which this uses to get nothing\n"
+);
+ puts(
 "          but  the header of a document. When used on a FTP file,\n"
 "          curl displays the file size only.\n"
 "\n"
 "          If this option is used twice,  the  second  will  again\n"
-);
- puts(
 "          disable header only.\n"
 "\n"
 "     --krb4 <level>\n"
 "          (FTP)  Enable  kerberos4  authentication  and  use. The\n"
 "          level must be entered and should  be  one  of  'clear',\n"
 "          'safe',  'confidential'  or 'private'. Should you use a\n"
 "          level that is not one of these, 'private' will  instead\n"
+);
+ puts(
 "          be used.\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -K/--config <config file>\n"
-);
- puts(
 "          Specify which config file to read curl arguments  from.\n"
 "          The  config  file  is a text file in which command line\n"
 "          arguments can be written which then will be used as  if\n"
 "          they  were  written on the actual command line. Options\n"
 "          and their parameters must be specified on the same con­\n"
-"          fig  file  line.  If  the parameter is to contain white\n"
-"          spaces, the parameter must be inclosed  within  quotes.\n"
 );
  puts(
+"          fig  file  line.  If  the parameter is to contain white\n"
+"          spaces, the parameter must be inclosed  within  quotes.\n"
 "          If  the  first column of a config line is a '#' charac­\n"
 "          ter, the rest of the line will be treated as a comment.\n"
 "\n"
 "          Specify  the filename as '-' to make curl read the file\n"
 "          from stdin.\n"
 "\n"
 "          This option can be used multiple times.\n"
 "\n"
 "     -l/--list-only\n"
 "          (FTP) When listing an FTP directory, this switch forces\n"
-"          a  name-only  view.   Especially  useful if you want to\n"
-"          machine-parse the contents of an  FTP  directory  since\n"
 );
  puts(
+"          a  name-only  view.   Especially  useful if you want to\n"
+"          machine-parse the contents of an  FTP  directory  since\n"
 "          the  normal  directory view doesn't use a standard look\n"
 "          or format.\n"
 "\n"
 "          If this option is used twice,  the  second  will  again\n"
 "          disable list only.\n"
 "\n"
 "     -L/--location\n"
 "          (HTTP/HTTPS)  If  the server reports that the requested\n"
 "          page has  a  different  location  (indicated  with  the\n"
-"          header  line Location:) this flag will let curl attempt\n"
-"          to reattempt the get on the new place. If used together\n"
 );
  puts(
+"          header  line Location:) this flag will let curl attempt\n"
+"          to reattempt the get on the new place. If used together\n"
 "          with -i or -I, headers from all requested pages will be\n"
 "          shown. If this flag is used when making  a  HTTP  POST,\n"
 "          curl will automatically switch to GET after the initial\n"
 "          POST has been done.\n"
 "\n"
 "          If this option is used twice,  the  second  will  again\n"
 "          disable location following.\n"
 "\n"
 "     -m/--max-time <seconds>\n"
-"          Maximum time in seconds that you allow the whole opera­\n"
-"          tion to take.  This is useful for preventing your batch\n"
 );
  puts(
+"          Maximum time in seconds that you allow the whole opera­\n"
+"          tion to take.  This is useful for preventing your batch\n"
 "          jobs  from  hanging  for  hours due to slow networks or\n"
 "          links going down.  This doesn't  work  fully  in  win32\n"
 "          systems.  See also the --connect-timeout option.\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -M/--manual\n"
 "          Manual. Display the huge help text.\n"
 "\n"
 "     -n/--netrc\n"
+);
+ puts(
 "          Makes curl scan the .netrc  file  in  the  user's  home\n"
 "          directory  for  login  name and password. This is typi­\n"
+"          cally used for ftp on unix. If  used  with  http,  curl\n"
+"          will enable user authentication. See netrc(4) or ftp(1)\n"
+"          for details on the file format. Curl will not  complain\n"
+"          if  that  file  hasn't the right permissions (it should\n"
+"          not be world nor group readable). The environment vari­\n"
 );
  puts(
-"          cally used for ftp on unix. If  used  with  http,  curl\n"
-"          will  enable  user  authentication.  See  netrc(4)  for\n"
-"          details on the file format. Curl will not  complain  if\n"
-"          that  file  hasn't the right permissions (it should not\n"
-"          be world nor group readable). The environment  variable\n"
-"          \"HOME\" is used to find the home directory.\n"
+"          able \"HOME\" is used to find the home directory.\n"
 "\n"
 "          A  quick  and  very  simple  example  of how to setup a\n"
-);
- puts(
 "          .netrc  to  allow  curl   to   ftp   to   the   machine\n"
 "          host.domain.com  with  user  name 'myself' and password\n"
 "          'secret' should look similar to:\n"
 "\n"
 "          machine host.domain.com login myself password secret\n"
 "\n"
 "          If this option is used twice,  the  second  will  again\n"
 "          disable netrc usage.\n"
+"\n"
 "     -N/--no-buffer\n"
-"          Disables  the buffering of the output stream. In normal\n"
-"          work situations, curl will use a standard buffered out­\n"
 );
  puts(
+"          Disables  the buffering of the output stream. In normal\n"
+"          work situations, curl will use a standard buffered out­\n"
 "          put  stream that will have the effect that it will out­\n"
 "          put the data in chunks, not  necessarily  exactly  when\n"
 "          the  data arrives.  Using this option will disable that\n"
 "          buffering.\n"
 "\n"
 "          If this option is used twice,  the  second  will  again\n"
 "          switch on buffering.\n"
 "\n"
 "     -o/--output <file>\n"
-"          Write  output  to  <file> instead of stdout. If you are\n"
-"          using {} or [] to fetch multiple documents, you can use\n"
 );
  puts(
+"          Write  output  to  <file> instead of stdout. If you are\n"
+"          using {} or [] to fetch multiple documents, you can use\n"
 "          '#'  followed by a number in the <file> specifier. That\n"
 "          variable will be replaced with the current  string  for\n"
 "          the URL being fetched. Like in:\n"
 "\n"
 "            curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
 "\n"
 "          or use several variables like:\n"
 "\n"
 "            curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
 "\n"
+);
+ puts(
 "          You  may use this option as many times as you have num­\n"
 "          ber of URLs.\n"
 "\n"
 "     -O/--remote-name\n"
-);
- puts(
 "          Write output to a local file named like the remote file\n"
 "          we get. (Only the file part of the remote file is used,\n"
 "          the path is cut off.)\n"
 "\n"
 "          You may use this option as many times as you have  num­\n"
 "          ber of URLs.\n"
 "\n"
 "     -p/--proxytunnel\n"
 "          When an HTTP proxy is used, this option will cause non-\n"
-"          HTTP protocols to attempt to tunnel through  the  proxy\n"
-"          instead  of merely using it to do HTTP-like operations.\n"
 );
  puts(
+"          HTTP protocols to attempt to tunnel through  the  proxy\n"
+"          instead  of merely using it to do HTTP-like operations.\n"
 "          The tunnel approach is made with the HTTP proxy CONNECT\n"
 "          request  and requires that the proxy allows direct con­\n"
 "          nect to the remote port number  curl  wants  to  tunnel\n"
 "          through to.\n"
 "\n"
 "          If  this  option  is  used twice, the second will again\n"
 "          disable proxy tunnel.\n"
 "\n"
 "     -P/--ftpport <address>\n"
-"          (FTP) Reverses the initiator/listener roles  when  con­\n"
-"          necting  with  ftp. This switch makes Curl use the PORT\n"
 );
  puts(
+"          (FTP) Reverses the initiator/listener roles  when  con­\n"
+"          necting  with  ftp. This switch makes Curl use the PORT\n"
 "          command instead of PASV. In practice,  PORT  tells  the\n"
 "          server to connect to the client's specified address and\n"
 "          port, while PASV asks the server for an ip address  and\n"
 "          port to connect to. <address> should be one of:\n"
 "\n"
 "          interface   i.e  \"eth0\" to specify which interface's IP\n"
+);
+ puts(
 "                      address you want to use  (Unix only)\n"
 "\n"
 "          IP address  i.e \"192.168.10.1\" to specify exact IP num­\n"
 "                      ber\n"
 "\n"
-);
- puts(
 "          host name   i.e \"my.host.domain\" to specify machine\n"
 "\n"
 "          -           (any  single-letter string) to make it pick\n"
 "                      the machine's default\n"
 "\n"
 "     If this option is used several times, the last one  will  be\n"
 "     used.\n"
 "\n"
 "     -q   If used as the first parameter on the command line, the\n"
+);
+ puts(
 "          $HOME/.curlrc file will not be read and used as a  con­\n"
 "          fig file.\n"
 "\n"
 "     -Q/--quote <comand>\n"
 "          (FTP)  Send  an  arbitrary  command  to  the remote FTP\n"
-);
- puts(
 "          server, by using the QUOTE command of the  server.  Not\n"
 "          all  servers support this command, and the set of QUOTE\n"
 "          commands are server specific! Quote commands  are  sent\n"
 "          BEFORE  the  transfer is taking place. To make commands\n"
+);
+ puts(
 "          take place after a  successful  transfer,  prefix  them\n"
 "          with a dash '-'. You may specify any amount of commands\n"
 "          to be run before and after the transfer. If the  server\n"
-);
- puts(
 "          returns  failure  for  one  of the commands, the entire\n"
 "          operation will be aborted.\n"
 "\n"
 "          This option can be used multiple times.\n"
 "\n"
 "     --random-file <file>\n"
 "          (HTTPS) Specify the path name to file  containing  what\n"
+);
+ puts(
 "          will  be considered as random data. The data is used to\n"
 "          seed the random engine for SSL connections.   See  also\n"
 "          the --edg-file option.\n"
 "\n"
 "     -r/--range <range>\n"
-);
- puts(
 "          (HTTP/FTP)  Retrieve  a byte range (i.e a partial docu­\n"
 "          ment) from a HTTP/1.1 or  FTP  server.  Ranges  can  be\n"
 "          specified in a number of ways.\n"
 "\n"
 "          0-499     specifies the first 500 bytes\n"
 "\n"
 "          500-999   specifies the second 500 bytes\n"
 "\n"
+);
+ puts(
 "          -500      specifies the last 500 bytes\n"
+"\n"
 "          9500      specifies the bytes from offset 9500 and for­\n"
 "                    ward\n"
 "\n"
 "          0-0,-1    specifies the first and last byte only(*)(H)\n"
 "\n"
-);
- puts(
 "          500-700,600-799\n"
 "                    specifies 300 bytes from offset 500(H)\n"
 "\n"
 "          100-199,500-599\n"
 "                    specifies two separate 100 bytes ranges(*)(H)\n"
 "\n"
 "     (*)  =  NOTE that this will cause the server to reply with a\n"
 "     multipart response!\n"
 "\n"
+);
+ puts(
 "     You should also be aware that many HTTP/1.1 servers  do  not\n"
 "     have this feature enabled, so that when you attempt to get a\n"
 "     range, you'll instead get the whole document.\n"
 "\n"
-);
- puts(
 "     FTP range downloads only support the simple  syntax  'start-\n"
 "     stop'  (optionally  with  one  of  the  numbers omitted). It\n"
 "     depends on the non-RFC command SIZE.\n"
 "\n"
 "     If this option is used several times, the last one  will  be\n"
 "     used.\n"
 "\n"
+"     -R/--remote-time\n"
+);
+ puts(
+"          When used, this will make libcurl attempt to figure out\n"
+"          the timestamp of the remote file, and if that is avail­\n"
+"          able make the local file get that same timestamp.\n"
+"\n"
+"          If  this option is used twice, the second time disables\n"
+"          this again.\n"
+"\n"
 "     -s/--silent\n"
-"          Silent  mode.  Don't  show progress meter or error mes­\n"
+"          Silent mode. Don't show progress meter  or  error  mes­\n"
 "          sages.  Makes Curl mute.\n"
-"\n"
-"          If this option is used twice,  the  second  will  again\n"
+"          If  this  option  is  used twice, the second will again\n"
 "          disable mute.\n"
 "\n"
-"     -S/--show-error\n"
 );
  puts(
-"          When  used  with -s it makes curl show error message if\n"
+"     -S/--show-error\n"
+"          When used with -s it makes curl show error  message  if\n"
 "          it fails.\n"
 "\n"
-"          If this option is used twice,  the  second  will  again\n"
+"          If  this  option  is  used twice, the second will again\n"
 "          disable show error.\n"
 "\n"
 "     -t/--telnet-option <OPT=val>\n"
-"          Pass  options to the telnet protocol. Supported options\n"
+"          Pass options to the telnet protocol. Supported  options\n"
 "          are:\n"
 "\n"
 "          TTYPE=<term> Sets the terminal type.\n"
 "\n"
 "          XDISPLOC=<X display> Sets the X display location.\n"
 "\n"
 "          NEW_ENV=<var,val> Sets an environment variable.\n"
 "\n"
-"     -T/--upload-file <file>\n"
 );
  puts(
-"          Like -t, but this transfers the specified  local  file.\n"
-"          If  there  is  no  file part in the specified URL, Curl\n"
+"     -T/--upload-file <file>\n"
+"          Like  -t,  but this transfers the specified local file.\n"
+"          If there is no file part in  the  specified  URL,  Curl\n"
 "          will append the local file name. NOTE that you must use\n"
-"          a  trailing  / on the last directory to really prove to\n"
+"          a trailing / on the last directory to really  prove  to\n"
 "          Curl that there is no file name or curl will think that\n"
-"          your  last  directory  name  is the remote file name to\n"
-"          use. That will most likely cause the  upload  operation\n"
+"          your last directory name is the  remote  file  name  to\n"
+"          use.  That  will most likely cause the upload operation\n"
 );
  puts(
-"          to  fail.  If this is used on a http(s) server, the PUT\n"
+"          to fail. If this is used on a http(s) server,  the  PUT\n"
 "          command will be used.\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -u/--user <user:password>\n"
-"          Specify  user  and  password  to use when fetching. See\n"
-"          README.curl for detailed examples of how to  use  this.\n"
-"          If  no  password  is  specified,  curl  will ask for it\n"
+"          Specify user and password to  use  when  fetching.  See\n"
+"          README.curl  for  detailed examples of how to use this.\n"
+"          If no password is  specified,  curl  will  ask  for  it\n"
 "          interactively.\n"
 "\n"
 );
  puts(
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     -U/--proxy-user <user:password>\n"
-"          Specify  user and password to use for Proxy authentica­\n"
+"          Specify user and password to use for Proxy  authentica­\n"
 "          tion. If no password is specified, curl will ask for it\n"
 "          interactively.\n"
 "\n"
 "          If this option is used several times, the last one will\n"
 "          be used.\n"
 "\n"
 "     --url <URL>\n"
-"          Specify a URL to fetch. This  option  is  mostly  handy\n"
+"          Specify  a  URL  to  fetch. This option is mostly handy\n"
 );
  puts(
 "          when you wanna specify URL(s) in a config file.\n"
 "\n"
 "          This option may be used any number of times. To control\n"
-"          where this URL  is  written,  use  the  -o  or  the  -O\n"
+"          where  this  URL  is  written,  use  the  -o  or the -O\n"
 "          options.\n"
 "\n"
 "     -v/--verbose\n"
-"          Makes   the  fetching  more  verbose/talkative.  Mostly\n"
-"          usable for debugging. Lines  starting  with  '>'  means\n"
+"          Makes  the  fetching  more  verbose/talkative.   Mostly\n"
+"          usable  for  debugging.  Lines  starting with '>' means\n"
 "          data sent by curl, '<' means data received by curl that\n"
-"          is hidden in normal cases and lines starting  with  '*'\n"
+"          is  hidden  in normal cases and lines starting with '*'\n"
 );
  puts(
 "          means additional info provided by curl.\n"
 "\n"
-"          If  this  option  is  used twice, the second will again\n"
+"          If this option is used twice,  the  second  will  again\n"
 "          disable verbose.\n"
 "\n"
 "     -V/--version\n"
-"          Displays the full version of curl,  libcurl  and  other\n"
+"          Displays  the  full  version of curl, libcurl and other\n"
 "          3rd party libraries linked with the executable.\n"
 "\n"
 "     -w/--write-out <format>\n"
-"          Defines   what   to   display  after  a  completed  and\n"
-"          successful operation. The format is a string  that  may\n"
+"          Defines what to display after a completed and  success­\n"
+"          ful  operation. The format is a string that may contain\n"
 );
  puts(
-"          contain  plain text mixed with any number of variables.\n"
-"          The string can be specified as \"string\",  to  get  read\n"
-"          from  a  particular file you specify it \"@filename\" and\n"
-"          to tell curl to read the format from  stdin  you  write\n"
-"          \"@-\".\n"
+"          plain text mixed with  any  number  of  variables.  The\n"
+"          string can be specified as \"string\", to get read from a\n"
+"          particular file you specify it \"@filename\" and to  tell\n"
+"          curl to read the format from stdin you write \"@-\".\n"
 "\n"
 "          The variables present in the output format will be sub­\n"
 "          stituted by the value or text that curl thinks fit,  as\n"
 "          described  below.  All  variables  are  specified  like\n"
 );
  puts(

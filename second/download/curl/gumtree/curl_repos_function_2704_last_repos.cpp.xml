<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2704_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">Curl_gtls_pull<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">s<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">void<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">buf<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">len<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ssize_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">ret<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><call><name pos:line="3" pos:column="17">sread<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><call><name pos:line="3" pos:column="23">GNUTLS_POINTER_TO_SOCKET_CAST<pos:position pos:line="3" pos:column="52"/></name><argument_list pos:line="3" pos:column="52">(<argument><expr><name pos:line="3" pos:column="53">s<pos:position pos:line="3" pos:column="54"/></name></expr></argument>)<pos:position pos:line="3" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="3" pos:column="57">buf<pos:position pos:line="3" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="62">len<pos:position pos:line="3" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><call><name pos:line="4" pos:column="5">defined<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">USE_WINSOCK<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call> <operator pos:line="4" pos:column="26">&amp;&amp;<pos:position pos:line="4" pos:column="36"/></operator> <operator pos:line="4" pos:column="29">!<pos:position pos:line="4" pos:column="30"/></operator><call><name pos:line="4" pos:column="30">defined<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">GNUTLS_MAPS_WINSOCK_ERRORS<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></cpp:if>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">ret<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">&lt;<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">gnutls_transport_set_global_errno<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><call><name pos:line="6" pos:column="39">gtls_mapped_sockerrno<pos:position pos:line="6" pos:column="60"/></name><argument_list pos:line="6" pos:column="60">()<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt></block></then></if>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">ret<pos:position pos:line="8" pos:column="13"/></name></expr>;<pos:position pos:line="8" pos:column="14"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

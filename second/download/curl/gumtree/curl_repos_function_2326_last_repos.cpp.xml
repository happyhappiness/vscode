<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2326_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_auth_create_digest_http_message<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">Curl_easy<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">data<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">userp<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="3" pos:column="47">const<pos:position pos:line="3" pos:column="52"/></specifier> <name pos:line="3" pos:column="53">char<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">passwdp<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="4" pos:column="47">const<pos:position pos:line="4" pos:column="52"/></specifier> <name pos:line="4" pos:column="53">unsigned<pos:position pos:line="4" pos:column="61"/></name> <name pos:line="4" pos:column="62">char<pos:position pos:line="4" pos:column="66"/></name> <modifier pos:line="4" pos:column="67">*<pos:position pos:line="4" pos:column="68"/></modifier></type><name pos:line="4" pos:column="68">request<pos:position pos:line="4" pos:column="75"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="5" pos:column="47">const<pos:position pos:line="5" pos:column="52"/></specifier> <name pos:line="5" pos:column="53">unsigned<pos:position pos:line="5" pos:column="61"/></name> <name pos:line="5" pos:column="62">char<pos:position pos:line="5" pos:column="66"/></name> <modifier pos:line="5" pos:column="67">*<pos:position pos:line="5" pos:column="68"/></modifier></type><name pos:line="5" pos:column="68">uripath<pos:position pos:line="5" pos:column="75"/></name></decl></parameter>,
                                              <parameter><decl><type><name><name pos:line="6" pos:column="47">struct<pos:position pos:line="6" pos:column="53"/></name> <name pos:line="6" pos:column="54">digestdata<pos:position pos:line="6" pos:column="64"/></name></name> <modifier pos:line="6" pos:column="65">*<pos:position pos:line="6" pos:column="66"/></modifier></type><name pos:line="6" pos:column="66">digest<pos:position pos:line="6" pos:column="72"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="7" pos:column="47">char<pos:position pos:line="7" pos:column="51"/></name> <modifier pos:line="7" pos:column="52">*<pos:position pos:line="7" pos:column="53"/></modifier><modifier pos:line="7" pos:column="53">*<pos:position pos:line="7" pos:column="54"/></modifier></type><name pos:line="7" pos:column="54">outptr<pos:position pos:line="7" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="7" pos:column="62">size_t<pos:position pos:line="7" pos:column="68"/></name> <modifier pos:line="7" pos:column="69">*<pos:position pos:line="7" pos:column="70"/></modifier></type><name pos:line="7" pos:column="70">outlen<pos:position pos:line="7" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="77"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">md5buf<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><literal type="number" pos:line="10" pos:column="24">16<pos:position pos:line="10" pos:column="26"/></literal></expr>]<pos:position pos:line="10" pos:column="27"/></index></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt> <comment type="block" pos:line="10" pos:column="29">/* 16 bytes/128 bits */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name></type> <name><name pos:line="11" pos:column="17">request_digest<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[<expr><literal type="number" pos:line="11" pos:column="32">33<pos:position pos:line="11" pos:column="34"/></literal></expr>]<pos:position pos:line="11" pos:column="35"/></index></name></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">char<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">md5this<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name></type> <name><name pos:line="13" pos:column="17">ha1<pos:position pos:line="13" pos:column="20"/></name><index pos:line="13" pos:column="20">[<expr><literal type="number" pos:line="13" pos:column="21">33<pos:position pos:line="13" pos:column="23"/></literal></expr>]<pos:position pos:line="13" pos:column="24"/></index></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>    <comment type="block" pos:line="13" pos:column="29">/* 32 digits and 1 zero byte */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">unsigned<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">char<pos:position pos:line="14" pos:column="16"/></name></type> <name><name pos:line="14" pos:column="17">ha2<pos:position pos:line="14" pos:column="20"/></name><index pos:line="14" pos:column="20">[<expr><literal type="number" pos:line="14" pos:column="21">33<pos:position pos:line="14" pos:column="23"/></literal></expr>]<pos:position pos:line="14" pos:column="24"/></index></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>    <comment type="block" pos:line="14" pos:column="29">/* 32 digits and 1 zero byte */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name></type> <name><name pos:line="15" pos:column="8">cnoncebuf<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><literal type="number" pos:line="15" pos:column="18">33<pos:position pos:line="15" pos:column="20"/></literal></expr>]<pos:position pos:line="15" pos:column="21"/></index></name></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">cnonce<pos:position pos:line="16" pos:column="15"/></name> <init pos:line="16" pos:column="16">= <expr><name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">size_t<pos:position pos:line="17" pos:column="9"/></name></type> <name pos:line="17" pos:column="10">cnonce_sz<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier></type><name pos:line="18" pos:column="9">userp_quoted<pos:position pos:line="18" pos:column="21"/></name></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name> <modifier pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></modifier></type><name pos:line="19" pos:column="9">response<pos:position pos:line="19" pos:column="17"/></name> <init pos:line="19" pos:column="18">= <expr><name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier></type><name pos:line="20" pos:column="9">tmp<pos:position pos:line="20" pos:column="12"/></name> <init pos:line="20" pos:column="13">= <expr><name pos:line="20" pos:column="15">NULL<pos:position pos:line="20" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="20"/></decl_stmt>

  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><name><name pos:line="22" pos:column="7">digest<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">nc<pos:position pos:line="22" pos:column="17"/></name></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="5">digest<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">nc<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt></block></then></if>

  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><operator pos:line="25" pos:column="6">!<pos:position pos:line="25" pos:column="7"/></operator><name><name pos:line="25" pos:column="7">digest<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">cnonce<pos:position pos:line="25" pos:column="21"/></name></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22"> <block pos:line="25" pos:column="23">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">result<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">Curl_rand_hex<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">data<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">(<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">unsigned<pos:position pos:line="26" pos:column="43"/></name> <name pos:line="26" pos:column="44">char<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">*<pos:position pos:line="26" pos:column="50"/></operator><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">cnoncebuf<pos:position pos:line="26" pos:column="60"/></name></expr></argument>,
                           <argument><expr><sizeof pos:line="27" pos:column="28">sizeof<argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">cnoncebuf<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">result<pos:position pos:line="28" pos:column="14"/></name></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
      <block type="pseudo"><return pos:line="29" pos:column="7">return <expr><name pos:line="29" pos:column="14">result<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">result<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">Curl_base64_encode<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">data<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">cnoncebuf<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="50">strlen<pos:position pos:line="31" pos:column="56"/></name><argument_list pos:line="31" pos:column="56">(<argument><expr><name pos:line="31" pos:column="57">cnoncebuf<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr></argument>,
                                <argument><expr><operator pos:line="32" pos:column="33">&amp;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="34">cnonce<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="42">&amp;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="43">cnonce_sz<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
    <if pos:line="33" pos:column="5">if<condition pos:line="33" pos:column="7">(<expr><name pos:line="33" pos:column="8">result<pos:position pos:line="33" pos:column="14"/></name></expr>)<pos:position pos:line="33" pos:column="15"/></condition><then pos:line="33" pos:column="15">
      <block type="pseudo"><return pos:line="34" pos:column="7">return <expr><name pos:line="34" pos:column="14">result<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">digest<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">cnonce<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">cnonce<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/*
    If the algorithm is "MD5" or unspecified (which then defaults to MD5):

      A1 = unq(username-value) ":" unq(realm-value) ":" passwd

    If the algorithm is "MD5-sess" then:

      A1 = H(unq(username-value) ":" unq(realm-value) ":" passwd) ":"
           unq(nonce-value) ":" unq(cnonce-value)
  */</comment>

  <expr_stmt><expr><name pos:line="50" pos:column="3">md5this<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">unsigned<pos:position pos:line="50" pos:column="22"/></name> <name pos:line="50" pos:column="23">char<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="29">)<pos:position pos:line="50" pos:column="30"/></operator>
    <call><name pos:line="51" pos:column="5">aprintf<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="string" pos:line="51" pos:column="13">"%s:%s:%s"<pos:position pos:line="51" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="25">userp<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="32">digest<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">realm<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">passwdp<pos:position pos:line="51" pos:column="54"/></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt>
  <if pos:line="52" pos:column="3">if<condition pos:line="52" pos:column="5">(<expr><operator pos:line="52" pos:column="6">!<pos:position pos:line="52" pos:column="7"/></operator><name pos:line="52" pos:column="7">md5this<pos:position pos:line="52" pos:column="14"/></name></expr>)<pos:position pos:line="52" pos:column="15"/></condition><then pos:line="52" pos:column="15">
    <block type="pseudo"><return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">CURL_OUTPUT_DIGEST_CONV<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">data<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="33">md5this<pos:position pos:line="55" pos:column="40"/></name></expr></argument>)<pos:position pos:line="55" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt> <comment type="block" pos:line="55" pos:column="43">/* convert on non-ASCII machines */</comment>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">Curl_md5it<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><name pos:line="56" pos:column="14">md5buf<pos:position pos:line="56" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="22">md5this<pos:position pos:line="56" pos:column="29"/></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">free<pos:position pos:line="57" pos:column="7"/></name><argument_list pos:line="57" pos:column="7">(<argument><expr><name pos:line="57" pos:column="8">md5this<pos:position pos:line="57" pos:column="15"/></name></expr></argument>)<pos:position pos:line="57" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">auth_digest_md5_to_ascii<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">md5buf<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="36">ha1<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>

  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><name><name pos:line="60" pos:column="6">digest<pos:position pos:line="60" pos:column="12"/></name><operator pos:line="60" pos:column="12">-&gt;<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="14">algo<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">==<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="22">CURLDIGESTALGO_MD5SESS<pos:position pos:line="60" pos:column="44"/></name></expr>)<pos:position pos:line="60" pos:column="45"/></condition><then pos:line="60" pos:column="45"> <block pos:line="60" pos:column="46">{
    <comment type="block" pos:line="61" pos:column="5">/* nonce and cnonce are OUTSIDE the hash */</comment>
    <expr_stmt><expr><name pos:line="62" pos:column="5">tmp<pos:position pos:line="62" pos:column="8"/></name> <operator pos:line="62" pos:column="9">=<pos:position pos:line="62" pos:column="10"/></operator> <call><name pos:line="62" pos:column="11">aprintf<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><literal type="string" pos:line="62" pos:column="19">"%s:%s:%s"<pos:position pos:line="62" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="31">ha1<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="36">digest<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">nonce<pos:position pos:line="62" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="51">digest<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">-&gt;<pos:position pos:line="62" pos:column="62"/></operator><name pos:line="62" pos:column="59">cnonce<pos:position pos:line="62" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="67"/></expr_stmt>
    <if pos:line="63" pos:column="5">if<condition pos:line="63" pos:column="7">(<expr><operator pos:line="63" pos:column="8">!<pos:position pos:line="63" pos:column="9"/></operator><name pos:line="63" pos:column="9">tmp<pos:position pos:line="63" pos:column="12"/></name></expr>)<pos:position pos:line="63" pos:column="13"/></condition><then pos:line="63" pos:column="13">
      <block type="pseudo"><return pos:line="64" pos:column="7">return <expr><name pos:line="64" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="64" pos:column="33"/></name></expr>;<pos:position pos:line="64" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">CURL_OUTPUT_DIGEST_CONV<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><name pos:line="66" pos:column="29">data<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="35">tmp<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt> <comment type="block" pos:line="66" pos:column="41">/* Convert on non-ASCII machines */</comment>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">Curl_md5it<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name pos:line="67" pos:column="16">md5buf<pos:position pos:line="67" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="24">(<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="25">unsigned<pos:position pos:line="67" pos:column="33"/></name> <name pos:line="67" pos:column="34">char<pos:position pos:line="67" pos:column="38"/></name> <operator pos:line="67" pos:column="39">*<pos:position pos:line="67" pos:column="40"/></operator><operator pos:line="67" pos:column="40">)<pos:position pos:line="67" pos:column="41"/></operator> <name pos:line="67" pos:column="42">tmp<pos:position pos:line="67" pos:column="45"/></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">free<pos:position pos:line="68" pos:column="9"/></name><argument_list pos:line="68" pos:column="9">(<argument><expr><name pos:line="68" pos:column="10">tmp<pos:position pos:line="68" pos:column="13"/></name></expr></argument>)<pos:position pos:line="68" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">auth_digest_md5_to_ascii<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">md5buf<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="38">ha1<pos:position pos:line="69" pos:column="41"/></name></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="72" pos:column="3">/*
    If the "qop" directive's value is "auth" or is unspecified, then A2 is:

      A2 = Method ":" digest-uri-value

    If the "qop" value is "auth-int", then A2 is:

      A2 = Method ":" digest-uri-value ":" H(entity-body)

    (The "Method" value is the HTTP request method as specified in section
    5.1.1 of RFC 2616)
  */</comment>

  <expr_stmt><expr><name pos:line="85" pos:column="3">md5this<pos:position pos:line="85" pos:column="10"/></name> <operator pos:line="85" pos:column="11">=<pos:position pos:line="85" pos:column="12"/></operator> <operator pos:line="85" pos:column="13">(<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">unsigned<pos:position pos:line="85" pos:column="22"/></name> <name pos:line="85" pos:column="23">char<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">*<pos:position pos:line="85" pos:column="29"/></operator><operator pos:line="85" pos:column="29">)<pos:position pos:line="85" pos:column="30"/></operator> <call><name pos:line="85" pos:column="31">aprintf<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><literal type="string" pos:line="85" pos:column="39">"%s:%s"<pos:position pos:line="85" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="48">request<pos:position pos:line="85" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">uripath<pos:position pos:line="85" pos:column="64"/></name></expr></argument>)<pos:position pos:line="85" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="66"/></expr_stmt>

  <if pos:line="87" pos:column="3">if<condition pos:line="87" pos:column="5">(<expr><name><name pos:line="87" pos:column="6">digest<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">qop<pos:position pos:line="87" pos:column="17"/></name></name> <operator pos:line="87" pos:column="18">&amp;&amp;<pos:position pos:line="87" pos:column="28"/></operator> <call><name pos:line="87" pos:column="21">strcasecompare<pos:position pos:line="87" pos:column="35"/></name><argument_list pos:line="87" pos:column="35">(<argument><expr><name><name pos:line="87" pos:column="36">digest<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">qop<pos:position pos:line="87" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="49">"auth-int"<pos:position pos:line="87" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="61"/></condition><then pos:line="87" pos:column="61"> <block pos:line="87" pos:column="62">{
    <comment type="block" pos:line="88" pos:column="5">/* We don't support auth-int for PUT or POST at the moment.
       TODO: replace md5 of empty string with entity-body for PUT/POST */</comment>
    <decl_stmt><decl><type><name pos:line="90" pos:column="5">unsigned<pos:position pos:line="90" pos:column="13"/></name> <name pos:line="90" pos:column="14">char<pos:position pos:line="90" pos:column="18"/></name> <modifier pos:line="90" pos:column="19">*<pos:position pos:line="90" pos:column="20"/></modifier></type><name pos:line="90" pos:column="20">md5this2<pos:position pos:line="90" pos:column="28"/></name> <init pos:line="90" pos:column="29">= <expr><operator pos:line="90" pos:column="31">(<pos:position pos:line="90" pos:column="32"/></operator><name pos:line="90" pos:column="32">unsigned<pos:position pos:line="90" pos:column="40"/></name> <name pos:line="90" pos:column="41">char<pos:position pos:line="90" pos:column="45"/></name> <operator pos:line="90" pos:column="46">*<pos:position pos:line="90" pos:column="47"/></operator><operator pos:line="90" pos:column="47">)<pos:position pos:line="90" pos:column="48"/></operator>
      <call><name pos:line="91" pos:column="7">aprintf<pos:position pos:line="91" pos:column="14"/></name><argument_list pos:line="91" pos:column="14">(<argument><expr><literal type="string" pos:line="91" pos:column="15">"%s:%s"<pos:position pos:line="91" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="24">md5this<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="33">"d41d8cd98f00b204e9800998ecf8427e"<pos:position pos:line="91" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="91" pos:column="69"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">free<pos:position pos:line="92" pos:column="9"/></name><argument_list pos:line="92" pos:column="9">(<argument><expr><name pos:line="92" pos:column="10">md5this<pos:position pos:line="92" pos:column="17"/></name></expr></argument>)<pos:position pos:line="92" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">md5this<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <name pos:line="93" pos:column="15">md5this2<pos:position pos:line="93" pos:column="23"/></name></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <if pos:line="96" pos:column="3">if<condition pos:line="96" pos:column="5">(<expr><operator pos:line="96" pos:column="6">!<pos:position pos:line="96" pos:column="7"/></operator><name pos:line="96" pos:column="7">md5this<pos:position pos:line="96" pos:column="14"/></name></expr>)<pos:position pos:line="96" pos:column="15"/></condition><then pos:line="96" pos:column="15">
    <block type="pseudo"><return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="97" pos:column="31"/></name></expr>;<pos:position pos:line="97" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="99" pos:column="3">CURL_OUTPUT_DIGEST_CONV<pos:position pos:line="99" pos:column="26"/></name><argument_list pos:line="99" pos:column="26">(<argument><expr><name pos:line="99" pos:column="27">data<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="33">md5this<pos:position pos:line="99" pos:column="40"/></name></expr></argument>)<pos:position pos:line="99" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="42"/></expr_stmt> <comment type="block" pos:line="99" pos:column="43">/* convert on non-ASCII machines */</comment>
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">Curl_md5it<pos:position pos:line="100" pos:column="13"/></name><argument_list pos:line="100" pos:column="13">(<argument><expr><name pos:line="100" pos:column="14">md5buf<pos:position pos:line="100" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="22">md5this<pos:position pos:line="100" pos:column="29"/></name></expr></argument>)<pos:position pos:line="100" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="101" pos:column="3">free<pos:position pos:line="101" pos:column="7"/></name><argument_list pos:line="101" pos:column="7">(<argument><expr><name pos:line="101" pos:column="8">md5this<pos:position pos:line="101" pos:column="15"/></name></expr></argument>)<pos:position pos:line="101" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">auth_digest_md5_to_ascii<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">md5buf<pos:position pos:line="102" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="36">ha2<pos:position pos:line="102" pos:column="39"/></name></expr></argument>)<pos:position pos:line="102" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="41"/></expr_stmt>

  <if pos:line="104" pos:column="3">if<condition pos:line="104" pos:column="5">(<expr><name><name pos:line="104" pos:column="6">digest<pos:position pos:line="104" pos:column="12"/></name><operator pos:line="104" pos:column="12">-&gt;<pos:position pos:line="104" pos:column="17"/></operator><name pos:line="104" pos:column="14">qop<pos:position pos:line="104" pos:column="17"/></name></name></expr>)<pos:position pos:line="104" pos:column="18"/></condition><then pos:line="104" pos:column="18"> <block pos:line="104" pos:column="19">{
    <expr_stmt><expr><name pos:line="105" pos:column="5">md5this<pos:position pos:line="105" pos:column="12"/></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <operator pos:line="105" pos:column="15">(<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="16">unsigned<pos:position pos:line="105" pos:column="24"/></name> <name pos:line="105" pos:column="25">char<pos:position pos:line="105" pos:column="29"/></name> <operator pos:line="105" pos:column="30">*<pos:position pos:line="105" pos:column="31"/></operator><operator pos:line="105" pos:column="31">)<pos:position pos:line="105" pos:column="32"/></operator> <call><name pos:line="105" pos:column="33">aprintf<pos:position pos:line="105" pos:column="40"/></name><argument_list pos:line="105" pos:column="40">(<argument><expr><literal type="string" pos:line="105" pos:column="41">"%s:%s:%08x:%s:%s:%s"<pos:position pos:line="105" pos:column="62"/></literal></expr></argument>,
                                        <argument><expr><name pos:line="106" pos:column="41">ha1<pos:position pos:line="106" pos:column="44"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="107" pos:column="41">digest<pos:position pos:line="107" pos:column="47"/></name><operator pos:line="107" pos:column="47">-&gt;<pos:position pos:line="107" pos:column="52"/></operator><name pos:line="107" pos:column="49">nonce<pos:position pos:line="107" pos:column="54"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="108" pos:column="41">digest<pos:position pos:line="108" pos:column="47"/></name><operator pos:line="108" pos:column="47">-&gt;<pos:position pos:line="108" pos:column="52"/></operator><name pos:line="108" pos:column="49">nc<pos:position pos:line="108" pos:column="51"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="109" pos:column="41">digest<pos:position pos:line="109" pos:column="47"/></name><operator pos:line="109" pos:column="47">-&gt;<pos:position pos:line="109" pos:column="52"/></operator><name pos:line="109" pos:column="49">cnonce<pos:position pos:line="109" pos:column="55"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="110" pos:column="41">digest<pos:position pos:line="110" pos:column="47"/></name><operator pos:line="110" pos:column="47">-&gt;<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="49">qop<pos:position pos:line="110" pos:column="52"/></name></name></expr></argument>,
                                        <argument><expr><name pos:line="111" pos:column="41">ha2<pos:position pos:line="111" pos:column="44"/></name></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="112" pos:column="4"/></block></then>
  <else pos:line="113" pos:column="3">else <block pos:line="113" pos:column="8">{
    <expr_stmt><expr><name pos:line="114" pos:column="5">md5this<pos:position pos:line="114" pos:column="12"/></name> <operator pos:line="114" pos:column="13">=<pos:position pos:line="114" pos:column="14"/></operator> <operator pos:line="114" pos:column="15">(<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="16">unsigned<pos:position pos:line="114" pos:column="24"/></name> <name pos:line="114" pos:column="25">char<pos:position pos:line="114" pos:column="29"/></name> <operator pos:line="114" pos:column="30">*<pos:position pos:line="114" pos:column="31"/></operator><operator pos:line="114" pos:column="31">)<pos:position pos:line="114" pos:column="32"/></operator> <call><name pos:line="114" pos:column="33">aprintf<pos:position pos:line="114" pos:column="40"/></name><argument_list pos:line="114" pos:column="40">(<argument><expr><literal type="string" pos:line="114" pos:column="41">"%s:%s:%s"<pos:position pos:line="114" pos:column="51"/></literal></expr></argument>,
                                        <argument><expr><name pos:line="115" pos:column="41">ha1<pos:position pos:line="115" pos:column="44"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="116" pos:column="41">digest<pos:position pos:line="116" pos:column="47"/></name><operator pos:line="116" pos:column="47">-&gt;<pos:position pos:line="116" pos:column="52"/></operator><name pos:line="116" pos:column="49">nonce<pos:position pos:line="116" pos:column="54"/></name></name></expr></argument>,
                                        <argument><expr><name pos:line="117" pos:column="41">ha2<pos:position pos:line="117" pos:column="44"/></name></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="118" pos:column="4"/></block></else></if>

  <if pos:line="120" pos:column="3">if<condition pos:line="120" pos:column="5">(<expr><operator pos:line="120" pos:column="6">!<pos:position pos:line="120" pos:column="7"/></operator><name pos:line="120" pos:column="7">md5this<pos:position pos:line="120" pos:column="14"/></name></expr>)<pos:position pos:line="120" pos:column="15"/></condition><then pos:line="120" pos:column="15">
    <block type="pseudo"><return pos:line="121" pos:column="5">return <expr><name pos:line="121" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="121" pos:column="31"/></name></expr>;<pos:position pos:line="121" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="123" pos:column="3">CURL_OUTPUT_DIGEST_CONV<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><name pos:line="123" pos:column="27">data<pos:position pos:line="123" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="33">md5this<pos:position pos:line="123" pos:column="40"/></name></expr></argument>)<pos:position pos:line="123" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="42"/></expr_stmt> <comment type="block" pos:line="123" pos:column="43">/* convert on non-ASCII machines */</comment>
  <expr_stmt><expr><call><name pos:line="124" pos:column="3">Curl_md5it<pos:position pos:line="124" pos:column="13"/></name><argument_list pos:line="124" pos:column="13">(<argument><expr><name pos:line="124" pos:column="14">md5buf<pos:position pos:line="124" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="22">md5this<pos:position pos:line="124" pos:column="29"/></name></expr></argument>)<pos:position pos:line="124" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="125" pos:column="3">free<pos:position pos:line="125" pos:column="7"/></name><argument_list pos:line="125" pos:column="7">(<argument><expr><name pos:line="125" pos:column="8">md5this<pos:position pos:line="125" pos:column="15"/></name></expr></argument>)<pos:position pos:line="125" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="126" pos:column="3">auth_digest_md5_to_ascii<pos:position pos:line="126" pos:column="27"/></name><argument_list pos:line="126" pos:column="27">(<argument><expr><name pos:line="126" pos:column="28">md5buf<pos:position pos:line="126" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="36">request_digest<pos:position pos:line="126" pos:column="50"/></name></expr></argument>)<pos:position pos:line="126" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="128" pos:column="3">/* For test case 64 (snooped from a Mozilla 1.3a request)

     Authorization: Digest username="testuser", realm="testrealm", \
     nonce="1053604145", uri="/64", response="c55f7f30d83d774a3d2dcacf725abaca"

     Digest parameters are all quoted strings.  Username which is provided by
     the user will need double quotes and backslashes within it escaped.  For
     the other fields, this shouldn't be an issue.  realm, nonce, and opaque
     are copied as is from the server, escapes and all.  cnonce is generated
     with web-safe characters.  uri is already percent encoded.  nc is 8 hex
     characters.  algorithm and qop with standard values only contain web-safe
     characters.
  */</comment>
  <expr_stmt><expr><name pos:line="141" pos:column="3">userp_quoted<pos:position pos:line="141" pos:column="15"/></name> <operator pos:line="141" pos:column="16">=<pos:position pos:line="141" pos:column="17"/></operator> <call><name pos:line="141" pos:column="18">auth_digest_string_quoted<pos:position pos:line="141" pos:column="43"/></name><argument_list pos:line="141" pos:column="43">(<argument><expr><name pos:line="141" pos:column="44">userp<pos:position pos:line="141" pos:column="49"/></name></expr></argument>)<pos:position pos:line="141" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="51"/></expr_stmt>
  <if pos:line="142" pos:column="3">if<condition pos:line="142" pos:column="5">(<expr><operator pos:line="142" pos:column="6">!<pos:position pos:line="142" pos:column="7"/></operator><name pos:line="142" pos:column="7">userp_quoted<pos:position pos:line="142" pos:column="19"/></name></expr>)<pos:position pos:line="142" pos:column="20"/></condition><then pos:line="142" pos:column="20">
    <block type="pseudo"><return pos:line="143" pos:column="5">return <expr><name pos:line="143" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="143" pos:column="31"/></name></expr>;<pos:position pos:line="143" pos:column="32"/></return></block></then></if>

  <if pos:line="145" pos:column="3">if<condition pos:line="145" pos:column="5">(<expr><name><name pos:line="145" pos:column="6">digest<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">-&gt;<pos:position pos:line="145" pos:column="17"/></operator><name pos:line="145" pos:column="14">qop<pos:position pos:line="145" pos:column="17"/></name></name></expr>)<pos:position pos:line="145" pos:column="18"/></condition><then pos:line="145" pos:column="18"> <block pos:line="145" pos:column="19">{
    <expr_stmt><expr><name pos:line="146" pos:column="5">response<pos:position pos:line="146" pos:column="13"/></name> <operator pos:line="146" pos:column="14">=<pos:position pos:line="146" pos:column="15"/></operator> <call><name pos:line="146" pos:column="16">aprintf<pos:position pos:line="146" pos:column="23"/></name><argument_list pos:line="146" pos:column="23">(<argument><expr><literal type="string" pos:line="146" pos:column="24">"username=\"%s\", "<pos:position pos:line="146" pos:column="43"/></literal>
                       <literal type="string" pos:line="147" pos:column="24">"realm=\"%s\", "<pos:position pos:line="147" pos:column="40"/></literal>
                       <literal type="string" pos:line="148" pos:column="24">"nonce=\"%s\", "<pos:position pos:line="148" pos:column="40"/></literal>
                       <literal type="string" pos:line="149" pos:column="24">"uri=\"%s\", "<pos:position pos:line="149" pos:column="38"/></literal>
                       <literal type="string" pos:line="150" pos:column="24">"cnonce=\"%s\", "<pos:position pos:line="150" pos:column="41"/></literal>
                       <literal type="string" pos:line="151" pos:column="24">"nc=%08x, "<pos:position pos:line="151" pos:column="35"/></literal>
                       <literal type="string" pos:line="152" pos:column="24">"qop=%s, "<pos:position pos:line="152" pos:column="34"/></literal>
                       <literal type="string" pos:line="153" pos:column="24">"response=\"%s\""<pos:position pos:line="153" pos:column="41"/></literal></expr></argument>,
                       <argument><expr><name pos:line="154" pos:column="24">userp_quoted<pos:position pos:line="154" pos:column="36"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="155" pos:column="24">digest<pos:position pos:line="155" pos:column="30"/></name><operator pos:line="155" pos:column="30">-&gt;<pos:position pos:line="155" pos:column="35"/></operator><name pos:line="155" pos:column="32">realm<pos:position pos:line="155" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="156" pos:column="24">digest<pos:position pos:line="156" pos:column="30"/></name><operator pos:line="156" pos:column="30">-&gt;<pos:position pos:line="156" pos:column="35"/></operator><name pos:line="156" pos:column="32">nonce<pos:position pos:line="156" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="157" pos:column="24">uripath<pos:position pos:line="157" pos:column="31"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="158" pos:column="24">digest<pos:position pos:line="158" pos:column="30"/></name><operator pos:line="158" pos:column="30">-&gt;<pos:position pos:line="158" pos:column="35"/></operator><name pos:line="158" pos:column="32">cnonce<pos:position pos:line="158" pos:column="38"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="159" pos:column="24">digest<pos:position pos:line="159" pos:column="30"/></name><operator pos:line="159" pos:column="30">-&gt;<pos:position pos:line="159" pos:column="35"/></operator><name pos:line="159" pos:column="32">nc<pos:position pos:line="159" pos:column="34"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="160" pos:column="24">digest<pos:position pos:line="160" pos:column="30"/></name><operator pos:line="160" pos:column="30">-&gt;<pos:position pos:line="160" pos:column="35"/></operator><name pos:line="160" pos:column="32">qop<pos:position pos:line="160" pos:column="35"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="161" pos:column="24">request_digest<pos:position pos:line="161" pos:column="38"/></name></expr></argument>)<pos:position pos:line="161" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="40"/></expr_stmt>

    <if pos:line="163" pos:column="5">if<condition pos:line="163" pos:column="7">(<expr><call><name pos:line="163" pos:column="8">strcasecompare<pos:position pos:line="163" pos:column="22"/></name><argument_list pos:line="163" pos:column="22">(<argument><expr><name><name pos:line="163" pos:column="23">digest<pos:position pos:line="163" pos:column="29"/></name><operator pos:line="163" pos:column="29">-&gt;<pos:position pos:line="163" pos:column="34"/></operator><name pos:line="163" pos:column="31">qop<pos:position pos:line="163" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="36">"auth"<pos:position pos:line="163" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="44"/></condition><then pos:line="163" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="164" pos:column="7">digest<pos:position pos:line="164" pos:column="13"/></name><operator pos:line="164" pos:column="13">-&gt;<pos:position pos:line="164" pos:column="18"/></operator><name pos:line="164" pos:column="15">nc<pos:position pos:line="164" pos:column="17"/></name></name><operator pos:line="164" pos:column="17">++<pos:position pos:line="164" pos:column="19"/></operator></expr>;<pos:position pos:line="164" pos:column="20"/></expr_stmt></block></then></if> <comment type="block" pos:line="164" pos:column="21">/* The nc (from RFC) has to be a 8 hex digit number 0
                       padded which tells to the server how many times you are
                       using the same nonce in the qop=auth mode */</comment>
  }<pos:position pos:line="167" pos:column="4"/></block></then>
  <else pos:line="168" pos:column="3">else <block pos:line="168" pos:column="8">{
    <expr_stmt><expr><name pos:line="169" pos:column="5">response<pos:position pos:line="169" pos:column="13"/></name> <operator pos:line="169" pos:column="14">=<pos:position pos:line="169" pos:column="15"/></operator> <call><name pos:line="169" pos:column="16">aprintf<pos:position pos:line="169" pos:column="23"/></name><argument_list pos:line="169" pos:column="23">(<argument><expr><literal type="string" pos:line="169" pos:column="24">"username=\"%s\", "<pos:position pos:line="169" pos:column="43"/></literal>
                       <literal type="string" pos:line="170" pos:column="24">"realm=\"%s\", "<pos:position pos:line="170" pos:column="40"/></literal>
                       <literal type="string" pos:line="171" pos:column="24">"nonce=\"%s\", "<pos:position pos:line="171" pos:column="40"/></literal>
                       <literal type="string" pos:line="172" pos:column="24">"uri=\"%s\", "<pos:position pos:line="172" pos:column="38"/></literal>
                       <literal type="string" pos:line="173" pos:column="24">"response=\"%s\""<pos:position pos:line="173" pos:column="41"/></literal></expr></argument>,
                       <argument><expr><name pos:line="174" pos:column="24">userp_quoted<pos:position pos:line="174" pos:column="36"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="175" pos:column="24">digest<pos:position pos:line="175" pos:column="30"/></name><operator pos:line="175" pos:column="30">-&gt;<pos:position pos:line="175" pos:column="35"/></operator><name pos:line="175" pos:column="32">realm<pos:position pos:line="175" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="176" pos:column="24">digest<pos:position pos:line="176" pos:column="30"/></name><operator pos:line="176" pos:column="30">-&gt;<pos:position pos:line="176" pos:column="35"/></operator><name pos:line="176" pos:column="32">nonce<pos:position pos:line="176" pos:column="37"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="177" pos:column="24">uripath<pos:position pos:line="177" pos:column="31"/></name></expr></argument>,
                       <argument><expr><name pos:line="178" pos:column="24">request_digest<pos:position pos:line="178" pos:column="38"/></name></expr></argument>)<pos:position pos:line="178" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="179" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="180" pos:column="3">free<pos:position pos:line="180" pos:column="7"/></name><argument_list pos:line="180" pos:column="7">(<argument><expr><name pos:line="180" pos:column="8">userp_quoted<pos:position pos:line="180" pos:column="20"/></name></expr></argument>)<pos:position pos:line="180" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="22"/></expr_stmt>
  <if pos:line="181" pos:column="3">if<condition pos:line="181" pos:column="5">(<expr><operator pos:line="181" pos:column="6">!<pos:position pos:line="181" pos:column="7"/></operator><name pos:line="181" pos:column="7">response<pos:position pos:line="181" pos:column="15"/></name></expr>)<pos:position pos:line="181" pos:column="16"/></condition><then pos:line="181" pos:column="16">
    <block type="pseudo"><return pos:line="182" pos:column="5">return <expr><name pos:line="182" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="182" pos:column="31"/></name></expr>;<pos:position pos:line="182" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="184" pos:column="3">/* Add the optional fields */</comment>
  <if pos:line="185" pos:column="3">if<condition pos:line="185" pos:column="5">(<expr><name><name pos:line="185" pos:column="6">digest<pos:position pos:line="185" pos:column="12"/></name><operator pos:line="185" pos:column="12">-&gt;<pos:position pos:line="185" pos:column="17"/></operator><name pos:line="185" pos:column="14">opaque<pos:position pos:line="185" pos:column="20"/></name></name></expr>)<pos:position pos:line="185" pos:column="21"/></condition><then pos:line="185" pos:column="21"> <block pos:line="185" pos:column="22">{
    <comment type="block" pos:line="186" pos:column="5">/* Append the opaque */</comment>
    <expr_stmt><expr><name pos:line="187" pos:column="5">tmp<pos:position pos:line="187" pos:column="8"/></name> <operator pos:line="187" pos:column="9">=<pos:position pos:line="187" pos:column="10"/></operator> <call><name pos:line="187" pos:column="11">aprintf<pos:position pos:line="187" pos:column="18"/></name><argument_list pos:line="187" pos:column="18">(<argument><expr><literal type="string" pos:line="187" pos:column="19">"%s, opaque=\"%s\""<pos:position pos:line="187" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="187" pos:column="40">response<pos:position pos:line="187" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="50">digest<pos:position pos:line="187" pos:column="56"/></name><operator pos:line="187" pos:column="56">-&gt;<pos:position pos:line="187" pos:column="61"/></operator><name pos:line="187" pos:column="58">opaque<pos:position pos:line="187" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="188" pos:column="5">free<pos:position pos:line="188" pos:column="9"/></name><argument_list pos:line="188" pos:column="9">(<argument><expr><name pos:line="188" pos:column="10">response<pos:position pos:line="188" pos:column="18"/></name></expr></argument>)<pos:position pos:line="188" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="20"/></expr_stmt>
    <if pos:line="189" pos:column="5">if<condition pos:line="189" pos:column="7">(<expr><operator pos:line="189" pos:column="8">!<pos:position pos:line="189" pos:column="9"/></operator><name pos:line="189" pos:column="9">tmp<pos:position pos:line="189" pos:column="12"/></name></expr>)<pos:position pos:line="189" pos:column="13"/></condition><then pos:line="189" pos:column="13">
      <block type="pseudo"><return pos:line="190" pos:column="7">return <expr><name pos:line="190" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="190" pos:column="33"/></name></expr>;<pos:position pos:line="190" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="192" pos:column="5">response<pos:position pos:line="192" pos:column="13"/></name> <operator pos:line="192" pos:column="14">=<pos:position pos:line="192" pos:column="15"/></operator> <name pos:line="192" pos:column="16">tmp<pos:position pos:line="192" pos:column="19"/></name></expr>;<pos:position pos:line="192" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="193" pos:column="4"/></block></then></if>

  <if pos:line="195" pos:column="3">if<condition pos:line="195" pos:column="5">(<expr><name><name pos:line="195" pos:column="6">digest<pos:position pos:line="195" pos:column="12"/></name><operator pos:line="195" pos:column="12">-&gt;<pos:position pos:line="195" pos:column="17"/></operator><name pos:line="195" pos:column="14">algorithm<pos:position pos:line="195" pos:column="23"/></name></name></expr>)<pos:position pos:line="195" pos:column="24"/></condition><then pos:line="195" pos:column="24"> <block pos:line="195" pos:column="25">{
    <comment type="block" pos:line="196" pos:column="5">/* Append the algorithm */</comment>
    <expr_stmt><expr><name pos:line="197" pos:column="5">tmp<pos:position pos:line="197" pos:column="8"/></name> <operator pos:line="197" pos:column="9">=<pos:position pos:line="197" pos:column="10"/></operator> <call><name pos:line="197" pos:column="11">aprintf<pos:position pos:line="197" pos:column="18"/></name><argument_list pos:line="197" pos:column="18">(<argument><expr><literal type="string" pos:line="197" pos:column="19">"%s, algorithm=\"%s\""<pos:position pos:line="197" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="43">response<pos:position pos:line="197" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="53">digest<pos:position pos:line="197" pos:column="59"/></name><operator pos:line="197" pos:column="59">-&gt;<pos:position pos:line="197" pos:column="64"/></operator><name pos:line="197" pos:column="61">algorithm<pos:position pos:line="197" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="198" pos:column="5">free<pos:position pos:line="198" pos:column="9"/></name><argument_list pos:line="198" pos:column="9">(<argument><expr><name pos:line="198" pos:column="10">response<pos:position pos:line="198" pos:column="18"/></name></expr></argument>)<pos:position pos:line="198" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="20"/></expr_stmt>
    <if pos:line="199" pos:column="5">if<condition pos:line="199" pos:column="7">(<expr><operator pos:line="199" pos:column="8">!<pos:position pos:line="199" pos:column="9"/></operator><name pos:line="199" pos:column="9">tmp<pos:position pos:line="199" pos:column="12"/></name></expr>)<pos:position pos:line="199" pos:column="13"/></condition><then pos:line="199" pos:column="13">
      <block type="pseudo"><return pos:line="200" pos:column="7">return <expr><name pos:line="200" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="200" pos:column="33"/></name></expr>;<pos:position pos:line="200" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="202" pos:column="5">response<pos:position pos:line="202" pos:column="13"/></name> <operator pos:line="202" pos:column="14">=<pos:position pos:line="202" pos:column="15"/></operator> <name pos:line="202" pos:column="16">tmp<pos:position pos:line="202" pos:column="19"/></name></expr>;<pos:position pos:line="202" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="203" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="205" pos:column="3">/* Return the output */</comment>
  <expr_stmt><expr><operator pos:line="206" pos:column="3">*<pos:position pos:line="206" pos:column="4"/></operator><name pos:line="206" pos:column="4">outptr<pos:position pos:line="206" pos:column="10"/></name> <operator pos:line="206" pos:column="11">=<pos:position pos:line="206" pos:column="12"/></operator> <name pos:line="206" pos:column="13">response<pos:position pos:line="206" pos:column="21"/></name></expr>;<pos:position pos:line="206" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="207" pos:column="3">*<pos:position pos:line="207" pos:column="4"/></operator><name pos:line="207" pos:column="4">outlen<pos:position pos:line="207" pos:column="10"/></name> <operator pos:line="207" pos:column="11">=<pos:position pos:line="207" pos:column="12"/></operator> <call><name pos:line="207" pos:column="13">strlen<pos:position pos:line="207" pos:column="19"/></name><argument_list pos:line="207" pos:column="19">(<argument><expr><name pos:line="207" pos:column="20">response<pos:position pos:line="207" pos:column="28"/></name></expr></argument>)<pos:position pos:line="207" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="30"/></expr_stmt>

  <return pos:line="209" pos:column="3">return <expr><name pos:line="209" pos:column="10">CURLE_OK<pos:position pos:line="209" pos:column="18"/></name></expr>;<pos:position pos:line="209" pos:column="19"/></return>
}<pos:position pos:line="210" pos:column="2"/></block></function></unit>

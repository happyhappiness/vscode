<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1067_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">is_absolute_url<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">url<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">prot<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">16<pos:position pos:line="3" pos:column="15"/></literal></expr>]<pos:position pos:line="3" pos:column="16"/></index></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt> <comment type="block" pos:line="3" pos:column="18">/* URL protocol string storage */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">letter<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>   <comment type="block" pos:line="4" pos:column="18">/* used for a silly sscanf */</comment>

  <return pos:line="6" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><literal type="number" pos:line="6" pos:column="11">2<pos:position pos:line="6" pos:column="12"/></literal> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">sscanf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">url<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="28">"%15[^?&amp;/:]://%c"<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">prot<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="53">&amp;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="54">letter<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call><operator pos:line="6" pos:column="61">)<pos:position pos:line="6" pos:column="62"/></operator></expr> ?<pos:position pos:line="6" pos:column="64"/></condition><then pos:line="6" pos:column="64"> <expr><name pos:line="6" pos:column="65">TRUE<pos:position pos:line="6" pos:column="69"/></name></expr> <pos:position pos:line="6" pos:column="70"/></then><else pos:line="6" pos:column="70">: <expr><name pos:line="6" pos:column="72">FALSE<pos:position pos:line="6" pos:column="77"/></name></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="78"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

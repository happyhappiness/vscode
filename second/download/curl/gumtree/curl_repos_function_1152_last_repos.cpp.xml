<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1152_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">imap_matchresp<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">line<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">size_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">len<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">cmd<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">end<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">line<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">+<pos:position pos:line="3" pos:column="27"/></operator> <name pos:line="3" pos:column="28">len<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">cmd_len<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">strlen<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">cmd<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* Skip the untagged response marker */</comment>
  <expr_stmt><expr><name pos:line="7" pos:column="3">line<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">+=<pos:position pos:line="7" pos:column="10"/></operator> <literal type="number" pos:line="7" pos:column="11">2<pos:position pos:line="7" pos:column="12"/></literal></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Do we have a number after the marker? */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">line<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&lt;<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="13">end<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&amp;&amp;<pos:position pos:line="10" pos:column="27"/></operator> <call><name pos:line="10" pos:column="20">ISDIGIT<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">line<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35"> <block pos:line="10" pos:column="36">{
    <comment type="block" pos:line="11" pos:column="5">/* Skip the number */</comment>
    <do pos:line="12" pos:column="5">do
      <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="7">line<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">++<pos:position pos:line="13" pos:column="13"/></operator></expr>;<pos:position pos:line="13" pos:column="14"/></expr_stmt></block>
    while<condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">line<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&lt;<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="18">end<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&amp;&amp;<pos:position pos:line="14" pos:column="32"/></operator> <call><name pos:line="14" pos:column="25">ISDIGIT<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><operator pos:line="14" pos:column="33">*<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">line<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="40"/></condition>;<pos:position pos:line="14" pos:column="41"/></do>

    <comment type="block" pos:line="16" pos:column="5">/* Do we have the space character? */</comment>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">line<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">end<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">||<pos:position pos:line="17" pos:column="22"/></operator> <operator pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">line<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">!=<pos:position pos:line="17" pos:column="31"/></operator> <literal type="char" pos:line="17" pos:column="32">' '<pos:position pos:line="17" pos:column="35"/></literal></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">FALSE<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">line<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">++<pos:position pos:line="20" pos:column="11"/></operator></expr>;<pos:position pos:line="20" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Does the command name match and is it followed by a space character or at
     the end of line? */</comment>
  <if pos:line="25" pos:column="3">if<condition pos:line="25" pos:column="5">(<expr><name pos:line="25" pos:column="6">line<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">+<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">cmd_len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&lt;=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="24">end<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&amp;&amp;<pos:position pos:line="25" pos:column="38"/></operator> <call><name pos:line="25" pos:column="31">strncasecompare<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">line<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">cmd<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">cmd_len<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call> <operator pos:line="25" pos:column="67">&amp;&amp;<pos:position pos:line="25" pos:column="77"/></operator>
     <operator pos:line="26" pos:column="6">(<pos:position pos:line="26" pos:column="7"/></operator><name><name pos:line="26" pos:column="7">line<pos:position pos:line="26" pos:column="11"/></name><index pos:line="26" pos:column="11">[<expr><name pos:line="26" pos:column="12">cmd_len<pos:position pos:line="26" pos:column="19"/></name></expr>]<pos:position pos:line="26" pos:column="20"/></index></name> <operator pos:line="26" pos:column="21">==<pos:position pos:line="26" pos:column="23"/></operator> <literal type="char" pos:line="26" pos:column="24">' '<pos:position pos:line="26" pos:column="27"/></literal> <operator pos:line="26" pos:column="28">||<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">line<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">+<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">cmd_len<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">+<pos:position pos:line="26" pos:column="47"/></operator> <literal type="number" pos:line="26" pos:column="48">2<pos:position pos:line="26" pos:column="49"/></literal> <operator pos:line="26" pos:column="50">==<pos:position pos:line="26" pos:column="52"/></operator> <name pos:line="26" pos:column="53">end<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">)<pos:position pos:line="26" pos:column="57"/></operator></expr>)<pos:position pos:line="26" pos:column="58"/></condition><then pos:line="26" pos:column="58">
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">TRUE<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return></block></then></if>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">FALSE<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

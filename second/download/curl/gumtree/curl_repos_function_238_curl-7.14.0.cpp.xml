<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_238_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_readrewind<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">conn<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">bits<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">.<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">rewindaftersend<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="32">FALSE<pos:position pos:line="5" pos:column="37"/></name></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt> <comment type="block" pos:line="5" pos:column="39">/* we rewind now */</comment>

  <comment type="block" pos:line="7" pos:column="3">/* We have sent away data. If not using CURLOPT_POSTFIELDS or
     CURLOPT_HTTPPOST, call app to rewind
  */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name><name pos:line="10" pos:column="6">data<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">set<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">postfields<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">||<pos:position pos:line="10" pos:column="29"/></operator>
     <operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><name><name pos:line="11" pos:column="7">data<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">set<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">httpreq<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">HTTPREQ_POST_FORM<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
    <block type="pseudo"><empty_stmt pos:line="12" pos:column="5">;<pos:position pos:line="12" pos:column="6"/></empty_stmt></block></then> <comment type="block" pos:line="12" pos:column="7">/* do nothing */</comment>
  <else pos:line="13" pos:column="3">else <block pos:line="13" pos:column="8">{
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name><name pos:line="14" pos:column="8">data<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">set<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">ioctl<pos:position pos:line="14" pos:column="23"/></name></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <block pos:line="14" pos:column="25">{
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">curlioerr<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">err<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>

      <expr_stmt><expr><name pos:line="17" pos:column="7">err<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name><name pos:line="17" pos:column="13">data<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">set<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">.<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">ioctl<pos:position pos:line="17" pos:column="28"/></name></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">data<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">CURLIOCMD_RESTARTREAD<pos:position pos:line="17" pos:column="56"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="18" pos:column="29">data<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">set<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">.<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="39">ioctl_client<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">infof<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">data<pos:position pos:line="19" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"the ioctl callback returned %d\n"<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="55">(<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">int<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="60">err<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>

      <if pos:line="21" pos:column="7">if<condition pos:line="21" pos:column="9">(<expr><name pos:line="21" pos:column="10">err<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14"> <block pos:line="21" pos:column="15">{
        <comment type="block" pos:line="22" pos:column="9">/* FIXME: convert to a human readable error message */</comment>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">failf<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">data<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="21">"ioctl callback returned error %d\n"<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="59">(<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">int<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">)<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="64">err<pos:position pos:line="23" pos:column="67"/></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">CURLE_SEND_FAIL_REWIND<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></return>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else <block pos:line="27" pos:column="10">{
      <comment type="block" pos:line="28" pos:column="7">/* If no CURLOPT_READFUNCTION is used, we know that we operate on a
         given FILE * stream and we can actually attempt to rewind that
         ourself with fseek() */</comment>
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><name><name pos:line="31" pos:column="10">data<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">set<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">fread<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">==<pos:position pos:line="31" pos:column="28"/></operator> <operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">curl_read_callback<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">)<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">fread<pos:position pos:line="31" pos:column="54"/></name></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55"> <block pos:line="31" pos:column="56">{
        <if pos:line="32" pos:column="9">if<condition pos:line="32" pos:column="11">(<expr><operator pos:line="32" pos:column="12">-<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal> <operator pos:line="32" pos:column="15">!=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">fseek<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name><name pos:line="32" pos:column="24">data<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">set<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">in<pos:position pos:line="32" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="38">0<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">SEEK_SET<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51">
          <comment type="block" pos:line="33" pos:column="11">/* successful rewind */</comment>
          <block type="pseudo"><return pos:line="34" pos:column="11">return <expr><name pos:line="34" pos:column="18">CURLE_OK<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></return></block></then></if>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="37" pos:column="7">/* no callback set or failure aboe, makes us fail at once */</comment>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">failf<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">data<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"necessary data rewind wasn't possible\n"<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><name pos:line="39" pos:column="14">CURLE_SEND_FAIL_REWIND<pos:position pos:line="39" pos:column="36"/></name></expr>;<pos:position pos:line="39" pos:column="37"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>
  }<pos:position pos:line="41" pos:column="4"/></block></else></if>
  <return pos:line="42" pos:column="3">return <expr><name pos:line="42" pos:column="10">CURLE_OK<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

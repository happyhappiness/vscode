<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_973_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_field_headers<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">OperationConfig<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">config<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">filename<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">FILE<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">fp<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">curl_slist<pos:position pos:line="3" pos:column="48"/></name></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier><modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">pheaders<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">hdrlen<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">pos<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">c<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">incomment<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><name pos:line="8" pos:column="20">FALSE<pos:position pos:line="8" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">lineno<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">hdrbuf<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><literal type="number" pos:line="10" pos:column="15">999<pos:position pos:line="10" pos:column="18"/></literal></expr>]<pos:position pos:line="10" pos:column="19"/></index></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt> <comment type="block" pos:line="10" pos:column="21">/* Max. header length + 1. */</comment>

  <for pos:line="12" pos:column="3">for<control pos:line="12" pos:column="6">(<init pos:line="12" pos:column="7">;<pos:position pos:line="12" pos:column="8"/></init><condition pos:line="12" pos:column="8">;<pos:position pos:line="12" pos:column="9"/></condition><incr/>)<pos:position pos:line="12" pos:column="10"/></control> <block pos:line="12" pos:column="11">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">c<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">getc<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">fp<pos:position pos:line="13" pos:column="16"/></name></expr></argument>)<pos:position pos:line="13" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">c<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">==<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">EOF<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">||<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">(<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">pos<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&amp;&amp;<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="29">!<pos:position pos:line="14" pos:column="30"/></operator><call><name pos:line="14" pos:column="30">ISSPACE<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">c<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call><operator pos:line="14" pos:column="40">)<pos:position pos:line="14" pos:column="41"/></operator></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
      <comment type="block" pos:line="15" pos:column="7">/* Strip and flush the current header. */</comment>
      <while pos:line="16" pos:column="7">while<condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">hdrlen<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&amp;&amp;<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="23">ISSPACE<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name><name pos:line="16" pos:column="31">hdrbuf<pos:position pos:line="16" pos:column="37"/></name><index pos:line="16" pos:column="37">[<expr><name pos:line="16" pos:column="38">hdrlen<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">-<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="47">1<pos:position pos:line="16" pos:column="48"/></literal></expr>]<pos:position pos:line="16" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="51"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">hdrlen<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">--<pos:position pos:line="17" pos:column="17"/></operator></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt></block></while>
      <if pos:line="18" pos:column="7">if<condition pos:line="18" pos:column="9">(<expr><name pos:line="18" pos:column="10">hdrlen<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">hdrbuf<pos:position pos:line="19" pos:column="15"/></name><index pos:line="19" pos:column="15">[<expr><name pos:line="19" pos:column="16">hdrlen<pos:position pos:line="19" pos:column="22"/></name></expr>]<pos:position pos:line="19" pos:column="23"/></index></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="char" pos:line="19" pos:column="26">'\0'<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
        <if pos:line="20" pos:column="9">if<condition pos:line="20" pos:column="11">(<expr><call><name pos:line="20" pos:column="12">slist_append<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">pheaders<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">hdrbuf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
          <expr_stmt><expr><call><name pos:line="21" pos:column="11">fprintf<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">config<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">global<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">errors<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="22" pos:column="19">"Out of memory for field headers!\n"<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
          <return pos:line="23" pos:column="11">return <expr><operator pos:line="23" pos:column="18">-<pos:position pos:line="23" pos:column="19"/></operator><literal type="number" pos:line="23" pos:column="19">1<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="25" pos:column="9">hdrlen<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <switch pos:line="29" pos:column="5">switch<condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">c<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition> <block pos:line="29" pos:column="15">{
    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">EOF<pos:position pos:line="30" pos:column="13"/></name></expr>:<pos:position pos:line="30" pos:column="14"/></case>
      <if pos:line="31" pos:column="7">if<condition pos:line="31" pos:column="9">(<expr><call><name pos:line="31" pos:column="10">ferror<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">fp<pos:position pos:line="31" pos:column="19"/></name></expr></argument>)<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">fprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name><name pos:line="32" pos:column="17">config<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">global<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">errors<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="33" pos:column="17">"Header file %s read error: %s\n"<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">filename<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="62">strerror<pos:position pos:line="33" pos:column="70"/></name><argument_list pos:line="33" pos:column="70">(<argument><expr><name pos:line="33" pos:column="71">errno<pos:position pos:line="33" pos:column="76"/></name></expr></argument>)<pos:position pos:line="33" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">-<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">1<pos:position pos:line="34" pos:column="18"/></literal></expr>;<pos:position pos:line="34" pos:column="19"/></return>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>
      <return pos:line="36" pos:column="7">return <expr><literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></return>    <comment type="block" pos:line="36" pos:column="20">/* Done. */</comment>
    <case pos:line="37" pos:column="5">case <expr><literal type="char" pos:line="37" pos:column="10">'\r'<pos:position pos:line="37" pos:column="14"/></literal></expr>:<pos:position pos:line="37" pos:column="15"/></case>
      <continue pos:line="38" pos:column="7">continue;<pos:position pos:line="38" pos:column="16"/></continue>    <comment type="block" pos:line="38" pos:column="20">/* Ignore. */</comment>
    <case pos:line="39" pos:column="5">case <expr><literal type="char" pos:line="39" pos:column="10">'\n'<pos:position pos:line="39" pos:column="14"/></literal></expr>:<pos:position pos:line="39" pos:column="15"/></case>
      <expr_stmt><expr><name pos:line="40" pos:column="7">pos<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="41" pos:column="7">incomment<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">FALSE<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="42" pos:column="7">lineno<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">++<pos:position pos:line="42" pos:column="15"/></operator></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>
      <continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue>
    <case pos:line="44" pos:column="5">case <expr><literal type="char" pos:line="44" pos:column="10">'#'<pos:position pos:line="44" pos:column="13"/></literal></expr>:<pos:position pos:line="44" pos:column="14"/></case>
      <if pos:line="45" pos:column="7">if<condition pos:line="45" pos:column="9">(<expr><operator pos:line="45" pos:column="10">!<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">pos<pos:position pos:line="45" pos:column="14"/></name></expr>)<pos:position pos:line="45" pos:column="15"/></condition><then pos:line="45" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="9">incomment<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="21">TRUE<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt></block></then></if>
      <break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break>
    }<pos:position pos:line="48" pos:column="6"/></block></switch>

    <expr_stmt><expr><name pos:line="50" pos:column="5">pos<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">++<pos:position pos:line="50" pos:column="10"/></operator></expr>;<pos:position pos:line="50" pos:column="11"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><operator pos:line="51" pos:column="8">!<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">incomment<pos:position pos:line="51" pos:column="18"/></name></expr>)<pos:position pos:line="51" pos:column="19"/></condition><then pos:line="51" pos:column="19"> <block pos:line="51" pos:column="20">{
      <if pos:line="52" pos:column="7">if<condition pos:line="52" pos:column="9">(<expr><name pos:line="52" pos:column="10">hdrlen<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">==<pos:position pos:line="52" pos:column="19"/></operator> <sizeof pos:line="52" pos:column="20">sizeof <name pos:line="52" pos:column="27">hdrbuf<pos:position pos:line="52" pos:column="33"/></name></sizeof> <operator pos:line="52" pos:column="34">-<pos:position pos:line="52" pos:column="35"/></operator> <literal type="number" pos:line="52" pos:column="36">1<pos:position pos:line="52" pos:column="37"/></literal></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38"> <block pos:line="52" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">warnf<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name><name pos:line="53" pos:column="15">config<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">global<pos:position pos:line="53" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="31">"File %s line %d: header too long (truncated)\n"<pos:position pos:line="53" pos:column="79"/></literal></expr></argument>,
              <argument><expr><name pos:line="54" pos:column="15">filename<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">lineno<pos:position pos:line="54" pos:column="31"/></name></expr></argument>)<pos:position pos:line="54" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">c<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <literal type="char" pos:line="55" pos:column="13">' '<pos:position pos:line="55" pos:column="16"/></literal></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if>
      <if pos:line="57" pos:column="7">if<condition pos:line="57" pos:column="9">(<expr><name pos:line="57" pos:column="10">hdrlen<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&lt;=<pos:position pos:line="57" pos:column="22"/></operator> <sizeof pos:line="57" pos:column="20">sizeof <name pos:line="57" pos:column="27">hdrbuf<pos:position pos:line="57" pos:column="33"/></name></sizeof> <operator pos:line="57" pos:column="34">-<pos:position pos:line="57" pos:column="35"/></operator> <literal type="number" pos:line="57" pos:column="36">1<pos:position pos:line="57" pos:column="37"/></literal></expr>)<pos:position pos:line="57" pos:column="38"/></condition><then pos:line="57" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="9">hdrbuf<pos:position pos:line="58" pos:column="15"/></name><index pos:line="58" pos:column="15">[<expr><name pos:line="58" pos:column="16">hdrlen<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">++<pos:position pos:line="58" pos:column="24"/></operator></expr>]<pos:position pos:line="58" pos:column="25"/></index></name> <operator pos:line="58" pos:column="26">=<pos:position pos:line="58" pos:column="27"/></operator> <operator pos:line="58" pos:column="28">(<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="29">char<pos:position pos:line="58" pos:column="33"/></name><operator pos:line="58" pos:column="33">)<pos:position pos:line="58" pos:column="34"/></operator> <name pos:line="58" pos:column="35">c<pos:position pos:line="58" pos:column="36"/></name></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></for>
  <comment type="block" pos:line="61" pos:column="3">/* NOTREACHED */</comment>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

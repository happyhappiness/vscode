<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1412_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_http_input_auth<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">bool<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">proxy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">auth<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <comment type="block" pos:line="2" pos:column="49">/* the first non-space */</comment>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/*
   * This resource requires authentication
   */</comment>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">USE_SPNEGO<pos:position pos:line="9" pos:column="18"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">negotiatedata<pos:position pos:line="10" pos:column="23"/></name></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">negdata<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><ternary><condition><expr><name pos:line="10" pos:column="35">proxy<pos:position pos:line="10" pos:column="40"/></name></expr>?<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
    <expr><operator pos:line="11" pos:column="5">&amp;<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="6">data<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">state<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">proxyneg<pos:position pos:line="11" pos:column="26"/></name></name></expr></then><else pos:line="11" pos:column="26">:<expr><operator pos:line="11" pos:column="27">&amp;<pos:position pos:line="11" pos:column="32"/></operator><name><name pos:line="11" pos:column="28">data<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">state<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">.<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">negotiate<pos:position pos:line="11" pos:column="49"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">long<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">availp<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">struct<pos:position pos:line="14" pos:column="9"/></name> <name pos:line="14" pos:column="10">auth<pos:position pos:line="14" pos:column="14"/></name></name> <modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type><name pos:line="14" pos:column="16">authp<pos:position pos:line="14" pos:column="21"/></name></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>

  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">proxy<pos:position pos:line="16" pos:column="11"/></name></expr>)<pos:position pos:line="16" pos:column="12"/></condition><then pos:line="16" pos:column="12"> <block pos:line="16" pos:column="13">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">availp<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">&amp;<pos:position pos:line="17" pos:column="19"/></operator><name><name pos:line="17" pos:column="15">data<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">info<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">proxyauthavail<pos:position pos:line="17" pos:column="40"/></name></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">authp<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">&amp;<pos:position pos:line="18" pos:column="18"/></operator><name><name pos:line="18" pos:column="14">data<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">state<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">authproxy<pos:position pos:line="18" pos:column="35"/></name></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <else pos:line="20" pos:column="3">else <block pos:line="20" pos:column="8">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">availp<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <operator pos:line="21" pos:column="14">&amp;<pos:position pos:line="21" pos:column="19"/></operator><name><name pos:line="21" pos:column="15">data<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">info<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">httpauthavail<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">authp<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">&amp;<pos:position pos:line="22" pos:column="18"/></operator><name><name pos:line="22" pos:column="14">data<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">state<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">authhost<pos:position pos:line="22" pos:column="34"/></name></name></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="25" pos:column="3">/*
   * Here we check if we want the specific single authentication (using ==) and
   * if we do, we initiate usage of it.
   *
   * If the provided authentication is wanted as one out of several accepted
   * types (using &amp;), we OR this authentication type to the authavail
   * variable.
   *
   * Note:
   *
   * -&gt;picked is first set to the 'want' value (one or more bits) before the
   * request is sent, and then it is again set _after_ all response 401/407
   * headers have been received but then only to a single preferred method
   * (bit).
   */</comment>

  <while pos:line="41" pos:column="3">while<condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">auth<pos:position pos:line="41" pos:column="14"/></name></expr>)<pos:position pos:line="41" pos:column="15"/></condition> <block pos:line="41" pos:column="16">{
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">USE_SPNEGO<pos:position pos:line="42" pos:column="18"/></name></cpp:ifdef>
    <if pos:line="43" pos:column="5">if<condition pos:line="43" pos:column="7">(<expr><call><name pos:line="43" pos:column="8">checkprefix<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="string" pos:line="43" pos:column="20">"Negotiate"<pos:position pos:line="43" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">auth<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39"> <block pos:line="43" pos:column="40">{
      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><name><name pos:line="44" pos:column="11">authp<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">avail<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">&amp;<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="26">CURLAUTH_NEGOTIATE<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">)<pos:position pos:line="44" pos:column="45"/></operator> <operator pos:line="44" pos:column="46">||<pos:position pos:line="44" pos:column="48"/></operator>
         <call><name pos:line="45" pos:column="10">Curl_auth_is_spnego_supported<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">()<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="42"/></condition><then pos:line="45" pos:column="42"> <block pos:line="45" pos:column="43">{
        <expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">availp<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">|=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">CURLAUTH_NEGOTIATE<pos:position pos:line="46" pos:column="38"/></name></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">authp<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">avail<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">|=<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">CURLAUTH_NEGOTIATE<pos:position pos:line="47" pos:column="43"/></name></expr>;<pos:position pos:line="47" pos:column="44"/></expr_stmt>

        <if pos:line="49" pos:column="9">if<condition pos:line="49" pos:column="11">(<expr><name><name pos:line="49" pos:column="12">authp<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">picked<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">==<pos:position pos:line="49" pos:column="28"/></operator> <name pos:line="49" pos:column="29">CURLAUTH_NEGOTIATE<pos:position pos:line="49" pos:column="47"/></name></expr>)<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48"> <block pos:line="49" pos:column="49">{
          <if pos:line="50" pos:column="11">if<condition pos:line="50" pos:column="13">(<expr><name><name pos:line="50" pos:column="14">negdata<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">state<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">==<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">GSS_AUTHSENT<pos:position pos:line="50" pos:column="44"/></name> <operator pos:line="50" pos:column="45">||<pos:position pos:line="50" pos:column="47"/></operator>
             <name><name pos:line="51" pos:column="14">negdata<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">state<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">==<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">GSS_AUTHNONE<pos:position pos:line="51" pos:column="44"/></name></expr>)<pos:position pos:line="51" pos:column="45"/></condition><then pos:line="51" pos:column="45"> <block pos:line="51" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">CURLcode<pos:position pos:line="52" pos:column="21"/></name></type> <name pos:line="52" pos:column="22">result<pos:position pos:line="52" pos:column="28"/></name> <init pos:line="52" pos:column="29">= <expr><call><name pos:line="52" pos:column="31">Curl_input_negotiate<pos:position pos:line="52" pos:column="51"/></name><argument_list pos:line="52" pos:column="51">(<argument><expr><name pos:line="52" pos:column="52">conn<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">proxy<pos:position pos:line="52" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="65">auth<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="71"/></decl_stmt>
            <if pos:line="53" pos:column="13">if<condition pos:line="53" pos:column="15">(<expr><operator pos:line="53" pos:column="16">!<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">result<pos:position pos:line="53" pos:column="23"/></name></expr>)<pos:position pos:line="53" pos:column="24"/></condition><then pos:line="53" pos:column="24"> <block pos:line="53" pos:column="25">{
              <expr_stmt><expr><call><name pos:line="54" pos:column="15">DEBUGASSERT<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><operator pos:line="54" pos:column="27">!<pos:position pos:line="54" pos:column="28"/></operator><name><name pos:line="54" pos:column="28">data<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">req<pos:position pos:line="54" pos:column="37"/></name><operator pos:line="54" pos:column="37">.<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="38">newurl<pos:position pos:line="54" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="55" pos:column="15">data<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">req<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">.<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">newurl<pos:position pos:line="55" pos:column="31"/></name></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <call><name pos:line="55" pos:column="34">strdup<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><name><name pos:line="55" pos:column="41">data<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">change<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">.<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">url<pos:position pos:line="55" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="59"/></expr_stmt>
              <if pos:line="56" pos:column="15">if<condition pos:line="56" pos:column="17">(<expr><operator pos:line="56" pos:column="18">!<pos:position pos:line="56" pos:column="19"/></operator><name><name pos:line="56" pos:column="19">data<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">req<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">.<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">newurl<pos:position pos:line="56" pos:column="35"/></name></name></expr>)<pos:position pos:line="56" pos:column="36"/></condition><then pos:line="56" pos:column="36">
                <block type="pseudo"><return pos:line="57" pos:column="17">return <expr><name pos:line="57" pos:column="24">CURLE_OUT_OF_MEMORY<pos:position pos:line="57" pos:column="43"/></name></expr>;<pos:position pos:line="57" pos:column="44"/></return></block></then></if>
              <expr_stmt><expr><name><name pos:line="58" pos:column="15">data<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">state<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">.<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="27">authproblem<pos:position pos:line="58" pos:column="38"/></name></name> <operator pos:line="58" pos:column="39">=<pos:position pos:line="58" pos:column="40"/></operator> <name pos:line="58" pos:column="41">FALSE<pos:position pos:line="58" pos:column="46"/></name></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
              <comment type="block" pos:line="59" pos:column="15">/* we received a GSS auth token and we dealt with it fine */</comment>
              <expr_stmt><expr><name><name pos:line="60" pos:column="15">negdata<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">state<pos:position pos:line="60" pos:column="29"/></name></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <name pos:line="60" pos:column="32">GSS_AUTHRECV<pos:position pos:line="60" pos:column="44"/></name></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then>
            <else pos:line="62" pos:column="13">else
              <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="15">data<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">-&gt;<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="21">state<pos:position pos:line="63" pos:column="26"/></name><operator pos:line="63" pos:column="26">.<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="27">authproblem<pos:position pos:line="63" pos:column="38"/></name></name> <operator pos:line="63" pos:column="39">=<pos:position pos:line="63" pos:column="40"/></operator> <name pos:line="63" pos:column="41">TRUE<pos:position pos:line="63" pos:column="45"/></name></expr>;<pos:position pos:line="63" pos:column="46"/></expr_stmt></block></else></if>
          }<pos:position pos:line="64" pos:column="12"/></block></then></if>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then>
    <elseif pos:line="68" pos:column="5">else
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">ifdef<pos:position pos:line="70" pos:column="7"/></cpp:directive> <name pos:line="70" pos:column="8">USE_NTLM<pos:position pos:line="70" pos:column="16"/></name></cpp:ifdef>
      <comment type="block" pos:line="71" pos:column="7">/* NTLM support requires the SSL crypto libs */</comment>
      <if pos:line="72" pos:column="7">if<condition pos:line="72" pos:column="9">(<expr><call><name pos:line="72" pos:column="10">checkprefix<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><literal type="string" pos:line="72" pos:column="22">"NTLM"<pos:position pos:line="72" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">auth<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="36"/></condition><then pos:line="72" pos:column="36"> <block pos:line="72" pos:column="37">{
        <if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">(<expr><operator pos:line="73" pos:column="12">(<pos:position pos:line="73" pos:column="13"/></operator><name><name pos:line="73" pos:column="13">authp<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">-&gt;<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="20">avail<pos:position pos:line="73" pos:column="25"/></name></name> <operator pos:line="73" pos:column="26">&amp;<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="28">CURLAUTH_NTLM<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">)<pos:position pos:line="73" pos:column="42"/></operator> <operator pos:line="73" pos:column="43">||<pos:position pos:line="73" pos:column="45"/></operator>
           <operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><name><name pos:line="74" pos:column="13">authp<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">avail<pos:position pos:line="74" pos:column="25"/></name></name> <operator pos:line="74" pos:column="26">&amp;<pos:position pos:line="74" pos:column="31"/></operator> <name pos:line="74" pos:column="28">CURLAUTH_NTLM_WB<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">)<pos:position pos:line="74" pos:column="45"/></operator> <operator pos:line="74" pos:column="46">||<pos:position pos:line="74" pos:column="48"/></operator>
           <call><name pos:line="75" pos:column="12">Curl_auth_is_ntlm_supported<pos:position pos:line="75" pos:column="39"/></name><argument_list pos:line="75" pos:column="39">()<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="42"/></condition><then pos:line="75" pos:column="42"> <block pos:line="75" pos:column="43">{
          <expr_stmt><expr><operator pos:line="76" pos:column="11">*<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">availp<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">|=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">CURLAUTH_NTLM<pos:position pos:line="76" pos:column="35"/></name></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="77" pos:column="11">authp<pos:position pos:line="77" pos:column="16"/></name><operator pos:line="77" pos:column="16">-&gt;<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="18">avail<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">|=<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">CURLAUTH_NTLM<pos:position pos:line="77" pos:column="40"/></name></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt>

          <if pos:line="79" pos:column="11">if<condition pos:line="79" pos:column="13">(<expr><name><name pos:line="79" pos:column="14">authp<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">picked<pos:position pos:line="79" pos:column="27"/></name></name> <operator pos:line="79" pos:column="28">==<pos:position pos:line="79" pos:column="30"/></operator> <name pos:line="79" pos:column="31">CURLAUTH_NTLM<pos:position pos:line="79" pos:column="44"/></name> <operator pos:line="79" pos:column="45">||<pos:position pos:line="79" pos:column="47"/></operator>
             <name><name pos:line="80" pos:column="14">authp<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">-&gt;<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="21">picked<pos:position pos:line="80" pos:column="27"/></name></name> <operator pos:line="80" pos:column="28">==<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="31">CURLAUTH_NTLM_WB<pos:position pos:line="80" pos:column="47"/></name></expr>)<pos:position pos:line="80" pos:column="48"/></condition><then pos:line="80" pos:column="48"> <block pos:line="80" pos:column="49">{
            <comment type="block" pos:line="81" pos:column="13">/* NTLM authentication is picked and activated */</comment>
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">CURLcode<pos:position pos:line="82" pos:column="21"/></name></type> <name pos:line="82" pos:column="22">result<pos:position pos:line="82" pos:column="28"/></name> <init pos:line="82" pos:column="29">= <expr><call><name pos:line="82" pos:column="31">Curl_input_ntlm<pos:position pos:line="82" pos:column="46"/></name><argument_list pos:line="82" pos:column="46">(<argument><expr><name pos:line="82" pos:column="47">conn<pos:position pos:line="82" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">proxy<pos:position pos:line="82" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="60">auth<pos:position pos:line="82" pos:column="64"/></name></expr></argument>)<pos:position pos:line="82" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="66"/></decl_stmt>
            <if pos:line="83" pos:column="13">if<condition pos:line="83" pos:column="15">(<expr><operator pos:line="83" pos:column="16">!<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">result<pos:position pos:line="83" pos:column="23"/></name></expr>)<pos:position pos:line="83" pos:column="24"/></condition><then pos:line="83" pos:column="24"> <block pos:line="83" pos:column="25">{
              <expr_stmt><expr><name><name pos:line="84" pos:column="15">data<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">-&gt;<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="21">state<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">.<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="27">authproblem<pos:position pos:line="84" pos:column="38"/></name></name> <operator pos:line="84" pos:column="39">=<pos:position pos:line="84" pos:column="40"/></operator> <name pos:line="84" pos:column="41">FALSE<pos:position pos:line="84" pos:column="46"/></name></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
<cpp:ifdef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifdef<pos:position pos:line="85" pos:column="7"/></cpp:directive> <name pos:line="85" pos:column="8">NTLM_WB_ENABLED<pos:position pos:line="85" pos:column="23"/></name></cpp:ifdef>
              <if pos:line="86" pos:column="15">if<condition pos:line="86" pos:column="17">(<expr><name><name pos:line="86" pos:column="18">authp<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">-&gt;<pos:position pos:line="86" pos:column="28"/></operator><name pos:line="86" pos:column="25">picked<pos:position pos:line="86" pos:column="31"/></name></name> <operator pos:line="86" pos:column="32">==<pos:position pos:line="86" pos:column="34"/></operator> <name pos:line="86" pos:column="35">CURLAUTH_NTLM_WB<pos:position pos:line="86" pos:column="51"/></name></expr>)<pos:position pos:line="86" pos:column="52"/></condition><then pos:line="86" pos:column="52"> <block pos:line="86" pos:column="53">{
                <expr_stmt><expr><operator pos:line="87" pos:column="17">*<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="18">availp<pos:position pos:line="87" pos:column="24"/></name> <operator pos:line="87" pos:column="25">&amp;=<pos:position pos:line="87" pos:column="31"/></operator> <operator pos:line="87" pos:column="28">~<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="29">CURLAUTH_NTLM<pos:position pos:line="87" pos:column="42"/></name></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="88" pos:column="17">authp<pos:position pos:line="88" pos:column="22"/></name><operator pos:line="88" pos:column="22">-&gt;<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="24">avail<pos:position pos:line="88" pos:column="29"/></name></name> <operator pos:line="88" pos:column="30">&amp;=<pos:position pos:line="88" pos:column="36"/></operator> <operator pos:line="88" pos:column="33">~<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="34">CURLAUTH_NTLM<pos:position pos:line="88" pos:column="47"/></name></expr>;<pos:position pos:line="88" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="89" pos:column="17">*<pos:position pos:line="89" pos:column="18"/></operator><name pos:line="89" pos:column="18">availp<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">|=<pos:position pos:line="89" pos:column="27"/></operator> <name pos:line="89" pos:column="28">CURLAUTH_NTLM_WB<pos:position pos:line="89" pos:column="44"/></name></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="90" pos:column="17">authp<pos:position pos:line="90" pos:column="22"/></name><operator pos:line="90" pos:column="22">-&gt;<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="24">avail<pos:position pos:line="90" pos:column="29"/></name></name> <operator pos:line="90" pos:column="30">|=<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">CURLAUTH_NTLM_WB<pos:position pos:line="90" pos:column="49"/></name></expr>;<pos:position pos:line="90" pos:column="50"/></expr_stmt>

                <comment type="block" pos:line="92" pos:column="17">/* Get the challenge-message which will be passed to
                 * ntlm_auth for generating the type 3 message later */</comment>
                <while pos:line="94" pos:column="17">while<condition pos:line="94" pos:column="22">(<expr><operator pos:line="94" pos:column="23">*<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">auth<pos:position pos:line="94" pos:column="28"/></name> <operator pos:line="94" pos:column="29">&amp;&amp;<pos:position pos:line="94" pos:column="39"/></operator> <call><name pos:line="94" pos:column="32">ISSPACE<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><operator pos:line="94" pos:column="40">*<pos:position pos:line="94" pos:column="41"/></operator><name pos:line="94" pos:column="41">auth<pos:position pos:line="94" pos:column="45"/></name></expr></argument>)<pos:position pos:line="94" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="47"/></condition>
                  <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="19">auth<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">++<pos:position pos:line="95" pos:column="25"/></operator></expr>;<pos:position pos:line="95" pos:column="26"/></expr_stmt></block></while>
                <if pos:line="96" pos:column="17">if<condition pos:line="96" pos:column="19">(<expr><call><name pos:line="96" pos:column="20">checkprefix<pos:position pos:line="96" pos:column="31"/></name><argument_list pos:line="96" pos:column="31">(<argument><expr><literal type="string" pos:line="96" pos:column="32">"NTLM"<pos:position pos:line="96" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="40">auth<pos:position pos:line="96" pos:column="44"/></name></expr></argument>)<pos:position pos:line="96" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="46"/></condition><then pos:line="96" pos:column="46"> <block pos:line="96" pos:column="47">{
                  <expr_stmt><expr><name pos:line="97" pos:column="19">auth<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">+=<pos:position pos:line="97" pos:column="26"/></operator> <call><name pos:line="97" pos:column="27">strlen<pos:position pos:line="97" pos:column="33"/></name><argument_list pos:line="97" pos:column="33">(<argument><expr><literal type="string" pos:line="97" pos:column="34">"NTLM"<pos:position pos:line="97" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
                  <while pos:line="98" pos:column="19">while<condition pos:line="98" pos:column="24">(<expr><operator pos:line="98" pos:column="25">*<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">auth<pos:position pos:line="98" pos:column="30"/></name> <operator pos:line="98" pos:column="31">&amp;&amp;<pos:position pos:line="98" pos:column="41"/></operator> <call><name pos:line="98" pos:column="34">ISSPACE<pos:position pos:line="98" pos:column="41"/></name><argument_list pos:line="98" pos:column="41">(<argument><expr><operator pos:line="98" pos:column="42">*<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="43">auth<pos:position pos:line="98" pos:column="47"/></name></expr></argument>)<pos:position pos:line="98" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="49"/></condition>
                    <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="21">auth<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">++<pos:position pos:line="99" pos:column="27"/></operator></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt></block></while>
                  <if pos:line="100" pos:column="19">if<condition pos:line="100" pos:column="21">(<expr><operator pos:line="100" pos:column="22">*<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="23">auth<pos:position pos:line="100" pos:column="27"/></name></expr>)<pos:position pos:line="100" pos:column="28"/></condition><then pos:line="100" pos:column="28"> <block pos:line="100" pos:column="29">{
                    <expr_stmt><expr><name><name pos:line="101" pos:column="21">conn<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">-&gt;<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="27">challenge_header<pos:position pos:line="101" pos:column="43"/></name></name> <operator pos:line="101" pos:column="44">=<pos:position pos:line="101" pos:column="45"/></operator> <call><name pos:line="101" pos:column="46">strdup<pos:position pos:line="101" pos:column="52"/></name><argument_list pos:line="101" pos:column="52">(<argument><expr><name pos:line="101" pos:column="53">auth<pos:position pos:line="101" pos:column="57"/></name></expr></argument>)<pos:position pos:line="101" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="59"/></expr_stmt>
                    <if pos:line="102" pos:column="21">if<condition pos:line="102" pos:column="23">(<expr><operator pos:line="102" pos:column="24">!<pos:position pos:line="102" pos:column="25"/></operator><name><name pos:line="102" pos:column="25">conn<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">-&gt;<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="31">challenge_header<pos:position pos:line="102" pos:column="47"/></name></name></expr>)<pos:position pos:line="102" pos:column="48"/></condition><then pos:line="102" pos:column="48">
                      <block type="pseudo"><return pos:line="103" pos:column="23">return <expr><name pos:line="103" pos:column="30">CURLE_OUT_OF_MEMORY<pos:position pos:line="103" pos:column="49"/></name></expr>;<pos:position pos:line="103" pos:column="50"/></return></block></then></if>
                  }<pos:position pos:line="104" pos:column="20"/></block></then></if>
                }<pos:position pos:line="105" pos:column="18"/></block></then></if>
              }<pos:position pos:line="106" pos:column="16"/></block></then></if>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="108" pos:column="14"/></block></then>
            <else pos:line="109" pos:column="13">else <block pos:line="109" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="110" pos:column="15">infof<pos:position pos:line="110" pos:column="20"/></name><argument_list pos:line="110" pos:column="20">(<argument><expr><name pos:line="110" pos:column="21">data<pos:position pos:line="110" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="27">"Authentication problem. Ignoring this.\n"<pos:position pos:line="110" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="111" pos:column="15">data<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">-&gt;<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="21">state<pos:position pos:line="111" pos:column="26"/></name><operator pos:line="111" pos:column="26">.<pos:position pos:line="111" pos:column="27"/></operator><name pos:line="111" pos:column="27">authproblem<pos:position pos:line="111" pos:column="38"/></name></name> <operator pos:line="111" pos:column="39">=<pos:position pos:line="111" pos:column="40"/></operator> <name pos:line="111" pos:column="41">TRUE<pos:position pos:line="111" pos:column="45"/></name></expr>;<pos:position pos:line="111" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="112" pos:column="14"/></block></else></if>
          }<pos:position pos:line="113" pos:column="12"/></block></then></if>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>
      }<pos:position pos:line="115" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="116" pos:column="7">else
<cpp:endif pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">endif<pos:position pos:line="117" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">ifndef<pos:position pos:line="118" pos:column="8"/></cpp:directive> <name pos:line="118" pos:column="9">CURL_DISABLE_CRYPTO_AUTH<pos:position pos:line="118" pos:column="33"/></name></cpp:ifndef>
        <if pos:line="119" pos:column="9">if<condition pos:line="119" pos:column="11">(<expr><call><name pos:line="119" pos:column="12">checkprefix<pos:position pos:line="119" pos:column="23"/></name><argument_list pos:line="119" pos:column="23">(<argument><expr><literal type="string" pos:line="119" pos:column="24">"Digest"<pos:position pos:line="119" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="34">auth<pos:position pos:line="119" pos:column="38"/></name></expr></argument>)<pos:position pos:line="119" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="40"/></condition><then pos:line="119" pos:column="40"> <block pos:line="119" pos:column="41">{
          <if pos:line="120" pos:column="11">if<condition pos:line="120" pos:column="13">(<expr><operator pos:line="120" pos:column="14">(<pos:position pos:line="120" pos:column="15"/></operator><name><name pos:line="120" pos:column="15">authp<pos:position pos:line="120" pos:column="20"/></name><operator pos:line="120" pos:column="20">-&gt;<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="22">avail<pos:position pos:line="120" pos:column="27"/></name></name> <operator pos:line="120" pos:column="28">&amp;<pos:position pos:line="120" pos:column="33"/></operator> <name pos:line="120" pos:column="30">CURLAUTH_DIGEST<pos:position pos:line="120" pos:column="45"/></name><operator pos:line="120" pos:column="45">)<pos:position pos:line="120" pos:column="46"/></operator> <operator pos:line="120" pos:column="47">!=<pos:position pos:line="120" pos:column="49"/></operator> <literal type="number" pos:line="120" pos:column="50">0<pos:position pos:line="120" pos:column="51"/></literal></expr>)<pos:position pos:line="120" pos:column="52"/></condition><then pos:line="120" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="13">infof<pos:position pos:line="121" pos:column="18"/></name><argument_list pos:line="121" pos:column="18">(<argument><expr><name pos:line="121" pos:column="19">data<pos:position pos:line="121" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="25">"Ignoring duplicate digest auth header.\n"<pos:position pos:line="121" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="69"/></expr_stmt></block></then>
          <elseif pos:line="122" pos:column="11">else <if pos:line="122" pos:column="16">if<condition pos:line="122" pos:column="18">(<expr><call><name pos:line="122" pos:column="19">Curl_auth_is_digest_supported<pos:position pos:line="122" pos:column="48"/></name><argument_list pos:line="122" pos:column="48">()<pos:position pos:line="122" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="51"/></condition><then pos:line="122" pos:column="51"> <block pos:line="122" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">CURLcode<pos:position pos:line="123" pos:column="21"/></name></type> <name pos:line="123" pos:column="22">result<pos:position pos:line="123" pos:column="28"/></name></decl>;<pos:position pos:line="123" pos:column="29"/></decl_stmt>

            <expr_stmt><expr><operator pos:line="125" pos:column="13">*<pos:position pos:line="125" pos:column="14"/></operator><name pos:line="125" pos:column="14">availp<pos:position pos:line="125" pos:column="20"/></name> <operator pos:line="125" pos:column="21">|=<pos:position pos:line="125" pos:column="23"/></operator> <name pos:line="125" pos:column="24">CURLAUTH_DIGEST<pos:position pos:line="125" pos:column="39"/></name></expr>;<pos:position pos:line="125" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">authp<pos:position pos:line="126" pos:column="18"/></name><operator pos:line="126" pos:column="18">-&gt;<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="20">avail<pos:position pos:line="126" pos:column="25"/></name></name> <operator pos:line="126" pos:column="26">|=<pos:position pos:line="126" pos:column="28"/></operator> <name pos:line="126" pos:column="29">CURLAUTH_DIGEST<pos:position pos:line="126" pos:column="44"/></name></expr>;<pos:position pos:line="126" pos:column="45"/></expr_stmt>

            <comment type="block" pos:line="128" pos:column="13">/* We call this function on input Digest headers even if Digest
             * authentication isn't activated yet, as we need to store the
             * incoming data from this header in case we are going to use
             * Digest */</comment>
            <expr_stmt><expr><name pos:line="132" pos:column="13">result<pos:position pos:line="132" pos:column="19"/></name> <operator pos:line="132" pos:column="20">=<pos:position pos:line="132" pos:column="21"/></operator> <call><name pos:line="132" pos:column="22">Curl_input_digest<pos:position pos:line="132" pos:column="39"/></name><argument_list pos:line="132" pos:column="39">(<argument><expr><name pos:line="132" pos:column="40">conn<pos:position pos:line="132" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="46">proxy<pos:position pos:line="132" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="53">auth<pos:position pos:line="132" pos:column="57"/></name></expr></argument>)<pos:position pos:line="132" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="59"/></expr_stmt>
            <if pos:line="133" pos:column="13">if<condition pos:line="133" pos:column="15">(<expr><name pos:line="133" pos:column="16">result<pos:position pos:line="133" pos:column="22"/></name></expr>)<pos:position pos:line="133" pos:column="23"/></condition><then pos:line="133" pos:column="23"> <block pos:line="133" pos:column="24">{
              <expr_stmt><expr><call><name pos:line="134" pos:column="15">infof<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><name pos:line="134" pos:column="21">data<pos:position pos:line="134" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="27">"Authentication problem. Ignoring this.\n"<pos:position pos:line="134" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="135" pos:column="15">data<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">-&gt;<pos:position pos:line="135" pos:column="24"/></operator><name pos:line="135" pos:column="21">state<pos:position pos:line="135" pos:column="26"/></name><operator pos:line="135" pos:column="26">.<pos:position pos:line="135" pos:column="27"/></operator><name pos:line="135" pos:column="27">authproblem<pos:position pos:line="135" pos:column="38"/></name></name> <operator pos:line="135" pos:column="39">=<pos:position pos:line="135" pos:column="40"/></operator> <name pos:line="135" pos:column="41">TRUE<pos:position pos:line="135" pos:column="45"/></name></expr>;<pos:position pos:line="135" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="136" pos:column="14"/></block></then></if>
          }<pos:position pos:line="137" pos:column="12"/></block></then></if></elseif></if>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="139" pos:column="9">else
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif<pos:position pos:line="140" pos:column="7"/></cpp:directive></cpp:endif>
          <if pos:line="141" pos:column="11">if<condition pos:line="141" pos:column="13">(<expr><call><name pos:line="141" pos:column="14">checkprefix<pos:position pos:line="141" pos:column="25"/></name><argument_list pos:line="141" pos:column="25">(<argument><expr><literal type="string" pos:line="141" pos:column="26">"Basic"<pos:position pos:line="141" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="35">auth<pos:position pos:line="141" pos:column="39"/></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="141" pos:column="41"/></condition><then pos:line="141" pos:column="41"> <block pos:line="141" pos:column="42">{
            <expr_stmt><expr><operator pos:line="142" pos:column="13">*<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">availp<pos:position pos:line="142" pos:column="20"/></name> <operator pos:line="142" pos:column="21">|=<pos:position pos:line="142" pos:column="23"/></operator> <name pos:line="142" pos:column="24">CURLAUTH_BASIC<pos:position pos:line="142" pos:column="38"/></name></expr>;<pos:position pos:line="142" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="143" pos:column="13">authp<pos:position pos:line="143" pos:column="18"/></name><operator pos:line="143" pos:column="18">-&gt;<pos:position pos:line="143" pos:column="23"/></operator><name pos:line="143" pos:column="20">avail<pos:position pos:line="143" pos:column="25"/></name></name> <operator pos:line="143" pos:column="26">|=<pos:position pos:line="143" pos:column="28"/></operator> <name pos:line="143" pos:column="29">CURLAUTH_BASIC<pos:position pos:line="143" pos:column="43"/></name></expr>;<pos:position pos:line="143" pos:column="44"/></expr_stmt>
            <if pos:line="144" pos:column="13">if<condition pos:line="144" pos:column="15">(<expr><name><name pos:line="144" pos:column="16">authp<pos:position pos:line="144" pos:column="21"/></name><operator pos:line="144" pos:column="21">-&gt;<pos:position pos:line="144" pos:column="26"/></operator><name pos:line="144" pos:column="23">picked<pos:position pos:line="144" pos:column="29"/></name></name> <operator pos:line="144" pos:column="30">==<pos:position pos:line="144" pos:column="32"/></operator> <name pos:line="144" pos:column="33">CURLAUTH_BASIC<pos:position pos:line="144" pos:column="47"/></name></expr>)<pos:position pos:line="144" pos:column="48"/></condition><then pos:line="144" pos:column="48"> <block pos:line="144" pos:column="49">{
              <comment type="block" pos:line="145" pos:column="15">/* We asked for Basic authentication but got a 40X back
                 anyway, which basically means our name+password isn't
                 valid. */</comment>
              <expr_stmt><expr><name><name pos:line="148" pos:column="15">authp<pos:position pos:line="148" pos:column="20"/></name><operator pos:line="148" pos:column="20">-&gt;<pos:position pos:line="148" pos:column="25"/></operator><name pos:line="148" pos:column="22">avail<pos:position pos:line="148" pos:column="27"/></name></name> <operator pos:line="148" pos:column="28">=<pos:position pos:line="148" pos:column="29"/></operator> <name pos:line="148" pos:column="30">CURLAUTH_NONE<pos:position pos:line="148" pos:column="43"/></name></expr>;<pos:position pos:line="148" pos:column="44"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="149" pos:column="15">infof<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><name pos:line="149" pos:column="21">data<pos:position pos:line="149" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="27">"Authentication problem. Ignoring this.\n"<pos:position pos:line="149" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="71"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="150" pos:column="15">data<pos:position pos:line="150" pos:column="19"/></name><operator pos:line="150" pos:column="19">-&gt;<pos:position pos:line="150" pos:column="24"/></operator><name pos:line="150" pos:column="21">state<pos:position pos:line="150" pos:column="26"/></name><operator pos:line="150" pos:column="26">.<pos:position pos:line="150" pos:column="27"/></operator><name pos:line="150" pos:column="27">authproblem<pos:position pos:line="150" pos:column="38"/></name></name> <operator pos:line="150" pos:column="39">=<pos:position pos:line="150" pos:column="40"/></operator> <name pos:line="150" pos:column="41">TRUE<pos:position pos:line="150" pos:column="45"/></name></expr>;<pos:position pos:line="150" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if>
          }<pos:position pos:line="152" pos:column="12"/></block></then></if></elseif></if>

    <comment type="block" pos:line="154" pos:column="5">/* there may be multiple methods on one line, so keep reading */</comment>
    <while pos:line="155" pos:column="5">while<condition pos:line="155" pos:column="10">(<expr><operator pos:line="155" pos:column="11">*<pos:position pos:line="155" pos:column="12"/></operator><name pos:line="155" pos:column="12">auth<pos:position pos:line="155" pos:column="16"/></name> <operator pos:line="155" pos:column="17">&amp;&amp;<pos:position pos:line="155" pos:column="27"/></operator> <operator pos:line="155" pos:column="20">*<pos:position pos:line="155" pos:column="21"/></operator><name pos:line="155" pos:column="21">auth<pos:position pos:line="155" pos:column="25"/></name> <operator pos:line="155" pos:column="26">!=<pos:position pos:line="155" pos:column="28"/></operator> <literal type="char" pos:line="155" pos:column="29">','<pos:position pos:line="155" pos:column="32"/></literal></expr>)<pos:position pos:line="155" pos:column="33"/></condition> <comment type="block" pos:line="155" pos:column="34">/* read up to the next comma */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="7">auth<pos:position pos:line="156" pos:column="11"/></name><operator pos:line="156" pos:column="11">++<pos:position pos:line="156" pos:column="13"/></operator></expr>;<pos:position pos:line="156" pos:column="14"/></expr_stmt></block></while>
    <if pos:line="157" pos:column="5">if<condition pos:line="157" pos:column="7">(<expr><operator pos:line="157" pos:column="8">*<pos:position pos:line="157" pos:column="9"/></operator><name pos:line="157" pos:column="9">auth<pos:position pos:line="157" pos:column="13"/></name> <operator pos:line="157" pos:column="14">==<pos:position pos:line="157" pos:column="16"/></operator> <literal type="char" pos:line="157" pos:column="17">','<pos:position pos:line="157" pos:column="20"/></literal></expr>)<pos:position pos:line="157" pos:column="21"/></condition><then pos:line="157" pos:column="21"> <comment type="block" pos:line="157" pos:column="22">/* if we're on a comma, skip it */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="7">auth<pos:position pos:line="158" pos:column="11"/></name><operator pos:line="158" pos:column="11">++<pos:position pos:line="158" pos:column="13"/></operator></expr>;<pos:position pos:line="158" pos:column="14"/></expr_stmt></block></then></if>
    <while pos:line="159" pos:column="5">while<condition pos:line="159" pos:column="10">(<expr><operator pos:line="159" pos:column="11">*<pos:position pos:line="159" pos:column="12"/></operator><name pos:line="159" pos:column="12">auth<pos:position pos:line="159" pos:column="16"/></name> <operator pos:line="159" pos:column="17">&amp;&amp;<pos:position pos:line="159" pos:column="27"/></operator> <call><name pos:line="159" pos:column="20">ISSPACE<pos:position pos:line="159" pos:column="27"/></name><argument_list pos:line="159" pos:column="27">(<argument><expr><operator pos:line="159" pos:column="28">*<pos:position pos:line="159" pos:column="29"/></operator><name pos:line="159" pos:column="29">auth<pos:position pos:line="159" pos:column="33"/></name></expr></argument>)<pos:position pos:line="159" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="35"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="7">auth<pos:position pos:line="160" pos:column="11"/></name><operator pos:line="160" pos:column="11">++<pos:position pos:line="160" pos:column="13"/></operator></expr>;<pos:position pos:line="160" pos:column="14"/></expr_stmt></block></while>
  }<pos:position pos:line="161" pos:column="4"/></block></while>

  <return pos:line="163" pos:column="3">return <expr><name pos:line="163" pos:column="10">CURLE_OK<pos:position pos:line="163" pos:column="18"/></name></expr>;<pos:position pos:line="163" pos:column="19"/></return>
}<pos:position pos:line="164" pos:column="2"/></block></function></unit>

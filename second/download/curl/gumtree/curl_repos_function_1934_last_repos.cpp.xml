<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1934_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_range<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connectdata<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">curl_off_t<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">from<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">to<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">ftp_conn<pos:position pos:line="6" pos:column="18"/></name></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">ftpc<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">&amp;<pos:position pos:line="6" pos:column="32"/></operator><name><name pos:line="6" pos:column="28">conn<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">proto<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">ftpc<pos:position pos:line="6" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">state<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">use_range<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">&amp;&amp;<pos:position pos:line="8" pos:column="38"/></operator> <name><name pos:line="8" pos:column="31">data<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">state<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">.<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">range<pos:position pos:line="8" pos:column="48"/></name></name></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">CURLofft<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">from_t<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">CURLofft<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">to_t<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">from_t<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">curlx_strtoofft<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name><name pos:line="11" pos:column="30">data<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">state<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">range<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="50">ptr<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="55">0<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">from<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">(<expr><name pos:line="12" pos:column="8">from_t<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">CURL_OFFT_FLOW<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">CURLE_RANGE_ERROR<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>
    <while pos:line="14" pos:column="5">while<condition pos:line="14" pos:column="10">(<expr><operator pos:line="14" pos:column="11">*<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">ptr<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&amp;&amp;<pos:position pos:line="14" pos:column="26"/></operator> <operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><call><name pos:line="14" pos:column="20">ISSPACE<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">ptr<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call> <operator pos:line="14" pos:column="34">||<pos:position pos:line="14" pos:column="36"/></operator> <operator pos:line="14" pos:column="37">(<pos:position pos:line="14" pos:column="38"/></operator><operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">ptr<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">==<pos:position pos:line="14" pos:column="45"/></operator> <literal type="char" pos:line="14" pos:column="46">'-'<pos:position pos:line="14" pos:column="49"/></literal><operator pos:line="14" pos:column="49">)<pos:position pos:line="14" pos:column="50"/></operator><operator pos:line="14" pos:column="50">)<pos:position pos:line="14" pos:column="51"/></operator></expr>)<pos:position pos:line="14" pos:column="52"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">ptr<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">++<pos:position pos:line="15" pos:column="12"/></operator></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="16" pos:column="5">to_t<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">curlx_strtoofft<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">ptr<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">NULL<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="39">0<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">to<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">to_t<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">CURL_OFFT_FLOW<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31">
      <block type="pseudo"><return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">CURLE_RANGE_ERROR<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return></block></then></if>
    <if pos:line="19" pos:column="5">if<condition pos:line="19" pos:column="7">(<expr><operator pos:line="19" pos:column="8">(<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">to_t<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">CURL_OFFT_INVAL<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">)<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="34">&amp;&amp;<pos:position pos:line="19" pos:column="44"/></operator> <operator pos:line="19" pos:column="37">!<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">from_t<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
      <comment type="block" pos:line="20" pos:column="7">/* X - */</comment>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">data<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">state<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">resume_from<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">from<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">DEBUGF<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><call><name pos:line="22" pos:column="14">infof<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name><name pos:line="22" pos:column="20">conn<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">data<pos:position pos:line="22" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"FTP RANGE %"<pos:position pos:line="22" pos:column="45"/></literal> <name pos:line="22" pos:column="46">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="22" pos:column="68"/></name>
                   <literal type="string" pos:line="23" pos:column="20">" to end of file\n"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">from<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if<condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">to_t<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&amp;&amp;<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">from_t<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">==<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">CURL_OFFT_INVAL<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">)<pos:position pos:line="25" pos:column="49"/></operator></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50"> <block pos:line="25" pos:column="51">{
      <comment type="block" pos:line="26" pos:column="7">/* -Y */</comment>
      <expr_stmt><expr><name><name pos:line="27" pos:column="7">data<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">req<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">maxdownload<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">to<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">data<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">state<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">resume_from<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">to<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">DEBUGF<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><call><name pos:line="29" pos:column="14">infof<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">conn<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">data<pos:position pos:line="29" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="32">"FTP RANGE the last %"<pos:position pos:line="29" pos:column="54"/></literal> <name pos:line="29" pos:column="55">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="29" pos:column="77"/></name>
                   <literal type="string" pos:line="30" pos:column="20">" bytes\n"<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">to<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif>
    <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
      <comment type="block" pos:line="33" pos:column="7">/* X-Y */</comment>
      <expr_stmt><expr><name><name pos:line="34" pos:column="7">data<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">req<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">maxdownload<pos:position pos:line="34" pos:column="28"/></name></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <operator pos:line="34" pos:column="31">(<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">to<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">-<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">from<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">)<pos:position pos:line="34" pos:column="42"/></operator> <operator pos:line="34" pos:column="43">+<pos:position pos:line="34" pos:column="44"/></operator> <literal type="number" pos:line="34" pos:column="45">1<pos:position pos:line="34" pos:column="46"/></literal></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt> <comment type="block" pos:line="34" pos:column="48">/* include last byte */</comment>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">data<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">state<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">resume_from<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="33">from<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">DEBUGF<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><call><name pos:line="36" pos:column="14">infof<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name><name pos:line="36" pos:column="20">conn<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">data<pos:position pos:line="36" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="32">"FTP RANGE from %"<pos:position pos:line="36" pos:column="50"/></literal> <name pos:line="36" pos:column="51">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="36" pos:column="73"/></name>
                   <literal type="string" pos:line="37" pos:column="20">" getting %"<pos:position pos:line="37" pos:column="32"/></literal> <name pos:line="37" pos:column="33">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="37" pos:column="55"/></name> <literal type="string" pos:line="37" pos:column="56">" bytes\n"<pos:position pos:line="37" pos:column="66"/></literal></expr></argument>,
                   <argument><expr><name pos:line="38" pos:column="20">from<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="26">data<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">req<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">maxdownload<pos:position pos:line="38" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">DEBUGF<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><call><name pos:line="40" pos:column="12">infof<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name><name pos:line="40" pos:column="18">conn<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">data<pos:position pos:line="40" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="30">"range-download from %"<pos:position pos:line="40" pos:column="53"/></literal> <name pos:line="40" pos:column="54">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="40" pos:column="76"/></name>
                 <literal type="string" pos:line="41" pos:column="18">" to %"<pos:position pos:line="41" pos:column="25"/></literal> <name pos:line="41" pos:column="26">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="41" pos:column="48"/></name> <literal type="string" pos:line="41" pos:column="49">", totally %"<pos:position pos:line="41" pos:column="62"/></literal>
                 <name pos:line="42" pos:column="18">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="42" pos:column="40"/></name> <literal type="string" pos:line="42" pos:column="41">" bytes\n"<pos:position pos:line="42" pos:column="51"/></literal></expr></argument>,
                 <argument><expr><name pos:line="43" pos:column="18">from<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="24">to<pos:position pos:line="43" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="28">data<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">req<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">.<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">maxdownload<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">ftpc<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">dont_check<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">TRUE<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt> <comment type="block" pos:line="44" pos:column="30">/* don't check for successful transfer */</comment>
  }<pos:position pos:line="45" pos:column="4"/></block></then>
  <else pos:line="46" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="5">data<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">-&gt;<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="11">req<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">.<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">maxdownload<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="29">-<pos:position pos:line="47" pos:column="30"/></operator><literal type="number" pos:line="47" pos:column="30">1<pos:position pos:line="47" pos:column="31"/></literal></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt></block></else></if>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">CURLE_OK<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

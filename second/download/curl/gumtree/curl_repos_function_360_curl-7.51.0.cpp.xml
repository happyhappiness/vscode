<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_360_curl-7.51.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">curl_easy_getinfo_ccsid<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">CURL<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">curl<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">CURLINFO<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">info<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="2" pos:column="53">...<pos:position pos:line="2" pos:column="56"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">va_list<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">arg<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">void<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type> <name pos:line="6" pos:column="10">paramp<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLcode<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">ret<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">ccsid<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type> <name pos:line="9" pos:column="12">cpp<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">Curl_easy<pos:position pos:line="10" pos:column="19"/></name></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type> <name pos:line="10" pos:column="22">data<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">curl_slist<pos:position pos:line="11" pos:column="20"/></name></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier> <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier></type> <name pos:line="11" pos:column="25">slp<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">curl_certinfo<pos:position pos:line="12" pos:column="23"/></name></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type> <name pos:line="12" pos:column="26">cipf<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">struct<pos:position pos:line="13" pos:column="9"/></name> <name pos:line="13" pos:column="10">curl_certinfo<pos:position pos:line="13" pos:column="23"/></name></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type> <name pos:line="13" pos:column="26">cipt<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>

  <comment type="block" pos:line="15" pos:column="3">/* WARNING: unlike curl_easy_get_info(), the strings returned by this
     procedure have to be free'ed. */</comment>

  <expr_stmt><expr><name pos:line="18" pos:column="3">data<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator>struct <name pos:line="18" pos:column="18">Curl_easy<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></operator><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">curl<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">va_start<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">arg<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="17">info<pos:position pos:line="19" pos:column="21"/></name></expr></argument>)<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">paramp<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">va_arg<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">arg<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">void<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">ret<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">Curl_getinfo<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">data<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">info<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">paramp<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>

  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><name pos:line="23" pos:column="6">ret<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">==<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">CURLE_OK<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22">
    <block type="pseudo"><switch pos:line="24" pos:column="5">switch <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">int<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">)<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">info<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&amp;<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="26">CURLINFO_TYPEMASK<pos:position pos:line="24" pos:column="43"/></name></expr>)<pos:position pos:line="24" pos:column="44"/></condition> <block pos:line="24" pos:column="45">{

    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">CURLINFO_STRING<pos:position pos:line="26" pos:column="25"/></name></expr>:<pos:position pos:line="26" pos:column="26"/></case>
      <expr_stmt><expr><name pos:line="27" pos:column="7">ccsid<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <macro><name pos:line="27" pos:column="15">va_arg<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument pos:line="27" pos:column="22">arg<pos:position pos:line="27" pos:column="25"/></argument>, <argument pos:line="27" pos:column="27">unsigned int<pos:position pos:line="27" pos:column="39"/></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></macro></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">cpp<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">char<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></operator> <operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><operator pos:line="28" pos:column="22">)<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">paramp<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>

      <if pos:line="30" pos:column="7">if<condition pos:line="30" pos:column="9">(<expr><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">cpp<pos:position pos:line="30" pos:column="14"/></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15"> <block pos:line="30" pos:column="16">{
        <expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">cpp<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">dynconvert<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">ccsid<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="34">*<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">cpp<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="40">-<pos:position pos:line="31" pos:column="41"/></operator><literal type="number" pos:line="31" pos:column="41">1<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">ASCII_CCSID<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>

        <if pos:line="33" pos:column="9">if<condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">!<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">cpp<pos:position pos:line="33" pos:column="17"/></name></expr>)<pos:position pos:line="33" pos:column="18"/></condition><then pos:line="33" pos:column="18">
          <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="11">ret<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">CURLE_OUT_OF_MEMORY<pos:position pos:line="34" pos:column="36"/></name></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt></block></then></if>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>

      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>

    <case pos:line="39" pos:column="5">case <expr><name pos:line="39" pos:column="10">CURLINFO_SLIST<pos:position pos:line="39" pos:column="24"/></name></expr>:<pos:position pos:line="39" pos:column="25"/></case>
      <expr_stmt><expr><name pos:line="40" pos:column="7">ccsid<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <macro><name pos:line="40" pos:column="15">va_arg<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument pos:line="40" pos:column="22">arg<pos:position pos:line="40" pos:column="25"/></argument>, <argument pos:line="40" pos:column="27">unsigned int<pos:position pos:line="40" pos:column="39"/></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></macro></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
      <switch pos:line="41" pos:column="7">switch <condition pos:line="41" pos:column="14">(<expr><name pos:line="41" pos:column="15">info<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition> <block pos:line="41" pos:column="21">{
      <case pos:line="42" pos:column="7">case <expr><name pos:line="42" pos:column="12">CURLINFO_CERTINFO<pos:position pos:line="42" pos:column="29"/></name></expr>:<pos:position pos:line="42" pos:column="30"/></case>
        <expr_stmt><expr><name pos:line="43" pos:column="9">cipf<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <operator pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></operator><operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator>struct <name pos:line="43" pos:column="25">curl_certinfo<pos:position pos:line="43" pos:column="38"/></name> <operator pos:line="43" pos:column="39">*<pos:position pos:line="43" pos:column="40"/></operator> <operator pos:line="43" pos:column="41">*<pos:position pos:line="43" pos:column="42"/></operator><operator pos:line="43" pos:column="42">)<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">paramp<pos:position pos:line="43" pos:column="50"/></name></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
        <if pos:line="44" pos:column="9">if<condition pos:line="44" pos:column="11">(<expr><name pos:line="44" pos:column="12">cipf<pos:position pos:line="44" pos:column="16"/></name></expr>)<pos:position pos:line="44" pos:column="17"/></condition><then pos:line="44" pos:column="17"> <block pos:line="44" pos:column="18">{
          <if pos:line="45" pos:column="11">if<condition pos:line="45" pos:column="13">(<expr><operator pos:line="45" pos:column="14">!<pos:position pos:line="45" pos:column="15"/></operator><operator pos:line="45" pos:column="15">(<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">cipt<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <operator pos:line="45" pos:column="23">(<pos:position pos:line="45" pos:column="24"/></operator>struct <name pos:line="45" pos:column="31">curl_certinfo<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">*<pos:position pos:line="45" pos:column="46"/></operator><operator pos:line="45" pos:column="46">)<pos:position pos:line="45" pos:column="47"/></operator> <call><name pos:line="45" pos:column="48">malloc<pos:position pos:line="45" pos:column="54"/></name><argument_list pos:line="45" pos:column="54">(<argument><expr><sizeof pos:line="45" pos:column="55">sizeof <name><pos:position pos:line="45" pos:column="62"/></name></sizeof>*<name pos:line="45" pos:column="63">cipt<pos:position pos:line="45" pos:column="67"/></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call><operator pos:line="45" pos:column="68">)<pos:position pos:line="45" pos:column="69"/></operator></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70">
            <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="13">ret<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">CURLE_OUT_OF_MEMORY<pos:position pos:line="46" pos:column="38"/></name></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt></block></then>
          <else pos:line="47" pos:column="11">else <block pos:line="47" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="48" pos:column="13">cipt<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">certinfo<pos:position pos:line="48" pos:column="27"/></name></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <operator pos:line="48" pos:column="30">(<pos:position pos:line="48" pos:column="31"/></operator>struct <name pos:line="48" pos:column="38">curl_slist<pos:position pos:line="48" pos:column="48"/></name> <operator pos:line="48" pos:column="49">*<pos:position pos:line="48" pos:column="50"/></operator> <operator pos:line="48" pos:column="51">*<pos:position pos:line="48" pos:column="52"/></operator><operator pos:line="48" pos:column="52">)<pos:position pos:line="48" pos:column="53"/></operator>
                             <call><name pos:line="49" pos:column="30">calloc<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name><name pos:line="49" pos:column="37">cipf<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">num_of_certs<pos:position pos:line="49" pos:column="55"/></name></name> <operator pos:line="49" pos:column="56">+<pos:position pos:line="49" pos:column="57"/></operator>
                                    <literal type="number" pos:line="50" pos:column="37">1<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="40">sizeof<argument_list pos:line="50" pos:column="46">(<argument><expr pos:line="50" pos:column="47">struct <name pos:line="50" pos:column="54">curl_slist<pos:position pos:line="50" pos:column="64"/></name> <operator pos:line="50" pos:column="65">*<pos:position pos:line="50" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
            <if pos:line="51" pos:column="13">if<condition pos:line="51" pos:column="15">(<expr><operator pos:line="51" pos:column="16">!<pos:position pos:line="51" pos:column="17"/></operator><name><name pos:line="51" pos:column="17">cipt<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">certinfo<pos:position pos:line="51" pos:column="31"/></name></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32">
              <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="15">ret<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <name pos:line="52" pos:column="21">CURLE_OUT_OF_MEMORY<pos:position pos:line="52" pos:column="40"/></name></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt></block></then>
            <else pos:line="53" pos:column="13">else <block pos:line="53" pos:column="18">{
              <decl_stmt><decl><type><name pos:line="54" pos:column="15">int<pos:position pos:line="54" pos:column="18"/></name></type> <name pos:line="54" pos:column="19">i<pos:position pos:line="54" pos:column="20"/></name></decl>;<pos:position pos:line="54" pos:column="21"/></decl_stmt>

              <expr_stmt><expr><name><name pos:line="56" pos:column="15">cipt<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">num_of_certs<pos:position pos:line="56" pos:column="33"/></name></name> <operator pos:line="56" pos:column="34">=<pos:position pos:line="56" pos:column="35"/></operator> <name><name pos:line="56" pos:column="36">cipf<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">num_of_certs<pos:position pos:line="56" pos:column="54"/></name></name></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
              <for pos:line="57" pos:column="15">for<control pos:line="57" pos:column="18">(<init><expr><name pos:line="57" pos:column="19">i<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <literal type="number" pos:line="57" pos:column="23">0<pos:position pos:line="57" pos:column="24"/></literal></expr>;<pos:position pos:line="57" pos:column="25"/></init> <condition><expr><name pos:line="57" pos:column="26">i<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">&lt;<pos:position pos:line="57" pos:column="32"/></operator> <name><name pos:line="57" pos:column="30">cipf<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">num_of_certs<pos:position pos:line="57" pos:column="48"/></name></name></expr>;<pos:position pos:line="57" pos:column="49"/></condition> <incr><expr><name pos:line="57" pos:column="50">i<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">++<pos:position pos:line="57" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="54"/></control>
                <block type="pseudo"><if pos:line="58" pos:column="17">if<condition pos:line="58" pos:column="19">(<expr><name><name pos:line="58" pos:column="20">cipf<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">certinfo<pos:position pos:line="58" pos:column="34"/></name><index pos:line="58" pos:column="34">[<expr><name pos:line="58" pos:column="35">i<pos:position pos:line="58" pos:column="36"/></name></expr>]<pos:position pos:line="58" pos:column="37"/></index></name></expr>)<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38">
                  <block type="pseudo"><if pos:line="59" pos:column="19">if<condition pos:line="59" pos:column="21">(<expr><operator pos:line="59" pos:column="22">!<pos:position pos:line="59" pos:column="23"/></operator><operator pos:line="59" pos:column="23">(<pos:position pos:line="59" pos:column="24"/></operator><name><name pos:line="59" pos:column="24">cipt<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">certinfo<pos:position pos:line="59" pos:column="38"/></name><index pos:line="59" pos:column="38">[<expr><name pos:line="59" pos:column="39">i<pos:position pos:line="59" pos:column="40"/></name></expr>]<pos:position pos:line="59" pos:column="41"/></index></name> <operator pos:line="59" pos:column="42">=<pos:position pos:line="59" pos:column="43"/></operator> <call><name pos:line="59" pos:column="44">slist_convert<pos:position pos:line="59" pos:column="57"/></name><argument_list pos:line="59" pos:column="57">(<argument><expr><name pos:line="59" pos:column="58">ccsid<pos:position pos:line="59" pos:column="63"/></name></expr></argument>,
                                                          <argument><expr><name><name pos:line="60" pos:column="59">cipf<pos:position pos:line="60" pos:column="63"/></name><operator pos:line="60" pos:column="63">-&gt;<pos:position pos:line="60" pos:column="68"/></operator><name pos:line="60" pos:column="65">certinfo<pos:position pos:line="60" pos:column="73"/></name><index pos:line="60" pos:column="73">[<expr><name pos:line="60" pos:column="74">i<pos:position pos:line="60" pos:column="75"/></name></expr>]<pos:position pos:line="60" pos:column="76"/></index></name></expr></argument>,
                                                          <argument><expr><name pos:line="61" pos:column="59">ASCII_CCSID<pos:position pos:line="61" pos:column="70"/></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call><operator pos:line="61" pos:column="71">)<pos:position pos:line="61" pos:column="72"/></operator></expr>)<pos:position pos:line="61" pos:column="73"/></condition><then pos:line="61" pos:column="73"> <block pos:line="61" pos:column="74">{
                    <expr_stmt><expr><name pos:line="62" pos:column="21">ret<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">CURLE_OUT_OF_MEMORY<pos:position pos:line="62" pos:column="46"/></name></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
                    <break pos:line="63" pos:column="21">break;<pos:position pos:line="63" pos:column="27"/></break>
                  }<pos:position pos:line="64" pos:column="20"/></block></then></if></block></then></if></block></for>
              }<pos:position pos:line="65" pos:column="16"/></block></else></if>
            }<pos:position pos:line="66" pos:column="14"/></block></else></if>

          <if pos:line="68" pos:column="11">if<condition pos:line="68" pos:column="13">(<expr><name pos:line="68" pos:column="14">ret<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">!=<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">CURLE_OK<pos:position pos:line="68" pos:column="29"/></name></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">curl_certinfo_free_all<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">cipt<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="70" pos:column="13">cipt<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <operator pos:line="70" pos:column="20">(<pos:position pos:line="70" pos:column="21"/></operator>struct <name pos:line="70" pos:column="28">curl_certinfo<pos:position pos:line="70" pos:column="41"/></name> <operator pos:line="70" pos:column="42">*<pos:position pos:line="70" pos:column="43"/></operator><operator pos:line="70" pos:column="43">)<pos:position pos:line="70" pos:column="44"/></operator> <name pos:line="70" pos:column="45">NULL<pos:position pos:line="70" pos:column="49"/></name></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt>
          }<pos:position pos:line="71" pos:column="12"/></block></then></if>

          <expr_stmt><expr><operator pos:line="73" pos:column="11">*<pos:position pos:line="73" pos:column="12"/></operator><operator pos:line="73" pos:column="12">(<pos:position pos:line="73" pos:column="13"/></operator>struct <name pos:line="73" pos:column="20">curl_certinfo<pos:position pos:line="73" pos:column="33"/></name> <operator pos:line="73" pos:column="34">*<pos:position pos:line="73" pos:column="35"/></operator> <operator pos:line="73" pos:column="36">*<pos:position pos:line="73" pos:column="37"/></operator><operator pos:line="73" pos:column="37">)<pos:position pos:line="73" pos:column="38"/></operator> <name pos:line="73" pos:column="39">paramp<pos:position pos:line="73" pos:column="45"/></name> <operator pos:line="73" pos:column="46">=<pos:position pos:line="73" pos:column="47"/></operator> <name pos:line="73" pos:column="48">cipt<pos:position pos:line="73" pos:column="52"/></name></expr>;<pos:position pos:line="73" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>

        <break pos:line="76" pos:column="9">break;<pos:position pos:line="76" pos:column="15"/></break>

      <case pos:line="78" pos:column="7">case <expr><name pos:line="78" pos:column="12">CURLINFO_TLS_SESSION<pos:position pos:line="78" pos:column="32"/></name></expr>:<pos:position pos:line="78" pos:column="33"/></case>
      <case pos:line="79" pos:column="7">case <expr><name pos:line="79" pos:column="12">CURLINFO_TLS_SSL_PTR<pos:position pos:line="79" pos:column="32"/></name></expr>:<pos:position pos:line="79" pos:column="33"/></case>
      <case pos:line="80" pos:column="7">case <expr><name pos:line="80" pos:column="12">CURLINFO_SOCKET<pos:position pos:line="80" pos:column="27"/></name></expr>:<pos:position pos:line="80" pos:column="28"/></case>
        <break pos:line="81" pos:column="9">break;<pos:position pos:line="81" pos:column="15"/></break>

      <default pos:line="83" pos:column="7">default:<pos:position pos:line="83" pos:column="15"/></default>
        <expr_stmt><expr><name pos:line="84" pos:column="9">slp<pos:position pos:line="84" pos:column="12"/></name> <operator pos:line="84" pos:column="13">=<pos:position pos:line="84" pos:column="14"/></operator> <operator pos:line="84" pos:column="15">(<pos:position pos:line="84" pos:column="16"/></operator>struct <name pos:line="84" pos:column="23">curl_slist<pos:position pos:line="84" pos:column="33"/></name> <operator pos:line="84" pos:column="34">*<pos:position pos:line="84" pos:column="35"/></operator> <operator pos:line="84" pos:column="36">*<pos:position pos:line="84" pos:column="37"/></operator><operator pos:line="84" pos:column="37">)<pos:position pos:line="84" pos:column="38"/></operator> <name pos:line="84" pos:column="39">paramp<pos:position pos:line="84" pos:column="45"/></name></expr>;<pos:position pos:line="84" pos:column="46"/></expr_stmt>
        <if pos:line="85" pos:column="9">if<condition pos:line="85" pos:column="11">(<expr><operator pos:line="85" pos:column="12">*<pos:position pos:line="85" pos:column="13"/></operator><name pos:line="85" pos:column="13">slp<pos:position pos:line="85" pos:column="16"/></name></expr>)<pos:position pos:line="85" pos:column="17"/></condition><then pos:line="85" pos:column="17">
          <block type="pseudo"><if pos:line="86" pos:column="11">if<condition pos:line="86" pos:column="13">(<expr><operator pos:line="86" pos:column="14">!<pos:position pos:line="86" pos:column="15"/></operator><operator pos:line="86" pos:column="15">(<pos:position pos:line="86" pos:column="16"/></operator><operator pos:line="86" pos:column="16">*<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="17">slp<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <call><name pos:line="86" pos:column="23">slist_convert<pos:position pos:line="86" pos:column="36"/></name><argument_list pos:line="86" pos:column="36">(<argument><expr><name pos:line="86" pos:column="37">ccsid<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="44">*<pos:position pos:line="86" pos:column="45"/></operator><name pos:line="86" pos:column="45">slp<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="50">ASCII_CCSID<pos:position pos:line="86" pos:column="61"/></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call><operator pos:line="86" pos:column="62">)<pos:position pos:line="86" pos:column="63"/></operator></expr>)<pos:position pos:line="86" pos:column="64"/></condition><then pos:line="86" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="13">ret<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">CURLE_OUT_OF_MEMORY<pos:position pos:line="87" pos:column="38"/></name></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt></block></then></if></block></then></if>
        <break pos:line="88" pos:column="9">break;<pos:position pos:line="88" pos:column="15"/></break>
      }<pos:position pos:line="89" pos:column="8"/></block></switch>
    }<pos:position pos:line="90" pos:column="6"/></block></switch></block></then></if>

  <expr_stmt><expr><call><name pos:line="92" pos:column="3">va_end<pos:position pos:line="92" pos:column="9"/></name><argument_list pos:line="92" pos:column="9">(<argument><expr><name pos:line="92" pos:column="10">arg<pos:position pos:line="92" pos:column="13"/></name></expr></argument>)<pos:position pos:line="92" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="15"/></expr_stmt>
  <return pos:line="93" pos:column="3">return <expr><name pos:line="93" pos:column="10">ret<pos:position pos:line="93" pos:column="13"/></name></expr>;<pos:position pos:line="93" pos:column="14"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1011_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Curl_sndbufset<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">curl_socket_t<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">sockfd<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">val<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">CURL_MAX_WRITE_SIZE<pos:position pos:line="3" pos:column="32"/></name> <operator pos:line="3" pos:column="33">+<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="35">32<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">curval<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">curlen<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><sizeof pos:line="5" pos:column="16">sizeof<argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">curval<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier> <type><name pos:line="7" pos:column="10">int<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">detectOsState<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">DETECT_OS_NONE<pos:position pos:line="7" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name pos:line="9" pos:column="6">detectOsState<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">DETECT_OS_NONE<pos:position pos:line="9" pos:column="37"/></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38"> <block pos:line="9" pos:column="39">{
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><call><name pos:line="10" pos:column="8">Curl_verify_windows_version<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><literal type="number" pos:line="10" pos:column="36">6<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">PLATFORM_WINNT<pos:position pos:line="10" pos:column="56"/></name></expr></argument>,
                                   <argument><expr><name pos:line="11" pos:column="36">VERSION_GREATER_THAN_EQUAL<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="64"/></condition><then pos:line="11" pos:column="64">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">detectOsState<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">DETECT_OS_VISTA_OR_LATER<pos:position pos:line="12" pos:column="47"/></name></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="7">detectOsState<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">DETECT_OS_PREVISTA<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt></block></else></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><name pos:line="17" pos:column="6">detectOsState<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">DETECT_OS_VISTA_OR_LATER<pos:position pos:line="17" pos:column="47"/></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
    <block type="pseudo"><return pos:line="18" pos:column="5">return;<pos:position pos:line="18" pos:column="12"/></return></block></then></if>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><call><name pos:line="20" pos:column="6">getsockopt<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">sockfd<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="25">SOL_SOCKET<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">SO_SNDBUF<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="48">(<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">char<pos:position pos:line="20" pos:column="53"/></name> <operator pos:line="20" pos:column="54">*<pos:position pos:line="20" pos:column="55"/></operator><operator pos:line="20" pos:column="55">)<pos:position pos:line="20" pos:column="56"/></operator><operator pos:line="20" pos:column="56">&amp;<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="57">curval<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="65">&amp;<pos:position pos:line="20" pos:column="70"/></operator><name pos:line="20" pos:column="66">curlen<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call> <operator pos:line="20" pos:column="74">==<pos:position pos:line="20" pos:column="76"/></operator> <literal type="number" pos:line="20" pos:column="77">0<pos:position pos:line="20" pos:column="78"/></literal></expr>)<pos:position pos:line="20" pos:column="79"/></condition><then pos:line="20" pos:column="79">
    <block type="pseudo"><if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">curval<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">&gt;<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="17">val<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
      <block type="pseudo"><return pos:line="22" pos:column="7">return;<pos:position pos:line="22" pos:column="14"/></return></block></then></if></block></then></if>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">setsockopt<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">sockfd<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="22">SOL_SOCKET<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">SO_SNDBUF<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="45">(<pos:position pos:line="24" pos:column="46"/></operator><specifier pos:line="24" pos:column="46">const<pos:position pos:line="24" pos:column="51"/></specifier> <name pos:line="24" pos:column="52">char<pos:position pos:line="24" pos:column="56"/></name> <operator pos:line="24" pos:column="57">*<pos:position pos:line="24" pos:column="58"/></operator><operator pos:line="24" pos:column="58">)<pos:position pos:line="24" pos:column="59"/></operator><operator pos:line="24" pos:column="59">&amp;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="60">val<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="65">sizeof<argument_list pos:line="24" pos:column="71">(<argument><expr><name pos:line="24" pos:column="72">val<pos:position pos:line="24" pos:column="75"/></name></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_79_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">my_fwrite<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">buffer<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">size_t<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">size<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">nmemb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">stream<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">OutStruct<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">out<pos:position pos:line="3" pos:column="24"/></name><init pos:line="3" pos:column="24">=<expr><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator>struct <name pos:line="3" pos:column="33">OutStruct<pos:position pos:line="3" pos:column="42"/></name> <operator pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></operator><operator pos:line="3" pos:column="44">)<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">stream<pos:position pos:line="3" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Configurable<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">config<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name><name pos:line="4" pos:column="33">out<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">config<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><name pos:line="5" pos:column="6">out<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">&amp;&amp;<pos:position pos:line="5" pos:column="20"/></operator> <operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">out<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">stream<pos:position pos:line="5" pos:column="25"/></name></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{
    <comment type="block" pos:line="6" pos:column="5">/* open file for writing */</comment>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">out<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">stream<pos:position pos:line="7" pos:column="16"/></name></name><operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator><call><name pos:line="7" pos:column="17">fopen<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name><name pos:line="7" pos:column="23">out<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">filename<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"wb"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><operator pos:line="8" pos:column="8">!<pos:position pos:line="8" pos:column="9"/></operator><name><name pos:line="8" pos:column="9">out<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">stream<pos:position pos:line="8" pos:column="20"/></name></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><operator pos:line="9" pos:column="14">-<pos:position pos:line="9" pos:column="15"/></operator><literal type="number" pos:line="9" pos:column="15">1<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if> <comment type="block" pos:line="9" pos:column="18">/* failure */</comment>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name><name pos:line="10" pos:column="8">config<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">nobuffer<pos:position pos:line="10" pos:column="24"/></name></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
      <comment type="block" pos:line="11" pos:column="7">/* disable output buffering */</comment>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">HAVE_SETVBUF<pos:position pos:line="12" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">setvbuf<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">out<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">stream<pos:position pos:line="13" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">_IONBF<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="42">0<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name><name pos:line="18" pos:column="6">config<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">recvpersecond<pos:position pos:line="18" pos:column="27"/></name></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block pos:line="18" pos:column="29">{
    <comment type="block" pos:line="19" pos:column="5">/*
     * We know when we received data the previous time. We know how much data
     * we get now. Make sure that this is not faster than we are told to run.
     * If we're faster, sleep a while *before* doing the fwrite() here.
     */</comment>

    <decl_stmt><decl><type><name pos:line="25" pos:column="5">time_t<pos:position pos:line="25" pos:column="11"/></name></type> <name pos:line="25" pos:column="12">timediff<pos:position pos:line="25" pos:column="20"/></name></decl>;<pos:position pos:line="25" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">time_t<pos:position pos:line="26" pos:column="11"/></name></type> <name pos:line="26" pos:column="12">now<pos:position pos:line="26" pos:column="15"/></name></decl>;<pos:position pos:line="26" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">now<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">time<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr></argument>)<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">timediff<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">now<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">-<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="22">config<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">lastrecvtime<pos:position pos:line="29" pos:column="42"/></name></name></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">( <expr><name pos:line="30" pos:column="9">size<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">nmemb<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">&gt;<pos:position pos:line="30" pos:column="24"/></operator> <name><name pos:line="30" pos:column="22">config<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">recvpersecond<pos:position pos:line="30" pos:column="43"/></name></name><operator pos:line="30" pos:column="43">*<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">timediff<pos:position pos:line="30" pos:column="52"/></name></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53"> <block pos:line="30" pos:column="54">{
      <comment type="block" pos:line="31" pos:column="7">/* figure out how many milliseconds to rest */</comment>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">go_sleep<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">( <argument><expr><operator pos:line="32" pos:column="18">(<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">size<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">nmemb<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator><operator pos:line="32" pos:column="30">*<pos:position pos:line="32" pos:column="31"/></operator><literal type="number" pos:line="32" pos:column="31">1000<pos:position pos:line="32" pos:column="35"/></literal><operator pos:line="32" pos:column="35">/<pos:position pos:line="32" pos:column="36"/></operator><name><name pos:line="32" pos:column="36">config<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">recvpersecond<pos:position pos:line="32" pos:column="57"/></name></name> <operator pos:line="32" pos:column="58">-<pos:position pos:line="32" pos:column="59"/></operator> <name pos:line="32" pos:column="60">timediff<pos:position pos:line="32" pos:column="68"/></name><operator pos:line="32" pos:column="68">*<pos:position pos:line="32" pos:column="69"/></operator><literal type="number" pos:line="32" pos:column="69">1000<pos:position pos:line="32" pos:column="73"/></literal></expr></argument> )<pos:position pos:line="32" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name pos:line="33" pos:column="7">now<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">time<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">NULL<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">config<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">lastrecvtime<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">now<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <return pos:line="38" pos:column="3">return <expr><call><name pos:line="38" pos:column="10">fwrite<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">buffer<pos:position pos:line="38" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="25">size<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">nmemb<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="38">out<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">stream<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

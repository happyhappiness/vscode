<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_613_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_file_connect<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">connectdata<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">conn<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">real_path<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">curl_unescape<pos:position pos:line="3" pos:column="34"/></name><argument_list pos:line="3" pos:column="34">(<argument><expr><name><name pos:line="3" pos:column="35">conn<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">path<pos:position pos:line="3" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="47">0<pos:position pos:line="3" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">FILEPROTO<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">file<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">fd<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><call><name pos:line="6" pos:column="5">defined<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">WIN32<pos:position pos:line="6" pos:column="18"/></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call> <operator pos:line="6" pos:column="20">||<pos:position pos:line="6" pos:column="22"/></operator> <call><name pos:line="6" pos:column="23">defined<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">MSDOS<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">||<pos:position pos:line="6" pos:column="40"/></operator> <call><name pos:line="6" pos:column="41">defined<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name pos:line="6" pos:column="49">__EMX__<pos:position pos:line="6" pos:column="56"/></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">i<pos:position pos:line="7" pos:column="8"/></name></decl>;<pos:position pos:line="7" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">actual_path<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">real_path<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">file<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator>struct <name pos:line="14" pos:column="18">FILEPROTO<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></operator><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator><call><name pos:line="14" pos:column="30">calloc<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><sizeof pos:line="14" pos:column="37">sizeof<argument_list pos:line="14" pos:column="43">(<argument><expr pos:line="14" pos:column="44">struct <name pos:line="14" pos:column="51">FILEPROTO<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="63">1<pos:position pos:line="14" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">file<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12"> <block pos:line="15" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">free<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name pos:line="16" pos:column="10">real_path<pos:position pos:line="16" pos:column="19"/></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">conn<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">proto<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">file<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">file<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><call><name pos:line="22" pos:column="5">defined<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">WIN32<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call> <operator pos:line="22" pos:column="20">||<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">defined<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">MSDOS<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call> <operator pos:line="22" pos:column="38">||<pos:position pos:line="22" pos:column="40"/></operator> <call><name pos:line="22" pos:column="41">defined<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">__EMX__<pos:position pos:line="22" pos:column="56"/></name></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="23" pos:column="3">/* If the first character is a slash, and there's
     something that looks like a drive at the beginning of
     the path, skip the slash.  If we remove the initial
     slash in all cases, paths without drive letters end up
     relative to the current directory which isn't how
     browsers work.

     Some browsers accept | instead of : as the drive letter
     separator, so we do too.

     On other platforms, we need the slash to indicate an
     absolute pathname.  On Windows, absolute paths start
     with a drive letter.
  */</comment>
  <expr_stmt><expr><name pos:line="37" pos:column="3">actual_path<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">real_path<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><name><name pos:line="38" pos:column="8">actual_path<pos:position pos:line="38" pos:column="19"/></name><index pos:line="38" pos:column="19">[<expr><literal type="number" pos:line="38" pos:column="20">0<pos:position pos:line="38" pos:column="21"/></literal></expr>]<pos:position pos:line="38" pos:column="22"/></index></name> <operator pos:line="38" pos:column="23">==<pos:position pos:line="38" pos:column="25"/></operator> <literal type="char" pos:line="38" pos:column="26">'/'<pos:position pos:line="38" pos:column="29"/></literal><operator pos:line="38" pos:column="29">)<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator>
      <name><name pos:line="39" pos:column="7">actual_path<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><literal type="number" pos:line="39" pos:column="19">1<pos:position pos:line="39" pos:column="20"/></literal></expr>]<pos:position pos:line="39" pos:column="21"/></index></name> <operator pos:line="39" pos:column="22">&amp;&amp;<pos:position pos:line="39" pos:column="32"/></operator>
      <operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><name><name pos:line="40" pos:column="8">actual_path<pos:position pos:line="40" pos:column="19"/></name><index pos:line="40" pos:column="19">[<expr><literal type="number" pos:line="40" pos:column="20">2<pos:position pos:line="40" pos:column="21"/></literal></expr>]<pos:position pos:line="40" pos:column="22"/></index></name> <operator pos:line="40" pos:column="23">==<pos:position pos:line="40" pos:column="25"/></operator> <literal type="char" pos:line="40" pos:column="26">':'<pos:position pos:line="40" pos:column="29"/></literal> <operator pos:line="40" pos:column="30">||<pos:position pos:line="40" pos:column="32"/></operator> <name><name pos:line="40" pos:column="33">actual_path<pos:position pos:line="40" pos:column="44"/></name><index pos:line="40" pos:column="44">[<expr><literal type="number" pos:line="40" pos:column="45">2<pos:position pos:line="40" pos:column="46"/></literal></expr>]<pos:position pos:line="40" pos:column="47"/></index></name> <operator pos:line="40" pos:column="48">==<pos:position pos:line="40" pos:column="50"/></operator> <literal type="char" pos:line="40" pos:column="51">'|'<pos:position pos:line="40" pos:column="54"/></literal><operator pos:line="40" pos:column="54">)<pos:position pos:line="40" pos:column="55"/></operator></expr>)<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">actual_path<pos:position pos:line="42" pos:column="16"/></name><index pos:line="42" pos:column="16">[<expr><literal type="number" pos:line="42" pos:column="17">2<pos:position pos:line="42" pos:column="18"/></literal></expr>]<pos:position pos:line="42" pos:column="19"/></index></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <literal type="char" pos:line="42" pos:column="22">':'<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">actual_path<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">++<pos:position pos:line="43" pos:column="18"/></operator></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="46" pos:column="3">/* change path separators from '/' to '\\' for DOS, Windows and OS/2 */</comment>
  <for pos:line="47" pos:column="3">for <control pos:line="47" pos:column="7">(<init><expr><name pos:line="47" pos:column="8">i<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator><literal type="number" pos:line="47" pos:column="10">0<pos:position pos:line="47" pos:column="11"/></literal></expr>;<pos:position pos:line="47" pos:column="12"/></init> <condition><expr><name><name pos:line="47" pos:column="13">actual_path<pos:position pos:line="47" pos:column="24"/></name><index pos:line="47" pos:column="24">[<expr><name pos:line="47" pos:column="25">i<pos:position pos:line="47" pos:column="26"/></name></expr>]<pos:position pos:line="47" pos:column="27"/></index></name> <operator pos:line="47" pos:column="28">!=<pos:position pos:line="47" pos:column="30"/></operator> <literal type="char" pos:line="47" pos:column="31">'\0'<pos:position pos:line="47" pos:column="35"/></literal></expr>;<pos:position pos:line="47" pos:column="36"/></condition> <incr><expr><operator pos:line="47" pos:column="37">++<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">i<pos:position pos:line="47" pos:column="40"/></name></expr></incr>)<pos:position pos:line="47" pos:column="41"/></control>
    <block type="pseudo"><if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">actual_path<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">i<pos:position pos:line="48" pos:column="22"/></name></expr>]<pos:position pos:line="48" pos:column="23"/></index></name> <operator pos:line="48" pos:column="24">==<pos:position pos:line="48" pos:column="26"/></operator> <literal type="char" pos:line="48" pos:column="27">'/'<pos:position pos:line="48" pos:column="30"/></literal></expr>)<pos:position pos:line="48" pos:column="31"/></condition><then pos:line="48" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="7">actual_path<pos:position pos:line="49" pos:column="18"/></name><index pos:line="49" pos:column="18">[<expr><name pos:line="49" pos:column="19">i<pos:position pos:line="49" pos:column="20"/></name></expr>]<pos:position pos:line="49" pos:column="21"/></index></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <literal type="char" pos:line="49" pos:column="24">'\\'<pos:position pos:line="49" pos:column="28"/></literal></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt></block></then></if></block></for>

  <expr_stmt><expr><name pos:line="51" pos:column="3">fd<pos:position pos:line="51" pos:column="5"/></name> <operator pos:line="51" pos:column="6">=<pos:position pos:line="51" pos:column="7"/></operator> <call><name pos:line="51" pos:column="8">open<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">actual_path<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="26">O_RDONLY<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">|<pos:position pos:line="51" pos:column="36"/></operator> <name pos:line="51" pos:column="37">O_BINARY<pos:position pos:line="51" pos:column="45"/></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>  <comment type="block" pos:line="51" pos:column="49">/* no CR/LF translation! */</comment>
  <expr_stmt><expr><name><name pos:line="52" pos:column="3">file<pos:position pos:line="52" pos:column="7"/></name><operator pos:line="52" pos:column="7">-&gt;<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="9">path<pos:position pos:line="52" pos:column="13"/></name></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">actual_path<pos:position pos:line="52" pos:column="27"/></name></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt>
<cpp:else pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">else<pos:position pos:line="53" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="54" pos:column="3">fd<pos:position pos:line="54" pos:column="5"/></name> <operator pos:line="54" pos:column="6">=<pos:position pos:line="54" pos:column="7"/></operator> <call><name pos:line="54" pos:column="8">open<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">real_path<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="24">O_RDONLY<pos:position pos:line="54" pos:column="32"/></name></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">file<pos:position pos:line="55" pos:column="7"/></name><operator pos:line="55" pos:column="7">-&gt;<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="9">path<pos:position pos:line="55" pos:column="13"/></name></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">real_path<pos:position pos:line="55" pos:column="25"/></name></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">file<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">-&gt;<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="9">freepath<pos:position pos:line="57" pos:column="17"/></name></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <name pos:line="57" pos:column="20">real_path<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt> <comment type="block" pos:line="57" pos:column="31">/* free this when done */</comment>

  <if pos:line="59" pos:column="3">if<condition pos:line="59" pos:column="5">(<expr><operator pos:line="59" pos:column="6">!<pos:position pos:line="59" pos:column="7"/></operator><name><name pos:line="59" pos:column="7">conn<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">data<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">set<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">.<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">upload<pos:position pos:line="59" pos:column="29"/></name></name> <operator pos:line="59" pos:column="30">&amp;&amp;<pos:position pos:line="59" pos:column="40"/></operator> <operator pos:line="59" pos:column="33">(<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="34">fd<pos:position pos:line="59" pos:column="36"/></name> <operator pos:line="59" pos:column="37">==<pos:position pos:line="59" pos:column="39"/></operator> <operator pos:line="59" pos:column="40">-<pos:position pos:line="59" pos:column="41"/></operator><literal type="number" pos:line="59" pos:column="41">1<pos:position pos:line="59" pos:column="42"/></literal><operator pos:line="59" pos:column="42">)<pos:position pos:line="59" pos:column="43"/></operator></expr>)<pos:position pos:line="59" pos:column="44"/></condition><then pos:line="59" pos:column="44"> <block pos:line="59" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">failf<pos:position pos:line="60" pos:column="10"/></name><argument_list pos:line="60" pos:column="10">(<argument><expr><name><name pos:line="60" pos:column="11">conn<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">data<pos:position pos:line="60" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="23">"Couldn't open file %s"<pos:position pos:line="60" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="48">conn<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">-&gt;<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="54">path<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">Curl_file_done<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">conn<pos:position pos:line="61" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="26">CURLE_FILE_COULDNT_READ_FILE<pos:position pos:line="61" pos:column="54"/></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></expr_stmt>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">CURLE_FILE_COULDNT_READ_FILE<pos:position pos:line="62" pos:column="40"/></name></expr>;<pos:position pos:line="62" pos:column="41"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">file<pos:position pos:line="64" pos:column="7"/></name><operator pos:line="64" pos:column="7">-&gt;<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="9">fd<pos:position pos:line="64" pos:column="11"/></name></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <name pos:line="64" pos:column="14">fd<pos:position pos:line="64" pos:column="16"/></name></expr>;<pos:position pos:line="64" pos:column="17"/></expr_stmt>

  <return pos:line="66" pos:column="3">return <expr><name pos:line="66" pos:column="10">CURLE_OK<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2053_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smtp_perform_mail<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">connectdata<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">conn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">from<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">auth<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">size<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">Curl_easy<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">data<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">conn<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">data<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Calculate the FROM parameter */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name><name pos:line="10" pos:column="7">data<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">set<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">str<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><name pos:line="10" pos:column="21">STRING_MAIL_FROM<pos:position pos:line="10" pos:column="37"/></name></expr>]<pos:position pos:line="10" pos:column="38"/></index></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
    <comment type="block" pos:line="11" pos:column="5">/* Null reverse-path, RFC-5321, sect. 3.6.3 */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">from<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">strdup<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"&lt;&gt;"<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></then>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if<condition pos:line="13" pos:column="10">(<expr><name><name pos:line="13" pos:column="11">data<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">set<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">str<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name pos:line="13" pos:column="25">STRING_MAIL_FROM<pos:position pos:line="13" pos:column="41"/></name></expr>]<pos:position pos:line="13" pos:column="42"/></index><index pos:line="13" pos:column="42">[<expr><literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal></expr>]<pos:position pos:line="13" pos:column="45"/></index></name> <operator pos:line="13" pos:column="46">==<pos:position pos:line="13" pos:column="48"/></operator> <literal type="char" pos:line="13" pos:column="49">'&lt;'<pos:position pos:line="13" pos:column="55"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">from<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">aprintf<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="string" pos:line="14" pos:column="20">"%s"<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="26">data<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">set<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">.<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">str<pos:position pos:line="14" pos:column="39"/></name><index pos:line="14" pos:column="39">[<expr><name pos:line="14" pos:column="40">STRING_MAIL_FROM<pos:position pos:line="14" pos:column="56"/></name></expr>]<pos:position pos:line="14" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt></block></then></if></elseif>
  <else pos:line="15" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="5">from<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">aprintf<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="string" pos:line="16" pos:column="20">"&lt;%s&gt;"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="28">data<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">set<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">str<pos:position pos:line="16" pos:column="41"/></name><index pos:line="16" pos:column="41">[<expr><name pos:line="16" pos:column="42">STRING_MAIL_FROM<pos:position pos:line="16" pos:column="58"/></name></expr>]<pos:position pos:line="16" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></else></if>

  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">!<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">from<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* Calculate the optional AUTH parameter */</comment>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><name><name pos:line="22" pos:column="6">data<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">set<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">str<pos:position pos:line="22" pos:column="19"/></name><index pos:line="22" pos:column="19">[<expr><name pos:line="22" pos:column="20">STRING_MAIL_AUTH<pos:position pos:line="22" pos:column="36"/></name></expr>]<pos:position pos:line="22" pos:column="37"/></index></name> <operator pos:line="22" pos:column="38">&amp;&amp;<pos:position pos:line="22" pos:column="48"/></operator> <name><name pos:line="22" pos:column="41">conn<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">proto<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">.<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="53">smtpc<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">.<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">sasl<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">authused<pos:position pos:line="22" pos:column="72"/></name></name></expr>)<pos:position pos:line="22" pos:column="73"/></condition><then pos:line="22" pos:column="73"> <block pos:line="22" pos:column="74">{
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name><name pos:line="23" pos:column="8">data<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">set<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">str<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><name pos:line="23" pos:column="22">STRING_MAIL_AUTH<pos:position pos:line="23" pos:column="38"/></name></expr>]<pos:position pos:line="23" pos:column="39"/></index><index pos:line="23" pos:column="39">[<expr><literal type="number" pos:line="23" pos:column="40">0<pos:position pos:line="23" pos:column="41"/></literal></expr>]<pos:position pos:line="23" pos:column="42"/></index></name> <operator pos:line="23" pos:column="43">!=<pos:position pos:line="23" pos:column="45"/></operator> <literal type="char" pos:line="23" pos:column="46">'\0'<pos:position pos:line="23" pos:column="50"/></literal></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">auth<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">aprintf<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><literal type="string" pos:line="24" pos:column="22">"%s"<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="28">data<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">set<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">str<pos:position pos:line="24" pos:column="41"/></name><index pos:line="24" pos:column="41">[<expr><name pos:line="24" pos:column="42">STRING_MAIL_AUTH<pos:position pos:line="24" pos:column="58"/></name></expr>]<pos:position pos:line="24" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt></block></then>
    <else pos:line="25" pos:column="5">else
      <comment type="block" pos:line="26" pos:column="7">/* Empty AUTH, RFC-2554, sect. 5 */</comment>
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">auth<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">strdup<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><literal type="string" pos:line="27" pos:column="21">"&lt;&gt;"<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt></block></else></if>

    <if pos:line="29" pos:column="5">if<condition pos:line="29" pos:column="7">(<expr><operator pos:line="29" pos:column="8">!<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">auth<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition><then pos:line="29" pos:column="14"> <block pos:line="29" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">free<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">from<pos:position pos:line="30" pos:column="16"/></name></expr></argument>)<pos:position pos:line="30" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>

      <return pos:line="32" pos:column="7">return <expr><name pos:line="32" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="36" pos:column="3">/* Calculate the optional SIZE parameter */</comment>
  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name><name pos:line="37" pos:column="6">conn<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">proto<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">.<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">smtpc<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">size_supported<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">&amp;&amp;<pos:position pos:line="37" pos:column="49"/></operator> <name><name pos:line="37" pos:column="42">conn<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">-&gt;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="48">data<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">-&gt;<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="54">state<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">.<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="60">infilesize<pos:position pos:line="37" pos:column="70"/></name></name> <operator pos:line="37" pos:column="71">&gt;<pos:position pos:line="37" pos:column="75"/></operator> <literal type="number" pos:line="37" pos:column="73">0<pos:position pos:line="37" pos:column="74"/></literal></expr>)<pos:position pos:line="37" pos:column="75"/></condition><then pos:line="37" pos:column="75"> <block pos:line="37" pos:column="76">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">size<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">aprintf<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="string" pos:line="38" pos:column="20">"%"<pos:position pos:line="38" pos:column="23"/></literal> <name pos:line="38" pos:column="24">CURL_FORMAT_CURL_OFF_T<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="48">data<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">state<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">infilesize<pos:position pos:line="38" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt>

    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><operator pos:line="40" pos:column="8">!<pos:position pos:line="40" pos:column="9"/></operator><name pos:line="40" pos:column="9">size<pos:position pos:line="40" pos:column="13"/></name></expr>)<pos:position pos:line="40" pos:column="14"/></condition><then pos:line="40" pos:column="14"> <block pos:line="40" pos:column="15">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">free<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">from<pos:position pos:line="41" pos:column="16"/></name></expr></argument>)<pos:position pos:line="41" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">free<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><name pos:line="42" pos:column="12">auth<pos:position pos:line="42" pos:column="16"/></name></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt>

      <return pos:line="44" pos:column="7">return <expr><name pos:line="44" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="48" pos:column="3">/* Send the MAIL command */</comment>
  <if pos:line="49" pos:column="3">if<condition pos:line="49" pos:column="5">(<expr><operator pos:line="49" pos:column="6">!<pos:position pos:line="49" pos:column="7"/></operator><name pos:line="49" pos:column="7">auth<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">&amp;&amp;<pos:position pos:line="49" pos:column="22"/></operator> <operator pos:line="49" pos:column="15">!<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">size<pos:position pos:line="49" pos:column="20"/></name></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="5">result<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">Curl_pp_sendf<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><operator pos:line="50" pos:column="28">&amp;<pos:position pos:line="50" pos:column="33"/></operator><name><name pos:line="50" pos:column="29">conn<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">proto<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">.<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="41">smtpc<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">.<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="47">pp<pos:position pos:line="50" pos:column="49"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="51" pos:column="28">"MAIL FROM:%s"<pos:position pos:line="51" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="44">from<pos:position pos:line="51" pos:column="48"/></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt></block></then>
  <elseif pos:line="52" pos:column="3">else <if pos:line="52" pos:column="8">if<condition pos:line="52" pos:column="10">(<expr><name pos:line="52" pos:column="11">auth<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">&amp;&amp;<pos:position pos:line="52" pos:column="26"/></operator> <operator pos:line="52" pos:column="19">!<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">size<pos:position pos:line="52" pos:column="24"/></name></expr>)<pos:position pos:line="52" pos:column="25"/></condition><then pos:line="52" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="5">result<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">Curl_pp_sendf<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><operator pos:line="53" pos:column="28">&amp;<pos:position pos:line="53" pos:column="33"/></operator><name><name pos:line="53" pos:column="29">conn<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">proto<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">.<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="41">smtpc<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">.<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="47">pp<pos:position pos:line="53" pos:column="49"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="54" pos:column="28">"MAIL FROM:%s AUTH=%s"<pos:position pos:line="54" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">from<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">auth<pos:position pos:line="54" pos:column="62"/></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="64"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="55" pos:column="3">else <if pos:line="55" pos:column="8">if<condition pos:line="55" pos:column="10">(<expr><name pos:line="55" pos:column="11">auth<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">&amp;&amp;<pos:position pos:line="55" pos:column="26"/></operator> <name pos:line="55" pos:column="19">size<pos:position pos:line="55" pos:column="23"/></name></expr>)<pos:position pos:line="55" pos:column="24"/></condition><then pos:line="55" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="5">result<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">Curl_pp_sendf<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><operator pos:line="56" pos:column="28">&amp;<pos:position pos:line="56" pos:column="33"/></operator><name><name pos:line="56" pos:column="29">conn<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">proto<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">.<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="41">smtpc<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">.<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">pp<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="57" pos:column="28">"MAIL FROM:%s AUTH=%s SIZE=%s"<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="60">from<pos:position pos:line="57" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="66">auth<pos:position pos:line="57" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="72">size<pos:position pos:line="57" pos:column="76"/></name></expr></argument>)<pos:position pos:line="57" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="78"/></expr_stmt></block></then></if></elseif>
  <else pos:line="58" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="5">result<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">Curl_pp_sendf<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><operator pos:line="59" pos:column="28">&amp;<pos:position pos:line="59" pos:column="33"/></operator><name><name pos:line="59" pos:column="29">conn<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">proto<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">.<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">smtpc<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">.<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="47">pp<pos:position pos:line="59" pos:column="49"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="60" pos:column="28">"MAIL FROM:%s SIZE=%s"<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">from<pos:position pos:line="60" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="58">size<pos:position pos:line="60" pos:column="62"/></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="64"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">free<pos:position pos:line="62" pos:column="7"/></name><argument_list pos:line="62" pos:column="7">(<argument><expr><name pos:line="62" pos:column="8">from<pos:position pos:line="62" pos:column="12"/></name></expr></argument>)<pos:position pos:line="62" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">free<pos:position pos:line="63" pos:column="7"/></name><argument_list pos:line="63" pos:column="7">(<argument><expr><name pos:line="63" pos:column="8">auth<pos:position pos:line="63" pos:column="12"/></name></expr></argument>)<pos:position pos:line="63" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">free<pos:position pos:line="64" pos:column="7"/></name><argument_list pos:line="64" pos:column="7">(<argument><expr><name pos:line="64" pos:column="8">size<pos:position pos:line="64" pos:column="12"/></name></expr></argument>)<pos:position pos:line="64" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="14"/></expr_stmt>

  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><operator pos:line="66" pos:column="6">!<pos:position pos:line="66" pos:column="7"/></operator><name pos:line="66" pos:column="7">result<pos:position pos:line="66" pos:column="13"/></name></expr>)<pos:position pos:line="66" pos:column="14"/></condition><then pos:line="66" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="5">state<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">conn<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="17">SMTP_MAIL<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt></block></then></if>

  <return pos:line="69" pos:column="3">return <expr><name pos:line="69" pos:column="10">result<pos:position pos:line="69" pos:column="16"/></name></expr>;<pos:position pos:line="69" pos:column="17"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_190_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">URL_FILE<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">handle<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">outf<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">nread<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buffer<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><literal type="number" pos:line="7" pos:column="15">256<pos:position pos:line="7" pos:column="18"/></literal></expr>]<pos:position pos:line="7" pos:column="19"/></index></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">url<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><name pos:line="10" pos:column="6">argc<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&lt;<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="13">2<pos:position pos:line="10" pos:column="14"/></literal></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">url<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <literal type="string" pos:line="11" pos:column="11">"http://192.168.7.3/testfile"<pos:position pos:line="11" pos:column="40"/></literal></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then><comment type="block" pos:line="11" pos:column="41">/* default to testurl */</comment>
  <else pos:line="12" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="5">url<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name><name pos:line="13" pos:column="11">argv<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>]<pos:position pos:line="13" pos:column="18"/></index></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt></block></else></if><comment type="block" pos:line="13" pos:column="19">/* use passed url */</comment>

  <comment type="block" pos:line="15" pos:column="3">/* copy from url line by line with fgets */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">outf<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">fopen<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">FGETSFILE<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"wb+"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">outf<pos:position pos:line="17" pos:column="11"/></name></expr>)<pos:position pos:line="17" pos:column="12"/></condition><then pos:line="17" pos:column="12"> <block pos:line="17" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">perror<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"couldn't open fgets output file\n"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">1<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">handle<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name pos:line="22" pos:column="12">url_fopen<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">url<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"r"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">handle<pos:position pos:line="23" pos:column="13"/></name></expr>)<pos:position pos:line="23" pos:column="14"/></condition><then pos:line="23" pos:column="14"> <block pos:line="23" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">printf<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"couldn't url_fopen() %s\n"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">url<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">fclose<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">outf<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><literal type="number" pos:line="26" pos:column="12">2<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <while pos:line="29" pos:column="3">while<condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><call><name pos:line="29" pos:column="10">url_feof<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">handle<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="27"/></condition> <block pos:line="29" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">url_fgets<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">buffer<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="23">sizeof<argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">buffer<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">handle<pos:position pos:line="30" pos:column="45"/></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">fwrite<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">buffer<pos:position pos:line="31" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">1<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="23">strlen<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">buffer<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">outf<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">url_fclose<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">handle<pos:position pos:line="34" pos:column="20"/></name></expr></argument>)<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">fclose<pos:position pos:line="36" pos:column="9"/></name><argument_list pos:line="36" pos:column="9">(<argument><expr><name pos:line="36" pos:column="10">outf<pos:position pos:line="36" pos:column="14"/></name></expr></argument>)<pos:position pos:line="36" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>


  <comment type="block" pos:line="39" pos:column="3">/* Copy from url with fread */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">outf<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <call><name pos:line="40" pos:column="10">fopen<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">FREADFILE<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="27">"wb+"<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
  <if pos:line="41" pos:column="3">if<condition pos:line="41" pos:column="5">(<expr><operator pos:line="41" pos:column="6">!<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">outf<pos:position pos:line="41" pos:column="11"/></name></expr>)<pos:position pos:line="41" pos:column="12"/></condition><then pos:line="41" pos:column="12"> <block pos:line="41" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">perror<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="string" pos:line="42" pos:column="12">"couldn't open fread output file\n"<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">1<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="46" pos:column="3">handle<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <call><name pos:line="46" pos:column="12">url_fopen<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><literal type="string" pos:line="46" pos:column="22">"testfile"<pos:position pos:line="46" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="34">"r"<pos:position pos:line="46" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
  <if pos:line="47" pos:column="3">if<condition pos:line="47" pos:column="5">(<expr><operator pos:line="47" pos:column="6">!<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">handle<pos:position pos:line="47" pos:column="13"/></name></expr>)<pos:position pos:line="47" pos:column="14"/></condition><then pos:line="47" pos:column="14"> <block pos:line="47" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">printf<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="string" pos:line="48" pos:column="12">"couldn't url_fopen() testfile\n"<pos:position pos:line="48" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fclose<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name pos:line="49" pos:column="12">outf<pos:position pos:line="49" pos:column="16"/></name></expr></argument>)<pos:position pos:line="49" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><literal type="number" pos:line="50" pos:column="12">2<pos:position pos:line="50" pos:column="13"/></literal></expr>;<pos:position pos:line="50" pos:column="14"/></return>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <do pos:line="53" pos:column="3">do <block pos:line="53" pos:column="6">{
    <expr_stmt><expr><name pos:line="54" pos:column="5">nread<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <call><name pos:line="54" pos:column="13">url_fread<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">buffer<pos:position pos:line="54" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="31">1<pos:position pos:line="54" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="34">sizeof<argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">buffer<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">handle<pos:position pos:line="54" pos:column="56"/></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">fwrite<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><name pos:line="55" pos:column="12">buffer<pos:position pos:line="55" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="20">1<pos:position pos:line="55" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="23">nread<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="30">outf<pos:position pos:line="55" pos:column="34"/></name></expr></argument>)<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block> while<condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">nread<pos:position pos:line="56" pos:column="16"/></name></expr>)<pos:position pos:line="56" pos:column="17"/></condition>;<pos:position pos:line="56" pos:column="18"/></do>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">url_fclose<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">handle<pos:position pos:line="58" pos:column="20"/></name></expr></argument>)<pos:position pos:line="58" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">fclose<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name pos:line="60" pos:column="10">outf<pos:position pos:line="60" pos:column="14"/></name></expr></argument>)<pos:position pos:line="60" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="16"/></expr_stmt>


  <comment type="block" pos:line="63" pos:column="3">/* Test rewind */</comment>
  <expr_stmt><expr><name pos:line="64" pos:column="3">outf<pos:position pos:line="64" pos:column="7"/></name> <operator pos:line="64" pos:column="8">=<pos:position pos:line="64" pos:column="9"/></operator> <call><name pos:line="64" pos:column="10">fopen<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">REWINDFILE<pos:position pos:line="64" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="28">"wb+"<pos:position pos:line="64" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><operator pos:line="65" pos:column="6">!<pos:position pos:line="65" pos:column="7"/></operator><name pos:line="65" pos:column="7">outf<pos:position pos:line="65" pos:column="11"/></name></expr>)<pos:position pos:line="65" pos:column="12"/></condition><then pos:line="65" pos:column="12"> <block pos:line="65" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">perror<pos:position pos:line="66" pos:column="11"/></name><argument_list pos:line="66" pos:column="11">(<argument><expr><literal type="string" pos:line="66" pos:column="12">"couldn't open fread output file\n"<pos:position pos:line="66" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="49"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><literal type="number" pos:line="67" pos:column="12">1<pos:position pos:line="67" pos:column="13"/></literal></expr>;<pos:position pos:line="67" pos:column="14"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="70" pos:column="3">handle<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <call><name pos:line="70" pos:column="12">url_fopen<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><literal type="string" pos:line="70" pos:column="22">"testfile"<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="34">"r"<pos:position pos:line="70" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
  <if pos:line="71" pos:column="3">if<condition pos:line="71" pos:column="5">(<expr><operator pos:line="71" pos:column="6">!<pos:position pos:line="71" pos:column="7"/></operator><name pos:line="71" pos:column="7">handle<pos:position pos:line="71" pos:column="13"/></name></expr>)<pos:position pos:line="71" pos:column="14"/></condition><then pos:line="71" pos:column="14"> <block pos:line="71" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">printf<pos:position pos:line="72" pos:column="11"/></name><argument_list pos:line="72" pos:column="11">(<argument><expr><literal type="string" pos:line="72" pos:column="12">"couldn't url_fopen() testfile\n"<pos:position pos:line="72" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">fclose<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><name pos:line="73" pos:column="12">outf<pos:position pos:line="73" pos:column="16"/></name></expr></argument>)<pos:position pos:line="73" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="18"/></expr_stmt>
    <return pos:line="74" pos:column="5">return <expr><literal type="number" pos:line="74" pos:column="12">2<pos:position pos:line="74" pos:column="13"/></literal></expr>;<pos:position pos:line="74" pos:column="14"/></return>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="77" pos:column="3">nread<pos:position pos:line="77" pos:column="8"/></name> <operator pos:line="77" pos:column="9">=<pos:position pos:line="77" pos:column="10"/></operator> <call><name pos:line="77" pos:column="11">url_fread<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">buffer<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="29">1<pos:position pos:line="77" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="32">sizeof<argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">buffer<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="77" pos:column="48">handle<pos:position pos:line="77" pos:column="54"/></name></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="78" pos:column="3">fwrite<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><name pos:line="78" pos:column="10">buffer<pos:position pos:line="78" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="18">1<pos:position pos:line="78" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="21">nread<pos:position pos:line="78" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="28">outf<pos:position pos:line="78" pos:column="32"/></name></expr></argument>)<pos:position pos:line="78" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">url_rewind<pos:position pos:line="79" pos:column="13"/></name><argument_list pos:line="79" pos:column="13">(<argument><expr><name pos:line="79" pos:column="14">handle<pos:position pos:line="79" pos:column="20"/></name></expr></argument>)<pos:position pos:line="79" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="81" pos:column="3">buffer<pos:position pos:line="81" pos:column="9"/></name><index pos:line="81" pos:column="9">[<expr><literal type="number" pos:line="81" pos:column="10">0<pos:position pos:line="81" pos:column="11"/></literal></expr>]<pos:position pos:line="81" pos:column="12"/></index></name><operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator><literal type="char" pos:line="81" pos:column="13">'\n'<pos:position pos:line="81" pos:column="17"/></literal></expr>;<pos:position pos:line="81" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">fwrite<pos:position pos:line="82" pos:column="9"/></name><argument_list pos:line="82" pos:column="9">(<argument><expr><name pos:line="82" pos:column="10">buffer<pos:position pos:line="82" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="18">1<pos:position pos:line="82" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="21">1<pos:position pos:line="82" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="24">outf<pos:position pos:line="82" pos:column="28"/></name></expr></argument>)<pos:position pos:line="82" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="84" pos:column="3">nread<pos:position pos:line="84" pos:column="8"/></name> <operator pos:line="84" pos:column="9">=<pos:position pos:line="84" pos:column="10"/></operator> <call><name pos:line="84" pos:column="11">url_fread<pos:position pos:line="84" pos:column="20"/></name><argument_list pos:line="84" pos:column="20">(<argument><expr><name pos:line="84" pos:column="21">buffer<pos:position pos:line="84" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="29">1<pos:position pos:line="84" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="32">sizeof<argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">buffer<pos:position pos:line="84" pos:column="45"/></name></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="84" pos:column="48">handle<pos:position pos:line="84" pos:column="54"/></name></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">fwrite<pos:position pos:line="85" pos:column="9"/></name><argument_list pos:line="85" pos:column="9">(<argument><expr><name pos:line="85" pos:column="10">buffer<pos:position pos:line="85" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="18">1<pos:position pos:line="85" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="21">nread<pos:position pos:line="85" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="28">outf<pos:position pos:line="85" pos:column="32"/></name></expr></argument>)<pos:position pos:line="85" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="87" pos:column="3">url_fclose<pos:position pos:line="87" pos:column="13"/></name><argument_list pos:line="87" pos:column="13">(<argument><expr><name pos:line="87" pos:column="14">handle<pos:position pos:line="87" pos:column="20"/></name></expr></argument>)<pos:position pos:line="87" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="89" pos:column="3">fclose<pos:position pos:line="89" pos:column="9"/></name><argument_list pos:line="89" pos:column="9">(<argument><expr><name pos:line="89" pos:column="10">outf<pos:position pos:line="89" pos:column="14"/></name></expr></argument>)<pos:position pos:line="89" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="16"/></expr_stmt>

  <return pos:line="91" pos:column="3">return <expr><literal type="number" pos:line="91" pos:column="10">0<pos:position pos:line="91" pos:column="11"/></literal></expr>;<pos:position pos:line="91" pos:column="12"/></return><comment type="block" pos:line="91" pos:column="12">/* all done */</comment>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

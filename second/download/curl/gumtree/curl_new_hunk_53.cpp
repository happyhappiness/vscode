"              If this option is used several times, the ones fol-\n"
"              lowing the first will append data.\n"
"\n"
, stdout);
 fputs(
"       --data-binary <data>\n"
"              (HTTP)  This  posts  data  in  a  similar manner as\n"
"              --data-ascii does, although when using this  option\n"
"              the  entire  context of the posted data is kept as-\n"
"              is. If you want to post a binary file  without  the\n"
"              strip-newlines  feature of the --data-ascii option,\n"
"              this is for you.\n"
"\n"
"              If this option is used several times, the ones fol-\n"
, stdout);
 fputs(
"              lowing the first will append data.\n"
"\n"
"       --digest\n"
"              (HTTP)  Enables HTTP Digest authentication. This is\n"
"              a authentication that prevents  the  password  from\n"
"              being sent over the wire in clear text. Use this in\n"
"              combination with the normal -u/--user option to set\n"
"              user  name and password. See also --ntlm, --negoti-\n"
"              ate and --anyauth for related  options.  (Added  in\n"
"              curl 7.10.6)\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the following\n"
"              occurrences make no difference.\n"
"\n"
"       --disable-eprt\n"
"              (FTP) Tell curl to disable the use of the EPRT  and\n"
"              LPRT commands when doing active FTP transfers. Curl\n"
"              will normally always first  attempt  to  use  EPRT,\n"
"              then  LPRT before using PORT, but with this option,\n"
"              it will use PORT right  away.  EPRT  and  LPRT  are\n"
, stdout);
 fputs(
"              extensions  to  the  original FTP protocol, may not\n"
"              work on all servers but enable  more  functionality\n"
"              in  a better way than the traditional PORT command.\n"
"              (Aded in 7.10.5)\n"
"\n"
"              If this option is used several times,  each  occur-\n"
"              rence will toggle this on/off.\n"
"\n"
"       --disable-epsv\n"
"              (FTP) Tell curl to disable the use of the EPSV com-\n"
"              mand when doing passive FTP  transfers.  Curl  will\n"
, stdout);
 fputs(
"              normally  always  first  attempt to use EPSV before\n"
"              PASV, but with this option, it will not  try  using\n"
"              EPSV.\n"
"\n"
"              If  this  option is used several times, each occur-\n"
"              rence will toggle this on/off.\n"
"\n"
"       -D/--dump-header <file>\n"
"              Write the protocol headers to the specified file.\n"
"\n"
"              This option is handy to use when you want to  store\n"
"              the  headers that a HTTP site sends to you. Cookies\n"
, stdout);
 fputs(
"              from the headers could then be  read  in  a  second\n"
"              curl  invoke  by  using the -b/--cookie option! The\n"
"              -c/--cookie-jar option is however a better  way  to\n"
"              store cookies.\n"
"\n"
"              When used on FTP, the ftp server response lines are\n"
"              considered  being  \"headers\"  and  thus  are  saved\n"
"              there.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
, stdout);
 fputs(
"       -e/--referer <URL>\n"
"              (HTTP) Sends the \"Referer Page\" information to  the\n"
"              HTTP   server.  This  can  also  be  set  with  the\n"
"              -H/--header  flag  of  course.   When   used   with\n"
"              -L/--location you can append \";auto\" to the referer\n"
"              URL to make curl automatically set the previous URL\n"
"              when  it  follows  a  Location: header. The \";auto\"\n"
"              string can be used alone, even if you don't set  an\n"
, stdout);
 fputs(
"              initial referer.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"       --environment\n"
"              (RISC OS ONLY) Sets a range  of  environment  vari-\n"
"              ables,  using  the names the -w option supports, to\n"
"              easier allow extraction of useful information after\n"
"              having run curl.\n"
"\n"
"              If  this  option is used several times, each occur-\n"
"              rence will toggle this on/off.\n"
"\n"
, stdout);
 fputs(
"       --egd-file <file>\n"
"              (HTTPS) Specify the path name to the Entropy  Gath-\n"
"              ering Daemon socket. The socket is used to seed the\n"
"              random engine for SSL  connections.  See  also  the\n"
"              --random-file option.\n"
"\n"
"       -E/--cert <certificate[:password]>\n"
"              (HTTPS) Tells curl to use the specified certificate\n"
"              file when getting a file with HTTPS.  The  certifi-\n"
"              cate  must be in PEM format.  If the optional pass-\n"
, stdout);
 fputs(
"              word isn't specified, it will be queried for on the\n"
"              terminal. Note that this certificate is the private\n"
"              key and the private certificate concatenated!\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       --cacert <CA certificate>\n"
"              (HTTPS) Tells curl to use the specified certificate\n"
"              file to verify the peer. The file may contain  mul-\n"
, stdout);
 fputs(
"              tiple  CA  certificates. The certificate(s) must be\n"
"              in PEM format.\n"
"\n"
"              curl  recognizes  the  environment  variable  named\n"
"              'CURL_CA_BUNDLE' if that is set, and uses the given\n"
"              path as a path to a CA  cert  bundle.  This  option\n"
"              overrides that variable.\n"
"\n"
"              The windows version of curl will automatically look\n"
"              for a CA  certs  file  named  'curl-ca-bundle.crt',\n"
, stdout);
 fputs(
"              either in the same directory as curl.exe, or in the\n"
"              Current Working Directory, or in any  folder  along\n"
"              your PATH.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       --capath <CA certificate directory>\n"
"              (HTTPS) Tells curl to use the specified certificate\n"
"              directory to verify the peer. The certificates must\n"
"              be in PEM format, and the directory must have  been\n"
, stdout);
 fputs(
"              processed  using the c_rehash utility supplied with\n"
"              openssl. Using --capath  can  allow  curl  to  make\n"
"              https  connections much more efficiently than using\n"
"              --cacert if the --cacert file contains many CA cer-\n"
"              tificates.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -f/--fail\n"
"              (HTTP) Fail silently (no output at all)  on  server\n"
, stdout);
 fputs(
"              errors.  This  is  mostly  done like this to better\n"
"              enable scripts  etc  to  better  deal  with  failed\n"
"              attempts.  In normal cases when a HTTP server fails\n"
"              to deliver a document, it returns a  HTML  document\n"
"              stating  so  (which  often  also  describes why and\n"
"              more). This flag will prevent curl from  outputting\n"
"              that and fail silently instead.\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice, the second will again\n"
"              disable silent failure.\n"
"\n"
"       --ftp-create-dirs\n"
"              (FTP) When an FTP URL/operation uses  a  path  that\n"
"              doesn't currently exist on the server, the standard\n"
"              behavior of curl is to  fail.  Using  this  option,\n"
"              curl  will instead attempt to create missing direc-\n"
"              tories. (Added in 7.10.7)\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice, the second will again\n"
"              disable silent failure.\n"
"\n"
"       --ftp-pasv\n"
"              (FTP) Use PASV when transfering. PASV is the inter-\n"
"              nal default behavior, but using this option can  be\n"
"              used  to  override  a  previos  --ftp-port  option.\n"
"              (Added in 7.11.0)\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable silent failure.\n"
"\n"
"       --ftp-ssl\n"
, stdout);
 fputs(
"              (FTP)   Make  the  FTP  connection  switch  to  use\n"
"              SSL/TLS. (Added in 7.11.0)\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable silent failure.\n"
"\n"
"       -F/--form <name=content>\n"
"              (HTTP)  This  lets curl emulate a filled in form in\n"
"              which a user has pressed the  submit  button.  This\n"
"              causes  curl  to  POST  data using the content-type\n"
, stdout);
 fputs(
"              multipart/form-data  according  to  RFC1867.   This\n"
"              enables uploading of binary files etc. To force the\n"
"              'content' part to be be a  file,  prefix  the  file\n"
"              name  with  an @ sign. To just get the content part\n"
"              from a file, prefix the file name with  the  letter\n"
"              <.  The  difference  between @ and < is then that @\n"
"              makes a file get attached in the  post  as  a  file\n"
, stdout);
 fputs(
"              upload, while the < makes a text field and just get\n"
"              the contents for that text field from a file.\n"
"\n"
"              Example, to send your password file to the  server,\n"
"              where  'password'  is the name of the form-field to\n"
"              which /etc/passwd will be the input:\n"
"\n"
"              curl -F password=@/etc/passwd www.mypasswords.com\n"
"\n"
"              To read the file's content from stdin insted  of  a\n"
, stdout);
 fputs(
"              file,  use  -  where  the file name should've been.\n"
"              This goes for both @ and < constructs.\n"
"\n"
"              You can also tell curl what Content-Type to use for\n"
"              the file upload part, by using 'type=', in a manner\n"
"              similar to:\n"
"\n"
"              curl -F \"web=@index.html;type=text/html\" url.com\n"
"\n"
"              See further examples and details in the MANUAL.\n"
"\n"
"              This option can be used multiple times.\n"
"\n"
"       -g/--globoff\n"
, stdout);
 fputs(
"              This option switches off the \"URL globbing parser\".\n"
"              When you set this option, you can specify URLs that\n"
"              contain the letters {}[] without having them  being\n"
"              interpreted by curl itself. Note that these letters\n"
"              are not normal legal URL contents but  they  should\n"
"              be encoded according to the URI standard.\n"
"\n"
"       -G/--get\n"
"              When used, this option will make all data specified\n"
, stdout);
 fputs(
"              with -d/--data or --data-binary to  be  used  in  a\n"
"              HTTP  GET  request instead of the POST request that\n"
"              otherwise would be used. The data will be  appended\n"
"              to the URL with a '?'  separator.\n"
"\n"
"              If  used in combination with -I, the POST data will\n"
"              instead be appended to the URL with a HEAD request.\n"
"\n"
"              If used multiple times, nothing special happens.\n"
"\n"
"       -h/--help\n"
"              Usage help.\n"
"\n"
, stdout);
 fputs(
"       -H/--header <header>\n"
"              (HTTP) Extra header to use when getting a web page.\n"
"              You may specify any number of extra  headers.  Note\n"
"              that if you should add a custom header that has the\n"
"              same name as one of the internal  ones  curl  would\n"
"              use,  your  externally  set  header  will  be  used\n"
"              instead of the internal one.  This  allows  you  to\n"
"              make  even  trickier stuff than curl would normally\n"
, stdout);
 fputs(
"              do. You should not replace internally  set  headers\n"
"              without  knowing  perfectly well what you're doing.\n"
"              Replacing an internal header with one without  con-\n"
"              tent  on  the  right side of the colon will prevent\n"
"              that header from appearing.\n"
"\n"
"              See  also  the  -A/--user-agent  and   -e/--referer\n"
"              options.\n"
"\n"
"              This   option   can   be  used  multiple  times  to\n"
, stdout);
 fputs(
"              add/replace/remove multiple headers.\n"
"\n"
"       -i/--include\n"
"              (HTTP) Include the HTTP-header in the  output.  The\n"
"              HTTP-header  includes things like server-name, date\n"
"              of the document, HTTP-version and more...\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable header include.\n"
"\n"
"       --interface <name>\n"
"              Perform  an  operation using a specified interface.\n"
, stdout);
 fputs(
"              You can enter interface name, IP  address  or  host\n"
"              name. An example could look like:\n"
"\n"
"               curl --interface eth0:1 http://www.netscape.com/\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -I/--head\n"
"              (HTTP/FTP/FILE) Fetch the HTTP-header  only!  HTTP-\n"
"              servers feature the command HEAD which this uses to\n"
"              get nothing but the header of a document. When used\n"
, stdout);
 fputs(
"              on  a FTP or FILE file, curl displays the file size\n"
"              and last modification time only.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable header only.\n"
"\n"
"       -j/--junk-session-cookies\n"
"              (HTTP)  When  curl  is  told to read cookies from a\n"
"              given file, this option will make  it  discard  all\n"
"              \"session  cookies\". This will basicly have the same\n"
, stdout);
 fputs(
"              effect as if a  new  session  is  started.  Typical\n"
"              browsers   always   discard  session  cookies  when\n"
"              they're closed down. (Added in 7.9.7)\n"
"\n"
"              If this option is used several times,  each  occur-\n"
"              rence will toggle this on/off.\n"
"\n"
"       -k/--insecure\n"
"              (SSL) This option explicitly allows curl to perform\n"
"              \"insecure\" SSL connections and transfers.  Starting\n"
, stdout);
 fputs(
"              with   curl  7.10,  all  SSL  connections  will  be\n"
"              attempted to be made secure by using  the  CA  cer-\n"
"              tificate  bundle  installed  by default. This makes\n"
"              all  connections  considered  \"insecure\"  to   fail\n"
"              unless -k/--insecure is used.\n"
"\n"
"              If  this option is used twice, the second time will\n"
"              again disable it.\n"
"\n"
"       --krb4 <level>\n"
"              (FTP) Enable kerberos4 authentication and use.  The\n"
, stdout);
 fputs(
"              level must be entered and should be one of 'clear',\n"
"              'safe', 'confidential' or 'private'. Should you use\n"
"              a  level  that  is not one of these, 'private' will\n"
"              instead be used.\n"
"\n"
"              This option requiures that the  library  was  built\n"
"              with  kerberos4  support.  This is not very common.\n"
"              Use --version to see if your version supports it.\n"
"\n"
"              If this option is used several times, the last  one\n"
, stdout);
 fputs(
"              will be used.\n"
"\n"
"       -K/--config <config file>\n"
"              Specify  which  config  file to read curl arguments\n"
"              from. The config file is a text file in which  com-\n"
"              mand  line arguments can be written which then will\n"
"              be used as if they were written on the actual  com-\n"
"              mand  line.  Options  and  their parameters must be\n"
"              specified on the same  config  file  line.  If  the\n"
, stdout);
 fputs(
"              parameter is to contain white spaces, the parameter\n"
"              must be inclosed within quotes.  If the first  col-\n"
"              umn  of  a config line is a '#' character, the rest\n"
"              of the line will be treated as a comment.\n"
"\n"
"              Specify the filename as '-' to make curl  read  the\n"
"              file from stdin.\n"
"\n"
"              Note that to be able to specify a URL in the config\n"
"              file, you  need  to  specify  it  using  the  --url\n"
, stdout);
 fputs(
"              option,  and  not  by simply writing the URL on its\n"
"              own line. So, it could look similar to this:\n"
"\n"
"              url = \"http://curl.haxx.se/docs/\"\n"
"\n"
"              This option can be used multiple times.\n"
"\n"
"       --limit-rate <speed>\n"
"              Specify the maximum transfer rate you want curl  to\n"
"              use.  This  feature is useful if you have a limited\n"
"              pipe and you'd like  your  transfer  not  use  your\n"
"\n"
"              entire bandwidth.\n"
"\n"
, stdout);
 fputs(
"              The given speed is measured in bytes/second, unless\n"
"              a suffix is appended. Appending  'k'  or  'K'  will\n"
"              count  the  number as kilobytes, 'm' or M' makes it\n"
"              megabytes while 'g'  or  'G'  makes  it  gigabytes.\n"
"              Examples: 200K, 3m and 1G.\n"
"\n"
"              This option was introduced in curl 7.10.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -l/--list-only\n"
, stdout);
 fputs(
"              (FTP) When listing an FTP  directory,  this  switch\n"
"              forces  a name-only view.  Especially useful if you\n"
"              want to machine-parse the contents of an FTP direc-\n"
"              tory  since the normal directory view doesn't use a\n"
"              standard look or format.\n"
"\n"
"              This option causes an FTP NLST command to be  sent.\n"
"              Some  FTP servers list only files in their response\n"
, stdout);
 fputs(
"              to NLST; they do  not  include  subdirectories  and\n"
"              symbolic links.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable list only.\n"
"\n"
"       -L/--location\n"
"              (HTTP/HTTPS)  If  the  server  reports   that   the\n"
"              requested  page has a different location (indicated\n"
"              with the header line Location:) this flag will  let\n"
"              curl attempt to reattempt the get on the new place.\n"
, stdout);
 fputs(
"              If used together with -i or -I,  headers  from  all\n"
"              requested pages will be shown. If authentication is\n"
"              used, curl will only send its  credentials  to  the\n"
"              initial host, so if a redirect takes curl to a dif-\n"
"              ferent host, it won't intercept the  user+password.\n"
"              See  also --location-trusted on how to change this.\n"
"              If this option is used twice, the second will again\n"
, stdout);
 fputs(
"              disable location following.\n"
"\n"
"       --location-trusted\n"
"              (HTTP/HTTPS)  Like  -L/--location,  but  will allow\n"
"              sending the name + password to all hosts  that  the\n"
"              site may redirect to. This may or may not introduce\n"
"              a security breach if the site redirects  you  do  a\n"
"              site  to which you'll send your authentication info\n"
"              (which is plaintext  in  the  case  of  HTTP  Basic\n"
"              authentication).\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice, the second will again\n"
"              disable location following.\n"
"\n"
"       --max-filesize <bytes>\n"
"              Specify the maximum size (in bytes) of  a  file  to\n"
"              download. If the file requested is larger than this\n"
"              value, the transfer will not start  and  curl  will\n"
"              return with exit code 63.\n"
"\n"
"              NOTE:  The  file  size is not always known prior to\n"
, stdout);
 fputs(
"              download, and for such files  this  option  has  no\n"
"              effect  even  if  the  file  transfer ends up being\n"
"              larger than this given limit.  This  concerns  both\n"
"              FTP and HTTP transfers.\n"
"       -m/--max-time <seconds>\n"
"              Maximum  time  in  seconds that you allow the whole\n"
"              operation to take.  This is useful  for  preventing\n"
"              your  batch jobs from hanging for hours due to slow\n"
, stdout);
 fputs(
"              networks or links going down.   This  doesn't  work\n"
"              fully  in  win32  systems.  See also the --connect-\n"
"              timeout option.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -M/--manual\n"
"              Manual. Display the huge help text.\n"
"\n"
"       -n/--netrc\n"
"              Makes  curl scan the .netrc file in the user's home\n"
"              directory for login name and password. This is typ-\n"
, stdout);
 fputs(
"              ically  used  for  ftp  on unix. If used with http,\n"
"              curl will enable user authentication. See  netrc(4)\n"
"              or ftp(1) for details on the file format. Curl will\n"
"              not complain if that file hasn't the right  permis-\n"
"              sions  (it should not be world nor group readable).\n"
"              The environment variable \"HOME\" is used to find the\n"
"              home directory.\n"
"\n"
"              A  quick  and very simple example of how to setup a\n"
, stdout);
 fputs(
"              .netrc  to  allow  curl  to  ftp  to  the   machine\n"
"              host.domain.com  with  user name 'myself' and pass-\n"
"              word\n"
"\n"
"              machine  host.domain.com  login   myself   password\n"
"              secret\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable netrc usage.\n"
"\n"
"       --negotiate\n"
"              (HTTP) Enables  GSS-Negotiate  authentication.  The\n"
"              GSS-Negotiate  method was designed by Microsoft and\n"
, stdout);
 fputs(
"              is used in their web aplications. It  is  primarily\n"
"              meant as a support for Kerberos5 authentication but\n"
"              may be also used along with another  authentication\n"
"              methods. For more information see IETF draft draft-\n"
"              brezak-spnego-http-04.txt. (Added in 7.10.6)\n"
"\n"
"              This option requiures that the  library  was  built\n"
"              with  GSSAPI  support. This is not very common. Use\n"
, stdout);
 fputs(
"              --version to see if your version supports GSS-Nego-\n"
"              tiate.\n"
"\n"
"              If this option is used several times, the following\n"
"              occurrences make no difference.\n"
"\n"
"       -N/--no-buffer\n"
"              Disables the buffering of  the  output  stream.  In\n"
"              normal  work  situations,  curl will use a standard\n"
"              buffered output stream that will  have  the  effect\n"
"              that  it will output the data in chunks, not neces-\n"
, stdout);
 fputs(
"              sarily exactly when the data arrives.   Using  this\n"
"              option will disable that buffering.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              switch on buffering.\n"
"\n"
"       --ntlm (HTTP)  Enables  NTLM  authentication.   The   NTLM\n"
"              authentication method was designed by Microsoft and\n"
"              is used by IIS web servers.  It  is  a  proprietary\n"
"              protocol,  reversed engineered by clever people and\n"
, stdout);
 fputs(
"              implemented in curl based on  their  efforts.  This\n"
"              kind of behavior should not be endorsed, you should\n"
"              encourage everyone who uses NTLM  to  switch  to  a\n"
"              public   and   documented   authentication   method\n"
"              instead. Such as Digest. (Added in 7.10.6)\n"
"\n"
"              This option requiures that the  library  was  built\n"
"              with SSL support. Use curl --version to see if your\n"
"              version supports NTLM.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the following\n"
"              occurrences make no difference.\n"
"\n"
"       -o/--output <file>\n"
"              Write  output  to  <file> instead of stdout. If you\n"
"              are using {} or [] to fetch multiple documents, you\n"
"              can  use  '#'  followed  by  a number in the <file>\n"
"              specifier. That variable will be replaced with  the\n"
"              current string for the URL being fetched. Like in:\n"
"\n"
, stdout);
 fputs(
"                curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
"\n"
"              or use several variables like:\n"
"\n"
"                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
"\n"
"              You  may  use this option as many times as you have\n"
"              number of URLs.\n"
"\n"
"              See also the --create-dirs  option  to  create  the\n"
"              local directories dynamically.\n"
"\n"
"       -O/--remote-name\n"
"              Write  output to a local file named like the remote\n"
, stdout);
 fputs(
"              file we get. (Only the file part of the remote file\n"
"              is used, the path is cut off.)\n"
"\n"
"              You  may  use this option as many times as you have\n"
"              number of URLs.\n"
"\n"
"       -p/--proxytunnel\n"
"              When an HTTP proxy is used, this option will  cause\n"
"              non-HTTP protocols to attempt to tunnel through the\n"
"              proxy instead of merely using it  to  do  HTTP-like\n"
"              operations.  The  tunnel  approach is made with the\n"
, stdout);
 fputs(
"              HTTP proxy CONNECT request and  requires  that  the\n"
"              proxy allows direct connect to the remote port num-\n"
"              ber curl wants to tunnel through to.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable proxy tunnel.\n"
"\n"
"       -P/--ftp-port <address>\n"
"              (FTP)  Reverses  the  initiator/listener roles when\n"
"              connecting with ftp. This switch makes Curl use the\n"
, stdout);
 fputs(
"              PORT  command  instead  of  PASV. In practice, PORT\n"
"              tells the server to connect to the client's  speci-\n"
"              fied  address  and port, while PASV asks the server\n"
"              for an ip address and port to connect to. <address>\n"
"              should be one of:\n"
"\n"
"              interface\n"
"                     i.e  \"eth0\"  to specify which interface's IP\n"
"                     address you want to use  (Unix only)\n"
"\n"
"              IP address\n"
, stdout);
 fputs(
"                     i.e \"192.168.10.1\" to specify exact IP  num-\n"
"                     ber\n"
"\n"
"              host name\n"
"                     i.e \"my.host.domain\" to specify machine\n"
"\n"
"              -      (any  single-letter  string) to make it pick\n"
"                     the machine's default\n"
"\n"
"       If this option is used several times, the last one will be\n"
"       used. Disable the use of PORT with --ftp-pasv.\n"
"\n"
"       -q     If used as the first parameter on the command line,\n"
, stdout);
 fputs(
"              the $HOME/.curlrc file will not be read and used as\n"
"              a config file.\n"
"\n"
"       -Q/--quote <comand>\n"
"              (FTP)  Send  an arbitrary command to the remote FTP\n"
"              server, by using the QUOTE command of  the  server.\n"
"              Not  all  servers support this command, and the set\n"
"              of QUOTE commands are server specific!  Quote  com-\n"
"              mands are sent BEFORE the transfer is taking place.\n"
, stdout);
 fputs(
"              To make commands  take  place  after  a  successful\n"
"              transfer,  prefix  them  with  a  dash '-'. You may\n"
"              specify any amount of commands to be run before and\n"
"              after  the  transfer. If the server returns failure\n"
"              for one of the commands, the entire operation  will\n"
"              be aborted.\n"
"\n"
"              This option can be used multiple times.\n"
"\n"
"       --random-file <file>\n"
, stdout);
 fputs(
"              (HTTPS)  Specify  the  path name to file containing\n"
"              what will be considered as random data. The data is\n"
"              used to seed the random engine for SSL connections.\n"
"              See also the --egd-file option.\n"
"\n"
"       -r/--range <range>\n"
"              (HTTP/FTP) Retrieve a byte  range  (i.e  a  partial\n"
"              document) from a HTTP/1.1 or FTP server. Ranges can\n"
"              be specified in a number of ways.\n"
"\n"
, stdout);
 fputs(
"              0-499     specifies the first 500 bytes\n"
"\n"
"              500-999   specifies the second 500 bytes\n"
"\n"
"              -500      specifies the last 500 bytes\n"
"\n"
"              9500      specifies the bytes from offset 9500  and\n"
"                        forward\n"
"\n"
"              0-0,-1    specifies   the   first   and  last  byte\n"
"                        only(*)(H)\n"
"\n"
"              500-700,600-799\n"
"                        specifies 300 bytes from offset 500(H)\n"
"\n"
"              100-199,500-599\n"
, stdout);
 fputs(
"                        specifies   two   separate   100    bytes\n"
"                        ranges(*)(H)\n"
"\n"
"       (*) = NOTE that this will cause the server to reply with a\n"
"       multipart response!\n"
"\n"
"       You should also be aware that many HTTP/1.1 servers do not\n"
"       have this feature enabled, so that when you attempt to get\n"
"       a range, you'll instead get the whole document.\n"
"\n"
"       FTP range downloads only support the simple syntax 'start-\n"
, stdout);
 fputs(
"       stop'  (optionally  with  one  of the numbers omitted). It\n"
"\n"
"       depends on the non-RFC command SIZE.\n"
"\n"
"       If this option is used several times, the last one will be\n"
"       used.\n"
"\n"
"       -R/--remote-time\n"
"              When used, this will make libcurl attempt to figure\n"
"              out the timestamp of the remote file, and  if  that\n"
"              is  available  make  the  local  file get that same\n"
"              timestamp.\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice, the second time  dis-\n"
"              ables this again.\n"
"\n"
"       -s/--silent\n"
"              Silent  mode.  Don't  show  progress meter or error\n"
"              messages.  Makes Curl mute.\n"
"\n"
"              If this option is used twice, the second will again\n"
"              disable mute.\n"
"\n"
"       -S/--show-error\n"
"              When  used with -s it makes curl show error message\n"
"              if it fails.\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice, the second will again\n"
"              disable show error.\n"
"\n"
"       --stderr <file>\n"
"              Redirect all writes to stderr to the specified file\n"
"              instead. If the file name is a  plain  '-',  it  is\n"
"              instead written to stdout. This option has no point\n"
"              when you're using a shell with  decent  redirecting\n"
"              capabilities.\n"
"\n"
"              If  this option is used several times, the last one\n"
, stdout);
 fputs(
"              will be used.\n"
"\n"
"       -t/--telnet-option <OPT=val>\n"
"              Pass options  to  the  telnet  protocol.  Supported\n"
"              options are:\n"
"\n"
"              TTYPE=<term> Sets the terminal type.\n"
"\n"
"              XDISPLOC=<X display> Sets the X display location.\n"
"\n"
"              NEW_ENV=<var,val> Sets an environment variable.\n"
"\n"
"       -T/--upload-file <file>\n"
"              This  transfers  the  specified  local  file to the\n"
, stdout);
 fputs(
"              remote URL. If there is no file part in the  speci-\n"
"              fied  URL,  Curl  will  append the local file name.\n"
"              NOTE that you must use a trailing  /  on  the  last\n"
"              directory  to really prove to Curl that there is no\n"
"              file name or curl will think that your last  direc-\n"
"              tory name is the remote file name to use. That will\n"
"              most likely cause the upload operation to fail.  If\n"
, stdout);
 fputs(
"              this  is  used on a http(s) server, the PUT command\n"
"              will be used.\n"
"\n"
"              Use the file name \"-\" (a single dash) to use  stdin\n"
"              instead of a given file.\n"
"\n"
"              Before  7.10.8,  when  this option was used several\n"
"              times, the last one was used.\n"
"\n"
"              In curl 7.10.8 and later, you can  specify  one  -T\n"
"              for  each  URL  on  the command line. Each -T + URL\n"
, stdout);
 fputs(
"              pair specifies what to upload and  to  where.  curl\n"
"              also  supports \"globbing\" of the -T argument, mean-\n"
"              ing that you can upload multiple files to a  single\n"
"              URL  by using the same URL globbing style supported\n"
"              in the URL, like this:\n"
"\n"
"              curl    -T    \"{file1,file2}\"    http://www.upload-\n"
"              tothissite.com\n"
"\n"
"              or even\n"
"\n"
"              curl   -T   \"img[1-1000].png\"  ftp://ftp.picturema-\n"
, stdout);
 fputs(
"              nia.com/upload/\n"
"\n"
"       --trace <file>\n"
"              Enables a full trace dump of all incoming and  out-\n"
"              going  data,  including descriptive information, to\n"
"              the given output file. Use \"-\" as filename to  have\n"
"              the output sent to stdout.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used. (Added in 7.9.7)\n"
"\n"
"       --trace-ascii <file>\n"
"              Enables a full trace dump of all incoming and  out-\n"
, stdout);
 fputs(
"              going  data,  including descriptive information, to\n"
"              the given output file. Use \"-\" as filename to  have\n"
"              the output sent to stdout.\n"
"\n"
"              This is very similar to --trace, but leaves out the\n"
"              hex part and only shows the ASCII part of the dump.\n"
"              It  makes  smaller  output  that might be easier to\n"
"              read for untrained humans.\n"
"\n"
"              If this option is used several times, the last  one\n"
, stdout);
 fputs(
"              will be used. (Added in 7.9.7)\n"
"\n"
"       -u/--user <user:password>\n"
"              Specify  user  and  password  to use when fetching.\n"
"              Read the MANUAL for detailed examples of how to use\n"
"              this.  If  no  password is specified, curl will ask\n"
"              for it interactively.\n"
"\n"
"              You can also use  the  --digest  option  to  enable\n"
"              Digest  authentication when communicating with HTTP\n"
"              1.1 servers.\n"
"\n"
, stdout);
 fputs(
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -U/--proxy-user <user:password>\n"
"              Specify  user and password to use for Proxy authen-\n"
"              tication. If no password is  specified,  curl  will\n"
"              ask for it interactively.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       --url <URL>\n"
"              Specify a URL to fetch. This option is mostly handy\n"
, stdout);
 fputs(
"              when you want to specify URL(s) in a config file.\n"
"\n"
"              This  option  may  be  used any number of times. To\n"
"              control where this URL is written, use  the  -o  or\n"
"              the -O options.\n"
"\n"
"       -v/--verbose\n"
"              Makes  the  fetching more verbose/talkative. Mostly\n"
"              usable for debugging. Lines starting with '>' means\n"
"              data  sent by curl, '<' means data received by curl\n"
, stdout);
 fputs(
"              that is hidden in normal cases and  lines  starting\n"
"              with '*' means additional info provided by curl.\n"
"\n"
"              Note  that  if  you want to see HTTP headers in the\n"
"              output, -i/--include might be option you're looking\n"
"              for.\n"
"\n"
"              If  you  think  this  option still doesn't give you\n"
"              enough details, consider using --trace or  --trace-\n"
"              ascii instead.\n"
"\n"
, stdout);
 fputs(
"              If this option is used twice, the second will again\n"
"              disable verbose.\n"
"\n"
"       -V/--version\n"
"              Displays information about  curl  and  the  libcurl\n"
"              version it uses.\n"
"\n"
"              The  first  line includes the full version of curl,\n"
"              libcurl and other 3rd party libraries  linked  with\n"
"              the executable.\n"
"\n"
"              The  second  line  (starts with \"Protocols:\") shows\n"
, stdout);
 fputs(
"              all protocols that libcurl reports to support.\n"
"\n"
"              The third line (starts with \"Features:\") shows spe-\n"
"              cific features libcurl reports to offer.\n"
"\n"
"       -w/--write-out <format>\n"
"              Defines  what to display after a completed and suc-\n"
"              cessful operation. The format is a string that  may\n"
"              contain  plain  text mixed with any number of vari-\n"
"              ables. The string can be specified as \"string\",  to\n"
, stdout);
 fputs(
"              get  read  from  a  particular  file you specify it\n"
"              \"@filename\" and to tell curl  to  read  the  format\n"
"              from stdin you write \"@-\".\n"
"\n"
"              The  variables present in the output format will be\n"
"              substituted by the value or text that  curl  thinks\n"
"              fit,  as  described below. All variables are speci-\n"
"              fied like %{variable_name} and to output a normal %\n"
, stdout);
 fputs(
"              you  just write them like %%. You can output a new-\n"
"              line by using \\n, a carriage return with \\r  and  a\n"
"              tab space with \\t.\n"
"\n"
"              NOTE:  The  %-letter  is  a  special  letter in the\n"
"              win32-environment, where all occurrences of %  must\n"
"              be doubled when using this option.\n"
"\n"
"              Available variables are at this point:\n"
"\n"
"              url_effective  The  URL that was fetched last. This\n"
, stdout);
 fputs(
"                             is mostly meaningful if you've  told\n"
"                             curl to follow location: headers.\n"
"\n"
"              http_code      The numerical code that was found in\n"
"                             the last retrieved HTTP(S) page.\n"
"\n"
"              time_total     The total time, in seconds, that the\n"
"                             full operation lasted. The time will\n"
"                             be displayed with millisecond  reso-\n"
"                             lution.\n"
"\n"
, stdout);
 fputs(
"              time_namelookup\n"
"                             The  time,  in seconds, it took from\n"
"                             the start until the  name  resolving\n"
"                             was completed.\n"
"\n"
"              time_connect   The  time,  in seconds, it took from\n"
"                             the start until the connect  to  the\n"
"                             remote  host  (or  proxy)  was  com-\n"
"                             pleted.\n"
"\n"
"              time_pretransfer\n"
, stdout);
 fputs(
"                             The time, in seconds, it  took  from\n"
"                             the start until the file transfer is\n"
"                             just about to begin.  This  includes\n"
"                             all    pre-transfer   commands   and\n"
"                             negotiations that  are  specific  to\n"
"                             the particular protocol(s) involved.\n"
"\n"
"              time_starttransfer\n"
"                             The time, in seconds, it  took  from\n"
, stdout);
 fputs(
"                             the  start  until  the first byte is\n"
"                             just about to  be  transfered.  This\n"
"                             includes  time_pretransfer  and also\n"
"                             the time the server needs to  calcu-\n"
"                             late the result.\n"
"\n"
"              size_download  The  total amount of bytes that were\n"
"                             downloaded.\n"
"\n"
"              size_upload    The total amount of bytes that  were\n"
, stdout);
 fputs(
"                             uploaded.\n"
"\n"
"              size_header    The  total  amount  of  bytes of the\n"
"                             downloaded headers.\n"
"\n"
"              size_request   The total amount of bytes that  were\n"
"                             sent in the HTTP request.\n"
"\n"
"              speed_download The average download speed that curl\n"
"                             measured for the complete  download.\n"
"\n"
"              speed_upload   The  average  upload speed that curl\n"
, stdout);
 fputs(
"                             measured for the complete upload.\n"
"\n"
"              content_type   The Content-Type  of  the  requested\n"
"                             document,  if  there was any. (Added\n"
"                             in 7.9.5)\n"
"\n"
"       If this option is used several times, the last one will be\n"
"       used.\n"
"\n"
"       -x/--proxy <proxyhost[:port]>\n"
"              Use specified HTTP proxy. If the port number is not\n"
"              specified, it is assumed at port 1080.\n"
"\n"
, stdout);
 fputs(
"              This option overrides  existing  environment  vari-\n"
"              ables  that  sets proxy to use. If there's an envi-\n"
"              ronment variable setting a proxy, you can set proxy\n"
"              to \"\" to override it.\n"
"\n"
"              Note  that all operations that are performed over a\n"
"              HTTP proxy will transparantly be converted to HTTP.\n"
"              It  means that certain protocol specific operations\n"
"              might not be available. This is not the case if you\n"
, stdout);
 fputs(
"              can  tunnel  through  the  proxy,  as done with the\n"
"              -p/--proxytunnel option.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -X/--request <command>\n"
"              (HTTP)  Specifies a custom request to use when com-\n"
"              municating with the  HTTP  server.   The  specified\n"
"              request  will  be used instead of the standard GET.\n"
"              Read the HTTP 1.1  specification  for  details  and\n"
, stdout);
 fputs(
"              explanations.\n"
"\n"
"              (FTP) Specifies a custom FTP command to use instead\n"
"              of LIST when doing file lists with ftp.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -y/--speed-time <time>\n"
"              If  a download is slower than speed-limit bytes per\n"
"              second during a  speed-time  period,  the  download\n"
"              gets  aborted.  If  speed-time is used, the default\n"
, stdout);
 fputs(
"              speed-limit will be 1 unless set with -y.\n"
"\n"
"              This option controls transfers and  thus  will  not\n"
"              affect  slow connects etc. If this is a concern for\n"
"              you, try the --connect-timeout option.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -Y/--speed-limit <speed>\n"
"              If  a  download is slower than this given speed, in\n"
, stdout);
 fputs(
"              bytes per second, for speed-time  seconds  it  gets\n"
"              aborted. speed-time is set with -Y and is 30 if not\n"
"              set.\n"
"\n"
"              If this option is used several times, the last  one\n"
"              will be used.\n"
"\n"
"       -z/--time-cond <date expression>\n"
"              (HTTP) Request to get a file that has been modified\n"
"              later than the given time and date, or one that has\n"
"              been modified before that time. The date expression\n"
, stdout);
 fputs(
"              can be all sorts of date strings or if  it  doesn't\n"
"              match  any  internal ones, it tries to get the time\n"
"              from a given file name instead! See the GNU date(1)\n"
"              or  curl_getdate(3)  man  pages for date expression\n"
"              details.\n"
"\n"
"              Start the date expression with a dash (-)  to  make\n"
"              it  request  for  a document that is older than the\n"
"              given date/time, default  is  a  document  that  is\n"
, stdout);
 fputs(
"              newer than the specified date/time.\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
"       -Z/--max-redirs <num>\n"
"              Set  maximum   number   of   redirection-followings\n"
"              allowed.  If -L/--location is used, this option can\n"
"              be used to prevent curl from following redirections\n"
"              \"in absurdum\".\n"
"\n"
"              If  this option is used several times, the last one\n"
"              will be used.\n"
"\n"
, stdout);
 fputs(
"       -0/--http1.0\n"
"              (HTTP) Forces curl to issue its requests using HTTP\n"
"              1.0 instead of using its internally preferred: HTTP\n"
"              1.1.\n"
"\n"
"       -1/--tlsv1\n"
"              (HTTPS) Forces curl to use TSL version 1 when nego-\n"

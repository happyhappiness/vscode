"\n"
"     -h/--help\n"
"          Usage help.\n"
"\n"
"     -H/--header <header>\n"
"          (HTTP) Extra header to use when getting a web page. You\n"
"          may  specify  any number of extra headers. Note that if\n"
"          you should add a custom header that has the  same  name\n"
"          as one of the internal ones curl would use, your exter­\n"
"          nally set header will be used instead of  the  internal\n"
"          one.  This  allows you to make even trickier stuff than\n"
"          curl would normally do. You should not  replace  inter­\n"
"          nally  set  headers without knowing perfectly well what\n"
"          you're doing. Replacing an  internal  header  with  one\n"
"          without  content  on  the  right side of the colon will\n"
"          prevent that header from appearing.\n"
"\n"
"     -i/--include\n"
"          (HTTP) Include the HTTP-header in the output. The HTTP-\n"
"          header  includes  things  like server-name, date of the\n"
"          document, HTTP-version and more...\n"
"     --interface <name>\n"
"          Perform an operation using a specified  interface.  You\n"
"          can  enter  interface name, IP address or host name. An\n"
"          example could look like:\n"
"\n"
"          curl --interface eth0:1 http://www.netscape.com/\n"
"\n"
"     -I/--head\n"
"          (HTTP/FTP) Fetch  the  HTTP-header  only!  HTTP-servers\n"
"          feature the command HEAD which this uses to get nothing\n"
"          but the header of a document. When used on a FTP  file,\n"
"          curl displays the file size only.\n"
"\n"
"     --krb4 <level>\n"
"          (FTP)  Enable  kerberos4  authentication  and  use. The\n"
);
 puts(
"          level must be entered and should  be  one  of  'clear',\n"
"          'safe',  'confidential'  or 'private'. Should you use a\n"
"          level that is not one of these, 'private' will  instead\n"
"          be used.\n"
"\n"
"     -K/--config <config file>\n"
"          Specify  which config file to read curl arguments from.\n"
"          The config file is a text file in  which  command  line\n"
"          arguments  can be written which then will be used as if\n"
"          they were written on the actual command  line.  If  the\n"
"          first  column  of a config line is a '#' character, the\n"
"          rest of the line will be treated as a comment.\n"
"\n"
"          Specify the filename as '-' to make curl read the  file\n"
"          from stdin.\n"
"\n"
"     -l/--list-only\n"
"          (FTP) When listing an FTP directory, this switch forces\n"
"          a name-only view.  Especially useful  if  you  want  to\n"
"          machine-parse  the  contents  of an FTP directory since\n"
"          the normal directory view doesn't use a  standard  look\n"
"          or format.\n"
"\n"
"     -L/--location\n"
"          (HTTP/HTTPS)  If  the server reports that the requested\n"
"          page has  a  different  location  (indicated  with  the\n"
"          header  line Location:) this flag will let curl attempt\n"
"          to reattempt the get on the new place. If used together\n"
"          with -i or -I, headers from all requested pages will be\n"
"          shown. If this flag is used when making  a  HTTP  POST,\n"
"          curl will automatically switch to GET after the initial\n"
"          POST has been done.\n"
"\n"
"     -m/--max-time <seconds>\n"
"          Maximum time in seconds that you allow the whole opera­\n"
"          tion to take.  This is useful for preventing your batch\n"
"          jobs from hanging for hours due  to  slow  networks  or\n"
"          links  going  down.   This  doesn't work fully in win32\n"
"          systems.\n"
"\n"
"     -M/--manual\n"
"          Manual. Display the huge help text.\n"
"\n"
"     -n/--netrc\n"
"          Makes curl scan the .netrc  file  in  the  user's  home\n"
"          directory  for  login  name and password. This is typi­\n"
"          cally used for ftp on unix. If  used  with  http,  curl\n"
"          will  enable  user  authentication.  See  netrc(4)  for\n"
"          details on the file format. Curl will not  complain  if\n"
"          that  file  hasn't the right permissions (it should not\n"
"          be world nor group readable). The environment  variable\n"
"          \"HOME\" is used to find the home directory.\n"
"\n"
"          A  quick  and  very  simple  example  of how to setup a\n"
"          .netrc  to  allow  curl   to   ftp   to   the   machine\n"
"          host.domain.com with user name\n"
"\n"
"          machine host.domain.com login myself password secret\n"
"\n"
"     -N/--no-buffer\n"
"          Disables  the buffering of the output stream. In normal\n"
"          work situations, curl will use a standard buffered out­\n"
"          put  stream that will have the effect that it will out­\n"
"          put the data in chunks, not  necessarily  exactly  when\n"
"          the  data arrives.  Using this option will disable that\n"
"          buffering.\n"
"\n"
"     -o/--output <file>\n"
"          Write output to <file> instead of stdout.  If  you  are\n"
"          using {} or [] to fetch multiple documents, you can use\n"
"          '#' followed by a number in the <file> specifier.  That\n"
"          variable  will  be replaced with the current string for\n"
"          the URL being fetched. Like in:\n"
"\n"
"            curl http://{one,two}.site.com -o \"file_#1.txt\"\n"
"\n"
"          or use several variables like:\n"
"\n"
"            curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
"\n"
"     -O/--remote-name\n"
"          Write output to a local file named like the remote file\n"
"          we get. (Only the file part of the remote file is used,\n"
"          the path is cut off.)\n"
"\n"
"     -p/--proxytunnel\n"
"          When an HTTP proxy is used, this option will cause non-\n"
"          HTTP  protocols  to attempt to tunnel through the proxy\n"
"          instead of merely using it to do HTTP-like  operations.\n"
"          The tunnel approach is made with the HTTP proxy CONNECT\n"
"          request and requires that the proxy allows direct  con­\n"
"          nect  to  the  remote  port number curl wants to tunnel\n"
"          through to.\n"
"\n"
"     -P/--ftpport <address>\n"
"          (FTP) Reverses the initiator/listener roles  when  con­\n"
"          necting  with  ftp. This switch makes Curl use the PORT\n"
"          command instead of PASV. In practice,  PORT  tells  the\n"
"          server to connect to the client's specified address and\n"
"          port, while PASV asks the server for an ip address  and\n"
"          port to connect to. <address> should be one of:\n"
"\n"
"          interface   i.e  \"eth0\" to specify which interface's IP\n"
"                      address you want to use  (Unix only)\n"
"\n"
"          IP address  i.e \"192.168.10.1\" to specify exact IP num­\n"
"                      ber\n"
"\n"
"          host name   i.e \"my.host.domain\" to specify machine\n"
"\n"
"          -           (any  single-letter string) to make it pick\n"
"                      the machine's default\n"
"\n"
"     -q   If used as the first parameter on the command line, the\n"
"          $HOME/.curlrc  file will not be read and used as a con­\n"
"          fig file.\n"
"\n"
"     -Q/--quote <comand>\n"
"          (FTP) Send an  arbitrary  command  to  the  remote  FTP\n"
"          server,  by  using the QUOTE command of the server. Not\n"
"          all servers support this command, and the set of  QUOTE\n"
"          commands  are  server specific! Quote commands are sent\n"
"          BEFORE the transfer is taking place. To  make  commands\n"
"          take  place  after  a  successful transfer, prefix them\n"
"          with a dash '-'. You may specify any amount of commands\n"
"          to  be run before and after the transfer. If the server\n"
"          returns failure for one of  the  commands,  the  entire\n"
"          operation will be aborted.\n"
"\n"
"     -r/--range <range>\n"
"          (HTTP/FTP)  Retrieve  a byte range (i.e a partial docu­\n"
"          ment) from a HTTP/1.1 or  FTP  server.  Ranges  can  be\n"
"          specified in a number of ways.\n"
"\n"
"          0-499     specifies the first 500 bytes\n"
"\n"
"          500-999   specifies the second 500 bytes\n"
"\n"
"          -500      specifies the last 500 bytes\n"
"\n"
"          9500      specifies  the  bytes  from  offset  9500 and\n"
"                    forward\n"
"\n"
"          0-0,-1    specifies the first and last byte only(*)(H)\n"
"\n"
"          500-700,600-799\n"
"                    specifies 300 bytes from offset 500(H)\n"
"\n"
"          100-199,500-599\n"
"                    specifies two separate 100 bytes ranges(*)(H)\n"
"\n"
"     (*)  =  NOTE that this will cause the server to reply with a\n"
"     multipart response!\n"
"\n"
"     You should also be aware that many HTTP/1.1 servers  do  not\n"
"     have this feature enabled, so that when you attempt to get a\n"
"     range, you'll instead get the whole document.\n"
"\n"
"     FTP range downloads only support the simple  syntax  'start-\n"
"     stop'  (optionally  with  one  of  the  numbers omitted). It\n"
"     depends on the non-RFC command SIZE.\n"
"\n"
"     -s/--silent\n"
"          Silent mode. Don't show progress meter  or  error  mes­\n"
"          sages.  Makes Curl mute.\n"
"\n"
"     -S/--show-error\n"
"          When  used  with -s it makes curl show error message if\n"
"          it fails.\n"
"\n"
"     -t/--upload\n"
"          Deprecated. Use '-T -'  instead.   Transfer  the  stdin\n"
"          data  to  the specified file. Curl will read everything\n"
"          from stdin until EOF and store with the supplied  name.\n"
"          If  this  is  used on a http(s) server, the PUT command\n"
"          will be used.\n"
"\n"
"     -T/--upload-file <file>\n"
"          Like -t, but this transfers the specified  local  file.\n"
"          If  there  is  no  file part in the specified URL, Curl\n"
"          will append the local file name. NOTE that you must use\n"
"          a  trailing  / on the last directory to really prove to\n"
"          Curl that there is no file name or curl will think that\n"
"          your  last  directory  name  is the remote file name to\n"
"          use. That will most likely cause the  upload  operation\n"
"          to  fail.  If this is used on a http(s) server, the PUT\n"
"          command will be used.\n"
"\n"
"     -u/--user <user:password>\n"
"          Specify user and password to  use  when  fetching.  See\n"
"          README.curl  for  detailed examples of how to use this.\n"
"          If no password is  specified,  curl  will  ask  for  it\n"
"          interactively.\n"
"     -U/--proxy-user <user:password>\n"
"          Specify  user and password to use for Proxy authentica­\n"
"          tion. If no password is specified, curl will ask for it\n"
"          interactively.\n"
"\n"
"     -v/--verbose\n"
"          Makes   the  fetching  more  verbose/talkative.  Mostly\n"
"          usable for debugging. Lines  starting  with  '>'  means\n"
"          data sent by curl, '<' means data received by curl that\n"
"          is hidden in normal cases and lines starting  with  '*'\n"
"          means additional info provided by curl.\n"
"\n"
"     -V/--version\n"
"          Displays  the  full  version of curl, libcurl and other\n"
"          3rd party libraries linked with the executable.\n"
"\n"
"     -w/--write-out <format>\n"
"          Defines what to display after a completed and  success­\n"
"          ful  operation. The format is a string that may contain\n"
"          plain text mixed with  any  number  of  variables.  The\n"
"          string can be specified as \"string\", to get read from a\n"
"          particular file you specify it \"@filename\" and to  tell\n"
"          curl to read the format from stdin you write \"@-\".\n"
"\n"
"          The variables present in the output format will be sub­\n"
"          stituted by the value or text that curl thinks fit,  as\n"
"          described  below.  All  variables  are  specified  like\n"
"          %{variable_name} and to output  a  normal  %  you  just\n"
"          write  them  like %%. You can output a newline by using\n"
"          \\n, a carrige return with \\r and a tab space with \\t.\n"
"\n"
"          NOTE:  The  %-letter  is  a  special  letter   in   the\n"
"          win32-environment,  where  all occurrences of % must be\n"
"          doubled when using this option.\n"
"\n"
"          Available variables are at this point:\n"
"\n"
"          url_effective  The URL that was fetched last.  This  is\n"
"                         mostly meaningful if you've told curl to\n"
"                         follow location: headers.\n"
"\n"
"          http_code      The numerical code that was found in the\n"
);
 puts(
"                         last retrieved HTTP(S) page.\n"
"\n"
"          time_total     The  total  time,  in  seconds, that the\n"
"                         full operation lasted. The time will  be\n"
"                         displayed with millisecond resolution.\n"
"\n"
"          time_namelookup\n"
"                         The  time,  in seconds, it took from the\n"
"                         start until the name resolving was  com­\n"
"                         pleted.\n"
"          time_connect   The  time,  in seconds, it took from the\n"
"                         start until the connect  to  the  remote\n"
"                         host (or proxy) was completed.\n"
"\n"
"          time_pretransfer\n"
"                         The  time,  in seconds, it took from the\n"
"                         start until the file  transfer  is  just\n"
"                         about  to  begin. This includes all pre-\n"
"                         transfer commands and negotiations  that\n"
"                         are  specific  to  the particular proto­\n"
"                         col(s) involved.\n"
"\n"
"          size_download  The total  amount  of  bytes  that  were\n"
"                         downloaded.\n"
"\n"
"          size_upload    The  total  amount  of  bytes  that were\n"
"                         uploaded.\n"
"\n"
"          size_header    The total amount of bytes of  the  down­\n"
"                         loaded headers.\n"
"\n"
"          size_request   The total amount of bytes that were sent\n"
"                         in the HTTP request.\n"
"\n"
"          speed_download The average  download  speed  that  curl\n"
"                         measured for the complete download.\n"
"\n"
"          speed_upload   The  average upload speed that curl mea­\n"
"                         sured for the complete upload.\n"
"\n"
"     -x/--proxy <proxyhost[:port]>\n"
"          Use specified proxy. If the port number is  not  speci­\n"
"          fied, it is assumed at port 1080.\n"
"\n"
"     -X/--request <command>\n"
"          (HTTP)  Specifies a custom request to use when communi­\n"
"          cating with the HTTP  server.   The  specified  request\n"
"          will be used instead of the standard GET. Read the HTTP\n"
"          1.1 specification for details and explanations.\n"
"\n"
"          (FTP) Specifies a custom FTP command to use instead  of\n"
"          LIST when doing file lists with ftp.\n"
"\n"
"     -y/--speed-time <time>\n"
"          If a download is slower than speed-limit bytes per sec­\n"
"          ond during  a  speed-time  period,  the  download  gets\n"
"          aborted. If speed-time is used, the default speed-limit\n"
"          will be 1 unless set with -y.\n"
"\n"
"     -Y/--speed-limit <speed>\n"
"          If a download is slower than this given speed, in bytes\n"
"          per  second,  for  speed-time  seconds it gets aborted.\n"
"          speed-time is set with -Y and is 30 if not set.\n"
"\n"
"     -z/--time-cond <date expression>\n"
"          (HTTP) Request to get a file  that  has  been  modified\n"
"          later  than  the  given  time and date, or one that has\n"
"          been modified before that time. The date expression can\n"
"          be all sorts of date strings or if it doesn't match any\n"
"          internal ones, it tries to get the time  from  a  given\n"
"          file  name  instead!  See  the GNU date(1) or curl_get­\n"
"          date(3) man pages for date expression details.\n"
"\n"
"          Start the date expression with a dash (-)  to  make  it\n"
"          request  for  a  document  that is older than the given\n"
"          date/time, default is a document that is newer than the\n"
"          specified date/time.\n"
"\n"
"     -3/--sslv3\n"
"          (HTTPS) Forces curl to use SSL version 3 when negotiat­\n"
"          ing with a remote SSL server.\n"
"\n"
"     -2/--sslv2\n"
"          (HTTPS) Forces curl to use SSL version 2 when negotiat­\n"
"          ing with a remote SSL server.\n"
"\n"
"     -#/--progress-bar\n"
"          Make  curl  display  progress information as a progress\n"
"          bar instead of the default statistics.\n"
"\n"
"     --crlf\n"
"          (FTP) Convert LF to CRLF  in  upload.  Useful  for  MVS\n"
"          (OS/390).\n"
"\n"
"     --stderr <file>\n"
"          Redirect  all  writes  to  stderr to the specified file\n"
"          instead. If the file name is a plain '-', it is instead\n"
"          written to stdout. This option has no point when you're\n"
"          using a shell with decent redirecting capabilities.\n"
"\n"
"FILES\n"
"     ~/.curlrc\n"
"          Default config file.\n"
"\n"
"ENVIRONMENT\n"
"     HTTP_PROXY [protocol://]<host>[:port]\n"
"          Sets proxy server to use for HTTP.\n"
"\n"
"     HTTPS_PROXY [protocol://]<host>[:port]\n"
"          Sets proxy server to use for HTTPS.\n"
"\n"
"     FTP_PROXY [protocol://]<host>[:port]\n"
"          Sets proxy server to use for FTP.\n"
"     GOPHER_PROXY [protocol://]<host>[:port]\n"
"          Sets proxy server to use for GOPHER.\n"
"\n"
"     ALL_PROXY [protocol://]<host>[:port]\n"
"          Sets proxy server to use if no protocol-specific  proxy\n"
"          is set.\n"
"\n"
"     NO_PROXY <comma-separated list of hosts>\n"
"          list of host names that shouldn't go through any proxy.\n"
"          If set to a asterisk '*' only, it matches all hosts.\n"
"\n"
"     COLUMNS <integer>\n"
"          The width of the terminal.  This variable only  affects\n"
"          curl when the --progress-bar option is used.\n"
"\n"
"EXIT CODES\n"
"     There exists a bunch of different error codes and their cor­\n"
"     responding error messages that may appear during bad  condi­\n"
"     tions. At the time of this writing, the exit codes are:\n"
"\n"
"     1    Unsupported protocol. This build of curl has no support\n"
"          for this protocol.\n"
"\n"
"     2    Failed to initialize.\n"
"\n"
"     3    URL malformat. The syntax was not correct.\n"
"\n"
"     4    URL user malformatted. The user-part of the URL  syntax\n"
"          was not correct.\n"
"\n"
"     5    Couldn't  resolve proxy. The given proxy host could not\n"
"          be resolved.\n"
"\n"
"     6    Couldn't resolve host. The given remote  host  was  not\n"
"          resolved.\n"
"\n"
"     7    Failed to connect to host.\n"
"\n"
"     8    FTP  weird  server  reply.  The  server  sent data curl\n"
"          couldn't parse.\n"
"\n"
"     9    FTP access denied. The server denied login.\n"
"\n"
"     10   FTP user/password incorrect. Either one  or  both  were\n"
"          not accepted by the server.\n"
"\n"
"     11   FTP  weird  PASS  reply.  Curl couldn't parse the reply\n"
"          sent to the PASS request.\n"
"\n"
"     12   FTP weird USER reply. Curl  couldn't  parse  the  reply\n"
"          sent to the USER request.\n"
"     13   FTP  weird  PASV  reply,  Curl couldn't parse the reply\n"
"          sent to the PASV request.\n"
"\n"
"     14   FTP weird 227 formay. Curl couldn't parse the  227-line\n"
"          the server sent.\n"
"\n"
"     15   FTP can't get host. Couldn't resolve the host IP we got\n"
"          in the 227-line.\n"
"\n"
"     16   FTP can't reconnect. Couldn't connect to  the  host  we\n"
"          got in the 227-line.\n"
"\n"
"     17   FTP  couldn't  set  binary.  Couldn't  change  transfer\n"
"          method to binary.\n"
"\n"
"     18   Partial file. Only a part of the file was transfered.\n"
"\n"
"     19   FTP couldn't RETR file. The RETR command failed.\n"
"\n"
"     20   FTP write error. The transfer was reported bad  by  the\n"
"          server.\n"
"\n"
"     21   FTP  quote  error.  A quote command returned error from\n"
"          the server.\n"
"\n"
"     22   HTTP not found. The requested page was not found.  This\n"
"          return code only appears if --fail is used.\n"
"\n"
"     23   Write  error.  Curl  couldn't  write  data  to  a local\n"
"          filesystem or similar.\n"
"\n"
"     24   Malformat user. User name badly specified.\n"
"\n"
"     25   FTP couldn't STOR file.  The  server  denied  the  STOR\n"
"          operation.\n"
"\n"
"     26   Read error. Various reading problems.\n"
"\n"
"     27   Out of memory. A memory allocation request failed.\n"
"\n"
"     28   Operation  timeout.  The  specified time-out period was\n"
"          reached according to the conditions.\n"
"\n"
"     29   FTP couldn't set ASCII. The server returned an  unknown\n"
"          reply.\n"
"\n"
"     30   FTP PORT failed. The PORT command failed.\n"
"\n"
"     31   FTP couldn't use REST. The REST command failed.\n"
"\n"
"     32   FTP  couldn't  use  SIZE.  The SIZE command failed. The\n"
"          command is an extension to the original  FTP  spec  RFC\n"
"          959.\n"
"\n"
"     33   HTTP range error. The range \"command\" didn't work.\n"
"\n"
"     34   HTTP   post  error.  Internal  post-request  generation\n"
"          error.\n"
"\n"
"     35   SSL connect error. The SSL handshaking failed.\n"
"\n"
"     36   FTP bad download resume. Couldn't continue  an  earlier\n"
"          aborted download.\n"
"\n"
"     37   FILE  couldn't read file. Failed to open the file. Per­\n"
"          missions?\n"
"\n"
"     38   LDAP cannot bind. LDAP bind operation failed.\n"
"\n"
"     39   LDAP search failed.\n"
"\n"
"     40   Library not found. The LDAP library was not found.\n"
"\n"
"     41   Function not found. A required LDAP  function  was  not\n"
"          found.\n"
"\n"
"     XX   There  will  appear  more  error  codes  here in future\n"
"          releases. The existing ones are meant to never  change.\n"
"\n"
"BUGS\n"
"     If  you do find any (or have other suggestions), mail Daniel\n"
"     Stenberg <Daniel.Stenberg@haxx.se>.\n"
"\n"
"AUTHORS / CONTRIBUTORS\n"
"      - Daniel Stenberg <Daniel.Stenberg@haxx.se>\n"
"      - Rafael Sagula <sagula@inf.ufrgs.br>\n"
"      - Sampo Kellomaki <sampo@iki.fi>\n"
"      - Linas Vepstas <linas@linas.org>\n"

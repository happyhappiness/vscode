<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1958_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">sec_recv<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">connectdata<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">conn<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">sockindex<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">buffer<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">size_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">len<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">CURLcode<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">err<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">bytes_read<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">total_read<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">curl_socket_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">fd<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">conn<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">sock<pos:position pos:line="6" pos:column="32"/></name><index pos:line="6" pos:column="32">[<expr><name pos:line="6" pos:column="33">sockindex<pos:position pos:line="6" pos:column="42"/></name></expr>]<pos:position pos:line="6" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="8" pos:column="3">*<pos:position pos:line="8" pos:column="4"/></operator><name pos:line="8" pos:column="4">err<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <name pos:line="8" pos:column="10">CURLE_OK<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Handle clear text response. */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name><name pos:line="11" pos:column="6">conn<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">sec_complete<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal> <operator pos:line="11" pos:column="30">||<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">conn<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">data_prot<pos:position pos:line="11" pos:column="48"/></name></name> <operator pos:line="11" pos:column="49">==<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="52">PROT_CLEAR<pos:position pos:line="11" pos:column="62"/></name></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><call><name pos:line="12" pos:column="14">read<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">fd<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">buffer<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">len<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name><name pos:line="14" pos:column="6">conn<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">in_buffer<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">eof_flag<pos:position pos:line="14" pos:column="30"/></name></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <block pos:line="14" pos:column="32">{
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">conn<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">in_buffer<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">eof_flag<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">bytes_read<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">buffer_read<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name><name pos:line="19" pos:column="29">conn<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">in_buffer<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">buffer<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">len<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><name pos:line="20" pos:column="3">len<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">-=<pos:position pos:line="20" pos:column="9"/></operator> <name pos:line="20" pos:column="10">bytes_read<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">total_read<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">+=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">bytes_read<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="22" pos:column="3">buffer<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">+=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">bytes_read<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>

  <while pos:line="24" pos:column="3">while<condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">len<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">&gt;<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr>)<pos:position pos:line="24" pos:column="17"/></condition> <block pos:line="24" pos:column="18">{
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><call><name pos:line="25" pos:column="8">read_data<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">conn<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">fd<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="28">&amp;<pos:position pos:line="25" pos:column="33"/></operator><name><name pos:line="25" pos:column="29">conn<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">in_buffer<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
      <block type="pseudo"><return pos:line="26" pos:column="7">return <expr><operator pos:line="26" pos:column="14">-<pos:position pos:line="26" pos:column="15"/></operator><literal type="number" pos:line="26" pos:column="15">1<pos:position pos:line="26" pos:column="16"/></literal></expr>;<pos:position pos:line="26" pos:column="17"/></return></block></then></if>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">(<expr><name><name pos:line="27" pos:column="8">conn<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">in_buffer<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">.<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">size<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">==<pos:position pos:line="27" pos:column="31"/></operator> <literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
      <if pos:line="28" pos:column="7">if<condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">bytes_read<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">&gt;<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="9">conn<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">in_buffer<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">eof_flag<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <literal type="number" pos:line="29" pos:column="36">1<pos:position pos:line="29" pos:column="37"/></literal></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt></block></then></if>
      <return pos:line="30" pos:column="7">return <expr><name pos:line="30" pos:column="14">bytes_read<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="32" pos:column="5">bytes_read<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">buffer_read<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><operator pos:line="32" pos:column="30">&amp;<pos:position pos:line="32" pos:column="35"/></operator><name><name pos:line="32" pos:column="31">conn<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">in_buffer<pos:position pos:line="32" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">buffer<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">len<pos:position pos:line="32" pos:column="59"/></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">len<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">-=<pos:position pos:line="33" pos:column="11"/></operator> <name pos:line="33" pos:column="12">bytes_read<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">total_read<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">+=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">bytes_read<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">buffer<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">+=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">bytes_read<pos:position pos:line="35" pos:column="25"/></name></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></while>
  <comment type="block" pos:line="37" pos:column="3">/* FIXME: Check for overflow */</comment>
  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">total_read<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

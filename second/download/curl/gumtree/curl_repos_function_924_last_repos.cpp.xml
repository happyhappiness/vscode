<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_924_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">c_escape<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">str<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">len<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">s<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">c<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">escaped<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">e<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name pos:line="7" pos:column="6">len<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">==<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">CURL_ZERO_TERMINATED<pos:position pos:line="7" pos:column="33"/></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">len<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">strlen<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">str<pos:position pos:line="8" pos:column="21"/></name></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="10" pos:column="3">/* Check for possible overflow. */</comment>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">len<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">&gt;<pos:position pos:line="11" pos:column="14"/></operator> <operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">~<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">size_t<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">/<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="28">4<pos:position pos:line="11" pos:column="29"/></literal></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">NULL<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* Allocate space based on worst-case */</comment>
  <expr_stmt><expr><name pos:line="15" pos:column="3">escaped<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">malloc<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">4<pos:position pos:line="15" pos:column="21"/></literal> <operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">len<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">+<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="30">1<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><operator pos:line="16" pos:column="6">!<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">escaped<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">e<pos:position pos:line="19" pos:column="4"/></name> <operator pos:line="19" pos:column="5">=<pos:position pos:line="19" pos:column="6"/></operator> <name pos:line="19" pos:column="7">escaped<pos:position pos:line="19" pos:column="14"/></name></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
  <for pos:line="20" pos:column="3">for<control pos:line="20" pos:column="6">(<init><expr><name pos:line="20" pos:column="7">s<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name pos:line="20" pos:column="11">str<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></init> <condition><expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">c<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">*<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">s<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">)<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="25">!=<pos:position pos:line="20" pos:column="27"/></operator> <literal type="char" pos:line="20" pos:column="28">'\0'<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></condition> <incr><expr><name pos:line="20" pos:column="34">s<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">++<pos:position pos:line="20" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="38"/></control> <block pos:line="20" pos:column="39">{
    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">c<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">==<pos:position pos:line="21" pos:column="12"/></operator> <literal type="char" pos:line="21" pos:column="13">'\n'<pos:position pos:line="21" pos:column="17"/></literal></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18"> <block pos:line="21" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">strcpy<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">e<pos:position pos:line="22" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="17">"\\n"<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="23" pos:column="7">e<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">+=<pos:position pos:line="23" pos:column="11"/></operator> <literal type="number" pos:line="23" pos:column="12">2<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if<condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">c<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">==<pos:position pos:line="25" pos:column="17"/></operator> <literal type="char" pos:line="25" pos:column="18">'\r'<pos:position pos:line="25" pos:column="22"/></literal></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <block pos:line="25" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">strcpy<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">e<pos:position pos:line="26" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="17">"\\r"<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">e<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">+=<pos:position pos:line="27" pos:column="11"/></operator> <literal type="number" pos:line="27" pos:column="12">2<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if<condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">c<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <literal type="char" pos:line="29" pos:column="18">'\t'<pos:position pos:line="29" pos:column="22"/></literal></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">strcpy<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">e<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="17">"\\t"<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">e<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">+=<pos:position pos:line="31" pos:column="11"/></operator> <literal type="number" pos:line="31" pos:column="12">2<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if<condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">c<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">==<pos:position pos:line="33" pos:column="17"/></operator> <literal type="char" pos:line="33" pos:column="18">'\\'<pos:position pos:line="33" pos:column="22"/></literal></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23"> <block pos:line="33" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">strcpy<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">e<pos:position pos:line="34" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="17">"\\\\"<pos:position pos:line="34" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">e<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">+=<pos:position pos:line="35" pos:column="11"/></operator> <literal type="number" pos:line="35" pos:column="12">2<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if<condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">c<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">==<pos:position pos:line="37" pos:column="17"/></operator> <literal type="char" pos:line="37" pos:column="18">'"'<pos:position pos:line="37" pos:column="21"/></literal></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22"> <block pos:line="37" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">strcpy<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">e<pos:position pos:line="38" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="17">"\\\""<pos:position pos:line="38" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">e<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">+=<pos:position pos:line="39" pos:column="11"/></operator> <literal type="number" pos:line="39" pos:column="12">2<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if<condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator> <call><name pos:line="41" pos:column="15">isprint<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">c<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26"> <block pos:line="41" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">snprintf<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">e<pos:position pos:line="42" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="19">5<pos:position pos:line="42" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="22">"\\%03o"<pos:position pos:line="42" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="32">(<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">unsigned<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">)<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">c<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">e<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">+=<pos:position pos:line="43" pos:column="11"/></operator> <literal type="number" pos:line="43" pos:column="12">4<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif>
    <else pos:line="45" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="7">*<pos:position pos:line="46" pos:column="8"/></operator><name pos:line="46" pos:column="8">e<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">++<pos:position pos:line="46" pos:column="11"/></operator> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">c<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></expr_stmt></block></else></if>
  }<pos:position pos:line="47" pos:column="4"/></block></for>
  <expr_stmt><expr><operator pos:line="48" pos:column="3">*<pos:position pos:line="48" pos:column="4"/></operator><name pos:line="48" pos:column="4">e<pos:position pos:line="48" pos:column="5"/></name> <operator pos:line="48" pos:column="6">=<pos:position pos:line="48" pos:column="7"/></operator> <literal type="char" pos:line="48" pos:column="8">'\0'<pos:position pos:line="48" pos:column="12"/></literal></expr>;<pos:position pos:line="48" pos:column="13"/></expr_stmt>
  <return pos:line="49" pos:column="3">return <expr><name pos:line="49" pos:column="10">escaped<pos:position pos:line="49" pos:column="17"/></name></expr>;<pos:position pos:line="49" pos:column="18"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_350_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">my_seek<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">stream<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">curl_off_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">offset<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">whence<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">InStruct<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">in<pos:position pos:line="3" pos:column="22"/></name><init pos:line="3" pos:column="22">=<expr><operator pos:line="3" pos:column="23">(<pos:position pos:line="3" pos:column="24"/></operator>struct <name pos:line="3" pos:column="31">InStruct<pos:position pos:line="3" pos:column="39"/></name> <operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><operator pos:line="3" pos:column="41">)<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">stream<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">SIZEOF_CURL_OFF_T<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&gt;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="26">SIZEOF_OFF_T<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">)<pos:position pos:line="5" pos:column="39"/></operator> <operator pos:line="5" pos:column="40">&amp;&amp;<pos:position pos:line="5" pos:column="50"/></operator> <operator pos:line="5" pos:column="43">!<pos:position pos:line="5" pos:column="44"/></operator><call><name pos:line="5" pos:column="44">defined<pos:position pos:line="5" pos:column="51"/></name><argument_list pos:line="5" pos:column="51">(<argument><expr><name pos:line="5" pos:column="52">lseek<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></cpp:if>
  <comment type="block" pos:line="6" pos:column="3">/* The sizeof check following here is only interesting if curl_off_t is
     larger than off_t, but also not on windows-like systems for which lseek
     is a defined macro that works around the 32bit off_t-problem and thus do
     64bit seeks correctly anyway */</comment>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">offset<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&gt;<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="15">MAX_SEEK<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
    <comment type="block" pos:line="12" pos:column="5">/* Some precaution code to work around problems with different data sizes
       to allow seeking &gt;32bit even if off_t is 32bit. Should be very rare and
       is really valid on weirdo-systems. */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">curl_off_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">left<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name pos:line="15" pos:column="23">offset<pos:position pos:line="15" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>

    <if pos:line="17" pos:column="5">if<condition pos:line="17" pos:column="7">(<expr><name pos:line="17" pos:column="8">whence<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">!=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">SEEK_SET<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
      <comment type="block" pos:line="18" pos:column="7">/* this code path doesn't support other types */</comment>
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></return></block></then></if>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><operator pos:line="21" pos:column="8">-<pos:position pos:line="21" pos:column="9"/></operator><literal type="number" pos:line="21" pos:column="9">1<pos:position pos:line="21" pos:column="10"/></literal> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">lseek<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name><name pos:line="21" pos:column="20">in<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">fd<pos:position pos:line="21" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">SEEK_SET<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41">
      <comment type="block" pos:line="22" pos:column="7">/* couldn't rewind to beginning */</comment>
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></return></block></then></if>

    <while pos:line="25" pos:column="5">while<condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">left<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition> <block pos:line="25" pos:column="17">{
      <decl_stmt><decl><type><name pos:line="26" pos:column="7">long<pos:position pos:line="26" pos:column="11"/></name></type> <name pos:line="26" pos:column="12">step<pos:position pos:line="26" pos:column="16"/></name> <init pos:line="26" pos:column="17">= <expr><operator pos:line="26" pos:column="19">(<pos:position pos:line="26" pos:column="20"/></operator><ternary><condition><expr><name pos:line="26" pos:column="20">left<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">MAX_SEEK<pos:position pos:line="26" pos:column="33"/></name></expr> ?<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <expr><name pos:line="26" pos:column="36">MAX_SEEK<pos:position pos:line="26" pos:column="44"/></name></expr> <pos:position pos:line="26" pos:column="45"/></then><else pos:line="26" pos:column="45">: <expr><operator pos:line="26" pos:column="47">(<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">long<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">)<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">left<pos:position pos:line="26" pos:column="57"/></name></expr></else></ternary><operator pos:line="26" pos:column="57">)<pos:position pos:line="26" pos:column="58"/></operator></expr></init></decl>;<pos:position pos:line="26" pos:column="59"/></decl_stmt>
      <if pos:line="27" pos:column="7">if<condition pos:line="27" pos:column="9">(<expr><operator pos:line="27" pos:column="10">-<pos:position pos:line="27" pos:column="11"/></operator><literal type="number" pos:line="27" pos:column="11">1<pos:position pos:line="27" pos:column="12"/></literal> <operator pos:line="27" pos:column="13">==<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">lseek<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name><name pos:line="27" pos:column="22">in<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">fd<pos:position pos:line="27" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">step<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">SEEK_CUR<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="46"/></condition><then pos:line="27" pos:column="46">
        <comment type="block" pos:line="28" pos:column="9">/* couldn't seek forwards the desired amount */</comment>
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="30" pos:column="7">left<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">-=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">step<pos:position pos:line="30" pos:column="19"/></name></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></while>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="35" pos:column="3">if<condition pos:line="35" pos:column="5">(<expr><operator pos:line="35" pos:column="6">-<pos:position pos:line="35" pos:column="7"/></operator><literal type="number" pos:line="35" pos:column="7">1<pos:position pos:line="35" pos:column="8"/></literal> <operator pos:line="35" pos:column="9">==<pos:position pos:line="35" pos:column="11"/></operator> <call><name pos:line="35" pos:column="12">lseek<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name><name pos:line="35" pos:column="18">in<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">fd<pos:position pos:line="35" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="26">offset<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">whence<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
    <comment type="block" pos:line="36" pos:column="5">/* couldn't rewind, the reason is in errno but errno is just not
       portable enough and we don't actually care that much why we failed. */</comment>
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><literal type="number" pos:line="38" pos:column="12">1<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></return></block></then></if>

  <return pos:line="40" pos:column="3">return <expr><literal type="number" pos:line="40" pos:column="10">0<pos:position pos:line="40" pos:column="11"/></literal></expr>;<pos:position pos:line="40" pos:column="12"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

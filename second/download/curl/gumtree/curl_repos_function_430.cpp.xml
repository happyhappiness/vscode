<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_430.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">CreateConnection<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">SessionHandle<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">data<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">connectdata<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">in_connect<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="3" pos:column="34">struct<pos:position pos:line="3" pos:column="40"/></name> <name pos:line="3" pos:column="41">Curl_dns_entry<pos:position pos:line="3" pos:column="55"/></name></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier><modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">addr<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="4" pos:column="34">bool<pos:position pos:line="4" pos:column="38"/></name> <modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier></type><name pos:line="4" pos:column="40">async<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="46"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">tmp<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">at<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">CURLcode<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name><init pos:line="8" pos:column="18">=<expr><name pos:line="8" pos:column="19">CURLE_OK<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">connectdata<pos:position pos:line="9" pos:column="21"/></name></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">conn<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">connectdata<pos:position pos:line="10" pos:column="21"/></name></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">conn_temp<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><name pos:line="10" pos:column="35">NULL<pos:position pos:line="10" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">urllen<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">Curl_dns_entry<pos:position pos:line="12" pos:column="24"/></name></name> <modifier pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></modifier></type><name pos:line="12" pos:column="26">hostaddr<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><call><name pos:line="13" pos:column="5">defined<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">HAVE_ALARM<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="28">!<pos:position pos:line="13" pos:column="29"/></operator><call><name pos:line="13" pos:column="29">defined<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">USE_ARES<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">unsigned<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">int<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">prev_alarm<pos:position pos:line="14" pos:column="26"/></name><init pos:line="14" pos:column="26">=<expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name></type> <name pos:line="16" pos:column="8">endbracket<pos:position pos:line="16" pos:column="18"/></name></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">user<pos:position pos:line="17" pos:column="12"/></name><index pos:line="17" pos:column="12">[<expr><name pos:line="17" pos:column="13">MAX_CURL_USER_LENGTH<pos:position pos:line="17" pos:column="33"/></name></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">char<pos:position pos:line="18" pos:column="7"/></name></type> <name><name pos:line="18" pos:column="8">passwd<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><name pos:line="18" pos:column="15">MAX_CURL_PASSWORD_LENGTH<pos:position pos:line="18" pos:column="39"/></name></expr>]<pos:position pos:line="18" pos:column="40"/></index></name></decl>;<pos:position pos:line="18" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">rc<pos:position pos:line="19" pos:column="9"/></name></decl>;<pos:position pos:line="19" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">bool<pos:position pos:line="20" pos:column="7"/></name></type> <name pos:line="20" pos:column="8">reuse<pos:position pos:line="20" pos:column="13"/></name></decl>;<pos:position pos:line="20" pos:column="14"/></decl_stmt>

<cpp:ifndef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifndef<pos:position pos:line="22" pos:column="8"/></cpp:directive> <name pos:line="22" pos:column="9">USE_ARES<pos:position pos:line="22" pos:column="17"/></name></cpp:ifndef>
<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">SIGALRM<pos:position pos:line="23" pos:column="15"/></name></cpp:ifdef>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">HAVE_SIGACTION<pos:position pos:line="24" pos:column="22"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="25" pos:column="3">struct<pos:position pos:line="25" pos:column="9"/></name> <name pos:line="25" pos:column="10">sigaction<pos:position pos:line="25" pos:column="19"/></name></name></type> <name pos:line="25" pos:column="20">keep_sigact<pos:position pos:line="25" pos:column="31"/></name></decl>;<pos:position pos:line="25" pos:column="32"/></decl_stmt>   <comment type="block" pos:line="25" pos:column="35">/* store the old struct here */</comment>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">bool<pos:position pos:line="26" pos:column="7"/></name></type> <name pos:line="26" pos:column="8">keep_copysig<pos:position pos:line="26" pos:column="20"/></name><init pos:line="26" pos:column="20">=<expr><name pos:line="26" pos:column="21">FALSE<pos:position pos:line="26" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>        <comment type="block" pos:line="26" pos:column="35">/* did copy it? */</comment>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">HAVE_SIGNAL<pos:position pos:line="28" pos:column="19"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">void<pos:position pos:line="29" pos:column="7"/></name> <modifier pos:line="29" pos:column="8">*<pos:position pos:line="29" pos:column="9"/></modifier></type><name pos:line="29" pos:column="9">keep_sigact<pos:position pos:line="29" pos:column="20"/></name></decl>;<pos:position pos:line="29" pos:column="21"/></decl_stmt>              <comment type="block" pos:line="29" pos:column="35">/* store the old handler here */</comment>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="30" pos:column="8">/* HAVE_SIGNAL */</comment>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="31" pos:column="8">/* HAVE_SIGACTION */</comment>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/* SIGALRM */</comment>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="33" pos:column="8">/* USE_ARES */</comment>

  <expr_stmt><expr><operator pos:line="35" pos:column="3">*<pos:position pos:line="35" pos:column="4"/></operator><name pos:line="35" pos:column="4">addr<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <name pos:line="35" pos:column="11">NULL<pos:position pos:line="35" pos:column="15"/></name></expr>;<pos:position pos:line="35" pos:column="16"/></expr_stmt> <comment type="block" pos:line="35" pos:column="17">/* nothing yet */</comment>
  <expr_stmt><expr><operator pos:line="36" pos:column="3">*<pos:position pos:line="36" pos:column="4"/></operator><name pos:line="36" pos:column="4">async<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <name pos:line="36" pos:column="12">FALSE<pos:position pos:line="36" pos:column="17"/></name></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>

  <comment type="block" format="doxygen" pos:line="38" pos:column="3">/*************************************************************
   * Check input data
   *************************************************************/</comment>

  <if pos:line="42" pos:column="3">if<condition pos:line="42" pos:column="5">(<expr><operator pos:line="42" pos:column="6">!<pos:position pos:line="42" pos:column="7"/></operator><name><name pos:line="42" pos:column="7">data<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">change<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">url<pos:position pos:line="42" pos:column="23"/></name></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24">
    <block type="pseudo"><return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">CURLE_URL_MALFORMAT<pos:position pos:line="43" pos:column="31"/></name></expr>;<pos:position pos:line="43" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="45" pos:column="3">/* First, split up the current URL in parts so that we can use the
     parts for checking against the already present connections. In order
     to not have to modify everything at once, we allocate a temporary
     connection data struct and fill in for comparison purposes. */</comment>

  <expr_stmt><expr><name pos:line="50" pos:column="3">conn<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <operator pos:line="50" pos:column="10">(<pos:position pos:line="50" pos:column="11"/></operator>struct <name pos:line="50" pos:column="18">connectdata<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">*<pos:position pos:line="50" pos:column="31"/></operator><operator pos:line="50" pos:column="31">)<pos:position pos:line="50" pos:column="32"/></operator><call><name pos:line="50" pos:column="32">calloc<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><sizeof pos:line="50" pos:column="39">sizeof<argument_list pos:line="50" pos:column="45">(<argument><expr pos:line="50" pos:column="46">struct <name pos:line="50" pos:column="53">connectdata<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="67">1<pos:position pos:line="50" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt>
  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><operator pos:line="51" pos:column="6">!<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">conn<pos:position pos:line="51" pos:column="11"/></name></expr>)<pos:position pos:line="51" pos:column="12"/></condition><then pos:line="51" pos:column="12"> <block pos:line="51" pos:column="13">{
    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">in_connect<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">NULL<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt> <comment type="block" pos:line="52" pos:column="25">/* clear the pointer */</comment>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="55" pos:column="3">/* We must set the return variable as soon as possible, so that our
     parent can cleanup any possible allocs we may have done before
     any failure */</comment>
  <expr_stmt><expr><operator pos:line="58" pos:column="3">*<pos:position pos:line="58" pos:column="4"/></operator><name pos:line="58" pos:column="4">in_connect<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">conn<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="60" pos:column="3">/* and we setup a few fields in case we end up actually using this struct */</comment>
  <expr_stmt><expr><name><name pos:line="61" pos:column="3">conn<pos:position pos:line="61" pos:column="7"/></name><operator pos:line="61" pos:column="7">-&gt;<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="9">data<pos:position pos:line="61" pos:column="13"/></name></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">data<pos:position pos:line="61" pos:column="20"/></name></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt>           <comment type="block" pos:line="61" pos:column="32">/* remember our daddy */</comment>
  <expr_stmt><expr><name><name pos:line="62" pos:column="3">conn<pos:position pos:line="62" pos:column="7"/></name><operator pos:line="62" pos:column="7">-&gt;<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="9">sock<pos:position pos:line="62" pos:column="13"/></name><index pos:line="62" pos:column="13">[<expr><name pos:line="62" pos:column="14">FIRSTSOCKET<pos:position pos:line="62" pos:column="25"/></name></expr>]<pos:position pos:line="62" pos:column="26"/></index></name> <operator pos:line="62" pos:column="27">=<pos:position pos:line="62" pos:column="28"/></operator> <name pos:line="62" pos:column="29">CURL_SOCKET_BAD<pos:position pos:line="62" pos:column="44"/></name></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>     <comment type="block" pos:line="62" pos:column="50">/* no file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="63" pos:column="3">conn<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">-&gt;<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="9">sock<pos:position pos:line="63" pos:column="13"/></name><index pos:line="63" pos:column="13">[<expr><name pos:line="63" pos:column="14">SECONDARYSOCKET<pos:position pos:line="63" pos:column="29"/></name></expr>]<pos:position pos:line="63" pos:column="30"/></index></name> <operator pos:line="63" pos:column="31">=<pos:position pos:line="63" pos:column="32"/></operator> <name pos:line="63" pos:column="33">CURL_SOCKET_BAD<pos:position pos:line="63" pos:column="48"/></name></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt> <comment type="block" pos:line="63" pos:column="50">/* no file descriptor */</comment>
  <expr_stmt><expr><name><name pos:line="64" pos:column="3">conn<pos:position pos:line="64" pos:column="7"/></name><operator pos:line="64" pos:column="7">-&gt;<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="9">connectindex<pos:position pos:line="64" pos:column="21"/></name></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <operator pos:line="64" pos:column="24">-<pos:position pos:line="64" pos:column="25"/></operator><literal type="number" pos:line="64" pos:column="25">1<pos:position pos:line="64" pos:column="26"/></literal></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>    <comment type="block" pos:line="64" pos:column="31">/* no index */</comment>
  <expr_stmt><expr><name><name pos:line="65" pos:column="3">conn<pos:position pos:line="65" pos:column="7"/></name><operator pos:line="65" pos:column="7">-&gt;<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="9">bits<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">.<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">httpproxy<pos:position pos:line="65" pos:column="23"/></name></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <ternary><condition><expr><operator pos:line="65" pos:column="26">(<pos:position pos:line="65" pos:column="27"/></operator><name><name pos:line="65" pos:column="27">data<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">-&gt;<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="33">change<pos:position pos:line="65" pos:column="39"/></name><operator pos:line="65" pos:column="39">.<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="40">proxy<pos:position pos:line="65" pos:column="45"/></name></name> <operator pos:line="65" pos:column="46">&amp;&amp;<pos:position pos:line="65" pos:column="56"/></operator> <operator pos:line="65" pos:column="49">*<pos:position pos:line="65" pos:column="50"/></operator><name><name pos:line="65" pos:column="50">data<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">-&gt;<pos:position pos:line="65" pos:column="59"/></operator><name pos:line="65" pos:column="56">change<pos:position pos:line="65" pos:column="62"/></name><operator pos:line="65" pos:column="62">.<pos:position pos:line="65" pos:column="63"/></operator><name pos:line="65" pos:column="63">proxy<pos:position pos:line="65" pos:column="68"/></name></name> <operator pos:line="65" pos:column="69">&amp;&amp;<pos:position pos:line="65" pos:column="79"/></operator>
                          <operator pos:line="66" pos:column="27">(<pos:position pos:line="66" pos:column="28"/></operator><name><name pos:line="66" pos:column="28">data<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">-&gt;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="34">set<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">.<pos:position pos:line="66" pos:column="38"/></operator><name pos:line="66" pos:column="38">proxytype<pos:position pos:line="66" pos:column="47"/></name></name> <operator pos:line="66" pos:column="48">==<pos:position pos:line="66" pos:column="50"/></operator> <name pos:line="66" pos:column="51">CURLPROXY_HTTP<pos:position pos:line="66" pos:column="65"/></name><operator pos:line="66" pos:column="65">)<pos:position pos:line="66" pos:column="66"/></operator><operator pos:line="66" pos:column="66">)<pos:position pos:line="66" pos:column="67"/></operator></expr>?<pos:position pos:line="66" pos:column="68"/></condition><then pos:line="66" pos:column="68">
    <expr><name pos:line="67" pos:column="5">TRUE<pos:position pos:line="67" pos:column="9"/></name></expr></then><else pos:line="67" pos:column="9">:<expr><name pos:line="67" pos:column="10">FALSE<pos:position pos:line="67" pos:column="15"/></name></expr></else></ternary></expr>;<pos:position pos:line="67" pos:column="16"/></expr_stmt> <comment type="block" pos:line="67" pos:column="17">/* http proxy or not */</comment>

  <comment type="block" pos:line="69" pos:column="3">/* Default protocol-independent behavior doesn't support persistant
     connections, so we set this to force-close. Protocols that support
     this need to set this to FALSE in their "curl_do" functions. */</comment>
  <expr_stmt><expr><name><name pos:line="72" pos:column="3">conn<pos:position pos:line="72" pos:column="7"/></name><operator pos:line="72" pos:column="7">-&gt;<pos:position pos:line="72" pos:column="12"/></operator><name pos:line="72" pos:column="9">bits<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">.<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">close<pos:position pos:line="72" pos:column="19"/></name></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator> <name pos:line="72" pos:column="22">TRUE<pos:position pos:line="72" pos:column="26"/></name></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>

  <comment type="block" pos:line="74" pos:column="3">/* maxdownload must be -1 on init, as 0 is a valid value! */</comment>
  <expr_stmt><expr><name><name pos:line="75" pos:column="3">conn<pos:position pos:line="75" pos:column="7"/></name><operator pos:line="75" pos:column="7">-&gt;<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="9">maxdownload<pos:position pos:line="75" pos:column="20"/></name></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <operator pos:line="75" pos:column="23">-<pos:position pos:line="75" pos:column="24"/></operator><literal type="number" pos:line="75" pos:column="24">1<pos:position pos:line="75" pos:column="25"/></literal></expr>;<pos:position pos:line="75" pos:column="26"/></expr_stmt>  <comment type="block" pos:line="75" pos:column="28">/* might have been used previously! */</comment>

  <comment type="block" pos:line="77" pos:column="3">/* Store creation time to help future close decision making */</comment>
  <expr_stmt><expr><name><name pos:line="78" pos:column="3">conn<pos:position pos:line="78" pos:column="7"/></name><operator pos:line="78" pos:column="7">-&gt;<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="9">created<pos:position pos:line="78" pos:column="16"/></name></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name pos:line="78" pos:column="19">Curl_tvnow<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">()<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="80" pos:column="3">conn<pos:position pos:line="80" pos:column="7"/></name><operator pos:line="80" pos:column="7">-&gt;<pos:position pos:line="80" pos:column="12"/></operator><name pos:line="80" pos:column="9">bits<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">.<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">use_range<pos:position pos:line="80" pos:column="23"/></name></name> <operator pos:line="80" pos:column="24">=<pos:position pos:line="80" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="80" pos:column="26">data<pos:position pos:line="80" pos:column="30"/></name><operator pos:line="80" pos:column="30">-&gt;<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="32">set<pos:position pos:line="80" pos:column="35"/></name><operator pos:line="80" pos:column="35">.<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="36">set_range<pos:position pos:line="80" pos:column="45"/></name></name></expr>?<pos:position pos:line="80" pos:column="46"/></condition><then><expr><name pos:line="80" pos:column="46">TRUE<pos:position pos:line="80" pos:column="50"/></name></expr></then><else pos:line="80" pos:column="50">:<expr><name pos:line="80" pos:column="51">FALSE<pos:position pos:line="80" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt> <comment type="block" pos:line="80" pos:column="58">/* range status */</comment>
  <expr_stmt><expr><name><name pos:line="81" pos:column="3">conn<pos:position pos:line="81" pos:column="7"/></name><operator pos:line="81" pos:column="7">-&gt;<pos:position pos:line="81" pos:column="12"/></operator><name pos:line="81" pos:column="9">range<pos:position pos:line="81" pos:column="14"/></name></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <name><name pos:line="81" pos:column="17">data<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">set<pos:position pos:line="81" pos:column="26"/></name><operator pos:line="81" pos:column="26">.<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="27">set_range<pos:position pos:line="81" pos:column="36"/></name></name></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>              <comment type="block" pos:line="81" pos:column="51">/* clone the range setting */</comment>
  <expr_stmt><expr><name><name pos:line="82" pos:column="3">conn<pos:position pos:line="82" pos:column="7"/></name><operator pos:line="82" pos:column="7">-&gt;<pos:position pos:line="82" pos:column="12"/></operator><name pos:line="82" pos:column="9">resume_from<pos:position pos:line="82" pos:column="20"/></name></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <name><name pos:line="82" pos:column="23">data<pos:position pos:line="82" pos:column="27"/></name><operator pos:line="82" pos:column="27">-&gt;<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="29">set<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">.<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="33">set_resume_from<pos:position pos:line="82" pos:column="48"/></name></name></expr>;<pos:position pos:line="82" pos:column="49"/></expr_stmt>   <comment type="block" pos:line="82" pos:column="52">/* inherite resume_from */</comment>

  <expr_stmt><expr><name><name pos:line="84" pos:column="3">conn<pos:position pos:line="84" pos:column="7"/></name><operator pos:line="84" pos:column="7">-&gt;<pos:position pos:line="84" pos:column="12"/></operator><name pos:line="84" pos:column="9">bits<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">.<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">user_passwd<pos:position pos:line="84" pos:column="25"/></name></name> <operator pos:line="84" pos:column="26">=<pos:position pos:line="84" pos:column="27"/></operator> <ternary><condition><expr><name><name pos:line="84" pos:column="28">data<pos:position pos:line="84" pos:column="32"/></name><operator pos:line="84" pos:column="32">-&gt;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="34">set<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">.<pos:position pos:line="84" pos:column="38"/></operator><name pos:line="84" pos:column="38">userpwd<pos:position pos:line="84" pos:column="45"/></name></name></expr>?<pos:position pos:line="84" pos:column="46"/></condition><then><expr><literal type="number" pos:line="84" pos:column="46">1<pos:position pos:line="84" pos:column="47"/></literal></expr></then><else pos:line="84" pos:column="47">:<expr><literal type="number" pos:line="84" pos:column="48">0<pos:position pos:line="84" pos:column="49"/></literal></expr></else></ternary></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="85" pos:column="3">conn<pos:position pos:line="85" pos:column="7"/></name><operator pos:line="85" pos:column="7">-&gt;<pos:position pos:line="85" pos:column="12"/></operator><name pos:line="85" pos:column="9">bits<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">.<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">proxy_user_passwd<pos:position pos:line="85" pos:column="31"/></name></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <ternary><condition><expr><name><name pos:line="85" pos:column="34">data<pos:position pos:line="85" pos:column="38"/></name><operator pos:line="85" pos:column="38">-&gt;<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="40">set<pos:position pos:line="85" pos:column="43"/></name><operator pos:line="85" pos:column="43">.<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="44">proxyuserpwd<pos:position pos:line="85" pos:column="56"/></name></name></expr>?<pos:position pos:line="85" pos:column="57"/></condition><then><expr><literal type="number" pos:line="85" pos:column="57">1<pos:position pos:line="85" pos:column="58"/></literal></expr></then><else pos:line="85" pos:column="58">:<expr><literal type="number" pos:line="85" pos:column="59">0<pos:position pos:line="85" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="86" pos:column="3">conn<pos:position pos:line="86" pos:column="7"/></name><operator pos:line="86" pos:column="7">-&gt;<pos:position pos:line="86" pos:column="12"/></operator><name pos:line="86" pos:column="9">bits<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">.<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">no_body<pos:position pos:line="86" pos:column="21"/></name></name> <operator pos:line="86" pos:column="22">=<pos:position pos:line="86" pos:column="23"/></operator> <name><name pos:line="86" pos:column="24">data<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">-&gt;<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="30">set<pos:position pos:line="86" pos:column="33"/></name><operator pos:line="86" pos:column="33">.<pos:position pos:line="86" pos:column="34"/></operator><name pos:line="86" pos:column="34">opt_no_body<pos:position pos:line="86" pos:column="45"/></name></name></expr>;<pos:position pos:line="86" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="87" pos:column="3">conn<pos:position pos:line="87" pos:column="7"/></name><operator pos:line="87" pos:column="7">-&gt;<pos:position pos:line="87" pos:column="12"/></operator><name pos:line="87" pos:column="9">bits<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">.<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">tunnel_proxy<pos:position pos:line="87" pos:column="26"/></name></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <name><name pos:line="87" pos:column="29">data<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">-&gt;<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="35">set<pos:position pos:line="87" pos:column="38"/></name><operator pos:line="87" pos:column="38">.<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="39">tunnel_thru_httpproxy<pos:position pos:line="87" pos:column="60"/></name></name></expr>;<pos:position pos:line="87" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="88" pos:column="3">conn<pos:position pos:line="88" pos:column="7"/></name><operator pos:line="88" pos:column="7">-&gt;<pos:position pos:line="88" pos:column="12"/></operator><name pos:line="88" pos:column="9">bits<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">.<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">ftp_use_epsv<pos:position pos:line="88" pos:column="26"/></name></name> <operator pos:line="88" pos:column="27">=<pos:position pos:line="88" pos:column="28"/></operator> <name><name pos:line="88" pos:column="29">data<pos:position pos:line="88" pos:column="33"/></name><operator pos:line="88" pos:column="33">-&gt;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="35">set<pos:position pos:line="88" pos:column="38"/></name><operator pos:line="88" pos:column="38">.<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="39">ftp_use_epsv<pos:position pos:line="88" pos:column="51"/></name></name></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="89" pos:column="3">conn<pos:position pos:line="89" pos:column="7"/></name><operator pos:line="89" pos:column="7">-&gt;<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="9">bits<pos:position pos:line="89" pos:column="13"/></name><operator pos:line="89" pos:column="13">.<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">ftp_use_eprt<pos:position pos:line="89" pos:column="26"/></name></name> <operator pos:line="89" pos:column="27">=<pos:position pos:line="89" pos:column="28"/></operator> <name><name pos:line="89" pos:column="29">data<pos:position pos:line="89" pos:column="33"/></name><operator pos:line="89" pos:column="33">-&gt;<pos:position pos:line="89" pos:column="38"/></operator><name pos:line="89" pos:column="35">set<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">.<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="39">ftp_use_eprt<pos:position pos:line="89" pos:column="51"/></name></name></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="90" pos:column="3">conn<pos:position pos:line="90" pos:column="7"/></name><operator pos:line="90" pos:column="7">-&gt;<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="9">bits<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">.<pos:position pos:line="90" pos:column="14"/></operator><name pos:line="90" pos:column="14">ftp_use_lprt<pos:position pos:line="90" pos:column="26"/></name></name> <operator pos:line="90" pos:column="27">=<pos:position pos:line="90" pos:column="28"/></operator> <name><name pos:line="90" pos:column="29">data<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">-&gt;<pos:position pos:line="90" pos:column="38"/></operator><name pos:line="90" pos:column="35">set<pos:position pos:line="90" pos:column="38"/></name><operator pos:line="90" pos:column="38">.<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="39">ftp_use_lprt<pos:position pos:line="90" pos:column="51"/></name></name></expr>;<pos:position pos:line="90" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="92" pos:column="3">/* This initing continues below, see the comment "Continue connectdata
   * initialization here" */</comment>

  <comment type="block" format="doxygen" pos:line="95" pos:column="3">/***********************************************************
   * We need to allocate memory to store the path in. We get the size of the
   * full URL to be sure, and we need to make it at least 256 bytes since
   * other parts of the code will rely on this fact
   ***********************************************************/</comment>
<cpp:define pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">define<pos:position pos:line="100" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="100" pos:column="9">LEAST_PATH_ALLOC<pos:position pos:line="100" pos:column="25"/></name></cpp:macro> <cpp:value pos:line="100" pos:column="26">256<pos:position pos:line="100" pos:column="29"/></cpp:value></cpp:define>
  <expr_stmt><expr><name pos:line="101" pos:column="3">urllen<pos:position pos:line="101" pos:column="9"/></name><operator pos:line="101" pos:column="9">=<pos:position pos:line="101" pos:column="10"/></operator><call><name pos:line="101" pos:column="10">strlen<pos:position pos:line="101" pos:column="16"/></name><argument_list pos:line="101" pos:column="16">(<argument><expr><name><name pos:line="101" pos:column="17">data<pos:position pos:line="101" pos:column="21"/></name><operator pos:line="101" pos:column="21">-&gt;<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="23">change<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">.<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="30">url<pos:position pos:line="101" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="35"/></expr_stmt>
  <if pos:line="102" pos:column="3">if<condition pos:line="102" pos:column="5">(<expr><name pos:line="102" pos:column="6">urllen<pos:position pos:line="102" pos:column="12"/></name> <operator pos:line="102" pos:column="13">&lt;<pos:position pos:line="102" pos:column="17"/></operator> <name pos:line="102" pos:column="15">LEAST_PATH_ALLOC<pos:position pos:line="102" pos:column="31"/></name></expr>)<pos:position pos:line="102" pos:column="32"/></condition><then pos:line="102" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="5">urllen<pos:position pos:line="103" pos:column="11"/></name><operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator><name pos:line="103" pos:column="12">LEAST_PATH_ALLOC<pos:position pos:line="103" pos:column="28"/></name></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="105" pos:column="3">conn<pos:position pos:line="105" pos:column="7"/></name><operator pos:line="105" pos:column="7">-&gt;<pos:position pos:line="105" pos:column="12"/></operator><name pos:line="105" pos:column="9">pathbuffer<pos:position pos:line="105" pos:column="19"/></name></name><operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator><operator pos:line="105" pos:column="20">(<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">char<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">*<pos:position pos:line="105" pos:column="27"/></operator><operator pos:line="105" pos:column="27">)<pos:position pos:line="105" pos:column="28"/></operator><call><name pos:line="105" pos:column="28">malloc<pos:position pos:line="105" pos:column="34"/></name><argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">urllen<pos:position pos:line="105" pos:column="41"/></name></expr></argument>)<pos:position pos:line="105" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="43"/></expr_stmt>
  <if pos:line="106" pos:column="3">if<condition pos:line="106" pos:column="5">(<expr><name pos:line="106" pos:column="6">NULL<pos:position pos:line="106" pos:column="10"/></name> <operator pos:line="106" pos:column="11">==<pos:position pos:line="106" pos:column="13"/></operator> <name><name pos:line="106" pos:column="14">conn<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">-&gt;<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="20">pathbuffer<pos:position pos:line="106" pos:column="30"/></name></name></expr>)<pos:position pos:line="106" pos:column="31"/></condition><then pos:line="106" pos:column="31">
    <block type="pseudo"><return pos:line="107" pos:column="5">return <expr><name pos:line="107" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="107" pos:column="31"/></name></expr>;<pos:position pos:line="107" pos:column="32"/></return></block></then></if> <comment type="block" pos:line="107" pos:column="33">/* really bad error */</comment>
  <expr_stmt><expr><name><name pos:line="108" pos:column="3">conn<pos:position pos:line="108" pos:column="7"/></name><operator pos:line="108" pos:column="7">-&gt;<pos:position pos:line="108" pos:column="12"/></operator><name pos:line="108" pos:column="9">path<pos:position pos:line="108" pos:column="13"/></name></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <name><name pos:line="108" pos:column="16">conn<pos:position pos:line="108" pos:column="20"/></name><operator pos:line="108" pos:column="20">-&gt;<pos:position pos:line="108" pos:column="25"/></operator><name pos:line="108" pos:column="22">pathbuffer<pos:position pos:line="108" pos:column="32"/></name></name></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="110" pos:column="3">conn<pos:position pos:line="110" pos:column="7"/></name><operator pos:line="110" pos:column="7">-&gt;<pos:position pos:line="110" pos:column="12"/></operator><name pos:line="110" pos:column="9">host<pos:position pos:line="110" pos:column="13"/></name><operator pos:line="110" pos:column="13">.<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="14">rawalloc<pos:position pos:line="110" pos:column="22"/></name></name><operator pos:line="110" pos:column="22">=<pos:position pos:line="110" pos:column="23"/></operator><operator pos:line="110" pos:column="23">(<pos:position pos:line="110" pos:column="24"/></operator><name pos:line="110" pos:column="24">char<pos:position pos:line="110" pos:column="28"/></name> <operator pos:line="110" pos:column="29">*<pos:position pos:line="110" pos:column="30"/></operator><operator pos:line="110" pos:column="30">)<pos:position pos:line="110" pos:column="31"/></operator><call><name pos:line="110" pos:column="31">malloc<pos:position pos:line="110" pos:column="37"/></name><argument_list pos:line="110" pos:column="37">(<argument><expr><name pos:line="110" pos:column="38">urllen<pos:position pos:line="110" pos:column="44"/></name></expr></argument>)<pos:position pos:line="110" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="46"/></expr_stmt>
  <if pos:line="111" pos:column="3">if<condition pos:line="111" pos:column="5">(<expr><name pos:line="111" pos:column="6">NULL<pos:position pos:line="111" pos:column="10"/></name> <operator pos:line="111" pos:column="11">==<pos:position pos:line="111" pos:column="13"/></operator> <name><name pos:line="111" pos:column="14">conn<pos:position pos:line="111" pos:column="18"/></name><operator pos:line="111" pos:column="18">-&gt;<pos:position pos:line="111" pos:column="23"/></operator><name pos:line="111" pos:column="20">host<pos:position pos:line="111" pos:column="24"/></name><operator pos:line="111" pos:column="24">.<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="25">rawalloc<pos:position pos:line="111" pos:column="33"/></name></name></expr>)<pos:position pos:line="111" pos:column="34"/></condition><then pos:line="111" pos:column="34">
    <block type="pseudo"><return pos:line="112" pos:column="5">return <expr><name pos:line="112" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="112" pos:column="31"/></name></expr>;<pos:position pos:line="112" pos:column="32"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="113" pos:column="3">conn<pos:position pos:line="113" pos:column="7"/></name><operator pos:line="113" pos:column="7">-&gt;<pos:position pos:line="113" pos:column="12"/></operator><name pos:line="113" pos:column="9">host<pos:position pos:line="113" pos:column="13"/></name><operator pos:line="113" pos:column="13">.<pos:position pos:line="113" pos:column="14"/></operator><name pos:line="113" pos:column="14">name<pos:position pos:line="113" pos:column="18"/></name></name> <operator pos:line="113" pos:column="19">=<pos:position pos:line="113" pos:column="20"/></operator> <name><name pos:line="113" pos:column="21">conn<pos:position pos:line="113" pos:column="25"/></name><operator pos:line="113" pos:column="25">-&gt;<pos:position pos:line="113" pos:column="30"/></operator><name pos:line="113" pos:column="27">host<pos:position pos:line="113" pos:column="31"/></name><operator pos:line="113" pos:column="31">.<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="32">rawalloc<pos:position pos:line="113" pos:column="40"/></name></name></expr>;<pos:position pos:line="113" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="114" pos:column="3">conn<pos:position pos:line="114" pos:column="7"/></name><operator pos:line="114" pos:column="7">-&gt;<pos:position pos:line="114" pos:column="12"/></operator><name pos:line="114" pos:column="9">host<pos:position pos:line="114" pos:column="13"/></name><operator pos:line="114" pos:column="13">.<pos:position pos:line="114" pos:column="14"/></operator><name pos:line="114" pos:column="14">name<pos:position pos:line="114" pos:column="18"/></name><index pos:line="114" pos:column="18">[<expr><literal type="number" pos:line="114" pos:column="19">0<pos:position pos:line="114" pos:column="20"/></literal></expr>]<pos:position pos:line="114" pos:column="21"/></index></name> <operator pos:line="114" pos:column="22">=<pos:position pos:line="114" pos:column="23"/></operator> <literal type="number" pos:line="114" pos:column="24">0<pos:position pos:line="114" pos:column="25"/></literal></expr>;<pos:position pos:line="114" pos:column="26"/></expr_stmt>

  <comment type="block" format="doxygen" pos:line="116" pos:column="3">/*************************************************************
   * Parse the URL.
   *
   * We need to parse the url even when using the proxy, because we will need
   * the hostname and port in case we are trying to SSL connect through the
   * proxy -- and we don't know if we will need to use SSL until we parse the
   * url ...
   ************************************************************/</comment>
  <if pos:line="124" pos:column="3">if<condition pos:line="124" pos:column="5">(<expr><operator pos:line="124" pos:column="6">(<pos:position pos:line="124" pos:column="7"/></operator><literal type="number" pos:line="124" pos:column="7">2<pos:position pos:line="124" pos:column="8"/></literal> <operator pos:line="124" pos:column="9">==<pos:position pos:line="124" pos:column="11"/></operator> <call><name pos:line="124" pos:column="12">sscanf<pos:position pos:line="124" pos:column="18"/></name><argument_list pos:line="124" pos:column="18">(<argument><expr><name><name pos:line="124" pos:column="19">data<pos:position pos:line="124" pos:column="23"/></name><operator pos:line="124" pos:column="23">-&gt;<pos:position pos:line="124" pos:column="28"/></operator><name pos:line="124" pos:column="25">change<pos:position pos:line="124" pos:column="31"/></name><operator pos:line="124" pos:column="31">.<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="32">url<pos:position pos:line="124" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="37">"%15[^:]:%[^\n]"<pos:position pos:line="124" pos:column="53"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="125" pos:column="19">conn<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">protostr<pos:position pos:line="125" pos:column="33"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="126" pos:column="19">conn<pos:position pos:line="126" pos:column="23"/></name><operator pos:line="126" pos:column="23">-&gt;<pos:position pos:line="126" pos:column="28"/></operator><name pos:line="126" pos:column="25">path<pos:position pos:line="126" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="30"/></argument_list></call><operator pos:line="126" pos:column="30">)<pos:position pos:line="126" pos:column="31"/></operator> <operator pos:line="126" pos:column="32">&amp;&amp;<pos:position pos:line="126" pos:column="42"/></operator> <call><name pos:line="126" pos:column="35">strequal<pos:position pos:line="126" pos:column="43"/></name><argument_list pos:line="126" pos:column="43">(<argument><expr><name><name pos:line="126" pos:column="44">conn<pos:position pos:line="126" pos:column="48"/></name><operator pos:line="126" pos:column="48">-&gt;<pos:position pos:line="126" pos:column="53"/></operator><name pos:line="126" pos:column="50">protostr<pos:position pos:line="126" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="60">"file"<pos:position pos:line="126" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="68"/></condition><then pos:line="126" pos:column="68"> <block pos:line="126" pos:column="69">{
    <if pos:line="127" pos:column="5">if<condition pos:line="127" pos:column="7">(<expr><name><name pos:line="127" pos:column="8">conn<pos:position pos:line="127" pos:column="12"/></name><operator pos:line="127" pos:column="12">-&gt;<pos:position pos:line="127" pos:column="17"/></operator><name pos:line="127" pos:column="14">path<pos:position pos:line="127" pos:column="18"/></name><index pos:line="127" pos:column="18">[<expr><literal type="number" pos:line="127" pos:column="19">0<pos:position pos:line="127" pos:column="20"/></literal></expr>]<pos:position pos:line="127" pos:column="21"/></index></name> <operator pos:line="127" pos:column="22">==<pos:position pos:line="127" pos:column="24"/></operator> <literal type="char" pos:line="127" pos:column="25">'/'<pos:position pos:line="127" pos:column="28"/></literal> <operator pos:line="127" pos:column="29">&amp;&amp;<pos:position pos:line="127" pos:column="39"/></operator> <name><name pos:line="127" pos:column="32">conn<pos:position pos:line="127" pos:column="36"/></name><operator pos:line="127" pos:column="36">-&gt;<pos:position pos:line="127" pos:column="41"/></operator><name pos:line="127" pos:column="38">path<pos:position pos:line="127" pos:column="42"/></name><index pos:line="127" pos:column="42">[<expr><literal type="number" pos:line="127" pos:column="43">1<pos:position pos:line="127" pos:column="44"/></literal></expr>]<pos:position pos:line="127" pos:column="45"/></index></name> <operator pos:line="127" pos:column="46">==<pos:position pos:line="127" pos:column="48"/></operator> <literal type="char" pos:line="127" pos:column="49">'/'<pos:position pos:line="127" pos:column="52"/></literal></expr>)<pos:position pos:line="127" pos:column="53"/></condition><then pos:line="127" pos:column="53"> <block pos:line="127" pos:column="54">{
      <comment type="block" pos:line="128" pos:column="7">/* Allow omitted hostname (e.g. file:/&lt;path&gt;).  This is not strictly
       * speaking a valid file: URL by RFC 1738, but treating file:/&lt;path&gt; as
       * file://localhost/&lt;path&gt; is similar to how other schemes treat missing
       * hostnames.  See RFC 1808. */</comment>

      <comment type="block" pos:line="133" pos:column="7">/* This cannot be done with strcpy() in a portable manner, since the
         memory areas overlap! */</comment>
      <expr_stmt><expr><call><name pos:line="135" pos:column="7">memmove<pos:position pos:line="135" pos:column="14"/></name><argument_list pos:line="135" pos:column="14">(<argument><expr><name><name pos:line="135" pos:column="15">conn<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">-&gt;<pos:position pos:line="135" pos:column="24"/></operator><name pos:line="135" pos:column="21">path<pos:position pos:line="135" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="27">conn<pos:position pos:line="135" pos:column="31"/></name><operator pos:line="135" pos:column="31">-&gt;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="33">path<pos:position pos:line="135" pos:column="37"/></name></name> <operator pos:line="135" pos:column="38">+<pos:position pos:line="135" pos:column="39"/></operator> <literal type="number" pos:line="135" pos:column="40">2<pos:position pos:line="135" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="135" pos:column="43">strlen<pos:position pos:line="135" pos:column="49"/></name><argument_list pos:line="135" pos:column="49">(<argument><expr><name><name pos:line="135" pos:column="50">conn<pos:position pos:line="135" pos:column="54"/></name><operator pos:line="135" pos:column="54">-&gt;<pos:position pos:line="135" pos:column="59"/></operator><name pos:line="135" pos:column="56">path<pos:position pos:line="135" pos:column="60"/></name></name> <operator pos:line="135" pos:column="61">+<pos:position pos:line="135" pos:column="62"/></operator> <literal type="number" pos:line="135" pos:column="63">2<pos:position pos:line="135" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="65"/></argument_list></call><operator pos:line="135" pos:column="65">+<pos:position pos:line="135" pos:column="66"/></operator><literal type="number" pos:line="135" pos:column="66">1<pos:position pos:line="135" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="137" pos:column="5">/*
     * we deal with file://&lt;host&gt;/&lt;path&gt; differently since it supports no
     * hostname other than "localhost" and "127.0.0.1", which is unique among
     * the URL protocols specified in RFC 1738
     */</comment>
    <if pos:line="142" pos:column="5">if<condition pos:line="142" pos:column="7">(<expr><name><name pos:line="142" pos:column="8">conn<pos:position pos:line="142" pos:column="12"/></name><operator pos:line="142" pos:column="12">-&gt;<pos:position pos:line="142" pos:column="17"/></operator><name pos:line="142" pos:column="14">path<pos:position pos:line="142" pos:column="18"/></name><index pos:line="142" pos:column="18">[<expr><literal type="number" pos:line="142" pos:column="19">0<pos:position pos:line="142" pos:column="20"/></literal></expr>]<pos:position pos:line="142" pos:column="21"/></index></name> <operator pos:line="142" pos:column="22">!=<pos:position pos:line="142" pos:column="24"/></operator> <literal type="char" pos:line="142" pos:column="25">'/'<pos:position pos:line="142" pos:column="28"/></literal></expr>)<pos:position pos:line="142" pos:column="29"/></condition><then pos:line="142" pos:column="29"> <block pos:line="142" pos:column="30">{
      <comment type="block" pos:line="143" pos:column="7">/* the URL included a host name, we ignore host names in file:// URLs
         as the standards don't define what to do with them */</comment>
      <decl_stmt><decl><type><name pos:line="145" pos:column="7">char<pos:position pos:line="145" pos:column="11"/></name> <modifier pos:line="145" pos:column="12">*<pos:position pos:line="145" pos:column="13"/></modifier></type><name pos:line="145" pos:column="13">ptr<pos:position pos:line="145" pos:column="16"/></name><init pos:line="145" pos:column="16">=<expr><call><name pos:line="145" pos:column="17">strchr<pos:position pos:line="145" pos:column="23"/></name><argument_list pos:line="145" pos:column="23">(<argument><expr><name><name pos:line="145" pos:column="24">conn<pos:position pos:line="145" pos:column="28"/></name><operator pos:line="145" pos:column="28">-&gt;<pos:position pos:line="145" pos:column="33"/></operator><name pos:line="145" pos:column="30">path<pos:position pos:line="145" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="145" pos:column="36">'/'<pos:position pos:line="145" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="145" pos:column="41"/></decl_stmt>
      <if pos:line="146" pos:column="7">if<condition pos:line="146" pos:column="9">(<expr><name pos:line="146" pos:column="10">ptr<pos:position pos:line="146" pos:column="13"/></name></expr>)<pos:position pos:line="146" pos:column="14"/></condition><then pos:line="146" pos:column="14"> <block pos:line="146" pos:column="15">{
        <comment type="block" pos:line="147" pos:column="9">/* there was a slash present

           RFC1738 (section 3.1, page 5) says:

           The rest of the locator consists of data specific to the scheme,
           and is known as the "url-path". It supplies the details of how the
           specified resource can be accessed. Note that the "/" between the
           host (or port) and the url-path is NOT part of the url-path.

           As most agents use file://localhost/foo to get '/foo' although the
           slash preceeding foo is a separator and not a slash for the path,
           a URL as file://localhost//foo must be valid as well, to refer to
           the same file with an absolute path.
        */</comment>

        <if pos:line="162" pos:column="9">if<condition pos:line="162" pos:column="11">(<expr><name><name pos:line="162" pos:column="12">ptr<pos:position pos:line="162" pos:column="15"/></name><index pos:line="162" pos:column="15">[<expr><literal type="number" pos:line="162" pos:column="16">1<pos:position pos:line="162" pos:column="17"/></literal></expr>]<pos:position pos:line="162" pos:column="18"/></index></name> <operator pos:line="162" pos:column="19">&amp;&amp;<pos:position pos:line="162" pos:column="29"/></operator> <operator pos:line="162" pos:column="22">(<pos:position pos:line="162" pos:column="23"/></operator><literal type="char" pos:line="162" pos:column="23">'/'<pos:position pos:line="162" pos:column="26"/></literal> <operator pos:line="162" pos:column="27">==<pos:position pos:line="162" pos:column="29"/></operator> <name><name pos:line="162" pos:column="30">ptr<pos:position pos:line="162" pos:column="33"/></name><index pos:line="162" pos:column="33">[<expr><literal type="number" pos:line="162" pos:column="34">1<pos:position pos:line="162" pos:column="35"/></literal></expr>]<pos:position pos:line="162" pos:column="36"/></index></name><operator pos:line="162" pos:column="36">)<pos:position pos:line="162" pos:column="37"/></operator></expr>)<pos:position pos:line="162" pos:column="38"/></condition><then pos:line="162" pos:column="38">
          <comment type="block" pos:line="163" pos:column="11">/* if there was two slashes, we skip the first one as that is then
             used truly as a separator */</comment>
          <block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="11">ptr<pos:position pos:line="165" pos:column="14"/></name><operator pos:line="165" pos:column="14">++<pos:position pos:line="165" pos:column="16"/></operator></expr>;<pos:position pos:line="165" pos:column="17"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="167" pos:column="9">/* This cannot be made with strcpy, as the memory chunks overlap! */</comment>
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">memmove<pos:position pos:line="168" pos:column="16"/></name><argument_list pos:line="168" pos:column="16">(<argument><expr><name><name pos:line="168" pos:column="17">conn<pos:position pos:line="168" pos:column="21"/></name><operator pos:line="168" pos:column="21">-&gt;<pos:position pos:line="168" pos:column="26"/></operator><name pos:line="168" pos:column="23">path<pos:position pos:line="168" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="29">ptr<pos:position pos:line="168" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="168" pos:column="34">strlen<pos:position pos:line="168" pos:column="40"/></name><argument_list pos:line="168" pos:column="40">(<argument><expr><name pos:line="168" pos:column="41">ptr<pos:position pos:line="168" pos:column="44"/></name></expr></argument>)<pos:position pos:line="168" pos:column="45"/></argument_list></call><operator pos:line="168" pos:column="45">+<pos:position pos:line="168" pos:column="46"/></operator><literal type="number" pos:line="168" pos:column="46">1<pos:position pos:line="168" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="169" pos:column="8"/></block></then></if>
    }<pos:position pos:line="170" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="172" pos:column="5">strcpy<pos:position pos:line="172" pos:column="11"/></name><argument_list pos:line="172" pos:column="11">(<argument><expr><name><name pos:line="172" pos:column="12">conn<pos:position pos:line="172" pos:column="16"/></name><operator pos:line="172" pos:column="16">-&gt;<pos:position pos:line="172" pos:column="21"/></operator><name pos:line="172" pos:column="18">protostr<pos:position pos:line="172" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="28">"file"<pos:position pos:line="172" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="36"/></expr_stmt> <comment type="block" pos:line="172" pos:column="37">/* store protocol string lowercase */</comment>
  }<pos:position pos:line="173" pos:column="4"/></block></then>
  <else pos:line="174" pos:column="3">else <block pos:line="174" pos:column="8">{
    <comment type="block" pos:line="175" pos:column="5">/* Set default path */</comment>
    <expr_stmt><expr><call><name pos:line="176" pos:column="5">strcpy<pos:position pos:line="176" pos:column="11"/></name><argument_list pos:line="176" pos:column="11">(<argument><expr><name><name pos:line="176" pos:column="12">conn<pos:position pos:line="176" pos:column="16"/></name><operator pos:line="176" pos:column="16">-&gt;<pos:position pos:line="176" pos:column="21"/></operator><name pos:line="176" pos:column="18">path<pos:position pos:line="176" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="24">"/"<pos:position pos:line="176" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="29"/></expr_stmt>

    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><literal type="number" pos:line="178" pos:column="9">2<pos:position pos:line="178" pos:column="10"/></literal> <operator pos:line="178" pos:column="11">&gt;<pos:position pos:line="178" pos:column="15"/></operator> <call><name pos:line="178" pos:column="13">sscanf<pos:position pos:line="178" pos:column="19"/></name><argument_list pos:line="178" pos:column="19">(<argument><expr><name><name pos:line="178" pos:column="20">data<pos:position pos:line="178" pos:column="24"/></name><operator pos:line="178" pos:column="24">-&gt;<pos:position pos:line="178" pos:column="29"/></operator><name pos:line="178" pos:column="26">change<pos:position pos:line="178" pos:column="32"/></name><operator pos:line="178" pos:column="32">.<pos:position pos:line="178" pos:column="33"/></operator><name pos:line="178" pos:column="33">url<pos:position pos:line="178" pos:column="36"/></name></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="179" pos:column="20">"%15[^\n:]://%[^\n/]%[^\n]"<pos:position pos:line="179" pos:column="47"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="180" pos:column="20">conn<pos:position pos:line="180" pos:column="24"/></name><operator pos:line="180" pos:column="24">-&gt;<pos:position pos:line="180" pos:column="29"/></operator><name pos:line="180" pos:column="26">protostr<pos:position pos:line="180" pos:column="34"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="181" pos:column="20">conn<pos:position pos:line="181" pos:column="24"/></name><operator pos:line="181" pos:column="24">-&gt;<pos:position pos:line="181" pos:column="29"/></operator><name pos:line="181" pos:column="26">host<pos:position pos:line="181" pos:column="30"/></name><operator pos:line="181" pos:column="30">.<pos:position pos:line="181" pos:column="31"/></operator><name pos:line="181" pos:column="31">name<pos:position pos:line="181" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="181" pos:column="37">conn<pos:position pos:line="181" pos:column="41"/></name><operator pos:line="181" pos:column="41">-&gt;<pos:position pos:line="181" pos:column="46"/></operator><name pos:line="181" pos:column="43">path<pos:position pos:line="181" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="181" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="49"/></condition><then pos:line="181" pos:column="49"> <block pos:line="181" pos:column="50">{

      <comment type="block" pos:line="183" pos:column="7">/*
       * The URL was badly formatted, let's try the browser-style _without_
       * protocol specified like 'http://'.
       */</comment>
      <if pos:line="187" pos:column="7">if<condition pos:line="187" pos:column="9">(<expr><operator pos:line="187" pos:column="10">(<pos:position pos:line="187" pos:column="11"/></operator><literal type="number" pos:line="187" pos:column="11">1<pos:position pos:line="187" pos:column="12"/></literal> <operator pos:line="187" pos:column="13">&gt;<pos:position pos:line="187" pos:column="17"/></operator> <call><name pos:line="187" pos:column="15">sscanf<pos:position pos:line="187" pos:column="21"/></name><argument_list pos:line="187" pos:column="21">(<argument><expr><name><name pos:line="187" pos:column="22">data<pos:position pos:line="187" pos:column="26"/></name><operator pos:line="187" pos:column="26">-&gt;<pos:position pos:line="187" pos:column="31"/></operator><name pos:line="187" pos:column="28">change<pos:position pos:line="187" pos:column="34"/></name><operator pos:line="187" pos:column="34">.<pos:position pos:line="187" pos:column="35"/></operator><name pos:line="187" pos:column="35">url<pos:position pos:line="187" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="40">"%[^\n/]%[^\n]"<pos:position pos:line="187" pos:column="55"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="188" pos:column="22">conn<pos:position pos:line="188" pos:column="26"/></name><operator pos:line="188" pos:column="26">-&gt;<pos:position pos:line="188" pos:column="31"/></operator><name pos:line="188" pos:column="28">host<pos:position pos:line="188" pos:column="32"/></name><operator pos:line="188" pos:column="32">.<pos:position pos:line="188" pos:column="33"/></operator><name pos:line="188" pos:column="33">name<pos:position pos:line="188" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="39">conn<pos:position pos:line="188" pos:column="43"/></name><operator pos:line="188" pos:column="43">-&gt;<pos:position pos:line="188" pos:column="48"/></operator><name pos:line="188" pos:column="45">path<pos:position pos:line="188" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="50"/></argument_list></call><operator pos:line="188" pos:column="50">)<pos:position pos:line="188" pos:column="51"/></operator></expr> )<pos:position pos:line="188" pos:column="53"/></condition><then pos:line="188" pos:column="53"> <block pos:line="188" pos:column="54">{
        <comment type="block" pos:line="189" pos:column="9">/*
         * We couldn't even get this format.
         */</comment>
        <expr_stmt><expr><call><name pos:line="192" pos:column="9">failf<pos:position pos:line="192" pos:column="14"/></name><argument_list pos:line="192" pos:column="14">(<argument><expr><name pos:line="192" pos:column="15">data<pos:position pos:line="192" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="21">"&lt;url&gt; malformed"<pos:position pos:line="192" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="40"/></expr_stmt>
        <return pos:line="193" pos:column="9">return <expr><name pos:line="193" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="193" pos:column="35"/></name></expr>;<pos:position pos:line="193" pos:column="36"/></return>
      }<pos:position pos:line="194" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="196" pos:column="7">/*
       * Since there was no protocol part specified, we guess what protocol it
       * is based on the first letters of the server name.
       */</comment>

      <comment type="block" pos:line="201" pos:column="7">/* Note: if you add a new protocol, please update the list in
       * lib/version.c too! */</comment>

      <if pos:line="204" pos:column="7">if<condition pos:line="204" pos:column="9">(<expr><call><name pos:line="204" pos:column="10">checkprefix<pos:position pos:line="204" pos:column="21"/></name><argument_list pos:line="204" pos:column="21">(<argument><expr><literal type="string" pos:line="204" pos:column="22">"GOPHER."<pos:position pos:line="204" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="33">conn<pos:position pos:line="204" pos:column="37"/></name><operator pos:line="204" pos:column="37">-&gt;<pos:position pos:line="204" pos:column="42"/></operator><name pos:line="204" pos:column="39">host<pos:position pos:line="204" pos:column="43"/></name><operator pos:line="204" pos:column="43">.<pos:position pos:line="204" pos:column="44"/></operator><name pos:line="204" pos:column="44">name<pos:position pos:line="204" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="204" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="204" pos:column="50"/></condition><then pos:line="204" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="205" pos:column="9">strcpy<pos:position pos:line="205" pos:column="15"/></name><argument_list pos:line="205" pos:column="15">(<argument><expr><name><name pos:line="205" pos:column="16">conn<pos:position pos:line="205" pos:column="20"/></name><operator pos:line="205" pos:column="20">-&gt;<pos:position pos:line="205" pos:column="25"/></operator><name pos:line="205" pos:column="22">protostr<pos:position pos:line="205" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="32">"gopher"<pos:position pos:line="205" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="42"/></expr_stmt></block></then>
<cpp:ifdef pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">ifdef<pos:position pos:line="206" pos:column="7"/></cpp:directive> <name pos:line="206" pos:column="8">USE_SSL<pos:position pos:line="206" pos:column="15"/></name></cpp:ifdef>
      <elseif pos:line="207" pos:column="7">else <if pos:line="207" pos:column="12">if<condition pos:line="207" pos:column="14">(<expr><call><name pos:line="207" pos:column="15">checkprefix<pos:position pos:line="207" pos:column="26"/></name><argument_list pos:line="207" pos:column="26">(<argument><expr><literal type="string" pos:line="207" pos:column="27">"FTPS"<pos:position pos:line="207" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="35">conn<pos:position pos:line="207" pos:column="39"/></name><operator pos:line="207" pos:column="39">-&gt;<pos:position pos:line="207" pos:column="44"/></operator><name pos:line="207" pos:column="41">host<pos:position pos:line="207" pos:column="45"/></name><operator pos:line="207" pos:column="45">.<pos:position pos:line="207" pos:column="46"/></operator><name pos:line="207" pos:column="46">name<pos:position pos:line="207" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="207" pos:column="52"/></condition><then pos:line="207" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="9">strcpy<pos:position pos:line="208" pos:column="15"/></name><argument_list pos:line="208" pos:column="15">(<argument><expr><name><name pos:line="208" pos:column="16">conn<pos:position pos:line="208" pos:column="20"/></name><operator pos:line="208" pos:column="20">-&gt;<pos:position pos:line="208" pos:column="25"/></operator><name pos:line="208" pos:column="22">protostr<pos:position pos:line="208" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="32">"ftps"<pos:position pos:line="208" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="40"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">endif<pos:position pos:line="209" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="209" pos:column="8">/* USE_SSL */</comment>
      <elseif pos:line="210" pos:column="7">else <if pos:line="210" pos:column="12">if<condition pos:line="210" pos:column="14">(<expr><call><name pos:line="210" pos:column="15">checkprefix<pos:position pos:line="210" pos:column="26"/></name><argument_list pos:line="210" pos:column="26">(<argument><expr><literal type="string" pos:line="210" pos:column="27">"FTP."<pos:position pos:line="210" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="35">conn<pos:position pos:line="210" pos:column="39"/></name><operator pos:line="210" pos:column="39">-&gt;<pos:position pos:line="210" pos:column="44"/></operator><name pos:line="210" pos:column="41">host<pos:position pos:line="210" pos:column="45"/></name><operator pos:line="210" pos:column="45">.<pos:position pos:line="210" pos:column="46"/></operator><name pos:line="210" pos:column="46">name<pos:position pos:line="210" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="210" pos:column="52"/></condition><then pos:line="210" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="211" pos:column="9">strcpy<pos:position pos:line="211" pos:column="15"/></name><argument_list pos:line="211" pos:column="15">(<argument><expr><name><name pos:line="211" pos:column="16">conn<pos:position pos:line="211" pos:column="20"/></name><operator pos:line="211" pos:column="20">-&gt;<pos:position pos:line="211" pos:column="25"/></operator><name pos:line="211" pos:column="22">protostr<pos:position pos:line="211" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="32">"ftp"<pos:position pos:line="211" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="39"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="212" pos:column="7">else <if pos:line="212" pos:column="12">if<condition pos:line="212" pos:column="14">(<expr><call><name pos:line="212" pos:column="15">checkprefix<pos:position pos:line="212" pos:column="26"/></name><argument_list pos:line="212" pos:column="26">(<argument><expr><literal type="string" pos:line="212" pos:column="27">"TELNET."<pos:position pos:line="212" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="38">conn<pos:position pos:line="212" pos:column="42"/></name><operator pos:line="212" pos:column="42">-&gt;<pos:position pos:line="212" pos:column="47"/></operator><name pos:line="212" pos:column="44">host<pos:position pos:line="212" pos:column="48"/></name><operator pos:line="212" pos:column="48">.<pos:position pos:line="212" pos:column="49"/></operator><name pos:line="212" pos:column="49">name<pos:position pos:line="212" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="212" pos:column="55"/></condition><then pos:line="212" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="213" pos:column="9">strcpy<pos:position pos:line="213" pos:column="15"/></name><argument_list pos:line="213" pos:column="15">(<argument><expr><name><name pos:line="213" pos:column="16">conn<pos:position pos:line="213" pos:column="20"/></name><operator pos:line="213" pos:column="20">-&gt;<pos:position pos:line="213" pos:column="25"/></operator><name pos:line="213" pos:column="22">protostr<pos:position pos:line="213" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="32">"telnet"<pos:position pos:line="213" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="42"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="214" pos:column="7">else <if pos:line="214" pos:column="12">if <condition pos:line="214" pos:column="15">(<expr><call><name pos:line="214" pos:column="16">checkprefix<pos:position pos:line="214" pos:column="27"/></name><argument_list pos:line="214" pos:column="27">(<argument><expr><literal type="string" pos:line="214" pos:column="28">"DICT."<pos:position pos:line="214" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="37">conn<pos:position pos:line="214" pos:column="41"/></name><operator pos:line="214" pos:column="41">-&gt;<pos:position pos:line="214" pos:column="46"/></operator><name pos:line="214" pos:column="43">host<pos:position pos:line="214" pos:column="47"/></name><operator pos:line="214" pos:column="47">.<pos:position pos:line="214" pos:column="48"/></operator><name pos:line="214" pos:column="48">name<pos:position pos:line="214" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="214" pos:column="54"/></condition><then pos:line="214" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="215" pos:column="9">strcpy<pos:position pos:line="215" pos:column="15"/></name><argument_list pos:line="215" pos:column="15">(<argument><expr><name><name pos:line="215" pos:column="16">conn<pos:position pos:line="215" pos:column="20"/></name><operator pos:line="215" pos:column="20">-&gt;<pos:position pos:line="215" pos:column="25"/></operator><name pos:line="215" pos:column="22">protostr<pos:position pos:line="215" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="32">"DICT"<pos:position pos:line="215" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="40"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="216" pos:column="7">else <if pos:line="216" pos:column="12">if <condition pos:line="216" pos:column="15">(<expr><call><name pos:line="216" pos:column="16">checkprefix<pos:position pos:line="216" pos:column="27"/></name><argument_list pos:line="216" pos:column="27">(<argument><expr><literal type="string" pos:line="216" pos:column="28">"LDAP."<pos:position pos:line="216" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="37">conn<pos:position pos:line="216" pos:column="41"/></name><operator pos:line="216" pos:column="41">-&gt;<pos:position pos:line="216" pos:column="46"/></operator><name pos:line="216" pos:column="43">host<pos:position pos:line="216" pos:column="47"/></name><operator pos:line="216" pos:column="47">.<pos:position pos:line="216" pos:column="48"/></operator><name pos:line="216" pos:column="48">name<pos:position pos:line="216" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="216" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="216" pos:column="54"/></condition><then pos:line="216" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="217" pos:column="9">strcpy<pos:position pos:line="217" pos:column="15"/></name><argument_list pos:line="217" pos:column="15">(<argument><expr><name><name pos:line="217" pos:column="16">conn<pos:position pos:line="217" pos:column="20"/></name><operator pos:line="217" pos:column="20">-&gt;<pos:position pos:line="217" pos:column="25"/></operator><name pos:line="217" pos:column="22">protostr<pos:position pos:line="217" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="32">"LDAP"<pos:position pos:line="217" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="40"/></expr_stmt></block></then></if></elseif>
      <else pos:line="218" pos:column="7">else <block pos:line="218" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="219" pos:column="9">strcpy<pos:position pos:line="219" pos:column="15"/></name><argument_list pos:line="219" pos:column="15">(<argument><expr><name><name pos:line="219" pos:column="16">conn<pos:position pos:line="219" pos:column="20"/></name><operator pos:line="219" pos:column="20">-&gt;<pos:position pos:line="219" pos:column="25"/></operator><name pos:line="219" pos:column="22">protostr<pos:position pos:line="219" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="32">"http"<pos:position pos:line="219" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="220" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="222" pos:column="7">conn<pos:position pos:line="222" pos:column="11"/></name><operator pos:line="222" pos:column="11">-&gt;<pos:position pos:line="222" pos:column="16"/></operator><name pos:line="222" pos:column="13">protocol<pos:position pos:line="222" pos:column="21"/></name></name> <operator pos:line="222" pos:column="22">|=<pos:position pos:line="222" pos:column="24"/></operator> <name pos:line="222" pos:column="25">PROT_MISSING<pos:position pos:line="222" pos:column="37"/></name></expr>;<pos:position pos:line="222" pos:column="38"/></expr_stmt> <comment type="block" pos:line="222" pos:column="39">/* not given in URL */</comment>
    }<pos:position pos:line="223" pos:column="6"/></block></then></if>
  }<pos:position pos:line="224" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="226" pos:column="3">/* We search for '?' in the host name (but only on the right side of a
   * @-letter to allow ?-letters in username and password) to handle things
   * like http://example.com?param= (notice the missing '/').
   */</comment>
  <expr_stmt><expr><name pos:line="230" pos:column="3">at<pos:position pos:line="230" pos:column="5"/></name> <operator pos:line="230" pos:column="6">=<pos:position pos:line="230" pos:column="7"/></operator> <call><name pos:line="230" pos:column="8">strchr<pos:position pos:line="230" pos:column="14"/></name><argument_list pos:line="230" pos:column="14">(<argument><expr><name><name pos:line="230" pos:column="15">conn<pos:position pos:line="230" pos:column="19"/></name><operator pos:line="230" pos:column="19">-&gt;<pos:position pos:line="230" pos:column="24"/></operator><name pos:line="230" pos:column="21">host<pos:position pos:line="230" pos:column="25"/></name><operator pos:line="230" pos:column="25">.<pos:position pos:line="230" pos:column="26"/></operator><name pos:line="230" pos:column="26">name<pos:position pos:line="230" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="230" pos:column="32">'@'<pos:position pos:line="230" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="37"/></expr_stmt>
  <if pos:line="231" pos:column="3">if<condition pos:line="231" pos:column="5">(<expr><name pos:line="231" pos:column="6">at<pos:position pos:line="231" pos:column="8"/></name></expr>)<pos:position pos:line="231" pos:column="9"/></condition><then pos:line="231" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><name pos:line="232" pos:column="5">tmp<pos:position pos:line="232" pos:column="8"/></name> <operator pos:line="232" pos:column="9">=<pos:position pos:line="232" pos:column="10"/></operator> <call><name pos:line="232" pos:column="11">strchr<pos:position pos:line="232" pos:column="17"/></name><argument_list pos:line="232" pos:column="17">(<argument><expr><name pos:line="232" pos:column="18">at<pos:position pos:line="232" pos:column="20"/></name><operator pos:line="232" pos:column="20">+<pos:position pos:line="232" pos:column="21"/></operator><literal type="number" pos:line="232" pos:column="21">1<pos:position pos:line="232" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="232" pos:column="24">'?'<pos:position pos:line="232" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="29"/></expr_stmt></block></then>
  <else pos:line="233" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="234" pos:column="5">tmp<pos:position pos:line="234" pos:column="8"/></name> <operator pos:line="234" pos:column="9">=<pos:position pos:line="234" pos:column="10"/></operator> <call><name pos:line="234" pos:column="11">strchr<pos:position pos:line="234" pos:column="17"/></name><argument_list pos:line="234" pos:column="17">(<argument><expr><name><name pos:line="234" pos:column="18">conn<pos:position pos:line="234" pos:column="22"/></name><operator pos:line="234" pos:column="22">-&gt;<pos:position pos:line="234" pos:column="27"/></operator><name pos:line="234" pos:column="24">host<pos:position pos:line="234" pos:column="28"/></name><operator pos:line="234" pos:column="28">.<pos:position pos:line="234" pos:column="29"/></operator><name pos:line="234" pos:column="29">name<pos:position pos:line="234" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="234" pos:column="35">'?'<pos:position pos:line="234" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="40"/></expr_stmt></block></else></if>

  <if pos:line="236" pos:column="3">if<condition pos:line="236" pos:column="5">(<expr><name pos:line="236" pos:column="6">tmp<pos:position pos:line="236" pos:column="9"/></name></expr>)<pos:position pos:line="236" pos:column="10"/></condition><then pos:line="236" pos:column="10"> <block pos:line="236" pos:column="11">{
    <comment type="block" pos:line="237" pos:column="5">/* The right part of the ?-letter needs to be moved to prefix
       the current path buffer! */</comment>
    <decl_stmt><decl><type><name pos:line="239" pos:column="5">size_t<pos:position pos:line="239" pos:column="11"/></name></type> <name pos:line="239" pos:column="12">len<pos:position pos:line="239" pos:column="15"/></name> <init pos:line="239" pos:column="16">= <expr><call><name pos:line="239" pos:column="18">strlen<pos:position pos:line="239" pos:column="24"/></name><argument_list pos:line="239" pos:column="24">(<argument><expr><name pos:line="239" pos:column="25">tmp<pos:position pos:line="239" pos:column="28"/></name></expr></argument>)<pos:position pos:line="239" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="239" pos:column="30"/></decl_stmt>
    <comment type="block" pos:line="240" pos:column="5">/* move the existing path plus the zero byte */</comment>
    <expr_stmt><expr><call><name pos:line="241" pos:column="5">memmove<pos:position pos:line="241" pos:column="12"/></name><argument_list pos:line="241" pos:column="12">(<argument><expr><name><name pos:line="241" pos:column="13">conn<pos:position pos:line="241" pos:column="17"/></name><operator pos:line="241" pos:column="17">-&gt;<pos:position pos:line="241" pos:column="22"/></operator><name pos:line="241" pos:column="19">path<pos:position pos:line="241" pos:column="23"/></name></name><operator pos:line="241" pos:column="23">+<pos:position pos:line="241" pos:column="24"/></operator><name pos:line="241" pos:column="24">len<pos:position pos:line="241" pos:column="27"/></name><operator pos:line="241" pos:column="27">+<pos:position pos:line="241" pos:column="28"/></operator><literal type="number" pos:line="241" pos:column="28">1<pos:position pos:line="241" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="31">conn<pos:position pos:line="241" pos:column="35"/></name><operator pos:line="241" pos:column="35">-&gt;<pos:position pos:line="241" pos:column="40"/></operator><name pos:line="241" pos:column="37">path<pos:position pos:line="241" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="241" pos:column="43">strlen<pos:position pos:line="241" pos:column="49"/></name><argument_list pos:line="241" pos:column="49">(<argument><expr><name><name pos:line="241" pos:column="50">conn<pos:position pos:line="241" pos:column="54"/></name><operator pos:line="241" pos:column="54">-&gt;<pos:position pos:line="241" pos:column="59"/></operator><name pos:line="241" pos:column="56">path<pos:position pos:line="241" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="61"/></argument_list></call><operator pos:line="241" pos:column="61">+<pos:position pos:line="241" pos:column="62"/></operator><literal type="number" pos:line="241" pos:column="62">1<pos:position pos:line="241" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="242" pos:column="5">conn<pos:position pos:line="242" pos:column="9"/></name><operator pos:line="242" pos:column="9">-&gt;<pos:position pos:line="242" pos:column="14"/></operator><name pos:line="242" pos:column="11">path<pos:position pos:line="242" pos:column="15"/></name><index pos:line="242" pos:column="15">[<expr><literal type="number" pos:line="242" pos:column="16">0<pos:position pos:line="242" pos:column="17"/></literal></expr>]<pos:position pos:line="242" pos:column="18"/></index></name><operator pos:line="242" pos:column="18">=<pos:position pos:line="242" pos:column="19"/></operator><literal type="char" pos:line="242" pos:column="19">'/'<pos:position pos:line="242" pos:column="22"/></literal></expr>;<pos:position pos:line="242" pos:column="23"/></expr_stmt> <comment type="block" pos:line="242" pos:column="24">/* prepend the missing slash */</comment>
    <expr_stmt><expr><call><name pos:line="243" pos:column="5">memcpy<pos:position pos:line="243" pos:column="11"/></name><argument_list pos:line="243" pos:column="11">(<argument><expr><name><name pos:line="243" pos:column="12">conn<pos:position pos:line="243" pos:column="16"/></name><operator pos:line="243" pos:column="16">-&gt;<pos:position pos:line="243" pos:column="21"/></operator><name pos:line="243" pos:column="18">path<pos:position pos:line="243" pos:column="22"/></name></name><operator pos:line="243" pos:column="22">+<pos:position pos:line="243" pos:column="23"/></operator><literal type="number" pos:line="243" pos:column="23">1<pos:position pos:line="243" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="26">tmp<pos:position pos:line="243" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="31">len<pos:position pos:line="243" pos:column="34"/></name></expr></argument>)<pos:position pos:line="243" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="36"/></expr_stmt> <comment type="block" pos:line="243" pos:column="37">/* now copy the prefix part */</comment>
    <expr_stmt><expr><operator pos:line="244" pos:column="5">*<pos:position pos:line="244" pos:column="6"/></operator><name pos:line="244" pos:column="6">tmp<pos:position pos:line="244" pos:column="9"/></name><operator pos:line="244" pos:column="9">=<pos:position pos:line="244" pos:column="10"/></operator><literal type="number" pos:line="244" pos:column="10">0<pos:position pos:line="244" pos:column="11"/></literal></expr>;<pos:position pos:line="244" pos:column="12"/></expr_stmt> <comment type="block" pos:line="244" pos:column="13">/* now cut off the hostname at the ? */</comment>
  }<pos:position pos:line="245" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="247" pos:column="3">/* If the URL is malformatted (missing a '/' after hostname before path) we
   * insert a slash here. The only letter except '/' we accept to start a path
   * is '?'.
   */</comment>
  <if pos:line="251" pos:column="3">if<condition pos:line="251" pos:column="5">(<expr><name><name pos:line="251" pos:column="6">conn<pos:position pos:line="251" pos:column="10"/></name><operator pos:line="251" pos:column="10">-&gt;<pos:position pos:line="251" pos:column="15"/></operator><name pos:line="251" pos:column="12">path<pos:position pos:line="251" pos:column="16"/></name><index pos:line="251" pos:column="16">[<expr><literal type="number" pos:line="251" pos:column="17">0<pos:position pos:line="251" pos:column="18"/></literal></expr>]<pos:position pos:line="251" pos:column="19"/></index></name> <operator pos:line="251" pos:column="20">==<pos:position pos:line="251" pos:column="22"/></operator> <literal type="char" pos:line="251" pos:column="23">'?'<pos:position pos:line="251" pos:column="26"/></literal></expr>)<pos:position pos:line="251" pos:column="27"/></condition><then pos:line="251" pos:column="27"> <block pos:line="251" pos:column="28">{
    <comment type="block" pos:line="252" pos:column="5">/* We need this function to deal with overlapping memory areas. We know
       that the memory area 'path' points to is 'urllen' bytes big and that
       is bigger than the path. Use +1 to move the zero byte too. */</comment>
    <expr_stmt><expr><call><name pos:line="255" pos:column="5">memmove<pos:position pos:line="255" pos:column="12"/></name><argument_list pos:line="255" pos:column="12">(<argument><expr><operator pos:line="255" pos:column="13">&amp;<pos:position pos:line="255" pos:column="18"/></operator><name><name pos:line="255" pos:column="14">conn<pos:position pos:line="255" pos:column="18"/></name><operator pos:line="255" pos:column="18">-&gt;<pos:position pos:line="255" pos:column="23"/></operator><name pos:line="255" pos:column="20">path<pos:position pos:line="255" pos:column="24"/></name><index pos:line="255" pos:column="24">[<expr><literal type="number" pos:line="255" pos:column="25">1<pos:position pos:line="255" pos:column="26"/></literal></expr>]<pos:position pos:line="255" pos:column="27"/></index></name></expr></argument>, <argument><expr><name><name pos:line="255" pos:column="29">conn<pos:position pos:line="255" pos:column="33"/></name><operator pos:line="255" pos:column="33">-&gt;<pos:position pos:line="255" pos:column="38"/></operator><name pos:line="255" pos:column="35">path<pos:position pos:line="255" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="255" pos:column="41">strlen<pos:position pos:line="255" pos:column="47"/></name><argument_list pos:line="255" pos:column="47">(<argument><expr><name><name pos:line="255" pos:column="48">conn<pos:position pos:line="255" pos:column="52"/></name><operator pos:line="255" pos:column="52">-&gt;<pos:position pos:line="255" pos:column="57"/></operator><name pos:line="255" pos:column="54">path<pos:position pos:line="255" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="255" pos:column="59"/></argument_list></call><operator pos:line="255" pos:column="59">+<pos:position pos:line="255" pos:column="60"/></operator><literal type="number" pos:line="255" pos:column="60">1<pos:position pos:line="255" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="256" pos:column="5">conn<pos:position pos:line="256" pos:column="9"/></name><operator pos:line="256" pos:column="9">-&gt;<pos:position pos:line="256" pos:column="14"/></operator><name pos:line="256" pos:column="11">path<pos:position pos:line="256" pos:column="15"/></name><index pos:line="256" pos:column="15">[<expr><literal type="number" pos:line="256" pos:column="16">0<pos:position pos:line="256" pos:column="17"/></literal></expr>]<pos:position pos:line="256" pos:column="18"/></index></name> <operator pos:line="256" pos:column="19">=<pos:position pos:line="256" pos:column="20"/></operator> <literal type="char" pos:line="256" pos:column="21">'/'<pos:position pos:line="256" pos:column="24"/></literal></expr>;<pos:position pos:line="256" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="257" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="259" pos:column="3">/*
   * So if the URL was A://B/C,
   *   conn-&gt;protostr is A
   *   conn-&gt;host.name is B
   *   conn-&gt;path is /C
   */</comment>

  <comment type="block" format="doxygen" pos:line="266" pos:column="3">/*************************************************************
   * Take care of proxy authentication stuff
   *************************************************************/</comment>
  <if pos:line="269" pos:column="3">if<condition pos:line="269" pos:column="5">(<expr><name><name pos:line="269" pos:column="6">conn<pos:position pos:line="269" pos:column="10"/></name><operator pos:line="269" pos:column="10">-&gt;<pos:position pos:line="269" pos:column="15"/></operator><name pos:line="269" pos:column="12">bits<pos:position pos:line="269" pos:column="16"/></name><operator pos:line="269" pos:column="16">.<pos:position pos:line="269" pos:column="17"/></operator><name pos:line="269" pos:column="17">proxy_user_passwd<pos:position pos:line="269" pos:column="34"/></name></name></expr>)<pos:position pos:line="269" pos:column="35"/></condition><then pos:line="269" pos:column="35"> <block pos:line="269" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="270" pos:column="5">char<pos:position pos:line="270" pos:column="9"/></name></type> <name><name pos:line="270" pos:column="10">proxyuser<pos:position pos:line="270" pos:column="19"/></name><index pos:line="270" pos:column="19">[<expr><name pos:line="270" pos:column="20">MAX_CURL_USER_LENGTH<pos:position pos:line="270" pos:column="40"/></name></expr>]<pos:position pos:line="270" pos:column="41"/></index></name><init pos:line="270" pos:column="41">=<expr><literal type="string" pos:line="270" pos:column="42">""<pos:position pos:line="270" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="270" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="271" pos:column="5">char<pos:position pos:line="271" pos:column="9"/></name></type> <name><name pos:line="271" pos:column="10">proxypasswd<pos:position pos:line="271" pos:column="21"/></name><index pos:line="271" pos:column="21">[<expr><name pos:line="271" pos:column="22">MAX_CURL_PASSWORD_LENGTH<pos:position pos:line="271" pos:column="46"/></name></expr>]<pos:position pos:line="271" pos:column="47"/></index></name><init pos:line="271" pos:column="47">=<expr><literal type="string" pos:line="271" pos:column="48">""<pos:position pos:line="271" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="271" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="273" pos:column="5">sscanf<pos:position pos:line="273" pos:column="11"/></name><argument_list pos:line="273" pos:column="11">(<argument><expr><name><name pos:line="273" pos:column="12">data<pos:position pos:line="273" pos:column="16"/></name><operator pos:line="273" pos:column="16">-&gt;<pos:position pos:line="273" pos:column="21"/></operator><name pos:line="273" pos:column="18">set<pos:position pos:line="273" pos:column="21"/></name><operator pos:line="273" pos:column="21">.<pos:position pos:line="273" pos:column="22"/></operator><name pos:line="273" pos:column="22">proxyuserpwd<pos:position pos:line="273" pos:column="34"/></name></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="274" pos:column="12">"%"<pos:position pos:line="274" pos:column="15"/></literal> <name pos:line="274" pos:column="16">MAX_CURL_USER_LENGTH_TXT<pos:position pos:line="274" pos:column="40"/></name> <literal type="string" pos:line="274" pos:column="41">"[^:]:"<pos:position pos:line="274" pos:column="48"/></literal>
           <literal type="string" pos:line="275" pos:column="12">"%"<pos:position pos:line="275" pos:column="15"/></literal> <name pos:line="275" pos:column="16">MAX_CURL_PASSWORD_LENGTH_TXT<pos:position pos:line="275" pos:column="44"/></name> <literal type="string" pos:line="275" pos:column="45">"[^\n]"<pos:position pos:line="275" pos:column="52"/></literal></expr></argument>,
           <argument><expr><name pos:line="276" pos:column="12">proxyuser<pos:position pos:line="276" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="23">proxypasswd<pos:position pos:line="276" pos:column="34"/></name></expr></argument>)<pos:position pos:line="276" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="278" pos:column="5">conn<pos:position pos:line="278" pos:column="9"/></name><operator pos:line="278" pos:column="9">-&gt;<pos:position pos:line="278" pos:column="14"/></operator><name pos:line="278" pos:column="11">proxyuser<pos:position pos:line="278" pos:column="20"/></name></name> <operator pos:line="278" pos:column="21">=<pos:position pos:line="278" pos:column="22"/></operator> <call><name pos:line="278" pos:column="23">strdup<pos:position pos:line="278" pos:column="29"/></name><argument_list pos:line="278" pos:column="29">(<argument><expr><name pos:line="278" pos:column="30">proxyuser<pos:position pos:line="278" pos:column="39"/></name></expr></argument>)<pos:position pos:line="278" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="41"/></expr_stmt>
    <if pos:line="279" pos:column="5">if<condition pos:line="279" pos:column="7">(<expr><operator pos:line="279" pos:column="8">!<pos:position pos:line="279" pos:column="9"/></operator><name><name pos:line="279" pos:column="9">conn<pos:position pos:line="279" pos:column="13"/></name><operator pos:line="279" pos:column="13">-&gt;<pos:position pos:line="279" pos:column="18"/></operator><name pos:line="279" pos:column="15">proxyuser<pos:position pos:line="279" pos:column="24"/></name></name></expr>)<pos:position pos:line="279" pos:column="25"/></condition><then pos:line="279" pos:column="25">
      <block type="pseudo"><return pos:line="280" pos:column="7">return <expr><name pos:line="280" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="280" pos:column="33"/></name></expr>;<pos:position pos:line="280" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="282" pos:column="5">conn<pos:position pos:line="282" pos:column="9"/></name><operator pos:line="282" pos:column="9">-&gt;<pos:position pos:line="282" pos:column="14"/></operator><name pos:line="282" pos:column="11">proxypasswd<pos:position pos:line="282" pos:column="22"/></name></name> <operator pos:line="282" pos:column="23">=<pos:position pos:line="282" pos:column="24"/></operator> <call><name pos:line="282" pos:column="25">strdup<pos:position pos:line="282" pos:column="31"/></name><argument_list pos:line="282" pos:column="31">(<argument><expr><name pos:line="282" pos:column="32">proxypasswd<pos:position pos:line="282" pos:column="43"/></name></expr></argument>)<pos:position pos:line="282" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="45"/></expr_stmt>
    <if pos:line="283" pos:column="5">if<condition pos:line="283" pos:column="7">(<expr><operator pos:line="283" pos:column="8">!<pos:position pos:line="283" pos:column="9"/></operator><name><name pos:line="283" pos:column="9">conn<pos:position pos:line="283" pos:column="13"/></name><operator pos:line="283" pos:column="13">-&gt;<pos:position pos:line="283" pos:column="18"/></operator><name pos:line="283" pos:column="15">proxypasswd<pos:position pos:line="283" pos:column="26"/></name></name></expr>)<pos:position pos:line="283" pos:column="27"/></condition><then pos:line="283" pos:column="27">
      <block type="pseudo"><return pos:line="284" pos:column="7">return <expr><name pos:line="284" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="284" pos:column="33"/></name></expr>;<pos:position pos:line="284" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="285" pos:column="4"/></block></then></if>

<cpp:ifndef pos:line="287" pos:column="1">#<cpp:directive pos:line="287" pos:column="2">ifndef<pos:position pos:line="287" pos:column="8"/></cpp:directive> <name pos:line="287" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="287" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" format="doxygen" pos:line="288" pos:column="3">/*************************************************************
   * Detect what (if any) proxy to use
   *************************************************************/</comment>
  <if pos:line="291" pos:column="3">if<condition pos:line="291" pos:column="5">(<expr><operator pos:line="291" pos:column="6">!<pos:position pos:line="291" pos:column="7"/></operator><name><name pos:line="291" pos:column="7">data<pos:position pos:line="291" pos:column="11"/></name><operator pos:line="291" pos:column="11">-&gt;<pos:position pos:line="291" pos:column="16"/></operator><name pos:line="291" pos:column="13">change<pos:position pos:line="291" pos:column="19"/></name><operator pos:line="291" pos:column="19">.<pos:position pos:line="291" pos:column="20"/></operator><name pos:line="291" pos:column="20">proxy<pos:position pos:line="291" pos:column="25"/></name></name></expr>)<pos:position pos:line="291" pos:column="26"/></condition><then pos:line="291" pos:column="26"> <block pos:line="291" pos:column="27">{
    <comment type="block" pos:line="292" pos:column="5">/* If proxy was not specified, we check for default proxy environment
     * variables, to enable i.e Lynx compliance:
     *
     * http_proxy=http://some.server.dom:port/
     * https_proxy=http://some.server.dom:port/
     * ftp_proxy=http://some.server.dom:port/
     * gopher_proxy=http://some.server.dom:port/
     * no_proxy=domain1.dom,host.domain2.dom
     *   (a comma-separated list of hosts which should
     *   not be proxied, or an asterisk to override
     *   all proxy variables)
     * all_proxy=http://some.server.dom:port/
     *   (seems to exist for the CERN www lib. Probably
     *   the first to check for.)
     *
     * For compatibility, the all-uppercase versions of these variables are
     * checked if the lowercase versions don't exist.
     */</comment>
    <decl_stmt><decl><type><name pos:line="310" pos:column="5">char<pos:position pos:line="310" pos:column="9"/></name> <modifier pos:line="310" pos:column="10">*<pos:position pos:line="310" pos:column="11"/></modifier></type><name pos:line="310" pos:column="11">no_proxy<pos:position pos:line="310" pos:column="19"/></name><init pos:line="310" pos:column="19">=<expr><name pos:line="310" pos:column="20">NULL<pos:position pos:line="310" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="310" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="311" pos:column="5">char<pos:position pos:line="311" pos:column="9"/></name> <modifier pos:line="311" pos:column="10">*<pos:position pos:line="311" pos:column="11"/></modifier></type><name pos:line="311" pos:column="11">no_proxy_tok_buf<pos:position pos:line="311" pos:column="27"/></name></decl>;<pos:position pos:line="311" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="312" pos:column="5">char<pos:position pos:line="312" pos:column="9"/></name> <modifier pos:line="312" pos:column="10">*<pos:position pos:line="312" pos:column="11"/></modifier></type><name pos:line="312" pos:column="11">proxy<pos:position pos:line="312" pos:column="16"/></name><init pos:line="312" pos:column="16">=<expr><name pos:line="312" pos:column="17">NULL<pos:position pos:line="312" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="312" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="313" pos:column="5">char<pos:position pos:line="313" pos:column="9"/></name></type> <name><name pos:line="313" pos:column="10">proxy_env<pos:position pos:line="313" pos:column="19"/></name><index pos:line="313" pos:column="19">[<expr><literal type="number" pos:line="313" pos:column="20">128<pos:position pos:line="313" pos:column="23"/></literal></expr>]<pos:position pos:line="313" pos:column="24"/></index></name></decl>;<pos:position pos:line="313" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="315" pos:column="5">no_proxy<pos:position pos:line="315" pos:column="13"/></name><operator pos:line="315" pos:column="13">=<pos:position pos:line="315" pos:column="14"/></operator><call><name pos:line="315" pos:column="14">curl_getenv<pos:position pos:line="315" pos:column="25"/></name><argument_list pos:line="315" pos:column="25">(<argument><expr><literal type="string" pos:line="315" pos:column="26">"no_proxy"<pos:position pos:line="315" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="38"/></expr_stmt>
    <if pos:line="316" pos:column="5">if<condition pos:line="316" pos:column="7">(<expr><operator pos:line="316" pos:column="8">!<pos:position pos:line="316" pos:column="9"/></operator><name pos:line="316" pos:column="9">no_proxy<pos:position pos:line="316" pos:column="17"/></name></expr>)<pos:position pos:line="316" pos:column="18"/></condition><then pos:line="316" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="317" pos:column="7">no_proxy<pos:position pos:line="317" pos:column="15"/></name><operator pos:line="317" pos:column="15">=<pos:position pos:line="317" pos:column="16"/></operator><call><name pos:line="317" pos:column="16">curl_getenv<pos:position pos:line="317" pos:column="27"/></name><argument_list pos:line="317" pos:column="27">(<argument><expr><literal type="string" pos:line="317" pos:column="28">"NO_PROXY"<pos:position pos:line="317" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="40"/></expr_stmt></block></then></if>

    <if pos:line="319" pos:column="5">if<condition pos:line="319" pos:column="7">(<expr><operator pos:line="319" pos:column="8">!<pos:position pos:line="319" pos:column="9"/></operator><name pos:line="319" pos:column="9">no_proxy<pos:position pos:line="319" pos:column="17"/></name> <operator pos:line="319" pos:column="18">||<pos:position pos:line="319" pos:column="20"/></operator> <operator pos:line="319" pos:column="21">!<pos:position pos:line="319" pos:column="22"/></operator><call><name pos:line="319" pos:column="22">strequal<pos:position pos:line="319" pos:column="30"/></name><argument_list pos:line="319" pos:column="30">(<argument><expr><literal type="string" pos:line="319" pos:column="31">"*"<pos:position pos:line="319" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="319" pos:column="36">no_proxy<pos:position pos:line="319" pos:column="44"/></name></expr></argument>)<pos:position pos:line="319" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="319" pos:column="46"/></condition><then pos:line="319" pos:column="46"> <block pos:line="319" pos:column="47">{
      <comment type="block" pos:line="320" pos:column="7">/* NO_PROXY wasn't specified or it wasn't just an asterisk */</comment>
      <decl_stmt><decl><type><name pos:line="321" pos:column="7">char<pos:position pos:line="321" pos:column="11"/></name> <modifier pos:line="321" pos:column="12">*<pos:position pos:line="321" pos:column="13"/></modifier></type><name pos:line="321" pos:column="13">nope<pos:position pos:line="321" pos:column="17"/></name></decl>;<pos:position pos:line="321" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="323" pos:column="7">nope<pos:position pos:line="323" pos:column="11"/></name><operator pos:line="323" pos:column="11">=<pos:position pos:line="323" pos:column="12"/></operator><ternary><condition><expr><name pos:line="323" pos:column="12">no_proxy<pos:position pos:line="323" pos:column="20"/></name></expr>?<pos:position pos:line="323" pos:column="21"/></condition><then><expr><call><name pos:line="323" pos:column="21">strtok_r<pos:position pos:line="323" pos:column="29"/></name><argument_list pos:line="323" pos:column="29">(<argument><expr><name pos:line="323" pos:column="30">no_proxy<pos:position pos:line="323" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="323" pos:column="40">", "<pos:position pos:line="323" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="323" pos:column="46">&amp;<pos:position pos:line="323" pos:column="51"/></operator><name pos:line="323" pos:column="47">no_proxy_tok_buf<pos:position pos:line="323" pos:column="63"/></name></expr></argument>)<pos:position pos:line="323" pos:column="64"/></argument_list></call></expr></then><else pos:line="323" pos:column="64">:<expr><name pos:line="323" pos:column="65">NULL<pos:position pos:line="323" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="323" pos:column="70"/></expr_stmt>
      <while pos:line="324" pos:column="7">while<condition pos:line="324" pos:column="12">(<expr><name pos:line="324" pos:column="13">nope<pos:position pos:line="324" pos:column="17"/></name></expr>)<pos:position pos:line="324" pos:column="18"/></condition> <block pos:line="324" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="325" pos:column="9">size_t<pos:position pos:line="325" pos:column="15"/></name></type> <name pos:line="325" pos:column="16">namelen<pos:position pos:line="325" pos:column="23"/></name></decl>;<pos:position pos:line="325" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="326" pos:column="9">char<pos:position pos:line="326" pos:column="13"/></name> <modifier pos:line="326" pos:column="14">*<pos:position pos:line="326" pos:column="15"/></modifier></type><name pos:line="326" pos:column="15">endptr<pos:position pos:line="326" pos:column="21"/></name> <init pos:line="326" pos:column="22">= <expr><call><name pos:line="326" pos:column="24">strchr<pos:position pos:line="326" pos:column="30"/></name><argument_list pos:line="326" pos:column="30">(<argument><expr><name><name pos:line="326" pos:column="31">conn<pos:position pos:line="326" pos:column="35"/></name><operator pos:line="326" pos:column="35">-&gt;<pos:position pos:line="326" pos:column="40"/></operator><name pos:line="326" pos:column="37">host<pos:position pos:line="326" pos:column="41"/></name><operator pos:line="326" pos:column="41">.<pos:position pos:line="326" pos:column="42"/></operator><name pos:line="326" pos:column="42">name<pos:position pos:line="326" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="326" pos:column="48">':'<pos:position pos:line="326" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="326" pos:column="53"/></decl_stmt>
        <if pos:line="327" pos:column="9">if<condition pos:line="327" pos:column="11">(<expr><name pos:line="327" pos:column="12">endptr<pos:position pos:line="327" pos:column="18"/></name></expr>)<pos:position pos:line="327" pos:column="19"/></condition><then pos:line="327" pos:column="19">
          <block type="pseudo"><expr_stmt><expr><name pos:line="328" pos:column="11">namelen<pos:position pos:line="328" pos:column="18"/></name><operator pos:line="328" pos:column="18">=<pos:position pos:line="328" pos:column="19"/></operator><name pos:line="328" pos:column="19">endptr<pos:position pos:line="328" pos:column="25"/></name><operator pos:line="328" pos:column="25">-<pos:position pos:line="328" pos:column="26"/></operator><name><name pos:line="328" pos:column="26">conn<pos:position pos:line="328" pos:column="30"/></name><operator pos:line="328" pos:column="30">-&gt;<pos:position pos:line="328" pos:column="35"/></operator><name pos:line="328" pos:column="32">host<pos:position pos:line="328" pos:column="36"/></name><operator pos:line="328" pos:column="36">.<pos:position pos:line="328" pos:column="37"/></operator><name pos:line="328" pos:column="37">name<pos:position pos:line="328" pos:column="41"/></name></name></expr>;<pos:position pos:line="328" pos:column="42"/></expr_stmt></block></then>
        <else pos:line="329" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="330" pos:column="11">namelen<pos:position pos:line="330" pos:column="18"/></name><operator pos:line="330" pos:column="18">=<pos:position pos:line="330" pos:column="19"/></operator><call><name pos:line="330" pos:column="19">strlen<pos:position pos:line="330" pos:column="25"/></name><argument_list pos:line="330" pos:column="25">(<argument><expr><name><name pos:line="330" pos:column="26">conn<pos:position pos:line="330" pos:column="30"/></name><operator pos:line="330" pos:column="30">-&gt;<pos:position pos:line="330" pos:column="35"/></operator><name pos:line="330" pos:column="32">host<pos:position pos:line="330" pos:column="36"/></name><operator pos:line="330" pos:column="36">.<pos:position pos:line="330" pos:column="37"/></operator><name pos:line="330" pos:column="37">name<pos:position pos:line="330" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="330" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="43"/></expr_stmt></block></else></if>

        <if pos:line="332" pos:column="9">if<condition pos:line="332" pos:column="11">(<expr><call><name pos:line="332" pos:column="12">strlen<pos:position pos:line="332" pos:column="18"/></name><argument_list pos:line="332" pos:column="18">(<argument><expr><name pos:line="332" pos:column="19">nope<pos:position pos:line="332" pos:column="23"/></name></expr></argument>)<pos:position pos:line="332" pos:column="24"/></argument_list></call> <operator pos:line="332" pos:column="25">&lt;=<pos:position pos:line="332" pos:column="30"/></operator> <name pos:line="332" pos:column="28">namelen<pos:position pos:line="332" pos:column="35"/></name></expr>)<pos:position pos:line="332" pos:column="36"/></condition><then pos:line="332" pos:column="36"> <block pos:line="332" pos:column="37">{
          <decl_stmt><decl><type><name pos:line="333" pos:column="11">char<pos:position pos:line="333" pos:column="15"/></name> <modifier pos:line="333" pos:column="16">*<pos:position pos:line="333" pos:column="17"/></modifier></type><name pos:line="333" pos:column="17">checkn<pos:position pos:line="333" pos:column="23"/></name><init pos:line="333" pos:column="23">=
            <expr><name><name pos:line="334" pos:column="13">conn<pos:position pos:line="334" pos:column="17"/></name><operator pos:line="334" pos:column="17">-&gt;<pos:position pos:line="334" pos:column="22"/></operator><name pos:line="334" pos:column="19">host<pos:position pos:line="334" pos:column="23"/></name><operator pos:line="334" pos:column="23">.<pos:position pos:line="334" pos:column="24"/></operator><name pos:line="334" pos:column="24">name<pos:position pos:line="334" pos:column="28"/></name></name> <operator pos:line="334" pos:column="29">+<pos:position pos:line="334" pos:column="30"/></operator> <name pos:line="334" pos:column="31">namelen<pos:position pos:line="334" pos:column="38"/></name> <operator pos:line="334" pos:column="39">-<pos:position pos:line="334" pos:column="40"/></operator> <call><name pos:line="334" pos:column="41">strlen<pos:position pos:line="334" pos:column="47"/></name><argument_list pos:line="334" pos:column="47">(<argument><expr><name pos:line="334" pos:column="48">nope<pos:position pos:line="334" pos:column="52"/></name></expr></argument>)<pos:position pos:line="334" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="334" pos:column="54"/></decl_stmt>
          <if pos:line="335" pos:column="11">if<condition pos:line="335" pos:column="13">(<expr><call><name pos:line="335" pos:column="14">checkprefix<pos:position pos:line="335" pos:column="25"/></name><argument_list pos:line="335" pos:column="25">(<argument><expr><name pos:line="335" pos:column="26">nope<pos:position pos:line="335" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="32">checkn<pos:position pos:line="335" pos:column="38"/></name></expr></argument>)<pos:position pos:line="335" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="335" pos:column="40"/></condition><then pos:line="335" pos:column="40"> <block pos:line="335" pos:column="41">{
            <comment type="block" pos:line="336" pos:column="13">/* no proxy for this host! */</comment>
            <break pos:line="337" pos:column="13">break;<pos:position pos:line="337" pos:column="19"/></break>
          }<pos:position pos:line="338" pos:column="12"/></block></then></if>
        }<pos:position pos:line="339" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="340" pos:column="9">nope<pos:position pos:line="340" pos:column="13"/></name><operator pos:line="340" pos:column="13">=<pos:position pos:line="340" pos:column="14"/></operator><call><name pos:line="340" pos:column="14">strtok_r<pos:position pos:line="340" pos:column="22"/></name><argument_list pos:line="340" pos:column="22">(<argument><expr><name pos:line="340" pos:column="23">NULL<pos:position pos:line="340" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="29">", "<pos:position pos:line="340" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="340" pos:column="35">&amp;<pos:position pos:line="340" pos:column="40"/></operator><name pos:line="340" pos:column="36">no_proxy_tok_buf<pos:position pos:line="340" pos:column="52"/></name></expr></argument>)<pos:position pos:line="340" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="341" pos:column="8"/></block></while>
      <if pos:line="342" pos:column="7">if<condition pos:line="342" pos:column="9">(<expr><operator pos:line="342" pos:column="10">!<pos:position pos:line="342" pos:column="11"/></operator><name pos:line="342" pos:column="11">nope<pos:position pos:line="342" pos:column="15"/></name></expr>)<pos:position pos:line="342" pos:column="16"/></condition><then pos:line="342" pos:column="16"> <block pos:line="342" pos:column="17">{
        <comment type="block" pos:line="343" pos:column="9">/* It was not listed as without proxy */</comment>
        <decl_stmt><decl><type><name pos:line="344" pos:column="9">char<pos:position pos:line="344" pos:column="13"/></name> <modifier pos:line="344" pos:column="14">*<pos:position pos:line="344" pos:column="15"/></modifier></type><name pos:line="344" pos:column="15">protop<pos:position pos:line="344" pos:column="21"/></name> <init pos:line="344" pos:column="22">= <expr><name><name pos:line="344" pos:column="24">conn<pos:position pos:line="344" pos:column="28"/></name><operator pos:line="344" pos:column="28">-&gt;<pos:position pos:line="344" pos:column="33"/></operator><name pos:line="344" pos:column="30">protostr<pos:position pos:line="344" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="344" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="345" pos:column="9">char<pos:position pos:line="345" pos:column="13"/></name> <modifier pos:line="345" pos:column="14">*<pos:position pos:line="345" pos:column="15"/></modifier></type><name pos:line="345" pos:column="15">envp<pos:position pos:line="345" pos:column="19"/></name> <init pos:line="345" pos:column="20">= <expr><name pos:line="345" pos:column="22">proxy_env<pos:position pos:line="345" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="345" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="346" pos:column="9">char<pos:position pos:line="346" pos:column="13"/></name> <modifier pos:line="346" pos:column="14">*<pos:position pos:line="346" pos:column="15"/></modifier></type><name pos:line="346" pos:column="15">prox<pos:position pos:line="346" pos:column="19"/></name></decl>;<pos:position pos:line="346" pos:column="20"/></decl_stmt>

        <comment type="block" pos:line="348" pos:column="9">/* Now, build &lt;protocol&gt;_proxy and check for such a one to use */</comment>
        <while pos:line="349" pos:column="9">while<condition pos:line="349" pos:column="14">(<expr><operator pos:line="349" pos:column="15">*<pos:position pos:line="349" pos:column="16"/></operator><name pos:line="349" pos:column="16">protop<pos:position pos:line="349" pos:column="22"/></name></expr>)<pos:position pos:line="349" pos:column="23"/></condition>
          <block type="pseudo"><expr_stmt><expr><operator pos:line="350" pos:column="11">*<pos:position pos:line="350" pos:column="12"/></operator><name pos:line="350" pos:column="12">envp<pos:position pos:line="350" pos:column="16"/></name><operator pos:line="350" pos:column="16">++<pos:position pos:line="350" pos:column="18"/></operator> <operator pos:line="350" pos:column="19">=<pos:position pos:line="350" pos:column="20"/></operator> <call><name pos:line="350" pos:column="21">tolower<pos:position pos:line="350" pos:column="28"/></name><argument_list pos:line="350" pos:column="28">(<argument><expr><operator pos:line="350" pos:column="29">(<pos:position pos:line="350" pos:column="30"/></operator><name pos:line="350" pos:column="30">int<pos:position pos:line="350" pos:column="33"/></name><operator pos:line="350" pos:column="33">)<pos:position pos:line="350" pos:column="34"/></operator><operator pos:line="350" pos:column="34">*<pos:position pos:line="350" pos:column="35"/></operator><name pos:line="350" pos:column="35">protop<pos:position pos:line="350" pos:column="41"/></name><operator pos:line="350" pos:column="41">++<pos:position pos:line="350" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="350" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="45"/></expr_stmt></block></while>

        <comment type="block" pos:line="352" pos:column="9">/* append _proxy */</comment>
        <expr_stmt><expr><call><name pos:line="353" pos:column="9">strcpy<pos:position pos:line="353" pos:column="15"/></name><argument_list pos:line="353" pos:column="15">(<argument><expr><name pos:line="353" pos:column="16">envp<pos:position pos:line="353" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="353" pos:column="22">"_proxy"<pos:position pos:line="353" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="32"/></expr_stmt>

        <comment type="block" pos:line="355" pos:column="9">/* read the protocol proxy: */</comment>
        <expr_stmt><expr><name pos:line="356" pos:column="9">prox<pos:position pos:line="356" pos:column="13"/></name><operator pos:line="356" pos:column="13">=<pos:position pos:line="356" pos:column="14"/></operator><call><name pos:line="356" pos:column="14">curl_getenv<pos:position pos:line="356" pos:column="25"/></name><argument_list pos:line="356" pos:column="25">(<argument><expr><name pos:line="356" pos:column="26">proxy_env<pos:position pos:line="356" pos:column="35"/></name></expr></argument>)<pos:position pos:line="356" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="37"/></expr_stmt>

        <comment type="block" pos:line="358" pos:column="9">/*
         * We don't try the uppercase version of HTTP_PROXY because of
         * security reasons:
         *
         * When curl is used in a webserver application
         * environment (cgi or php), this environment variable can
         * be controlled by the web server user by setting the
         * http header 'Proxy:' to some value.
         *
         * This can cause 'internal' http/ftp requests to be
         * arbitrarily redirected by any external attacker.
         */</comment>
        <if pos:line="370" pos:column="9">if<condition pos:line="370" pos:column="11">(<expr><operator pos:line="370" pos:column="12">!<pos:position pos:line="370" pos:column="13"/></operator><name pos:line="370" pos:column="13">prox<pos:position pos:line="370" pos:column="17"/></name> <operator pos:line="370" pos:column="18">&amp;&amp;<pos:position pos:line="370" pos:column="28"/></operator> <operator pos:line="370" pos:column="21">!<pos:position pos:line="370" pos:column="22"/></operator><call><name pos:line="370" pos:column="22">strequal<pos:position pos:line="370" pos:column="30"/></name><argument_list pos:line="370" pos:column="30">(<argument><expr><literal type="string" pos:line="370" pos:column="31">"http_proxy"<pos:position pos:line="370" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="370" pos:column="45">proxy_env<pos:position pos:line="370" pos:column="54"/></name></expr></argument>)<pos:position pos:line="370" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="370" pos:column="56"/></condition><then pos:line="370" pos:column="56"> <block pos:line="370" pos:column="57">{
          <comment type="block" pos:line="371" pos:column="11">/* There was no lowercase variable, try the uppercase version: */</comment>
          <for pos:line="372" pos:column="11">for<control pos:line="372" pos:column="14">(<init><expr><name pos:line="372" pos:column="15">envp<pos:position pos:line="372" pos:column="19"/></name> <operator pos:line="372" pos:column="20">=<pos:position pos:line="372" pos:column="21"/></operator> <name pos:line="372" pos:column="22">proxy_env<pos:position pos:line="372" pos:column="31"/></name></expr>;<pos:position pos:line="372" pos:column="32"/></init> <condition><expr><operator pos:line="372" pos:column="33">*<pos:position pos:line="372" pos:column="34"/></operator><name pos:line="372" pos:column="34">envp<pos:position pos:line="372" pos:column="38"/></name></expr>;<pos:position pos:line="372" pos:column="39"/></condition> <incr><expr><name pos:line="372" pos:column="40">envp<pos:position pos:line="372" pos:column="44"/></name><operator pos:line="372" pos:column="44">++<pos:position pos:line="372" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="372" pos:column="47"/></control>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="373" pos:column="13">*<pos:position pos:line="373" pos:column="14"/></operator><name pos:line="373" pos:column="14">envp<pos:position pos:line="373" pos:column="18"/></name> <operator pos:line="373" pos:column="19">=<pos:position pos:line="373" pos:column="20"/></operator> <call><name pos:line="373" pos:column="21">toupper<pos:position pos:line="373" pos:column="28"/></name><argument_list pos:line="373" pos:column="28">(<argument><expr><operator pos:line="373" pos:column="29">(<pos:position pos:line="373" pos:column="30"/></operator><name pos:line="373" pos:column="30">int<pos:position pos:line="373" pos:column="33"/></name><operator pos:line="373" pos:column="33">)<pos:position pos:line="373" pos:column="34"/></operator><operator pos:line="373" pos:column="34">*<pos:position pos:line="373" pos:column="35"/></operator><name pos:line="373" pos:column="35">envp<pos:position pos:line="373" pos:column="39"/></name></expr></argument>)<pos:position pos:line="373" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="41"/></expr_stmt></block></for>
          <expr_stmt><expr><name pos:line="374" pos:column="11">prox<pos:position pos:line="374" pos:column="15"/></name><operator pos:line="374" pos:column="15">=<pos:position pos:line="374" pos:column="16"/></operator><call><name pos:line="374" pos:column="16">curl_getenv<pos:position pos:line="374" pos:column="27"/></name><argument_list pos:line="374" pos:column="27">(<argument><expr><name pos:line="374" pos:column="28">proxy_env<pos:position pos:line="374" pos:column="37"/></name></expr></argument>)<pos:position pos:line="374" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="375" pos:column="10"/></block></then></if>

        <if pos:line="377" pos:column="9">if<condition pos:line="377" pos:column="11">(<expr><name pos:line="377" pos:column="12">prox<pos:position pos:line="377" pos:column="16"/></name> <operator pos:line="377" pos:column="17">&amp;&amp;<pos:position pos:line="377" pos:column="27"/></operator> <operator pos:line="377" pos:column="20">*<pos:position pos:line="377" pos:column="21"/></operator><name pos:line="377" pos:column="21">prox<pos:position pos:line="377" pos:column="25"/></name></expr>)<pos:position pos:line="377" pos:column="26"/></condition><then pos:line="377" pos:column="26"> <block pos:line="377" pos:column="27">{ <comment type="block" pos:line="377" pos:column="29">/* don't count "" strings */</comment>
          <expr_stmt><expr><name pos:line="378" pos:column="11">proxy<pos:position pos:line="378" pos:column="16"/></name> <operator pos:line="378" pos:column="17">=<pos:position pos:line="378" pos:column="18"/></operator> <name pos:line="378" pos:column="19">prox<pos:position pos:line="378" pos:column="23"/></name></expr>;<pos:position pos:line="378" pos:column="24"/></expr_stmt> <comment type="block" pos:line="378" pos:column="25">/* use this */</comment>
        }<pos:position pos:line="379" pos:column="10"/></block></then>
        <else pos:line="380" pos:column="9">else <block pos:line="380" pos:column="14">{
          <expr_stmt><expr><name pos:line="381" pos:column="11">proxy<pos:position pos:line="381" pos:column="16"/></name> <operator pos:line="381" pos:column="17">=<pos:position pos:line="381" pos:column="18"/></operator> <call><name pos:line="381" pos:column="19">curl_getenv<pos:position pos:line="381" pos:column="30"/></name><argument_list pos:line="381" pos:column="30">(<argument><expr><literal type="string" pos:line="381" pos:column="31">"all_proxy"<pos:position pos:line="381" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="381" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="44"/></expr_stmt> <comment type="block" pos:line="381" pos:column="45">/* default proxy to use */</comment>
          <if pos:line="382" pos:column="11">if<condition pos:line="382" pos:column="13">(<expr><operator pos:line="382" pos:column="14">!<pos:position pos:line="382" pos:column="15"/></operator><name pos:line="382" pos:column="15">proxy<pos:position pos:line="382" pos:column="20"/></name></expr>)<pos:position pos:line="382" pos:column="21"/></condition><then pos:line="382" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="383" pos:column="13">proxy<pos:position pos:line="383" pos:column="18"/></name><operator pos:line="383" pos:column="18">=<pos:position pos:line="383" pos:column="19"/></operator><call><name pos:line="383" pos:column="19">curl_getenv<pos:position pos:line="383" pos:column="30"/></name><argument_list pos:line="383" pos:column="30">(<argument><expr><literal type="string" pos:line="383" pos:column="31">"ALL_PROXY"<pos:position pos:line="383" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="383" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="44"/></expr_stmt></block></then></if>
        }<pos:position pos:line="384" pos:column="10"/></block></else></if>

        <if pos:line="386" pos:column="9">if<condition pos:line="386" pos:column="11">(<expr><name pos:line="386" pos:column="12">proxy<pos:position pos:line="386" pos:column="17"/></name> <operator pos:line="386" pos:column="18">&amp;&amp;<pos:position pos:line="386" pos:column="28"/></operator> <operator pos:line="386" pos:column="21">*<pos:position pos:line="386" pos:column="22"/></operator><name pos:line="386" pos:column="22">proxy<pos:position pos:line="386" pos:column="27"/></name></expr>)<pos:position pos:line="386" pos:column="28"/></condition><then pos:line="386" pos:column="28"> <block pos:line="386" pos:column="29">{
          <comment type="block" pos:line="387" pos:column="11">/* we have a proxy here to set */</comment>
          <decl_stmt><decl><type><name pos:line="388" pos:column="11">char<pos:position pos:line="388" pos:column="15"/></name> <modifier pos:line="388" pos:column="16">*<pos:position pos:line="388" pos:column="17"/></modifier></type><name pos:line="388" pos:column="17">ptr<pos:position pos:line="388" pos:column="20"/></name></decl>;<pos:position pos:line="388" pos:column="21"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="389" pos:column="11">char<pos:position pos:line="389" pos:column="15"/></name></type> <name><name pos:line="389" pos:column="16">proxyuser<pos:position pos:line="389" pos:column="25"/></name><index pos:line="389" pos:column="25">[<expr><name pos:line="389" pos:column="26">MAX_CURL_USER_LENGTH<pos:position pos:line="389" pos:column="46"/></name></expr>]<pos:position pos:line="389" pos:column="47"/></index></name></decl>;<pos:position pos:line="389" pos:column="48"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="390" pos:column="11">char<pos:position pos:line="390" pos:column="15"/></name></type> <name><name pos:line="390" pos:column="16">proxypasswd<pos:position pos:line="390" pos:column="27"/></name><index pos:line="390" pos:column="27">[<expr><name pos:line="390" pos:column="28">MAX_CURL_PASSWORD_LENGTH<pos:position pos:line="390" pos:column="52"/></name></expr>]<pos:position pos:line="390" pos:column="53"/></index></name></decl>;<pos:position pos:line="390" pos:column="54"/></decl_stmt>

          <decl_stmt><decl><type><name pos:line="392" pos:column="11">char<pos:position pos:line="392" pos:column="15"/></name> <modifier pos:line="392" pos:column="16">*<pos:position pos:line="392" pos:column="17"/></modifier></type><name pos:line="392" pos:column="17">fineptr<pos:position pos:line="392" pos:column="24"/></name></decl>;<pos:position pos:line="392" pos:column="25"/></decl_stmt>

          <comment type="block" pos:line="394" pos:column="11">/* skip the possible protocol piece */</comment>
          <expr_stmt><expr><name pos:line="395" pos:column="11">ptr<pos:position pos:line="395" pos:column="14"/></name><operator pos:line="395" pos:column="14">=<pos:position pos:line="395" pos:column="15"/></operator><call><name pos:line="395" pos:column="15">strstr<pos:position pos:line="395" pos:column="21"/></name><argument_list pos:line="395" pos:column="21">(<argument><expr><name pos:line="395" pos:column="22">proxy<pos:position pos:line="395" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="395" pos:column="29">"://"<pos:position pos:line="395" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="395" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="36"/></expr_stmt>
          <if pos:line="396" pos:column="11">if<condition pos:line="396" pos:column="13">(<expr><name pos:line="396" pos:column="14">ptr<pos:position pos:line="396" pos:column="17"/></name></expr>)<pos:position pos:line="396" pos:column="18"/></condition><then pos:line="396" pos:column="18">
            <block type="pseudo"><expr_stmt><expr><name pos:line="397" pos:column="13">ptr<pos:position pos:line="397" pos:column="16"/></name> <operator pos:line="397" pos:column="17">+=<pos:position pos:line="397" pos:column="19"/></operator> <literal type="number" pos:line="397" pos:column="20">3<pos:position pos:line="397" pos:column="21"/></literal></expr>;<pos:position pos:line="397" pos:column="22"/></expr_stmt></block></then>
          <else pos:line="398" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="399" pos:column="13">ptr<pos:position pos:line="399" pos:column="16"/></name> <operator pos:line="399" pos:column="17">=<pos:position pos:line="399" pos:column="18"/></operator> <name pos:line="399" pos:column="19">proxy<pos:position pos:line="399" pos:column="24"/></name></expr>;<pos:position pos:line="399" pos:column="25"/></expr_stmt></block></else></if>

          <expr_stmt><expr><name pos:line="401" pos:column="11">fineptr<pos:position pos:line="401" pos:column="18"/></name> <operator pos:line="401" pos:column="19">=<pos:position pos:line="401" pos:column="20"/></operator> <name pos:line="401" pos:column="21">ptr<pos:position pos:line="401" pos:column="24"/></name></expr>;<pos:position pos:line="401" pos:column="25"/></expr_stmt>

          <comment type="block" pos:line="403" pos:column="11">/* check for an @-letter */</comment>
          <expr_stmt><expr><name pos:line="404" pos:column="11">ptr<pos:position pos:line="404" pos:column="14"/></name> <operator pos:line="404" pos:column="15">=<pos:position pos:line="404" pos:column="16"/></operator> <call><name pos:line="404" pos:column="17">strchr<pos:position pos:line="404" pos:column="23"/></name><argument_list pos:line="404" pos:column="23">(<argument><expr><name pos:line="404" pos:column="24">ptr<pos:position pos:line="404" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="404" pos:column="29">'@'<pos:position pos:line="404" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="404" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="34"/></expr_stmt>
          <if pos:line="405" pos:column="11">if<condition pos:line="405" pos:column="13">(<expr><name pos:line="405" pos:column="14">ptr<pos:position pos:line="405" pos:column="17"/></name> <operator pos:line="405" pos:column="18">&amp;&amp;<pos:position pos:line="405" pos:column="28"/></operator> <operator pos:line="405" pos:column="21">(<pos:position pos:line="405" pos:column="22"/></operator><literal type="number" pos:line="405" pos:column="22">2<pos:position pos:line="405" pos:column="23"/></literal> <operator pos:line="405" pos:column="24">==<pos:position pos:line="405" pos:column="26"/></operator> <call><name pos:line="405" pos:column="27">sscanf<pos:position pos:line="405" pos:column="33"/></name><argument_list pos:line="405" pos:column="33">(<argument><expr><name pos:line="405" pos:column="34">fineptr<pos:position pos:line="405" pos:column="41"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="406" pos:column="34">"%"<pos:position pos:line="406" pos:column="37"/></literal> <name pos:line="406" pos:column="38">MAX_CURL_USER_LENGTH_TXT<pos:position pos:line="406" pos:column="62"/></name><literal type="string" pos:line="406" pos:column="62">"[^:]:"<pos:position pos:line="406" pos:column="69"/></literal>
                                 <literal type="string" pos:line="407" pos:column="34">"%"<pos:position pos:line="407" pos:column="37"/></literal> <name pos:line="407" pos:column="38">MAX_CURL_PASSWORD_LENGTH_TXT<pos:position pos:line="407" pos:column="66"/></name> <literal type="string" pos:line="407" pos:column="67">"[^@]"<pos:position pos:line="407" pos:column="73"/></literal></expr></argument>,
                                 <argument><expr><name pos:line="408" pos:column="34">proxyuser<pos:position pos:line="408" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="408" pos:column="45">proxypasswd<pos:position pos:line="408" pos:column="56"/></name></expr></argument>)<pos:position pos:line="408" pos:column="57"/></argument_list></call><operator pos:line="408" pos:column="57">)<pos:position pos:line="408" pos:column="58"/></operator></expr>)<pos:position pos:line="408" pos:column="59"/></condition><then pos:line="408" pos:column="59"> <block pos:line="408" pos:column="60">{
            <decl_stmt><decl><type><name pos:line="409" pos:column="13">CURLcode<pos:position pos:line="409" pos:column="21"/></name></type> <name pos:line="409" pos:column="22">res<pos:position pos:line="409" pos:column="25"/></name> <init pos:line="409" pos:column="26">= <expr><name pos:line="409" pos:column="28">CURLE_OK<pos:position pos:line="409" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="409" pos:column="37"/></decl_stmt>

            <comment type="block" pos:line="411" pos:column="13">/* found user and password, rip them out */</comment>
            <expr_stmt><expr><call><name pos:line="412" pos:column="13">Curl_safefree<pos:position pos:line="412" pos:column="26"/></name><argument_list pos:line="412" pos:column="26">(<argument><expr><name><name pos:line="412" pos:column="27">conn<pos:position pos:line="412" pos:column="31"/></name><operator pos:line="412" pos:column="31">-&gt;<pos:position pos:line="412" pos:column="36"/></operator><name pos:line="412" pos:column="33">proxyuser<pos:position pos:line="412" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="412" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="413" pos:column="13">conn<pos:position pos:line="413" pos:column="17"/></name><operator pos:line="413" pos:column="17">-&gt;<pos:position pos:line="413" pos:column="22"/></operator><name pos:line="413" pos:column="19">proxyuser<pos:position pos:line="413" pos:column="28"/></name></name> <operator pos:line="413" pos:column="29">=<pos:position pos:line="413" pos:column="30"/></operator> <call><name pos:line="413" pos:column="31">strdup<pos:position pos:line="413" pos:column="37"/></name><argument_list pos:line="413" pos:column="37">(<argument><expr><name pos:line="413" pos:column="38">proxyuser<pos:position pos:line="413" pos:column="47"/></name></expr></argument>)<pos:position pos:line="413" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="49"/></expr_stmt>

            <if pos:line="415" pos:column="13">if<condition pos:line="415" pos:column="15">(<expr><operator pos:line="415" pos:column="16">!<pos:position pos:line="415" pos:column="17"/></operator><name><name pos:line="415" pos:column="17">conn<pos:position pos:line="415" pos:column="21"/></name><operator pos:line="415" pos:column="21">-&gt;<pos:position pos:line="415" pos:column="26"/></operator><name pos:line="415" pos:column="23">proxyuser<pos:position pos:line="415" pos:column="32"/></name></name></expr>)<pos:position pos:line="415" pos:column="33"/></condition><then pos:line="415" pos:column="33">
              <block type="pseudo"><expr_stmt><expr><name pos:line="416" pos:column="15">res<pos:position pos:line="416" pos:column="18"/></name> <operator pos:line="416" pos:column="19">=<pos:position pos:line="416" pos:column="20"/></operator> <name pos:line="416" pos:column="21">CURLE_OUT_OF_MEMORY<pos:position pos:line="416" pos:column="40"/></name></expr>;<pos:position pos:line="416" pos:column="41"/></expr_stmt></block></then>
            <else pos:line="417" pos:column="13">else <block pos:line="417" pos:column="18">{
              <expr_stmt><expr><call><name pos:line="418" pos:column="15">Curl_safefree<pos:position pos:line="418" pos:column="28"/></name><argument_list pos:line="418" pos:column="28">(<argument><expr><name><name pos:line="418" pos:column="29">conn<pos:position pos:line="418" pos:column="33"/></name><operator pos:line="418" pos:column="33">-&gt;<pos:position pos:line="418" pos:column="38"/></operator><name pos:line="418" pos:column="35">proxypasswd<pos:position pos:line="418" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="418" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="48"/></expr_stmt>
              <expr_stmt><expr><name><name pos:line="419" pos:column="15">conn<pos:position pos:line="419" pos:column="19"/></name><operator pos:line="419" pos:column="19">-&gt;<pos:position pos:line="419" pos:column="24"/></operator><name pos:line="419" pos:column="21">proxypasswd<pos:position pos:line="419" pos:column="32"/></name></name> <operator pos:line="419" pos:column="33">=<pos:position pos:line="419" pos:column="34"/></operator> <call><name pos:line="419" pos:column="35">strdup<pos:position pos:line="419" pos:column="41"/></name><argument_list pos:line="419" pos:column="41">(<argument><expr><name pos:line="419" pos:column="42">proxypasswd<pos:position pos:line="419" pos:column="53"/></name></expr></argument>)<pos:position pos:line="419" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="55"/></expr_stmt>

              <if pos:line="421" pos:column="15">if<condition pos:line="421" pos:column="17">(<expr><operator pos:line="421" pos:column="18">!<pos:position pos:line="421" pos:column="19"/></operator><name><name pos:line="421" pos:column="19">conn<pos:position pos:line="421" pos:column="23"/></name><operator pos:line="421" pos:column="23">-&gt;<pos:position pos:line="421" pos:column="28"/></operator><name pos:line="421" pos:column="25">proxypasswd<pos:position pos:line="421" pos:column="36"/></name></name></expr>)<pos:position pos:line="421" pos:column="37"/></condition><then pos:line="421" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="422" pos:column="17">res<pos:position pos:line="422" pos:column="20"/></name> <operator pos:line="422" pos:column="21">=<pos:position pos:line="422" pos:column="22"/></operator> <name pos:line="422" pos:column="23">CURLE_OUT_OF_MEMORY<pos:position pos:line="422" pos:column="42"/></name></expr>;<pos:position pos:line="422" pos:column="43"/></expr_stmt></block></then></if>
            }<pos:position pos:line="423" pos:column="14"/></block></else></if>

            <if pos:line="425" pos:column="13">if<condition pos:line="425" pos:column="15">(<expr><name pos:line="425" pos:column="16">CURLE_OK<pos:position pos:line="425" pos:column="24"/></name> <operator pos:line="425" pos:column="25">==<pos:position pos:line="425" pos:column="27"/></operator> <name pos:line="425" pos:column="28">res<pos:position pos:line="425" pos:column="31"/></name></expr>)<pos:position pos:line="425" pos:column="32"/></condition><then pos:line="425" pos:column="32"> <block pos:line="425" pos:column="33">{
              <expr_stmt><expr><name><name pos:line="426" pos:column="15">conn<pos:position pos:line="426" pos:column="19"/></name><operator pos:line="426" pos:column="19">-&gt;<pos:position pos:line="426" pos:column="24"/></operator><name pos:line="426" pos:column="21">bits<pos:position pos:line="426" pos:column="25"/></name><operator pos:line="426" pos:column="25">.<pos:position pos:line="426" pos:column="26"/></operator><name pos:line="426" pos:column="26">proxy_user_passwd<pos:position pos:line="426" pos:column="43"/></name></name> <operator pos:line="426" pos:column="44">=<pos:position pos:line="426" pos:column="45"/></operator> <name pos:line="426" pos:column="46">TRUE<pos:position pos:line="426" pos:column="50"/></name></expr>;<pos:position pos:line="426" pos:column="51"/></expr_stmt> <comment type="block" pos:line="426" pos:column="52">/* enable it */</comment>
              <expr_stmt><expr><name pos:line="427" pos:column="15">ptr<pos:position pos:line="427" pos:column="18"/></name> <operator pos:line="427" pos:column="19">=<pos:position pos:line="427" pos:column="20"/></operator> <call><name pos:line="427" pos:column="21">strdup<pos:position pos:line="427" pos:column="27"/></name><argument_list pos:line="427" pos:column="27">(<argument><expr><name pos:line="427" pos:column="28">ptr<pos:position pos:line="427" pos:column="31"/></name><operator pos:line="427" pos:column="31">+<pos:position pos:line="427" pos:column="32"/></operator><literal type="number" pos:line="427" pos:column="32">1<pos:position pos:line="427" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="427" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="35"/></expr_stmt> <comment type="block" pos:line="427" pos:column="36">/* the right side of the @-letter */</comment>

              <if pos:line="429" pos:column="15">if<condition pos:line="429" pos:column="17">(<expr><name pos:line="429" pos:column="18">ptr<pos:position pos:line="429" pos:column="21"/></name></expr>)<pos:position pos:line="429" pos:column="22"/></condition><then pos:line="429" pos:column="22"> <block pos:line="429" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="430" pos:column="17">free<pos:position pos:line="430" pos:column="21"/></name><argument_list pos:line="430" pos:column="21">(<argument><expr><name pos:line="430" pos:column="22">proxy<pos:position pos:line="430" pos:column="27"/></name></expr></argument>)<pos:position pos:line="430" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="29"/></expr_stmt> <comment type="block" pos:line="430" pos:column="30">/* free the former proxy string */</comment>
                <expr_stmt><expr><name pos:line="431" pos:column="17">proxy<pos:position pos:line="431" pos:column="22"/></name> <operator pos:line="431" pos:column="23">=<pos:position pos:line="431" pos:column="24"/></operator> <name pos:line="431" pos:column="25">ptr<pos:position pos:line="431" pos:column="28"/></name></expr>;<pos:position pos:line="431" pos:column="29"/></expr_stmt> <comment type="block" pos:line="431" pos:column="30">/* now use this instead */</comment>
              }<pos:position pos:line="432" pos:column="16"/></block></then>
              <else pos:line="433" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="434" pos:column="17">res<pos:position pos:line="434" pos:column="20"/></name> <operator pos:line="434" pos:column="21">=<pos:position pos:line="434" pos:column="22"/></operator> <name pos:line="434" pos:column="23">CURLE_OUT_OF_MEMORY<pos:position pos:line="434" pos:column="42"/></name></expr>;<pos:position pos:line="434" pos:column="43"/></expr_stmt></block></else></if>
            }<pos:position pos:line="435" pos:column="14"/></block></then></if>

            <if pos:line="437" pos:column="13">if<condition pos:line="437" pos:column="15">(<expr><name pos:line="437" pos:column="16">res<pos:position pos:line="437" pos:column="19"/></name></expr>)<pos:position pos:line="437" pos:column="20"/></condition><then pos:line="437" pos:column="20"> <block pos:line="437" pos:column="21">{
              <expr_stmt><expr><call><name pos:line="438" pos:column="15">free<pos:position pos:line="438" pos:column="19"/></name><argument_list pos:line="438" pos:column="19">(<argument><expr><name pos:line="438" pos:column="20">proxy<pos:position pos:line="438" pos:column="25"/></name></expr></argument>)<pos:position pos:line="438" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="27"/></expr_stmt> <comment type="block" pos:line="438" pos:column="28">/* free the allocated proxy string */</comment>
              <return pos:line="439" pos:column="15">return <expr><name pos:line="439" pos:column="22">res<pos:position pos:line="439" pos:column="25"/></name></expr>;<pos:position pos:line="439" pos:column="26"/></return>
            }<pos:position pos:line="440" pos:column="14"/></block></then></if>
          }<pos:position pos:line="441" pos:column="12"/></block></then></if>

          <expr_stmt><expr><name><name pos:line="443" pos:column="11">data<pos:position pos:line="443" pos:column="15"/></name><operator pos:line="443" pos:column="15">-&gt;<pos:position pos:line="443" pos:column="20"/></operator><name pos:line="443" pos:column="17">change<pos:position pos:line="443" pos:column="23"/></name><operator pos:line="443" pos:column="23">.<pos:position pos:line="443" pos:column="24"/></operator><name pos:line="443" pos:column="24">proxy<pos:position pos:line="443" pos:column="29"/></name></name> <operator pos:line="443" pos:column="30">=<pos:position pos:line="443" pos:column="31"/></operator> <name pos:line="443" pos:column="32">proxy<pos:position pos:line="443" pos:column="37"/></name></expr>;<pos:position pos:line="443" pos:column="38"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="444" pos:column="11">data<pos:position pos:line="444" pos:column="15"/></name><operator pos:line="444" pos:column="15">-&gt;<pos:position pos:line="444" pos:column="20"/></operator><name pos:line="444" pos:column="17">change<pos:position pos:line="444" pos:column="23"/></name><operator pos:line="444" pos:column="23">.<pos:position pos:line="444" pos:column="24"/></operator><name pos:line="444" pos:column="24">proxy_alloc<pos:position pos:line="444" pos:column="35"/></name></name><operator pos:line="444" pos:column="35">=<pos:position pos:line="444" pos:column="36"/></operator><name pos:line="444" pos:column="36">TRUE<pos:position pos:line="444" pos:column="40"/></name></expr>;<pos:position pos:line="444" pos:column="41"/></expr_stmt> <comment type="block" pos:line="444" pos:column="42">/* this needs to be freed later */</comment>
          <expr_stmt><expr><name><name pos:line="445" pos:column="11">conn<pos:position pos:line="445" pos:column="15"/></name><operator pos:line="445" pos:column="15">-&gt;<pos:position pos:line="445" pos:column="20"/></operator><name pos:line="445" pos:column="17">bits<pos:position pos:line="445" pos:column="21"/></name><operator pos:line="445" pos:column="21">.<pos:position pos:line="445" pos:column="22"/></operator><name pos:line="445" pos:column="22">httpproxy<pos:position pos:line="445" pos:column="31"/></name></name> <operator pos:line="445" pos:column="32">=<pos:position pos:line="445" pos:column="33"/></operator> <name pos:line="445" pos:column="34">TRUE<pos:position pos:line="445" pos:column="38"/></name></expr>;<pos:position pos:line="445" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="446" pos:column="10"/></block></then></if>
      }<pos:position pos:line="447" pos:column="8"/></block></then></if> <comment type="block" pos:line="447" pos:column="9">/* if (!nope) - it wasn't specified non-proxy */</comment>
    }<pos:position pos:line="448" pos:column="6"/></block></then></if> <comment type="block" pos:line="448" pos:column="7">/* NO_PROXY wasn't specified or '*' */</comment>
    <if pos:line="449" pos:column="5">if<condition pos:line="449" pos:column="7">(<expr><name pos:line="449" pos:column="8">no_proxy<pos:position pos:line="449" pos:column="16"/></name></expr>)<pos:position pos:line="449" pos:column="17"/></condition><then pos:line="449" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="450" pos:column="7">free<pos:position pos:line="450" pos:column="11"/></name><argument_list pos:line="450" pos:column="11">(<argument><expr><name pos:line="450" pos:column="12">no_proxy<pos:position pos:line="450" pos:column="20"/></name></expr></argument>)<pos:position pos:line="450" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="22"/></expr_stmt></block></then></if>
  }<pos:position pos:line="451" pos:column="4"/></block></then></if> <comment type="block" pos:line="451" pos:column="5">/* if not using proxy */</comment>
<cpp:endif pos:line="452" pos:column="1">#<cpp:directive pos:line="452" pos:column="2">endif<pos:position pos:line="452" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="452" pos:column="8">/* CURL_DISABLE_HTTP */</comment>

  <comment type="block" format="doxygen" pos:line="454" pos:column="3">/*************************************************************
   * No protocol part in URL was used, add it!
   *************************************************************/</comment>
  <if pos:line="457" pos:column="3">if<condition pos:line="457" pos:column="5">(<expr><name><name pos:line="457" pos:column="6">conn<pos:position pos:line="457" pos:column="10"/></name><operator pos:line="457" pos:column="10">-&gt;<pos:position pos:line="457" pos:column="15"/></operator><name pos:line="457" pos:column="12">protocol<pos:position pos:line="457" pos:column="20"/></name></name><operator pos:line="457" pos:column="20">&amp;<pos:position pos:line="457" pos:column="25"/></operator><name pos:line="457" pos:column="21">PROT_MISSING<pos:position pos:line="457" pos:column="33"/></name></expr>)<pos:position pos:line="457" pos:column="34"/></condition><then pos:line="457" pos:column="34"> <block pos:line="457" pos:column="35">{
    <comment type="block" pos:line="458" pos:column="5">/* We're guessing prefixes here and if we're told to use a proxy or if
       we're gonna follow a Location: later or... then we need the protocol
       part added so that we have a valid URL. */</comment>
    <decl_stmt><decl><type><name pos:line="461" pos:column="5">char<pos:position pos:line="461" pos:column="9"/></name> <modifier pos:line="461" pos:column="10">*<pos:position pos:line="461" pos:column="11"/></modifier></type><name pos:line="461" pos:column="11">reurl<pos:position pos:line="461" pos:column="16"/></name></decl>;<pos:position pos:line="461" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="463" pos:column="5">reurl<pos:position pos:line="463" pos:column="10"/></name> <operator pos:line="463" pos:column="11">=<pos:position pos:line="463" pos:column="12"/></operator> <call><name pos:line="463" pos:column="13">aprintf<pos:position pos:line="463" pos:column="20"/></name><argument_list pos:line="463" pos:column="20">(<argument><expr><literal type="string" pos:line="463" pos:column="21">"%s://%s"<pos:position pos:line="463" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="463" pos:column="32">conn<pos:position pos:line="463" pos:column="36"/></name><operator pos:line="463" pos:column="36">-&gt;<pos:position pos:line="463" pos:column="41"/></operator><name pos:line="463" pos:column="38">protostr<pos:position pos:line="463" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="463" pos:column="48">data<pos:position pos:line="463" pos:column="52"/></name><operator pos:line="463" pos:column="52">-&gt;<pos:position pos:line="463" pos:column="57"/></operator><name pos:line="463" pos:column="54">change<pos:position pos:line="463" pos:column="60"/></name><operator pos:line="463" pos:column="60">.<pos:position pos:line="463" pos:column="61"/></operator><name pos:line="463" pos:column="61">url<pos:position pos:line="463" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="463" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="66"/></expr_stmt>

    <if pos:line="465" pos:column="5">if<condition pos:line="465" pos:column="7">(<expr><operator pos:line="465" pos:column="8">!<pos:position pos:line="465" pos:column="9"/></operator><name pos:line="465" pos:column="9">reurl<pos:position pos:line="465" pos:column="14"/></name></expr>)<pos:position pos:line="465" pos:column="15"/></condition><then pos:line="465" pos:column="15">
      <block type="pseudo"><return pos:line="466" pos:column="7">return <expr><name pos:line="466" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="466" pos:column="33"/></name></expr>;<pos:position pos:line="466" pos:column="34"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="468" pos:column="5">data<pos:position pos:line="468" pos:column="9"/></name><operator pos:line="468" pos:column="9">-&gt;<pos:position pos:line="468" pos:column="14"/></operator><name pos:line="468" pos:column="11">change<pos:position pos:line="468" pos:column="17"/></name><operator pos:line="468" pos:column="17">.<pos:position pos:line="468" pos:column="18"/></operator><name pos:line="468" pos:column="18">url<pos:position pos:line="468" pos:column="21"/></name></name> <operator pos:line="468" pos:column="22">=<pos:position pos:line="468" pos:column="23"/></operator> <name pos:line="468" pos:column="24">reurl<pos:position pos:line="468" pos:column="29"/></name></expr>;<pos:position pos:line="468" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="469" pos:column="5">data<pos:position pos:line="469" pos:column="9"/></name><operator pos:line="469" pos:column="9">-&gt;<pos:position pos:line="469" pos:column="14"/></operator><name pos:line="469" pos:column="11">change<pos:position pos:line="469" pos:column="17"/></name><operator pos:line="469" pos:column="17">.<pos:position pos:line="469" pos:column="18"/></operator><name pos:line="469" pos:column="18">url_alloc<pos:position pos:line="469" pos:column="27"/></name></name> <operator pos:line="469" pos:column="28">=<pos:position pos:line="469" pos:column="29"/></operator> <name pos:line="469" pos:column="30">TRUE<pos:position pos:line="469" pos:column="34"/></name></expr>;<pos:position pos:line="469" pos:column="35"/></expr_stmt> <comment type="block" pos:line="469" pos:column="36">/* free this later */</comment>
    <expr_stmt><expr><name><name pos:line="470" pos:column="5">conn<pos:position pos:line="470" pos:column="9"/></name><operator pos:line="470" pos:column="9">-&gt;<pos:position pos:line="470" pos:column="14"/></operator><name pos:line="470" pos:column="11">protocol<pos:position pos:line="470" pos:column="19"/></name></name> <operator pos:line="470" pos:column="20">&amp;=<pos:position pos:line="470" pos:column="26"/></operator> <operator pos:line="470" pos:column="23">~<pos:position pos:line="470" pos:column="24"/></operator><name pos:line="470" pos:column="24">PROT_MISSING<pos:position pos:line="470" pos:column="36"/></name></expr>;<pos:position pos:line="470" pos:column="37"/></expr_stmt> <comment type="block" pos:line="470" pos:column="38">/* switch that one off again */</comment>
  }<pos:position pos:line="471" pos:column="4"/></block></then></if>

<cpp:ifndef pos:line="473" pos:column="1">#<cpp:directive pos:line="473" pos:column="2">ifndef<pos:position pos:line="473" pos:column="8"/></cpp:directive> <name pos:line="473" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="473" pos:column="26"/></name></cpp:ifndef>
  <comment type="block" format="doxygen" pos:line="474" pos:column="3">/************************************************************
   * RESUME on a HTTP page is a tricky business. First, let's just check that
   * 'range' isn't used, then set the range parameter and leave the resume as
   * it is to inform about this situation for later use. We will then
   * "attempt" to resume, and if we're talking to a HTTP/1.1 (or later)
   * server, we will get the document resumed. If we talk to a HTTP/1.0
   * server, we just fail since we can't rewind the file writing from within
   * this function.
   ***********************************************************/</comment>
  <if pos:line="483" pos:column="3">if<condition pos:line="483" pos:column="5">(<expr><name><name pos:line="483" pos:column="6">conn<pos:position pos:line="483" pos:column="10"/></name><operator pos:line="483" pos:column="10">-&gt;<pos:position pos:line="483" pos:column="15"/></operator><name pos:line="483" pos:column="12">resume_from<pos:position pos:line="483" pos:column="23"/></name></name></expr>)<pos:position pos:line="483" pos:column="24"/></condition><then pos:line="483" pos:column="24"> <block pos:line="483" pos:column="25">{
    <if pos:line="484" pos:column="5">if<condition pos:line="484" pos:column="7">(<expr><operator pos:line="484" pos:column="8">!<pos:position pos:line="484" pos:column="9"/></operator><name><name pos:line="484" pos:column="9">conn<pos:position pos:line="484" pos:column="13"/></name><operator pos:line="484" pos:column="13">-&gt;<pos:position pos:line="484" pos:column="18"/></operator><name pos:line="484" pos:column="15">bits<pos:position pos:line="484" pos:column="19"/></name><operator pos:line="484" pos:column="19">.<pos:position pos:line="484" pos:column="20"/></operator><name pos:line="484" pos:column="20">use_range<pos:position pos:line="484" pos:column="29"/></name></name></expr>)<pos:position pos:line="484" pos:column="30"/></condition><then pos:line="484" pos:column="30"> <block pos:line="484" pos:column="31">{
      <comment type="block" pos:line="485" pos:column="7">/* if it already was in use, we just skip this */</comment>
      <expr_stmt><expr><name><name pos:line="486" pos:column="7">conn<pos:position pos:line="486" pos:column="11"/></name><operator pos:line="486" pos:column="11">-&gt;<pos:position pos:line="486" pos:column="16"/></operator><name pos:line="486" pos:column="13">range<pos:position pos:line="486" pos:column="18"/></name></name> <operator pos:line="486" pos:column="19">=<pos:position pos:line="486" pos:column="20"/></operator> <call><name pos:line="486" pos:column="21">aprintf<pos:position pos:line="486" pos:column="28"/></name><argument_list pos:line="486" pos:column="28">(<argument><expr><literal type="string" pos:line="486" pos:column="29">"%"<pos:position pos:line="486" pos:column="32"/></literal> <name pos:line="486" pos:column="33">FORMAT_OFF_T<pos:position pos:line="486" pos:column="45"/></name> <literal type="string" pos:line="486" pos:column="46">"-"<pos:position pos:line="486" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="486" pos:column="51">conn<pos:position pos:line="486" pos:column="55"/></name><operator pos:line="486" pos:column="55">-&gt;<pos:position pos:line="486" pos:column="60"/></operator><name pos:line="486" pos:column="57">resume_from<pos:position pos:line="486" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="486" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="70"/></expr_stmt>
      <if pos:line="487" pos:column="7">if<condition pos:line="487" pos:column="9">(<expr><operator pos:line="487" pos:column="10">!<pos:position pos:line="487" pos:column="11"/></operator><name><name pos:line="487" pos:column="11">conn<pos:position pos:line="487" pos:column="15"/></name><operator pos:line="487" pos:column="15">-&gt;<pos:position pos:line="487" pos:column="20"/></operator><name pos:line="487" pos:column="17">range<pos:position pos:line="487" pos:column="22"/></name></name></expr>)<pos:position pos:line="487" pos:column="23"/></condition><then pos:line="487" pos:column="23">
        <block type="pseudo"><return pos:line="488" pos:column="9">return <expr><name pos:line="488" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="488" pos:column="35"/></name></expr>;<pos:position pos:line="488" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="489" pos:column="7">conn<pos:position pos:line="489" pos:column="11"/></name><operator pos:line="489" pos:column="11">-&gt;<pos:position pos:line="489" pos:column="16"/></operator><name pos:line="489" pos:column="13">bits<pos:position pos:line="489" pos:column="17"/></name><operator pos:line="489" pos:column="17">.<pos:position pos:line="489" pos:column="18"/></operator><name pos:line="489" pos:column="18">rangestringalloc<pos:position pos:line="489" pos:column="34"/></name></name> <operator pos:line="489" pos:column="35">=<pos:position pos:line="489" pos:column="36"/></operator> <name pos:line="489" pos:column="37">TRUE<pos:position pos:line="489" pos:column="41"/></name></expr>;<pos:position pos:line="489" pos:column="42"/></expr_stmt> <comment type="block" pos:line="489" pos:column="43">/* mark as allocated */</comment>
      <expr_stmt><expr><name><name pos:line="490" pos:column="7">conn<pos:position pos:line="490" pos:column="11"/></name><operator pos:line="490" pos:column="11">-&gt;<pos:position pos:line="490" pos:column="16"/></operator><name pos:line="490" pos:column="13">bits<pos:position pos:line="490" pos:column="17"/></name><operator pos:line="490" pos:column="17">.<pos:position pos:line="490" pos:column="18"/></operator><name pos:line="490" pos:column="18">use_range<pos:position pos:line="490" pos:column="27"/></name></name> <operator pos:line="490" pos:column="28">=<pos:position pos:line="490" pos:column="29"/></operator> <literal type="number" pos:line="490" pos:column="30">1<pos:position pos:line="490" pos:column="31"/></literal></expr>;<pos:position pos:line="490" pos:column="32"/></expr_stmt> <comment type="block" pos:line="490" pos:column="33">/* switch on range usage */</comment>
    }<pos:position pos:line="491" pos:column="6"/></block></then></if>
  }<pos:position pos:line="492" pos:column="4"/></block></then></if>
<cpp:endif pos:line="493" pos:column="1">#<cpp:directive pos:line="493" pos:column="2">endif<pos:position pos:line="493" pos:column="7"/></cpp:directive></cpp:endif>
  <comment type="block" format="doxygen" pos:line="494" pos:column="3">/*************************************************************
   * Setup internals depending on protocol
   *************************************************************/</comment>

  <if pos:line="498" pos:column="3">if <condition pos:line="498" pos:column="6">(<expr><call><name pos:line="498" pos:column="7">strequal<pos:position pos:line="498" pos:column="15"/></name><argument_list pos:line="498" pos:column="15">(<argument><expr><name><name pos:line="498" pos:column="16">conn<pos:position pos:line="498" pos:column="20"/></name><operator pos:line="498" pos:column="20">-&gt;<pos:position pos:line="498" pos:column="25"/></operator><name pos:line="498" pos:column="22">protostr<pos:position pos:line="498" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="498" pos:column="32">"HTTP"<pos:position pos:line="498" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="498" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="498" pos:column="40"/></condition><then pos:line="498" pos:column="40"> <block pos:line="498" pos:column="41">{
<cpp:ifndef pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">ifndef<pos:position pos:line="499" pos:column="8"/></cpp:directive> <name pos:line="499" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="499" pos:column="26"/></name></cpp:ifndef>
    <expr_stmt><expr><name><name pos:line="500" pos:column="5">conn<pos:position pos:line="500" pos:column="9"/></name><operator pos:line="500" pos:column="9">-&gt;<pos:position pos:line="500" pos:column="14"/></operator><name pos:line="500" pos:column="11">port<pos:position pos:line="500" pos:column="15"/></name></name> <operator pos:line="500" pos:column="16">=<pos:position pos:line="500" pos:column="17"/></operator> <name pos:line="500" pos:column="18">PORT_HTTP<pos:position pos:line="500" pos:column="27"/></name></expr>;<pos:position pos:line="500" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="501" pos:column="5">conn<pos:position pos:line="501" pos:column="9"/></name><operator pos:line="501" pos:column="9">-&gt;<pos:position pos:line="501" pos:column="14"/></operator><name pos:line="501" pos:column="11">remote_port<pos:position pos:line="501" pos:column="22"/></name></name> <operator pos:line="501" pos:column="23">=<pos:position pos:line="501" pos:column="24"/></operator> <name pos:line="501" pos:column="25">PORT_HTTP<pos:position pos:line="501" pos:column="34"/></name></expr>;<pos:position pos:line="501" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="502" pos:column="5">conn<pos:position pos:line="502" pos:column="9"/></name><operator pos:line="502" pos:column="9">-&gt;<pos:position pos:line="502" pos:column="14"/></operator><name pos:line="502" pos:column="11">protocol<pos:position pos:line="502" pos:column="19"/></name></name> <operator pos:line="502" pos:column="20">|=<pos:position pos:line="502" pos:column="22"/></operator> <name pos:line="502" pos:column="23">PROT_HTTP<pos:position pos:line="502" pos:column="32"/></name></expr>;<pos:position pos:line="502" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="503" pos:column="5">conn<pos:position pos:line="503" pos:column="9"/></name><operator pos:line="503" pos:column="9">-&gt;<pos:position pos:line="503" pos:column="14"/></operator><name pos:line="503" pos:column="11">curl_do<pos:position pos:line="503" pos:column="18"/></name></name> <operator pos:line="503" pos:column="19">=<pos:position pos:line="503" pos:column="20"/></operator> <name pos:line="503" pos:column="21">Curl_http<pos:position pos:line="503" pos:column="30"/></name></expr>;<pos:position pos:line="503" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="504" pos:column="5">conn<pos:position pos:line="504" pos:column="9"/></name><operator pos:line="504" pos:column="9">-&gt;<pos:position pos:line="504" pos:column="14"/></operator><name pos:line="504" pos:column="11">curl_do_more<pos:position pos:line="504" pos:column="23"/></name></name> <operator pos:line="504" pos:column="24">=<pos:position pos:line="504" pos:column="25"/></operator> <name pos:line="504" pos:column="26">NULL<pos:position pos:line="504" pos:column="30"/></name></expr>;<pos:position pos:line="504" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="505" pos:column="5">conn<pos:position pos:line="505" pos:column="9"/></name><operator pos:line="505" pos:column="9">-&gt;<pos:position pos:line="505" pos:column="14"/></operator><name pos:line="505" pos:column="11">curl_done<pos:position pos:line="505" pos:column="20"/></name></name> <operator pos:line="505" pos:column="21">=<pos:position pos:line="505" pos:column="22"/></operator> <name pos:line="505" pos:column="23">Curl_http_done<pos:position pos:line="505" pos:column="37"/></name></expr>;<pos:position pos:line="505" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="506" pos:column="5">conn<pos:position pos:line="506" pos:column="9"/></name><operator pos:line="506" pos:column="9">-&gt;<pos:position pos:line="506" pos:column="14"/></operator><name pos:line="506" pos:column="11">curl_connect<pos:position pos:line="506" pos:column="23"/></name></name> <operator pos:line="506" pos:column="24">=<pos:position pos:line="506" pos:column="25"/></operator> <name pos:line="506" pos:column="26">Curl_http_connect<pos:position pos:line="506" pos:column="43"/></name></expr>;<pos:position pos:line="506" pos:column="44"/></expr_stmt>
<cpp:else pos:line="507" pos:column="1">#<cpp:directive pos:line="507" pos:column="2">else<pos:position pos:line="507" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="508" pos:column="5">failf<pos:position pos:line="508" pos:column="10"/></name><argument_list pos:line="508" pos:column="10">(<argument><expr><name pos:line="508" pos:column="11">data<pos:position pos:line="508" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="17">LIBCURL_NAME<pos:position pos:line="508" pos:column="29"/></name>
          <literal type="string" pos:line="509" pos:column="11">" was built with HTTP disabled, http: not supported!"<pos:position pos:line="509" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="509" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="509" pos:column="66"/></expr_stmt>
    <return pos:line="510" pos:column="5">return <expr><name pos:line="510" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="510" pos:column="38"/></name></expr>;<pos:position pos:line="510" pos:column="39"/></return>
<cpp:endif pos:line="511" pos:column="1">#<cpp:directive pos:line="511" pos:column="2">endif<pos:position pos:line="511" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="512" pos:column="4"/></block></then>
  <elseif pos:line="513" pos:column="3">else <if pos:line="513" pos:column="8">if <condition pos:line="513" pos:column="11">(<expr><call><name pos:line="513" pos:column="12">strequal<pos:position pos:line="513" pos:column="20"/></name><argument_list pos:line="513" pos:column="20">(<argument><expr><name><name pos:line="513" pos:column="21">conn<pos:position pos:line="513" pos:column="25"/></name><operator pos:line="513" pos:column="25">-&gt;<pos:position pos:line="513" pos:column="30"/></operator><name pos:line="513" pos:column="27">protostr<pos:position pos:line="513" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="513" pos:column="37">"HTTPS"<pos:position pos:line="513" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="513" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="513" pos:column="46"/></condition><then pos:line="513" pos:column="46"> <block pos:line="513" pos:column="47">{
<cpp:if pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">if<pos:position pos:line="514" pos:column="4"/></cpp:directive> <expr><call><name pos:line="514" pos:column="5">defined<pos:position pos:line="514" pos:column="12"/></name><argument_list pos:line="514" pos:column="12">(<argument><expr><name pos:line="514" pos:column="13">USE_SSL<pos:position pos:line="514" pos:column="20"/></name></expr></argument>)<pos:position pos:line="514" pos:column="21"/></argument_list></call> <operator pos:line="514" pos:column="22">&amp;&amp;<pos:position pos:line="514" pos:column="32"/></operator> <operator pos:line="514" pos:column="25">!<pos:position pos:line="514" pos:column="26"/></operator><call><name pos:line="514" pos:column="26">defined<pos:position pos:line="514" pos:column="33"/></name><argument_list pos:line="514" pos:column="33">(<argument><expr><name pos:line="514" pos:column="34">CURL_DISABLE_HTTP<pos:position pos:line="514" pos:column="51"/></name></expr></argument>)<pos:position pos:line="514" pos:column="52"/></argument_list></call></expr></cpp:if>

    <expr_stmt><expr><name><name pos:line="516" pos:column="5">conn<pos:position pos:line="516" pos:column="9"/></name><operator pos:line="516" pos:column="9">-&gt;<pos:position pos:line="516" pos:column="14"/></operator><name pos:line="516" pos:column="11">port<pos:position pos:line="516" pos:column="15"/></name></name> <operator pos:line="516" pos:column="16">=<pos:position pos:line="516" pos:column="17"/></operator> <name pos:line="516" pos:column="18">PORT_HTTPS<pos:position pos:line="516" pos:column="28"/></name></expr>;<pos:position pos:line="516" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="517" pos:column="5">conn<pos:position pos:line="517" pos:column="9"/></name><operator pos:line="517" pos:column="9">-&gt;<pos:position pos:line="517" pos:column="14"/></operator><name pos:line="517" pos:column="11">remote_port<pos:position pos:line="517" pos:column="22"/></name></name> <operator pos:line="517" pos:column="23">=<pos:position pos:line="517" pos:column="24"/></operator> <name pos:line="517" pos:column="25">PORT_HTTPS<pos:position pos:line="517" pos:column="35"/></name></expr>;<pos:position pos:line="517" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="518" pos:column="5">conn<pos:position pos:line="518" pos:column="9"/></name><operator pos:line="518" pos:column="9">-&gt;<pos:position pos:line="518" pos:column="14"/></operator><name pos:line="518" pos:column="11">protocol<pos:position pos:line="518" pos:column="19"/></name></name> <operator pos:line="518" pos:column="20">|=<pos:position pos:line="518" pos:column="22"/></operator> <name pos:line="518" pos:column="23">PROT_HTTP<pos:position pos:line="518" pos:column="32"/></name><operator pos:line="518" pos:column="32">|<pos:position pos:line="518" pos:column="33"/></operator><name pos:line="518" pos:column="33">PROT_HTTPS<pos:position pos:line="518" pos:column="43"/></name><operator pos:line="518" pos:column="43">|<pos:position pos:line="518" pos:column="44"/></operator><name pos:line="518" pos:column="44">PROT_SSL<pos:position pos:line="518" pos:column="52"/></name></expr>;<pos:position pos:line="518" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="520" pos:column="5">conn<pos:position pos:line="520" pos:column="9"/></name><operator pos:line="520" pos:column="9">-&gt;<pos:position pos:line="520" pos:column="14"/></operator><name pos:line="520" pos:column="11">curl_do<pos:position pos:line="520" pos:column="18"/></name></name> <operator pos:line="520" pos:column="19">=<pos:position pos:line="520" pos:column="20"/></operator> <name pos:line="520" pos:column="21">Curl_http<pos:position pos:line="520" pos:column="30"/></name></expr>;<pos:position pos:line="520" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="521" pos:column="5">conn<pos:position pos:line="521" pos:column="9"/></name><operator pos:line="521" pos:column="9">-&gt;<pos:position pos:line="521" pos:column="14"/></operator><name pos:line="521" pos:column="11">curl_do_more<pos:position pos:line="521" pos:column="23"/></name></name> <operator pos:line="521" pos:column="24">=<pos:position pos:line="521" pos:column="25"/></operator> <name pos:line="521" pos:column="26">NULL<pos:position pos:line="521" pos:column="30"/></name></expr>;<pos:position pos:line="521" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="522" pos:column="5">conn<pos:position pos:line="522" pos:column="9"/></name><operator pos:line="522" pos:column="9">-&gt;<pos:position pos:line="522" pos:column="14"/></operator><name pos:line="522" pos:column="11">curl_done<pos:position pos:line="522" pos:column="20"/></name></name> <operator pos:line="522" pos:column="21">=<pos:position pos:line="522" pos:column="22"/></operator> <name pos:line="522" pos:column="23">Curl_http_done<pos:position pos:line="522" pos:column="37"/></name></expr>;<pos:position pos:line="522" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="523" pos:column="5">conn<pos:position pos:line="523" pos:column="9"/></name><operator pos:line="523" pos:column="9">-&gt;<pos:position pos:line="523" pos:column="14"/></operator><name pos:line="523" pos:column="11">curl_connect<pos:position pos:line="523" pos:column="23"/></name></name> <operator pos:line="523" pos:column="24">=<pos:position pos:line="523" pos:column="25"/></operator> <name pos:line="523" pos:column="26">Curl_http_connect<pos:position pos:line="523" pos:column="43"/></name></expr>;<pos:position pos:line="523" pos:column="44"/></expr_stmt>

<cpp:else pos:line="525" pos:column="1">#<cpp:directive pos:line="525" pos:column="2">else<pos:position pos:line="525" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="525" pos:column="7">/* USE_SS */</comment>
    <expr_stmt><expr><call><name pos:line="526" pos:column="5">failf<pos:position pos:line="526" pos:column="10"/></name><argument_list pos:line="526" pos:column="10">(<argument><expr><name pos:line="526" pos:column="11">data<pos:position pos:line="526" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="526" pos:column="17">LIBCURL_NAME<pos:position pos:line="526" pos:column="29"/></name>
          <literal type="string" pos:line="527" pos:column="11">" was built with SSL disabled, https: not supported!"<pos:position pos:line="527" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="527" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="527" pos:column="66"/></expr_stmt>
    <return pos:line="528" pos:column="5">return <expr><name pos:line="528" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="528" pos:column="38"/></name></expr>;<pos:position pos:line="528" pos:column="39"/></return>
<cpp:endif pos:line="529" pos:column="1">#<cpp:directive pos:line="529" pos:column="2">endif<pos:position pos:line="529" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="529" pos:column="8">/* !USE_SSL */</comment>
  }<pos:position pos:line="530" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="531" pos:column="3">else <if pos:line="531" pos:column="8">if <condition pos:line="531" pos:column="11">(<expr><call><name pos:line="531" pos:column="12">strequal<pos:position pos:line="531" pos:column="20"/></name><argument_list pos:line="531" pos:column="20">(<argument><expr><name><name pos:line="531" pos:column="21">conn<pos:position pos:line="531" pos:column="25"/></name><operator pos:line="531" pos:column="25">-&gt;<pos:position pos:line="531" pos:column="30"/></operator><name pos:line="531" pos:column="27">protostr<pos:position pos:line="531" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="531" pos:column="37">"GOPHER"<pos:position pos:line="531" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="531" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="531" pos:column="47"/></condition><then pos:line="531" pos:column="47"> <block pos:line="531" pos:column="48">{
<cpp:ifndef pos:line="532" pos:column="1">#<cpp:directive pos:line="532" pos:column="2">ifndef<pos:position pos:line="532" pos:column="8"/></cpp:directive> <name pos:line="532" pos:column="9">CURL_DISABLE_GOPHER<pos:position pos:line="532" pos:column="28"/></name></cpp:ifndef>
    <expr_stmt><expr><name><name pos:line="533" pos:column="5">conn<pos:position pos:line="533" pos:column="9"/></name><operator pos:line="533" pos:column="9">-&gt;<pos:position pos:line="533" pos:column="14"/></operator><name pos:line="533" pos:column="11">port<pos:position pos:line="533" pos:column="15"/></name></name> <operator pos:line="533" pos:column="16">=<pos:position pos:line="533" pos:column="17"/></operator> <name pos:line="533" pos:column="18">PORT_GOPHER<pos:position pos:line="533" pos:column="29"/></name></expr>;<pos:position pos:line="533" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="534" pos:column="5">conn<pos:position pos:line="534" pos:column="9"/></name><operator pos:line="534" pos:column="9">-&gt;<pos:position pos:line="534" pos:column="14"/></operator><name pos:line="534" pos:column="11">remote_port<pos:position pos:line="534" pos:column="22"/></name></name> <operator pos:line="534" pos:column="23">=<pos:position pos:line="534" pos:column="24"/></operator> <name pos:line="534" pos:column="25">PORT_GOPHER<pos:position pos:line="534" pos:column="36"/></name></expr>;<pos:position pos:line="534" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="535" pos:column="5">/* Skip /&lt;item-type&gt;/ in path if present */</comment>
    <if pos:line="536" pos:column="5">if <condition pos:line="536" pos:column="8">(<expr><call><name pos:line="536" pos:column="9">isdigit<pos:position pos:line="536" pos:column="16"/></name><argument_list pos:line="536" pos:column="16">(<argument><expr><operator pos:line="536" pos:column="17">(<pos:position pos:line="536" pos:column="18"/></operator><name pos:line="536" pos:column="18">int<pos:position pos:line="536" pos:column="21"/></name><operator pos:line="536" pos:column="21">)<pos:position pos:line="536" pos:column="22"/></operator><name><name pos:line="536" pos:column="22">conn<pos:position pos:line="536" pos:column="26"/></name><operator pos:line="536" pos:column="26">-&gt;<pos:position pos:line="536" pos:column="31"/></operator><name pos:line="536" pos:column="28">path<pos:position pos:line="536" pos:column="32"/></name><index pos:line="536" pos:column="32">[<expr><literal type="number" pos:line="536" pos:column="33">1<pos:position pos:line="536" pos:column="34"/></literal></expr>]<pos:position pos:line="536" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="536" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="536" pos:column="37"/></condition><then pos:line="536" pos:column="37"> <block pos:line="536" pos:column="38">{
      <expr_stmt><expr><name><name pos:line="537" pos:column="7">conn<pos:position pos:line="537" pos:column="11"/></name><operator pos:line="537" pos:column="11">-&gt;<pos:position pos:line="537" pos:column="16"/></operator><name pos:line="537" pos:column="13">path<pos:position pos:line="537" pos:column="17"/></name></name> <operator pos:line="537" pos:column="18">=<pos:position pos:line="537" pos:column="19"/></operator> <call><name pos:line="537" pos:column="20">strchr<pos:position pos:line="537" pos:column="26"/></name><argument_list pos:line="537" pos:column="26">(<argument><expr><operator pos:line="537" pos:column="27">&amp;<pos:position pos:line="537" pos:column="32"/></operator><name><name pos:line="537" pos:column="28">conn<pos:position pos:line="537" pos:column="32"/></name><operator pos:line="537" pos:column="32">-&gt;<pos:position pos:line="537" pos:column="37"/></operator><name pos:line="537" pos:column="34">path<pos:position pos:line="537" pos:column="38"/></name><index pos:line="537" pos:column="38">[<expr><literal type="number" pos:line="537" pos:column="39">1<pos:position pos:line="537" pos:column="40"/></literal></expr>]<pos:position pos:line="537" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="537" pos:column="43">'/'<pos:position pos:line="537" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="537" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="48"/></expr_stmt>
      <if pos:line="538" pos:column="7">if <condition pos:line="538" pos:column="10">(<expr><name><name pos:line="538" pos:column="11">conn<pos:position pos:line="538" pos:column="15"/></name><operator pos:line="538" pos:column="15">-&gt;<pos:position pos:line="538" pos:column="20"/></operator><name pos:line="538" pos:column="17">path<pos:position pos:line="538" pos:column="21"/></name></name> <operator pos:line="538" pos:column="22">==<pos:position pos:line="538" pos:column="24"/></operator> <name pos:line="538" pos:column="25">NULL<pos:position pos:line="538" pos:column="29"/></name></expr>)<pos:position pos:line="538" pos:column="30"/></condition><then pos:line="538" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="539" pos:column="9">conn<pos:position pos:line="539" pos:column="13"/></name><operator pos:line="539" pos:column="13">-&gt;<pos:position pos:line="539" pos:column="18"/></operator><name pos:line="539" pos:column="15">path<pos:position pos:line="539" pos:column="19"/></name></name> <operator pos:line="539" pos:column="20">=<pos:position pos:line="539" pos:column="21"/></operator> <name><name pos:line="539" pos:column="22">conn<pos:position pos:line="539" pos:column="26"/></name><operator pos:line="539" pos:column="26">-&gt;<pos:position pos:line="539" pos:column="31"/></operator><name pos:line="539" pos:column="28">pathbuffer<pos:position pos:line="539" pos:column="38"/></name></name></expr>;<pos:position pos:line="539" pos:column="39"/></expr_stmt></block></then></if>
    }<pos:position pos:line="540" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="541" pos:column="5">conn<pos:position pos:line="541" pos:column="9"/></name><operator pos:line="541" pos:column="9">-&gt;<pos:position pos:line="541" pos:column="14"/></operator><name pos:line="541" pos:column="11">protocol<pos:position pos:line="541" pos:column="19"/></name></name> <operator pos:line="541" pos:column="20">|=<pos:position pos:line="541" pos:column="22"/></operator> <name pos:line="541" pos:column="23">PROT_GOPHER<pos:position pos:line="541" pos:column="34"/></name></expr>;<pos:position pos:line="541" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="542" pos:column="5">conn<pos:position pos:line="542" pos:column="9"/></name><operator pos:line="542" pos:column="9">-&gt;<pos:position pos:line="542" pos:column="14"/></operator><name pos:line="542" pos:column="11">curl_do<pos:position pos:line="542" pos:column="18"/></name></name> <operator pos:line="542" pos:column="19">=<pos:position pos:line="542" pos:column="20"/></operator> <name pos:line="542" pos:column="21">Curl_http<pos:position pos:line="542" pos:column="30"/></name></expr>;<pos:position pos:line="542" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="543" pos:column="5">conn<pos:position pos:line="543" pos:column="9"/></name><operator pos:line="543" pos:column="9">-&gt;<pos:position pos:line="543" pos:column="14"/></operator><name pos:line="543" pos:column="11">curl_do_more<pos:position pos:line="543" pos:column="23"/></name></name> <operator pos:line="543" pos:column="24">=<pos:position pos:line="543" pos:column="25"/></operator> <name pos:line="543" pos:column="26">NULL<pos:position pos:line="543" pos:column="30"/></name></expr>;<pos:position pos:line="543" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="544" pos:column="5">conn<pos:position pos:line="544" pos:column="9"/></name><operator pos:line="544" pos:column="9">-&gt;<pos:position pos:line="544" pos:column="14"/></operator><name pos:line="544" pos:column="11">curl_done<pos:position pos:line="544" pos:column="20"/></name></name> <operator pos:line="544" pos:column="21">=<pos:position pos:line="544" pos:column="22"/></operator> <name pos:line="544" pos:column="23">Curl_http_done<pos:position pos:line="544" pos:column="37"/></name></expr>;<pos:position pos:line="544" pos:column="38"/></expr_stmt>
<cpp:else pos:line="545" pos:column="1">#<cpp:directive pos:line="545" pos:column="2">else<pos:position pos:line="545" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="546" pos:column="5">failf<pos:position pos:line="546" pos:column="10"/></name><argument_list pos:line="546" pos:column="10">(<argument><expr><name pos:line="546" pos:column="11">data<pos:position pos:line="546" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="546" pos:column="17">LIBCURL_NAME<pos:position pos:line="546" pos:column="29"/></name>
          <literal type="string" pos:line="547" pos:column="11">" was built with GOPHER disabled, gopher: not supported!"<pos:position pos:line="547" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="547" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="547" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="548" pos:column="1">#<cpp:directive pos:line="548" pos:column="2">endif<pos:position pos:line="548" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="549" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="550" pos:column="3">else <if pos:line="550" pos:column="8">if<condition pos:line="550" pos:column="10">(<expr><call><name pos:line="550" pos:column="11">strequal<pos:position pos:line="550" pos:column="19"/></name><argument_list pos:line="550" pos:column="19">(<argument><expr><name><name pos:line="550" pos:column="20">conn<pos:position pos:line="550" pos:column="24"/></name><operator pos:line="550" pos:column="24">-&gt;<pos:position pos:line="550" pos:column="29"/></operator><name pos:line="550" pos:column="26">protostr<pos:position pos:line="550" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="550" pos:column="36">"FTP"<pos:position pos:line="550" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="550" pos:column="42"/></argument_list></call> <operator pos:line="550" pos:column="43">||<pos:position pos:line="550" pos:column="45"/></operator>
          <call><name pos:line="551" pos:column="11">strequal<pos:position pos:line="551" pos:column="19"/></name><argument_list pos:line="551" pos:column="19">(<argument><expr><name><name pos:line="551" pos:column="20">conn<pos:position pos:line="551" pos:column="24"/></name><operator pos:line="551" pos:column="24">-&gt;<pos:position pos:line="551" pos:column="29"/></operator><name pos:line="551" pos:column="26">protostr<pos:position pos:line="551" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="551" pos:column="36">"FTPS"<pos:position pos:line="551" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="551" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="551" pos:column="44"/></condition><then pos:line="551" pos:column="44"> <block pos:line="551" pos:column="45">{

<cpp:ifndef pos:line="553" pos:column="1">#<cpp:directive pos:line="553" pos:column="2">ifndef<pos:position pos:line="553" pos:column="8"/></cpp:directive> <name pos:line="553" pos:column="9">CURL_DISABLE_FTP<pos:position pos:line="553" pos:column="25"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="554" pos:column="5">char<pos:position pos:line="554" pos:column="9"/></name> <modifier pos:line="554" pos:column="10">*<pos:position pos:line="554" pos:column="11"/></modifier></type><name pos:line="554" pos:column="11">type<pos:position pos:line="554" pos:column="15"/></name></decl>;<pos:position pos:line="554" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="555" pos:column="5">int<pos:position pos:line="555" pos:column="8"/></name></type> <name pos:line="555" pos:column="9">port<pos:position pos:line="555" pos:column="13"/></name> <init pos:line="555" pos:column="14">= <expr><name pos:line="555" pos:column="16">PORT_FTP<pos:position pos:line="555" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="555" pos:column="25"/></decl_stmt>

    <if pos:line="557" pos:column="5">if<condition pos:line="557" pos:column="7">(<expr><call><name pos:line="557" pos:column="8">strequal<pos:position pos:line="557" pos:column="16"/></name><argument_list pos:line="557" pos:column="16">(<argument><expr><name><name pos:line="557" pos:column="17">conn<pos:position pos:line="557" pos:column="21"/></name><operator pos:line="557" pos:column="21">-&gt;<pos:position pos:line="557" pos:column="26"/></operator><name pos:line="557" pos:column="23">protostr<pos:position pos:line="557" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="557" pos:column="33">"FTPS"<pos:position pos:line="557" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="557" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="557" pos:column="41"/></condition><then pos:line="557" pos:column="41"> <block pos:line="557" pos:column="42">{
<cpp:ifdef pos:line="558" pos:column="1">#<cpp:directive pos:line="558" pos:column="2">ifdef<pos:position pos:line="558" pos:column="7"/></cpp:directive> <name pos:line="558" pos:column="8">USE_SSL<pos:position pos:line="558" pos:column="15"/></name></cpp:ifdef>
      <expr_stmt><expr><name><name pos:line="559" pos:column="7">conn<pos:position pos:line="559" pos:column="11"/></name><operator pos:line="559" pos:column="11">-&gt;<pos:position pos:line="559" pos:column="16"/></operator><name pos:line="559" pos:column="13">protocol<pos:position pos:line="559" pos:column="21"/></name></name> <operator pos:line="559" pos:column="22">|=<pos:position pos:line="559" pos:column="24"/></operator> <name pos:line="559" pos:column="25">PROT_FTPS<pos:position pos:line="559" pos:column="34"/></name><operator pos:line="559" pos:column="34">|<pos:position pos:line="559" pos:column="35"/></operator><name pos:line="559" pos:column="35">PROT_SSL<pos:position pos:line="559" pos:column="43"/></name></expr>;<pos:position pos:line="559" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="560" pos:column="7">conn<pos:position pos:line="560" pos:column="11"/></name><operator pos:line="560" pos:column="11">-&gt;<pos:position pos:line="560" pos:column="16"/></operator><name pos:line="560" pos:column="13">ssl<pos:position pos:line="560" pos:column="16"/></name><index pos:line="560" pos:column="16">[<expr><name pos:line="560" pos:column="17">SECONDARYSOCKET<pos:position pos:line="560" pos:column="32"/></name></expr>]<pos:position pos:line="560" pos:column="33"/></index></name><operator pos:line="560" pos:column="33">.<pos:position pos:line="560" pos:column="34"/></operator><name pos:line="560" pos:column="34">use<pos:position pos:line="560" pos:column="37"/></name> <operator pos:line="560" pos:column="38">=<pos:position pos:line="560" pos:column="39"/></operator> <name pos:line="560" pos:column="40">TRUE<pos:position pos:line="560" pos:column="44"/></name></expr>;<pos:position pos:line="560" pos:column="45"/></expr_stmt> <comment type="block" pos:line="560" pos:column="46">/* send data securely */</comment>
      <expr_stmt><expr><name pos:line="561" pos:column="7">port<pos:position pos:line="561" pos:column="11"/></name> <operator pos:line="561" pos:column="12">=<pos:position pos:line="561" pos:column="13"/></operator> <name pos:line="561" pos:column="14">PORT_FTPS<pos:position pos:line="561" pos:column="23"/></name></expr>;<pos:position pos:line="561" pos:column="24"/></expr_stmt>
<cpp:else pos:line="562" pos:column="1">#<cpp:directive pos:line="562" pos:column="2">else<pos:position pos:line="562" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="563" pos:column="7">failf<pos:position pos:line="563" pos:column="12"/></name><argument_list pos:line="563" pos:column="12">(<argument><expr><name pos:line="563" pos:column="13">data<pos:position pos:line="563" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="563" pos:column="19">LIBCURL_NAME<pos:position pos:line="563" pos:column="31"/></name>
            <literal type="string" pos:line="564" pos:column="13">" was built with SSL disabled, ftps: not supported!"<pos:position pos:line="564" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="564" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="564" pos:column="67"/></expr_stmt>
      <return pos:line="565" pos:column="7">return <expr><name pos:line="565" pos:column="14">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="565" pos:column="40"/></name></expr>;<pos:position pos:line="565" pos:column="41"/></return>
<cpp:endif pos:line="566" pos:column="1">#<cpp:directive pos:line="566" pos:column="2">endif<pos:position pos:line="566" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="566" pos:column="8">/* !USE_SSL */</comment>
    }<pos:position pos:line="567" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="569" pos:column="5">conn<pos:position pos:line="569" pos:column="9"/></name><operator pos:line="569" pos:column="9">-&gt;<pos:position pos:line="569" pos:column="14"/></operator><name pos:line="569" pos:column="11">port<pos:position pos:line="569" pos:column="15"/></name></name> <operator pos:line="569" pos:column="16">=<pos:position pos:line="569" pos:column="17"/></operator> <name pos:line="569" pos:column="18">port<pos:position pos:line="569" pos:column="22"/></name></expr>;<pos:position pos:line="569" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="570" pos:column="5">conn<pos:position pos:line="570" pos:column="9"/></name><operator pos:line="570" pos:column="9">-&gt;<pos:position pos:line="570" pos:column="14"/></operator><name pos:line="570" pos:column="11">remote_port<pos:position pos:line="570" pos:column="22"/></name></name> <operator pos:line="570" pos:column="23">=<pos:position pos:line="570" pos:column="24"/></operator> <name pos:line="570" pos:column="25">port<pos:position pos:line="570" pos:column="29"/></name></expr>;<pos:position pos:line="570" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="571" pos:column="5">conn<pos:position pos:line="571" pos:column="9"/></name><operator pos:line="571" pos:column="9">-&gt;<pos:position pos:line="571" pos:column="14"/></operator><name pos:line="571" pos:column="11">protocol<pos:position pos:line="571" pos:column="19"/></name></name> <operator pos:line="571" pos:column="20">|=<pos:position pos:line="571" pos:column="22"/></operator> <name pos:line="571" pos:column="23">PROT_FTP<pos:position pos:line="571" pos:column="31"/></name></expr>;<pos:position pos:line="571" pos:column="32"/></expr_stmt>

    <if pos:line="573" pos:column="5">if<condition pos:line="573" pos:column="7">(<expr><name><name pos:line="573" pos:column="8">data<pos:position pos:line="573" pos:column="12"/></name><operator pos:line="573" pos:column="12">-&gt;<pos:position pos:line="573" pos:column="17"/></operator><name pos:line="573" pos:column="14">change<pos:position pos:line="573" pos:column="20"/></name><operator pos:line="573" pos:column="20">.<pos:position pos:line="573" pos:column="21"/></operator><name pos:line="573" pos:column="21">proxy<pos:position pos:line="573" pos:column="26"/></name></name> <operator pos:line="573" pos:column="27">&amp;&amp;<pos:position pos:line="573" pos:column="37"/></operator>
       <operator pos:line="574" pos:column="8">*<pos:position pos:line="574" pos:column="9"/></operator><name><name pos:line="574" pos:column="9">data<pos:position pos:line="574" pos:column="13"/></name><operator pos:line="574" pos:column="13">-&gt;<pos:position pos:line="574" pos:column="18"/></operator><name pos:line="574" pos:column="15">change<pos:position pos:line="574" pos:column="21"/></name><operator pos:line="574" pos:column="21">.<pos:position pos:line="574" pos:column="22"/></operator><name pos:line="574" pos:column="22">proxy<pos:position pos:line="574" pos:column="27"/></name></name> <operator pos:line="574" pos:column="28">&amp;&amp;<pos:position pos:line="574" pos:column="38"/></operator>
       <operator pos:line="575" pos:column="8">!<pos:position pos:line="575" pos:column="9"/></operator><name><name pos:line="575" pos:column="9">data<pos:position pos:line="575" pos:column="13"/></name><operator pos:line="575" pos:column="13">-&gt;<pos:position pos:line="575" pos:column="18"/></operator><name pos:line="575" pos:column="15">set<pos:position pos:line="575" pos:column="18"/></name><operator pos:line="575" pos:column="18">.<pos:position pos:line="575" pos:column="19"/></operator><name pos:line="575" pos:column="19">tunnel_thru_httpproxy<pos:position pos:line="575" pos:column="40"/></name></name></expr>)<pos:position pos:line="575" pos:column="41"/></condition><then pos:line="575" pos:column="41"> <block pos:line="575" pos:column="42">{
      <comment type="block" pos:line="576" pos:column="7">/* Unless we have asked to tunnel ftp operations through the proxy, we
         switch and use HTTP operations only */</comment>
      <if pos:line="578" pos:column="7">if<condition pos:line="578" pos:column="9">(<expr><name><name pos:line="578" pos:column="10">conn<pos:position pos:line="578" pos:column="14"/></name><operator pos:line="578" pos:column="14">-&gt;<pos:position pos:line="578" pos:column="19"/></operator><name pos:line="578" pos:column="16">protocol<pos:position pos:line="578" pos:column="24"/></name></name> <operator pos:line="578" pos:column="25">&amp;<pos:position pos:line="578" pos:column="30"/></operator> <name pos:line="578" pos:column="27">PROT_FTPS<pos:position pos:line="578" pos:column="36"/></name></expr>)<pos:position pos:line="578" pos:column="37"/></condition><then pos:line="578" pos:column="37"> <block pos:line="578" pos:column="38">{
        <comment type="block" pos:line="579" pos:column="9">/* FTPS is a hacked protocol and does not work through your
           ordinary http proxy! */</comment>
        <expr_stmt><expr><call><name pos:line="581" pos:column="9">failf<pos:position pos:line="581" pos:column="14"/></name><argument_list pos:line="581" pos:column="14">(<argument><expr><name pos:line="581" pos:column="15">data<pos:position pos:line="581" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="581" pos:column="21">"ftps does not work through http proxy!"<pos:position pos:line="581" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="581" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="581" pos:column="63"/></expr_stmt>
        <return pos:line="582" pos:column="9">return <expr><name pos:line="582" pos:column="16">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="582" pos:column="42"/></name></expr>;<pos:position pos:line="582" pos:column="43"/></return>
      }<pos:position pos:line="583" pos:column="8"/></block></then></if>
<cpp:ifndef pos:line="584" pos:column="1">#<cpp:directive pos:line="584" pos:column="2">ifndef<pos:position pos:line="584" pos:column="8"/></cpp:directive> <name pos:line="584" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="584" pos:column="26"/></name></cpp:ifndef>
      <expr_stmt><expr><name><name pos:line="585" pos:column="7">conn<pos:position pos:line="585" pos:column="11"/></name><operator pos:line="585" pos:column="11">-&gt;<pos:position pos:line="585" pos:column="16"/></operator><name pos:line="585" pos:column="13">curl_do<pos:position pos:line="585" pos:column="20"/></name></name> <operator pos:line="585" pos:column="21">=<pos:position pos:line="585" pos:column="22"/></operator> <name pos:line="585" pos:column="23">Curl_http<pos:position pos:line="585" pos:column="32"/></name></expr>;<pos:position pos:line="585" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="586" pos:column="7">conn<pos:position pos:line="586" pos:column="11"/></name><operator pos:line="586" pos:column="11">-&gt;<pos:position pos:line="586" pos:column="16"/></operator><name pos:line="586" pos:column="13">curl_done<pos:position pos:line="586" pos:column="22"/></name></name> <operator pos:line="586" pos:column="23">=<pos:position pos:line="586" pos:column="24"/></operator> <name pos:line="586" pos:column="25">Curl_http_done<pos:position pos:line="586" pos:column="39"/></name></expr>;<pos:position pos:line="586" pos:column="40"/></expr_stmt>
<cpp:else pos:line="587" pos:column="1">#<cpp:directive pos:line="587" pos:column="2">else<pos:position pos:line="587" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="588" pos:column="7">failf<pos:position pos:line="588" pos:column="12"/></name><argument_list pos:line="588" pos:column="12">(<argument><expr><name pos:line="588" pos:column="13">data<pos:position pos:line="588" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="588" pos:column="19">"FTP over http proxy requires HTTP support built-in!"<pos:position pos:line="588" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="588" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="588" pos:column="74"/></expr_stmt>
      <return pos:line="589" pos:column="7">return <expr><name pos:line="589" pos:column="14">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="589" pos:column="40"/></name></expr>;<pos:position pos:line="589" pos:column="41"/></return>
<cpp:endif pos:line="590" pos:column="1">#<cpp:directive pos:line="590" pos:column="2">endif<pos:position pos:line="590" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="591" pos:column="6"/></block></then>
    <else pos:line="592" pos:column="5">else <block pos:line="592" pos:column="10">{
      <expr_stmt><expr><name><name pos:line="593" pos:column="7">conn<pos:position pos:line="593" pos:column="11"/></name><operator pos:line="593" pos:column="11">-&gt;<pos:position pos:line="593" pos:column="16"/></operator><name pos:line="593" pos:column="13">curl_do<pos:position pos:line="593" pos:column="20"/></name></name> <operator pos:line="593" pos:column="21">=<pos:position pos:line="593" pos:column="22"/></operator> <name pos:line="593" pos:column="23">Curl_ftp<pos:position pos:line="593" pos:column="31"/></name></expr>;<pos:position pos:line="593" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="594" pos:column="7">conn<pos:position pos:line="594" pos:column="11"/></name><operator pos:line="594" pos:column="11">-&gt;<pos:position pos:line="594" pos:column="16"/></operator><name pos:line="594" pos:column="13">curl_do_more<pos:position pos:line="594" pos:column="25"/></name></name> <operator pos:line="594" pos:column="26">=<pos:position pos:line="594" pos:column="27"/></operator> <name pos:line="594" pos:column="28">Curl_ftp_nextconnect<pos:position pos:line="594" pos:column="48"/></name></expr>;<pos:position pos:line="594" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="595" pos:column="7">conn<pos:position pos:line="595" pos:column="11"/></name><operator pos:line="595" pos:column="11">-&gt;<pos:position pos:line="595" pos:column="16"/></operator><name pos:line="595" pos:column="13">curl_done<pos:position pos:line="595" pos:column="22"/></name></name> <operator pos:line="595" pos:column="23">=<pos:position pos:line="595" pos:column="24"/></operator> <name pos:line="595" pos:column="25">Curl_ftp_done<pos:position pos:line="595" pos:column="38"/></name></expr>;<pos:position pos:line="595" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="596" pos:column="7">conn<pos:position pos:line="596" pos:column="11"/></name><operator pos:line="596" pos:column="11">-&gt;<pos:position pos:line="596" pos:column="16"/></operator><name pos:line="596" pos:column="13">curl_connect<pos:position pos:line="596" pos:column="25"/></name></name> <operator pos:line="596" pos:column="26">=<pos:position pos:line="596" pos:column="27"/></operator> <name pos:line="596" pos:column="28">Curl_ftp_connect<pos:position pos:line="596" pos:column="44"/></name></expr>;<pos:position pos:line="596" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="597" pos:column="7">conn<pos:position pos:line="597" pos:column="11"/></name><operator pos:line="597" pos:column="11">-&gt;<pos:position pos:line="597" pos:column="16"/></operator><name pos:line="597" pos:column="13">curl_connecting<pos:position pos:line="597" pos:column="28"/></name></name> <operator pos:line="597" pos:column="29">=<pos:position pos:line="597" pos:column="30"/></operator> <name pos:line="597" pos:column="31">Curl_ftp_multi_statemach<pos:position pos:line="597" pos:column="55"/></name></expr>;<pos:position pos:line="597" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="598" pos:column="7">conn<pos:position pos:line="598" pos:column="11"/></name><operator pos:line="598" pos:column="11">-&gt;<pos:position pos:line="598" pos:column="16"/></operator><name pos:line="598" pos:column="13">curl_doing<pos:position pos:line="598" pos:column="23"/></name></name> <operator pos:line="598" pos:column="24">=<pos:position pos:line="598" pos:column="25"/></operator> <name pos:line="598" pos:column="26">Curl_ftp_doing<pos:position pos:line="598" pos:column="40"/></name></expr>;<pos:position pos:line="598" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="599" pos:column="7">conn<pos:position pos:line="599" pos:column="11"/></name><operator pos:line="599" pos:column="11">-&gt;<pos:position pos:line="599" pos:column="16"/></operator><name pos:line="599" pos:column="13">curl_proto_fdset<pos:position pos:line="599" pos:column="29"/></name></name> <operator pos:line="599" pos:column="30">=<pos:position pos:line="599" pos:column="31"/></operator> <name pos:line="599" pos:column="32">Curl_ftp_fdset<pos:position pos:line="599" pos:column="46"/></name></expr>;<pos:position pos:line="599" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="600" pos:column="7">conn<pos:position pos:line="600" pos:column="11"/></name><operator pos:line="600" pos:column="11">-&gt;<pos:position pos:line="600" pos:column="16"/></operator><name pos:line="600" pos:column="13">curl_doing_fdset<pos:position pos:line="600" pos:column="29"/></name></name> <operator pos:line="600" pos:column="30">=<pos:position pos:line="600" pos:column="31"/></operator> <name pos:line="600" pos:column="32">Curl_ftp_fdset<pos:position pos:line="600" pos:column="46"/></name></expr>;<pos:position pos:line="600" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="601" pos:column="7">conn<pos:position pos:line="601" pos:column="11"/></name><operator pos:line="601" pos:column="11">-&gt;<pos:position pos:line="601" pos:column="16"/></operator><name pos:line="601" pos:column="13">curl_disconnect<pos:position pos:line="601" pos:column="28"/></name></name> <operator pos:line="601" pos:column="29">=<pos:position pos:line="601" pos:column="30"/></operator> <name pos:line="601" pos:column="31">Curl_ftp_disconnect<pos:position pos:line="601" pos:column="50"/></name></expr>;<pos:position pos:line="601" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="602" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="604" pos:column="5">conn<pos:position pos:line="604" pos:column="9"/></name><operator pos:line="604" pos:column="9">-&gt;<pos:position pos:line="604" pos:column="14"/></operator><name pos:line="604" pos:column="11">path<pos:position pos:line="604" pos:column="15"/></name></name><operator pos:line="604" pos:column="15">++<pos:position pos:line="604" pos:column="17"/></operator></expr>;<pos:position pos:line="604" pos:column="18"/></expr_stmt> <comment type="block" pos:line="604" pos:column="19">/* don't include the initial slash */</comment>

    <comment type="block" pos:line="606" pos:column="5">/* FTP URLs support an extension like ";type=&lt;typecode&gt;" that
     * we'll try to get now! */</comment>
    <expr_stmt><expr><name pos:line="608" pos:column="5">type<pos:position pos:line="608" pos:column="9"/></name><operator pos:line="608" pos:column="9">=<pos:position pos:line="608" pos:column="10"/></operator><call><name pos:line="608" pos:column="10">strstr<pos:position pos:line="608" pos:column="16"/></name><argument_list pos:line="608" pos:column="16">(<argument><expr><name><name pos:line="608" pos:column="17">conn<pos:position pos:line="608" pos:column="21"/></name><operator pos:line="608" pos:column="21">-&gt;<pos:position pos:line="608" pos:column="26"/></operator><name pos:line="608" pos:column="23">path<pos:position pos:line="608" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="608" pos:column="29">";type="<pos:position pos:line="608" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="608" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="39"/></expr_stmt>
    <if pos:line="609" pos:column="5">if<condition pos:line="609" pos:column="7">(<expr><operator pos:line="609" pos:column="8">!<pos:position pos:line="609" pos:column="9"/></operator><name pos:line="609" pos:column="9">type<pos:position pos:line="609" pos:column="13"/></name></expr>)<pos:position pos:line="609" pos:column="14"/></condition><then pos:line="609" pos:column="14"> <block pos:line="609" pos:column="15">{
      <expr_stmt><expr><name pos:line="610" pos:column="7">type<pos:position pos:line="610" pos:column="11"/></name><operator pos:line="610" pos:column="11">=<pos:position pos:line="610" pos:column="12"/></operator><call><name pos:line="610" pos:column="12">strstr<pos:position pos:line="610" pos:column="18"/></name><argument_list pos:line="610" pos:column="18">(<argument><expr><name><name pos:line="610" pos:column="19">conn<pos:position pos:line="610" pos:column="23"/></name><operator pos:line="610" pos:column="23">-&gt;<pos:position pos:line="610" pos:column="28"/></operator><name pos:line="610" pos:column="25">host<pos:position pos:line="610" pos:column="29"/></name><operator pos:line="610" pos:column="29">.<pos:position pos:line="610" pos:column="30"/></operator><name pos:line="610" pos:column="30">rawalloc<pos:position pos:line="610" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="610" pos:column="40">";type="<pos:position pos:line="610" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="610" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="610" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="611" pos:column="6"/></block></then></if>
    <if pos:line="612" pos:column="5">if<condition pos:line="612" pos:column="7">(<expr><name pos:line="612" pos:column="8">type<pos:position pos:line="612" pos:column="12"/></name></expr>)<pos:position pos:line="612" pos:column="13"/></condition><then pos:line="612" pos:column="13"> <block pos:line="612" pos:column="14">{
      <decl_stmt><decl><type><name pos:line="613" pos:column="7">char<pos:position pos:line="613" pos:column="11"/></name></type> <name pos:line="613" pos:column="12">command<pos:position pos:line="613" pos:column="19"/></name></decl>;<pos:position pos:line="613" pos:column="20"/></decl_stmt>
      <expr_stmt><expr><operator pos:line="614" pos:column="7">*<pos:position pos:line="614" pos:column="8"/></operator><name pos:line="614" pos:column="8">type<pos:position pos:line="614" pos:column="12"/></name><operator pos:line="614" pos:column="12">=<pos:position pos:line="614" pos:column="13"/></operator><literal type="number" pos:line="614" pos:column="13">0<pos:position pos:line="614" pos:column="14"/></literal></expr>;<pos:position pos:line="614" pos:column="15"/></expr_stmt>                     <comment type="block" pos:line="614" pos:column="36">/* it was in the middle of the hostname */</comment>
      <expr_stmt><expr><name pos:line="615" pos:column="7">command<pos:position pos:line="615" pos:column="14"/></name> <operator pos:line="615" pos:column="15">=<pos:position pos:line="615" pos:column="16"/></operator> <call><name pos:line="615" pos:column="17">toupper<pos:position pos:line="615" pos:column="24"/></name><argument_list pos:line="615" pos:column="24">(<argument><expr><operator pos:line="615" pos:column="25">(<pos:position pos:line="615" pos:column="26"/></operator><name pos:line="615" pos:column="26">int<pos:position pos:line="615" pos:column="29"/></name><operator pos:line="615" pos:column="29">)<pos:position pos:line="615" pos:column="30"/></operator><name><name pos:line="615" pos:column="30">type<pos:position pos:line="615" pos:column="34"/></name><index pos:line="615" pos:column="34">[<expr><literal type="number" pos:line="615" pos:column="35">6<pos:position pos:line="615" pos:column="36"/></literal></expr>]<pos:position pos:line="615" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="615" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="39"/></expr_stmt>
      <switch pos:line="616" pos:column="7">switch<condition pos:line="616" pos:column="13">(<expr><name pos:line="616" pos:column="14">command<pos:position pos:line="616" pos:column="21"/></name></expr>)<pos:position pos:line="616" pos:column="22"/></condition> <block pos:line="616" pos:column="23">{
      <case pos:line="617" pos:column="7">case <expr><literal type="char" pos:line="617" pos:column="12">'A'<pos:position pos:line="617" pos:column="15"/></literal></expr>:<pos:position pos:line="617" pos:column="16"/></case> <comment type="block" pos:line="617" pos:column="17">/* ASCII mode */</comment>
        <expr_stmt><expr><name><name pos:line="618" pos:column="9">data<pos:position pos:line="618" pos:column="13"/></name><operator pos:line="618" pos:column="13">-&gt;<pos:position pos:line="618" pos:column="18"/></operator><name pos:line="618" pos:column="15">set<pos:position pos:line="618" pos:column="18"/></name><operator pos:line="618" pos:column="18">.<pos:position pos:line="618" pos:column="19"/></operator><name pos:line="618" pos:column="19">ftp_ascii<pos:position pos:line="618" pos:column="28"/></name></name> <operator pos:line="618" pos:column="29">=<pos:position pos:line="618" pos:column="30"/></operator> <literal type="number" pos:line="618" pos:column="31">1<pos:position pos:line="618" pos:column="32"/></literal></expr>;<pos:position pos:line="618" pos:column="33"/></expr_stmt>
        <break pos:line="619" pos:column="9">break;<pos:position pos:line="619" pos:column="15"/></break>
      <case pos:line="620" pos:column="7">case <expr><literal type="char" pos:line="620" pos:column="12">'D'<pos:position pos:line="620" pos:column="15"/></literal></expr>:<pos:position pos:line="620" pos:column="16"/></case> <comment type="block" pos:line="620" pos:column="17">/* directory mode */</comment>
        <expr_stmt><expr><name><name pos:line="621" pos:column="9">data<pos:position pos:line="621" pos:column="13"/></name><operator pos:line="621" pos:column="13">-&gt;<pos:position pos:line="621" pos:column="18"/></operator><name pos:line="621" pos:column="15">set<pos:position pos:line="621" pos:column="18"/></name><operator pos:line="621" pos:column="18">.<pos:position pos:line="621" pos:column="19"/></operator><name pos:line="621" pos:column="19">ftp_list_only<pos:position pos:line="621" pos:column="32"/></name></name> <operator pos:line="621" pos:column="33">=<pos:position pos:line="621" pos:column="34"/></operator> <literal type="number" pos:line="621" pos:column="35">1<pos:position pos:line="621" pos:column="36"/></literal></expr>;<pos:position pos:line="621" pos:column="37"/></expr_stmt>
        <break pos:line="622" pos:column="9">break;<pos:position pos:line="622" pos:column="15"/></break>
      <case pos:line="623" pos:column="7">case <expr><literal type="char" pos:line="623" pos:column="12">'I'<pos:position pos:line="623" pos:column="15"/></literal></expr>:<pos:position pos:line="623" pos:column="16"/></case> <comment type="block" pos:line="623" pos:column="17">/* binary mode */</comment>
      <default pos:line="624" pos:column="7">default:<pos:position pos:line="624" pos:column="15"/></default>
        <comment type="block" pos:line="625" pos:column="9">/* switch off ASCII */</comment>
        <expr_stmt><expr><name><name pos:line="626" pos:column="9">data<pos:position pos:line="626" pos:column="13"/></name><operator pos:line="626" pos:column="13">-&gt;<pos:position pos:line="626" pos:column="18"/></operator><name pos:line="626" pos:column="15">set<pos:position pos:line="626" pos:column="18"/></name><operator pos:line="626" pos:column="18">.<pos:position pos:line="626" pos:column="19"/></operator><name pos:line="626" pos:column="19">ftp_ascii<pos:position pos:line="626" pos:column="28"/></name></name> <operator pos:line="626" pos:column="29">=<pos:position pos:line="626" pos:column="30"/></operator> <literal type="number" pos:line="626" pos:column="31">0<pos:position pos:line="626" pos:column="32"/></literal></expr>;<pos:position pos:line="626" pos:column="33"/></expr_stmt>
        <break pos:line="627" pos:column="9">break;<pos:position pos:line="627" pos:column="15"/></break>
      }<pos:position pos:line="628" pos:column="8"/></block></switch>
    }<pos:position pos:line="629" pos:column="6"/></block></then></if>
<cpp:else pos:line="630" pos:column="1">#<cpp:directive pos:line="630" pos:column="2">else<pos:position pos:line="630" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="630" pos:column="7">/* CURL_DISABLE_FTP */</comment>
    <expr_stmt><expr><call><name pos:line="631" pos:column="5">failf<pos:position pos:line="631" pos:column="10"/></name><argument_list pos:line="631" pos:column="10">(<argument><expr><name pos:line="631" pos:column="11">data<pos:position pos:line="631" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="631" pos:column="17">LIBCURL_NAME<pos:position pos:line="631" pos:column="29"/></name>
          <literal type="string" pos:line="632" pos:column="11">" was built with FTP disabled, ftp/ftps: not supported!"<pos:position pos:line="632" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="632" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="632" pos:column="69"/></expr_stmt>
    <return pos:line="633" pos:column="5">return <expr><name pos:line="633" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="633" pos:column="38"/></name></expr>;<pos:position pos:line="633" pos:column="39"/></return>
<cpp:endif pos:line="634" pos:column="1">#<cpp:directive pos:line="634" pos:column="2">endif<pos:position pos:line="634" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="635" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="636" pos:column="3">else <if pos:line="636" pos:column="8">if<condition pos:line="636" pos:column="10">(<expr><call><name pos:line="636" pos:column="11">strequal<pos:position pos:line="636" pos:column="19"/></name><argument_list pos:line="636" pos:column="19">(<argument><expr><name><name pos:line="636" pos:column="20">conn<pos:position pos:line="636" pos:column="24"/></name><operator pos:line="636" pos:column="24">-&gt;<pos:position pos:line="636" pos:column="29"/></operator><name pos:line="636" pos:column="26">protostr<pos:position pos:line="636" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="636" pos:column="36">"TELNET"<pos:position pos:line="636" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="636" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="636" pos:column="46"/></condition><then pos:line="636" pos:column="46"> <block pos:line="636" pos:column="47">{
<cpp:ifndef pos:line="637" pos:column="1">#<cpp:directive pos:line="637" pos:column="2">ifndef<pos:position pos:line="637" pos:column="8"/></cpp:directive> <name pos:line="637" pos:column="9">CURL_DISABLE_TELNET<pos:position pos:line="637" pos:column="28"/></name></cpp:ifndef>
    <comment type="block" pos:line="638" pos:column="5">/* telnet testing factory */</comment>
    <expr_stmt><expr><name><name pos:line="639" pos:column="5">conn<pos:position pos:line="639" pos:column="9"/></name><operator pos:line="639" pos:column="9">-&gt;<pos:position pos:line="639" pos:column="14"/></operator><name pos:line="639" pos:column="11">protocol<pos:position pos:line="639" pos:column="19"/></name></name> <operator pos:line="639" pos:column="20">|=<pos:position pos:line="639" pos:column="22"/></operator> <name pos:line="639" pos:column="23">PROT_TELNET<pos:position pos:line="639" pos:column="34"/></name></expr>;<pos:position pos:line="639" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="641" pos:column="5">conn<pos:position pos:line="641" pos:column="9"/></name><operator pos:line="641" pos:column="9">-&gt;<pos:position pos:line="641" pos:column="14"/></operator><name pos:line="641" pos:column="11">port<pos:position pos:line="641" pos:column="15"/></name></name> <operator pos:line="641" pos:column="16">=<pos:position pos:line="641" pos:column="17"/></operator> <name pos:line="641" pos:column="18">PORT_TELNET<pos:position pos:line="641" pos:column="29"/></name></expr>;<pos:position pos:line="641" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="642" pos:column="5">conn<pos:position pos:line="642" pos:column="9"/></name><operator pos:line="642" pos:column="9">-&gt;<pos:position pos:line="642" pos:column="14"/></operator><name pos:line="642" pos:column="11">remote_port<pos:position pos:line="642" pos:column="22"/></name></name> <operator pos:line="642" pos:column="23">=<pos:position pos:line="642" pos:column="24"/></operator> <name pos:line="642" pos:column="25">PORT_TELNET<pos:position pos:line="642" pos:column="36"/></name></expr>;<pos:position pos:line="642" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="643" pos:column="5">conn<pos:position pos:line="643" pos:column="9"/></name><operator pos:line="643" pos:column="9">-&gt;<pos:position pos:line="643" pos:column="14"/></operator><name pos:line="643" pos:column="11">curl_do<pos:position pos:line="643" pos:column="18"/></name></name> <operator pos:line="643" pos:column="19">=<pos:position pos:line="643" pos:column="20"/></operator> <name pos:line="643" pos:column="21">Curl_telnet<pos:position pos:line="643" pos:column="32"/></name></expr>;<pos:position pos:line="643" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="644" pos:column="5">conn<pos:position pos:line="644" pos:column="9"/></name><operator pos:line="644" pos:column="9">-&gt;<pos:position pos:line="644" pos:column="14"/></operator><name pos:line="644" pos:column="11">curl_done<pos:position pos:line="644" pos:column="20"/></name></name> <operator pos:line="644" pos:column="21">=<pos:position pos:line="644" pos:column="22"/></operator> <name pos:line="644" pos:column="23">Curl_telnet_done<pos:position pos:line="644" pos:column="39"/></name></expr>;<pos:position pos:line="644" pos:column="40"/></expr_stmt>
<cpp:else pos:line="645" pos:column="1">#<cpp:directive pos:line="645" pos:column="2">else<pos:position pos:line="645" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="646" pos:column="5">failf<pos:position pos:line="646" pos:column="10"/></name><argument_list pos:line="646" pos:column="10">(<argument><expr><name pos:line="646" pos:column="11">data<pos:position pos:line="646" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="646" pos:column="17">LIBCURL_NAME<pos:position pos:line="646" pos:column="29"/></name>
          <literal type="string" pos:line="647" pos:column="11">" was built with TELNET disabled!"<pos:position pos:line="647" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="647" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="647" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="648" pos:column="1">#<cpp:directive pos:line="648" pos:column="2">endif<pos:position pos:line="648" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="649" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="650" pos:column="3">else <if pos:line="650" pos:column="8">if <condition pos:line="650" pos:column="11">(<expr><call><name pos:line="650" pos:column="12">strequal<pos:position pos:line="650" pos:column="20"/></name><argument_list pos:line="650" pos:column="20">(<argument><expr><name><name pos:line="650" pos:column="21">conn<pos:position pos:line="650" pos:column="25"/></name><operator pos:line="650" pos:column="25">-&gt;<pos:position pos:line="650" pos:column="30"/></operator><name pos:line="650" pos:column="27">protostr<pos:position pos:line="650" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="650" pos:column="37">"DICT"<pos:position pos:line="650" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="650" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="650" pos:column="45"/></condition><then pos:line="650" pos:column="45"> <block pos:line="650" pos:column="46">{
<cpp:ifndef pos:line="651" pos:column="1">#<cpp:directive pos:line="651" pos:column="2">ifndef<pos:position pos:line="651" pos:column="8"/></cpp:directive> <name pos:line="651" pos:column="9">CURL_DISABLE_DICT<pos:position pos:line="651" pos:column="26"/></name></cpp:ifndef>
    <expr_stmt><expr><name><name pos:line="652" pos:column="5">conn<pos:position pos:line="652" pos:column="9"/></name><operator pos:line="652" pos:column="9">-&gt;<pos:position pos:line="652" pos:column="14"/></operator><name pos:line="652" pos:column="11">protocol<pos:position pos:line="652" pos:column="19"/></name></name> <operator pos:line="652" pos:column="20">|=<pos:position pos:line="652" pos:column="22"/></operator> <name pos:line="652" pos:column="23">PROT_DICT<pos:position pos:line="652" pos:column="32"/></name></expr>;<pos:position pos:line="652" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="653" pos:column="5">conn<pos:position pos:line="653" pos:column="9"/></name><operator pos:line="653" pos:column="9">-&gt;<pos:position pos:line="653" pos:column="14"/></operator><name pos:line="653" pos:column="11">port<pos:position pos:line="653" pos:column="15"/></name></name> <operator pos:line="653" pos:column="16">=<pos:position pos:line="653" pos:column="17"/></operator> <name pos:line="653" pos:column="18">PORT_DICT<pos:position pos:line="653" pos:column="27"/></name></expr>;<pos:position pos:line="653" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="654" pos:column="5">conn<pos:position pos:line="654" pos:column="9"/></name><operator pos:line="654" pos:column="9">-&gt;<pos:position pos:line="654" pos:column="14"/></operator><name pos:line="654" pos:column="11">remote_port<pos:position pos:line="654" pos:column="22"/></name></name> <operator pos:line="654" pos:column="23">=<pos:position pos:line="654" pos:column="24"/></operator> <name pos:line="654" pos:column="25">PORT_DICT<pos:position pos:line="654" pos:column="34"/></name></expr>;<pos:position pos:line="654" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="655" pos:column="5">conn<pos:position pos:line="655" pos:column="9"/></name><operator pos:line="655" pos:column="9">-&gt;<pos:position pos:line="655" pos:column="14"/></operator><name pos:line="655" pos:column="11">curl_do<pos:position pos:line="655" pos:column="18"/></name></name> <operator pos:line="655" pos:column="19">=<pos:position pos:line="655" pos:column="20"/></operator> <name pos:line="655" pos:column="21">Curl_dict<pos:position pos:line="655" pos:column="30"/></name></expr>;<pos:position pos:line="655" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="656" pos:column="5">conn<pos:position pos:line="656" pos:column="9"/></name><operator pos:line="656" pos:column="9">-&gt;<pos:position pos:line="656" pos:column="14"/></operator><name pos:line="656" pos:column="11">curl_done<pos:position pos:line="656" pos:column="20"/></name></name> <operator pos:line="656" pos:column="21">=<pos:position pos:line="656" pos:column="22"/></operator> <name pos:line="656" pos:column="23">NULL<pos:position pos:line="656" pos:column="27"/></name></expr>;<pos:position pos:line="656" pos:column="28"/></expr_stmt> <comment type="block" pos:line="656" pos:column="29">/* no DICT-specific done */</comment>
<cpp:else pos:line="657" pos:column="1">#<cpp:directive pos:line="657" pos:column="2">else<pos:position pos:line="657" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="658" pos:column="5">failf<pos:position pos:line="658" pos:column="10"/></name><argument_list pos:line="658" pos:column="10">(<argument><expr><name pos:line="658" pos:column="11">data<pos:position pos:line="658" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="658" pos:column="17">LIBCURL_NAME<pos:position pos:line="658" pos:column="29"/></name>
          <literal type="string" pos:line="659" pos:column="11">" was built with DICT disabled!"<pos:position pos:line="659" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="659" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="659" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="660" pos:column="1">#<cpp:directive pos:line="660" pos:column="2">endif<pos:position pos:line="660" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="661" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="662" pos:column="3">else <if pos:line="662" pos:column="8">if <condition pos:line="662" pos:column="11">(<expr><call><name pos:line="662" pos:column="12">strequal<pos:position pos:line="662" pos:column="20"/></name><argument_list pos:line="662" pos:column="20">(<argument><expr><name><name pos:line="662" pos:column="21">conn<pos:position pos:line="662" pos:column="25"/></name><operator pos:line="662" pos:column="25">-&gt;<pos:position pos:line="662" pos:column="30"/></operator><name pos:line="662" pos:column="27">protostr<pos:position pos:line="662" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="662" pos:column="37">"LDAP"<pos:position pos:line="662" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="662" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="662" pos:column="45"/></condition><then pos:line="662" pos:column="45"> <block pos:line="662" pos:column="46">{
<cpp:ifndef pos:line="663" pos:column="1">#<cpp:directive pos:line="663" pos:column="2">ifndef<pos:position pos:line="663" pos:column="8"/></cpp:directive> <name pos:line="663" pos:column="9">CURL_DISABLE_LDAP<pos:position pos:line="663" pos:column="26"/></name></cpp:ifndef>
    <expr_stmt><expr><name><name pos:line="664" pos:column="5">conn<pos:position pos:line="664" pos:column="9"/></name><operator pos:line="664" pos:column="9">-&gt;<pos:position pos:line="664" pos:column="14"/></operator><name pos:line="664" pos:column="11">protocol<pos:position pos:line="664" pos:column="19"/></name></name> <operator pos:line="664" pos:column="20">|=<pos:position pos:line="664" pos:column="22"/></operator> <name pos:line="664" pos:column="23">PROT_LDAP<pos:position pos:line="664" pos:column="32"/></name></expr>;<pos:position pos:line="664" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="665" pos:column="5">conn<pos:position pos:line="665" pos:column="9"/></name><operator pos:line="665" pos:column="9">-&gt;<pos:position pos:line="665" pos:column="14"/></operator><name pos:line="665" pos:column="11">port<pos:position pos:line="665" pos:column="15"/></name></name> <operator pos:line="665" pos:column="16">=<pos:position pos:line="665" pos:column="17"/></operator> <name pos:line="665" pos:column="18">PORT_LDAP<pos:position pos:line="665" pos:column="27"/></name></expr>;<pos:position pos:line="665" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="666" pos:column="5">conn<pos:position pos:line="666" pos:column="9"/></name><operator pos:line="666" pos:column="9">-&gt;<pos:position pos:line="666" pos:column="14"/></operator><name pos:line="666" pos:column="11">remote_port<pos:position pos:line="666" pos:column="22"/></name></name> <operator pos:line="666" pos:column="23">=<pos:position pos:line="666" pos:column="24"/></operator> <name pos:line="666" pos:column="25">PORT_LDAP<pos:position pos:line="666" pos:column="34"/></name></expr>;<pos:position pos:line="666" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="667" pos:column="5">conn<pos:position pos:line="667" pos:column="9"/></name><operator pos:line="667" pos:column="9">-&gt;<pos:position pos:line="667" pos:column="14"/></operator><name pos:line="667" pos:column="11">curl_do<pos:position pos:line="667" pos:column="18"/></name></name> <operator pos:line="667" pos:column="19">=<pos:position pos:line="667" pos:column="20"/></operator> <name pos:line="667" pos:column="21">Curl_ldap<pos:position pos:line="667" pos:column="30"/></name></expr>;<pos:position pos:line="667" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="668" pos:column="5">conn<pos:position pos:line="668" pos:column="9"/></name><operator pos:line="668" pos:column="9">-&gt;<pos:position pos:line="668" pos:column="14"/></operator><name pos:line="668" pos:column="11">curl_done<pos:position pos:line="668" pos:column="20"/></name></name> <operator pos:line="668" pos:column="21">=<pos:position pos:line="668" pos:column="22"/></operator> <name pos:line="668" pos:column="23">NULL<pos:position pos:line="668" pos:column="27"/></name></expr>;<pos:position pos:line="668" pos:column="28"/></expr_stmt> <comment type="block" pos:line="668" pos:column="29">/* no LDAP-specific done */</comment>
<cpp:else pos:line="669" pos:column="1">#<cpp:directive pos:line="669" pos:column="2">else<pos:position pos:line="669" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="670" pos:column="5">failf<pos:position pos:line="670" pos:column="10"/></name><argument_list pos:line="670" pos:column="10">(<argument><expr><name pos:line="670" pos:column="11">data<pos:position pos:line="670" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="670" pos:column="17">LIBCURL_NAME<pos:position pos:line="670" pos:column="29"/></name>
          <literal type="string" pos:line="671" pos:column="11">" was built with LDAP disabled!"<pos:position pos:line="671" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="671" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="671" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="672" pos:column="1">#<cpp:directive pos:line="672" pos:column="2">endif<pos:position pos:line="672" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="673" pos:column="4"/></block></then></if></elseif>
  <elseif pos:line="674" pos:column="3">else <if pos:line="674" pos:column="8">if <condition pos:line="674" pos:column="11">(<expr><call><name pos:line="674" pos:column="12">strequal<pos:position pos:line="674" pos:column="20"/></name><argument_list pos:line="674" pos:column="20">(<argument><expr><name><name pos:line="674" pos:column="21">conn<pos:position pos:line="674" pos:column="25"/></name><operator pos:line="674" pos:column="25">-&gt;<pos:position pos:line="674" pos:column="30"/></operator><name pos:line="674" pos:column="27">protostr<pos:position pos:line="674" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="674" pos:column="37">"FILE"<pos:position pos:line="674" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="674" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="674" pos:column="45"/></condition><then pos:line="674" pos:column="45"> <block pos:line="674" pos:column="46">{
<cpp:ifndef pos:line="675" pos:column="1">#<cpp:directive pos:line="675" pos:column="2">ifndef<pos:position pos:line="675" pos:column="8"/></cpp:directive> <name pos:line="675" pos:column="9">CURL_DISABLE_FILE<pos:position pos:line="675" pos:column="26"/></name></cpp:ifndef>
    <expr_stmt><expr><name><name pos:line="676" pos:column="5">conn<pos:position pos:line="676" pos:column="9"/></name><operator pos:line="676" pos:column="9">-&gt;<pos:position pos:line="676" pos:column="14"/></operator><name pos:line="676" pos:column="11">protocol<pos:position pos:line="676" pos:column="19"/></name></name> <operator pos:line="676" pos:column="20">|=<pos:position pos:line="676" pos:column="22"/></operator> <name pos:line="676" pos:column="23">PROT_FILE<pos:position pos:line="676" pos:column="32"/></name></expr>;<pos:position pos:line="676" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="678" pos:column="5">conn<pos:position pos:line="678" pos:column="9"/></name><operator pos:line="678" pos:column="9">-&gt;<pos:position pos:line="678" pos:column="14"/></operator><name pos:line="678" pos:column="11">curl_do<pos:position pos:line="678" pos:column="18"/></name></name> <operator pos:line="678" pos:column="19">=<pos:position pos:line="678" pos:column="20"/></operator> <name pos:line="678" pos:column="21">Curl_file<pos:position pos:line="678" pos:column="30"/></name></expr>;<pos:position pos:line="678" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="679" pos:column="5">conn<pos:position pos:line="679" pos:column="9"/></name><operator pos:line="679" pos:column="9">-&gt;<pos:position pos:line="679" pos:column="14"/></operator><name pos:line="679" pos:column="11">curl_done<pos:position pos:line="679" pos:column="20"/></name></name> <operator pos:line="679" pos:column="21">=<pos:position pos:line="679" pos:column="22"/></operator> <name pos:line="679" pos:column="23">Curl_file_done<pos:position pos:line="679" pos:column="37"/></name></expr>;<pos:position pos:line="679" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="681" pos:column="5">/* anyway, this is supposed to be the connect function so we better
       at least check that the file is present here! */</comment>
    <expr_stmt><expr><name pos:line="683" pos:column="5">result<pos:position pos:line="683" pos:column="11"/></name> <operator pos:line="683" pos:column="12">=<pos:position pos:line="683" pos:column="13"/></operator> <call><name pos:line="683" pos:column="14">Curl_file_connect<pos:position pos:line="683" pos:column="31"/></name><argument_list pos:line="683" pos:column="31">(<argument><expr><name pos:line="683" pos:column="32">conn<pos:position pos:line="683" pos:column="36"/></name></expr></argument>)<pos:position pos:line="683" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="683" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="685" pos:column="5">/* Setup a "faked" transfer that'll do nothing */</comment>
    <if pos:line="686" pos:column="5">if<condition pos:line="686" pos:column="7">(<expr><name pos:line="686" pos:column="8">CURLE_OK<pos:position pos:line="686" pos:column="16"/></name> <operator pos:line="686" pos:column="17">==<pos:position pos:line="686" pos:column="19"/></operator> <name pos:line="686" pos:column="20">result<pos:position pos:line="686" pos:column="26"/></name></expr>)<pos:position pos:line="686" pos:column="27"/></condition><then pos:line="686" pos:column="27"> <block pos:line="686" pos:column="28">{
      <expr_stmt><expr><name><name pos:line="687" pos:column="7">conn<pos:position pos:line="687" pos:column="11"/></name><operator pos:line="687" pos:column="11">-&gt;<pos:position pos:line="687" pos:column="16"/></operator><name pos:line="687" pos:column="13">bits<pos:position pos:line="687" pos:column="17"/></name><operator pos:line="687" pos:column="17">.<pos:position pos:line="687" pos:column="18"/></operator><name pos:line="687" pos:column="18">tcpconnect<pos:position pos:line="687" pos:column="28"/></name></name> <operator pos:line="687" pos:column="29">=<pos:position pos:line="687" pos:column="30"/></operator> <name pos:line="687" pos:column="31">TRUE<pos:position pos:line="687" pos:column="35"/></name></expr>;<pos:position pos:line="687" pos:column="36"/></expr_stmt> <comment type="block" pos:line="687" pos:column="37">/* we are "connected */</comment>
      <expr_stmt><expr><name pos:line="688" pos:column="7">result<pos:position pos:line="688" pos:column="13"/></name> <operator pos:line="688" pos:column="14">=<pos:position pos:line="688" pos:column="15"/></operator> <call><name pos:line="688" pos:column="16">Curl_Transfer<pos:position pos:line="688" pos:column="29"/></name><argument_list pos:line="688" pos:column="29">(<argument><expr><name pos:line="688" pos:column="30">conn<pos:position pos:line="688" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="688" pos:column="36">-<pos:position pos:line="688" pos:column="37"/></operator><literal type="number" pos:line="688" pos:column="37">1<pos:position pos:line="688" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="688" pos:column="40">-<pos:position pos:line="688" pos:column="41"/></operator><literal type="number" pos:line="688" pos:column="41">1<pos:position pos:line="688" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="688" pos:column="44">FALSE<pos:position pos:line="688" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="688" pos:column="51">NULL<pos:position pos:line="688" pos:column="55"/></name></expr></argument>, <comment type="block" pos:line="688" pos:column="57">/* no download */</comment>
                             <argument><expr><operator pos:line="689" pos:column="30">-<pos:position pos:line="689" pos:column="31"/></operator><literal type="number" pos:line="689" pos:column="31">1<pos:position pos:line="689" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="689" pos:column="34">NULL<pos:position pos:line="689" pos:column="38"/></name></expr></argument>)<pos:position pos:line="689" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="689" pos:column="40"/></expr_stmt> <comment type="block" pos:line="689" pos:column="41">/* no upload */</comment>
    }<pos:position pos:line="690" pos:column="6"/></block></then></if>

    <return pos:line="692" pos:column="5">return <expr><name pos:line="692" pos:column="12">result<pos:position pos:line="692" pos:column="18"/></name></expr>;<pos:position pos:line="692" pos:column="19"/></return>
<cpp:else pos:line="693" pos:column="1">#<cpp:directive pos:line="693" pos:column="2">else<pos:position pos:line="693" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="694" pos:column="5">failf<pos:position pos:line="694" pos:column="10"/></name><argument_list pos:line="694" pos:column="10">(<argument><expr><name pos:line="694" pos:column="11">data<pos:position pos:line="694" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="694" pos:column="17">LIBCURL_NAME<pos:position pos:line="694" pos:column="29"/></name>
          <literal type="string" pos:line="695" pos:column="11">" was built with FILE disabled!"<pos:position pos:line="695" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="695" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="695" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="696" pos:column="1">#<cpp:directive pos:line="696" pos:column="2">endif<pos:position pos:line="696" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="697" pos:column="4"/></block></then></if></elseif>
  <else pos:line="698" pos:column="3">else <block pos:line="698" pos:column="8">{
    <comment type="block" pos:line="699" pos:column="5">/* We fell through all checks and thus we don't support the specified
       protocol */</comment>
    <expr_stmt><expr><call><name pos:line="701" pos:column="5">failf<pos:position pos:line="701" pos:column="10"/></name><argument_list pos:line="701" pos:column="10">(<argument><expr><name pos:line="701" pos:column="11">data<pos:position pos:line="701" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="701" pos:column="17">"Unsupported protocol: %s"<pos:position pos:line="701" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="701" pos:column="45">conn<pos:position pos:line="701" pos:column="49"/></name><operator pos:line="701" pos:column="49">-&gt;<pos:position pos:line="701" pos:column="54"/></operator><name pos:line="701" pos:column="51">protostr<pos:position pos:line="701" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="701" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="701" pos:column="61"/></expr_stmt>
    <return pos:line="702" pos:column="5">return <expr><name pos:line="702" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="702" pos:column="38"/></name></expr>;<pos:position pos:line="702" pos:column="39"/></return>
  }<pos:position pos:line="703" pos:column="4"/></block></else></if>

  <if pos:line="705" pos:column="3">if<condition pos:line="705" pos:column="5">(<expr><name><name pos:line="705" pos:column="6">data<pos:position pos:line="705" pos:column="10"/></name><operator pos:line="705" pos:column="10">-&gt;<pos:position pos:line="705" pos:column="15"/></operator><name pos:line="705" pos:column="12">change<pos:position pos:line="705" pos:column="18"/></name><operator pos:line="705" pos:column="18">.<pos:position pos:line="705" pos:column="19"/></operator><name pos:line="705" pos:column="19">proxy<pos:position pos:line="705" pos:column="24"/></name></name> <operator pos:line="705" pos:column="25">&amp;&amp;<pos:position pos:line="705" pos:column="35"/></operator> <operator pos:line="705" pos:column="28">*<pos:position pos:line="705" pos:column="29"/></operator><name><name pos:line="705" pos:column="29">data<pos:position pos:line="705" pos:column="33"/></name><operator pos:line="705" pos:column="33">-&gt;<pos:position pos:line="705" pos:column="38"/></operator><name pos:line="705" pos:column="35">change<pos:position pos:line="705" pos:column="41"/></name><operator pos:line="705" pos:column="41">.<pos:position pos:line="705" pos:column="42"/></operator><name pos:line="705" pos:column="42">proxy<pos:position pos:line="705" pos:column="47"/></name></name></expr>)<pos:position pos:line="705" pos:column="48"/></condition><then pos:line="705" pos:column="48"> <block pos:line="705" pos:column="49">{
    <comment type="block" pos:line="706" pos:column="5">/* If this is supposed to use a proxy, we need to figure out the proxy
       host name name, so that we can re-use an existing connection
       that may exist registered to the same proxy host. */</comment>

    <decl_stmt><decl><type><name pos:line="710" pos:column="5">char<pos:position pos:line="710" pos:column="9"/></name> <modifier pos:line="710" pos:column="10">*<pos:position pos:line="710" pos:column="11"/></modifier></type><name pos:line="710" pos:column="11">prox_portno<pos:position pos:line="710" pos:column="22"/></name></decl>;<pos:position pos:line="710" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="711" pos:column="5">char<pos:position pos:line="711" pos:column="9"/></name> <modifier pos:line="711" pos:column="10">*<pos:position pos:line="711" pos:column="11"/></modifier></type><name pos:line="711" pos:column="11">endofprot<pos:position pos:line="711" pos:column="20"/></name></decl>;<pos:position pos:line="711" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="713" pos:column="5">/* We need to make a duplicate of the proxy so that we can modify the
       string safely. */</comment>
    <decl_stmt><decl><type><name pos:line="715" pos:column="5">char<pos:position pos:line="715" pos:column="9"/></name> <modifier pos:line="715" pos:column="10">*<pos:position pos:line="715" pos:column="11"/></modifier></type><name pos:line="715" pos:column="11">proxydup<pos:position pos:line="715" pos:column="19"/></name><init pos:line="715" pos:column="19">=<expr><call><name pos:line="715" pos:column="20">strdup<pos:position pos:line="715" pos:column="26"/></name><argument_list pos:line="715" pos:column="26">(<argument><expr><name><name pos:line="715" pos:column="27">data<pos:position pos:line="715" pos:column="31"/></name><operator pos:line="715" pos:column="31">-&gt;<pos:position pos:line="715" pos:column="36"/></operator><name pos:line="715" pos:column="33">change<pos:position pos:line="715" pos:column="39"/></name><operator pos:line="715" pos:column="39">.<pos:position pos:line="715" pos:column="40"/></operator><name pos:line="715" pos:column="40">proxy<pos:position pos:line="715" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="715" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="715" pos:column="47"/></decl_stmt>

    <comment type="block" pos:line="717" pos:column="5">/* We use 'proxyptr' to point to the proxy name from now on... */</comment>
    <decl_stmt><decl><type><name pos:line="718" pos:column="5">char<pos:position pos:line="718" pos:column="9"/></name> <modifier pos:line="718" pos:column="10">*<pos:position pos:line="718" pos:column="11"/></modifier></type><name pos:line="718" pos:column="11">proxyptr<pos:position pos:line="718" pos:column="19"/></name><init pos:line="718" pos:column="19">=<expr><name pos:line="718" pos:column="20">proxydup<pos:position pos:line="718" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="718" pos:column="29"/></decl_stmt>

    <if pos:line="720" pos:column="5">if<condition pos:line="720" pos:column="7">(<expr><name pos:line="720" pos:column="8">NULL<pos:position pos:line="720" pos:column="12"/></name> <operator pos:line="720" pos:column="13">==<pos:position pos:line="720" pos:column="15"/></operator> <name pos:line="720" pos:column="16">proxydup<pos:position pos:line="720" pos:column="24"/></name></expr>)<pos:position pos:line="720" pos:column="25"/></condition><then pos:line="720" pos:column="25"> <block pos:line="720" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="721" pos:column="7">failf<pos:position pos:line="721" pos:column="12"/></name><argument_list pos:line="721" pos:column="12">(<argument><expr><name pos:line="721" pos:column="13">data<pos:position pos:line="721" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="721" pos:column="19">"memory shortage"<pos:position pos:line="721" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="721" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="721" pos:column="38"/></expr_stmt>
      <return pos:line="722" pos:column="7">return <expr><name pos:line="722" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="722" pos:column="33"/></name></expr>;<pos:position pos:line="722" pos:column="34"/></return>
    }<pos:position pos:line="723" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="725" pos:column="5">/* Daniel Dec 10, 1998:
       We do the proxy host string parsing here. We want the host name and the
       port name. Accept a protocol:// prefix, even though it should just be
       ignored. */</comment>

    <comment type="block" pos:line="730" pos:column="5">/* 1. skip the protocol part if present */</comment>
    <expr_stmt><expr><name pos:line="731" pos:column="5">endofprot<pos:position pos:line="731" pos:column="14"/></name><operator pos:line="731" pos:column="14">=<pos:position pos:line="731" pos:column="15"/></operator><call><name pos:line="731" pos:column="15">strstr<pos:position pos:line="731" pos:column="21"/></name><argument_list pos:line="731" pos:column="21">(<argument><expr><name pos:line="731" pos:column="22">proxyptr<pos:position pos:line="731" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="731" pos:column="32">"://"<pos:position pos:line="731" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="731" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="39"/></expr_stmt>
    <if pos:line="732" pos:column="5">if<condition pos:line="732" pos:column="7">(<expr><name pos:line="732" pos:column="8">endofprot<pos:position pos:line="732" pos:column="17"/></name></expr>)<pos:position pos:line="732" pos:column="18"/></condition><then pos:line="732" pos:column="18"> <block pos:line="732" pos:column="19">{
      <expr_stmt><expr><name pos:line="733" pos:column="7">proxyptr<pos:position pos:line="733" pos:column="15"/></name> <operator pos:line="733" pos:column="16">=<pos:position pos:line="733" pos:column="17"/></operator> <name pos:line="733" pos:column="18">endofprot<pos:position pos:line="733" pos:column="27"/></name><operator pos:line="733" pos:column="27">+<pos:position pos:line="733" pos:column="28"/></operator><literal type="number" pos:line="733" pos:column="28">3<pos:position pos:line="733" pos:column="29"/></literal></expr>;<pos:position pos:line="733" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="734" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="736" pos:column="5">/* allow user to specify proxy.server.com:1080 if desired */</comment>
    <expr_stmt><expr><name pos:line="737" pos:column="5">prox_portno<pos:position pos:line="737" pos:column="16"/></name> <operator pos:line="737" pos:column="17">=<pos:position pos:line="737" pos:column="18"/></operator> <call><name pos:line="737" pos:column="19">strchr<pos:position pos:line="737" pos:column="25"/></name> <argument_list pos:line="737" pos:column="26">(<argument><expr><name pos:line="737" pos:column="27">proxyptr<pos:position pos:line="737" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="737" pos:column="37">':'<pos:position pos:line="737" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="737" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="737" pos:column="42"/></expr_stmt>
    <if pos:line="738" pos:column="5">if <condition pos:line="738" pos:column="8">(<expr><name pos:line="738" pos:column="9">prox_portno<pos:position pos:line="738" pos:column="20"/></name></expr>)<pos:position pos:line="738" pos:column="21"/></condition><then pos:line="738" pos:column="21"> <block pos:line="738" pos:column="22">{
      <expr_stmt><expr><operator pos:line="739" pos:column="7">*<pos:position pos:line="739" pos:column="8"/></operator><name pos:line="739" pos:column="8">prox_portno<pos:position pos:line="739" pos:column="19"/></name> <operator pos:line="739" pos:column="20">=<pos:position pos:line="739" pos:column="21"/></operator> <literal type="number" pos:line="739" pos:column="22">0x0<pos:position pos:line="739" pos:column="25"/></literal></expr>;<pos:position pos:line="739" pos:column="26"/></expr_stmt> <comment type="block" pos:line="739" pos:column="27">/* cut off number from host name */</comment>
      <expr_stmt><expr><name pos:line="740" pos:column="7">prox_portno<pos:position pos:line="740" pos:column="18"/></name> <operator pos:line="740" pos:column="19">++<pos:position pos:line="740" pos:column="21"/></operator></expr>;<pos:position pos:line="740" pos:column="22"/></expr_stmt>
      <comment type="block" pos:line="741" pos:column="7">/* now set the local port number */</comment>
      <expr_stmt><expr><name><name pos:line="742" pos:column="7">conn<pos:position pos:line="742" pos:column="11"/></name><operator pos:line="742" pos:column="11">-&gt;<pos:position pos:line="742" pos:column="16"/></operator><name pos:line="742" pos:column="13">port<pos:position pos:line="742" pos:column="17"/></name></name> <operator pos:line="742" pos:column="18">=<pos:position pos:line="742" pos:column="19"/></operator> <call><name pos:line="742" pos:column="20">atoi<pos:position pos:line="742" pos:column="24"/></name><argument_list pos:line="742" pos:column="24">(<argument><expr><name pos:line="742" pos:column="25">prox_portno<pos:position pos:line="742" pos:column="36"/></name></expr></argument>)<pos:position pos:line="742" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="742" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="743" pos:column="6"/></block></then>
    <elseif pos:line="744" pos:column="5">else <if pos:line="744" pos:column="10">if<condition pos:line="744" pos:column="12">(<expr><name><name pos:line="744" pos:column="13">data<pos:position pos:line="744" pos:column="17"/></name><operator pos:line="744" pos:column="17">-&gt;<pos:position pos:line="744" pos:column="22"/></operator><name pos:line="744" pos:column="19">set<pos:position pos:line="744" pos:column="22"/></name><operator pos:line="744" pos:column="22">.<pos:position pos:line="744" pos:column="23"/></operator><name pos:line="744" pos:column="23">proxyport<pos:position pos:line="744" pos:column="32"/></name></name></expr>)<pos:position pos:line="744" pos:column="33"/></condition><then pos:line="744" pos:column="33"> <block pos:line="744" pos:column="34">{
      <comment type="block" pos:line="745" pos:column="7">/* None given in the proxy string, then get the default one if it is
         given */</comment>
      <expr_stmt><expr><name><name pos:line="747" pos:column="7">conn<pos:position pos:line="747" pos:column="11"/></name><operator pos:line="747" pos:column="11">-&gt;<pos:position pos:line="747" pos:column="16"/></operator><name pos:line="747" pos:column="13">port<pos:position pos:line="747" pos:column="17"/></name></name> <operator pos:line="747" pos:column="18">=<pos:position pos:line="747" pos:column="19"/></operator> <name><name pos:line="747" pos:column="20">data<pos:position pos:line="747" pos:column="24"/></name><operator pos:line="747" pos:column="24">-&gt;<pos:position pos:line="747" pos:column="29"/></operator><name pos:line="747" pos:column="26">set<pos:position pos:line="747" pos:column="29"/></name><operator pos:line="747" pos:column="29">.<pos:position pos:line="747" pos:column="30"/></operator><name pos:line="747" pos:column="30">proxyport<pos:position pos:line="747" pos:column="39"/></name></name></expr>;<pos:position pos:line="747" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="748" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="750" pos:column="5">/* now, clone the cleaned proxy host name */</comment>
    <expr_stmt><expr><name><name pos:line="751" pos:column="5">conn<pos:position pos:line="751" pos:column="9"/></name><operator pos:line="751" pos:column="9">-&gt;<pos:position pos:line="751" pos:column="14"/></operator><name pos:line="751" pos:column="11">proxy<pos:position pos:line="751" pos:column="16"/></name><operator pos:line="751" pos:column="16">.<pos:position pos:line="751" pos:column="17"/></operator><name pos:line="751" pos:column="17">rawalloc<pos:position pos:line="751" pos:column="25"/></name></name> <operator pos:line="751" pos:column="26">=<pos:position pos:line="751" pos:column="27"/></operator> <call><name pos:line="751" pos:column="28">strdup<pos:position pos:line="751" pos:column="34"/></name><argument_list pos:line="751" pos:column="34">(<argument><expr><name pos:line="751" pos:column="35">proxyptr<pos:position pos:line="751" pos:column="43"/></name></expr></argument>)<pos:position pos:line="751" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="751" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="752" pos:column="5">conn<pos:position pos:line="752" pos:column="9"/></name><operator pos:line="752" pos:column="9">-&gt;<pos:position pos:line="752" pos:column="14"/></operator><name pos:line="752" pos:column="11">proxy<pos:position pos:line="752" pos:column="16"/></name><operator pos:line="752" pos:column="16">.<pos:position pos:line="752" pos:column="17"/></operator><name pos:line="752" pos:column="17">name<pos:position pos:line="752" pos:column="21"/></name></name> <operator pos:line="752" pos:column="22">=<pos:position pos:line="752" pos:column="23"/></operator> <name><name pos:line="752" pos:column="24">conn<pos:position pos:line="752" pos:column="28"/></name><operator pos:line="752" pos:column="28">-&gt;<pos:position pos:line="752" pos:column="33"/></operator><name pos:line="752" pos:column="30">proxy<pos:position pos:line="752" pos:column="35"/></name><operator pos:line="752" pos:column="35">.<pos:position pos:line="752" pos:column="36"/></operator><name pos:line="752" pos:column="36">rawalloc<pos:position pos:line="752" pos:column="44"/></name></name></expr>;<pos:position pos:line="752" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="754" pos:column="5">free<pos:position pos:line="754" pos:column="9"/></name><argument_list pos:line="754" pos:column="9">(<argument><expr><name pos:line="754" pos:column="10">proxydup<pos:position pos:line="754" pos:column="18"/></name></expr></argument>)<pos:position pos:line="754" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="754" pos:column="20"/></expr_stmt> <comment type="block" pos:line="754" pos:column="21">/* free the duplicate pointer and not the modified */</comment>
    <if pos:line="755" pos:column="5">if<condition pos:line="755" pos:column="7">(<expr><operator pos:line="755" pos:column="8">!<pos:position pos:line="755" pos:column="9"/></operator><name><name pos:line="755" pos:column="9">conn<pos:position pos:line="755" pos:column="13"/></name><operator pos:line="755" pos:column="13">-&gt;<pos:position pos:line="755" pos:column="18"/></operator><name pos:line="755" pos:column="15">proxy<pos:position pos:line="755" pos:column="20"/></name><operator pos:line="755" pos:column="20">.<pos:position pos:line="755" pos:column="21"/></operator><name pos:line="755" pos:column="21">rawalloc<pos:position pos:line="755" pos:column="29"/></name></name></expr>)<pos:position pos:line="755" pos:column="30"/></condition><then pos:line="755" pos:column="30">
      <block type="pseudo"><return pos:line="756" pos:column="7">return <expr><name pos:line="756" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="756" pos:column="33"/></name></expr>;<pos:position pos:line="756" pos:column="34"/></return></block></then></if>
  }<pos:position pos:line="757" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="759" pos:column="3">/*************************************************************
   * If the protcol is using SSL and HTTP proxy is used, we set
   * the tunnel_proxy bit.
   *************************************************************/</comment>
  <if pos:line="763" pos:column="3">if<condition pos:line="763" pos:column="5">(<expr><operator pos:line="763" pos:column="6">(<pos:position pos:line="763" pos:column="7"/></operator><name><name pos:line="763" pos:column="7">conn<pos:position pos:line="763" pos:column="11"/></name><operator pos:line="763" pos:column="11">-&gt;<pos:position pos:line="763" pos:column="16"/></operator><name pos:line="763" pos:column="13">protocol<pos:position pos:line="763" pos:column="21"/></name></name><operator pos:line="763" pos:column="21">&amp;<pos:position pos:line="763" pos:column="26"/></operator><name pos:line="763" pos:column="22">PROT_SSL<pos:position pos:line="763" pos:column="30"/></name><operator pos:line="763" pos:column="30">)<pos:position pos:line="763" pos:column="31"/></operator> <operator pos:line="763" pos:column="32">&amp;&amp;<pos:position pos:line="763" pos:column="42"/></operator> <name><name pos:line="763" pos:column="35">conn<pos:position pos:line="763" pos:column="39"/></name><operator pos:line="763" pos:column="39">-&gt;<pos:position pos:line="763" pos:column="44"/></operator><name pos:line="763" pos:column="41">bits<pos:position pos:line="763" pos:column="45"/></name><operator pos:line="763" pos:column="45">.<pos:position pos:line="763" pos:column="46"/></operator><name pos:line="763" pos:column="46">httpproxy<pos:position pos:line="763" pos:column="55"/></name></name></expr>)<pos:position pos:line="763" pos:column="56"/></condition><then pos:line="763" pos:column="56">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="764" pos:column="5">conn<pos:position pos:line="764" pos:column="9"/></name><operator pos:line="764" pos:column="9">-&gt;<pos:position pos:line="764" pos:column="14"/></operator><name pos:line="764" pos:column="11">bits<pos:position pos:line="764" pos:column="15"/></name><operator pos:line="764" pos:column="15">.<pos:position pos:line="764" pos:column="16"/></operator><name pos:line="764" pos:column="16">tunnel_proxy<pos:position pos:line="764" pos:column="28"/></name></name> <operator pos:line="764" pos:column="29">=<pos:position pos:line="764" pos:column="30"/></operator> <name pos:line="764" pos:column="31">TRUE<pos:position pos:line="764" pos:column="35"/></name></expr>;<pos:position pos:line="764" pos:column="36"/></expr_stmt></block></then></if>

  <comment type="block" format="doxygen" pos:line="766" pos:column="3">/*************************************************************
   * Take care of user and password authentication stuff
   *************************************************************/</comment>

  <comment type="block" pos:line="770" pos:column="3">/*
   * Inputs: data-&gt;set.userpwd   (CURLOPT_USERPWD)
   *         data-&gt;set.fpasswd   (CURLOPT_PASSWDFUNCTION)
   *         data-&gt;set.use_netrc (CURLOPT_NETRC)
   *         conn-&gt;host.name
   *         netrc file
   *         hard-coded defaults
   *
   * Outputs: (almost :- all currently undefined)
   *          conn-&gt;bits.user_passwd  - non-zero if non-default passwords exist
   *          conn-&gt;user              - non-zero length if defined
   *          conn-&gt;passwd            -   ditto
   *          conn-&gt;host.name          - remove user name and password
   */</comment>

  <comment type="block" pos:line="785" pos:column="3">/* At this point, we're hoping all the other special cases have
   * been taken care of, so conn-&gt;host.name is at most
   *    [user[:password]]@]hostname
   *
   * We need somewhere to put the embedded details, so do that first.
   */</comment>

  <expr_stmt><expr><name><name pos:line="792" pos:column="3">user<pos:position pos:line="792" pos:column="7"/></name><index pos:line="792" pos:column="7">[<expr><literal type="number" pos:line="792" pos:column="8">0<pos:position pos:line="792" pos:column="9"/></literal></expr>]<pos:position pos:line="792" pos:column="10"/></index></name> <operator pos:line="792" pos:column="11">=<pos:position pos:line="792" pos:column="12"/></operator><literal type="number" pos:line="792" pos:column="12">0<pos:position pos:line="792" pos:column="13"/></literal></expr>;<pos:position pos:line="792" pos:column="14"/></expr_stmt>   <comment type="block" pos:line="792" pos:column="17">/* to make everything well-defined */</comment>
  <expr_stmt><expr><name><name pos:line="793" pos:column="3">passwd<pos:position pos:line="793" pos:column="9"/></name><index pos:line="793" pos:column="9">[<expr><literal type="number" pos:line="793" pos:column="10">0<pos:position pos:line="793" pos:column="11"/></literal></expr>]<pos:position pos:line="793" pos:column="12"/></index></name><operator pos:line="793" pos:column="12">=<pos:position pos:line="793" pos:column="13"/></operator><literal type="number" pos:line="793" pos:column="13">0<pos:position pos:line="793" pos:column="14"/></literal></expr>;<pos:position pos:line="793" pos:column="15"/></expr_stmt>

  <if pos:line="795" pos:column="3">if <condition pos:line="795" pos:column="6">(<expr><name><name pos:line="795" pos:column="7">conn<pos:position pos:line="795" pos:column="11"/></name><operator pos:line="795" pos:column="11">-&gt;<pos:position pos:line="795" pos:column="16"/></operator><name pos:line="795" pos:column="13">protocol<pos:position pos:line="795" pos:column="21"/></name></name> <operator pos:line="795" pos:column="22">&amp;<pos:position pos:line="795" pos:column="27"/></operator> <operator pos:line="795" pos:column="24">(<pos:position pos:line="795" pos:column="25"/></operator><name pos:line="795" pos:column="25">PROT_FTP<pos:position pos:line="795" pos:column="33"/></name><operator pos:line="795" pos:column="33">|<pos:position pos:line="795" pos:column="34"/></operator><name pos:line="795" pos:column="34">PROT_HTTP<pos:position pos:line="795" pos:column="43"/></name><operator pos:line="795" pos:column="43">)<pos:position pos:line="795" pos:column="44"/></operator></expr>)<pos:position pos:line="795" pos:column="45"/></condition><then pos:line="795" pos:column="45"> <block pos:line="795" pos:column="46">{
    <comment type="block" pos:line="796" pos:column="5">/* This is a FTP or HTTP URL, we will now try to extract the possible
     * user+password pair in a string like:
     * ftp://user:password@ftp.my.site:8021/README */</comment>
    <decl_stmt><decl><type><name pos:line="799" pos:column="5">char<pos:position pos:line="799" pos:column="9"/></name> <modifier pos:line="799" pos:column="10">*<pos:position pos:line="799" pos:column="11"/></modifier></type><name pos:line="799" pos:column="11">ptr<pos:position pos:line="799" pos:column="14"/></name><init pos:line="799" pos:column="14">=<expr><call><name pos:line="799" pos:column="15">strchr<pos:position pos:line="799" pos:column="21"/></name><argument_list pos:line="799" pos:column="21">(<argument><expr><name><name pos:line="799" pos:column="22">conn<pos:position pos:line="799" pos:column="26"/></name><operator pos:line="799" pos:column="26">-&gt;<pos:position pos:line="799" pos:column="31"/></operator><name pos:line="799" pos:column="28">host<pos:position pos:line="799" pos:column="32"/></name><operator pos:line="799" pos:column="32">.<pos:position pos:line="799" pos:column="33"/></operator><name pos:line="799" pos:column="33">name<pos:position pos:line="799" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="799" pos:column="39">'@'<pos:position pos:line="799" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="799" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="799" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="800" pos:column="5">char<pos:position pos:line="800" pos:column="9"/></name> <modifier pos:line="800" pos:column="10">*<pos:position pos:line="800" pos:column="11"/></modifier></type><name pos:line="800" pos:column="11">userpass<pos:position pos:line="800" pos:column="19"/></name> <init pos:line="800" pos:column="20">= <expr><name><name pos:line="800" pos:column="22">conn<pos:position pos:line="800" pos:column="26"/></name><operator pos:line="800" pos:column="26">-&gt;<pos:position pos:line="800" pos:column="31"/></operator><name pos:line="800" pos:column="28">host<pos:position pos:line="800" pos:column="32"/></name><operator pos:line="800" pos:column="32">.<pos:position pos:line="800" pos:column="33"/></operator><name pos:line="800" pos:column="33">name<pos:position pos:line="800" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="800" pos:column="38"/></decl_stmt>
    <if pos:line="801" pos:column="5">if<condition pos:line="801" pos:column="7">(<expr><name pos:line="801" pos:column="8">ptr<pos:position pos:line="801" pos:column="11"/></name> <operator pos:line="801" pos:column="12">!=<pos:position pos:line="801" pos:column="14"/></operator> <name pos:line="801" pos:column="15">NULL<pos:position pos:line="801" pos:column="19"/></name></expr>)<pos:position pos:line="801" pos:column="20"/></condition><then pos:line="801" pos:column="20"> <block pos:line="801" pos:column="21">{
      <comment type="block" pos:line="802" pos:column="7">/* there's a user+password given here, to the left of the @ */</comment>

      <expr_stmt><expr><name><name pos:line="804" pos:column="7">conn<pos:position pos:line="804" pos:column="11"/></name><operator pos:line="804" pos:column="11">-&gt;<pos:position pos:line="804" pos:column="16"/></operator><name pos:line="804" pos:column="13">host<pos:position pos:line="804" pos:column="17"/></name><operator pos:line="804" pos:column="17">.<pos:position pos:line="804" pos:column="18"/></operator><name pos:line="804" pos:column="18">name<pos:position pos:line="804" pos:column="22"/></name></name> <operator pos:line="804" pos:column="23">=<pos:position pos:line="804" pos:column="24"/></operator> <operator pos:line="804" pos:column="25">++<pos:position pos:line="804" pos:column="27"/></operator><name pos:line="804" pos:column="27">ptr<pos:position pos:line="804" pos:column="30"/></name></expr>;<pos:position pos:line="804" pos:column="31"/></expr_stmt>

      <comment type="block" pos:line="806" pos:column="7">/* So the hostname is sane.  Only bother interpreting the
       * results if we could care.  It could still be wasted
       * work because it might be overtaken by the programmatically
       * set user/passwd, but doing that first adds more cases here :-(
       */</comment>

      <if pos:line="812" pos:column="7">if <condition pos:line="812" pos:column="10">(<expr><name><name pos:line="812" pos:column="11">data<pos:position pos:line="812" pos:column="15"/></name><operator pos:line="812" pos:column="15">-&gt;<pos:position pos:line="812" pos:column="20"/></operator><name pos:line="812" pos:column="17">set<pos:position pos:line="812" pos:column="20"/></name><operator pos:line="812" pos:column="20">.<pos:position pos:line="812" pos:column="21"/></operator><name pos:line="812" pos:column="21">use_netrc<pos:position pos:line="812" pos:column="30"/></name></name> <operator pos:line="812" pos:column="31">!=<pos:position pos:line="812" pos:column="33"/></operator> <name pos:line="812" pos:column="34">CURL_NETRC_REQUIRED<pos:position pos:line="812" pos:column="53"/></name></expr>)<pos:position pos:line="812" pos:column="54"/></condition><then pos:line="812" pos:column="54"> <block pos:line="812" pos:column="55">{
        <comment type="block" pos:line="813" pos:column="9">/* We could use the one in the URL */</comment>

        <expr_stmt><expr><name><name pos:line="815" pos:column="9">conn<pos:position pos:line="815" pos:column="13"/></name><operator pos:line="815" pos:column="13">-&gt;<pos:position pos:line="815" pos:column="18"/></operator><name pos:line="815" pos:column="15">bits<pos:position pos:line="815" pos:column="19"/></name><operator pos:line="815" pos:column="19">.<pos:position pos:line="815" pos:column="20"/></operator><name pos:line="815" pos:column="20">user_passwd<pos:position pos:line="815" pos:column="31"/></name></name> <operator pos:line="815" pos:column="32">=<pos:position pos:line="815" pos:column="33"/></operator> <literal type="number" pos:line="815" pos:column="34">1<pos:position pos:line="815" pos:column="35"/></literal></expr>;<pos:position pos:line="815" pos:column="36"/></expr_stmt> <comment type="block" pos:line="815" pos:column="37">/* enable user+password */</comment>

        <if pos:line="817" pos:column="9">if<condition pos:line="817" pos:column="11">(<expr><operator pos:line="817" pos:column="12">*<pos:position pos:line="817" pos:column="13"/></operator><name pos:line="817" pos:column="13">userpass<pos:position pos:line="817" pos:column="21"/></name> <operator pos:line="817" pos:column="22">!=<pos:position pos:line="817" pos:column="24"/></operator> <literal type="char" pos:line="817" pos:column="25">':'<pos:position pos:line="817" pos:column="28"/></literal></expr>)<pos:position pos:line="817" pos:column="29"/></condition><then pos:line="817" pos:column="29"> <block pos:line="817" pos:column="30">{
          <comment type="block" pos:line="818" pos:column="11">/* the name is given, get user+password */</comment>
          <expr_stmt><expr><call><name pos:line="819" pos:column="11">sscanf<pos:position pos:line="819" pos:column="17"/></name><argument_list pos:line="819" pos:column="17">(<argument><expr><name pos:line="819" pos:column="18">userpass<pos:position pos:line="819" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="819" pos:column="28">"%127[^:@]:%127[^@]"<pos:position pos:line="819" pos:column="48"/></literal></expr></argument>,
                 <argument><expr><name pos:line="820" pos:column="18">user<pos:position pos:line="820" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="820" pos:column="24">passwd<pos:position pos:line="820" pos:column="30"/></name></expr></argument>)<pos:position pos:line="820" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="820" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="821" pos:column="10"/></block></then>
        <else pos:line="822" pos:column="9">else
          <comment type="block" pos:line="823" pos:column="11">/* no name given, get the password only */</comment>
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="824" pos:column="11">sscanf<pos:position pos:line="824" pos:column="17"/></name><argument_list pos:line="824" pos:column="17">(<argument><expr><name pos:line="824" pos:column="18">userpass<pos:position pos:line="824" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="824" pos:column="28">":%127[^@]"<pos:position pos:line="824" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="824" pos:column="41">passwd<pos:position pos:line="824" pos:column="47"/></name></expr></argument>)<pos:position pos:line="824" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="824" pos:column="49"/></expr_stmt></block></else></if>

        <if pos:line="826" pos:column="9">if<condition pos:line="826" pos:column="11">(<expr><name><name pos:line="826" pos:column="12">user<pos:position pos:line="826" pos:column="16"/></name><index pos:line="826" pos:column="16">[<expr><literal type="number" pos:line="826" pos:column="17">0<pos:position pos:line="826" pos:column="18"/></literal></expr>]<pos:position pos:line="826" pos:column="19"/></index></name></expr>)<pos:position pos:line="826" pos:column="20"/></condition><then pos:line="826" pos:column="20"> <block pos:line="826" pos:column="21">{
          <decl_stmt><decl><type><name pos:line="827" pos:column="11">char<pos:position pos:line="827" pos:column="15"/></name> <modifier pos:line="827" pos:column="16">*<pos:position pos:line="827" pos:column="17"/></modifier></type><name pos:line="827" pos:column="17">newname<pos:position pos:line="827" pos:column="24"/></name><init pos:line="827" pos:column="24">=<expr><call><name pos:line="827" pos:column="25">curl_unescape<pos:position pos:line="827" pos:column="38"/></name><argument_list pos:line="827" pos:column="38">(<argument><expr><name pos:line="827" pos:column="39">user<pos:position pos:line="827" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="827" pos:column="45">0<pos:position pos:line="827" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="827" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="827" pos:column="48"/></decl_stmt>
          <if pos:line="828" pos:column="11">if<condition pos:line="828" pos:column="13">(<expr><operator pos:line="828" pos:column="14">!<pos:position pos:line="828" pos:column="15"/></operator><name pos:line="828" pos:column="15">newname<pos:position pos:line="828" pos:column="22"/></name></expr>)<pos:position pos:line="828" pos:column="23"/></condition><then pos:line="828" pos:column="23">
            <block type="pseudo"><return pos:line="829" pos:column="13">return <expr><name pos:line="829" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="829" pos:column="39"/></name></expr>;<pos:position pos:line="829" pos:column="40"/></return></block></then></if>
          <if pos:line="830" pos:column="11">if<condition pos:line="830" pos:column="13">(<expr><call><name pos:line="830" pos:column="14">strlen<pos:position pos:line="830" pos:column="20"/></name><argument_list pos:line="830" pos:column="20">(<argument><expr><name pos:line="830" pos:column="21">newname<pos:position pos:line="830" pos:column="28"/></name></expr></argument>)<pos:position pos:line="830" pos:column="29"/></argument_list></call> <operator pos:line="830" pos:column="30">&lt;<pos:position pos:line="830" pos:column="34"/></operator> <sizeof pos:line="830" pos:column="32">sizeof<argument_list pos:line="830" pos:column="38">(<argument><expr><name pos:line="830" pos:column="39">user<pos:position pos:line="830" pos:column="43"/></name></expr></argument>)<pos:position pos:line="830" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="830" pos:column="45"/></condition><then pos:line="830" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="831" pos:column="13">strcpy<pos:position pos:line="831" pos:column="19"/></name><argument_list pos:line="831" pos:column="19">(<argument><expr><name pos:line="831" pos:column="20">user<pos:position pos:line="831" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="831" pos:column="26">newname<pos:position pos:line="831" pos:column="33"/></name></expr></argument>)<pos:position pos:line="831" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="831" pos:column="35"/></expr_stmt></block></then></if>

          <comment type="block" pos:line="833" pos:column="11">/* if the new name is longer than accepted, then just use
             the unconverted name, it'll be wrong but what the heck */</comment>
          <expr_stmt><expr><call><name pos:line="835" pos:column="11">free<pos:position pos:line="835" pos:column="15"/></name><argument_list pos:line="835" pos:column="15">(<argument><expr><name pos:line="835" pos:column="16">newname<pos:position pos:line="835" pos:column="23"/></name></expr></argument>)<pos:position pos:line="835" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="835" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="836" pos:column="10"/></block></then></if>
        <if pos:line="837" pos:column="9">if <condition pos:line="837" pos:column="12">(<expr><name><name pos:line="837" pos:column="13">passwd<pos:position pos:line="837" pos:column="19"/></name><index pos:line="837" pos:column="19">[<expr><literal type="number" pos:line="837" pos:column="20">0<pos:position pos:line="837" pos:column="21"/></literal></expr>]<pos:position pos:line="837" pos:column="22"/></index></name></expr>)<pos:position pos:line="837" pos:column="23"/></condition><then pos:line="837" pos:column="23"> <block pos:line="837" pos:column="24">{
          <comment type="block" pos:line="838" pos:column="11">/* we have a password found in the URL, decode it! */</comment>
          <decl_stmt><decl><type><name pos:line="839" pos:column="11">char<pos:position pos:line="839" pos:column="15"/></name> <modifier pos:line="839" pos:column="16">*<pos:position pos:line="839" pos:column="17"/></modifier></type><name pos:line="839" pos:column="17">newpasswd<pos:position pos:line="839" pos:column="26"/></name><init pos:line="839" pos:column="26">=<expr><call><name pos:line="839" pos:column="27">curl_unescape<pos:position pos:line="839" pos:column="40"/></name><argument_list pos:line="839" pos:column="40">(<argument><expr><name pos:line="839" pos:column="41">passwd<pos:position pos:line="839" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="839" pos:column="49">0<pos:position pos:line="839" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="839" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="839" pos:column="52"/></decl_stmt>
          <if pos:line="840" pos:column="11">if<condition pos:line="840" pos:column="13">(<expr><operator pos:line="840" pos:column="14">!<pos:position pos:line="840" pos:column="15"/></operator><name pos:line="840" pos:column="15">newpasswd<pos:position pos:line="840" pos:column="24"/></name></expr>)<pos:position pos:line="840" pos:column="25"/></condition><then pos:line="840" pos:column="25">
            <block type="pseudo"><return pos:line="841" pos:column="13">return <expr><name pos:line="841" pos:column="20">CURLE_OUT_OF_MEMORY<pos:position pos:line="841" pos:column="39"/></name></expr>;<pos:position pos:line="841" pos:column="40"/></return></block></then></if>
          <if pos:line="842" pos:column="11">if<condition pos:line="842" pos:column="13">(<expr><call><name pos:line="842" pos:column="14">strlen<pos:position pos:line="842" pos:column="20"/></name><argument_list pos:line="842" pos:column="20">(<argument><expr><name pos:line="842" pos:column="21">newpasswd<pos:position pos:line="842" pos:column="30"/></name></expr></argument>)<pos:position pos:line="842" pos:column="31"/></argument_list></call> <operator pos:line="842" pos:column="32">&lt;<pos:position pos:line="842" pos:column="36"/></operator> <sizeof pos:line="842" pos:column="34">sizeof<argument_list pos:line="842" pos:column="40">(<argument><expr><name pos:line="842" pos:column="41">passwd<pos:position pos:line="842" pos:column="47"/></name></expr></argument>)<pos:position pos:line="842" pos:column="48"/></argument_list></sizeof></expr>)<pos:position pos:line="842" pos:column="49"/></condition><then pos:line="842" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="843" pos:column="13">strcpy<pos:position pos:line="843" pos:column="19"/></name><argument_list pos:line="843" pos:column="19">(<argument><expr><name pos:line="843" pos:column="20">passwd<pos:position pos:line="843" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="843" pos:column="28">newpasswd<pos:position pos:line="843" pos:column="37"/></name></expr></argument>)<pos:position pos:line="843" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="843" pos:column="39"/></expr_stmt></block></then></if>

          <expr_stmt><expr><call><name pos:line="845" pos:column="11">free<pos:position pos:line="845" pos:column="15"/></name><argument_list pos:line="845" pos:column="15">(<argument><expr><name pos:line="845" pos:column="16">newpasswd<pos:position pos:line="845" pos:column="25"/></name></expr></argument>)<pos:position pos:line="845" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="845" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="846" pos:column="10"/></block></then></if>
      }<pos:position pos:line="847" pos:column="8"/></block></then></if>
    }<pos:position pos:line="848" pos:column="6"/></block></then></if>
  }<pos:position pos:line="849" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="851" pos:column="3">/*************************************************************
   * Figure out the remote port number
   *
   * No matter if we use a proxy or not, we have to figure out the remote
   * port number of various reasons.
   *
   * To be able to detect port number flawlessly, we must not confuse them
   * IPv6-specified addresses in the [0::1] style. (RFC2732)
   *
   * The conn-&gt;host.name is currently [user:passwd@]host[:port] where host
   * could be a hostname, IPv4 address or IPv6 address.
   *************************************************************/</comment>
  <if pos:line="863" pos:column="3">if<condition pos:line="863" pos:column="5">(<expr><operator pos:line="863" pos:column="6">(<pos:position pos:line="863" pos:column="7"/></operator><literal type="number" pos:line="863" pos:column="7">1<pos:position pos:line="863" pos:column="8"/></literal> <operator pos:line="863" pos:column="9">==<pos:position pos:line="863" pos:column="11"/></operator> <call><name pos:line="863" pos:column="12">sscanf<pos:position pos:line="863" pos:column="18"/></name><argument_list pos:line="863" pos:column="18">(<argument><expr><name><name pos:line="863" pos:column="19">conn<pos:position pos:line="863" pos:column="23"/></name><operator pos:line="863" pos:column="23">-&gt;<pos:position pos:line="863" pos:column="28"/></operator><name pos:line="863" pos:column="25">host<pos:position pos:line="863" pos:column="29"/></name><operator pos:line="863" pos:column="29">.<pos:position pos:line="863" pos:column="30"/></operator><name pos:line="863" pos:column="30">name<pos:position pos:line="863" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="863" pos:column="36">"[%*39[0-9a-fA-F:.]%c"<pos:position pos:line="863" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="863" pos:column="60">&amp;<pos:position pos:line="863" pos:column="65"/></operator><name pos:line="863" pos:column="61">endbracket<pos:position pos:line="863" pos:column="71"/></name></expr></argument>)<pos:position pos:line="863" pos:column="72"/></argument_list></call><operator pos:line="863" pos:column="72">)<pos:position pos:line="863" pos:column="73"/></operator> <operator pos:line="863" pos:column="74">&amp;&amp;<pos:position pos:line="863" pos:column="84"/></operator>
     <operator pos:line="864" pos:column="6">(<pos:position pos:line="864" pos:column="7"/></operator><literal type="char" pos:line="864" pos:column="7">']'<pos:position pos:line="864" pos:column="10"/></literal> <operator pos:line="864" pos:column="11">==<pos:position pos:line="864" pos:column="13"/></operator> <name pos:line="864" pos:column="14">endbracket<pos:position pos:line="864" pos:column="24"/></name><operator pos:line="864" pos:column="24">)<pos:position pos:line="864" pos:column="25"/></operator></expr>)<pos:position pos:line="864" pos:column="26"/></condition><then pos:line="864" pos:column="26"> <block pos:line="864" pos:column="27">{
    <comment type="block" pos:line="865" pos:column="5">/* this is a RFC2732-style specified IP-address */</comment>
    <expr_stmt><expr><name><name pos:line="866" pos:column="5">conn<pos:position pos:line="866" pos:column="9"/></name><operator pos:line="866" pos:column="9">-&gt;<pos:position pos:line="866" pos:column="14"/></operator><name pos:line="866" pos:column="11">bits<pos:position pos:line="866" pos:column="15"/></name><operator pos:line="866" pos:column="15">.<pos:position pos:line="866" pos:column="16"/></operator><name pos:line="866" pos:column="16">ipv6_ip<pos:position pos:line="866" pos:column="23"/></name></name> <operator pos:line="866" pos:column="24">=<pos:position pos:line="866" pos:column="25"/></operator> <name pos:line="866" pos:column="26">TRUE<pos:position pos:line="866" pos:column="30"/></name></expr>;<pos:position pos:line="866" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="868" pos:column="5">conn<pos:position pos:line="868" pos:column="9"/></name><operator pos:line="868" pos:column="9">-&gt;<pos:position pos:line="868" pos:column="14"/></operator><name pos:line="868" pos:column="11">host<pos:position pos:line="868" pos:column="15"/></name><operator pos:line="868" pos:column="15">.<pos:position pos:line="868" pos:column="16"/></operator><name pos:line="868" pos:column="16">name<pos:position pos:line="868" pos:column="20"/></name></name><operator pos:line="868" pos:column="20">++<pos:position pos:line="868" pos:column="22"/></operator></expr>;<pos:position pos:line="868" pos:column="23"/></expr_stmt> <comment type="block" pos:line="868" pos:column="24">/* pass the starting bracket */</comment>
    <expr_stmt><expr><name pos:line="869" pos:column="5">tmp<pos:position pos:line="869" pos:column="8"/></name> <operator pos:line="869" pos:column="9">=<pos:position pos:line="869" pos:column="10"/></operator> <call><name pos:line="869" pos:column="11">strchr<pos:position pos:line="869" pos:column="17"/></name><argument_list pos:line="869" pos:column="17">(<argument><expr><name><name pos:line="869" pos:column="18">conn<pos:position pos:line="869" pos:column="22"/></name><operator pos:line="869" pos:column="22">-&gt;<pos:position pos:line="869" pos:column="27"/></operator><name pos:line="869" pos:column="24">host<pos:position pos:line="869" pos:column="28"/></name><operator pos:line="869" pos:column="28">.<pos:position pos:line="869" pos:column="29"/></operator><name pos:line="869" pos:column="29">name<pos:position pos:line="869" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="869" pos:column="35">']'<pos:position pos:line="869" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="869" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="869" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="870" pos:column="5">*<pos:position pos:line="870" pos:column="6"/></operator><name pos:line="870" pos:column="6">tmp<pos:position pos:line="870" pos:column="9"/></name> <operator pos:line="870" pos:column="10">=<pos:position pos:line="870" pos:column="11"/></operator> <literal type="number" pos:line="870" pos:column="12">0<pos:position pos:line="870" pos:column="13"/></literal></expr>;<pos:position pos:line="870" pos:column="14"/></expr_stmt> <comment type="block" pos:line="870" pos:column="15">/* zero terminate */</comment>
    <expr_stmt><expr><name pos:line="871" pos:column="5">tmp<pos:position pos:line="871" pos:column="8"/></name><operator pos:line="871" pos:column="8">++<pos:position pos:line="871" pos:column="10"/></operator></expr>;<pos:position pos:line="871" pos:column="11"/></expr_stmt> <comment type="block" pos:line="871" pos:column="12">/* pass the ending bracket */</comment>
    <if pos:line="872" pos:column="5">if<condition pos:line="872" pos:column="7">(<expr><literal type="char" pos:line="872" pos:column="8">':'<pos:position pos:line="872" pos:column="11"/></literal> <operator pos:line="872" pos:column="12">!=<pos:position pos:line="872" pos:column="14"/></operator> <operator pos:line="872" pos:column="15">*<pos:position pos:line="872" pos:column="16"/></operator><name pos:line="872" pos:column="16">tmp<pos:position pos:line="872" pos:column="19"/></name></expr>)<pos:position pos:line="872" pos:column="20"/></condition><then pos:line="872" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><name pos:line="873" pos:column="7">tmp<pos:position pos:line="873" pos:column="10"/></name> <operator pos:line="873" pos:column="11">=<pos:position pos:line="873" pos:column="12"/></operator> <name pos:line="873" pos:column="13">NULL<pos:position pos:line="873" pos:column="17"/></name></expr>;<pos:position pos:line="873" pos:column="18"/></expr_stmt></block></then></if> <comment type="block" pos:line="873" pos:column="19">/* no port number available */</comment>
  }<pos:position pos:line="874" pos:column="4"/></block></then>
  <else pos:line="875" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="876" pos:column="5">tmp<pos:position pos:line="876" pos:column="8"/></name> <operator pos:line="876" pos:column="9">=<pos:position pos:line="876" pos:column="10"/></operator> <call><name pos:line="876" pos:column="11">strrchr<pos:position pos:line="876" pos:column="18"/></name><argument_list pos:line="876" pos:column="18">(<argument><expr><name><name pos:line="876" pos:column="19">conn<pos:position pos:line="876" pos:column="23"/></name><operator pos:line="876" pos:column="23">-&gt;<pos:position pos:line="876" pos:column="28"/></operator><name pos:line="876" pos:column="25">host<pos:position pos:line="876" pos:column="29"/></name><operator pos:line="876" pos:column="29">.<pos:position pos:line="876" pos:column="30"/></operator><name pos:line="876" pos:column="30">name<pos:position pos:line="876" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="876" pos:column="36">':'<pos:position pos:line="876" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="876" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="876" pos:column="41"/></expr_stmt></block></else></if>

  <if pos:line="878" pos:column="3">if<condition pos:line="878" pos:column="5">(<expr><name><name pos:line="878" pos:column="6">data<pos:position pos:line="878" pos:column="10"/></name><operator pos:line="878" pos:column="10">-&gt;<pos:position pos:line="878" pos:column="15"/></operator><name pos:line="878" pos:column="12">set<pos:position pos:line="878" pos:column="15"/></name><operator pos:line="878" pos:column="15">.<pos:position pos:line="878" pos:column="16"/></operator><name pos:line="878" pos:column="16">use_port<pos:position pos:line="878" pos:column="24"/></name></name> <operator pos:line="878" pos:column="25">&amp;&amp;<pos:position pos:line="878" pos:column="35"/></operator> <name><name pos:line="878" pos:column="28">data<pos:position pos:line="878" pos:column="32"/></name><operator pos:line="878" pos:column="32">-&gt;<pos:position pos:line="878" pos:column="37"/></operator><name pos:line="878" pos:column="34">state<pos:position pos:line="878" pos:column="39"/></name><operator pos:line="878" pos:column="39">.<pos:position pos:line="878" pos:column="40"/></operator><name pos:line="878" pos:column="40">allow_port<pos:position pos:line="878" pos:column="50"/></name></name></expr>)<pos:position pos:line="878" pos:column="51"/></condition><then pos:line="878" pos:column="51"> <block pos:line="878" pos:column="52">{
    <comment type="block" pos:line="879" pos:column="5">/* if set, we use this and ignore the port possibly given in the URL */</comment>
    <expr_stmt><expr><name><name pos:line="880" pos:column="5">conn<pos:position pos:line="880" pos:column="9"/></name><operator pos:line="880" pos:column="9">-&gt;<pos:position pos:line="880" pos:column="14"/></operator><name pos:line="880" pos:column="11">remote_port<pos:position pos:line="880" pos:column="22"/></name></name> <operator pos:line="880" pos:column="23">=<pos:position pos:line="880" pos:column="24"/></operator> <operator pos:line="880" pos:column="25">(<pos:position pos:line="880" pos:column="26"/></operator><name pos:line="880" pos:column="26">unsigned<pos:position pos:line="880" pos:column="34"/></name> <name pos:line="880" pos:column="35">short<pos:position pos:line="880" pos:column="40"/></name><operator pos:line="880" pos:column="40">)<pos:position pos:line="880" pos:column="41"/></operator><name><name pos:line="880" pos:column="41">data<pos:position pos:line="880" pos:column="45"/></name><operator pos:line="880" pos:column="45">-&gt;<pos:position pos:line="880" pos:column="50"/></operator><name pos:line="880" pos:column="47">set<pos:position pos:line="880" pos:column="50"/></name><operator pos:line="880" pos:column="50">.<pos:position pos:line="880" pos:column="51"/></operator><name pos:line="880" pos:column="51">use_port<pos:position pos:line="880" pos:column="59"/></name></name></expr>;<pos:position pos:line="880" pos:column="60"/></expr_stmt>
    <if pos:line="881" pos:column="5">if<condition pos:line="881" pos:column="7">(<expr><name pos:line="881" pos:column="8">tmp<pos:position pos:line="881" pos:column="11"/></name></expr>)<pos:position pos:line="881" pos:column="12"/></condition><then pos:line="881" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="882" pos:column="7">*<pos:position pos:line="882" pos:column="8"/></operator><name pos:line="882" pos:column="8">tmp<pos:position pos:line="882" pos:column="11"/></name> <operator pos:line="882" pos:column="12">=<pos:position pos:line="882" pos:column="13"/></operator> <literal type="char" pos:line="882" pos:column="14">'\0'<pos:position pos:line="882" pos:column="18"/></literal></expr>;<pos:position pos:line="882" pos:column="19"/></expr_stmt></block></then></if> <comment type="block" pos:line="882" pos:column="20">/* cut off the name there anyway - if there was a port
                      number - since the port number is to be ignored! */</comment>
    <if pos:line="884" pos:column="5">if<condition pos:line="884" pos:column="7">(<expr><name><name pos:line="884" pos:column="8">conn<pos:position pos:line="884" pos:column="12"/></name><operator pos:line="884" pos:column="12">-&gt;<pos:position pos:line="884" pos:column="17"/></operator><name pos:line="884" pos:column="14">bits<pos:position pos:line="884" pos:column="18"/></name><operator pos:line="884" pos:column="18">.<pos:position pos:line="884" pos:column="19"/></operator><name pos:line="884" pos:column="19">httpproxy<pos:position pos:line="884" pos:column="28"/></name></name></expr>)<pos:position pos:line="884" pos:column="29"/></condition><then pos:line="884" pos:column="29"> <block pos:line="884" pos:column="30">{
      <comment type="block" pos:line="885" pos:column="7">/* we need to create new URL with the new port number */</comment>
      <decl_stmt><decl><type><name pos:line="886" pos:column="7">char<pos:position pos:line="886" pos:column="11"/></name> <modifier pos:line="886" pos:column="12">*<pos:position pos:line="886" pos:column="13"/></modifier></type><name pos:line="886" pos:column="13">url<pos:position pos:line="886" pos:column="16"/></name></decl>;<pos:position pos:line="886" pos:column="17"/></decl_stmt>

      <expr_stmt><expr><name pos:line="888" pos:column="7">url<pos:position pos:line="888" pos:column="10"/></name> <operator pos:line="888" pos:column="11">=<pos:position pos:line="888" pos:column="12"/></operator> <call><name pos:line="888" pos:column="13">aprintf<pos:position pos:line="888" pos:column="20"/></name><argument_list pos:line="888" pos:column="20">(<argument><expr><literal type="string" pos:line="888" pos:column="21">"http://%s:%d%s"<pos:position pos:line="888" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="888" pos:column="39">conn<pos:position pos:line="888" pos:column="43"/></name><operator pos:line="888" pos:column="43">-&gt;<pos:position pos:line="888" pos:column="48"/></operator><name pos:line="888" pos:column="45">host<pos:position pos:line="888" pos:column="49"/></name><operator pos:line="888" pos:column="49">.<pos:position pos:line="888" pos:column="50"/></operator><name pos:line="888" pos:column="50">name<pos:position pos:line="888" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="888" pos:column="56">conn<pos:position pos:line="888" pos:column="60"/></name><operator pos:line="888" pos:column="60">-&gt;<pos:position pos:line="888" pos:column="65"/></operator><name pos:line="888" pos:column="62">remote_port<pos:position pos:line="888" pos:column="73"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="889" pos:column="21">conn<pos:position pos:line="889" pos:column="25"/></name><operator pos:line="889" pos:column="25">-&gt;<pos:position pos:line="889" pos:column="30"/></operator><name pos:line="889" pos:column="27">path<pos:position pos:line="889" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="889" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="889" pos:column="33"/></expr_stmt>
      <if pos:line="890" pos:column="7">if<condition pos:line="890" pos:column="9">(<expr><operator pos:line="890" pos:column="10">!<pos:position pos:line="890" pos:column="11"/></operator><name pos:line="890" pos:column="11">url<pos:position pos:line="890" pos:column="14"/></name></expr>)<pos:position pos:line="890" pos:column="15"/></condition><then pos:line="890" pos:column="15">
        <block type="pseudo"><return pos:line="891" pos:column="9">return <expr><name pos:line="891" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="891" pos:column="35"/></name></expr>;<pos:position pos:line="891" pos:column="36"/></return></block></then></if>

      <if pos:line="893" pos:column="7">if<condition pos:line="893" pos:column="9">(<expr><name><name pos:line="893" pos:column="10">data<pos:position pos:line="893" pos:column="14"/></name><operator pos:line="893" pos:column="14">-&gt;<pos:position pos:line="893" pos:column="19"/></operator><name pos:line="893" pos:column="16">change<pos:position pos:line="893" pos:column="22"/></name><operator pos:line="893" pos:column="22">.<pos:position pos:line="893" pos:column="23"/></operator><name pos:line="893" pos:column="23">url_alloc<pos:position pos:line="893" pos:column="32"/></name></name></expr>)<pos:position pos:line="893" pos:column="33"/></condition><then pos:line="893" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="894" pos:column="9">free<pos:position pos:line="894" pos:column="13"/></name><argument_list pos:line="894" pos:column="13">(<argument><expr><name><name pos:line="894" pos:column="14">data<pos:position pos:line="894" pos:column="18"/></name><operator pos:line="894" pos:column="18">-&gt;<pos:position pos:line="894" pos:column="23"/></operator><name pos:line="894" pos:column="20">change<pos:position pos:line="894" pos:column="26"/></name><operator pos:line="894" pos:column="26">.<pos:position pos:line="894" pos:column="27"/></operator><name pos:line="894" pos:column="27">url<pos:position pos:line="894" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="894" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="894" pos:column="32"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name><name pos:line="896" pos:column="7">data<pos:position pos:line="896" pos:column="11"/></name><operator pos:line="896" pos:column="11">-&gt;<pos:position pos:line="896" pos:column="16"/></operator><name pos:line="896" pos:column="13">change<pos:position pos:line="896" pos:column="19"/></name><operator pos:line="896" pos:column="19">.<pos:position pos:line="896" pos:column="20"/></operator><name pos:line="896" pos:column="20">url<pos:position pos:line="896" pos:column="23"/></name></name> <operator pos:line="896" pos:column="24">=<pos:position pos:line="896" pos:column="25"/></operator> <name pos:line="896" pos:column="26">url<pos:position pos:line="896" pos:column="29"/></name></expr>;<pos:position pos:line="896" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="897" pos:column="7">data<pos:position pos:line="897" pos:column="11"/></name><operator pos:line="897" pos:column="11">-&gt;<pos:position pos:line="897" pos:column="16"/></operator><name pos:line="897" pos:column="13">change<pos:position pos:line="897" pos:column="19"/></name><operator pos:line="897" pos:column="19">.<pos:position pos:line="897" pos:column="20"/></operator><name pos:line="897" pos:column="20">url_alloc<pos:position pos:line="897" pos:column="29"/></name></name> <operator pos:line="897" pos:column="30">=<pos:position pos:line="897" pos:column="31"/></operator> <name pos:line="897" pos:column="32">TRUE<pos:position pos:line="897" pos:column="36"/></name></expr>;<pos:position pos:line="897" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="898" pos:column="6"/></block></then></if>
  }<pos:position pos:line="899" pos:column="4"/></block></then>
  <elseif pos:line="900" pos:column="3">else <if pos:line="900" pos:column="8">if <condition pos:line="900" pos:column="11">(<expr><name pos:line="900" pos:column="12">tmp<pos:position pos:line="900" pos:column="15"/></name></expr>)<pos:position pos:line="900" pos:column="16"/></condition><then pos:line="900" pos:column="16"> <block pos:line="900" pos:column="17">{
    <comment type="block" pos:line="901" pos:column="5">/* no CURLOPT_PORT given, extract the one from the URL */</comment>

    <decl_stmt><decl><type><name pos:line="903" pos:column="5">char<pos:position pos:line="903" pos:column="9"/></name> <modifier pos:line="903" pos:column="10">*<pos:position pos:line="903" pos:column="11"/></modifier></type><name pos:line="903" pos:column="11">rest<pos:position pos:line="903" pos:column="15"/></name></decl>;<pos:position pos:line="903" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="904" pos:column="5">unsigned<pos:position pos:line="904" pos:column="13"/></name> <name pos:line="904" pos:column="14">long<pos:position pos:line="904" pos:column="18"/></name></type> <name pos:line="904" pos:column="19">port<pos:position pos:line="904" pos:column="23"/></name></decl>;<pos:position pos:line="904" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="906" pos:column="5">port<pos:position pos:line="906" pos:column="9"/></name><operator pos:line="906" pos:column="9">=<pos:position pos:line="906" pos:column="10"/></operator><call><name pos:line="906" pos:column="10">strtoul<pos:position pos:line="906" pos:column="17"/></name><argument_list pos:line="906" pos:column="17">(<argument><expr><name pos:line="906" pos:column="18">tmp<pos:position pos:line="906" pos:column="21"/></name><operator pos:line="906" pos:column="21">+<pos:position pos:line="906" pos:column="22"/></operator><literal type="number" pos:line="906" pos:column="22">1<pos:position pos:line="906" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="906" pos:column="25">&amp;<pos:position pos:line="906" pos:column="30"/></operator><name pos:line="906" pos:column="26">rest<pos:position pos:line="906" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="906" pos:column="32">10<pos:position pos:line="906" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="906" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="906" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="906" pos:column="38">/* Port number must be decimal */</comment>

    <if pos:line="908" pos:column="5">if <condition pos:line="908" pos:column="8">(<expr><name pos:line="908" pos:column="9">rest<pos:position pos:line="908" pos:column="13"/></name> <operator pos:line="908" pos:column="14">!=<pos:position pos:line="908" pos:column="16"/></operator> <operator pos:line="908" pos:column="17">(<pos:position pos:line="908" pos:column="18"/></operator><name pos:line="908" pos:column="18">tmp<pos:position pos:line="908" pos:column="21"/></name><operator pos:line="908" pos:column="21">+<pos:position pos:line="908" pos:column="22"/></operator><literal type="number" pos:line="908" pos:column="22">1<pos:position pos:line="908" pos:column="23"/></literal><operator pos:line="908" pos:column="23">)<pos:position pos:line="908" pos:column="24"/></operator> <operator pos:line="908" pos:column="25">&amp;&amp;<pos:position pos:line="908" pos:column="35"/></operator> <operator pos:line="908" pos:column="28">*<pos:position pos:line="908" pos:column="29"/></operator><name pos:line="908" pos:column="29">rest<pos:position pos:line="908" pos:column="33"/></name> <operator pos:line="908" pos:column="34">==<pos:position pos:line="908" pos:column="36"/></operator> <literal type="char" pos:line="908" pos:column="37">'\0'<pos:position pos:line="908" pos:column="41"/></literal></expr>)<pos:position pos:line="908" pos:column="42"/></condition><then pos:line="908" pos:column="42"> <block pos:line="908" pos:column="43">{
      <comment type="block" pos:line="909" pos:column="7">/* The colon really did have only digits after it,
       * so it is either a port number or a mistake */</comment>

      <if pos:line="912" pos:column="7">if <condition pos:line="912" pos:column="10">(<expr><name pos:line="912" pos:column="11">port<pos:position pos:line="912" pos:column="15"/></name> <operator pos:line="912" pos:column="16">&gt;<pos:position pos:line="912" pos:column="20"/></operator> <literal type="number" pos:line="912" pos:column="18">0xffff<pos:position pos:line="912" pos:column="24"/></literal></expr>)<pos:position pos:line="912" pos:column="25"/></condition><then pos:line="912" pos:column="25"> <block pos:line="912" pos:column="26">{   <comment type="block" pos:line="912" pos:column="30">/* Single unix standard says port numbers are
                              * 16 bits long */</comment>
        <expr_stmt><expr><call><name pos:line="914" pos:column="9">failf<pos:position pos:line="914" pos:column="14"/></name><argument_list pos:line="914" pos:column="14">(<argument><expr><name pos:line="914" pos:column="15">data<pos:position pos:line="914" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="914" pos:column="21">"Port number too large: %lu"<pos:position pos:line="914" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="914" pos:column="51">port<pos:position pos:line="914" pos:column="55"/></name></expr></argument>)<pos:position pos:line="914" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="914" pos:column="57"/></expr_stmt>
        <return pos:line="915" pos:column="9">return <expr><name pos:line="915" pos:column="16">CURLE_URL_MALFORMAT<pos:position pos:line="915" pos:column="35"/></name></expr>;<pos:position pos:line="915" pos:column="36"/></return>
      }<pos:position pos:line="916" pos:column="8"/></block></then></if>

      <expr_stmt><expr><operator pos:line="918" pos:column="7">*<pos:position pos:line="918" pos:column="8"/></operator><name pos:line="918" pos:column="8">tmp<pos:position pos:line="918" pos:column="11"/></name> <operator pos:line="918" pos:column="12">=<pos:position pos:line="918" pos:column="13"/></operator> <literal type="char" pos:line="918" pos:column="14">'\0'<pos:position pos:line="918" pos:column="18"/></literal></expr>;<pos:position pos:line="918" pos:column="19"/></expr_stmt> <comment type="block" pos:line="918" pos:column="20">/* cut off the name there */</comment>
      <expr_stmt><expr><name><name pos:line="919" pos:column="7">conn<pos:position pos:line="919" pos:column="11"/></name><operator pos:line="919" pos:column="11">-&gt;<pos:position pos:line="919" pos:column="16"/></operator><name pos:line="919" pos:column="13">remote_port<pos:position pos:line="919" pos:column="24"/></name></name> <operator pos:line="919" pos:column="25">=<pos:position pos:line="919" pos:column="26"/></operator> <operator pos:line="919" pos:column="27">(<pos:position pos:line="919" pos:column="28"/></operator><name pos:line="919" pos:column="28">unsigned<pos:position pos:line="919" pos:column="36"/></name> <name pos:line="919" pos:column="37">short<pos:position pos:line="919" pos:column="42"/></name><operator pos:line="919" pos:column="42">)<pos:position pos:line="919" pos:column="43"/></operator><name pos:line="919" pos:column="43">port<pos:position pos:line="919" pos:column="47"/></name></expr>;<pos:position pos:line="919" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="920" pos:column="6"/></block></then></if>
  }<pos:position pos:line="921" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="923" pos:column="3">/* Programmatically set password:
   *   - always applies, if available
   *   - takes precedence over the values we just set above
   * so scribble it over the top.
   * User-supplied passwords are assumed not to need unescaping.
   *
   * user_password is set in "inherite initial knowledge' above,
   * so it doesn't have to be set in this block
   */</comment>
  <if pos:line="932" pos:column="3">if <condition pos:line="932" pos:column="6">(<expr><name><name pos:line="932" pos:column="7">data<pos:position pos:line="932" pos:column="11"/></name><operator pos:line="932" pos:column="11">-&gt;<pos:position pos:line="932" pos:column="16"/></operator><name pos:line="932" pos:column="13">set<pos:position pos:line="932" pos:column="16"/></name><operator pos:line="932" pos:column="16">.<pos:position pos:line="932" pos:column="17"/></operator><name pos:line="932" pos:column="17">userpwd<pos:position pos:line="932" pos:column="24"/></name></name> <operator pos:line="932" pos:column="25">!=<pos:position pos:line="932" pos:column="27"/></operator> <name pos:line="932" pos:column="28">NULL<pos:position pos:line="932" pos:column="32"/></name></expr>)<pos:position pos:line="932" pos:column="33"/></condition><then pos:line="932" pos:column="33"> <block pos:line="932" pos:column="34">{
    <comment type="block" pos:line="933" pos:column="5">/* the name is given, get user+password */</comment>
    <expr_stmt><expr><call><name pos:line="934" pos:column="5">sscanf<pos:position pos:line="934" pos:column="11"/></name><argument_list pos:line="934" pos:column="11">(<argument><expr><name><name pos:line="934" pos:column="12">data<pos:position pos:line="934" pos:column="16"/></name><operator pos:line="934" pos:column="16">-&gt;<pos:position pos:line="934" pos:column="21"/></operator><name pos:line="934" pos:column="18">set<pos:position pos:line="934" pos:column="21"/></name><operator pos:line="934" pos:column="21">.<pos:position pos:line="934" pos:column="22"/></operator><name pos:line="934" pos:column="22">userpwd<pos:position pos:line="934" pos:column="29"/></name></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="935" pos:column="12">"%"<pos:position pos:line="935" pos:column="15"/></literal> <name pos:line="935" pos:column="16">MAX_CURL_USER_LENGTH_TXT<pos:position pos:line="935" pos:column="40"/></name> <literal type="string" pos:line="935" pos:column="41">"[^:]:"<pos:position pos:line="935" pos:column="48"/></literal>
           <literal type="string" pos:line="936" pos:column="12">"%"<pos:position pos:line="936" pos:column="15"/></literal> <name pos:line="936" pos:column="16">MAX_CURL_PASSWORD_LENGTH_TXT<pos:position pos:line="936" pos:column="44"/></name> <literal type="string" pos:line="936" pos:column="45">"[^\n]"<pos:position pos:line="936" pos:column="52"/></literal></expr></argument>,
           <argument><expr><name pos:line="937" pos:column="12">user<pos:position pos:line="937" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="937" pos:column="18">passwd<pos:position pos:line="937" pos:column="24"/></name></expr></argument>)<pos:position pos:line="937" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="937" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="938" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="940" pos:column="3">conn<pos:position pos:line="940" pos:column="7"/></name><operator pos:line="940" pos:column="7">-&gt;<pos:position pos:line="940" pos:column="12"/></operator><name pos:line="940" pos:column="9">bits<pos:position pos:line="940" pos:column="13"/></name><operator pos:line="940" pos:column="13">.<pos:position pos:line="940" pos:column="14"/></operator><name pos:line="940" pos:column="14">netrc<pos:position pos:line="940" pos:column="19"/></name></name> <operator pos:line="940" pos:column="20">=<pos:position pos:line="940" pos:column="21"/></operator> <name pos:line="940" pos:column="22">FALSE<pos:position pos:line="940" pos:column="27"/></name></expr>;<pos:position pos:line="940" pos:column="28"/></expr_stmt>
  <if pos:line="941" pos:column="3">if <condition pos:line="941" pos:column="6">(<expr><name><name pos:line="941" pos:column="7">data<pos:position pos:line="941" pos:column="11"/></name><operator pos:line="941" pos:column="11">-&gt;<pos:position pos:line="941" pos:column="16"/></operator><name pos:line="941" pos:column="13">set<pos:position pos:line="941" pos:column="16"/></name><operator pos:line="941" pos:column="16">.<pos:position pos:line="941" pos:column="17"/></operator><name pos:line="941" pos:column="17">use_netrc<pos:position pos:line="941" pos:column="26"/></name></name> <operator pos:line="941" pos:column="27">!=<pos:position pos:line="941" pos:column="29"/></operator> <name pos:line="941" pos:column="30">CURL_NETRC_IGNORED<pos:position pos:line="941" pos:column="48"/></name></expr>)<pos:position pos:line="941" pos:column="49"/></condition><then pos:line="941" pos:column="49"> <block pos:line="941" pos:column="50">{
    <if pos:line="942" pos:column="5">if<condition pos:line="942" pos:column="7">(<expr><call><name pos:line="942" pos:column="8">Curl_parsenetrc<pos:position pos:line="942" pos:column="23"/></name><argument_list pos:line="942" pos:column="23">(<argument><expr><name><name pos:line="942" pos:column="24">conn<pos:position pos:line="942" pos:column="28"/></name><operator pos:line="942" pos:column="28">-&gt;<pos:position pos:line="942" pos:column="33"/></operator><name pos:line="942" pos:column="30">host<pos:position pos:line="942" pos:column="34"/></name><operator pos:line="942" pos:column="34">.<pos:position pos:line="942" pos:column="35"/></operator><name pos:line="942" pos:column="35">name<pos:position pos:line="942" pos:column="39"/></name></name></expr></argument>,
                       <argument><expr><name pos:line="943" pos:column="24">user<pos:position pos:line="943" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="943" pos:column="30">passwd<pos:position pos:line="943" pos:column="36"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="944" pos:column="24">data<pos:position pos:line="944" pos:column="28"/></name><operator pos:line="944" pos:column="28">-&gt;<pos:position pos:line="944" pos:column="33"/></operator><name pos:line="944" pos:column="30">set<pos:position pos:line="944" pos:column="33"/></name><operator pos:line="944" pos:column="33">.<pos:position pos:line="944" pos:column="34"/></operator><name pos:line="944" pos:column="34">netrc_file<pos:position pos:line="944" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="944" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="944" pos:column="46"/></condition><then pos:line="944" pos:column="46"> <block pos:line="944" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="945" pos:column="7">infof<pos:position pos:line="945" pos:column="12"/></name><argument_list pos:line="945" pos:column="12">(<argument><expr><name pos:line="945" pos:column="13">data<pos:position pos:line="945" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="945" pos:column="19">"Couldn't find host %s in the "<pos:position pos:line="945" pos:column="50"/></literal> <name pos:line="945" pos:column="51">DOT_CHAR<pos:position pos:line="945" pos:column="59"/></name>
            <literal type="string" pos:line="946" pos:column="13">"netrc file, using defaults\n"<pos:position pos:line="946" pos:column="43"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="947" pos:column="13">conn<pos:position pos:line="947" pos:column="17"/></name><operator pos:line="947" pos:column="17">-&gt;<pos:position pos:line="947" pos:column="22"/></operator><name pos:line="947" pos:column="19">host<pos:position pos:line="947" pos:column="23"/></name><operator pos:line="947" pos:column="23">.<pos:position pos:line="947" pos:column="24"/></operator><name pos:line="947" pos:column="24">name<pos:position pos:line="947" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="947" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="947" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="948" pos:column="6"/></block></then>
    <else pos:line="949" pos:column="5">else <block pos:line="949" pos:column="10">{
      <comment type="block" pos:line="950" pos:column="7">/* set bits.netrc TRUE to remember that we got the name from a .netrc
         file, so that it is safe to use even if we followed a Location: to a
         different host or similar. */</comment>
      <expr_stmt><expr><name><name pos:line="953" pos:column="7">conn<pos:position pos:line="953" pos:column="11"/></name><operator pos:line="953" pos:column="11">-&gt;<pos:position pos:line="953" pos:column="16"/></operator><name pos:line="953" pos:column="13">bits<pos:position pos:line="953" pos:column="17"/></name><operator pos:line="953" pos:column="17">.<pos:position pos:line="953" pos:column="18"/></operator><name pos:line="953" pos:column="18">netrc<pos:position pos:line="953" pos:column="23"/></name></name> <operator pos:line="953" pos:column="24">=<pos:position pos:line="953" pos:column="25"/></operator> <name pos:line="953" pos:column="26">TRUE<pos:position pos:line="953" pos:column="30"/></name></expr>;<pos:position pos:line="953" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="955" pos:column="7">conn<pos:position pos:line="955" pos:column="11"/></name><operator pos:line="955" pos:column="11">-&gt;<pos:position pos:line="955" pos:column="16"/></operator><name pos:line="955" pos:column="13">bits<pos:position pos:line="955" pos:column="17"/></name><operator pos:line="955" pos:column="17">.<pos:position pos:line="955" pos:column="18"/></operator><name pos:line="955" pos:column="18">user_passwd<pos:position pos:line="955" pos:column="29"/></name></name> <operator pos:line="955" pos:column="30">=<pos:position pos:line="955" pos:column="31"/></operator> <literal type="number" pos:line="955" pos:column="32">1<pos:position pos:line="955" pos:column="33"/></literal></expr>;<pos:position pos:line="955" pos:column="34"/></expr_stmt> <comment type="block" pos:line="955" pos:column="35">/* enable user+password */</comment>
    }<pos:position pos:line="956" pos:column="6"/></block></else></if>
  }<pos:position pos:line="957" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="959" pos:column="3">/* If our protocol needs a password and we have none, use the defaults */</comment>
  <if pos:line="960" pos:column="3">if <condition pos:line="960" pos:column="6">( <expr><operator pos:line="960" pos:column="8">(<pos:position pos:line="960" pos:column="9"/></operator><name><name pos:line="960" pos:column="9">conn<pos:position pos:line="960" pos:column="13"/></name><operator pos:line="960" pos:column="13">-&gt;<pos:position pos:line="960" pos:column="18"/></operator><name pos:line="960" pos:column="15">protocol<pos:position pos:line="960" pos:column="23"/></name></name> <operator pos:line="960" pos:column="24">&amp;<pos:position pos:line="960" pos:column="29"/></operator> <name pos:line="960" pos:column="26">PROT_FTP<pos:position pos:line="960" pos:column="34"/></name><operator pos:line="960" pos:column="34">)<pos:position pos:line="960" pos:column="35"/></operator> <operator pos:line="960" pos:column="36">&amp;&amp;<pos:position pos:line="960" pos:column="46"/></operator>
       <operator pos:line="961" pos:column="8">!<pos:position pos:line="961" pos:column="9"/></operator><name><name pos:line="961" pos:column="9">conn<pos:position pos:line="961" pos:column="13"/></name><operator pos:line="961" pos:column="13">-&gt;<pos:position pos:line="961" pos:column="18"/></operator><name pos:line="961" pos:column="15">bits<pos:position pos:line="961" pos:column="19"/></name><operator pos:line="961" pos:column="19">.<pos:position pos:line="961" pos:column="20"/></operator><name pos:line="961" pos:column="20">user_passwd<pos:position pos:line="961" pos:column="31"/></name></name></expr>)<pos:position pos:line="961" pos:column="32"/></condition><then pos:line="961" pos:column="32"> <block pos:line="961" pos:column="33">{

    <expr_stmt><expr><name><name pos:line="963" pos:column="5">conn<pos:position pos:line="963" pos:column="9"/></name><operator pos:line="963" pos:column="9">-&gt;<pos:position pos:line="963" pos:column="14"/></operator><name pos:line="963" pos:column="11">user<pos:position pos:line="963" pos:column="15"/></name></name> <operator pos:line="963" pos:column="16">=<pos:position pos:line="963" pos:column="17"/></operator> <call><name pos:line="963" pos:column="18">strdup<pos:position pos:line="963" pos:column="24"/></name><argument_list pos:line="963" pos:column="24">(<argument><expr><name pos:line="963" pos:column="25">CURL_DEFAULT_USER<pos:position pos:line="963" pos:column="42"/></name></expr></argument>)<pos:position pos:line="963" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="963" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="964" pos:column="5">conn<pos:position pos:line="964" pos:column="9"/></name><operator pos:line="964" pos:column="9">-&gt;<pos:position pos:line="964" pos:column="14"/></operator><name pos:line="964" pos:column="11">passwd<pos:position pos:line="964" pos:column="17"/></name></name> <operator pos:line="964" pos:column="18">=<pos:position pos:line="964" pos:column="19"/></operator> <call><name pos:line="964" pos:column="20">strdup<pos:position pos:line="964" pos:column="26"/></name><argument_list pos:line="964" pos:column="26">(<argument><expr><name pos:line="964" pos:column="27">CURL_DEFAULT_PASSWORD<pos:position pos:line="964" pos:column="48"/></name></expr></argument>)<pos:position pos:line="964" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="964" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="965" pos:column="5">/* This is the default password, so DON'T set conn-&gt;bits.user_passwd */</comment>
  }<pos:position pos:line="966" pos:column="4"/></block></then>
  <else pos:line="967" pos:column="3">else <block pos:line="967" pos:column="8">{
    <comment type="block" pos:line="968" pos:column="5">/* store user + password, zero-length if not set */</comment>
    <expr_stmt><expr><name><name pos:line="969" pos:column="5">conn<pos:position pos:line="969" pos:column="9"/></name><operator pos:line="969" pos:column="9">-&gt;<pos:position pos:line="969" pos:column="14"/></operator><name pos:line="969" pos:column="11">user<pos:position pos:line="969" pos:column="15"/></name></name> <operator pos:line="969" pos:column="16">=<pos:position pos:line="969" pos:column="17"/></operator> <call><name pos:line="969" pos:column="18">strdup<pos:position pos:line="969" pos:column="24"/></name><argument_list pos:line="969" pos:column="24">(<argument><expr><name pos:line="969" pos:column="25">user<pos:position pos:line="969" pos:column="29"/></name></expr></argument>)<pos:position pos:line="969" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="969" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="970" pos:column="5">conn<pos:position pos:line="970" pos:column="9"/></name><operator pos:line="970" pos:column="9">-&gt;<pos:position pos:line="970" pos:column="14"/></operator><name pos:line="970" pos:column="11">passwd<pos:position pos:line="970" pos:column="17"/></name></name> <operator pos:line="970" pos:column="18">=<pos:position pos:line="970" pos:column="19"/></operator> <call><name pos:line="970" pos:column="20">strdup<pos:position pos:line="970" pos:column="26"/></name><argument_list pos:line="970" pos:column="26">(<argument><expr><name pos:line="970" pos:column="27">passwd<pos:position pos:line="970" pos:column="33"/></name></expr></argument>)<pos:position pos:line="970" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="970" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="971" pos:column="4"/></block></else></if>
  <if pos:line="972" pos:column="3">if<condition pos:line="972" pos:column="5">(<expr><operator pos:line="972" pos:column="6">!<pos:position pos:line="972" pos:column="7"/></operator><name><name pos:line="972" pos:column="7">conn<pos:position pos:line="972" pos:column="11"/></name><operator pos:line="972" pos:column="11">-&gt;<pos:position pos:line="972" pos:column="16"/></operator><name pos:line="972" pos:column="13">user<pos:position pos:line="972" pos:column="17"/></name></name> <operator pos:line="972" pos:column="18">||<pos:position pos:line="972" pos:column="20"/></operator> <operator pos:line="972" pos:column="21">!<pos:position pos:line="972" pos:column="22"/></operator><name><name pos:line="972" pos:column="22">conn<pos:position pos:line="972" pos:column="26"/></name><operator pos:line="972" pos:column="26">-&gt;<pos:position pos:line="972" pos:column="31"/></operator><name pos:line="972" pos:column="28">passwd<pos:position pos:line="972" pos:column="34"/></name></name></expr>)<pos:position pos:line="972" pos:column="35"/></condition><then pos:line="972" pos:column="35">
    <block type="pseudo"><return pos:line="973" pos:column="5">return <expr><name pos:line="973" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="973" pos:column="31"/></name></expr>;<pos:position pos:line="973" pos:column="32"/></return></block></then></if>

  <comment type="block" format="doxygen" pos:line="975" pos:column="3">/*************************************************************
   * Check the current list of connections to see if we can
   * re-use an already existing one or if we have to create a
   * new one.
   *************************************************************/</comment>

  <comment type="block" pos:line="981" pos:column="3">/* get a cloned copy of the SSL config situation stored in the
     connection struct */</comment>
  <if pos:line="983" pos:column="3">if<condition pos:line="983" pos:column="5">(<expr><operator pos:line="983" pos:column="6">!<pos:position pos:line="983" pos:column="7"/></operator><call><name pos:line="983" pos:column="7">Curl_clone_ssl_config<pos:position pos:line="983" pos:column="28"/></name><argument_list pos:line="983" pos:column="28">(<argument><expr><operator pos:line="983" pos:column="29">&amp;<pos:position pos:line="983" pos:column="34"/></operator><name><name pos:line="983" pos:column="30">data<pos:position pos:line="983" pos:column="34"/></name><operator pos:line="983" pos:column="34">-&gt;<pos:position pos:line="983" pos:column="39"/></operator><name pos:line="983" pos:column="36">set<pos:position pos:line="983" pos:column="39"/></name><operator pos:line="983" pos:column="39">.<pos:position pos:line="983" pos:column="40"/></operator><name pos:line="983" pos:column="40">ssl<pos:position pos:line="983" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="983" pos:column="45">&amp;<pos:position pos:line="983" pos:column="50"/></operator><name><name pos:line="983" pos:column="46">conn<pos:position pos:line="983" pos:column="50"/></name><operator pos:line="983" pos:column="50">-&gt;<pos:position pos:line="983" pos:column="55"/></operator><name pos:line="983" pos:column="52">ssl_config<pos:position pos:line="983" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="983" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="983" pos:column="64"/></condition><then pos:line="983" pos:column="64">
    <block type="pseudo"><return pos:line="984" pos:column="5">return <expr><name pos:line="984" pos:column="12">CURLE_OUT_OF_MEMORY<pos:position pos:line="984" pos:column="31"/></name></expr>;<pos:position pos:line="984" pos:column="32"/></return></block></then></if>

  <comment type="block" pos:line="986" pos:column="3">/* reuse_fresh is TRUE if we are told to use a new connection by force, but
     we only acknowledge this option if this is not a re-used connection
     already (which happens due to follow-location or during a HTTP
     authentication phase). */</comment>
  <if pos:line="990" pos:column="3">if<condition pos:line="990" pos:column="5">(<expr><name><name pos:line="990" pos:column="6">data<pos:position pos:line="990" pos:column="10"/></name><operator pos:line="990" pos:column="10">-&gt;<pos:position pos:line="990" pos:column="15"/></operator><name pos:line="990" pos:column="12">set<pos:position pos:line="990" pos:column="15"/></name><operator pos:line="990" pos:column="15">.<pos:position pos:line="990" pos:column="16"/></operator><name pos:line="990" pos:column="16">reuse_fresh<pos:position pos:line="990" pos:column="27"/></name></name> <operator pos:line="990" pos:column="28">&amp;&amp;<pos:position pos:line="990" pos:column="38"/></operator> <operator pos:line="990" pos:column="31">!<pos:position pos:line="990" pos:column="32"/></operator><name><name pos:line="990" pos:column="32">data<pos:position pos:line="990" pos:column="36"/></name><operator pos:line="990" pos:column="36">-&gt;<pos:position pos:line="990" pos:column="41"/></operator><name pos:line="990" pos:column="38">state<pos:position pos:line="990" pos:column="43"/></name><operator pos:line="990" pos:column="43">.<pos:position pos:line="990" pos:column="44"/></operator><name pos:line="990" pos:column="44">this_is_a_follow<pos:position pos:line="990" pos:column="60"/></name></name></expr>)<pos:position pos:line="990" pos:column="61"/></condition><then pos:line="990" pos:column="61">
    <block type="pseudo"><expr_stmt><expr><name pos:line="991" pos:column="5">reuse<pos:position pos:line="991" pos:column="10"/></name> <operator pos:line="991" pos:column="11">=<pos:position pos:line="991" pos:column="12"/></operator> <name pos:line="991" pos:column="13">FALSE<pos:position pos:line="991" pos:column="18"/></name></expr>;<pos:position pos:line="991" pos:column="19"/></expr_stmt></block></then>
  <else pos:line="992" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="993" pos:column="5">reuse<pos:position pos:line="993" pos:column="10"/></name> <operator pos:line="993" pos:column="11">=<pos:position pos:line="993" pos:column="12"/></operator> <call><name pos:line="993" pos:column="13">ConnectionExists<pos:position pos:line="993" pos:column="29"/></name><argument_list pos:line="993" pos:column="29">(<argument><expr><name pos:line="993" pos:column="30">data<pos:position pos:line="993" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="993" pos:column="36">conn<pos:position pos:line="993" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="993" pos:column="42">&amp;<pos:position pos:line="993" pos:column="47"/></operator><name pos:line="993" pos:column="43">conn_temp<pos:position pos:line="993" pos:column="52"/></name></expr></argument>)<pos:position pos:line="993" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="993" pos:column="54"/></expr_stmt></block></else></if>

  <if pos:line="995" pos:column="3">if<condition pos:line="995" pos:column="5">(<expr><name pos:line="995" pos:column="6">reuse<pos:position pos:line="995" pos:column="11"/></name></expr>)<pos:position pos:line="995" pos:column="12"/></condition><then pos:line="995" pos:column="12"> <block pos:line="995" pos:column="13">{
    <comment type="block" pos:line="996" pos:column="5">/*
     * We already have a connection for this, we got the former connection
     * in the conn_temp variable and thus we need to cleanup the one we
     * just allocated before we can move along and use the previously
     * existing one.
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="1002" pos:column="5">struct<pos:position pos:line="1002" pos:column="11"/></name> <name pos:line="1002" pos:column="12">connectdata<pos:position pos:line="1002" pos:column="23"/></name></name> <modifier pos:line="1002" pos:column="24">*<pos:position pos:line="1002" pos:column="25"/></modifier></type><name pos:line="1002" pos:column="25">old_conn<pos:position pos:line="1002" pos:column="33"/></name> <init pos:line="1002" pos:column="34">= <expr><name pos:line="1002" pos:column="36">conn<pos:position pos:line="1002" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="1002" pos:column="41"/></decl_stmt>

    <if pos:line="1004" pos:column="5">if<condition pos:line="1004" pos:column="7">(<expr><name><name pos:line="1004" pos:column="8">old_conn<pos:position pos:line="1004" pos:column="16"/></name><operator pos:line="1004" pos:column="16">-&gt;<pos:position pos:line="1004" pos:column="21"/></operator><name pos:line="1004" pos:column="18">proxy<pos:position pos:line="1004" pos:column="23"/></name><operator pos:line="1004" pos:column="23">.<pos:position pos:line="1004" pos:column="24"/></operator><name pos:line="1004" pos:column="24">rawalloc<pos:position pos:line="1004" pos:column="32"/></name></name></expr>)<pos:position pos:line="1004" pos:column="33"/></condition><then pos:line="1004" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="1005" pos:column="7">free<pos:position pos:line="1005" pos:column="11"/></name><argument_list pos:line="1005" pos:column="11">(<argument><expr><name><name pos:line="1005" pos:column="12">old_conn<pos:position pos:line="1005" pos:column="20"/></name><operator pos:line="1005" pos:column="20">-&gt;<pos:position pos:line="1005" pos:column="25"/></operator><name pos:line="1005" pos:column="22">proxy<pos:position pos:line="1005" pos:column="27"/></name><operator pos:line="1005" pos:column="27">.<pos:position pos:line="1005" pos:column="28"/></operator><name pos:line="1005" pos:column="28">rawalloc<pos:position pos:line="1005" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="1005" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1005" pos:column="38"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="1007" pos:column="5">/* free the SSL config struct from this connection struct as this was
       allocated in vain and is targeted for destruction */</comment>
    <expr_stmt><expr><call><name pos:line="1009" pos:column="5">Curl_free_ssl_config<pos:position pos:line="1009" pos:column="25"/></name><argument_list pos:line="1009" pos:column="25">(<argument><expr><operator pos:line="1009" pos:column="26">&amp;<pos:position pos:line="1009" pos:column="31"/></operator><name><name pos:line="1009" pos:column="27">conn<pos:position pos:line="1009" pos:column="31"/></name><operator pos:line="1009" pos:column="31">-&gt;<pos:position pos:line="1009" pos:column="36"/></operator><name pos:line="1009" pos:column="33">ssl_config<pos:position pos:line="1009" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="1009" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1009" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1011" pos:column="5">conn<pos:position pos:line="1011" pos:column="9"/></name> <operator pos:line="1011" pos:column="10">=<pos:position pos:line="1011" pos:column="11"/></operator> <name pos:line="1011" pos:column="12">conn_temp<pos:position pos:line="1011" pos:column="21"/></name></expr>;<pos:position pos:line="1011" pos:column="22"/></expr_stmt>        <comment type="block" pos:line="1011" pos:column="30">/* use this connection from now on */</comment>

    <comment type="block" pos:line="1013" pos:column="5">/* get the user+password information from the old_conn struct since it may
     * be new for this request even when we re-use an existing connection */</comment>
    <expr_stmt><expr><name><name pos:line="1015" pos:column="5">conn<pos:position pos:line="1015" pos:column="9"/></name><operator pos:line="1015" pos:column="9">-&gt;<pos:position pos:line="1015" pos:column="14"/></operator><name pos:line="1015" pos:column="11">bits<pos:position pos:line="1015" pos:column="15"/></name><operator pos:line="1015" pos:column="15">.<pos:position pos:line="1015" pos:column="16"/></operator><name pos:line="1015" pos:column="16">user_passwd<pos:position pos:line="1015" pos:column="27"/></name></name> <operator pos:line="1015" pos:column="28">=<pos:position pos:line="1015" pos:column="29"/></operator> <name><name pos:line="1015" pos:column="30">old_conn<pos:position pos:line="1015" pos:column="38"/></name><operator pos:line="1015" pos:column="38">-&gt;<pos:position pos:line="1015" pos:column="43"/></operator><name pos:line="1015" pos:column="40">bits<pos:position pos:line="1015" pos:column="44"/></name><operator pos:line="1015" pos:column="44">.<pos:position pos:line="1015" pos:column="45"/></operator><name pos:line="1015" pos:column="45">user_passwd<pos:position pos:line="1015" pos:column="56"/></name></name></expr>;<pos:position pos:line="1015" pos:column="57"/></expr_stmt>
    <if pos:line="1016" pos:column="5">if <condition pos:line="1016" pos:column="8">(<expr><name><name pos:line="1016" pos:column="9">conn<pos:position pos:line="1016" pos:column="13"/></name><operator pos:line="1016" pos:column="13">-&gt;<pos:position pos:line="1016" pos:column="18"/></operator><name pos:line="1016" pos:column="15">bits<pos:position pos:line="1016" pos:column="19"/></name><operator pos:line="1016" pos:column="19">.<pos:position pos:line="1016" pos:column="20"/></operator><name pos:line="1016" pos:column="20">user_passwd<pos:position pos:line="1016" pos:column="31"/></name></name></expr>)<pos:position pos:line="1016" pos:column="32"/></condition><then pos:line="1016" pos:column="32"> <block pos:line="1016" pos:column="33">{
      <comment type="block" pos:line="1017" pos:column="7">/* use the new user namd and password though */</comment>
      <expr_stmt><expr><call><name pos:line="1018" pos:column="7">Curl_safefree<pos:position pos:line="1018" pos:column="20"/></name><argument_list pos:line="1018" pos:column="20">(<argument><expr><name><name pos:line="1018" pos:column="21">conn<pos:position pos:line="1018" pos:column="25"/></name><operator pos:line="1018" pos:column="25">-&gt;<pos:position pos:line="1018" pos:column="30"/></operator><name pos:line="1018" pos:column="27">user<pos:position pos:line="1018" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="1018" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1018" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1019" pos:column="7">Curl_safefree<pos:position pos:line="1019" pos:column="20"/></name><argument_list pos:line="1019" pos:column="20">(<argument><expr><name><name pos:line="1019" pos:column="21">conn<pos:position pos:line="1019" pos:column="25"/></name><operator pos:line="1019" pos:column="25">-&gt;<pos:position pos:line="1019" pos:column="30"/></operator><name pos:line="1019" pos:column="27">passwd<pos:position pos:line="1019" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="1019" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1019" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1020" pos:column="7">conn<pos:position pos:line="1020" pos:column="11"/></name><operator pos:line="1020" pos:column="11">-&gt;<pos:position pos:line="1020" pos:column="16"/></operator><name pos:line="1020" pos:column="13">user<pos:position pos:line="1020" pos:column="17"/></name></name> <operator pos:line="1020" pos:column="18">=<pos:position pos:line="1020" pos:column="19"/></operator> <name><name pos:line="1020" pos:column="20">old_conn<pos:position pos:line="1020" pos:column="28"/></name><operator pos:line="1020" pos:column="28">-&gt;<pos:position pos:line="1020" pos:column="33"/></operator><name pos:line="1020" pos:column="30">user<pos:position pos:line="1020" pos:column="34"/></name></name></expr>;<pos:position pos:line="1020" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1021" pos:column="7">conn<pos:position pos:line="1021" pos:column="11"/></name><operator pos:line="1021" pos:column="11">-&gt;<pos:position pos:line="1021" pos:column="16"/></operator><name pos:line="1021" pos:column="13">passwd<pos:position pos:line="1021" pos:column="19"/></name></name> <operator pos:line="1021" pos:column="20">=<pos:position pos:line="1021" pos:column="21"/></operator> <name><name pos:line="1021" pos:column="22">old_conn<pos:position pos:line="1021" pos:column="30"/></name><operator pos:line="1021" pos:column="30">-&gt;<pos:position pos:line="1021" pos:column="35"/></operator><name pos:line="1021" pos:column="32">passwd<pos:position pos:line="1021" pos:column="38"/></name></name></expr>;<pos:position pos:line="1021" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1022" pos:column="7">old_conn<pos:position pos:line="1022" pos:column="15"/></name><operator pos:line="1022" pos:column="15">-&gt;<pos:position pos:line="1022" pos:column="20"/></operator><name pos:line="1022" pos:column="17">user<pos:position pos:line="1022" pos:column="21"/></name></name> <operator pos:line="1022" pos:column="22">=<pos:position pos:line="1022" pos:column="23"/></operator> <name pos:line="1022" pos:column="24">NULL<pos:position pos:line="1022" pos:column="28"/></name></expr>;<pos:position pos:line="1022" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1023" pos:column="7">old_conn<pos:position pos:line="1023" pos:column="15"/></name><operator pos:line="1023" pos:column="15">-&gt;<pos:position pos:line="1023" pos:column="20"/></operator><name pos:line="1023" pos:column="17">passwd<pos:position pos:line="1023" pos:column="23"/></name></name> <operator pos:line="1023" pos:column="24">=<pos:position pos:line="1023" pos:column="25"/></operator> <name pos:line="1023" pos:column="26">NULL<pos:position pos:line="1023" pos:column="30"/></name></expr>;<pos:position pos:line="1023" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="1024" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="1026" pos:column="5">conn<pos:position pos:line="1026" pos:column="9"/></name><operator pos:line="1026" pos:column="9">-&gt;<pos:position pos:line="1026" pos:column="14"/></operator><name pos:line="1026" pos:column="11">bits<pos:position pos:line="1026" pos:column="15"/></name><operator pos:line="1026" pos:column="15">.<pos:position pos:line="1026" pos:column="16"/></operator><name pos:line="1026" pos:column="16">proxy_user_passwd<pos:position pos:line="1026" pos:column="33"/></name></name> <operator pos:line="1026" pos:column="34">=<pos:position pos:line="1026" pos:column="35"/></operator> <name><name pos:line="1026" pos:column="36">old_conn<pos:position pos:line="1026" pos:column="44"/></name><operator pos:line="1026" pos:column="44">-&gt;<pos:position pos:line="1026" pos:column="49"/></operator><name pos:line="1026" pos:column="46">bits<pos:position pos:line="1026" pos:column="50"/></name><operator pos:line="1026" pos:column="50">.<pos:position pos:line="1026" pos:column="51"/></operator><name pos:line="1026" pos:column="51">proxy_user_passwd<pos:position pos:line="1026" pos:column="68"/></name></name></expr>;<pos:position pos:line="1026" pos:column="69"/></expr_stmt>
    <if pos:line="1027" pos:column="5">if <condition pos:line="1027" pos:column="8">(<expr><name><name pos:line="1027" pos:column="9">conn<pos:position pos:line="1027" pos:column="13"/></name><operator pos:line="1027" pos:column="13">-&gt;<pos:position pos:line="1027" pos:column="18"/></operator><name pos:line="1027" pos:column="15">bits<pos:position pos:line="1027" pos:column="19"/></name><operator pos:line="1027" pos:column="19">.<pos:position pos:line="1027" pos:column="20"/></operator><name pos:line="1027" pos:column="20">proxy_user_passwd<pos:position pos:line="1027" pos:column="37"/></name></name></expr>)<pos:position pos:line="1027" pos:column="38"/></condition><then pos:line="1027" pos:column="38"> <block pos:line="1027" pos:column="39">{
      <comment type="block" pos:line="1028" pos:column="7">/* use the new proxy user name and proxy password though */</comment>
      <expr_stmt><expr><call><name pos:line="1029" pos:column="7">Curl_safefree<pos:position pos:line="1029" pos:column="20"/></name><argument_list pos:line="1029" pos:column="20">(<argument><expr><name><name pos:line="1029" pos:column="21">conn<pos:position pos:line="1029" pos:column="25"/></name><operator pos:line="1029" pos:column="25">-&gt;<pos:position pos:line="1029" pos:column="30"/></operator><name pos:line="1029" pos:column="27">proxyuser<pos:position pos:line="1029" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="1029" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1029" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="1030" pos:column="7">Curl_safefree<pos:position pos:line="1030" pos:column="20"/></name><argument_list pos:line="1030" pos:column="20">(<argument><expr><name><name pos:line="1030" pos:column="21">conn<pos:position pos:line="1030" pos:column="25"/></name><operator pos:line="1030" pos:column="25">-&gt;<pos:position pos:line="1030" pos:column="30"/></operator><name pos:line="1030" pos:column="27">proxypasswd<pos:position pos:line="1030" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="1030" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1030" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1031" pos:column="7">conn<pos:position pos:line="1031" pos:column="11"/></name><operator pos:line="1031" pos:column="11">-&gt;<pos:position pos:line="1031" pos:column="16"/></operator><name pos:line="1031" pos:column="13">proxyuser<pos:position pos:line="1031" pos:column="22"/></name></name> <operator pos:line="1031" pos:column="23">=<pos:position pos:line="1031" pos:column="24"/></operator> <name><name pos:line="1031" pos:column="25">old_conn<pos:position pos:line="1031" pos:column="33"/></name><operator pos:line="1031" pos:column="33">-&gt;<pos:position pos:line="1031" pos:column="38"/></operator><name pos:line="1031" pos:column="35">proxyuser<pos:position pos:line="1031" pos:column="44"/></name></name></expr>;<pos:position pos:line="1031" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1032" pos:column="7">conn<pos:position pos:line="1032" pos:column="11"/></name><operator pos:line="1032" pos:column="11">-&gt;<pos:position pos:line="1032" pos:column="16"/></operator><name pos:line="1032" pos:column="13">proxypasswd<pos:position pos:line="1032" pos:column="24"/></name></name> <operator pos:line="1032" pos:column="25">=<pos:position pos:line="1032" pos:column="26"/></operator> <name><name pos:line="1032" pos:column="27">old_conn<pos:position pos:line="1032" pos:column="35"/></name><operator pos:line="1032" pos:column="35">-&gt;<pos:position pos:line="1032" pos:column="40"/></operator><name pos:line="1032" pos:column="37">proxypasswd<pos:position pos:line="1032" pos:column="48"/></name></name></expr>;<pos:position pos:line="1032" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1033" pos:column="7">old_conn<pos:position pos:line="1033" pos:column="15"/></name><operator pos:line="1033" pos:column="15">-&gt;<pos:position pos:line="1033" pos:column="20"/></operator><name pos:line="1033" pos:column="17">proxyuser<pos:position pos:line="1033" pos:column="26"/></name></name> <operator pos:line="1033" pos:column="27">=<pos:position pos:line="1033" pos:column="28"/></operator> <name pos:line="1033" pos:column="29">NULL<pos:position pos:line="1033" pos:column="33"/></name></expr>;<pos:position pos:line="1033" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1034" pos:column="7">old_conn<pos:position pos:line="1034" pos:column="15"/></name><operator pos:line="1034" pos:column="15">-&gt;<pos:position pos:line="1034" pos:column="20"/></operator><name pos:line="1034" pos:column="17">proxypasswd<pos:position pos:line="1034" pos:column="28"/></name></name> <operator pos:line="1034" pos:column="29">=<pos:position pos:line="1034" pos:column="30"/></operator> <name pos:line="1034" pos:column="31">NULL<pos:position pos:line="1034" pos:column="35"/></name></expr>;<pos:position pos:line="1034" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="1035" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1037" pos:column="5">/* host can change, when doing keepalive with a proxy ! */</comment>
    <if pos:line="1038" pos:column="5">if <condition pos:line="1038" pos:column="8">(<expr><name><name pos:line="1038" pos:column="9">conn<pos:position pos:line="1038" pos:column="13"/></name><operator pos:line="1038" pos:column="13">-&gt;<pos:position pos:line="1038" pos:column="18"/></operator><name pos:line="1038" pos:column="15">bits<pos:position pos:line="1038" pos:column="19"/></name><operator pos:line="1038" pos:column="19">.<pos:position pos:line="1038" pos:column="20"/></operator><name pos:line="1038" pos:column="20">httpproxy<pos:position pos:line="1038" pos:column="29"/></name></name></expr>)<pos:position pos:line="1038" pos:column="30"/></condition><then pos:line="1038" pos:column="30"> <block pos:line="1038" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="1039" pos:column="7">free<pos:position pos:line="1039" pos:column="11"/></name><argument_list pos:line="1039" pos:column="11">(<argument><expr><name><name pos:line="1039" pos:column="12">conn<pos:position pos:line="1039" pos:column="16"/></name><operator pos:line="1039" pos:column="16">-&gt;<pos:position pos:line="1039" pos:column="21"/></operator><name pos:line="1039" pos:column="18">host<pos:position pos:line="1039" pos:column="22"/></name><operator pos:line="1039" pos:column="22">.<pos:position pos:line="1039" pos:column="23"/></operator><name pos:line="1039" pos:column="23">rawalloc<pos:position pos:line="1039" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="1039" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1039" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="1040" pos:column="7">conn<pos:position pos:line="1040" pos:column="11"/></name><operator pos:line="1040" pos:column="11">-&gt;<pos:position pos:line="1040" pos:column="16"/></operator><name pos:line="1040" pos:column="13">host<pos:position pos:line="1040" pos:column="17"/></name></name><operator pos:line="1040" pos:column="17">=<pos:position pos:line="1040" pos:column="18"/></operator><name><name pos:line="1040" pos:column="18">old_conn<pos:position pos:line="1040" pos:column="26"/></name><operator pos:line="1040" pos:column="26">-&gt;<pos:position pos:line="1040" pos:column="31"/></operator><name pos:line="1040" pos:column="28">host<pos:position pos:line="1040" pos:column="32"/></name></name></expr>;<pos:position pos:line="1040" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="1041" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1043" pos:column="5">/* get the newly set value, not the old one */</comment>
    <expr_stmt><expr><name><name pos:line="1044" pos:column="5">conn<pos:position pos:line="1044" pos:column="9"/></name><operator pos:line="1044" pos:column="9">-&gt;<pos:position pos:line="1044" pos:column="14"/></operator><name pos:line="1044" pos:column="11">bits<pos:position pos:line="1044" pos:column="15"/></name><operator pos:line="1044" pos:column="15">.<pos:position pos:line="1044" pos:column="16"/></operator><name pos:line="1044" pos:column="16">no_body<pos:position pos:line="1044" pos:column="23"/></name></name> <operator pos:line="1044" pos:column="24">=<pos:position pos:line="1044" pos:column="25"/></operator> <name><name pos:line="1044" pos:column="26">old_conn<pos:position pos:line="1044" pos:column="34"/></name><operator pos:line="1044" pos:column="34">-&gt;<pos:position pos:line="1044" pos:column="39"/></operator><name pos:line="1044" pos:column="36">bits<pos:position pos:line="1044" pos:column="40"/></name><operator pos:line="1044" pos:column="40">.<pos:position pos:line="1044" pos:column="41"/></operator><name pos:line="1044" pos:column="41">no_body<pos:position pos:line="1044" pos:column="48"/></name></name></expr>;<pos:position pos:line="1044" pos:column="49"/></expr_stmt>

    <if pos:line="1046" pos:column="5">if <condition pos:line="1046" pos:column="8">(<expr><operator pos:line="1046" pos:column="9">!<pos:position pos:line="1046" pos:column="10"/></operator><name><name pos:line="1046" pos:column="10">conn<pos:position pos:line="1046" pos:column="14"/></name><operator pos:line="1046" pos:column="14">-&gt;<pos:position pos:line="1046" pos:column="19"/></operator><name pos:line="1046" pos:column="16">bits<pos:position pos:line="1046" pos:column="20"/></name><operator pos:line="1046" pos:column="20">.<pos:position pos:line="1046" pos:column="21"/></operator><name pos:line="1046" pos:column="21">httpproxy<pos:position pos:line="1046" pos:column="30"/></name></name></expr>)<pos:position pos:line="1046" pos:column="31"/></condition><then pos:line="1046" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="1047" pos:column="7">free<pos:position pos:line="1047" pos:column="11"/></name><argument_list pos:line="1047" pos:column="11">(<argument><expr><name><name pos:line="1047" pos:column="12">old_conn<pos:position pos:line="1047" pos:column="20"/></name><operator pos:line="1047" pos:column="20">-&gt;<pos:position pos:line="1047" pos:column="25"/></operator><name pos:line="1047" pos:column="22">host<pos:position pos:line="1047" pos:column="26"/></name><operator pos:line="1047" pos:column="26">.<pos:position pos:line="1047" pos:column="27"/></operator><name pos:line="1047" pos:column="27">rawalloc<pos:position pos:line="1047" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="1047" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1047" pos:column="37"/></expr_stmt></block></then></if> <comment type="block" pos:line="1047" pos:column="38">/* free the newly allocated name buffer */</comment>

    <expr_stmt><expr><call><name pos:line="1049" pos:column="5">free<pos:position pos:line="1049" pos:column="9"/></name><argument_list pos:line="1049" pos:column="9">(<argument><expr><name><name pos:line="1049" pos:column="10">conn<pos:position pos:line="1049" pos:column="14"/></name><operator pos:line="1049" pos:column="14">-&gt;<pos:position pos:line="1049" pos:column="19"/></operator><name pos:line="1049" pos:column="16">pathbuffer<pos:position pos:line="1049" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="1049" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1049" pos:column="28"/></expr_stmt> <comment type="block" pos:line="1049" pos:column="29">/* free the newly allocated path pointer */</comment>
    <expr_stmt><expr><name><name pos:line="1050" pos:column="5">conn<pos:position pos:line="1050" pos:column="9"/></name><operator pos:line="1050" pos:column="9">-&gt;<pos:position pos:line="1050" pos:column="14"/></operator><name pos:line="1050" pos:column="11">pathbuffer<pos:position pos:line="1050" pos:column="21"/></name></name> <operator pos:line="1050" pos:column="22">=<pos:position pos:line="1050" pos:column="23"/></operator> <name><name pos:line="1050" pos:column="24">old_conn<pos:position pos:line="1050" pos:column="32"/></name><operator pos:line="1050" pos:column="32">-&gt;<pos:position pos:line="1050" pos:column="37"/></operator><name pos:line="1050" pos:column="34">pathbuffer<pos:position pos:line="1050" pos:column="44"/></name></name></expr>;<pos:position pos:line="1050" pos:column="45"/></expr_stmt> <comment type="block" pos:line="1050" pos:column="46">/* use the old one */</comment>
    <expr_stmt><expr><name><name pos:line="1051" pos:column="5">conn<pos:position pos:line="1051" pos:column="9"/></name><operator pos:line="1051" pos:column="9">-&gt;<pos:position pos:line="1051" pos:column="14"/></operator><name pos:line="1051" pos:column="11">path<pos:position pos:line="1051" pos:column="15"/></name></name> <operator pos:line="1051" pos:column="16">=<pos:position pos:line="1051" pos:column="17"/></operator> <name><name pos:line="1051" pos:column="18">old_conn<pos:position pos:line="1051" pos:column="26"/></name><operator pos:line="1051" pos:column="26">-&gt;<pos:position pos:line="1051" pos:column="31"/></operator><name pos:line="1051" pos:column="28">path<pos:position pos:line="1051" pos:column="32"/></name></name></expr>;<pos:position pos:line="1051" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="1053" pos:column="5">/* re-use init */</comment>
    <expr_stmt><expr><name><name pos:line="1054" pos:column="5">conn<pos:position pos:line="1054" pos:column="9"/></name><operator pos:line="1054" pos:column="9">-&gt;<pos:position pos:line="1054" pos:column="14"/></operator><name pos:line="1054" pos:column="11">bits<pos:position pos:line="1054" pos:column="15"/></name><operator pos:line="1054" pos:column="15">.<pos:position pos:line="1054" pos:column="16"/></operator><name pos:line="1054" pos:column="16">reuse<pos:position pos:line="1054" pos:column="21"/></name></name> <operator pos:line="1054" pos:column="22">=<pos:position pos:line="1054" pos:column="23"/></operator> <name pos:line="1054" pos:column="24">TRUE<pos:position pos:line="1054" pos:column="28"/></name></expr>;<pos:position pos:line="1054" pos:column="29"/></expr_stmt> <comment type="block" pos:line="1054" pos:column="30">/* yes, we're re-using here */</comment>
    <expr_stmt><expr><name><name pos:line="1055" pos:column="5">conn<pos:position pos:line="1055" pos:column="9"/></name><operator pos:line="1055" pos:column="9">-&gt;<pos:position pos:line="1055" pos:column="14"/></operator><name pos:line="1055" pos:column="11">bits<pos:position pos:line="1055" pos:column="15"/></name><operator pos:line="1055" pos:column="15">.<pos:position pos:line="1055" pos:column="16"/></operator><name pos:line="1055" pos:column="16">chunk<pos:position pos:line="1055" pos:column="21"/></name></name> <operator pos:line="1055" pos:column="22">=<pos:position pos:line="1055" pos:column="23"/></operator> <name pos:line="1055" pos:column="24">FALSE<pos:position pos:line="1055" pos:column="29"/></name></expr>;<pos:position pos:line="1055" pos:column="30"/></expr_stmt> <comment type="block" pos:line="1055" pos:column="31">/* always assume not chunked unless told
                                 otherwise */</comment>
    <expr_stmt><expr><name><name pos:line="1057" pos:column="5">conn<pos:position pos:line="1057" pos:column="9"/></name><operator pos:line="1057" pos:column="9">-&gt;<pos:position pos:line="1057" pos:column="14"/></operator><name pos:line="1057" pos:column="11">maxdownload<pos:position pos:line="1057" pos:column="22"/></name></name> <operator pos:line="1057" pos:column="23">=<pos:position pos:line="1057" pos:column="24"/></operator> <operator pos:line="1057" pos:column="25">-<pos:position pos:line="1057" pos:column="26"/></operator><literal type="number" pos:line="1057" pos:column="26">1<pos:position pos:line="1057" pos:column="27"/></literal></expr>;<pos:position pos:line="1057" pos:column="28"/></expr_stmt>  <comment type="block" pos:line="1057" pos:column="30">/* might have been used previously! */</comment>

    <expr_stmt><expr><call><name pos:line="1059" pos:column="5">Curl_safefree<pos:position pos:line="1059" pos:column="18"/></name><argument_list pos:line="1059" pos:column="18">(<argument><expr><name><name pos:line="1059" pos:column="19">old_conn<pos:position pos:line="1059" pos:column="27"/></name><operator pos:line="1059" pos:column="27">-&gt;<pos:position pos:line="1059" pos:column="32"/></operator><name pos:line="1059" pos:column="29">user<pos:position pos:line="1059" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="1059" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1059" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1060" pos:column="5">Curl_safefree<pos:position pos:line="1060" pos:column="18"/></name><argument_list pos:line="1060" pos:column="18">(<argument><expr><name><name pos:line="1060" pos:column="19">old_conn<pos:position pos:line="1060" pos:column="27"/></name><operator pos:line="1060" pos:column="27">-&gt;<pos:position pos:line="1060" pos:column="32"/></operator><name pos:line="1060" pos:column="29">passwd<pos:position pos:line="1060" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="1060" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1060" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1061" pos:column="5">Curl_safefree<pos:position pos:line="1061" pos:column="18"/></name><argument_list pos:line="1061" pos:column="18">(<argument><expr><name><name pos:line="1061" pos:column="19">old_conn<pos:position pos:line="1061" pos:column="27"/></name><operator pos:line="1061" pos:column="27">-&gt;<pos:position pos:line="1061" pos:column="32"/></operator><name pos:line="1061" pos:column="29">proxyuser<pos:position pos:line="1061" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="1061" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1061" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1062" pos:column="5">Curl_safefree<pos:position pos:line="1062" pos:column="18"/></name><argument_list pos:line="1062" pos:column="18">(<argument><expr><name><name pos:line="1062" pos:column="19">old_conn<pos:position pos:line="1062" pos:column="27"/></name><operator pos:line="1062" pos:column="27">-&gt;<pos:position pos:line="1062" pos:column="32"/></operator><name pos:line="1062" pos:column="29">proxypasswd<pos:position pos:line="1062" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="1062" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="42"/></expr_stmt>

    <if pos:line="1064" pos:column="5">if<condition pos:line="1064" pos:column="7">(<expr><name><name pos:line="1064" pos:column="8">old_conn<pos:position pos:line="1064" pos:column="16"/></name><operator pos:line="1064" pos:column="16">-&gt;<pos:position pos:line="1064" pos:column="21"/></operator><name pos:line="1064" pos:column="18">bits<pos:position pos:line="1064" pos:column="22"/></name><operator pos:line="1064" pos:column="22">.<pos:position pos:line="1064" pos:column="23"/></operator><name pos:line="1064" pos:column="23">rangestringalloc<pos:position pos:line="1064" pos:column="39"/></name></name></expr>)<pos:position pos:line="1064" pos:column="40"/></condition><then pos:line="1064" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="1065" pos:column="7">free<pos:position pos:line="1065" pos:column="11"/></name><argument_list pos:line="1065" pos:column="11">(<argument><expr><name><name pos:line="1065" pos:column="12">old_conn<pos:position pos:line="1065" pos:column="20"/></name><operator pos:line="1065" pos:column="20">-&gt;<pos:position pos:line="1065" pos:column="25"/></operator><name pos:line="1065" pos:column="22">range<pos:position pos:line="1065" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="1065" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1065" pos:column="29"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="1067" pos:column="5">free<pos:position pos:line="1067" pos:column="9"/></name><argument_list pos:line="1067" pos:column="9">(<argument><expr><name pos:line="1067" pos:column="10">old_conn<pos:position pos:line="1067" pos:column="18"/></name></expr></argument>)<pos:position pos:line="1067" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="1067" pos:column="20"/></expr_stmt>          <comment type="block" pos:line="1067" pos:column="30">/* we don't need this anymore */</comment>

    <comment type="block" pos:line="1069" pos:column="5">/*
     * If we're doing a resumed transfer, we need to setup our stuff
     * properly.
     */</comment>
    <expr_stmt><expr><name><name pos:line="1073" pos:column="5">conn<pos:position pos:line="1073" pos:column="9"/></name><operator pos:line="1073" pos:column="9">-&gt;<pos:position pos:line="1073" pos:column="14"/></operator><name pos:line="1073" pos:column="11">resume_from<pos:position pos:line="1073" pos:column="22"/></name></name> <operator pos:line="1073" pos:column="23">=<pos:position pos:line="1073" pos:column="24"/></operator> <name><name pos:line="1073" pos:column="25">data<pos:position pos:line="1073" pos:column="29"/></name><operator pos:line="1073" pos:column="29">-&gt;<pos:position pos:line="1073" pos:column="34"/></operator><name pos:line="1073" pos:column="31">set<pos:position pos:line="1073" pos:column="34"/></name><operator pos:line="1073" pos:column="34">.<pos:position pos:line="1073" pos:column="35"/></operator><name pos:line="1073" pos:column="35">set_resume_from<pos:position pos:line="1073" pos:column="50"/></name></name></expr>;<pos:position pos:line="1073" pos:column="51"/></expr_stmt>
    <if pos:line="1074" pos:column="5">if <condition pos:line="1074" pos:column="8">(<expr><name><name pos:line="1074" pos:column="9">conn<pos:position pos:line="1074" pos:column="13"/></name><operator pos:line="1074" pos:column="13">-&gt;<pos:position pos:line="1074" pos:column="18"/></operator><name pos:line="1074" pos:column="15">resume_from<pos:position pos:line="1074" pos:column="26"/></name></name></expr>)<pos:position pos:line="1074" pos:column="27"/></condition><then pos:line="1074" pos:column="27"> <block pos:line="1074" pos:column="28">{
      <if pos:line="1075" pos:column="7">if <condition pos:line="1075" pos:column="10">(<expr><name><name pos:line="1075" pos:column="11">conn<pos:position pos:line="1075" pos:column="15"/></name><operator pos:line="1075" pos:column="15">-&gt;<pos:position pos:line="1075" pos:column="20"/></operator><name pos:line="1075" pos:column="17">bits<pos:position pos:line="1075" pos:column="21"/></name><operator pos:line="1075" pos:column="21">.<pos:position pos:line="1075" pos:column="22"/></operator><name pos:line="1075" pos:column="22">rangestringalloc<pos:position pos:line="1075" pos:column="38"/></name></name> <operator pos:line="1075" pos:column="39">==<pos:position pos:line="1075" pos:column="41"/></operator> <name pos:line="1075" pos:column="42">TRUE<pos:position pos:line="1075" pos:column="46"/></name></expr>)<pos:position pos:line="1075" pos:column="47"/></condition><then pos:line="1075" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="1076" pos:column="9">free<pos:position pos:line="1076" pos:column="13"/></name><argument_list pos:line="1076" pos:column="13">(<argument><expr><name><name pos:line="1076" pos:column="14">conn<pos:position pos:line="1076" pos:column="18"/></name><operator pos:line="1076" pos:column="18">-&gt;<pos:position pos:line="1076" pos:column="23"/></operator><name pos:line="1076" pos:column="20">range<pos:position pos:line="1076" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="1076" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="1076" pos:column="27"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="1077" pos:column="7">conn<pos:position pos:line="1077" pos:column="11"/></name><operator pos:line="1077" pos:column="11">-&gt;<pos:position pos:line="1077" pos:column="16"/></operator><name pos:line="1077" pos:column="13">range<pos:position pos:line="1077" pos:column="18"/></name></name> <operator pos:line="1077" pos:column="19">=<pos:position pos:line="1077" pos:column="20"/></operator> <call><name pos:line="1077" pos:column="21">aprintf<pos:position pos:line="1077" pos:column="28"/></name><argument_list pos:line="1077" pos:column="28">(<argument><expr><literal type="string" pos:line="1077" pos:column="29">"%"<pos:position pos:line="1077" pos:column="32"/></literal> <name pos:line="1077" pos:column="33">FORMAT_OFF_T<pos:position pos:line="1077" pos:column="45"/></name> <literal type="string" pos:line="1077" pos:column="46">"-"<pos:position pos:line="1077" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="1077" pos:column="51">conn<pos:position pos:line="1077" pos:column="55"/></name><operator pos:line="1077" pos:column="55">-&gt;<pos:position pos:line="1077" pos:column="60"/></operator><name pos:line="1077" pos:column="57">resume_from<pos:position pos:line="1077" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="1077" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1077" pos:column="70"/></expr_stmt>
      <if pos:line="1078" pos:column="7">if<condition pos:line="1078" pos:column="9">(<expr><operator pos:line="1078" pos:column="10">!<pos:position pos:line="1078" pos:column="11"/></operator><name><name pos:line="1078" pos:column="11">conn<pos:position pos:line="1078" pos:column="15"/></name><operator pos:line="1078" pos:column="15">-&gt;<pos:position pos:line="1078" pos:column="20"/></operator><name pos:line="1078" pos:column="17">range<pos:position pos:line="1078" pos:column="22"/></name></name></expr>)<pos:position pos:line="1078" pos:column="23"/></condition><then pos:line="1078" pos:column="23">
        <block type="pseudo"><return pos:line="1079" pos:column="9">return <expr><name pos:line="1079" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="1079" pos:column="35"/></name></expr>;<pos:position pos:line="1079" pos:column="36"/></return></block></then></if>

      <comment type="block" pos:line="1081" pos:column="7">/* tell ourselves to fetch this range */</comment>
      <expr_stmt><expr><name><name pos:line="1082" pos:column="7">conn<pos:position pos:line="1082" pos:column="11"/></name><operator pos:line="1082" pos:column="11">-&gt;<pos:position pos:line="1082" pos:column="16"/></operator><name pos:line="1082" pos:column="13">bits<pos:position pos:line="1082" pos:column="17"/></name><operator pos:line="1082" pos:column="17">.<pos:position pos:line="1082" pos:column="18"/></operator><name pos:line="1082" pos:column="18">use_range<pos:position pos:line="1082" pos:column="27"/></name></name> <operator pos:line="1082" pos:column="28">=<pos:position pos:line="1082" pos:column="29"/></operator> <name pos:line="1082" pos:column="30">TRUE<pos:position pos:line="1082" pos:column="34"/></name></expr>;<pos:position pos:line="1082" pos:column="35"/></expr_stmt>        <comment type="block" pos:line="1082" pos:column="43">/* enable range download */</comment>
      <expr_stmt><expr><name><name pos:line="1083" pos:column="7">conn<pos:position pos:line="1083" pos:column="11"/></name><operator pos:line="1083" pos:column="11">-&gt;<pos:position pos:line="1083" pos:column="16"/></operator><name pos:line="1083" pos:column="13">bits<pos:position pos:line="1083" pos:column="17"/></name><operator pos:line="1083" pos:column="17">.<pos:position pos:line="1083" pos:column="18"/></operator><name pos:line="1083" pos:column="18">rangestringalloc<pos:position pos:line="1083" pos:column="34"/></name></name> <operator pos:line="1083" pos:column="35">=<pos:position pos:line="1083" pos:column="36"/></operator> <name pos:line="1083" pos:column="37">TRUE<pos:position pos:line="1083" pos:column="41"/></name></expr>;<pos:position pos:line="1083" pos:column="42"/></expr_stmt> <comment type="block" pos:line="1083" pos:column="43">/* mark range string allocated */</comment>
    }<pos:position pos:line="1084" pos:column="6"/></block></then>
    <elseif pos:line="1085" pos:column="5">else <if pos:line="1085" pos:column="10">if <condition pos:line="1085" pos:column="13">(<expr><name><name pos:line="1085" pos:column="14">data<pos:position pos:line="1085" pos:column="18"/></name><operator pos:line="1085" pos:column="18">-&gt;<pos:position pos:line="1085" pos:column="23"/></operator><name pos:line="1085" pos:column="20">set<pos:position pos:line="1085" pos:column="23"/></name><operator pos:line="1085" pos:column="23">.<pos:position pos:line="1085" pos:column="24"/></operator><name pos:line="1085" pos:column="24">set_range<pos:position pos:line="1085" pos:column="33"/></name></name></expr>)<pos:position pos:line="1085" pos:column="34"/></condition><then pos:line="1085" pos:column="34"> <block pos:line="1085" pos:column="35">{
      <comment type="block" pos:line="1086" pos:column="7">/* There is a range, but is not a resume, useful for random ftp access */</comment>
      <expr_stmt><expr><name><name pos:line="1087" pos:column="7">conn<pos:position pos:line="1087" pos:column="11"/></name><operator pos:line="1087" pos:column="11">-&gt;<pos:position pos:line="1087" pos:column="16"/></operator><name pos:line="1087" pos:column="13">range<pos:position pos:line="1087" pos:column="18"/></name></name> <operator pos:line="1087" pos:column="19">=<pos:position pos:line="1087" pos:column="20"/></operator> <call><name pos:line="1087" pos:column="21">strdup<pos:position pos:line="1087" pos:column="27"/></name><argument_list pos:line="1087" pos:column="27">(<argument><expr><name><name pos:line="1087" pos:column="28">data<pos:position pos:line="1087" pos:column="32"/></name><operator pos:line="1087" pos:column="32">-&gt;<pos:position pos:line="1087" pos:column="37"/></operator><name pos:line="1087" pos:column="34">set<pos:position pos:line="1087" pos:column="37"/></name><operator pos:line="1087" pos:column="37">.<pos:position pos:line="1087" pos:column="38"/></operator><name pos:line="1087" pos:column="38">set_range<pos:position pos:line="1087" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="1087" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1087" pos:column="49"/></expr_stmt>
      <if pos:line="1088" pos:column="7">if<condition pos:line="1088" pos:column="9">(<expr><operator pos:line="1088" pos:column="10">!<pos:position pos:line="1088" pos:column="11"/></operator><name><name pos:line="1088" pos:column="11">conn<pos:position pos:line="1088" pos:column="15"/></name><operator pos:line="1088" pos:column="15">-&gt;<pos:position pos:line="1088" pos:column="20"/></operator><name pos:line="1088" pos:column="17">range<pos:position pos:line="1088" pos:column="22"/></name></name></expr>)<pos:position pos:line="1088" pos:column="23"/></condition><then pos:line="1088" pos:column="23">
        <block type="pseudo"><return pos:line="1089" pos:column="9">return <expr><name pos:line="1089" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="1089" pos:column="35"/></name></expr>;<pos:position pos:line="1089" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="1090" pos:column="7">conn<pos:position pos:line="1090" pos:column="11"/></name><operator pos:line="1090" pos:column="11">-&gt;<pos:position pos:line="1090" pos:column="16"/></operator><name pos:line="1090" pos:column="13">bits<pos:position pos:line="1090" pos:column="17"/></name><operator pos:line="1090" pos:column="17">.<pos:position pos:line="1090" pos:column="18"/></operator><name pos:line="1090" pos:column="18">rangestringalloc<pos:position pos:line="1090" pos:column="34"/></name></name> <operator pos:line="1090" pos:column="35">=<pos:position pos:line="1090" pos:column="36"/></operator> <name pos:line="1090" pos:column="37">TRUE<pos:position pos:line="1090" pos:column="41"/></name></expr>;<pos:position pos:line="1090" pos:column="42"/></expr_stmt> <comment type="block" pos:line="1090" pos:column="43">/* mark range string allocated */</comment>
      <expr_stmt><expr><name><name pos:line="1091" pos:column="7">conn<pos:position pos:line="1091" pos:column="11"/></name><operator pos:line="1091" pos:column="11">-&gt;<pos:position pos:line="1091" pos:column="16"/></operator><name pos:line="1091" pos:column="13">bits<pos:position pos:line="1091" pos:column="17"/></name><operator pos:line="1091" pos:column="17">.<pos:position pos:line="1091" pos:column="18"/></operator><name pos:line="1091" pos:column="18">use_range<pos:position pos:line="1091" pos:column="27"/></name></name> <operator pos:line="1091" pos:column="28">=<pos:position pos:line="1091" pos:column="29"/></operator> <name pos:line="1091" pos:column="30">TRUE<pos:position pos:line="1091" pos:column="34"/></name></expr>;<pos:position pos:line="1091" pos:column="35"/></expr_stmt>        <comment type="block" pos:line="1091" pos:column="43">/* enable range download */</comment>
    }<pos:position pos:line="1092" pos:column="6"/></block></then></if></elseif>
    <else pos:line="1093" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="1094" pos:column="7">conn<pos:position pos:line="1094" pos:column="11"/></name><operator pos:line="1094" pos:column="11">-&gt;<pos:position pos:line="1094" pos:column="16"/></operator><name pos:line="1094" pos:column="13">bits<pos:position pos:line="1094" pos:column="17"/></name><operator pos:line="1094" pos:column="17">.<pos:position pos:line="1094" pos:column="18"/></operator><name pos:line="1094" pos:column="18">use_range<pos:position pos:line="1094" pos:column="27"/></name></name> <operator pos:line="1094" pos:column="28">=<pos:position pos:line="1094" pos:column="29"/></operator> <name pos:line="1094" pos:column="30">FALSE<pos:position pos:line="1094" pos:column="35"/></name></expr>;<pos:position pos:line="1094" pos:column="36"/></expr_stmt></block></else></if> <comment type="block" pos:line="1094" pos:column="37">/* disable range download */</comment>

    <expr_stmt><expr><operator pos:line="1096" pos:column="5">*<pos:position pos:line="1096" pos:column="6"/></operator><name pos:line="1096" pos:column="6">in_connect<pos:position pos:line="1096" pos:column="16"/></name> <operator pos:line="1096" pos:column="17">=<pos:position pos:line="1096" pos:column="18"/></operator> <name pos:line="1096" pos:column="19">conn<pos:position pos:line="1096" pos:column="23"/></name></expr>;<pos:position pos:line="1096" pos:column="24"/></expr_stmt>      <comment type="block" pos:line="1096" pos:column="30">/* return this instead! */</comment>

    <expr_stmt><expr><call><name pos:line="1098" pos:column="5">infof<pos:position pos:line="1098" pos:column="10"/></name><argument_list pos:line="1098" pos:column="10">(<argument><expr><name pos:line="1098" pos:column="11">data<pos:position pos:line="1098" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1098" pos:column="17">"Re-using existing connection! (#%ld) with host %s\n"<pos:position pos:line="1098" pos:column="70"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="1099" pos:column="11">conn<pos:position pos:line="1099" pos:column="15"/></name><operator pos:line="1099" pos:column="15">-&gt;<pos:position pos:line="1099" pos:column="20"/></operator><name pos:line="1099" pos:column="17">connectindex<pos:position pos:line="1099" pos:column="29"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="1100" pos:column="11">conn<pos:position pos:line="1100" pos:column="15"/></name><operator pos:line="1100" pos:column="15">-&gt;<pos:position pos:line="1100" pos:column="20"/></operator><name pos:line="1100" pos:column="17">bits<pos:position pos:line="1100" pos:column="21"/></name><operator pos:line="1100" pos:column="21">.<pos:position pos:line="1100" pos:column="22"/></operator><name pos:line="1100" pos:column="22">httpproxy<pos:position pos:line="1100" pos:column="31"/></name></name></expr>?<pos:position pos:line="1100" pos:column="32"/></condition><then><expr><name><name pos:line="1100" pos:column="32">conn<pos:position pos:line="1100" pos:column="36"/></name><operator pos:line="1100" pos:column="36">-&gt;<pos:position pos:line="1100" pos:column="41"/></operator><name pos:line="1100" pos:column="38">proxy<pos:position pos:line="1100" pos:column="43"/></name><operator pos:line="1100" pos:column="43">.<pos:position pos:line="1100" pos:column="44"/></operator><name pos:line="1100" pos:column="44">dispname<pos:position pos:line="1100" pos:column="52"/></name></name></expr></then><else pos:line="1100" pos:column="52">:<expr><name><name pos:line="1100" pos:column="53">conn<pos:position pos:line="1100" pos:column="57"/></name><operator pos:line="1100" pos:column="57">-&gt;<pos:position pos:line="1100" pos:column="62"/></operator><name pos:line="1100" pos:column="59">host<pos:position pos:line="1100" pos:column="63"/></name><operator pos:line="1100" pos:column="63">.<pos:position pos:line="1100" pos:column="64"/></operator><name pos:line="1100" pos:column="64">dispname<pos:position pos:line="1100" pos:column="72"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="1100" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1100" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="1101" pos:column="4"/></block></then>
  <else pos:line="1102" pos:column="3">else <block pos:line="1102" pos:column="8">{
    <comment type="block" pos:line="1103" pos:column="5">/*
     * This is a brand new connection, so let's store it in the connection
     * cache of ours!
     */</comment>
    <expr_stmt><expr><call><name pos:line="1107" pos:column="5">ConnectionStore<pos:position pos:line="1107" pos:column="20"/></name><argument_list pos:line="1107" pos:column="20">(<argument><expr><name pos:line="1107" pos:column="21">data<pos:position pos:line="1107" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1107" pos:column="27">conn<pos:position pos:line="1107" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1107" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1107" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="1108" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="1110" pos:column="3">/* Continue connectdata initialization here.
   *
   * Inherit the proper values from the urldata struct AFTER we have arranged
   * the persistant conncetion stuff */</comment>
  <expr_stmt><expr><name><name pos:line="1114" pos:column="3">conn<pos:position pos:line="1114" pos:column="7"/></name><operator pos:line="1114" pos:column="7">-&gt;<pos:position pos:line="1114" pos:column="12"/></operator><name pos:line="1114" pos:column="9">fread<pos:position pos:line="1114" pos:column="14"/></name></name> <operator pos:line="1114" pos:column="15">=<pos:position pos:line="1114" pos:column="16"/></operator> <name><name pos:line="1114" pos:column="17">data<pos:position pos:line="1114" pos:column="21"/></name><operator pos:line="1114" pos:column="21">-&gt;<pos:position pos:line="1114" pos:column="26"/></operator><name pos:line="1114" pos:column="23">set<pos:position pos:line="1114" pos:column="26"/></name><operator pos:line="1114" pos:column="26">.<pos:position pos:line="1114" pos:column="27"/></operator><name pos:line="1114" pos:column="27">fread<pos:position pos:line="1114" pos:column="32"/></name></name></expr>;<pos:position pos:line="1114" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="1115" pos:column="3">conn<pos:position pos:line="1115" pos:column="7"/></name><operator pos:line="1115" pos:column="7">-&gt;<pos:position pos:line="1115" pos:column="12"/></operator><name pos:line="1115" pos:column="9">fread_in<pos:position pos:line="1115" pos:column="17"/></name></name> <operator pos:line="1115" pos:column="18">=<pos:position pos:line="1115" pos:column="19"/></operator> <name><name pos:line="1115" pos:column="20">data<pos:position pos:line="1115" pos:column="24"/></name><operator pos:line="1115" pos:column="24">-&gt;<pos:position pos:line="1115" pos:column="29"/></operator><name pos:line="1115" pos:column="26">set<pos:position pos:line="1115" pos:column="29"/></name><operator pos:line="1115" pos:column="29">.<pos:position pos:line="1115" pos:column="30"/></operator><name pos:line="1115" pos:column="30">in<pos:position pos:line="1115" pos:column="32"/></name></name></expr>;<pos:position pos:line="1115" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="1117" pos:column="3">conn<pos:position pos:line="1117" pos:column="7"/></name><operator pos:line="1117" pos:column="7">-&gt;<pos:position pos:line="1117" pos:column="12"/></operator><name pos:line="1117" pos:column="9">bits<pos:position pos:line="1117" pos:column="13"/></name><operator pos:line="1117" pos:column="13">.<pos:position pos:line="1117" pos:column="14"/></operator><name pos:line="1117" pos:column="14">upload_chunky<pos:position pos:line="1117" pos:column="27"/></name></name> <operator pos:line="1117" pos:column="28">=<pos:position pos:line="1117" pos:column="29"/></operator>
    <ternary><condition><expr><operator pos:line="1118" pos:column="5">(<pos:position pos:line="1118" pos:column="6"/></operator><operator pos:line="1118" pos:column="6">(<pos:position pos:line="1118" pos:column="7"/></operator><name><name pos:line="1118" pos:column="7">conn<pos:position pos:line="1118" pos:column="11"/></name><operator pos:line="1118" pos:column="11">-&gt;<pos:position pos:line="1118" pos:column="16"/></operator><name pos:line="1118" pos:column="13">protocol<pos:position pos:line="1118" pos:column="21"/></name></name><operator pos:line="1118" pos:column="21">&amp;<pos:position pos:line="1118" pos:column="26"/></operator><name pos:line="1118" pos:column="22">PROT_HTTP<pos:position pos:line="1118" pos:column="31"/></name><operator pos:line="1118" pos:column="31">)<pos:position pos:line="1118" pos:column="32"/></operator> <operator pos:line="1118" pos:column="33">&amp;&amp;<pos:position pos:line="1118" pos:column="43"/></operator>
     <name><name pos:line="1119" pos:column="6">data<pos:position pos:line="1119" pos:column="10"/></name><operator pos:line="1119" pos:column="10">-&gt;<pos:position pos:line="1119" pos:column="15"/></operator><name pos:line="1119" pos:column="12">set<pos:position pos:line="1119" pos:column="15"/></name><operator pos:line="1119" pos:column="15">.<pos:position pos:line="1119" pos:column="16"/></operator><name pos:line="1119" pos:column="16">upload<pos:position pos:line="1119" pos:column="22"/></name></name> <operator pos:line="1119" pos:column="23">&amp;&amp;<pos:position pos:line="1119" pos:column="33"/></operator>
     <operator pos:line="1120" pos:column="6">(<pos:position pos:line="1120" pos:column="7"/></operator><name><name pos:line="1120" pos:column="7">data<pos:position pos:line="1120" pos:column="11"/></name><operator pos:line="1120" pos:column="11">-&gt;<pos:position pos:line="1120" pos:column="16"/></operator><name pos:line="1120" pos:column="13">set<pos:position pos:line="1120" pos:column="16"/></name><operator pos:line="1120" pos:column="16">.<pos:position pos:line="1120" pos:column="17"/></operator><name pos:line="1120" pos:column="17">infilesize<pos:position pos:line="1120" pos:column="27"/></name></name> <operator pos:line="1120" pos:column="28">==<pos:position pos:line="1120" pos:column="30"/></operator> <operator pos:line="1120" pos:column="31">-<pos:position pos:line="1120" pos:column="32"/></operator><literal type="number" pos:line="1120" pos:column="32">1<pos:position pos:line="1120" pos:column="33"/></literal><operator pos:line="1120" pos:column="33">)<pos:position pos:line="1120" pos:column="34"/></operator> <operator pos:line="1120" pos:column="35">&amp;&amp;<pos:position pos:line="1120" pos:column="45"/></operator>
     <operator pos:line="1121" pos:column="6">(<pos:position pos:line="1121" pos:column="7"/></operator><name><name pos:line="1121" pos:column="7">data<pos:position pos:line="1121" pos:column="11"/></name><operator pos:line="1121" pos:column="11">-&gt;<pos:position pos:line="1121" pos:column="16"/></operator><name pos:line="1121" pos:column="13">set<pos:position pos:line="1121" pos:column="16"/></name><operator pos:line="1121" pos:column="16">.<pos:position pos:line="1121" pos:column="17"/></operator><name pos:line="1121" pos:column="17">httpversion<pos:position pos:line="1121" pos:column="28"/></name></name> <operator pos:line="1121" pos:column="29">!=<pos:position pos:line="1121" pos:column="31"/></operator> <name pos:line="1121" pos:column="32">CURL_HTTP_VERSION_1_0<pos:position pos:line="1121" pos:column="53"/></name><operator pos:line="1121" pos:column="53">)<pos:position pos:line="1121" pos:column="54"/></operator><operator pos:line="1121" pos:column="54">)<pos:position pos:line="1121" pos:column="55"/></operator></expr>?<pos:position pos:line="1121" pos:column="56"/></condition><then pos:line="1121" pos:column="56">
    <comment type="block" pos:line="1122" pos:column="5">/* HTTP, upload, unknown file size and not HTTP 1.0 */</comment>
    <expr><name pos:line="1123" pos:column="5">TRUE<pos:position pos:line="1123" pos:column="9"/></name></expr></then><else pos:line="1123" pos:column="9">:
  <comment type="block" pos:line="1124" pos:column="3">/* else, no chunky upload */</comment>
  <expr><name pos:line="1125" pos:column="3">FALSE<pos:position pos:line="1125" pos:column="8"/></name></expr></else></ternary></expr>;<pos:position pos:line="1125" pos:column="9"/></expr_stmt>

<cpp:ifndef pos:line="1127" pos:column="1">#<cpp:directive pos:line="1127" pos:column="2">ifndef<pos:position pos:line="1127" pos:column="8"/></cpp:directive> <name pos:line="1127" pos:column="9">USE_ARES<pos:position pos:line="1127" pos:column="17"/></name></cpp:ifndef>
  <comment type="block" format="doxygen" pos:line="1128" pos:column="3">/*************************************************************
   * Set timeout if that is being used, and we're not using an asynchronous
   * name resolve.
   *************************************************************/</comment>
  <if pos:line="1132" pos:column="3">if<condition pos:line="1132" pos:column="5">(<expr><operator pos:line="1132" pos:column="6">(<pos:position pos:line="1132" pos:column="7"/></operator><name><name pos:line="1132" pos:column="7">data<pos:position pos:line="1132" pos:column="11"/></name><operator pos:line="1132" pos:column="11">-&gt;<pos:position pos:line="1132" pos:column="16"/></operator><name pos:line="1132" pos:column="13">set<pos:position pos:line="1132" pos:column="16"/></name><operator pos:line="1132" pos:column="16">.<pos:position pos:line="1132" pos:column="17"/></operator><name pos:line="1132" pos:column="17">timeout<pos:position pos:line="1132" pos:column="24"/></name></name> <operator pos:line="1132" pos:column="25">||<pos:position pos:line="1132" pos:column="27"/></operator> <name><name pos:line="1132" pos:column="28">data<pos:position pos:line="1132" pos:column="32"/></name><operator pos:line="1132" pos:column="32">-&gt;<pos:position pos:line="1132" pos:column="37"/></operator><name pos:line="1132" pos:column="34">set<pos:position pos:line="1132" pos:column="37"/></name><operator pos:line="1132" pos:column="37">.<pos:position pos:line="1132" pos:column="38"/></operator><name pos:line="1132" pos:column="38">connecttimeout<pos:position pos:line="1132" pos:column="52"/></name></name><operator pos:line="1132" pos:column="52">)<pos:position pos:line="1132" pos:column="53"/></operator> <operator pos:line="1132" pos:column="54">&amp;&amp;<pos:position pos:line="1132" pos:column="64"/></operator> <operator pos:line="1132" pos:column="57">!<pos:position pos:line="1132" pos:column="58"/></operator><name><name pos:line="1132" pos:column="58">data<pos:position pos:line="1132" pos:column="62"/></name><operator pos:line="1132" pos:column="62">-&gt;<pos:position pos:line="1132" pos:column="67"/></operator><name pos:line="1132" pos:column="64">set<pos:position pos:line="1132" pos:column="67"/></name><operator pos:line="1132" pos:column="67">.<pos:position pos:line="1132" pos:column="68"/></operator><name pos:line="1132" pos:column="68">no_signal<pos:position pos:line="1132" pos:column="77"/></name></name></expr>)<pos:position pos:line="1132" pos:column="78"/></condition><then pos:line="1132" pos:column="78"> <block pos:line="1132" pos:column="79">{
    <comment type="block" format="doxygen" pos:line="1133" pos:column="5">/*************************************************************
     * Set signal handler to catch SIGALRM
     * Store the old value to be able to set it back later!
     *************************************************************/</comment>

<cpp:ifdef pos:line="1138" pos:column="1">#<cpp:directive pos:line="1138" pos:column="2">ifdef<pos:position pos:line="1138" pos:column="7"/></cpp:directive> <name pos:line="1138" pos:column="8">SIGALRM<pos:position pos:line="1138" pos:column="15"/></name></cpp:ifdef>
<cpp:ifdef pos:line="1139" pos:column="1">#<cpp:directive pos:line="1139" pos:column="2">ifdef<pos:position pos:line="1139" pos:column="7"/></cpp:directive> <name pos:line="1139" pos:column="8">HAVE_SIGACTION<pos:position pos:line="1139" pos:column="22"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name><name pos:line="1140" pos:column="5">struct<pos:position pos:line="1140" pos:column="11"/></name> <name pos:line="1140" pos:column="12">sigaction<pos:position pos:line="1140" pos:column="21"/></name></name></type> <name pos:line="1140" pos:column="22">sigact<pos:position pos:line="1140" pos:column="28"/></name></decl>;<pos:position pos:line="1140" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="1141" pos:column="5">sigaction<pos:position pos:line="1141" pos:column="14"/></name><argument_list pos:line="1141" pos:column="14">(<argument><expr><name pos:line="1141" pos:column="15">SIGALRM<pos:position pos:line="1141" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="1141" pos:column="24">NULL<pos:position pos:line="1141" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="1141" pos:column="30">&amp;<pos:position pos:line="1141" pos:column="35"/></operator><name pos:line="1141" pos:column="31">sigact<pos:position pos:line="1141" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1141" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1141" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1142" pos:column="5">keep_sigact<pos:position pos:line="1142" pos:column="16"/></name> <operator pos:line="1142" pos:column="17">=<pos:position pos:line="1142" pos:column="18"/></operator> <name pos:line="1142" pos:column="19">sigact<pos:position pos:line="1142" pos:column="25"/></name></expr>;<pos:position pos:line="1142" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1143" pos:column="5">keep_copysig<pos:position pos:line="1143" pos:column="17"/></name> <operator pos:line="1143" pos:column="18">=<pos:position pos:line="1143" pos:column="19"/></operator> <name pos:line="1143" pos:column="20">TRUE<pos:position pos:line="1143" pos:column="24"/></name></expr>;<pos:position pos:line="1143" pos:column="25"/></expr_stmt> <comment type="block" pos:line="1143" pos:column="26">/* yes, we have a copy */</comment>
    <expr_stmt><expr><name><name pos:line="1144" pos:column="5">sigact<pos:position pos:line="1144" pos:column="11"/></name><operator pos:line="1144" pos:column="11">.<pos:position pos:line="1144" pos:column="12"/></operator><name pos:line="1144" pos:column="12">sa_handler<pos:position pos:line="1144" pos:column="22"/></name></name> <operator pos:line="1144" pos:column="23">=<pos:position pos:line="1144" pos:column="24"/></operator> <name pos:line="1144" pos:column="25">alarmfunc<pos:position pos:line="1144" pos:column="34"/></name></expr>;<pos:position pos:line="1144" pos:column="35"/></expr_stmt>
<cpp:ifdef pos:line="1145" pos:column="1">#<cpp:directive pos:line="1145" pos:column="2">ifdef<pos:position pos:line="1145" pos:column="7"/></cpp:directive> <name pos:line="1145" pos:column="8">SA_RESTART<pos:position pos:line="1145" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="1146" pos:column="5">/* HPUX doesn't have SA_RESTART but defaults to that behaviour! */</comment>
    <expr_stmt><expr><name><name pos:line="1147" pos:column="5">sigact<pos:position pos:line="1147" pos:column="11"/></name><operator pos:line="1147" pos:column="11">.<pos:position pos:line="1147" pos:column="12"/></operator><name pos:line="1147" pos:column="12">sa_flags<pos:position pos:line="1147" pos:column="20"/></name></name> <operator pos:line="1147" pos:column="21">&amp;=<pos:position pos:line="1147" pos:column="27"/></operator> <operator pos:line="1147" pos:column="24">~<pos:position pos:line="1147" pos:column="25"/></operator><name pos:line="1147" pos:column="25">SA_RESTART<pos:position pos:line="1147" pos:column="35"/></name></expr>;<pos:position pos:line="1147" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="1148" pos:column="1">#<cpp:directive pos:line="1148" pos:column="2">endif<pos:position pos:line="1148" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="1149" pos:column="5">/* now set the new struct */</comment>
    <expr_stmt><expr><call><name pos:line="1150" pos:column="5">sigaction<pos:position pos:line="1150" pos:column="14"/></name><argument_list pos:line="1150" pos:column="14">(<argument><expr><name pos:line="1150" pos:column="15">SIGALRM<pos:position pos:line="1150" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="1150" pos:column="24">&amp;<pos:position pos:line="1150" pos:column="29"/></operator><name pos:line="1150" pos:column="25">sigact<pos:position pos:line="1150" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1150" pos:column="33">NULL<pos:position pos:line="1150" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1150" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1150" pos:column="39"/></expr_stmt>
<cpp:else pos:line="1151" pos:column="1">#<cpp:directive pos:line="1151" pos:column="2">else<pos:position pos:line="1151" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="1151" pos:column="7">/* HAVE_SIGACTION */</comment>
    <comment type="block" pos:line="1152" pos:column="5">/* no sigaction(), revert to the much lamer signal() */</comment>
<cpp:ifdef pos:line="1153" pos:column="1">#<cpp:directive pos:line="1153" pos:column="2">ifdef<pos:position pos:line="1153" pos:column="7"/></cpp:directive> <name pos:line="1153" pos:column="8">HAVE_SIGNAL<pos:position pos:line="1153" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="1154" pos:column="5">keep_sigact<pos:position pos:line="1154" pos:column="16"/></name> <operator pos:line="1154" pos:column="17">=<pos:position pos:line="1154" pos:column="18"/></operator> <call><name pos:line="1154" pos:column="19">signal<pos:position pos:line="1154" pos:column="25"/></name><argument_list pos:line="1154" pos:column="25">(<argument><expr><name pos:line="1154" pos:column="26">SIGALRM<pos:position pos:line="1154" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1154" pos:column="35">alarmfunc<pos:position pos:line="1154" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1154" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1154" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="1155" pos:column="1">#<cpp:directive pos:line="1155" pos:column="2">endif<pos:position pos:line="1155" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="1156" pos:column="1">#<cpp:directive pos:line="1156" pos:column="2">endif<pos:position pos:line="1156" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1156" pos:column="8">/* HAVE_SIGACTION */</comment>

    <comment type="block" pos:line="1158" pos:column="5">/* We set the timeout on the name resolving phase first, separately from
     * the download/upload part to allow a maximum time on everything. This is
     * a signal-based timeout, why it won't work and shouldn't be used in
     * multi-threaded environments. */</comment>

<cpp:ifdef pos:line="1163" pos:column="1">#<cpp:directive pos:line="1163" pos:column="2">ifdef<pos:position pos:line="1163" pos:column="7"/></cpp:directive> <name pos:line="1163" pos:column="8">HAVE_ALARM<pos:position pos:line="1163" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="1164" pos:column="5">/* alarm() makes a signal get sent when the timeout fires off, and that
       will abort system calls */</comment>
    <expr_stmt><expr><name pos:line="1166" pos:column="5">prev_alarm<pos:position pos:line="1166" pos:column="15"/></name> <operator pos:line="1166" pos:column="16">=<pos:position pos:line="1166" pos:column="17"/></operator> <call><name pos:line="1166" pos:column="18">alarm<pos:position pos:line="1166" pos:column="23"/></name><argument_list pos:line="1166" pos:column="23">(<argument><expr><call pos:line="1166" pos:column="24">(<name pos:line="1166" pos:column="25">unsigned<pos:position pos:line="1166" pos:column="33"/></name> <name pos:line="1166" pos:column="34">int<pos:position pos:line="1166" pos:column="37"/></name>) <argument_list pos:line="1166" pos:column="39">(<argument><expr><ternary><condition><expr><name><name pos:line="1166" pos:column="40">data<pos:position pos:line="1166" pos:column="44"/></name><operator pos:line="1166" pos:column="44">-&gt;<pos:position pos:line="1166" pos:column="49"/></operator><name pos:line="1166" pos:column="46">set<pos:position pos:line="1166" pos:column="49"/></name><operator pos:line="1166" pos:column="49">.<pos:position pos:line="1166" pos:column="50"/></operator><name pos:line="1166" pos:column="50">connecttimeout<pos:position pos:line="1166" pos:column="64"/></name></name></expr>?<pos:position pos:line="1166" pos:column="65"/></condition><then pos:line="1166" pos:column="65">
                                       <expr><name><name pos:line="1167" pos:column="40">data<pos:position pos:line="1167" pos:column="44"/></name><operator pos:line="1167" pos:column="44">-&gt;<pos:position pos:line="1167" pos:column="49"/></operator><name pos:line="1167" pos:column="46">set<pos:position pos:line="1167" pos:column="49"/></name><operator pos:line="1167" pos:column="49">.<pos:position pos:line="1167" pos:column="50"/></operator><name pos:line="1167" pos:column="50">connecttimeout<pos:position pos:line="1167" pos:column="64"/></name></name></expr></then><else pos:line="1167" pos:column="64">:
                                       <expr><name><name pos:line="1168" pos:column="40">data<pos:position pos:line="1168" pos:column="44"/></name><operator pos:line="1168" pos:column="44">-&gt;<pos:position pos:line="1168" pos:column="49"/></operator><name pos:line="1168" pos:column="46">set<pos:position pos:line="1168" pos:column="49"/></name><operator pos:line="1168" pos:column="49">.<pos:position pos:line="1168" pos:column="50"/></operator><name pos:line="1168" pos:column="50">timeout<pos:position pos:line="1168" pos:column="57"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="1168" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="1168" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="1168" pos:column="60"/></expr_stmt>
    <comment type="block" pos:line="1169" pos:column="5">/* We can expect the conn-&gt;created time to be "now", as that was just
       recently set in the beginning of this function and nothing slow
       has been done since then until now. */</comment>
<cpp:endif pos:line="1172" pos:column="1">#<cpp:directive pos:line="1172" pos:column="2">endif<pos:position pos:line="1172" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="1173" pos:column="1">#<cpp:directive pos:line="1173" pos:column="2">endif<pos:position pos:line="1173" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1173" pos:column="8">/* SIGALRM */</comment>
  }<pos:position pos:line="1174" pos:column="4"/></block></then></if>
<cpp:endif pos:line="1175" pos:column="1">#<cpp:directive pos:line="1175" pos:column="2">endif<pos:position pos:line="1175" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1175" pos:column="8">/* USE_ARES */</comment>

  <comment type="block" format="doxygen" pos:line="1177" pos:column="3">/*************************************************************
   * Resolve the name of the server or proxy
   *************************************************************/</comment>
  <if pos:line="1180" pos:column="3">if<condition pos:line="1180" pos:column="5">(<expr><name><name pos:line="1180" pos:column="6">conn<pos:position pos:line="1180" pos:column="10"/></name><operator pos:line="1180" pos:column="10">-&gt;<pos:position pos:line="1180" pos:column="15"/></operator><name pos:line="1180" pos:column="12">bits<pos:position pos:line="1180" pos:column="16"/></name><operator pos:line="1180" pos:column="16">.<pos:position pos:line="1180" pos:column="17"/></operator><name pos:line="1180" pos:column="17">reuse<pos:position pos:line="1180" pos:column="22"/></name></name></expr>)<pos:position pos:line="1180" pos:column="23"/></condition><then pos:line="1180" pos:column="23"> <block pos:line="1180" pos:column="24">{
    <comment type="block" pos:line="1181" pos:column="5">/* re-used connection, no resolving is necessary */</comment>
    <expr_stmt><expr><name pos:line="1182" pos:column="5">hostaddr<pos:position pos:line="1182" pos:column="13"/></name> <operator pos:line="1182" pos:column="14">=<pos:position pos:line="1182" pos:column="15"/></operator> <name pos:line="1182" pos:column="16">NULL<pos:position pos:line="1182" pos:column="20"/></name></expr>;<pos:position pos:line="1182" pos:column="21"/></expr_stmt>
    <comment type="block" pos:line="1183" pos:column="5">/* we'll need to clear conn-&gt;dns_entry later in Curl_disconnect() */</comment>

    <if pos:line="1185" pos:column="5">if <condition pos:line="1185" pos:column="8">(<expr><name><name pos:line="1185" pos:column="9">conn<pos:position pos:line="1185" pos:column="13"/></name><operator pos:line="1185" pos:column="13">-&gt;<pos:position pos:line="1185" pos:column="18"/></operator><name pos:line="1185" pos:column="15">bits<pos:position pos:line="1185" pos:column="19"/></name><operator pos:line="1185" pos:column="19">.<pos:position pos:line="1185" pos:column="20"/></operator><name pos:line="1185" pos:column="20">httpproxy<pos:position pos:line="1185" pos:column="29"/></name></name></expr>)<pos:position pos:line="1185" pos:column="30"/></condition><then pos:line="1185" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="1186" pos:column="7">fix_hostname<pos:position pos:line="1186" pos:column="19"/></name><argument_list pos:line="1186" pos:column="19">(<argument><expr><name pos:line="1186" pos:column="20">conn<pos:position pos:line="1186" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="1186" pos:column="26">&amp;<pos:position pos:line="1186" pos:column="31"/></operator><name><name pos:line="1186" pos:column="27">conn<pos:position pos:line="1186" pos:column="31"/></name><operator pos:line="1186" pos:column="31">-&gt;<pos:position pos:line="1186" pos:column="36"/></operator><name pos:line="1186" pos:column="33">host<pos:position pos:line="1186" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="1186" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1186" pos:column="39"/></expr_stmt></block></then></if>
  }<pos:position pos:line="1187" pos:column="4"/></block></then>
  <else pos:line="1188" pos:column="3">else <block pos:line="1188" pos:column="8">{
    <comment type="block" pos:line="1189" pos:column="5">/* this is a fresh connect */</comment>

    <comment type="block" pos:line="1191" pos:column="5">/* set a pointer to the hostname we display */</comment>
    <expr_stmt><expr><call><name pos:line="1192" pos:column="5">fix_hostname<pos:position pos:line="1192" pos:column="17"/></name><argument_list pos:line="1192" pos:column="17">(<argument><expr><name pos:line="1192" pos:column="18">conn<pos:position pos:line="1192" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="1192" pos:column="24">&amp;<pos:position pos:line="1192" pos:column="29"/></operator><name><name pos:line="1192" pos:column="25">conn<pos:position pos:line="1192" pos:column="29"/></name><operator pos:line="1192" pos:column="29">-&gt;<pos:position pos:line="1192" pos:column="34"/></operator><name pos:line="1192" pos:column="31">host<pos:position pos:line="1192" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="1192" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1192" pos:column="37"/></expr_stmt>

    <if pos:line="1194" pos:column="5">if<condition pos:line="1194" pos:column="7">(<expr><operator pos:line="1194" pos:column="8">!<pos:position pos:line="1194" pos:column="9"/></operator><name><name pos:line="1194" pos:column="9">data<pos:position pos:line="1194" pos:column="13"/></name><operator pos:line="1194" pos:column="13">-&gt;<pos:position pos:line="1194" pos:column="18"/></operator><name pos:line="1194" pos:column="15">change<pos:position pos:line="1194" pos:column="21"/></name><operator pos:line="1194" pos:column="21">.<pos:position pos:line="1194" pos:column="22"/></operator><name pos:line="1194" pos:column="22">proxy<pos:position pos:line="1194" pos:column="27"/></name></name> <operator pos:line="1194" pos:column="28">||<pos:position pos:line="1194" pos:column="30"/></operator> <operator pos:line="1194" pos:column="31">!<pos:position pos:line="1194" pos:column="32"/></operator><operator pos:line="1194" pos:column="32">*<pos:position pos:line="1194" pos:column="33"/></operator><name><name pos:line="1194" pos:column="33">data<pos:position pos:line="1194" pos:column="37"/></name><operator pos:line="1194" pos:column="37">-&gt;<pos:position pos:line="1194" pos:column="42"/></operator><name pos:line="1194" pos:column="39">change<pos:position pos:line="1194" pos:column="45"/></name><operator pos:line="1194" pos:column="45">.<pos:position pos:line="1194" pos:column="46"/></operator><name pos:line="1194" pos:column="46">proxy<pos:position pos:line="1194" pos:column="51"/></name></name></expr>)<pos:position pos:line="1194" pos:column="52"/></condition><then pos:line="1194" pos:column="52"> <block pos:line="1194" pos:column="53">{
      <comment type="block" pos:line="1195" pos:column="7">/* If not connecting via a proxy, extract the port from the URL, if it is
       * there, thus overriding any defaults that might have been set above. */</comment>
      <expr_stmt><expr><name><name pos:line="1197" pos:column="7">conn<pos:position pos:line="1197" pos:column="11"/></name><operator pos:line="1197" pos:column="11">-&gt;<pos:position pos:line="1197" pos:column="16"/></operator><name pos:line="1197" pos:column="13">port<pos:position pos:line="1197" pos:column="17"/></name></name> <operator pos:line="1197" pos:column="18">=<pos:position pos:line="1197" pos:column="19"/></operator>  <name><name pos:line="1197" pos:column="21">conn<pos:position pos:line="1197" pos:column="25"/></name><operator pos:line="1197" pos:column="25">-&gt;<pos:position pos:line="1197" pos:column="30"/></operator><name pos:line="1197" pos:column="27">remote_port<pos:position pos:line="1197" pos:column="38"/></name></name></expr>;<pos:position pos:line="1197" pos:column="39"/></expr_stmt> <comment type="block" pos:line="1197" pos:column="40">/* it is the same port */</comment>

      <comment type="block" pos:line="1199" pos:column="7">/* Resolve target host right on */</comment>
      <expr_stmt><expr><name pos:line="1200" pos:column="7">rc<pos:position pos:line="1200" pos:column="9"/></name> <operator pos:line="1200" pos:column="10">=<pos:position pos:line="1200" pos:column="11"/></operator> <call><name pos:line="1200" pos:column="12">Curl_resolv<pos:position pos:line="1200" pos:column="23"/></name><argument_list pos:line="1200" pos:column="23">(<argument><expr><name pos:line="1200" pos:column="24">conn<pos:position pos:line="1200" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="1200" pos:column="30">conn<pos:position pos:line="1200" pos:column="34"/></name><operator pos:line="1200" pos:column="34">-&gt;<pos:position pos:line="1200" pos:column="39"/></operator><name pos:line="1200" pos:column="36">host<pos:position pos:line="1200" pos:column="40"/></name><operator pos:line="1200" pos:column="40">.<pos:position pos:line="1200" pos:column="41"/></operator><name pos:line="1200" pos:column="41">name<pos:position pos:line="1200" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="1200" pos:column="47">(<pos:position pos:line="1200" pos:column="48"/></operator><name pos:line="1200" pos:column="48">int<pos:position pos:line="1200" pos:column="51"/></name><operator pos:line="1200" pos:column="51">)<pos:position pos:line="1200" pos:column="52"/></operator><name><name pos:line="1200" pos:column="52">conn<pos:position pos:line="1200" pos:column="56"/></name><operator pos:line="1200" pos:column="56">-&gt;<pos:position pos:line="1200" pos:column="61"/></operator><name pos:line="1200" pos:column="58">port<pos:position pos:line="1200" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="1200" pos:column="64">&amp;<pos:position pos:line="1200" pos:column="69"/></operator><name pos:line="1200" pos:column="65">hostaddr<pos:position pos:line="1200" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1200" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1200" pos:column="75"/></expr_stmt>
      <if pos:line="1201" pos:column="7">if<condition pos:line="1201" pos:column="9">(<expr><name pos:line="1201" pos:column="10">rc<pos:position pos:line="1201" pos:column="12"/></name> <operator pos:line="1201" pos:column="13">==<pos:position pos:line="1201" pos:column="15"/></operator> <name pos:line="1201" pos:column="16">CURLRESOLV_PENDING<pos:position pos:line="1201" pos:column="34"/></name></expr>)<pos:position pos:line="1201" pos:column="35"/></condition><then pos:line="1201" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="1202" pos:column="9">*<pos:position pos:line="1202" pos:column="10"/></operator><name pos:line="1202" pos:column="10">async<pos:position pos:line="1202" pos:column="15"/></name> <operator pos:line="1202" pos:column="16">=<pos:position pos:line="1202" pos:column="17"/></operator> <name pos:line="1202" pos:column="18">TRUE<pos:position pos:line="1202" pos:column="22"/></name></expr>;<pos:position pos:line="1202" pos:column="23"/></expr_stmt></block></then>

      <elseif pos:line="1204" pos:column="7">else <if pos:line="1204" pos:column="12">if<condition pos:line="1204" pos:column="14">(<expr><operator pos:line="1204" pos:column="15">!<pos:position pos:line="1204" pos:column="16"/></operator><name pos:line="1204" pos:column="16">hostaddr<pos:position pos:line="1204" pos:column="24"/></name></expr>)<pos:position pos:line="1204" pos:column="25"/></condition><then pos:line="1204" pos:column="25"> <block pos:line="1204" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="1205" pos:column="9">failf<pos:position pos:line="1205" pos:column="14"/></name><argument_list pos:line="1205" pos:column="14">(<argument><expr><name pos:line="1205" pos:column="15">data<pos:position pos:line="1205" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1205" pos:column="21">"Couldn't resolve host '%s'"<pos:position pos:line="1205" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="1205" pos:column="51">conn<pos:position pos:line="1205" pos:column="55"/></name><operator pos:line="1205" pos:column="55">-&gt;<pos:position pos:line="1205" pos:column="60"/></operator><name pos:line="1205" pos:column="57">host<pos:position pos:line="1205" pos:column="61"/></name><operator pos:line="1205" pos:column="61">.<pos:position pos:line="1205" pos:column="62"/></operator><name pos:line="1205" pos:column="62">dispname<pos:position pos:line="1205" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="1205" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1205" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1206" pos:column="9">result<pos:position pos:line="1206" pos:column="15"/></name> <operator pos:line="1206" pos:column="16">=<pos:position pos:line="1206" pos:column="17"/></operator>  <name pos:line="1206" pos:column="19">CURLE_COULDNT_RESOLVE_HOST<pos:position pos:line="1206" pos:column="45"/></name></expr>;<pos:position pos:line="1206" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="1207" pos:column="9">/* don't return yet, we need to clean up the timeout first */</comment>
      }<pos:position pos:line="1208" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="1209" pos:column="6"/></block></then>
    <else pos:line="1210" pos:column="5">else <block pos:line="1210" pos:column="10">{
      <comment type="block" pos:line="1211" pos:column="7">/* This is a proxy that hasn't been resolved yet. */</comment>

      <comment type="block" pos:line="1213" pos:column="7">/* IDN-fix the proxy name */</comment>
      <expr_stmt><expr><call><name pos:line="1214" pos:column="7">fix_hostname<pos:position pos:line="1214" pos:column="19"/></name><argument_list pos:line="1214" pos:column="19">(<argument><expr><name pos:line="1214" pos:column="20">conn<pos:position pos:line="1214" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="1214" pos:column="26">&amp;<pos:position pos:line="1214" pos:column="31"/></operator><name><name pos:line="1214" pos:column="27">conn<pos:position pos:line="1214" pos:column="31"/></name><operator pos:line="1214" pos:column="31">-&gt;<pos:position pos:line="1214" pos:column="36"/></operator><name pos:line="1214" pos:column="33">proxy<pos:position pos:line="1214" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="1214" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1214" pos:column="40"/></expr_stmt>

      <comment type="block" pos:line="1216" pos:column="7">/* resolve proxy */</comment>
      <expr_stmt><expr><name pos:line="1217" pos:column="7">rc<pos:position pos:line="1217" pos:column="9"/></name> <operator pos:line="1217" pos:column="10">=<pos:position pos:line="1217" pos:column="11"/></operator> <call><name pos:line="1217" pos:column="12">Curl_resolv<pos:position pos:line="1217" pos:column="23"/></name><argument_list pos:line="1217" pos:column="23">(<argument><expr><name pos:line="1217" pos:column="24">conn<pos:position pos:line="1217" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="1217" pos:column="30">conn<pos:position pos:line="1217" pos:column="34"/></name><operator pos:line="1217" pos:column="34">-&gt;<pos:position pos:line="1217" pos:column="39"/></operator><name pos:line="1217" pos:column="36">proxy<pos:position pos:line="1217" pos:column="41"/></name><operator pos:line="1217" pos:column="41">.<pos:position pos:line="1217" pos:column="42"/></operator><name pos:line="1217" pos:column="42">name<pos:position pos:line="1217" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="1217" pos:column="48">(<pos:position pos:line="1217" pos:column="49"/></operator><name pos:line="1217" pos:column="49">int<pos:position pos:line="1217" pos:column="52"/></name><operator pos:line="1217" pos:column="52">)<pos:position pos:line="1217" pos:column="53"/></operator><name><name pos:line="1217" pos:column="53">conn<pos:position pos:line="1217" pos:column="57"/></name><operator pos:line="1217" pos:column="57">-&gt;<pos:position pos:line="1217" pos:column="62"/></operator><name pos:line="1217" pos:column="59">port<pos:position pos:line="1217" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="1217" pos:column="65">&amp;<pos:position pos:line="1217" pos:column="70"/></operator><name pos:line="1217" pos:column="66">hostaddr<pos:position pos:line="1217" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1217" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1217" pos:column="76"/></expr_stmt>

      <if pos:line="1219" pos:column="7">if<condition pos:line="1219" pos:column="9">(<expr><name pos:line="1219" pos:column="10">rc<pos:position pos:line="1219" pos:column="12"/></name> <operator pos:line="1219" pos:column="13">==<pos:position pos:line="1219" pos:column="15"/></operator> <name pos:line="1219" pos:column="16">CURLRESOLV_PENDING<pos:position pos:line="1219" pos:column="34"/></name></expr>)<pos:position pos:line="1219" pos:column="35"/></condition><then pos:line="1219" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="1220" pos:column="9">*<pos:position pos:line="1220" pos:column="10"/></operator><name pos:line="1220" pos:column="10">async<pos:position pos:line="1220" pos:column="15"/></name> <operator pos:line="1220" pos:column="16">=<pos:position pos:line="1220" pos:column="17"/></operator> <name pos:line="1220" pos:column="18">TRUE<pos:position pos:line="1220" pos:column="22"/></name></expr>;<pos:position pos:line="1220" pos:column="23"/></expr_stmt></block></then>

      <elseif pos:line="1222" pos:column="7">else <if pos:line="1222" pos:column="12">if<condition pos:line="1222" pos:column="14">(<expr><operator pos:line="1222" pos:column="15">!<pos:position pos:line="1222" pos:column="16"/></operator><name pos:line="1222" pos:column="16">hostaddr<pos:position pos:line="1222" pos:column="24"/></name></expr>)<pos:position pos:line="1222" pos:column="25"/></condition><then pos:line="1222" pos:column="25"> <block pos:line="1222" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="1223" pos:column="9">failf<pos:position pos:line="1223" pos:column="14"/></name><argument_list pos:line="1223" pos:column="14">(<argument><expr><name pos:line="1223" pos:column="15">data<pos:position pos:line="1223" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1223" pos:column="21">"Couldn't resolve proxy '%s'"<pos:position pos:line="1223" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="1223" pos:column="52">conn<pos:position pos:line="1223" pos:column="56"/></name><operator pos:line="1223" pos:column="56">-&gt;<pos:position pos:line="1223" pos:column="61"/></operator><name pos:line="1223" pos:column="58">proxy<pos:position pos:line="1223" pos:column="63"/></name><operator pos:line="1223" pos:column="63">.<pos:position pos:line="1223" pos:column="64"/></operator><name pos:line="1223" pos:column="64">dispname<pos:position pos:line="1223" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="1223" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1223" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1224" pos:column="9">result<pos:position pos:line="1224" pos:column="15"/></name> <operator pos:line="1224" pos:column="16">=<pos:position pos:line="1224" pos:column="17"/></operator> <name pos:line="1224" pos:column="18">CURLE_COULDNT_RESOLVE_PROXY<pos:position pos:line="1224" pos:column="45"/></name></expr>;<pos:position pos:line="1224" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="1225" pos:column="9">/* don't return yet, we need to clean up the timeout first */</comment>
      }<pos:position pos:line="1226" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="1227" pos:column="6"/></block></else></if>
  }<pos:position pos:line="1228" pos:column="4"/></block></else></if>
  <expr_stmt><expr><operator pos:line="1229" pos:column="3">*<pos:position pos:line="1229" pos:column="4"/></operator><name pos:line="1229" pos:column="4">addr<pos:position pos:line="1229" pos:column="8"/></name> <operator pos:line="1229" pos:column="9">=<pos:position pos:line="1229" pos:column="10"/></operator> <name pos:line="1229" pos:column="11">hostaddr<pos:position pos:line="1229" pos:column="19"/></name></expr>;<pos:position pos:line="1229" pos:column="20"/></expr_stmt>

<cpp:if pos:line="1231" pos:column="1">#<cpp:directive pos:line="1231" pos:column="2">if<pos:position pos:line="1231" pos:column="4"/></cpp:directive> <expr><call><name pos:line="1231" pos:column="5">defined<pos:position pos:line="1231" pos:column="12"/></name><argument_list pos:line="1231" pos:column="12">(<argument><expr><name pos:line="1231" pos:column="13">HAVE_ALARM<pos:position pos:line="1231" pos:column="23"/></name></expr></argument>)<pos:position pos:line="1231" pos:column="24"/></argument_list></call> <operator pos:line="1231" pos:column="25">&amp;&amp;<pos:position pos:line="1231" pos:column="35"/></operator> <call><name pos:line="1231" pos:column="28">defined<pos:position pos:line="1231" pos:column="35"/></name><argument_list pos:line="1231" pos:column="35">(<argument><expr><name pos:line="1231" pos:column="36">SIGALRM<pos:position pos:line="1231" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1231" pos:column="44"/></argument_list></call> <operator pos:line="1231" pos:column="45">&amp;&amp;<pos:position pos:line="1231" pos:column="55"/></operator> <operator pos:line="1231" pos:column="48">!<pos:position pos:line="1231" pos:column="49"/></operator><call><name pos:line="1231" pos:column="49">defined<pos:position pos:line="1231" pos:column="56"/></name><argument_list pos:line="1231" pos:column="56">(<argument><expr><name pos:line="1231" pos:column="57">USE_ARES<pos:position pos:line="1231" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1231" pos:column="66"/></argument_list></call></expr></cpp:if>
  <if pos:line="1232" pos:column="3">if<condition pos:line="1232" pos:column="5">(<expr><operator pos:line="1232" pos:column="6">(<pos:position pos:line="1232" pos:column="7"/></operator><name><name pos:line="1232" pos:column="7">data<pos:position pos:line="1232" pos:column="11"/></name><operator pos:line="1232" pos:column="11">-&gt;<pos:position pos:line="1232" pos:column="16"/></operator><name pos:line="1232" pos:column="13">set<pos:position pos:line="1232" pos:column="16"/></name><operator pos:line="1232" pos:column="16">.<pos:position pos:line="1232" pos:column="17"/></operator><name pos:line="1232" pos:column="17">timeout<pos:position pos:line="1232" pos:column="24"/></name></name> <operator pos:line="1232" pos:column="25">||<pos:position pos:line="1232" pos:column="27"/></operator> <name><name pos:line="1232" pos:column="28">data<pos:position pos:line="1232" pos:column="32"/></name><operator pos:line="1232" pos:column="32">-&gt;<pos:position pos:line="1232" pos:column="37"/></operator><name pos:line="1232" pos:column="34">set<pos:position pos:line="1232" pos:column="37"/></name><operator pos:line="1232" pos:column="37">.<pos:position pos:line="1232" pos:column="38"/></operator><name pos:line="1232" pos:column="38">connecttimeout<pos:position pos:line="1232" pos:column="52"/></name></name><operator pos:line="1232" pos:column="52">)<pos:position pos:line="1232" pos:column="53"/></operator> <operator pos:line="1232" pos:column="54">&amp;&amp;<pos:position pos:line="1232" pos:column="64"/></operator> <operator pos:line="1232" pos:column="57">!<pos:position pos:line="1232" pos:column="58"/></operator><name><name pos:line="1232" pos:column="58">data<pos:position pos:line="1232" pos:column="62"/></name><operator pos:line="1232" pos:column="62">-&gt;<pos:position pos:line="1232" pos:column="67"/></operator><name pos:line="1232" pos:column="64">set<pos:position pos:line="1232" pos:column="67"/></name><operator pos:line="1232" pos:column="67">.<pos:position pos:line="1232" pos:column="68"/></operator><name pos:line="1232" pos:column="68">no_signal<pos:position pos:line="1232" pos:column="77"/></name></name></expr>)<pos:position pos:line="1232" pos:column="78"/></condition><then pos:line="1232" pos:column="78"> <block pos:line="1232" pos:column="79">{
<cpp:ifdef pos:line="1233" pos:column="1">#<cpp:directive pos:line="1233" pos:column="2">ifdef<pos:position pos:line="1233" pos:column="7"/></cpp:directive> <name pos:line="1233" pos:column="8">HAVE_SIGACTION<pos:position pos:line="1233" pos:column="22"/></name></cpp:ifdef>
    <if pos:line="1234" pos:column="5">if<condition pos:line="1234" pos:column="7">(<expr><name pos:line="1234" pos:column="8">keep_copysig<pos:position pos:line="1234" pos:column="20"/></name></expr>)<pos:position pos:line="1234" pos:column="21"/></condition><then pos:line="1234" pos:column="21"> <block pos:line="1234" pos:column="22">{
      <comment type="block" pos:line="1235" pos:column="7">/* we got a struct as it looked before, now put that one back nice
         and clean */</comment>
      <expr_stmt><expr><call><name pos:line="1237" pos:column="7">sigaction<pos:position pos:line="1237" pos:column="16"/></name><argument_list pos:line="1237" pos:column="16">(<argument><expr><name pos:line="1237" pos:column="17">SIGALRM<pos:position pos:line="1237" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="1237" pos:column="26">&amp;<pos:position pos:line="1237" pos:column="31"/></operator><name pos:line="1237" pos:column="27">keep_sigact<pos:position pos:line="1237" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1237" pos:column="40">NULL<pos:position pos:line="1237" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1237" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1237" pos:column="46"/></expr_stmt> <comment type="block" pos:line="1237" pos:column="47">/* put it back */</comment>
    }<pos:position pos:line="1238" pos:column="6"/></block></then></if>
<cpp:else pos:line="1239" pos:column="1">#<cpp:directive pos:line="1239" pos:column="2">else<pos:position pos:line="1239" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="1240" pos:column="1">#<cpp:directive pos:line="1240" pos:column="2">ifdef<pos:position pos:line="1240" pos:column="7"/></cpp:directive> <name pos:line="1240" pos:column="8">HAVE_SIGNAL<pos:position pos:line="1240" pos:column="19"/></name></cpp:ifdef>
    <comment type="block" pos:line="1241" pos:column="5">/* restore the previous SIGALRM handler */</comment>
    <expr_stmt><expr><call><name pos:line="1242" pos:column="5">signal<pos:position pos:line="1242" pos:column="11"/></name><argument_list pos:line="1242" pos:column="11">(<argument><expr><name pos:line="1242" pos:column="12">SIGALRM<pos:position pos:line="1242" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="1242" pos:column="21">keep_sigact<pos:position pos:line="1242" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1242" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1242" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="1243" pos:column="1">#<cpp:directive pos:line="1243" pos:column="2">endif<pos:position pos:line="1243" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="1244" pos:column="1">#<cpp:directive pos:line="1244" pos:column="2">endif<pos:position pos:line="1244" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="1244" pos:column="8">/* HAVE_SIGACTION */</comment>

    <comment type="block" pos:line="1246" pos:column="5">/* switch back the alarm() to either zero or to what it was before minus
       the time we spent until now! */</comment>
    <if pos:line="1248" pos:column="5">if<condition pos:line="1248" pos:column="7">(<expr><name pos:line="1248" pos:column="8">prev_alarm<pos:position pos:line="1248" pos:column="18"/></name></expr>)<pos:position pos:line="1248" pos:column="19"/></condition><then pos:line="1248" pos:column="19"> <block pos:line="1248" pos:column="20">{
      <comment type="block" pos:line="1249" pos:column="7">/* there was an alarm() set before us, now put it back */</comment>
      <decl_stmt><decl><type><name pos:line="1250" pos:column="7">unsigned<pos:position pos:line="1250" pos:column="15"/></name> <name pos:line="1250" pos:column="16">long<pos:position pos:line="1250" pos:column="20"/></name></type> <name pos:line="1250" pos:column="21">elapsed_ms<pos:position pos:line="1250" pos:column="31"/></name> <init pos:line="1250" pos:column="32">= <expr><call><name pos:line="1250" pos:column="34">Curl_tvdiff<pos:position pos:line="1250" pos:column="45"/></name><argument_list pos:line="1250" pos:column="45">(<argument><expr><call><name pos:line="1250" pos:column="46">Curl_tvnow<pos:position pos:line="1250" pos:column="56"/></name><argument_list pos:line="1250" pos:column="56">()<pos:position pos:line="1250" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1250" pos:column="60">conn<pos:position pos:line="1250" pos:column="64"/></name><operator pos:line="1250" pos:column="64">-&gt;<pos:position pos:line="1250" pos:column="69"/></operator><name pos:line="1250" pos:column="66">created<pos:position pos:line="1250" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="1250" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1250" pos:column="75"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="1251" pos:column="7">unsigned<pos:position pos:line="1251" pos:column="15"/></name> <name pos:line="1251" pos:column="16">long<pos:position pos:line="1251" pos:column="20"/></name></type> <name pos:line="1251" pos:column="21">alarm_set<pos:position pos:line="1251" pos:column="30"/></name></decl>;<pos:position pos:line="1251" pos:column="31"/></decl_stmt>

      <comment type="block" pos:line="1253" pos:column="7">/* the alarm period is counted in even number of seconds */</comment>
      <expr_stmt><expr><name pos:line="1254" pos:column="7">alarm_set<pos:position pos:line="1254" pos:column="16"/></name> <operator pos:line="1254" pos:column="17">=<pos:position pos:line="1254" pos:column="18"/></operator> <name pos:line="1254" pos:column="19">prev_alarm<pos:position pos:line="1254" pos:column="29"/></name> <operator pos:line="1254" pos:column="30">-<pos:position pos:line="1254" pos:column="31"/></operator> <name pos:line="1254" pos:column="32">elapsed_ms<pos:position pos:line="1254" pos:column="42"/></name><operator pos:line="1254" pos:column="42">/<pos:position pos:line="1254" pos:column="43"/></operator><literal type="number" pos:line="1254" pos:column="43">1000<pos:position pos:line="1254" pos:column="47"/></literal></expr>;<pos:position pos:line="1254" pos:column="48"/></expr_stmt>

      <if pos:line="1256" pos:column="7">if<condition pos:line="1256" pos:column="9">(<expr><operator pos:line="1256" pos:column="10">!<pos:position pos:line="1256" pos:column="11"/></operator><name pos:line="1256" pos:column="11">alarm_set<pos:position pos:line="1256" pos:column="20"/></name> <operator pos:line="1256" pos:column="21">||<pos:position pos:line="1256" pos:column="23"/></operator>
         <operator pos:line="1257" pos:column="10">(<pos:position pos:line="1257" pos:column="11"/></operator><operator pos:line="1257" pos:column="11">(<pos:position pos:line="1257" pos:column="12"/></operator><name pos:line="1257" pos:column="12">alarm_set<pos:position pos:line="1257" pos:column="21"/></name> <operator pos:line="1257" pos:column="22">&gt;=<pos:position pos:line="1257" pos:column="27"/></operator> <literal type="number" pos:line="1257" pos:column="25">0x80000000<pos:position pos:line="1257" pos:column="35"/></literal><operator pos:line="1257" pos:column="35">)<pos:position pos:line="1257" pos:column="36"/></operator> <operator pos:line="1257" pos:column="37">&amp;&amp;<pos:position pos:line="1257" pos:column="47"/></operator> <operator pos:line="1257" pos:column="40">(<pos:position pos:line="1257" pos:column="41"/></operator><name pos:line="1257" pos:column="41">prev_alarm<pos:position pos:line="1257" pos:column="51"/></name> <operator pos:line="1257" pos:column="52">&lt;<pos:position pos:line="1257" pos:column="56"/></operator> <literal type="number" pos:line="1257" pos:column="54">0x80000000<pos:position pos:line="1257" pos:column="64"/></literal><operator pos:line="1257" pos:column="64">)<pos:position pos:line="1257" pos:column="65"/></operator><operator pos:line="1257" pos:column="65">)<pos:position pos:line="1257" pos:column="66"/></operator></expr> )<pos:position pos:line="1257" pos:column="68"/></condition><then pos:line="1257" pos:column="68"> <block pos:line="1257" pos:column="69">{
        <comment type="block" pos:line="1258" pos:column="9">/* if the alarm time-left reached zero or turned "negative" (counted
           with unsigned values), we should fire off a SIGALRM here, but we
           won't, and zero would be to switch it off so we never set it to
           less than 1! */</comment>
        <expr_stmt><expr><call><name pos:line="1262" pos:column="9">alarm<pos:position pos:line="1262" pos:column="14"/></name><argument_list pos:line="1262" pos:column="14">(<argument><expr><literal type="number" pos:line="1262" pos:column="15">1<pos:position pos:line="1262" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="1262" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="1262" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1263" pos:column="9">result<pos:position pos:line="1263" pos:column="15"/></name> <operator pos:line="1263" pos:column="16">=<pos:position pos:line="1263" pos:column="17"/></operator> <name pos:line="1263" pos:column="18">CURLE_OPERATION_TIMEOUTED<pos:position pos:line="1263" pos:column="43"/></name></expr>;<pos:position pos:line="1263" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1264" pos:column="9">failf<pos:position pos:line="1264" pos:column="14"/></name><argument_list pos:line="1264" pos:column="14">(<argument><expr><name pos:line="1264" pos:column="15">data<pos:position pos:line="1264" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1264" pos:column="21">"Previous alarm fired off!"<pos:position pos:line="1264" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="1264" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1264" pos:column="50"/></expr_stmt>
      }<pos:position pos:line="1265" pos:column="8"/></block></then>
      <else pos:line="1266" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="1267" pos:column="9">alarm<pos:position pos:line="1267" pos:column="14"/></name><argument_list pos:line="1267" pos:column="14">(<argument><expr><operator pos:line="1267" pos:column="15">(<pos:position pos:line="1267" pos:column="16"/></operator><name pos:line="1267" pos:column="16">unsigned<pos:position pos:line="1267" pos:column="24"/></name> <name pos:line="1267" pos:column="25">int<pos:position pos:line="1267" pos:column="28"/></name><operator pos:line="1267" pos:column="28">)<pos:position pos:line="1267" pos:column="29"/></operator><name pos:line="1267" pos:column="29">alarm_set<pos:position pos:line="1267" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1267" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1267" pos:column="40"/></expr_stmt></block></else></if>
    }<pos:position pos:line="1268" pos:column="6"/></block></then>
    <else pos:line="1269" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="1270" pos:column="7">alarm<pos:position pos:line="1270" pos:column="12"/></name><argument_list pos:line="1270" pos:column="12">(<argument><expr><literal type="number" pos:line="1270" pos:column="13">0<pos:position pos:line="1270" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="1270" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="1270" pos:column="16"/></expr_stmt></block></else></if> <comment type="block" pos:line="1270" pos:column="17">/* just shut it off */</comment>
  }<pos:position pos:line="1271" pos:column="4"/></block></then></if>
<cpp:endif pos:line="1272" pos:column="1">#<cpp:directive pos:line="1272" pos:column="2">endif<pos:position pos:line="1272" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="1274" pos:column="3">return <expr><name pos:line="1274" pos:column="10">result<pos:position pos:line="1274" pos:column="16"/></name></expr>;<pos:position pos:line="1274" pos:column="17"/></return>
}<pos:position pos:line="1275" pos:column="2"/></block></function></unit>

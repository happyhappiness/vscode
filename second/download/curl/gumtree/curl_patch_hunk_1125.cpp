 "\n"
 "                curl http://{site,host}.host[1-5].com -o \"#1_#2\"\n"
 "\n"
 "              You  may use this option as many times as the number of URLs you\n"
 , stdout);
  fputs(
-"              have.\n"
+"              have. For example, if you specify two URLs on the  same  command\n"
+"              line, you can use it like this:\n"
+"\n"
+"                curl -o aa example.com -o bb example.net\n"
+"\n"
+"              and  the  order  of  the -o options and the URLs doesn't matter,\n"
+"              just that the first -o is for the first URL and so  on,  so  the\n"
+"              above command line can also be written as\n"
 "\n"
-"              See also the --create-dirs option to create the  local  directo-\n"
-"              ries  dynamically.  Specifying the output as '-' (a single dash)\n"
+"                curl example.com example.net -o aa -o bb\n"
+"\n"
+, stdout);
+ fputs(
+"              See  also  the --create-dirs option to create the local directo-\n"
+"              ries dynamically. Specifying the output as '-' (a  single  dash)\n"
 "              will force the output to be done to stdout.\n"
 "\n"
 "       -O, --remote-name\n"
-"              Write output to a local file named like the remote file we  get.\n"
-"              (Only  the file part of the remote file is used, the path is cut\n"
+"              Write  output to a local file named like the remote file we get.\n"
+"              (Only the file part of the remote file is used, the path is  cut\n"
 "              off.)\n"
 "\n"
+"              The  file will be saved in the current working directory. If you\n"
 , stdout);
  fputs(
-"              The file will be saved in the current working directory. If  you\n"
-"              want  the  file  saved  in  a different directory, make sure you\n"
-"              change the current working directory before invoking  curl  with\n"
+"              want the file saved in a  different  directory,  make  sure  you\n"
+"              change  the  current working directory before invoking curl with\n"
 "              this option.\n"
 "\n"
-"              The  remote  file  name  to use for saving is extracted from the\n"
-"              given URL, nothing else, and if it already  exists  it  will  be\n"
+"              The remote file name to use for saving  is  extracted  from  the\n"
+"              given  URL,  nothing  else,  and if it already exists it will be\n"
+"              overwritten. If you want the server to be  able  to  choose  the\n"
 , stdout);
  fputs(
-"              overwritten.  If  you  want  the server to be able to choose the\n"
 "              file name refer to -J, --remote-header-name which can be used in\n"
-"              addition  to  this option. If the server chooses a file name and\n"
+"              addition to this option. If the server chooses a file  name  and\n"
 "              that name already exists it will not be overwritten.\n"
 "\n"
 "              There is no URL decoding done on the file name. If it has %20 or\n"
-"              other  URL  encoded parts of the name, they will end up as-is as\n"
+"              other URL encoded parts of the name, they will end up  as-is  as\n"
 "              file name.\n"
 "\n"
+"              You  may use this option as many times as the number of URLs you\n"
 , stdout);
  fputs(
-"              You may use this option as many times as the number of URLs  you\n"
 "              have.\n"
 "\n"
 "       --oauth2-bearer\n"
 "              (IMAP, POP3, SMTP) Specify the Bearer Token for OAUTH 2.0 server\n"
 "              authentication. The Bearer Token is used in conjunction with the\n"
-"              user  name  which  can  be specified as part of the --url or -u,\n"
+"              user name which can be specified as part of  the  --url  or  -u,\n"
 "              --user options.\n"
 "\n"
-"              The Bearer Token and user name are formatted  according  to  RFC\n"
+"              The  Bearer  Token  and user name are formatted according to RFC\n"
 "              6750.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-"       --proxy-header <header>\n"
-"              (HTTP)  Extra header to include in the request when sending HTTP\n"
-"              to a proxy. You may specify any number of extra headers. This is\n"
-"              the  equivalent option to -H, --header but is for proxy communi-\n"
-"              cation only like in CONNECT requests when you  want  a  separate\n"
 , stdout);
  fputs(
-"              header  sent  to  the proxy to what is sent to the actual remote\n"
+"       --proxy-header <header>\n"
+"              (HTTP) Extra header to include in the request when sending  HTTP\n"
+"              to a proxy. You may specify any number of extra headers. This is\n"
+"              the equivalent option to -H, --header but is for proxy  communi-\n"
+"              cation  only  like  in CONNECT requests when you want a separate\n"
+"              header sent to the proxy to what is sent to  the  actual  remote\n"
 "              host.\n"
 "\n"
-"              curl will make sure that each header  you  add/replace  is  sent\n"
+, stdout);
+ fputs(
+"              curl  will  make  sure  that each header you add/replace is sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
-"              Headers  specified  with  this  option  will  not be included in\n"
-, stdout);
- fputs(
+"              Headers specified with this  option  will  not  be  included  in\n"
 "              requests that curl knows will not be sent to a proxy.\n"
 "\n"
-"              This option can be used  multiple  times  to  add/replace/remove\n"
+, stdout);
+ fputs(
+"              This  option  can  be  used multiple times to add/replace/remove\n"
 "              multiple headers.\n"
 "              (Added in 7.37.0)\n"
 "       -p, --proxytunnel\n"
 "              When an HTTP proxy is used (-x, --proxy), this option will cause\n"
-"              non-HTTP protocols  to  attempt  to  tunnel  through  the  proxy\n"
-"              instead  of merely using it to do HTTP-like operations. The tun-\n"
+"              non-HTTP  protocols  to  attempt  to  tunnel  through  the proxy\n"
+"              instead of merely using it to do HTTP-like operations. The  tun-\n"
+"              nel  approach  is  made  with the HTTP proxy CONNECT request and\n"
 , stdout);
  fputs(
-"              nel approach is made with the HTTP  proxy  CONNECT  request  and\n"
 "              requires that the proxy allows direct connect to the remote port\n"
 "              number curl wants to tunnel through to.\n"
 "\n"
 "       -P, --ftp-port <address>\n"
-"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
-"              necting  with  FTP.  This  switch makes curl use active mode. In\n"
-"              practice, curl then tells the server  to  connect  back  to  the\n"
+"              (FTP)  Reverses  the  default initiator/listener roles when con-\n"
+"              necting with FTP. This switch makes curl  use  active  mode.  In\n"
+"              practice,  curl  then  tells  the  server to connect back to the\n"
+"              client's specified address and port, while passive mode asks the\n"
 , stdout);
  fputs(
-"              client's specified address and port, while passive mode asks the\n"
-"              server to setup an IP address and port for  it  to  connect  to.\n"
+"              server  to  setup  an  IP address and port for it to connect to.\n"
 "              <address> should be one of:\n"
 "\n"
 "              interface\n"
-"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
+"                     i.e \"eth0\" to specify which interface's  IP  address  you\n"
 "                     want to use (Unix only)\n"
 "\n"
 "              IP address\n"
 "                     i.e \"192.168.10.1\" to specify the exact IP address\n"
 "\n"
 "              host name\n"
-, stdout);
- fputs(
 "                     i.e \"my.host.domain\" to specify the machine\n"
 "\n"
-"              -      make curl pick the same IP address that is  already  used\n"
+, stdout);
+ fputs(
+"              -      make  curl  pick the same IP address that is already used\n"
 "                     for the control connection\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
-"              Disable the use of PORT with --ftp-pasv. Disable the attempt  to\n"
-"              use  the  EPRT  command instead of PORT by using --disable-eprt.\n"
+"              Disable  the use of PORT with --ftp-pasv. Disable the attempt to\n"
+"              use the EPRT command instead of PORT  by  using  --disable-eprt.\n"
 "              EPRT is really PORT++.\n"
 "\n"
+"              Starting in 7.19.5, you can append \":[start]-[end]\" to the right\n"
 , stdout);
  fputs(
-"              Starting in 7.19.5, you can append \":[start]-[end]\" to the right\n"
-"              of  the  address,  to tell curl what TCP port range to use. That\n"
+"              of the address, to tell curl what TCP port range  to  use.  That\n"
 "              means you specify a port range, from a lower to a higher number.\n"
 "              A single number works as well, but do note that it increases the\n"
 "              risk of failure since the port may not be available.\n"
 "\n"
 "       --pass <phrase>\n"
 "              (SSL/SSH) Passphrase for the private key\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --path-as-is\n"
-"              Tell curl to not handle sequences of /../ or /./  in  the  given\n"
-"              URL  path.  Normally curl will squash or merge them according to\n"
+, stdout);
+ fputs(
+"              Tell  curl  to  not handle sequences of /../ or /./ in the given\n"
+"              URL path. Normally curl will squash or merge them  according  to\n"
 "              standards but with this option set you tell it not to do that.\n"
 "\n"
 "              (Added in 7.42.0)\n"
 "\n"
 "       --post301\n"
 "              (HTTP) Tells curl to respect RFC 7230/6.4.2 and not convert POST\n"
+"              requests into GET requests when following a 301 redirection. The\n"
 , stdout);
  fputs(
-"              requests into GET requests when following a 301 redirection. The\n"
-"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
-"              the  conversion  by  default to maintain consistency. However, a\n"
-"              server may require a POST to remain a POST after  such  a  redi-\n"
-"              rection.  This  option is meaningful only when using -L, --loca-\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
 "              tion (Added in 7.17.1)\n"
 "\n"
 "       --post302\n"
-, stdout);
- fputs(
 "              (HTTP) Tells curl to respect RFC 7230/6.4.3 and not convert POST\n"
-"              requests into GET requests when following a 302 redirection. The\n"
-"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
-"              the  conversion  by  default to maintain consistency. However, a\n"
-"              server may require a POST to remain a POST after  such  a  redi-\n"
-"              rection.  This  option is meaningful only when using -L, --loca-\n"
 , stdout);
  fputs(
+"              requests into GET requests when following a 302 redirection. The\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
 "              tion (Added in 7.19.1)\n"
 "\n"
 "       --post303\n"
+, stdout);
+ fputs(
 "              (HTTP) Tells curl to respect RFC 7230/6.4.4 and not convert POST\n"
 "              requests into GET requests when following a 303 redirection. The\n"
-"              non-RFC behaviour is ubiquitous in web browsers,  so  curl  does\n"
-"              the  conversion  by  default to maintain consistency. However, a\n"
-"              server may require a POST to remain a POST after  such  a  redi-\n"
+"              non-RFC  behaviour  is  ubiquitous in web browsers, so curl does\n"
+"              the conversion by default to maintain  consistency.  However,  a\n"
+"              server  may  require  a POST to remain a POST after such a redi-\n"
+"              rection. This option is meaningful only when using  -L,  --loca-\n"
 , stdout);
  fputs(
-"              rection.  This  option is meaningful only when using -L, --loca-\n"
 "              tion (Added in 7.26.0)\n"
 "\n"
 "       --proto <protocols>\n"
-"              Tells  curl  to  use  the  listed  protocols  for  its   initial\n"
-"              retrieval. Protocols are evaluated left to right, are comma sep-\n"
-"              arated, and are each a protocol name or 'all',  optionally  pre-\n"
-"              fixed by zero or more modifiers. Available modifiers are:\n"
+"              Tells  curl  to limit what protocols it may use in the transfer.\n"
+"              Protocols are evaluated left to right, are comma separated,  and\n"
+"              are each a protocol name or\n"
 "\n"
-, stdout);
- fputs(
 "              +  Permit this protocol in addition to protocols already permit-\n"
 "                 ted (this is the default if no modifier is used).\n"
 "\n"
 "              -  Deny this protocol, removing it from the  list  of  protocols\n"
+, stdout);
+ fputs(
 "                 already permitted.\n"
 "\n"
 "              =  Permit  only this protocol (ignoring the list already permit-\n"
 "                 ted), though subject  to  later  modification  by  subsequent\n"
 "                 entries in the comma separated list.\n"
 "\n"
-, stdout);
- fputs(
 "              For example:\n"
 "\n"
 "              --proto -ftps  uses the default protocols, but disables ftps\n"
 "\n"
 "              --proto -all,https,+http\n"
 "                             only enables http and https\n"
 "\n"
 "              --proto =http,https\n"
+, stdout);
+ fputs(
 "                             also only enables http and https\n"
 "\n"
 "              Unknown  protocols  produce  a  warning.  This allows scripts to\n"
 "              safely rely on being able to disable potentially dangerous  pro-\n"
-, stdout);
- fputs(
 "              tocols,  without  relying  upon  support for that protocol being\n"
 "              built into curl to avoid an error.\n"
 "\n"
 "              This option can be used multiple times, in which case the effect\n"
+, stdout);
+ fputs(
 "              is  the same as concatenating the protocols into one instance of\n"
 "              the option.\n"
 "\n"
 "              (Added in 7.20.2)\n"
 "\n"
 "       --proto-default <protocol>\n"
 "              Tells curl to use protocol for any URL missing a scheme name.\n"
 "\n"
 "              Example:\n"
 "\n"
-, stdout);
- fputs(
 "              --proto-default https ftp.mozilla.org\n"
 "                     https://ftp.mozilla.org\n"
 "\n"
 "       An unknown or unsupported protocol causes error  CURLE_UNSUPPORTED_PRO-\n"
 "       TOCOL.\n"
 "\n"
+, stdout);
+ fputs(
 "       This option does not change the default proxy protocol (http).\n"
 "\n"
 "       Without  this  option  curl  would  make a guess based on the host, see\n"
 "       --url for details.\n"
 "\n"
 "       (Added in 7.45.0)\n"
 "\n"
 "       --proto-redir <protocols>\n"
-, stdout);
- fputs(
-"              Tells curl to use the listed protocols on redirect. See  --proto\n"
-"              for how protocols are represented.\n"
+"              Tells curl to limit what protocols it may use on redirect.  Pro-\n"
+"              tocols  denied by --proto are not overridden by this option. See\n"
+"              --proto for how protocols are represented.\n"
 "\n"
 "              Example:\n"
 "\n"
+, stdout);
+ fputs(
 "              --proto-redir -all,http,https\n"
 "                     Allow only HTTP and HTTPS on redirect.\n"
 "\n"
-"       By  default  curl  will  allow all protocols on redirect except several\n"
-"       disabled for security reasons: Since 7.19.4 FILE and SCP are  disabled,\n"
+"       By default curl will allow all protocols  on  redirect  except  several\n"
+"       disabled  for security reasons: Since 7.19.4 FILE and SCP are disabled,\n"
 "       and since 7.40.0 SMB and SMBS are also disabled. Specifying all or +all\n"
-, stdout);
- fputs(
-"       enables all protocols on redirect, including those disabled  for  secu-\n"
+"       enables  all  protocols on redirect, including those disabled for secu-\n"
 "       rity.\n"
 "\n"
 "       (Added in 7.20.2)\n"
 "\n"
 "       --proxy-anyauth\n"
-"              Tells  curl to pick a suitable authentication method when commu-\n"
-"              nicating with  the  given  proxy.  This  might  cause  an  extra\n"
+, stdout);
+ fputs(
+"              Tells curl to pick a suitable authentication method when  commu-\n"
+"              nicating  with  the  given  proxy.  This  might  cause  an extra\n"
 "              request/response round-trip. (Added in 7.13.2)\n"
 "\n"
 "       --proxy-basic\n"
-"              Tells  curl  to use HTTP Basic authentication when communicating\n"
+"              Tells curl to use HTTP Basic authentication  when  communicating\n"
+"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
+"              remote host. Basic is the  default  authentication  method  curl\n"
 , stdout);
  fputs(
-"              with the given proxy. Use --basic for enabling HTTP Basic with a\n"
-"              remote  host.  Basic  is  the default authentication method curl\n"
 "              uses with proxies.\n"
 "\n"
 "       --proxy-digest\n"
-"              Tells curl to use HTTP Digest authentication when  communicating\n"
+"              Tells  curl to use HTTP Digest authentication when communicating\n"
 "              with the given proxy. Use --digest for enabling HTTP Digest with\n"
 "              a remote host.\n"
 "\n"
 "       --proxy-negotiate\n"
+"              Tells  curl  to  use HTTP Negotiate (SPNEGO) authentication when\n"
+"              communicating with the given proxy. Use --negotiate for enabling\n"
 , stdout);
  fputs(
-"              Tells curl to use HTTP Negotiate  (SPNEGO)  authentication  when\n"
-"              communicating with the given proxy. Use --negotiate for enabling\n"
 "              HTTP Negotiate (SPNEGO) with a remote host. (Added in 7.17.1)\n"
 "\n"
 "       --proxy-ntlm\n"
-"              Tells curl to use HTTP NTLM  authentication  when  communicating\n"
+"              Tells  curl  to  use HTTP NTLM authentication when communicating\n"
 "              with the given proxy. Use --ntlm for enabling NTLM with a remote\n"
 "              host.\n"
 "\n"
 "       --proxy-service-name <servicename>\n"
-, stdout);
- fputs(
-"              This option allows you to change  the  service  name  for  proxy\n"
+"              This  option  allows  you  to  change the service name for proxy\n"
 "              negotiation.\n"
 "\n"
-"              Examples:   --proxy-negotiate   proxy-name  --proxy-service-name\n"
+, stdout);
+ fputs(
+"              Examples:  --proxy-negotiate   proxy-name   --proxy-service-name\n"
 "              sockd would use sockd/proxy-name.  (Added in 7.43.0).\n"
 "\n"
 "       --proxy1.0 <proxyhost[:port]>\n"
-"              Use the specified HTTP 1.0 proxy. If  the  port  number  is  not\n"
+"              Use  the  specified  HTTP  1.0  proxy. If the port number is not\n"
 "              specified, it is assumed at port 1080.\n"
 "\n"
+"              The only difference between this and the HTTP proxy option  (-x,\n"
+"              --proxy), is that attempts to use CONNECT through the proxy will\n"
 , stdout);
  fputs(
-"              The  only difference between this and the HTTP proxy option (-x,\n"
-"              --proxy), is that attempts to use CONNECT through the proxy will\n"
 "              specify an HTTP 1.0 protocol instead of the default HTTP 1.1.\n"
 "\n"
 "       --pubkey <key>\n"
-"              (SSH)  Public  key  file name. Allows you to provide your public\n"
+"              (SSH) Public key file name. Allows you to  provide  your  public\n"
 "              key in this separate file.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
+"              (As of 7.39.0, curl attempts to automatically extract the public\n"
+"              key from the private key file, so passing this option is  gener-\n"
 , stdout);
  fputs(
-"              (As of 7.39.0, curl attempts to automatically extract the public\n"
-"              key  from the private key file, so passing this option is gener-\n"
 "              ally not required. Note that this public key extraction requires\n"
-"              libcurl  to  be linked against a copy of libssh2 1.2.8 or higher\n"
+"              libcurl to be linked against a copy of libssh2 1.2.8  or  higher\n"
 "              that is itself linked against OpenSSL.)\n"
 "\n"
 "       -q, --disable\n"
-"              If used as the first parameter on the command line,  the  curlrc\n"
-, stdout);
- fputs(
-"              config  file will not be read and used. See the -K, --config for\n"
+"              If  used  as the first parameter on the command line, the curlrc\n"
+"              config file will not be read and used. See the -K, --config  for\n"
 "              details on the default config file search path.\n"
 "\n"
 "       -Q, --quote <command>\n"
-"              (FTP/SFTP) Send an arbitrary command to the remote FTP  or  SFTP\n"
-"              server.  Quote commands are sent BEFORE the transfer takes place\n"
-"              (just after the initial PWD command in an FTP  transfer,  to  be\n"
-"              exact). To make commands take place after a successful transfer,\n"
 , stdout);
  fputs(
-"              prefix them with a dash '-'.  To make  commands  be  sent  after\n"
+"              (FTP/SFTP)  Send  an arbitrary command to the remote FTP or SFTP\n"
+"              server. Quote commands are sent BEFORE the transfer takes  place\n"
+"              (just  after  the  initial PWD command in an FTP transfer, to be\n"
+"              exact). To make commands take place after a successful transfer,\n"
+"              prefix  them  with  a  dash '-'.  To make commands be sent after\n"
 "              curl has changed the working directory, just before the transfer\n"
-"              command(s), prefix the command with a '+'  (this  is  only  sup-\n"
-"              ported  for FTP). You may specify any number of commands. If the\n"
+, stdout);
+ fputs(
+"              command(s),  prefix  the  command  with a '+' (this is only sup-\n"
+"              ported for FTP). You may specify any number of commands. If  the\n"
 "              server returns failure for one of the commands, the entire oper-\n"
-"              ation  will  be aborted. You must send syntactically correct FTP\n"
+"              ation will be aborted. You must send syntactically  correct  FTP\n"
+"              commands  as  RFC 959 defines to FTP servers, or one of the com-\n"
+"              mands listed below to SFTP servers.  This  option  can  be  used\n"
 , stdout);
  fputs(
-"              commands as RFC 959 defines to FTP servers, or one of  the  com-\n"
-"              mands  listed  below  to  SFTP servers.  This option can be used\n"
-"              multiple times. When speaking to an FTP server, prefix the  com-\n"
+"              multiple  times. When speaking to an FTP server, prefix the com-\n"
 "              mand with an asterisk (*) to make curl continue even if the com-\n"
 "              mand fails as by default curl will stop at first failure.\n"
 "\n"
-"              SFTP is a binary protocol. Unlike for FTP, curl interprets  SFTP\n"
+"              SFTP  is a binary protocol. Unlike for FTP, curl interprets SFTP\n"
+"              quote commands itself before sending them to the  server.   File\n"
+"              names may be quoted shell-style to embed spaces or special char-\n"
 , stdout);
  fputs(
-"              quote  commands  itself before sending them to the server.  File\n"
-"              names may be quoted shell-style to embed spaces or special char-\n"
-"              acters.   Following is the list of all supported SFTP quote com-\n"
+"              acters.  Following is the list of all supported SFTP quote  com-\n"
 "              mands:\n"
 "\n"
 "              chgrp group file\n"
-"                     The chgrp command sets the group ID of the file named  by\n"
-"                     the  file  operand to the group ID specified by the group\n"
-, stdout);
- fputs(
+"                     The  chgrp command sets the group ID of the file named by\n"
+"                     the file operand to the group ID specified by  the  group\n"
 "                     operand. The group operand is a decimal integer group ID.\n"
 "\n"
 "              chmod mode file\n"
-"                     The chmod command modifies the  file  mode  bits  of  the\n"
+"                     The  chmod  command  modifies  the  file mode bits of the\n"
+, stdout);
+ fputs(
 "                     specified file. The mode operand is an octal integer mode\n"
 "                     number.\n"
 "\n"
 "              chown user file\n"
 "                     The chown command sets the owner of the file named by the\n"
-"                     file  operand  to the user ID specified by the user oper-\n"
-, stdout);
- fputs(
+"                     file operand to the user ID specified by the  user  oper-\n"
 "                     and. The user operand is a decimal integer user ID.\n"
 "\n"
 "              ln source_file target_file\n"
 "                     The ln and symlink commands create a symbolic link at the\n"
-"                     target_file  location  pointing  to the source_file loca-\n"
+, stdout);
+ fputs(
+"                     target_file location pointing to  the  source_file  loca-\n"
 "                     tion.\n"
 "\n"
 "              mkdir directory_name\n"
-"                     The mkdir command creates  the  directory  named  by  the\n"
+"                     The  mkdir  command  creates  the  directory named by the\n"
 "                     directory_name operand.\n"
 "\n"
-, stdout);
- fputs(
 "              pwd    The pwd command returns the absolute pathname of the cur-\n"
 "                     rent working directory.\n"
 "\n"
 "              rename source target\n"
+, stdout);
+ fputs(
 "                     The rename command renames the file or directory named by\n"
-"                     the  source  operand to the destination path named by the\n"
+"                     the source operand to the destination path named  by  the\n"
 "                     target operand.\n"
 "\n"
 "              rm file\n"
 "                     The rm command removes the file specified by the file op-\n"
 "                     erand.\n"
 "\n"
+"              rmdir directory\n"
+"                     The rmdir command removes the directory  entry  specified\n"
 , stdout);
  fputs(
-"              rmdir directory\n"
-"                     The  rmdir  command removes the directory entry specified\n"
 "                     by the directory operand, provided it is empty.\n"
 "\n"
 "              symlink source_file target_file\n"
 "                     See ln.\n"
 "\n"
 "       -r, --range <range>\n"
-"              (HTTP/FTP/SFTP/FILE) Retrieve a byte range (i.e a partial  docu-\n"
-"              ment)  from  a  HTTP/1.1,  FTP  or  SFTP server or a local FILE.\n"
+"              (HTTP/FTP/SFTP/FILE)  Retrieve a byte range (i.e a partial docu-\n"
+"              ment) from a HTTP/1.1, FTP or  SFTP  server  or  a  local  FILE.\n"
 "              Ranges can be specified in a number of ways.\n"
 "\n"
-, stdout);
- fputs(
 "              0-499     specifies the first 500 bytes\n"
 "\n"
+, stdout);
+ fputs(
 "              500-999   specifies the second 500 bytes\n"
 "\n"
 "              -500      specifies the last 500 bytes\n"
 "\n"
 "              9500-     specifies the bytes from offset 9500 and forward\n"
 "\n"
 "              0-0,-1    specifies the first and last byte only(*)(HTTP)\n"
 "\n"
 "              100-199,500-599\n"
 "                        specifies two separate 100-byte ranges(*) (HTTP)\n"
 "\n"
-"              (*) = NOTE that this will cause the server to reply with a  mul-\n"
-, stdout);
- fputs(
+"              (*)  = NOTE that this will cause the server to reply with a mul-\n"
 "              tipart response!\n"
 "\n"
-"              Only  digit characters (0-9) are valid in the 'start' and 'stop'\n"
-"              fields of the 'start-stop' range syntax. If a non-digit  charac-\n"
+, stdout);
+ fputs(
+"              Only digit characters (0-9) are valid in the 'start' and  'stop'\n"
+"              fields  of the 'start-stop' range syntax. If a non-digit charac-\n"
 "              ter is given in the range, the server's response will be unspec-\n"
 "              ified, depending on the server's configuration.\n"
 "\n"
-"              You should also be aware that many HTTP/1.1 servers do not  have\n"
-"              this  feature  enabled, so that when you attempt to get a range,\n"
+"              You  should also be aware that many HTTP/1.1 servers do not have\n"
+"              this feature enabled, so that when you attempt to get  a  range,\n"
 , stdout);
  fputs(
 "              you'll instead get the whole document.\n"
 "\n"
-"              FTP and SFTP range downloads only  support  the  simple  'start-\n"
-"              stop'  syntax  (optionally with one of the numbers omitted). FTP\n"
+"              FTP  and  SFTP  range  downloads only support the simple 'start-\n"
+"              stop' syntax (optionally with one of the numbers  omitted).  FTP\n"
 "              use depends on the extended FTP command SIZE.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -R, --remote-time\n"
-"              When used, this will make curl attempt to figure out  the  time-\n"
+"              When  used,  this will make curl attempt to figure out the time-\n"
 , stdout);
  fputs(
-"              stamp  of  the  remote  file,  and if that is available make the\n"
+"              stamp of the remote file, and if  that  is  available  make  the\n"
 "              local file get that same timestamp.\n"
 "\n"
 "       --random-file <file>\n"
 "              (SSL) Specify the path name to file containing what will be con-\n"
-"              sidered  as  random  data.  The  data is used to seed the random\n"
+"              sidered as random data. The data is  used  to  seed  the  random\n"
 "              engine for SSL connections.  See also the --egd-file option.\n"
 "\n"
 "       --raw  (HTTP) When used, it disables all internal HTTP decoding of con-\n"
 , stdout);
  fputs(
-"              tent  or  transfer  encodings  and  instead makes them passed on\n"
+"              tent or transfer encodings and  instead  makes  them  passed  on\n"
 "              unaltered, raw. (Added in 7.16.2)\n"
 "\n"
 "       --remote-name-all\n"
-"              This option changes the default action for all given URLs to  be\n"
+"              This  option changes the default action for all given URLs to be\n"
 "              dealt with as if -O, --remote-name were used for each one. So if\n"
 "              you want to disable that for a specific URL after --remote-name-\n"
-"              all  has  been  used,  you  must use \"-o -\" or --no-remote-name.\n"
+"              all has been used, you must  use  \"-o  -\"  or  --no-remote-name.\n"
 , stdout);
  fputs(
 "              (Added in 7.19.0)\n"
 "\n"
 "       --resolve <host:port:address>\n"
-"              Provide a custom address for a  specific  host  and  port  pair.\n"
-"              Using  this,  you  can make the curl requests(s) use a specified\n"
-"              address and prevent the otherwise normally resolved  address  to\n"
-"              be  used.  Consider it a sort of /etc/hosts alternative provided\n"
-"              on the command line. The port number should be the  number  used\n"
+"              Provide  a  custom  address  for  a specific host and port pair.\n"
+"              Using this, you can make the curl requests(s)  use  a  specified\n"
+"              address  and  prevent the otherwise normally resolved address to\n"
+"              be used. Consider it a sort of /etc/hosts  alternative  provided\n"
+"              on  the  command line. The port number should be the number used\n"
 , stdout);
  fputs(
-"              for  the  specific  protocol the host will be used for. It means\n"
-"              you need several entries if you want to provide address for  the\n"
+"              for the specific protocol the host will be used  for.  It  means\n"
+"              you  need several entries if you want to provide address for the\n"
 "              same host but different ports.\n"
 "\n"
 "              The provided address set by this option will be used even if -4,\n"
 "              --ipv4 or -6, --ipv6 is set to make curl use another IP version.\n"
-"              This option can be used many times to add  many  host  names  to\n"
+"              This  option  can  be  used many times to add many host names to\n"
 "              resolve.\n"
 "\n"
 "              (Added in 7.21.3)\n"
 "\n"
 , stdout);
  fputs(
 "       --retry <num>\n"
-"              If  a  transient  error is returned when curl tries to perform a\n"
-"              transfer, it will retry this number of times before  giving  up.\n"
-"              Setting  the  number to 0 makes curl do no retries (which is the\n"
-"              default). Transient error means either: a timeout,  an  FTP  4xx\n"
+"              If a transient error is returned when curl tries  to  perform  a\n"
+"              transfer,  it  will retry this number of times before giving up.\n"
+"              Setting the number to 0 makes curl do no retries (which  is  the\n"
+"              default).  Transient  error  means either: a timeout, an FTP 4xx\n"
 "              response code or an HTTP 5xx response code.\n"
 "\n"
-"              When  curl  is about to retry a transfer, it will first wait one\n"
+"              When curl is about to retry a transfer, it will first  wait  one\n"
 , stdout);
  fputs(
-"              second and then for all forthcoming retries it will  double  the\n"
-"              waiting  time until it reaches 10 minutes which then will be the\n"
-"              delay between the rest of the retries.  By  using  --retry-delay\n"
-"              you   disable  this  exponential  backoff  algorithm.  See  also\n"
-"              --retry-max-time to limit the total time  allowed  for  retries.\n"
+"              second  and  then for all forthcoming retries it will double the\n"
+"              waiting time until it reaches 10 minutes which then will be  the\n"
+"              delay  between  the rest of the retries.  By using --retry-delay\n"
+"              you  disable  this  exponential  backoff  algorithm.  See   also\n"
+"              --retry-max-time  to  limit  the total time allowed for retries.\n"
 "              (Added in 7.12.3)\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --retry-delay <seconds>\n"
-"              Make  curl  sleep  this  amount of time before each retry when a\n"
-"              transfer has failed with  a  transient  error  (it  changes  the\n"
-"              default  backoff time algorithm between retries). This option is\n"
-"              only interesting if --retry is also used. Setting this delay  to\n"
+"              Make curl sleep this amount of time before  each  retry  when  a\n"
+"              transfer  has  failed  with  a  transient  error (it changes the\n"
+"              default backoff time algorithm between retries). This option  is\n"
+"              only  interesting if --retry is also used. Setting this delay to\n"
 , stdout);
  fputs(
-"              zero  will  make  curl  use the default backoff time.  (Added in\n"
+"              zero will make curl use the default  backoff  time.   (Added  in\n"
 "              7.12.3)\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       --retry-max-time <seconds>\n"
-"              The retry timer is reset  before  the  first  transfer  attempt.\n"
+"              The  retry  timer  is  reset  before the first transfer attempt.\n"
 "              Retries will be done as usual (see --retry) as long as the timer\n"
 "              hasn't reached this given limit. Notice that if the timer hasn't\n"
 , stdout);
  fputs(
-"              reached  the  limit, the request will be made and while perform-\n"
-"              ing, it may take longer than this given time period. To limit  a\n"
-"              single  request's  maximum  time,  use -m, --max-time.  Set this\n"
+"              reached the limit, the request will be made and  while  perform-\n"
+"              ing,  it may take longer than this given time period. To limit a\n"
+"              single request's maximum time, use  -m,  --max-time.   Set  this\n"
 "              option to zero to not timeout retries. (Added in 7.12.3)\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "       -s, --silent\n"
-"              Silent or quiet mode. Don't show progress meter  or  error  mes-\n"
+"              Silent  or  quiet  mode. Don't show progress meter or error mes-\n"
 , stdout);
  fputs(
-"              sages.   Makes  Curl mute. It will still output the data you ask\n"
+"              sages.  Makes Curl mute. It will still output the data  you  ask\n"
 "              for, potentially even to the terminal/stdout unless you redirect\n"
 "              it.\n"
 "\n"
 "       --sasl-ir\n"
-"              Enable  initial  response  in  SASL  authentication.   (Added in\n"
+"              Enable initial  response  in  SASL  authentication.   (Added  in\n"
 "              7.31.0)\n"
 "\n"
 "       --service-name <servicename>\n"
 "              This option allows you to change the service name for SPNEGO.\n"
 "\n"
-"              Examples:   --negotiate   --service-name   sockd    would    use\n"
+"              Examples:    --negotiate    --service-name   sockd   would   use\n"
 , stdout);
  fputs(
 "              sockd/server-name.  (Added in 7.43.0).\n"
 "\n"
 "       -S, --show-error\n"
-"              When  used  with  -s  it  makes curl show an error message if it\n"
+"              When used with -s it makes curl show  an  error  message  if  it\n"
 "              fails.\n"
 "\n"
-"       --ssl  (FTP, POP3, IMAP, SMTP) Try to use SSL/TLS for  the  connection.\n"
+"       --ssl  (FTP,  POP3,  IMAP, SMTP) Try to use SSL/TLS for the connection.\n"
 "              Reverts to a non-secure connection if the server doesn't support\n"
-"              SSL/TLS.  See also --ftp-ssl-control and --ssl-reqd for  differ-\n"
+"              SSL/TLS.   See also --ftp-ssl-control and --ssl-reqd for differ-\n"
 "              ent levels of encryption required. (Added in 7.20.0)\n"
 "\n"
 , stdout);
  fputs(
-"              This  option  was formerly known as --ftp-ssl (Added in 7.11.0).\n"
-"              That option name can still be used but  will  be  removed  in  a\n"
+"              This option was formerly known as --ftp-ssl (Added  in  7.11.0).\n"
+"              That  option  name  can  still  be used but will be removed in a\n"
 "              future version.\n"
 "\n"
 "       --ssl-reqd\n"
-"              (FTP,  POP3,  IMAP,  SMTP)  Require  SSL/TLS for the connection.\n"
+"              (FTP, POP3, IMAP, SMTP)  Require  SSL/TLS  for  the  connection.\n"
 "              Terminates the connection if the server doesn't support SSL/TLS.\n"
 "              (Added in 7.20.0)\n"
 "\n"
 "              This option was formerly known as --ftp-ssl-reqd.\n"
 "\n"
 "       --ssl-allow-beast\n"
 , stdout);
  fputs(
-"              (SSL)  This option tells curl to not work around a security flaw\n"
+"              (SSL) This option tells curl to not work around a security  flaw\n"
 "              in the SSL3 and TLS1.0 protocols known as BEAST.  If this option\n"
-"              isn't  used,  the  SSL  layer may use workarounds known to cause\n"
-"              interoperability problems with some older  SSL  implementations.\n"
+"              isn't used, the SSL layer may use  workarounds  known  to  cause\n"
+"              interoperability  problems  with some older SSL implementations.\n"
 "              WARNING: this option loosens the SSL security, and by using this\n"
 "              flag you ask for exactly that.  (Added in 7.25.0)\n"
 "\n"
 "       --ssl-no-revoke\n"
 , stdout);
  fputs(
-"              (WinSSL) This option tells curl to disable  certificate  revoca-\n"
+"              (WinSSL)  This  option tells curl to disable certificate revoca-\n"
 "              tion checks.  WARNING: this option loosens the SSL security, and\n"
 "              by using this flag you ask for exactly that.  (Added in 7.44.0)\n"
 "\n"
 "       --socks4 <host[:port]>\n"
 "              Use the specified SOCKS4 proxy. If the port number is not speci-\n"
 "              fied, it is assumed at port 1080. (Added in 7.15.2)\n"
 "\n"
-"              This  option  overrides any previous use of -x, --proxy, as they\n"
+"              This option overrides any previous use of -x, --proxy,  as  they\n"
 , stdout);
  fputs(
 "              are mutually exclusive.\n"
 "\n"
 "              Since 7.21.7, this option is superfluous since you can specify a\n"
 "              socks4 proxy with -x, --proxy using a socks4:// protocol prefix.\n"

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_93_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">char<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type><name pos:line="1" pos:column="16">URL<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type> <name pos:line="3" pos:column="9">curls<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLM<pos:position pos:line="4" pos:column="8"/></name><modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type> <name pos:line="4" pos:column="10">multi<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">still_running<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CURLMsg<pos:position pos:line="7" pos:column="10"/></name> <modifier pos:line="7" pos:column="11">*<pos:position pos:line="7" pos:column="12"/></modifier></type><name pos:line="7" pos:column="12">msg<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">multi<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">curl_multi_init<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">curls<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator><call><name pos:line="11" pos:column="9">curl_easy_init<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">()<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">curl_easy_setopt<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">curls<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">CURLOPT_URL<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">URL<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">curl_multi_add_handle<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">multi<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">curls<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>

  <while pos:line="15" pos:column="3">while <condition pos:line="15" pos:column="9">( <expr><name pos:line="15" pos:column="11">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">==<pos:position pos:line="15" pos:column="38"/></operator> <call><name pos:line="15" pos:column="39">curl_multi_perform<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">multi<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="65">&amp;<pos:position pos:line="15" pos:column="70"/></operator><name pos:line="15" pos:column="66">still_running<pos:position pos:line="15" pos:column="79"/></name></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr> )<pos:position pos:line="15" pos:column="82"/></condition><block type="pseudo"><empty_stmt pos:line="15" pos:column="82">;<pos:position pos:line="15" pos:column="83"/></empty_stmt></block></while>
  <while pos:line="16" pos:column="3">while<condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">still_running<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition> <block pos:line="16" pos:column="24">{
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">struct<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">timeval<pos:position pos:line="17" pos:column="19"/></name></name></type> <name pos:line="17" pos:column="20">timeout<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">rc<pos:position pos:line="18" pos:column="11"/></name></decl>;<pos:position pos:line="18" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">fd_set<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">fdread<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">fd_set<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">fdwrite<pos:position pos:line="20" pos:column="19"/></name></decl>;<pos:position pos:line="20" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">fd_set<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">fdexcep<pos:position pos:line="21" pos:column="19"/></name></decl>;<pos:position pos:line="21" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">maxfd<pos:position pos:line="22" pos:column="14"/></name></decl>;<pos:position pos:line="22" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">FD_ZERO<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><operator pos:line="23" pos:column="13">&amp;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="14">fdread<pos:position pos:line="23" pos:column="20"/></name></expr></argument>)<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">FD_ZERO<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><operator pos:line="24" pos:column="13">&amp;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="14">fdwrite<pos:position pos:line="24" pos:column="21"/></name></expr></argument>)<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">FD_ZERO<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><operator pos:line="25" pos:column="13">&amp;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="14">fdexcep<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">timeout<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">tv_sec<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">timeout<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">tv_usec<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">curl_multi_fdset<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">multi<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="29">&amp;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="30">fdread<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="38">&amp;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="39">fdwrite<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="49">fdexcep<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="58">&amp;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="59">maxfd<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">rc<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">select<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">maxfd<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">+<pos:position pos:line="29" pos:column="23"/></operator><literal type="number" pos:line="29" pos:column="23">1<pos:position pos:line="29" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="27">fdread<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="35">&amp;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="36">fdwrite<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="45">&amp;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="46">fdexcep<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="55">&amp;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="56">timeout<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>
    <switch pos:line="30" pos:column="5">switch<condition pos:line="30" pos:column="11">(<expr><name pos:line="30" pos:column="12">rc<pos:position pos:line="30" pos:column="14"/></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition> <block pos:line="30" pos:column="16">{
      <case pos:line="31" pos:column="7">case <expr><operator pos:line="31" pos:column="12">-<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">1<pos:position pos:line="31" pos:column="14"/></literal></expr>:<pos:position pos:line="31" pos:column="15"/></case>
        <break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>
      <case pos:line="33" pos:column="7">case <expr><literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>:<pos:position pos:line="33" pos:column="14"/></case>
      <default pos:line="34" pos:column="7">default:<pos:position pos:line="34" pos:column="15"/></default>
        <while pos:line="35" pos:column="9">while <condition pos:line="35" pos:column="15">(<expr><name pos:line="35" pos:column="16">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="35" pos:column="40"/></name> <operator pos:line="35" pos:column="41">==<pos:position pos:line="35" pos:column="43"/></operator> <call><name pos:line="35" pos:column="44">curl_multi_perform<pos:position pos:line="35" pos:column="62"/></name><argument_list pos:line="35" pos:column="62">(<argument><expr><name pos:line="35" pos:column="63">multi<pos:position pos:line="35" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="70">&amp;<pos:position pos:line="35" pos:column="75"/></operator><name pos:line="35" pos:column="71">still_running<pos:position pos:line="35" pos:column="84"/></name></expr></argument>)<pos:position pos:line="35" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="86"/></condition><block type="pseudo"><empty_stmt pos:line="35" pos:column="86">;<pos:position pos:line="35" pos:column="87"/></empty_stmt></block></while>
        <break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break>
    }<pos:position pos:line="37" pos:column="6"/></block></switch>
  }<pos:position pos:line="38" pos:column="4"/></block></while>
  <expr_stmt><expr><name pos:line="39" pos:column="3">msg<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">curl_multi_info_read<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">multi<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="37">&amp;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="38">still_running<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name pos:line="40" pos:column="6">msg<pos:position pos:line="40" pos:column="9"/></name></expr>)<pos:position pos:line="40" pos:column="10"/></condition><then pos:line="40" pos:column="10">
    <comment type="block" pos:line="41" pos:column="5">/* this should now contain a result code from the easy handle,
       get it */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="5">i<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <name><name pos:line="43" pos:column="9">msg<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">data<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">.<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">result<pos:position pos:line="43" pos:column="25"/></name></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">curl_multi_cleanup<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">multi<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">curl_easy_cleanup<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">curls<pos:position pos:line="46" pos:column="26"/></name></expr></argument>)<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>

  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">i<pos:position pos:line="48" pos:column="11"/></name></expr>;<pos:position pos:line="48" pos:column="12"/></return> <comment type="block" pos:line="48" pos:column="13">/* return the final return code */</comment>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

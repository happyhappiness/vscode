<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_294.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mkhash<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">password<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="2" pos:column="20">unsigned<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">nonce<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,  <comment type="block" pos:line="2" pos:column="43">/* 8 bytes */</comment>
                   <parameter><decl><type><name pos:line="3" pos:column="20">unsigned<pos:position pos:line="3" pos:column="28"/></name> <name pos:line="3" pos:column="29">char<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">lmresp<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>  <comment type="block" pos:line="3" pos:column="43">/* must fit 0x18 bytes */</comment>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">USE_NTRESPONSES<pos:position pos:line="4" pos:column="23"/></name></cpp:ifdef>
                   , <parameter><decl><type><name pos:line="5" pos:column="22">unsigned<pos:position pos:line="5" pos:column="30"/></name> <name pos:line="5" pos:column="31">char<pos:position pos:line="5" pos:column="35"/></name> <modifier pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></modifier></type><name pos:line="5" pos:column="37">ntresp<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>  <comment type="block" pos:line="5" pos:column="45">/* must fit 0x18 bytes */</comment>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
  )<pos:position pos:line="7" pos:column="4"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <comment type="block" pos:line="9" pos:column="3">/* 21 bytes fits 3 7-bytes chunks, as we use 56 bit (7 bytes) as DES input,
     and we add three different ones, see the calc_resp() function */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name></type> <name><name pos:line="11" pos:column="17">lmbuffer<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><literal type="number" pos:line="11" pos:column="26">21<pos:position pos:line="11" pos:column="28"/></literal></expr>]<pos:position pos:line="11" pos:column="29"/></index></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">USE_NTRESPONSES<pos:position pos:line="12" pos:column="23"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name></type> <name><name pos:line="13" pos:column="17">ntbuffer<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><literal type="number" pos:line="13" pos:column="26">21<pos:position pos:line="13" pos:column="28"/></literal></expr>]<pos:position pos:line="13" pos:column="29"/></index></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">unsigned<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">char<pos:position pos:line="15" pos:column="16"/></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">pw<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="16" pos:column="3">static<pos:position pos:line="16" pos:column="9"/></specifier> <type><specifier pos:line="16" pos:column="10">const<pos:position pos:line="16" pos:column="15"/></specifier> <name pos:line="16" pos:column="16">unsigned<pos:position pos:line="16" pos:column="24"/></name> <name pos:line="16" pos:column="25">char<pos:position pos:line="16" pos:column="29"/></name></type> <name><name pos:line="16" pos:column="30">magic<pos:position pos:line="16" pos:column="35"/></name><index pos:line="16" pos:column="35">[]<pos:position pos:line="16" pos:column="37"/></index></name> <init pos:line="16" pos:column="38">= <expr><block pos:line="16" pos:column="40">{
    <expr><literal type="number" pos:line="17" pos:column="5">0x4B<pos:position pos:line="17" pos:column="9"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="11">0x47<pos:position pos:line="17" pos:column="15"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="17">0x53<pos:position pos:line="17" pos:column="21"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="23">0x21<pos:position pos:line="17" pos:column="27"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="29">0x40<pos:position pos:line="17" pos:column="33"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="35">0x23<pos:position pos:line="17" pos:column="39"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="41">0x24<pos:position pos:line="17" pos:column="45"/></literal></expr>, <expr><literal type="number" pos:line="17" pos:column="47">0x25<pos:position pos:line="17" pos:column="51"/></literal></expr>
  }<pos:position pos:line="18" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="5"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">unsigned<pos:position pos:line="19" pos:column="11"/></name> <name pos:line="19" pos:column="12">int<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">i<pos:position pos:line="19" pos:column="17"/></name></decl>;<pos:position pos:line="19" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">size_t<pos:position pos:line="20" pos:column="9"/></name></type> <name pos:line="20" pos:column="10">len<pos:position pos:line="20" pos:column="13"/></name> <init pos:line="20" pos:column="14">= <expr><call><name pos:line="20" pos:column="16">strlen<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">password<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* make it fit at least 14 bytes */</comment>
  <expr_stmt><expr><name pos:line="23" pos:column="3">pw<pos:position pos:line="23" pos:column="5"/></name> <operator pos:line="23" pos:column="6">=<pos:position pos:line="23" pos:column="7"/></operator> <call><name pos:line="23" pos:column="8">malloc<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><ternary><condition><expr><name pos:line="23" pos:column="15">len<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">&lt;<pos:position pos:line="23" pos:column="22"/></operator><literal type="number" pos:line="23" pos:column="19">7<pos:position pos:line="23" pos:column="20"/></literal></expr>?<pos:position pos:line="23" pos:column="21"/></condition><then><expr><literal type="number" pos:line="23" pos:column="21">14<pos:position pos:line="23" pos:column="23"/></literal></expr></then><else pos:line="23" pos:column="23">:<expr><name pos:line="23" pos:column="24">len<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">*<pos:position pos:line="23" pos:column="28"/></operator><literal type="number" pos:line="23" pos:column="28">2<pos:position pos:line="23" pos:column="29"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
  <if pos:line="24" pos:column="3">if<condition pos:line="24" pos:column="5">(<expr><operator pos:line="24" pos:column="6">!<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">pw<pos:position pos:line="24" pos:column="9"/></name></expr>)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10">
    <block type="pseudo"><return pos:line="25" pos:column="5">return;<pos:position pos:line="25" pos:column="12"/></return></block></then></if> <comment type="block" pos:line="25" pos:column="13">/* this will lead to a badly generated package */</comment>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">len<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">&gt;<pos:position pos:line="27" pos:column="15"/></operator> <literal type="number" pos:line="27" pos:column="13">14<pos:position pos:line="27" pos:column="15"/></literal></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="5">len<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <literal type="number" pos:line="28" pos:column="11">14<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt></block></then></if>

  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init><expr><name pos:line="30" pos:column="8">i<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator><literal type="number" pos:line="30" pos:column="10">0<pos:position pos:line="30" pos:column="11"/></literal></expr>;<pos:position pos:line="30" pos:column="12"/></init> <condition><expr><name pos:line="30" pos:column="13">i<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">&lt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">len<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></condition> <incr><expr><name pos:line="30" pos:column="20">i<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">++<pos:position pos:line="30" pos:column="23"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="24"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="5">pw<pos:position pos:line="31" pos:column="7"/></name><index pos:line="31" pos:column="7">[<expr><name pos:line="31" pos:column="8">i<pos:position pos:line="31" pos:column="9"/></name></expr>]<pos:position pos:line="31" pos:column="10"/></index></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">toupper<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name><name pos:line="31" pos:column="21">password<pos:position pos:line="31" pos:column="29"/></name><index pos:line="31" pos:column="29">[<expr><name pos:line="31" pos:column="30">i<pos:position pos:line="31" pos:column="31"/></name></expr>]<pos:position pos:line="31" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt></block></for>

  <for pos:line="33" pos:column="3">for <control pos:line="33" pos:column="7">(<init pos:line="33" pos:column="8">;<pos:position pos:line="33" pos:column="9"/></init> <condition><expr><name pos:line="33" pos:column="10">i<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">&lt;<pos:position pos:line="33" pos:column="15"/></operator><literal type="number" pos:line="33" pos:column="12">14<pos:position pos:line="33" pos:column="14"/></literal></expr>;<pos:position pos:line="33" pos:column="15"/></condition> <incr><expr><name pos:line="33" pos:column="16">i<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">++<pos:position pos:line="33" pos:column="19"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="20"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="5">pw<pos:position pos:line="34" pos:column="7"/></name><index pos:line="34" pos:column="7">[<expr><name pos:line="34" pos:column="8">i<pos:position pos:line="34" pos:column="9"/></name></expr>]<pos:position pos:line="34" pos:column="10"/></index></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt></block></for>

  <block pos:line="36" pos:column="3">{
    <comment type="block" pos:line="37" pos:column="5">/* create LanManager hashed password */</comment>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">DES_key_schedule<pos:position pos:line="38" pos:column="21"/></name></type> <name pos:line="38" pos:column="22">ks<pos:position pos:line="38" pos:column="24"/></name></decl>;<pos:position pos:line="38" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">setup_des_key<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">pw<pos:position pos:line="40" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="23">DESKEY<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">ks<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">DES_ecb_encrypt<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">DES_cblock<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">*<pos:position pos:line="41" pos:column="34"/></operator><operator pos:line="41" pos:column="34">)<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">magic<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="42">(<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">DES_cblock<pos:position pos:line="41" pos:column="53"/></name> <operator pos:line="41" pos:column="54">*<pos:position pos:line="41" pos:column="55"/></operator><operator pos:line="41" pos:column="55">)<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="56">lmbuffer<pos:position pos:line="41" pos:column="64"/></name></expr></argument>,
                    <argument><expr><call><name pos:line="42" pos:column="21">DESKEY<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">ks<pos:position pos:line="42" pos:column="30"/></name></expr></argument>)<pos:position pos:line="42" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">DES_ENCRYPT<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">setup_des_key<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">pw<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">+<pos:position pos:line="44" pos:column="22"/></operator><literal type="number" pos:line="44" pos:column="22">7<pos:position pos:line="44" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="25">DESKEY<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">ks<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">DES_ecb_encrypt<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">(<argument><expr><operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">DES_cblock<pos:position pos:line="45" pos:column="32"/></name> <operator pos:line="45" pos:column="33">*<pos:position pos:line="45" pos:column="34"/></operator><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">magic<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="42">(<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">DES_cblock<pos:position pos:line="45" pos:column="53"/></name> <operator pos:line="45" pos:column="54">*<pos:position pos:line="45" pos:column="55"/></operator><operator pos:line="45" pos:column="55">)<pos:position pos:line="45" pos:column="56"/></operator><operator pos:line="45" pos:column="56">(<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="57">lmbuffer<pos:position pos:line="45" pos:column="65"/></name><operator pos:line="45" pos:column="65">+<pos:position pos:line="45" pos:column="66"/></operator><literal type="number" pos:line="45" pos:column="66">8<pos:position pos:line="45" pos:column="67"/></literal><operator pos:line="45" pos:column="67">)<pos:position pos:line="45" pos:column="68"/></operator></expr></argument>,
                    <argument><expr><call><name pos:line="46" pos:column="21">DESKEY<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">ks<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">DES_ENCRYPT<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">memset<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><name pos:line="48" pos:column="12">lmbuffer<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">+<pos:position pos:line="48" pos:column="21"/></operator><literal type="number" pos:line="48" pos:column="21">16<pos:position pos:line="48" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="25">0<pos:position pos:line="48" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="28">sizeof<argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">lmbuffer<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></sizeof><operator pos:line="48" pos:column="44">-<pos:position pos:line="48" pos:column="45"/></operator><literal type="number" pos:line="48" pos:column="45">16<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block>
  <comment type="block" pos:line="50" pos:column="3">/* create LM responses */</comment>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">calc_resp<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">lmbuffer<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="23">nonce<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">lmresp<pos:position pos:line="51" pos:column="36"/></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>

<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">USE_NTRESPONSES<pos:position pos:line="53" pos:column="23"/></name></cpp:ifdef>
  <block pos:line="54" pos:column="3">{
    <comment type="block" pos:line="55" pos:column="5">/* create NT hashed password */</comment>
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">MD4_CTX<pos:position pos:line="56" pos:column="12"/></name></type> <name pos:line="56" pos:column="13">MD4<pos:position pos:line="56" pos:column="16"/></name></decl>;<pos:position pos:line="56" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="58" pos:column="5">len<pos:position pos:line="58" pos:column="8"/></name> <operator pos:line="58" pos:column="9">=<pos:position pos:line="58" pos:column="10"/></operator> <call><name pos:line="58" pos:column="11">strlen<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">password<pos:position pos:line="58" pos:column="26"/></name></expr></argument>)<pos:position pos:line="58" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>

    <for pos:line="60" pos:column="5">for <control pos:line="60" pos:column="9">(<init><expr><name pos:line="60" pos:column="10">i<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">=<pos:position pos:line="60" pos:column="12"/></operator><literal type="number" pos:line="60" pos:column="12">0<pos:position pos:line="60" pos:column="13"/></literal></expr>;<pos:position pos:line="60" pos:column="14"/></init> <condition><expr><name pos:line="60" pos:column="15">i<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">&lt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">len<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></condition> <incr><expr><name pos:line="60" pos:column="22">i<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">++<pos:position pos:line="60" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="26"/></control> <block pos:line="60" pos:column="27">{
      <expr_stmt><expr><name><name pos:line="61" pos:column="7">pw<pos:position pos:line="61" pos:column="9"/></name><index pos:line="61" pos:column="9">[<expr><literal type="number" pos:line="61" pos:column="10">2<pos:position pos:line="61" pos:column="11"/></literal><operator pos:line="61" pos:column="11">*<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="12">i<pos:position pos:line="61" pos:column="13"/></name></expr>]<pos:position pos:line="61" pos:column="14"/></index></name>   <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name><name pos:line="61" pos:column="19">password<pos:position pos:line="61" pos:column="27"/></name><index pos:line="61" pos:column="27">[<expr><name pos:line="61" pos:column="28">i<pos:position pos:line="61" pos:column="29"/></name></expr>]<pos:position pos:line="61" pos:column="30"/></index></name></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">pw<pos:position pos:line="62" pos:column="9"/></name><index pos:line="62" pos:column="9">[<expr><literal type="number" pos:line="62" pos:column="10">2<pos:position pos:line="62" pos:column="11"/></literal><operator pos:line="62" pos:column="11">*<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">i<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">+<pos:position pos:line="62" pos:column="14"/></operator><literal type="number" pos:line="62" pos:column="14">1<pos:position pos:line="62" pos:column="15"/></literal></expr>]<pos:position pos:line="62" pos:column="16"/></index></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <literal type="number" pos:line="62" pos:column="19">0<pos:position pos:line="62" pos:column="20"/></literal></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">MD4_Init<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><operator pos:line="65" pos:column="14">&amp;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="15">MD4<pos:position pos:line="65" pos:column="18"/></name></expr></argument>)<pos:position pos:line="65" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">MD4_Update<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><operator pos:line="66" pos:column="16">&amp;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="17">MD4<pos:position pos:line="66" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="22">pw<pos:position pos:line="66" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="26">2<pos:position pos:line="66" pos:column="27"/></literal><operator pos:line="66" pos:column="27">*<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="28">len<pos:position pos:line="66" pos:column="31"/></name></expr></argument>)<pos:position pos:line="66" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">MD4_Final<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><name pos:line="67" pos:column="15">ntbuffer<pos:position pos:line="67" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="25">&amp;<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="26">MD4<pos:position pos:line="67" pos:column="29"/></name></expr></argument>)<pos:position pos:line="67" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="69" pos:column="5">memset<pos:position pos:line="69" pos:column="11"/></name><argument_list pos:line="69" pos:column="11">(<argument><expr><name pos:line="69" pos:column="12">ntbuffer<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">+<pos:position pos:line="69" pos:column="21"/></operator><literal type="number" pos:line="69" pos:column="21">16<pos:position pos:line="69" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="25">0<pos:position pos:line="69" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="28">sizeof<argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">ntbuffer<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></sizeof><operator pos:line="69" pos:column="44">-<pos:position pos:line="69" pos:column="45"/></operator><literal type="number" pos:line="69" pos:column="45">16<pos:position pos:line="69" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="72" pos:column="3">calc_resp<pos:position pos:line="72" pos:column="12"/></name><argument_list pos:line="72" pos:column="12">(<argument><expr><name pos:line="72" pos:column="13">ntbuffer<pos:position pos:line="72" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="23">nonce<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">ntresp<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">free<pos:position pos:line="75" pos:column="7"/></name><argument_list pos:line="75" pos:column="7">(<argument><expr><name pos:line="75" pos:column="8">pw<pos:position pos:line="75" pos:column="10"/></name></expr></argument>)<pos:position pos:line="75" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="12"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

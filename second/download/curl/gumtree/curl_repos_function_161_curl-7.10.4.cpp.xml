<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_161_curl-7.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">curl_dorealloc<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">ptr<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">size_t<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">wantedsize<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">line<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">source<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">memdebug<pos:position pos:line="4" pos:column="18"/></name></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">mem<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">size<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><sizeof pos:line="6" pos:column="17">sizeof<argument_list pos:line="6" pos:column="23">(<argument><expr pos:line="6" pos:column="24">struct <name pos:line="6" pos:column="31">memdebug<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></sizeof><operator pos:line="6" pos:column="40">+<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">wantedsize<pos:position pos:line="6" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">mem<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator>struct <name pos:line="8" pos:column="17">memdebug<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator><operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">char<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">ptr<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">-<pos:position pos:line="8" pos:column="42"/></operator> <call><name pos:line="8" pos:column="43">offsetof<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr pos:line="8" pos:column="52">struct <name pos:line="8" pos:column="59">memdebug<pos:position pos:line="8" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="69">mem<pos:position pos:line="8" pos:column="72"/></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">mem<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator>struct <name pos:line="10" pos:column="15">memdebug<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">)<pos:position pos:line="10" pos:column="26"/></operator><call pos:line="10" pos:column="26">(<name pos:line="10" pos:column="27">realloc<pos:position pos:line="10" pos:column="34"/></name>)<argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">mem<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">size<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">logfile<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">fprintf<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">logfile<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="22">"MEM %s:%d realloc(%p, %d) = %p\n"<pos:position pos:line="12" pos:column="56"/></literal></expr></argument>,
            <argument><expr><name pos:line="13" pos:column="13">source<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="21">line<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="27">ptr<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">wantedsize<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="44">mem<pos:position pos:line="13" pos:column="47"/></name></expr>?<pos:position pos:line="13" pos:column="48"/></condition><then><expr><name><name pos:line="13" pos:column="48">mem<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">mem<pos:position pos:line="13" pos:column="56"/></name></name></expr></then><else pos:line="13" pos:column="56">:<expr><name pos:line="13" pos:column="57">NULL<pos:position pos:line="13" pos:column="61"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt></block></then></if>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name pos:line="15" pos:column="6">mem<pos:position pos:line="15" pos:column="9"/></name></expr>)<pos:position pos:line="15" pos:column="10"/></condition><then pos:line="15" pos:column="10"> <block pos:line="15" pos:column="11">{
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">mem<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">size<pos:position pos:line="16" pos:column="14"/></name></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">wantedsize<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name><name pos:line="17" pos:column="12">mem<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">mem<pos:position pos:line="17" pos:column="20"/></name></name></expr>;<pos:position pos:line="17" pos:column="21"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">NULL<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

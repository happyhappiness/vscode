<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1260_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">curl_socketpair<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">domain<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">type<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">protocol<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">curl_socket_t<pos:position pos:line="2" pos:column="34"/></name></type> <name><name pos:line="2" pos:column="35">socket_vector<pos:position pos:line="2" pos:column="48"/></name><index pos:line="2" pos:column="48">[<expr><literal type="number" pos:line="2" pos:column="49">2<pos:position pos:line="2" pos:column="50"/></literal></expr>]<pos:position pos:line="2" pos:column="51"/></index></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">int<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">line<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">source<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">fmt<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><ternary><condition><expr><operator pos:line="5" pos:column="21">(<pos:position pos:line="5" pos:column="22"/></operator><sizeof pos:line="5" pos:column="22">sizeof<argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">curl_socket_t<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></sizeof> <operator pos:line="5" pos:column="44">==<pos:position pos:line="5" pos:column="46"/></operator> <sizeof pos:line="5" pos:column="47">sizeof<argument_list pos:line="5" pos:column="53">(<argument><expr><name pos:line="5" pos:column="54">int<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></sizeof><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator></expr> ?<pos:position pos:line="5" pos:column="61"/></condition><then pos:line="5" pos:column="61">
    <expr><literal type="string" pos:line="6" pos:column="5">"FD %s:%d socketpair() = %d %d\n"<pos:position pos:line="6" pos:column="38"/></literal></expr> <pos:position pos:line="6" pos:column="39"/></then><else pos:line="6" pos:column="39">:
    <expr><ternary><condition><expr><operator pos:line="7" pos:column="5">(<pos:position pos:line="7" pos:column="6"/></operator><sizeof pos:line="7" pos:column="6">sizeof<argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">curl_socket_t<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></sizeof> <operator pos:line="7" pos:column="28">==<pos:position pos:line="7" pos:column="30"/></operator> <sizeof pos:line="7" pos:column="31">sizeof<argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">long<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></sizeof><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator></expr> ?<pos:position pos:line="7" pos:column="46"/></condition><then pos:line="7" pos:column="46">
    <expr><literal type="string" pos:line="8" pos:column="5">"FD %s:%d socketpair() = %ld %ld\n"<pos:position pos:line="8" pos:column="40"/></literal></expr> <pos:position pos:line="8" pos:column="41"/></then><else pos:line="8" pos:column="41">:
    <expr><literal type="string" pos:line="9" pos:column="5">"FD %s:%d socketpair() = %zd %zd\n"<pos:position pos:line="9" pos:column="40"/></literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">res<pos:position pos:line="11" pos:column="10"/></name> <init pos:line="11" pos:column="11">= <expr><call><name pos:line="11" pos:column="13">socketpair<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">domain<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">type<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">protocol<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">socket_vector<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="63"/></decl_stmt>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">source<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&amp;&amp;<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">res<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">curl_memlog<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">fmt<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">source<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">line<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="36">socket_vector<pos:position pos:line="14" pos:column="49"/></name><index pos:line="14" pos:column="49">[<expr><literal type="number" pos:line="14" pos:column="50">0<pos:position pos:line="14" pos:column="51"/></literal></expr>]<pos:position pos:line="14" pos:column="52"/></index></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="54">socket_vector<pos:position pos:line="14" pos:column="67"/></name><index pos:line="14" pos:column="67">[<expr><literal type="number" pos:line="14" pos:column="68">1<pos:position pos:line="14" pos:column="69"/></literal></expr>]<pos:position pos:line="14" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt></block></then></if>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">res<pos:position pos:line="16" pos:column="13"/></name></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1716_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_pop3_write<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">connectdata<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">str<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">size_t<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">nread<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* This code could be made into a special function in the handler struct */</comment>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">CURLE_OK<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">Curl_easy<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">data<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">conn<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">SingleRequest<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">k<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><operator pos:line="6" pos:column="29">&amp;<pos:position pos:line="6" pos:column="34"/></operator><name><name pos:line="6" pos:column="30">data<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">req<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">pop3_conn<pos:position pos:line="8" pos:column="19"/></name></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">pop3c<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name><name pos:line="8" pos:column="30">conn<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">proto<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">pop3c<pos:position pos:line="8" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">bool<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">strip_dot<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name pos:line="9" pos:column="20">FALSE<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">last<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* Search through the buffer looking for the end-of-body marker which is
     5 bytes (0d 0a 2e 0d 0a). Note that a line starting with a dot matches
     the eob so the server will have prefixed it with an extra dot which we
     need to strip out. Additionally the marker could of course be spread out
     over 5 different data chunks. */</comment>
  <for pos:line="18" pos:column="3">for<control pos:line="18" pos:column="6">(<init><expr><name pos:line="18" pos:column="7">i<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></init> <condition><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">&lt;<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="18">nread<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></condition> <incr><expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">++<pos:position pos:line="18" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="29"/></control> <block pos:line="18" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">size_t<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">prev<pos:position pos:line="19" pos:column="16"/></name> <init pos:line="19" pos:column="17">= <expr><name><name pos:line="19" pos:column="19">pop3c<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">eob<pos:position pos:line="19" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="30"/></decl_stmt>

    <switch pos:line="21" pos:column="5">switch<condition pos:line="21" pos:column="11">(<expr><name><name pos:line="21" pos:column="12">str<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><name pos:line="21" pos:column="16">i<pos:position pos:line="21" pos:column="17"/></name></expr>]<pos:position pos:line="21" pos:column="18"/></index></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition> <block pos:line="21" pos:column="20">{
    <case pos:line="22" pos:column="5">case <expr><literal type="number" pos:line="22" pos:column="10">0x0d<pos:position pos:line="22" pos:column="14"/></literal></expr>:<pos:position pos:line="22" pos:column="15"/></case>
      <if pos:line="23" pos:column="7">if<condition pos:line="23" pos:column="9">(<expr><name><name pos:line="23" pos:column="10">pop3c<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">eob<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">pop3c<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">eob<pos:position pos:line="24" pos:column="19"/></name></name><operator pos:line="24" pos:column="19">++<pos:position pos:line="24" pos:column="21"/></operator></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>

        <if pos:line="26" pos:column="9">if<condition pos:line="26" pos:column="11">(<expr><name pos:line="26" pos:column="12">i<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition><then pos:line="26" pos:column="14"> <block pos:line="26" pos:column="15">{
          <comment type="block" pos:line="27" pos:column="11">/* Write out the body part that didn't match */</comment>
          <expr_stmt><expr><name pos:line="28" pos:column="11">result<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">Curl_client_write<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">conn<pos:position pos:line="28" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">CLIENTWRITE_BODY<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="62">&amp;<pos:position pos:line="28" pos:column="67"/></operator><name><name pos:line="28" pos:column="63">str<pos:position pos:line="28" pos:column="66"/></name><index pos:line="28" pos:column="66">[<expr><name pos:line="28" pos:column="67">last<pos:position pos:line="28" pos:column="71"/></name></expr>]<pos:position pos:line="28" pos:column="72"/></index></name></expr></argument>,
                                     <argument><expr><name pos:line="29" pos:column="38">i<pos:position pos:line="29" pos:column="39"/></name> <operator pos:line="29" pos:column="40">-<pos:position pos:line="29" pos:column="41"/></operator> <name pos:line="29" pos:column="42">last<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>

          <if pos:line="31" pos:column="11">if<condition pos:line="31" pos:column="13">(<expr><name pos:line="31" pos:column="14">result<pos:position pos:line="31" pos:column="20"/></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21">
            <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">result<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></return></block></then></if>

          <expr_stmt><expr><name pos:line="34" pos:column="11">last<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">i<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
      }<pos:position pos:line="36" pos:column="8"/></block></then>
      <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if<condition pos:line="37" pos:column="14">(<expr><name><name pos:line="37" pos:column="15">pop3c<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">eob<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">==<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="29">3<pos:position pos:line="37" pos:column="30"/></literal></expr>)<pos:position pos:line="37" pos:column="31"/></condition><then pos:line="37" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="9">pop3c<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">eob<pos:position pos:line="38" pos:column="19"/></name></name><operator pos:line="38" pos:column="19">++<pos:position pos:line="38" pos:column="21"/></operator></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt></block></then></if></elseif>
      <else pos:line="39" pos:column="7">else
        <comment type="block" pos:line="40" pos:column="9">/* If the character match wasn't at position 0 or 3 then restart the
           pattern matching */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="9">pop3c<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">eob<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <literal type="number" pos:line="42" pos:column="22">1<pos:position pos:line="42" pos:column="23"/></literal></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt></block></else></if>
      <break pos:line="43" pos:column="7">break;<pos:position pos:line="43" pos:column="13"/></break>

    <case pos:line="45" pos:column="5">case <expr><literal type="number" pos:line="45" pos:column="10">0x0a<pos:position pos:line="45" pos:column="14"/></literal></expr>:<pos:position pos:line="45" pos:column="15"/></case>
      <if pos:line="46" pos:column="7">if<condition pos:line="46" pos:column="9">(<expr><name><name pos:line="46" pos:column="10">pop3c<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">eob<pos:position pos:line="46" pos:column="20"/></name></name> <operator pos:line="46" pos:column="21">==<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="24">1<pos:position pos:line="46" pos:column="25"/></literal> <operator pos:line="46" pos:column="26">||<pos:position pos:line="46" pos:column="28"/></operator> <name><name pos:line="46" pos:column="29">pop3c<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">eob<pos:position pos:line="46" pos:column="39"/></name></name> <operator pos:line="46" pos:column="40">==<pos:position pos:line="46" pos:column="42"/></operator> <literal type="number" pos:line="46" pos:column="43">4<pos:position pos:line="46" pos:column="44"/></literal></expr>)<pos:position pos:line="46" pos:column="45"/></condition><then pos:line="46" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="9">pop3c<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">eob<pos:position pos:line="47" pos:column="19"/></name></name><operator pos:line="47" pos:column="19">++<pos:position pos:line="47" pos:column="21"/></operator></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt></block></then>
      <else pos:line="48" pos:column="7">else
        <comment type="block" pos:line="49" pos:column="9">/* If the character match wasn't at position 1 or 4 then start the
           search again */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="9">pop3c<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">eob<pos:position pos:line="51" pos:column="19"/></name></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <literal type="number" pos:line="51" pos:column="22">0<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt></block></else></if>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>

    <case pos:line="54" pos:column="5">case <expr><literal type="number" pos:line="54" pos:column="10">0x2e<pos:position pos:line="54" pos:column="14"/></literal></expr>:<pos:position pos:line="54" pos:column="15"/></case>
      <if pos:line="55" pos:column="7">if<condition pos:line="55" pos:column="9">(<expr><name><name pos:line="55" pos:column="10">pop3c<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">eob<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">==<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">2<pos:position pos:line="55" pos:column="25"/></literal></expr>)<pos:position pos:line="55" pos:column="26"/></condition><then pos:line="55" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="9">pop3c<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">eob<pos:position pos:line="56" pos:column="19"/></name></name><operator pos:line="56" pos:column="19">++<pos:position pos:line="56" pos:column="21"/></operator></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt></block></then>
      <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if<condition pos:line="57" pos:column="14">(<expr><name><name pos:line="57" pos:column="15">pop3c<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">eob<pos:position pos:line="57" pos:column="25"/></name></name> <operator pos:line="57" pos:column="26">==<pos:position pos:line="57" pos:column="28"/></operator> <literal type="number" pos:line="57" pos:column="29">3<pos:position pos:line="57" pos:column="30"/></literal></expr>)<pos:position pos:line="57" pos:column="31"/></condition><then pos:line="57" pos:column="31"> <block pos:line="57" pos:column="32">{
        <comment type="block" pos:line="58" pos:column="9">/* We have an extra dot after the CRLF which we need to strip off */</comment>
        <expr_stmt><expr><name pos:line="59" pos:column="9">strip_dot<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <name pos:line="59" pos:column="21">TRUE<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">pop3c<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">eob<pos:position pos:line="60" pos:column="19"/></name></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <literal type="number" pos:line="60" pos:column="22">0<pos:position pos:line="60" pos:column="23"/></literal></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if></elseif>
      <else pos:line="62" pos:column="7">else
        <comment type="block" pos:line="63" pos:column="9">/* If the character match wasn't at position 2 then start the search
           again */</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="9">pop3c<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">eob<pos:position pos:line="65" pos:column="19"/></name></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <literal type="number" pos:line="65" pos:column="22">0<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt></block></else></if>
      <break pos:line="66" pos:column="7">break;<pos:position pos:line="66" pos:column="13"/></break>

    <default pos:line="68" pos:column="5">default:<pos:position pos:line="68" pos:column="13"/></default>
      <expr_stmt><expr><name><name pos:line="69" pos:column="7">pop3c<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">eob<pos:position pos:line="69" pos:column="17"/></name></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <literal type="number" pos:line="69" pos:column="20">0<pos:position pos:line="69" pos:column="21"/></literal></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
      <break pos:line="70" pos:column="7">break;<pos:position pos:line="70" pos:column="13"/></break>
    }<pos:position pos:line="71" pos:column="6"/></block></switch>

    <comment type="block" pos:line="73" pos:column="5">/* Did we have a partial match which has subsequently failed? */</comment>
    <if pos:line="74" pos:column="5">if<condition pos:line="74" pos:column="7">(<expr><name pos:line="74" pos:column="8">prev<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">&amp;&amp;<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="16">prev<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">&gt;=<pos:position pos:line="74" pos:column="26"/></operator> <name><name pos:line="74" pos:column="24">pop3c<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">eob<pos:position pos:line="74" pos:column="34"/></name></name></expr>)<pos:position pos:line="74" pos:column="35"/></condition><then pos:line="74" pos:column="35"> <block pos:line="74" pos:column="36">{
      <comment type="block" pos:line="75" pos:column="7">/* Strip can only be non-zero for the very first mismatch after CRLF
         and then both prev and strip are equal and nothing will be output
         below */</comment>
      <while pos:line="78" pos:column="7">while<condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">prev<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">&amp;&amp;<pos:position pos:line="78" pos:column="28"/></operator> <name><name pos:line="78" pos:column="21">pop3c<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">strip<pos:position pos:line="78" pos:column="33"/></name></name></expr>)<pos:position pos:line="78" pos:column="34"/></condition> <block pos:line="78" pos:column="35">{
        <expr_stmt><expr><name pos:line="79" pos:column="9">prev<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">--<pos:position pos:line="79" pos:column="15"/></operator></expr>;<pos:position pos:line="79" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">pop3c<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">-&gt;<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="16">strip<pos:position pos:line="80" pos:column="21"/></name></name><operator pos:line="80" pos:column="21">--<pos:position pos:line="80" pos:column="23"/></operator></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="81" pos:column="8"/></block></while>

      <if pos:line="83" pos:column="7">if<condition pos:line="83" pos:column="9">(<expr><name pos:line="83" pos:column="10">prev<pos:position pos:line="83" pos:column="14"/></name></expr>)<pos:position pos:line="83" pos:column="15"/></condition><then pos:line="83" pos:column="15"> <block pos:line="83" pos:column="16">{
        <comment type="block" pos:line="84" pos:column="9">/* If the partial match was the CRLF and dot then only write the CRLF
           as the server would have inserted the dot */</comment>
        <expr_stmt><expr><name pos:line="86" pos:column="9">result<pos:position pos:line="86" pos:column="15"/></name> <operator pos:line="86" pos:column="16">=<pos:position pos:line="86" pos:column="17"/></operator> <call><name pos:line="86" pos:column="18">Curl_client_write<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">conn<pos:position pos:line="86" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="42">CLIENTWRITE_BODY<pos:position pos:line="86" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="60">(<pos:position pos:line="86" pos:column="61"/></operator><name pos:line="86" pos:column="61">char<pos:position pos:line="86" pos:column="65"/></name> <operator pos:line="86" pos:column="66">*<pos:position pos:line="86" pos:column="67"/></operator><operator pos:line="86" pos:column="67">)<pos:position pos:line="86" pos:column="68"/></operator><name pos:line="86" pos:column="68">POP3_EOB<pos:position pos:line="86" pos:column="76"/></name></expr></argument>,
                                   <argument><expr><ternary><condition><expr><name pos:line="87" pos:column="36">strip_dot<pos:position pos:line="87" pos:column="45"/></name></expr> ?<pos:position pos:line="87" pos:column="47"/></condition><then pos:line="87" pos:column="47"> <expr><name pos:line="87" pos:column="48">prev<pos:position pos:line="87" pos:column="52"/></name> <operator pos:line="87" pos:column="53">-<pos:position pos:line="87" pos:column="54"/></operator> <literal type="number" pos:line="87" pos:column="55">1<pos:position pos:line="87" pos:column="56"/></literal></expr> <pos:position pos:line="87" pos:column="57"/></then><else pos:line="87" pos:column="57">: <expr><name pos:line="87" pos:column="59">prev<pos:position pos:line="87" pos:column="63"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="65"/></expr_stmt>

        <if pos:line="89" pos:column="9">if<condition pos:line="89" pos:column="11">(<expr><name pos:line="89" pos:column="12">result<pos:position pos:line="89" pos:column="18"/></name></expr>)<pos:position pos:line="89" pos:column="19"/></condition><then pos:line="89" pos:column="19">
          <block type="pseudo"><return pos:line="90" pos:column="11">return <expr><name pos:line="90" pos:column="18">result<pos:position pos:line="90" pos:column="24"/></name></expr>;<pos:position pos:line="90" pos:column="25"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="92" pos:column="9">last<pos:position pos:line="92" pos:column="13"/></name> <operator pos:line="92" pos:column="14">=<pos:position pos:line="92" pos:column="15"/></operator> <name pos:line="92" pos:column="16">i<pos:position pos:line="92" pos:column="17"/></name></expr>;<pos:position pos:line="92" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="93" pos:column="9">strip_dot<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">=<pos:position pos:line="93" pos:column="20"/></operator> <name pos:line="93" pos:column="21">FALSE<pos:position pos:line="93" pos:column="26"/></name></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="94" pos:column="8"/></block></then></if>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
  }<pos:position pos:line="96" pos:column="4"/></block></for>

  <if pos:line="98" pos:column="3">if<condition pos:line="98" pos:column="5">(<expr><name><name pos:line="98" pos:column="6">pop3c<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">eob<pos:position pos:line="98" pos:column="16"/></name></name> <operator pos:line="98" pos:column="17">==<pos:position pos:line="98" pos:column="19"/></operator> <name pos:line="98" pos:column="20">POP3_EOB_LEN<pos:position pos:line="98" pos:column="32"/></name></expr>)<pos:position pos:line="98" pos:column="33"/></condition><then pos:line="98" pos:column="33"> <block pos:line="98" pos:column="34">{
    <comment type="block" pos:line="99" pos:column="5">/* We have a full match so the transfer is done, however we must transfer
    the CRLF at the start of the EOB as this is considered to be part of the
    message as per RFC-1939, sect. 3 */</comment>
    <expr_stmt><expr><name pos:line="102" pos:column="5">result<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">=<pos:position pos:line="102" pos:column="13"/></operator> <call><name pos:line="102" pos:column="14">Curl_client_write<pos:position pos:line="102" pos:column="31"/></name><argument_list pos:line="102" pos:column="31">(<argument><expr><name pos:line="102" pos:column="32">conn<pos:position pos:line="102" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="38">CLIENTWRITE_BODY<pos:position pos:line="102" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="56">(<pos:position pos:line="102" pos:column="57"/></operator><name pos:line="102" pos:column="57">char<pos:position pos:line="102" pos:column="61"/></name> <operator pos:line="102" pos:column="62">*<pos:position pos:line="102" pos:column="63"/></operator><operator pos:line="102" pos:column="63">)<pos:position pos:line="102" pos:column="64"/></operator><name pos:line="102" pos:column="64">POP3_EOB<pos:position pos:line="102" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="74">2<pos:position pos:line="102" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="77"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="104" pos:column="5">k<pos:position pos:line="104" pos:column="6"/></name><operator pos:line="104" pos:column="6">-&gt;<pos:position pos:line="104" pos:column="11"/></operator><name pos:line="104" pos:column="8">keepon<pos:position pos:line="104" pos:column="14"/></name></name> <operator pos:line="104" pos:column="15">&amp;=<pos:position pos:line="104" pos:column="21"/></operator> <operator pos:line="104" pos:column="18">~<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="19">KEEP_RECV<pos:position pos:line="104" pos:column="28"/></name></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="105" pos:column="5">pop3c<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">-&gt;<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="12">eob<pos:position pos:line="105" pos:column="15"/></name></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <literal type="number" pos:line="105" pos:column="18">0<pos:position pos:line="105" pos:column="19"/></literal></expr>;<pos:position pos:line="105" pos:column="20"/></expr_stmt>

    <return pos:line="107" pos:column="5">return <expr><name pos:line="107" pos:column="12">result<pos:position pos:line="107" pos:column="18"/></name></expr>;<pos:position pos:line="107" pos:column="19"/></return>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>

  <if pos:line="110" pos:column="3">if<condition pos:line="110" pos:column="5">(<expr><name><name pos:line="110" pos:column="6">pop3c<pos:position pos:line="110" pos:column="11"/></name><operator pos:line="110" pos:column="11">-&gt;<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="13">eob<pos:position pos:line="110" pos:column="16"/></name></name></expr>)<pos:position pos:line="110" pos:column="17"/></condition><then pos:line="110" pos:column="17">
    <comment type="block" pos:line="111" pos:column="5">/* While EOB is matching nothing should be output */</comment>
    <block type="pseudo"><return pos:line="112" pos:column="5">return <expr><name pos:line="112" pos:column="12">CURLE_OK<pos:position pos:line="112" pos:column="20"/></name></expr>;<pos:position pos:line="112" pos:column="21"/></return></block></then></if>

  <if pos:line="114" pos:column="3">if<condition pos:line="114" pos:column="5">(<expr><name pos:line="114" pos:column="6">nread<pos:position pos:line="114" pos:column="11"/></name> <operator pos:line="114" pos:column="12">-<pos:position pos:line="114" pos:column="13"/></operator> <name pos:line="114" pos:column="14">last<pos:position pos:line="114" pos:column="18"/></name></expr>)<pos:position pos:line="114" pos:column="19"/></condition><then pos:line="114" pos:column="19"> <block pos:line="114" pos:column="20">{
    <expr_stmt><expr><name pos:line="115" pos:column="5">result<pos:position pos:line="115" pos:column="11"/></name> <operator pos:line="115" pos:column="12">=<pos:position pos:line="115" pos:column="13"/></operator> <call><name pos:line="115" pos:column="14">Curl_client_write<pos:position pos:line="115" pos:column="31"/></name><argument_list pos:line="115" pos:column="31">(<argument><expr><name pos:line="115" pos:column="32">conn<pos:position pos:line="115" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="38">CLIENTWRITE_BODY<pos:position pos:line="115" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="56">&amp;<pos:position pos:line="115" pos:column="61"/></operator><name><name pos:line="115" pos:column="57">str<pos:position pos:line="115" pos:column="60"/></name><index pos:line="115" pos:column="60">[<expr><name pos:line="115" pos:column="61">last<pos:position pos:line="115" pos:column="65"/></name></expr>]<pos:position pos:line="115" pos:column="66"/></index></name></expr></argument>,
                               <argument><expr><name pos:line="116" pos:column="32">nread<pos:position pos:line="116" pos:column="37"/></name> <operator pos:line="116" pos:column="38">-<pos:position pos:line="116" pos:column="39"/></operator> <name pos:line="116" pos:column="40">last<pos:position pos:line="116" pos:column="44"/></name></expr></argument>)<pos:position pos:line="116" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <return pos:line="119" pos:column="3">return <expr><name pos:line="119" pos:column="10">result<pos:position pos:line="119" pos:column="16"/></name></expr>;<pos:position pos:line="119" pos:column="17"/></return>
}<pos:position pos:line="120" pos:column="2"/></block></function></unit>

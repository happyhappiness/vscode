<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2356.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">gtls_connect_step3<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">struct<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">connectdata<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">conn<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">sockindex<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">cert_list_size<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">gnutls_datum_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">chainp<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">unsigned<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">verify_status<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gnutls_x509_crt_t<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">x509_cert<pos:position pos:line="8" pos:column="30"/></name></decl>,<decl><type ref="prev"/><name pos:line="8" pos:column="31">x509_issuer<pos:position pos:line="8" pos:column="42"/></name></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gnutls_datum_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">issuerp<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">certbuf<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><literal type="number" pos:line="10" pos:column="16">256<pos:position pos:line="10" pos:column="19"/></literal></expr>]<pos:position pos:line="10" pos:column="20"/></index></name> <init pos:line="10" pos:column="21">= <expr><literal type="string" pos:line="10" pos:column="23">""<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt> <comment type="block" pos:line="10" pos:column="27">/* big enough? */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">size<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">unsigned<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">int<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">algo<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">unsigned<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">int<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">bits<pos:position pos:line="13" pos:column="20"/></name></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">time_t<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">certclock<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">ptr<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">struct<pos:position pos:line="16" pos:column="9"/></name> <name pos:line="16" pos:column="10">SessionHandle<pos:position pos:line="16" pos:column="23"/></name></name> <modifier pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></modifier></type><name pos:line="16" pos:column="25">data<pos:position pos:line="16" pos:column="29"/></name> <init pos:line="16" pos:column="30">= <expr><name><name pos:line="16" pos:column="32">conn<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">data<pos:position pos:line="16" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">gnutls_session_t<pos:position pos:line="17" pos:column="19"/></name></type> <name pos:line="17" pos:column="20">session<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><name><name pos:line="17" pos:column="30">conn<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">ssl<pos:position pos:line="17" pos:column="39"/></name><index pos:line="17" pos:column="39">[<expr><name pos:line="17" pos:column="40">sockindex<pos:position pos:line="17" pos:column="49"/></name></expr>]<pos:position pos:line="17" pos:column="50"/></index></name><operator pos:line="17" pos:column="50">.<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">session<pos:position pos:line="17" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="59"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">rc<pos:position pos:line="18" pos:column="9"/></name></decl>;<pos:position pos:line="18" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">bool<pos:position pos:line="19" pos:column="7"/></name></type> <name pos:line="19" pos:column="8">incache<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">void<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier></type><name pos:line="20" pos:column="9">ssl_sessionid<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
<cpp:ifdef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifdef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">HAS_ALPN<pos:position pos:line="21" pos:column="16"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">gnutls_datum_t<pos:position pos:line="22" pos:column="17"/></name></type> <name pos:line="22" pos:column="18">proto<pos:position pos:line="22" pos:column="23"/></name></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">CURLcode<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">result<pos:position pos:line="24" pos:column="18"/></name> <init pos:line="24" pos:column="19">= <expr><name pos:line="24" pos:column="21">CURLE_OK<pos:position pos:line="24" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="26" pos:column="3">/* This function will return the peer's raw certificate (chain) as sent by
     the peer. These certificates are in raw format (DER encoded for
     X.509). In case of a X.509 then a certificate list may be present. The
     first certificate in the list is the peer's certificate, following the
     issuer's certificate, then the issuer's issuer etc. */</comment>

  <expr_stmt><expr><name pos:line="32" pos:column="3">chainp<pos:position pos:line="32" pos:column="9"/></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <call><name pos:line="32" pos:column="12">gnutls_certificate_get_peers<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">session<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="50">&amp;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="51">cert_list_size<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
  <if pos:line="33" pos:column="3">if<condition pos:line="33" pos:column="5">(<expr><operator pos:line="33" pos:column="6">!<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">chainp<pos:position pos:line="33" pos:column="13"/></name></expr>)<pos:position pos:line="33" pos:column="14"/></condition><then pos:line="33" pos:column="14"> <block pos:line="33" pos:column="15">{
    <if pos:line="34" pos:column="5">if<condition pos:line="34" pos:column="7">(<expr><name><name pos:line="34" pos:column="8">data<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">set<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">ssl<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">verifypeer<pos:position pos:line="34" pos:column="32"/></name></name> <operator pos:line="34" pos:column="33">||<pos:position pos:line="34" pos:column="35"/></operator>
       <name><name pos:line="35" pos:column="8">data<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">set<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">ssl<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">.<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">verifyhost<pos:position pos:line="35" pos:column="32"/></name></name> <operator pos:line="35" pos:column="33">||<pos:position pos:line="35" pos:column="35"/></operator>
       <name><name pos:line="36" pos:column="8">data<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">set<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">ssl<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">issuercert<pos:position pos:line="36" pos:column="32"/></name></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">USE_TLS_SRP<pos:position pos:line="37" pos:column="19"/></name></cpp:ifdef>
      <if pos:line="38" pos:column="7">if<condition pos:line="38" pos:column="9">(<expr><name><name pos:line="38" pos:column="10">data<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">set<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">ssl<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">.<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">authtype<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">==<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">CURL_TLSAUTH_SRP<pos:position pos:line="38" pos:column="52"/></name>
         <operator pos:line="39" pos:column="10">&amp;&amp;<pos:position pos:line="39" pos:column="20"/></operator> <name><name pos:line="39" pos:column="13">data<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">set<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">ssl<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">.<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">username<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">!=<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="39">NULL<pos:position pos:line="39" pos:column="43"/></name>
         <operator pos:line="40" pos:column="10">&amp;&amp;<pos:position pos:line="40" pos:column="20"/></operator> <operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">data<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">set<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">ssl<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">verifypeer<pos:position pos:line="40" pos:column="38"/></name></name>
         <operator pos:line="41" pos:column="10">&amp;&amp;<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="13">gnutls_cipher_get<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">session<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="40"/></condition><then pos:line="41" pos:column="40"> <block pos:line="41" pos:column="41">{
        <comment type="block" pos:line="42" pos:column="9">/* no peer cert, but auth is ok if we have SRP user and cipher and no
           peer verify */</comment>
      }<pos:position pos:line="44" pos:column="8"/></block></then>
      <else pos:line="45" pos:column="7">else <block pos:line="45" pos:column="12">{
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">failf<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">data<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="21">"failed to get server cert"<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="48" pos:column="46"/></name></expr>;<pos:position pos:line="48" pos:column="47"/></return>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">USE_TLS_SRP<pos:position pos:line="49" pos:column="19"/></name></cpp:ifdef>
      }<pos:position pos:line="50" pos:column="8"/></block></else></if>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">infof<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">data<pos:position pos:line="53" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="17">"\t common name: WARNING couldn't obtain\n"<pos:position pos:line="53" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <if pos:line="56" pos:column="3">if<condition pos:line="56" pos:column="5">(<expr><name><name pos:line="56" pos:column="6">data<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">set<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">.<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">ssl<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">.<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">verifypeer<pos:position pos:line="56" pos:column="30"/></name></name></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31"> <block pos:line="56" pos:column="32">{
    <comment type="block" pos:line="57" pos:column="5">/* This function will try to verify the peer's certificate and return its
       status (trusted, invalid etc.). The value of status should be one or
       more of the gnutls_certificate_status_t enumerated elements bitwise
       or'd. To avoid denial of service attacks some default upper limits
       regarding the certificate key size and chain size are set. To override
       them use gnutls_certificate_set_verify_limits(). */</comment>

    <expr_stmt><expr><name pos:line="64" pos:column="5">rc<pos:position pos:line="64" pos:column="7"/></name> <operator pos:line="64" pos:column="8">=<pos:position pos:line="64" pos:column="9"/></operator> <call><name pos:line="64" pos:column="10">gnutls_certificate_verify_peers2<pos:position pos:line="64" pos:column="42"/></name><argument_list pos:line="64" pos:column="42">(<argument><expr><name pos:line="64" pos:column="43">session<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="52">&amp;<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="53">verify_status<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="68"/></expr_stmt>
    <if pos:line="65" pos:column="5">if<condition pos:line="65" pos:column="7">(<expr><name pos:line="65" pos:column="8">rc<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">&lt;<pos:position pos:line="65" pos:column="15"/></operator> <literal type="number" pos:line="65" pos:column="13">0<pos:position pos:line="65" pos:column="14"/></literal></expr>)<pos:position pos:line="65" pos:column="15"/></condition><then pos:line="65" pos:column="15"> <block pos:line="65" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">failf<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">data<pos:position pos:line="66" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="19">"server cert verify failed: %d"<pos:position pos:line="66" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="52">rc<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>
      <return pos:line="67" pos:column="7">return <expr><name pos:line="67" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="70" pos:column="5">/* verify_status is a bitmask of gnutls_certificate_status bits */</comment>
    <if pos:line="71" pos:column="5">if<condition pos:line="71" pos:column="7">(<expr><name pos:line="71" pos:column="8">verify_status<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">&amp;<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="24">GNUTLS_CERT_INVALID<pos:position pos:line="71" pos:column="43"/></name></expr>)<pos:position pos:line="71" pos:column="44"/></condition><then pos:line="71" pos:column="44"> <block pos:line="71" pos:column="45">{
      <if pos:line="72" pos:column="7">if<condition pos:line="72" pos:column="9">(<expr><name><name pos:line="72" pos:column="10">data<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">-&gt;<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="16">set<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">.<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="20">ssl<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">.<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="24">verifypeer<pos:position pos:line="72" pos:column="34"/></name></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35"> <block pos:line="72" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">failf<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">data<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="21">"server certificate verification failed. CAfile: %s "<pos:position pos:line="73" pos:column="74"/></literal>
              <literal type="string" pos:line="74" pos:column="15">"CRLfile: %s"<pos:position pos:line="74" pos:column="28"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="74" pos:column="30">data<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">-&gt;<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="36">set<pos:position pos:line="74" pos:column="39"/></name><operator pos:line="74" pos:column="39">.<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="40">ssl<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">.<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="44">CAfile<pos:position pos:line="74" pos:column="50"/></name></name></expr>?<pos:position pos:line="74" pos:column="51"/></condition><then><expr><name><name pos:line="74" pos:column="51">data<pos:position pos:line="74" pos:column="55"/></name><operator pos:line="74" pos:column="55">-&gt;<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="57">set<pos:position pos:line="74" pos:column="60"/></name><operator pos:line="74" pos:column="60">.<pos:position pos:line="74" pos:column="61"/></operator><name pos:line="74" pos:column="61">ssl<pos:position pos:line="74" pos:column="64"/></name><operator pos:line="74" pos:column="64">.<pos:position pos:line="74" pos:column="65"/></operator><name pos:line="74" pos:column="65">CAfile<pos:position pos:line="74" pos:column="71"/></name></name></expr></then><else pos:line="74" pos:column="71">:<expr><literal type="string" pos:line="74" pos:column="72">"none"<pos:position pos:line="74" pos:column="78"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><name><name pos:line="75" pos:column="15">data<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">-&gt;<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="21">set<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">.<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="25">ssl<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">.<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="29">CRLfile<pos:position pos:line="75" pos:column="36"/></name></name></expr>?<pos:position pos:line="75" pos:column="37"/></condition><then><expr><name><name pos:line="75" pos:column="37">data<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">-&gt;<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="43">set<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">.<pos:position pos:line="75" pos:column="47"/></operator><name pos:line="75" pos:column="47">ssl<pos:position pos:line="75" pos:column="50"/></name><operator pos:line="75" pos:column="50">.<pos:position pos:line="75" pos:column="51"/></operator><name pos:line="75" pos:column="51">CRLfile<pos:position pos:line="75" pos:column="58"/></name></name></expr></then><else pos:line="75" pos:column="58">:<expr><literal type="string" pos:line="75" pos:column="59">"none"<pos:position pos:line="75" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="67"/></expr_stmt>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">CURLE_SSL_CACERT<pos:position pos:line="76" pos:column="32"/></name></expr>;<pos:position pos:line="76" pos:column="33"/></return>
      }<pos:position pos:line="77" pos:column="8"/></block></then>
      <else pos:line="78" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="9">infof<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">(<argument><expr><name pos:line="79" pos:column="15">data<pos:position pos:line="79" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="21">"\t server certificate verification FAILED\n"<pos:position pos:line="79" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="68"/></expr_stmt></block></else></if>
    }<pos:position pos:line="80" pos:column="6"/></block></then>
    <else pos:line="81" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="7">infof<pos:position pos:line="82" pos:column="12"/></name><argument_list pos:line="82" pos:column="12">(<argument><expr><name pos:line="82" pos:column="13">data<pos:position pos:line="82" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="19">"\t server certificate verification OK\n"<pos:position pos:line="82" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="62"/></expr_stmt></block></else></if>
  }<pos:position pos:line="83" pos:column="4"/></block></then>
  <else pos:line="84" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="5">infof<pos:position pos:line="85" pos:column="10"/></name><argument_list pos:line="85" pos:column="10">(<argument><expr><name pos:line="85" pos:column="11">data<pos:position pos:line="85" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="17">"\t server certificate verification SKIPPED\n"<pos:position pos:line="85" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="65"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifdef<pos:position pos:line="87" pos:column="7"/></cpp:directive> <name pos:line="87" pos:column="8">HAS_OCSP<pos:position pos:line="87" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="88" pos:column="3">if<condition pos:line="88" pos:column="5">(<expr><name><name pos:line="88" pos:column="6">data<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">-&gt;<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="12">set<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">.<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">ssl<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">.<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="20">verifystatus<pos:position pos:line="88" pos:column="32"/></name></name></expr>)<pos:position pos:line="88" pos:column="33"/></condition><then pos:line="88" pos:column="33"> <block pos:line="88" pos:column="34">{
    <if pos:line="89" pos:column="5">if<condition pos:line="89" pos:column="7">(<expr><call><name pos:line="89" pos:column="8">gnutls_ocsp_status_request_is_checked<pos:position pos:line="89" pos:column="45"/></name><argument_list pos:line="89" pos:column="45">(<argument><expr><name pos:line="89" pos:column="46">session<pos:position pos:line="89" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="55">0<pos:position pos:line="89" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="57"/></argument_list></call> <operator pos:line="89" pos:column="58">==<pos:position pos:line="89" pos:column="60"/></operator> <literal type="number" pos:line="89" pos:column="61">0<pos:position pos:line="89" pos:column="62"/></literal></expr>)<pos:position pos:line="89" pos:column="63"/></condition><then pos:line="89" pos:column="63"> <block pos:line="89" pos:column="64">{
      <if pos:line="90" pos:column="7">if<condition pos:line="90" pos:column="9">(<expr><name pos:line="90" pos:column="10">verify_status<pos:position pos:line="90" pos:column="23"/></name> <operator pos:line="90" pos:column="24">&amp;<pos:position pos:line="90" pos:column="29"/></operator> <name pos:line="90" pos:column="26">GNUTLS_CERT_REVOKED<pos:position pos:line="90" pos:column="45"/></name></expr>)<pos:position pos:line="90" pos:column="46"/></condition><then pos:line="90" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="9">failf<pos:position pos:line="91" pos:column="14"/></name><argument_list pos:line="91" pos:column="14">(<argument><expr><name pos:line="91" pos:column="15">data<pos:position pos:line="91" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="21">"SSL server certificate was REVOKED\n"<pos:position pos:line="91" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="61"/></expr_stmt></block></then>
      <else pos:line="92" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="9">failf<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><name pos:line="93" pos:column="15">data<pos:position pos:line="93" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="21">"SSL server certificate status verification FAILED"<pos:position pos:line="93" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="74"/></expr_stmt></block></else></if>

      <return pos:line="95" pos:column="7">return <expr><name pos:line="95" pos:column="14">CURLE_SSL_INVALIDCERTSTATUS<pos:position pos:line="95" pos:column="41"/></name></expr>;<pos:position pos:line="95" pos:column="42"/></return>
    }<pos:position pos:line="96" pos:column="6"/></block></then>
    <else pos:line="97" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="7">infof<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><name pos:line="98" pos:column="13">data<pos:position pos:line="98" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="19">"SSL server certificate status verification OK\n"<pos:position pos:line="98" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="70"/></expr_stmt></block></else></if>
  }<pos:position pos:line="99" pos:column="4"/></block></then>
  <else pos:line="100" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="5">infof<pos:position pos:line="101" pos:column="10"/></name><argument_list pos:line="101" pos:column="10">(<argument><expr><name pos:line="101" pos:column="11">data<pos:position pos:line="101" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="17">"SSL server certificate status verification SKIPPED\n"<pos:position pos:line="101" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="73"/></expr_stmt></block></else></if>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="104" pos:column="3">/* initialize an X.509 certificate structure. */</comment>
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">gnutls_x509_crt_init<pos:position pos:line="105" pos:column="23"/></name><argument_list pos:line="105" pos:column="23">(<argument><expr><operator pos:line="105" pos:column="24">&amp;<pos:position pos:line="105" pos:column="29"/></operator><name pos:line="105" pos:column="25">x509_cert<pos:position pos:line="105" pos:column="34"/></name></expr></argument>)<pos:position pos:line="105" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="36"/></expr_stmt>

  <if pos:line="107" pos:column="3">if<condition pos:line="107" pos:column="5">(<expr><name pos:line="107" pos:column="6">chainp<pos:position pos:line="107" pos:column="12"/></name></expr>)<pos:position pos:line="107" pos:column="13"/></condition><then pos:line="107" pos:column="13">
    <comment type="block" pos:line="108" pos:column="5">/* convert the given DER or PEM encoded Certificate to the native
       gnutls_x509_crt_t format */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="5">gnutls_x509_crt_import<pos:position pos:line="110" pos:column="27"/></name><argument_list pos:line="110" pos:column="27">(<argument><expr><name pos:line="110" pos:column="28">x509_cert<pos:position pos:line="110" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="39">chainp<pos:position pos:line="110" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="47">GNUTLS_X509_FMT_DER<pos:position pos:line="110" pos:column="66"/></name></expr></argument>)<pos:position pos:line="110" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="68"/></expr_stmt></block></then></if>

  <if pos:line="112" pos:column="3">if<condition pos:line="112" pos:column="5">(<expr><name><name pos:line="112" pos:column="6">data<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">-&gt;<pos:position pos:line="112" pos:column="15"/></operator><name pos:line="112" pos:column="12">set<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">.<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="16">ssl<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">.<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="20">issuercert<pos:position pos:line="112" pos:column="30"/></name></name></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31"> <block pos:line="112" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">gnutls_x509_crt_init<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">(<argument><expr><operator pos:line="113" pos:column="26">&amp;<pos:position pos:line="113" pos:column="31"/></operator><name pos:line="113" pos:column="27">x509_issuer<pos:position pos:line="113" pos:column="38"/></name></expr></argument>)<pos:position pos:line="113" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="114" pos:column="5">issuerp<pos:position pos:line="114" pos:column="12"/></name> <operator pos:line="114" pos:column="13">=<pos:position pos:line="114" pos:column="14"/></operator> <call><name pos:line="114" pos:column="15">load_file<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name><name pos:line="114" pos:column="25">data<pos:position pos:line="114" pos:column="29"/></name><operator pos:line="114" pos:column="29">-&gt;<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="31">set<pos:position pos:line="114" pos:column="34"/></name><operator pos:line="114" pos:column="34">.<pos:position pos:line="114" pos:column="35"/></operator><name pos:line="114" pos:column="35">ssl<pos:position pos:line="114" pos:column="38"/></name><operator pos:line="114" pos:column="38">.<pos:position pos:line="114" pos:column="39"/></operator><name pos:line="114" pos:column="39">issuercert<pos:position pos:line="114" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">gnutls_x509_crt_import<pos:position pos:line="115" pos:column="27"/></name><argument_list pos:line="115" pos:column="27">(<argument><expr><name pos:line="115" pos:column="28">x509_issuer<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="41">&amp;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="42">issuerp<pos:position pos:line="115" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="51">GNUTLS_X509_FMT_PEM<pos:position pos:line="115" pos:column="70"/></name></expr></argument>)<pos:position pos:line="115" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="116" pos:column="5">rc<pos:position pos:line="116" pos:column="7"/></name> <operator pos:line="116" pos:column="8">=<pos:position pos:line="116" pos:column="9"/></operator> <call><name pos:line="116" pos:column="10">gnutls_x509_crt_check_issuer<pos:position pos:line="116" pos:column="38"/></name><argument_list pos:line="116" pos:column="38">(<argument><expr><name pos:line="116" pos:column="39">x509_cert<pos:position pos:line="116" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="116" pos:column="49">x509_issuer<pos:position pos:line="116" pos:column="60"/></name></expr></argument>)<pos:position pos:line="116" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">gnutls_x509_crt_deinit<pos:position pos:line="117" pos:column="27"/></name><argument_list pos:line="117" pos:column="27">(<argument><expr><name pos:line="117" pos:column="28">x509_issuer<pos:position pos:line="117" pos:column="39"/></name></expr></argument>)<pos:position pos:line="117" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="118" pos:column="5">unload_file<pos:position pos:line="118" pos:column="16"/></name><argument_list pos:line="118" pos:column="16">(<argument><expr><name pos:line="118" pos:column="17">issuerp<pos:position pos:line="118" pos:column="24"/></name></expr></argument>)<pos:position pos:line="118" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="26"/></expr_stmt>
    <if pos:line="119" pos:column="5">if<condition pos:line="119" pos:column="7">(<expr><name pos:line="119" pos:column="8">rc<pos:position pos:line="119" pos:column="10"/></name> <operator pos:line="119" pos:column="11">&lt;=<pos:position pos:line="119" pos:column="16"/></operator> <literal type="number" pos:line="119" pos:column="14">0<pos:position pos:line="119" pos:column="15"/></literal></expr>)<pos:position pos:line="119" pos:column="16"/></condition><then pos:line="119" pos:column="16"> <block pos:line="119" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="120" pos:column="7">failf<pos:position pos:line="120" pos:column="12"/></name><argument_list pos:line="120" pos:column="12">(<argument><expr><name pos:line="120" pos:column="13">data<pos:position pos:line="120" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="19">"server certificate issuer check failed (IssuerCert: %s)"<pos:position pos:line="120" pos:column="76"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name><name pos:line="121" pos:column="13">data<pos:position pos:line="121" pos:column="17"/></name><operator pos:line="121" pos:column="17">-&gt;<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="19">set<pos:position pos:line="121" pos:column="22"/></name><operator pos:line="121" pos:column="22">.<pos:position pos:line="121" pos:column="23"/></operator><name pos:line="121" pos:column="23">ssl<pos:position pos:line="121" pos:column="26"/></name><operator pos:line="121" pos:column="26">.<pos:position pos:line="121" pos:column="27"/></operator><name pos:line="121" pos:column="27">issuercert<pos:position pos:line="121" pos:column="37"/></name></name></expr>?<pos:position pos:line="121" pos:column="38"/></condition><then><expr><name><name pos:line="121" pos:column="38">data<pos:position pos:line="121" pos:column="42"/></name><operator pos:line="121" pos:column="42">-&gt;<pos:position pos:line="121" pos:column="47"/></operator><name pos:line="121" pos:column="44">set<pos:position pos:line="121" pos:column="47"/></name><operator pos:line="121" pos:column="47">.<pos:position pos:line="121" pos:column="48"/></operator><name pos:line="121" pos:column="48">ssl<pos:position pos:line="121" pos:column="51"/></name><operator pos:line="121" pos:column="51">.<pos:position pos:line="121" pos:column="52"/></operator><name pos:line="121" pos:column="52">issuercert<pos:position pos:line="121" pos:column="62"/></name></name></expr></then><else pos:line="121" pos:column="62">:<expr><literal type="string" pos:line="121" pos:column="63">"none"<pos:position pos:line="121" pos:column="69"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="121" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name pos:line="122" pos:column="30">x509_cert<pos:position pos:line="122" pos:column="39"/></name></expr></argument>)<pos:position pos:line="122" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="41"/></expr_stmt>
      <return pos:line="123" pos:column="7">return <expr><name pos:line="123" pos:column="14">CURLE_SSL_ISSUER_ERROR<pos:position pos:line="123" pos:column="36"/></name></expr>;<pos:position pos:line="123" pos:column="37"/></return>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">infof<pos:position pos:line="125" pos:column="10"/></name><argument_list pos:line="125" pos:column="10">(<argument><expr><name pos:line="125" pos:column="11">data<pos:position pos:line="125" pos:column="15"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="125" pos:column="16">"\t server certificate issuer check OK (Issuer Cert: %s)\n"<pos:position pos:line="125" pos:column="75"/></literal></expr></argument>,
          <argument><expr><ternary><condition><expr><name><name pos:line="126" pos:column="11">data<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">-&gt;<pos:position pos:line="126" pos:column="20"/></operator><name pos:line="126" pos:column="17">set<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">.<pos:position pos:line="126" pos:column="21"/></operator><name pos:line="126" pos:column="21">ssl<pos:position pos:line="126" pos:column="24"/></name><operator pos:line="126" pos:column="24">.<pos:position pos:line="126" pos:column="25"/></operator><name pos:line="126" pos:column="25">issuercert<pos:position pos:line="126" pos:column="35"/></name></name></expr>?<pos:position pos:line="126" pos:column="36"/></condition><then><expr><name><name pos:line="126" pos:column="36">data<pos:position pos:line="126" pos:column="40"/></name><operator pos:line="126" pos:column="40">-&gt;<pos:position pos:line="126" pos:column="45"/></operator><name pos:line="126" pos:column="42">set<pos:position pos:line="126" pos:column="45"/></name><operator pos:line="126" pos:column="45">.<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="46">ssl<pos:position pos:line="126" pos:column="49"/></name><operator pos:line="126" pos:column="49">.<pos:position pos:line="126" pos:column="50"/></operator><name pos:line="126" pos:column="50">issuercert<pos:position pos:line="126" pos:column="60"/></name></name></expr></then><else pos:line="126" pos:column="60">:<expr><literal type="string" pos:line="126" pos:column="61">"none"<pos:position pos:line="126" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="126" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="69"/></expr_stmt>
  }<pos:position pos:line="127" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="129" pos:column="3">size<pos:position pos:line="129" pos:column="7"/></name><operator pos:line="129" pos:column="7">=<pos:position pos:line="129" pos:column="8"/></operator><sizeof pos:line="129" pos:column="8">sizeof<argument_list pos:line="129" pos:column="14">(<argument><expr><name pos:line="129" pos:column="15">certbuf<pos:position pos:line="129" pos:column="22"/></name></expr></argument>)<pos:position pos:line="129" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="129" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="130" pos:column="3">rc<pos:position pos:line="130" pos:column="5"/></name> <operator pos:line="130" pos:column="6">=<pos:position pos:line="130" pos:column="7"/></operator> <call><name pos:line="130" pos:column="8">gnutls_x509_crt_get_dn_by_oid<pos:position pos:line="130" pos:column="37"/></name><argument_list pos:line="130" pos:column="37">(<argument><expr><name pos:line="130" pos:column="38">x509_cert<pos:position pos:line="130" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="49">GNUTLS_OID_X520_COMMON_NAME<pos:position pos:line="130" pos:column="76"/></name></expr></argument>,
                                     <argument><expr><literal type="number" pos:line="131" pos:column="38">0<pos:position pos:line="131" pos:column="39"/></literal></expr></argument>, <comment type="block" pos:line="131" pos:column="41">/* the first and only one */</comment>
                                     <argument><expr><name pos:line="132" pos:column="38">FALSE<pos:position pos:line="132" pos:column="43"/></name></expr></argument>,
                                     <argument><expr><name pos:line="133" pos:column="38">certbuf<pos:position pos:line="133" pos:column="45"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="134" pos:column="38">&amp;<pos:position pos:line="134" pos:column="43"/></operator><name pos:line="134" pos:column="39">size<pos:position pos:line="134" pos:column="43"/></name></expr></argument>)<pos:position pos:line="134" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="45"/></expr_stmt>
  <if pos:line="135" pos:column="3">if<condition pos:line="135" pos:column="5">(<expr><name pos:line="135" pos:column="6">rc<pos:position pos:line="135" pos:column="8"/></name></expr>)<pos:position pos:line="135" pos:column="9"/></condition><then pos:line="135" pos:column="9"> <block pos:line="135" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">infof<pos:position pos:line="136" pos:column="10"/></name><argument_list pos:line="136" pos:column="10">(<argument><expr><name pos:line="136" pos:column="11">data<pos:position pos:line="136" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="17">"error fetching CN from cert:%s\n"<pos:position pos:line="136" pos:column="51"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="137" pos:column="11">gnutls_strerror<pos:position pos:line="137" pos:column="26"/></name><argument_list pos:line="137" pos:column="26">(<argument><expr><name pos:line="137" pos:column="27">rc<pos:position pos:line="137" pos:column="29"/></name></expr></argument>)<pos:position pos:line="137" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="137" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="138" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="140" pos:column="3">/* This function will check if the given certificate's subject matches the
     given hostname. This is a basic implementation of the matching described
     in RFC2818 (HTTPS), which takes into account wildcards, and the subject
     alternative name PKIX extension. Returns non zero on success, and zero on
     failure. */</comment>
  <expr_stmt><expr><name pos:line="145" pos:column="3">rc<pos:position pos:line="145" pos:column="5"/></name> <operator pos:line="145" pos:column="6">=<pos:position pos:line="145" pos:column="7"/></operator> <call><name pos:line="145" pos:column="8">gnutls_x509_crt_check_hostname<pos:position pos:line="145" pos:column="38"/></name><argument_list pos:line="145" pos:column="38">(<argument><expr><name pos:line="145" pos:column="39">x509_cert<pos:position pos:line="145" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="50">conn<pos:position pos:line="145" pos:column="54"/></name><operator pos:line="145" pos:column="54">-&gt;<pos:position pos:line="145" pos:column="59"/></operator><name pos:line="145" pos:column="56">host<pos:position pos:line="145" pos:column="60"/></name><operator pos:line="145" pos:column="60">.<pos:position pos:line="145" pos:column="61"/></operator><name pos:line="145" pos:column="61">name<pos:position pos:line="145" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="67"/></expr_stmt>
<cpp:if pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">if<pos:position pos:line="146" pos:column="4"/></cpp:directive> <expr><name pos:line="146" pos:column="5">GNUTLS_VERSION_NUMBER<pos:position pos:line="146" pos:column="26"/></name> <operator pos:line="146" pos:column="27">&lt;<pos:position pos:line="146" pos:column="31"/></operator> <literal type="number" pos:line="146" pos:column="29">0x030306<pos:position pos:line="146" pos:column="37"/></literal></expr></cpp:if>
  <comment type="block" pos:line="147" pos:column="3">/* Before 3.3.6, gnutls_x509_crt_check_hostname() didn't check IP
     addresses. */</comment>
  <if pos:line="149" pos:column="3">if<condition pos:line="149" pos:column="5">(<expr><operator pos:line="149" pos:column="6">!<pos:position pos:line="149" pos:column="7"/></operator><name pos:line="149" pos:column="7">rc<pos:position pos:line="149" pos:column="9"/></name></expr>)<pos:position pos:line="149" pos:column="10"/></condition><then pos:line="149" pos:column="10"> <block pos:line="149" pos:column="11">{
<cpp:ifdef pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">ifdef<pos:position pos:line="150" pos:column="7"/></cpp:directive> <name pos:line="150" pos:column="8">ENABLE_IPV6<pos:position pos:line="150" pos:column="19"/></name></cpp:ifdef>
    <cpp:define pos:line="151" pos:column="5">#<cpp:directive pos:line="151" pos:column="6">define<pos:position pos:line="151" pos:column="12"/></cpp:directive> <cpp:macro><name pos:line="151" pos:column="13">use_addr<pos:position pos:line="151" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="151" pos:column="22">in6_addr<pos:position pos:line="151" pos:column="30"/></cpp:value></cpp:define>
<cpp:else pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">else<pos:position pos:line="152" pos:column="6"/></cpp:directive></cpp:else>
    <cpp:define pos:line="153" pos:column="5">#<cpp:directive pos:line="153" pos:column="6">define<pos:position pos:line="153" pos:column="12"/></cpp:directive> <cpp:macro><name pos:line="153" pos:column="13">use_addr<pos:position pos:line="153" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="153" pos:column="22">in_addr<pos:position pos:line="153" pos:column="29"/></cpp:value></cpp:define>
<cpp:endif pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">endif<pos:position pos:line="154" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="155" pos:column="5">unsigned<pos:position pos:line="155" pos:column="13"/></name> <name pos:line="155" pos:column="14">char<pos:position pos:line="155" pos:column="18"/></name></type> <name><name pos:line="155" pos:column="19">addrbuf<pos:position pos:line="155" pos:column="26"/></name><index pos:line="155" pos:column="26">[<expr><sizeof pos:line="155" pos:column="27">sizeof<argument_list pos:line="155" pos:column="33">(<argument><expr pos:line="155" pos:column="34">struct <name pos:line="155" pos:column="41">use_addr<pos:position pos:line="155" pos:column="49"/></name></expr></argument>)<pos:position pos:line="155" pos:column="50"/></argument_list></sizeof></expr>]<pos:position pos:line="155" pos:column="51"/></index></name></decl>;<pos:position pos:line="155" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="156" pos:column="5">unsigned<pos:position pos:line="156" pos:column="13"/></name> <name pos:line="156" pos:column="14">char<pos:position pos:line="156" pos:column="18"/></name></type> <name><name pos:line="156" pos:column="19">certaddr<pos:position pos:line="156" pos:column="27"/></name><index pos:line="156" pos:column="27">[<expr><sizeof pos:line="156" pos:column="28">sizeof<argument_list pos:line="156" pos:column="34">(<argument><expr pos:line="156" pos:column="35">struct <name pos:line="156" pos:column="42">use_addr<pos:position pos:line="156" pos:column="50"/></name></expr></argument>)<pos:position pos:line="156" pos:column="51"/></argument_list></sizeof></expr>]<pos:position pos:line="156" pos:column="52"/></index></name></decl>;<pos:position pos:line="156" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="157" pos:column="5">size_t<pos:position pos:line="157" pos:column="11"/></name></type> <name pos:line="157" pos:column="12">addrlen<pos:position pos:line="157" pos:column="19"/></name> <init pos:line="157" pos:column="20">= <expr><literal type="number" pos:line="157" pos:column="22">0<pos:position pos:line="157" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="157" pos:column="25">certaddrlen<pos:position pos:line="157" pos:column="36"/></name></decl>;<pos:position pos:line="157" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="158" pos:column="5">int<pos:position pos:line="158" pos:column="8"/></name></type> <name pos:line="158" pos:column="9">i<pos:position pos:line="158" pos:column="10"/></name></decl>;<pos:position pos:line="158" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="159" pos:column="5">int<pos:position pos:line="159" pos:column="8"/></name></type> <name pos:line="159" pos:column="9">ret<pos:position pos:line="159" pos:column="12"/></name> <init pos:line="159" pos:column="13">= <expr><literal type="number" pos:line="159" pos:column="15">0<pos:position pos:line="159" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="159" pos:column="17"/></decl_stmt>

    <if pos:line="161" pos:column="5">if<condition pos:line="161" pos:column="7">(<expr><call><name pos:line="161" pos:column="8">Curl_inet_pton<pos:position pos:line="161" pos:column="22"/></name><argument_list pos:line="161" pos:column="22">(<argument><expr><name pos:line="161" pos:column="23">AF_INET<pos:position pos:line="161" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="32">conn<pos:position pos:line="161" pos:column="36"/></name><operator pos:line="161" pos:column="36">-&gt;<pos:position pos:line="161" pos:column="41"/></operator><name pos:line="161" pos:column="38">host<pos:position pos:line="161" pos:column="42"/></name><operator pos:line="161" pos:column="42">.<pos:position pos:line="161" pos:column="43"/></operator><name pos:line="161" pos:column="43">name<pos:position pos:line="161" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="49">addrbuf<pos:position pos:line="161" pos:column="56"/></name></expr></argument>)<pos:position pos:line="161" pos:column="57"/></argument_list></call> <operator pos:line="161" pos:column="58">&gt;<pos:position pos:line="161" pos:column="62"/></operator> <literal type="number" pos:line="161" pos:column="60">0<pos:position pos:line="161" pos:column="61"/></literal></expr>)<pos:position pos:line="161" pos:column="62"/></condition><then pos:line="161" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><name pos:line="162" pos:column="7">addrlen<pos:position pos:line="162" pos:column="14"/></name> <operator pos:line="162" pos:column="15">=<pos:position pos:line="162" pos:column="16"/></operator> <literal type="number" pos:line="162" pos:column="17">4<pos:position pos:line="162" pos:column="18"/></literal></expr>;<pos:position pos:line="162" pos:column="19"/></expr_stmt></block></then>
<cpp:ifdef pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">ifdef<pos:position pos:line="163" pos:column="7"/></cpp:directive> <name pos:line="163" pos:column="8">ENABLE_IPV6<pos:position pos:line="163" pos:column="19"/></name></cpp:ifdef>
    <elseif pos:line="164" pos:column="5">else <if pos:line="164" pos:column="10">if<condition pos:line="164" pos:column="12">(<expr><call><name pos:line="164" pos:column="13">Curl_inet_pton<pos:position pos:line="164" pos:column="27"/></name><argument_list pos:line="164" pos:column="27">(<argument><expr><name pos:line="164" pos:column="28">AF_INET6<pos:position pos:line="164" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="38">conn<pos:position pos:line="164" pos:column="42"/></name><operator pos:line="164" pos:column="42">-&gt;<pos:position pos:line="164" pos:column="47"/></operator><name pos:line="164" pos:column="44">host<pos:position pos:line="164" pos:column="48"/></name><operator pos:line="164" pos:column="48">.<pos:position pos:line="164" pos:column="49"/></operator><name pos:line="164" pos:column="49">name<pos:position pos:line="164" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="55">addrbuf<pos:position pos:line="164" pos:column="62"/></name></expr></argument>)<pos:position pos:line="164" pos:column="63"/></argument_list></call> <operator pos:line="164" pos:column="64">&gt;<pos:position pos:line="164" pos:column="68"/></operator> <literal type="number" pos:line="164" pos:column="66">0<pos:position pos:line="164" pos:column="67"/></literal></expr>)<pos:position pos:line="164" pos:column="68"/></condition><then pos:line="164" pos:column="68">
      <block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="7">addrlen<pos:position pos:line="165" pos:column="14"/></name> <operator pos:line="165" pos:column="15">=<pos:position pos:line="165" pos:column="16"/></operator> <literal type="number" pos:line="165" pos:column="17">16<pos:position pos:line="165" pos:column="19"/></literal></expr>;<pos:position pos:line="165" pos:column="20"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">endif<pos:position pos:line="166" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="168" pos:column="5">if<condition pos:line="168" pos:column="7">(<expr><name pos:line="168" pos:column="8">addrlen<pos:position pos:line="168" pos:column="15"/></name></expr>)<pos:position pos:line="168" pos:column="16"/></condition><then pos:line="168" pos:column="16"> <block pos:line="168" pos:column="17">{
      <for pos:line="169" pos:column="7">for<control pos:line="169" pos:column="10">(<init><expr><name pos:line="169" pos:column="11">i<pos:position pos:line="169" pos:column="12"/></name><operator pos:line="169" pos:column="12">=<pos:position pos:line="169" pos:column="13"/></operator><literal type="number" pos:line="169" pos:column="13">0<pos:position pos:line="169" pos:column="14"/></literal></expr>;<pos:position pos:line="169" pos:column="15"/></init> <condition pos:line="169" pos:column="16">;<pos:position pos:line="169" pos:column="17"/></condition> <incr><expr><name pos:line="169" pos:column="18">i<pos:position pos:line="169" pos:column="19"/></name><operator pos:line="169" pos:column="19">++<pos:position pos:line="169" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="169" pos:column="22"/></control> <block pos:line="169" pos:column="23">{
        <expr_stmt><expr><name pos:line="170" pos:column="9">certaddrlen<pos:position pos:line="170" pos:column="20"/></name> <operator pos:line="170" pos:column="21">=<pos:position pos:line="170" pos:column="22"/></operator> <sizeof pos:line="170" pos:column="23">sizeof<argument_list pos:line="170" pos:column="29">(<argument><expr><name pos:line="170" pos:column="30">certaddr<pos:position pos:line="170" pos:column="38"/></name></expr></argument>)<pos:position pos:line="170" pos:column="39"/></argument_list></sizeof></expr>;<pos:position pos:line="170" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="171" pos:column="9">ret<pos:position pos:line="171" pos:column="12"/></name> <operator pos:line="171" pos:column="13">=<pos:position pos:line="171" pos:column="14"/></operator> <call><name pos:line="171" pos:column="15">gnutls_x509_crt_get_subject_alt_name<pos:position pos:line="171" pos:column="51"/></name><argument_list pos:line="171" pos:column="51">(<argument><expr><name pos:line="171" pos:column="52">x509_cert<pos:position pos:line="171" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="63">i<pos:position pos:line="171" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="66">certaddr<pos:position pos:line="171" pos:column="74"/></name></expr></argument>,
                                                   <argument><expr><operator pos:line="172" pos:column="52">&amp;<pos:position pos:line="172" pos:column="57"/></operator><name pos:line="172" pos:column="53">certaddrlen<pos:position pos:line="172" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="66">NULL<pos:position pos:line="172" pos:column="70"/></name></expr></argument>)<pos:position pos:line="172" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="72"/></expr_stmt>
        <comment type="block" pos:line="173" pos:column="9">/* If this happens, it wasn't an IP address. */</comment>
        <if pos:line="174" pos:column="9">if<condition pos:line="174" pos:column="11">(<expr><name pos:line="174" pos:column="12">ret<pos:position pos:line="174" pos:column="15"/></name> <operator pos:line="174" pos:column="16">==<pos:position pos:line="174" pos:column="18"/></operator> <name pos:line="174" pos:column="19">GNUTLS_E_SHORT_MEMORY_BUFFER<pos:position pos:line="174" pos:column="47"/></name></expr>)<pos:position pos:line="174" pos:column="48"/></condition><then pos:line="174" pos:column="48">
          <block type="pseudo"><continue pos:line="175" pos:column="11">continue;<pos:position pos:line="175" pos:column="20"/></continue></block></then></if>
        <if pos:line="176" pos:column="9">if<condition pos:line="176" pos:column="11">(<expr><name pos:line="176" pos:column="12">ret<pos:position pos:line="176" pos:column="15"/></name> <operator pos:line="176" pos:column="16">&lt;<pos:position pos:line="176" pos:column="20"/></operator> <literal type="number" pos:line="176" pos:column="18">0<pos:position pos:line="176" pos:column="19"/></literal></expr>)<pos:position pos:line="176" pos:column="20"/></condition><then pos:line="176" pos:column="20">
          <block type="pseudo"><break pos:line="177" pos:column="11">break;<pos:position pos:line="177" pos:column="17"/></break></block></then></if>
        <if pos:line="178" pos:column="9">if<condition pos:line="178" pos:column="11">(<expr><name pos:line="178" pos:column="12">ret<pos:position pos:line="178" pos:column="15"/></name> <operator pos:line="178" pos:column="16">!=<pos:position pos:line="178" pos:column="18"/></operator> <name pos:line="178" pos:column="19">GNUTLS_SAN_IPADDRESS<pos:position pos:line="178" pos:column="39"/></name></expr>)<pos:position pos:line="178" pos:column="40"/></condition><then pos:line="178" pos:column="40">
          <block type="pseudo"><continue pos:line="179" pos:column="11">continue;<pos:position pos:line="179" pos:column="20"/></continue></block></then></if>
        <if pos:line="180" pos:column="9">if<condition pos:line="180" pos:column="11">(<expr><name pos:line="180" pos:column="12">certaddrlen<pos:position pos:line="180" pos:column="23"/></name> <operator pos:line="180" pos:column="24">==<pos:position pos:line="180" pos:column="26"/></operator> <name pos:line="180" pos:column="27">addrlen<pos:position pos:line="180" pos:column="34"/></name> <operator pos:line="180" pos:column="35">&amp;&amp;<pos:position pos:line="180" pos:column="45"/></operator> <operator pos:line="180" pos:column="38">!<pos:position pos:line="180" pos:column="39"/></operator><call><name pos:line="180" pos:column="39">memcmp<pos:position pos:line="180" pos:column="45"/></name><argument_list pos:line="180" pos:column="45">(<argument><expr><name pos:line="180" pos:column="46">addrbuf<pos:position pos:line="180" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="55">certaddr<pos:position pos:line="180" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="65">addrlen<pos:position pos:line="180" pos:column="72"/></name></expr></argument>)<pos:position pos:line="180" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="180" pos:column="74"/></condition><then pos:line="180" pos:column="74"> <block pos:line="180" pos:column="75">{
          <expr_stmt><expr><name pos:line="181" pos:column="11">rc<pos:position pos:line="181" pos:column="13"/></name> <operator pos:line="181" pos:column="14">=<pos:position pos:line="181" pos:column="15"/></operator> <literal type="number" pos:line="181" pos:column="16">1<pos:position pos:line="181" pos:column="17"/></literal></expr>;<pos:position pos:line="181" pos:column="18"/></expr_stmt>
          <break pos:line="182" pos:column="11">break;<pos:position pos:line="182" pos:column="17"/></break>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>
      }<pos:position pos:line="184" pos:column="8"/></block></for>
    }<pos:position pos:line="185" pos:column="6"/></block></then></if>
  }<pos:position pos:line="186" pos:column="4"/></block></then></if>
<cpp:endif pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">endif<pos:position pos:line="187" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="188" pos:column="3">if<condition pos:line="188" pos:column="5">(<expr><operator pos:line="188" pos:column="6">!<pos:position pos:line="188" pos:column="7"/></operator><name pos:line="188" pos:column="7">rc<pos:position pos:line="188" pos:column="9"/></name></expr>)<pos:position pos:line="188" pos:column="10"/></condition><then pos:line="188" pos:column="10"> <block pos:line="188" pos:column="11">{
    <if pos:line="189" pos:column="5">if<condition pos:line="189" pos:column="7">(<expr><name><name pos:line="189" pos:column="8">data<pos:position pos:line="189" pos:column="12"/></name><operator pos:line="189" pos:column="12">-&gt;<pos:position pos:line="189" pos:column="17"/></operator><name pos:line="189" pos:column="14">set<pos:position pos:line="189" pos:column="17"/></name><operator pos:line="189" pos:column="17">.<pos:position pos:line="189" pos:column="18"/></operator><name pos:line="189" pos:column="18">ssl<pos:position pos:line="189" pos:column="21"/></name><operator pos:line="189" pos:column="21">.<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="22">verifyhost<pos:position pos:line="189" pos:column="32"/></name></name></expr>)<pos:position pos:line="189" pos:column="33"/></condition><then pos:line="189" pos:column="33"> <block pos:line="189" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="190" pos:column="7">failf<pos:position pos:line="190" pos:column="12"/></name><argument_list pos:line="190" pos:column="12">(<argument><expr><name pos:line="190" pos:column="13">data<pos:position pos:line="190" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="19">"SSL: certificate subject name (%s) does not match "<pos:position pos:line="190" pos:column="71"/></literal>
            <literal type="string" pos:line="191" pos:column="13">"target host name '%s'"<pos:position pos:line="191" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="38">certbuf<pos:position pos:line="191" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="47">conn<pos:position pos:line="191" pos:column="51"/></name><operator pos:line="191" pos:column="51">-&gt;<pos:position pos:line="191" pos:column="56"/></operator><name pos:line="191" pos:column="53">host<pos:position pos:line="191" pos:column="57"/></name><operator pos:line="191" pos:column="57">.<pos:position pos:line="191" pos:column="58"/></operator><name pos:line="191" pos:column="58">dispname<pos:position pos:line="191" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="191" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="192" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="192" pos:column="29"/></name><argument_list pos:line="192" pos:column="29">(<argument><expr><name pos:line="192" pos:column="30">x509_cert<pos:position pos:line="192" pos:column="39"/></name></expr></argument>)<pos:position pos:line="192" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="41"/></expr_stmt>
      <return pos:line="193" pos:column="7">return <expr><name pos:line="193" pos:column="14">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="193" pos:column="44"/></name></expr>;<pos:position pos:line="193" pos:column="45"/></return>
    }<pos:position pos:line="194" pos:column="6"/></block></then>
    <else pos:line="195" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="196" pos:column="7">infof<pos:position pos:line="196" pos:column="12"/></name><argument_list pos:line="196" pos:column="12">(<argument><expr><name pos:line="196" pos:column="13">data<pos:position pos:line="196" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="19">"\t common name: %s (does not match '%s')\n"<pos:position pos:line="196" pos:column="63"/></literal></expr></argument>,
            <argument><expr><name pos:line="197" pos:column="13">certbuf<pos:position pos:line="197" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="22">conn<pos:position pos:line="197" pos:column="26"/></name><operator pos:line="197" pos:column="26">-&gt;<pos:position pos:line="197" pos:column="31"/></operator><name pos:line="197" pos:column="28">host<pos:position pos:line="197" pos:column="32"/></name><operator pos:line="197" pos:column="32">.<pos:position pos:line="197" pos:column="33"/></operator><name pos:line="197" pos:column="33">dispname<pos:position pos:line="197" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="43"/></expr_stmt></block></else></if>
  }<pos:position pos:line="198" pos:column="4"/></block></then>
  <else pos:line="199" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="5">infof<pos:position pos:line="200" pos:column="10"/></name><argument_list pos:line="200" pos:column="10">(<argument><expr><name pos:line="200" pos:column="11">data<pos:position pos:line="200" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="17">"\t common name: %s (matched)\n"<pos:position pos:line="200" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="200" pos:column="51">certbuf<pos:position pos:line="200" pos:column="58"/></name></expr></argument>)<pos:position pos:line="200" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="60"/></expr_stmt></block></else></if>

  <comment type="block" pos:line="202" pos:column="3">/* Check for time-based validity */</comment>
  <expr_stmt><expr><name pos:line="203" pos:column="3">certclock<pos:position pos:line="203" pos:column="12"/></name> <operator pos:line="203" pos:column="13">=<pos:position pos:line="203" pos:column="14"/></operator> <call><name pos:line="203" pos:column="15">gnutls_x509_crt_get_expiration_time<pos:position pos:line="203" pos:column="50"/></name><argument_list pos:line="203" pos:column="50">(<argument><expr><name pos:line="203" pos:column="51">x509_cert<pos:position pos:line="203" pos:column="60"/></name></expr></argument>)<pos:position pos:line="203" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="62"/></expr_stmt>

  <if pos:line="205" pos:column="3">if<condition pos:line="205" pos:column="5">(<expr><name pos:line="205" pos:column="6">certclock<pos:position pos:line="205" pos:column="15"/></name> <operator pos:line="205" pos:column="16">==<pos:position pos:line="205" pos:column="18"/></operator> <operator pos:line="205" pos:column="19">(<pos:position pos:line="205" pos:column="20"/></operator><name pos:line="205" pos:column="20">time_t<pos:position pos:line="205" pos:column="26"/></name><operator pos:line="205" pos:column="26">)<pos:position pos:line="205" pos:column="27"/></operator><operator pos:line="205" pos:column="27">-<pos:position pos:line="205" pos:column="28"/></operator><literal type="number" pos:line="205" pos:column="28">1<pos:position pos:line="205" pos:column="29"/></literal></expr>)<pos:position pos:line="205" pos:column="30"/></condition><then pos:line="205" pos:column="30"> <block pos:line="205" pos:column="31">{
    <if pos:line="206" pos:column="5">if<condition pos:line="206" pos:column="7">(<expr><name><name pos:line="206" pos:column="8">data<pos:position pos:line="206" pos:column="12"/></name><operator pos:line="206" pos:column="12">-&gt;<pos:position pos:line="206" pos:column="17"/></operator><name pos:line="206" pos:column="14">set<pos:position pos:line="206" pos:column="17"/></name><operator pos:line="206" pos:column="17">.<pos:position pos:line="206" pos:column="18"/></operator><name pos:line="206" pos:column="18">ssl<pos:position pos:line="206" pos:column="21"/></name><operator pos:line="206" pos:column="21">.<pos:position pos:line="206" pos:column="22"/></operator><name pos:line="206" pos:column="22">verifypeer<pos:position pos:line="206" pos:column="32"/></name></name></expr>)<pos:position pos:line="206" pos:column="33"/></condition><then pos:line="206" pos:column="33"> <block pos:line="206" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="207" pos:column="7">failf<pos:position pos:line="207" pos:column="12"/></name><argument_list pos:line="207" pos:column="12">(<argument><expr><name pos:line="207" pos:column="13">data<pos:position pos:line="207" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="19">"server cert expiration date verify failed"<pos:position pos:line="207" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="208" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="208" pos:column="29"/></name><argument_list pos:line="208" pos:column="29">(<argument><expr><name pos:line="208" pos:column="30">x509_cert<pos:position pos:line="208" pos:column="39"/></name></expr></argument>)<pos:position pos:line="208" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="41"/></expr_stmt>
      <return pos:line="209" pos:column="7">return <expr><name pos:line="209" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="209" pos:column="37"/></name></expr>;<pos:position pos:line="209" pos:column="38"/></return>
    }<pos:position pos:line="210" pos:column="6"/></block></then>
    <else pos:line="211" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="212" pos:column="7">infof<pos:position pos:line="212" pos:column="12"/></name><argument_list pos:line="212" pos:column="12">(<argument><expr><name pos:line="212" pos:column="13">data<pos:position pos:line="212" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="19">"\t server certificate expiration date verify FAILED\n"<pos:position pos:line="212" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="76"/></expr_stmt></block></else></if>
  }<pos:position pos:line="213" pos:column="4"/></block></then>
  <else pos:line="214" pos:column="3">else <block pos:line="214" pos:column="8">{
    <if pos:line="215" pos:column="5">if<condition pos:line="215" pos:column="7">(<expr><name pos:line="215" pos:column="8">certclock<pos:position pos:line="215" pos:column="17"/></name> <operator pos:line="215" pos:column="18">&lt;<pos:position pos:line="215" pos:column="22"/></operator> <call><name pos:line="215" pos:column="20">time<pos:position pos:line="215" pos:column="24"/></name><argument_list pos:line="215" pos:column="24">(<argument><expr><name pos:line="215" pos:column="25">NULL<pos:position pos:line="215" pos:column="29"/></name></expr></argument>)<pos:position pos:line="215" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="31"/></condition><then pos:line="215" pos:column="31"> <block pos:line="215" pos:column="32">{
      <if pos:line="216" pos:column="7">if<condition pos:line="216" pos:column="9">(<expr><name><name pos:line="216" pos:column="10">data<pos:position pos:line="216" pos:column="14"/></name><operator pos:line="216" pos:column="14">-&gt;<pos:position pos:line="216" pos:column="19"/></operator><name pos:line="216" pos:column="16">set<pos:position pos:line="216" pos:column="19"/></name><operator pos:line="216" pos:column="19">.<pos:position pos:line="216" pos:column="20"/></operator><name pos:line="216" pos:column="20">ssl<pos:position pos:line="216" pos:column="23"/></name><operator pos:line="216" pos:column="23">.<pos:position pos:line="216" pos:column="24"/></operator><name pos:line="216" pos:column="24">verifypeer<pos:position pos:line="216" pos:column="34"/></name></name></expr>)<pos:position pos:line="216" pos:column="35"/></condition><then pos:line="216" pos:column="35"> <block pos:line="216" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">failf<pos:position pos:line="217" pos:column="14"/></name><argument_list pos:line="217" pos:column="14">(<argument><expr><name pos:line="217" pos:column="15">data<pos:position pos:line="217" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="21">"server certificate expiration date has passed."<pos:position pos:line="217" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="218" pos:column="9">gnutls_x509_crt_deinit<pos:position pos:line="218" pos:column="31"/></name><argument_list pos:line="218" pos:column="31">(<argument><expr><name pos:line="218" pos:column="32">x509_cert<pos:position pos:line="218" pos:column="41"/></name></expr></argument>)<pos:position pos:line="218" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="43"/></expr_stmt>
        <return pos:line="219" pos:column="9">return <expr><name pos:line="219" pos:column="16">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="219" pos:column="46"/></name></expr>;<pos:position pos:line="219" pos:column="47"/></return>
      }<pos:position pos:line="220" pos:column="8"/></block></then>
      <else pos:line="221" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="9">infof<pos:position pos:line="222" pos:column="14"/></name><argument_list pos:line="222" pos:column="14">(<argument><expr><name pos:line="222" pos:column="15">data<pos:position pos:line="222" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="21">"\t server certificate expiration date FAILED\n"<pos:position pos:line="222" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="71"/></expr_stmt></block></else></if>
    }<pos:position pos:line="223" pos:column="6"/></block></then>
    <else pos:line="224" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="225" pos:column="7">infof<pos:position pos:line="225" pos:column="12"/></name><argument_list pos:line="225" pos:column="12">(<argument><expr><name pos:line="225" pos:column="13">data<pos:position pos:line="225" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="225" pos:column="19">"\t server certificate expiration date OK\n"<pos:position pos:line="225" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="65"/></expr_stmt></block></else></if>
  }<pos:position pos:line="226" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="228" pos:column="3">certclock<pos:position pos:line="228" pos:column="12"/></name> <operator pos:line="228" pos:column="13">=<pos:position pos:line="228" pos:column="14"/></operator> <call><name pos:line="228" pos:column="15">gnutls_x509_crt_get_activation_time<pos:position pos:line="228" pos:column="50"/></name><argument_list pos:line="228" pos:column="50">(<argument><expr><name pos:line="228" pos:column="51">x509_cert<pos:position pos:line="228" pos:column="60"/></name></expr></argument>)<pos:position pos:line="228" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="62"/></expr_stmt>

  <if pos:line="230" pos:column="3">if<condition pos:line="230" pos:column="5">(<expr><name pos:line="230" pos:column="6">certclock<pos:position pos:line="230" pos:column="15"/></name> <operator pos:line="230" pos:column="16">==<pos:position pos:line="230" pos:column="18"/></operator> <operator pos:line="230" pos:column="19">(<pos:position pos:line="230" pos:column="20"/></operator><name pos:line="230" pos:column="20">time_t<pos:position pos:line="230" pos:column="26"/></name><operator pos:line="230" pos:column="26">)<pos:position pos:line="230" pos:column="27"/></operator><operator pos:line="230" pos:column="27">-<pos:position pos:line="230" pos:column="28"/></operator><literal type="number" pos:line="230" pos:column="28">1<pos:position pos:line="230" pos:column="29"/></literal></expr>)<pos:position pos:line="230" pos:column="30"/></condition><then pos:line="230" pos:column="30"> <block pos:line="230" pos:column="31">{
    <if pos:line="231" pos:column="5">if<condition pos:line="231" pos:column="7">(<expr><name><name pos:line="231" pos:column="8">data<pos:position pos:line="231" pos:column="12"/></name><operator pos:line="231" pos:column="12">-&gt;<pos:position pos:line="231" pos:column="17"/></operator><name pos:line="231" pos:column="14">set<pos:position pos:line="231" pos:column="17"/></name><operator pos:line="231" pos:column="17">.<pos:position pos:line="231" pos:column="18"/></operator><name pos:line="231" pos:column="18">ssl<pos:position pos:line="231" pos:column="21"/></name><operator pos:line="231" pos:column="21">.<pos:position pos:line="231" pos:column="22"/></operator><name pos:line="231" pos:column="22">verifypeer<pos:position pos:line="231" pos:column="32"/></name></name></expr>)<pos:position pos:line="231" pos:column="33"/></condition><then pos:line="231" pos:column="33"> <block pos:line="231" pos:column="34">{
      <expr_stmt><expr><call><name pos:line="232" pos:column="7">failf<pos:position pos:line="232" pos:column="12"/></name><argument_list pos:line="232" pos:column="12">(<argument><expr><name pos:line="232" pos:column="13">data<pos:position pos:line="232" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="19">"server cert activation date verify failed"<pos:position pos:line="232" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="233" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="233" pos:column="29"/></name><argument_list pos:line="233" pos:column="29">(<argument><expr><name pos:line="233" pos:column="30">x509_cert<pos:position pos:line="233" pos:column="39"/></name></expr></argument>)<pos:position pos:line="233" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="41"/></expr_stmt>
      <return pos:line="234" pos:column="7">return <expr><name pos:line="234" pos:column="14">CURLE_SSL_CONNECT_ERROR<pos:position pos:line="234" pos:column="37"/></name></expr>;<pos:position pos:line="234" pos:column="38"/></return>
    }<pos:position pos:line="235" pos:column="6"/></block></then>
    <else pos:line="236" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="237" pos:column="7">infof<pos:position pos:line="237" pos:column="12"/></name><argument_list pos:line="237" pos:column="12">(<argument><expr><name pos:line="237" pos:column="13">data<pos:position pos:line="237" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="19">"\t server certificate activation date verify FAILED\n"<pos:position pos:line="237" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="76"/></expr_stmt></block></else></if>
  }<pos:position pos:line="238" pos:column="4"/></block></then>
  <else pos:line="239" pos:column="3">else <block pos:line="239" pos:column="8">{
    <if pos:line="240" pos:column="5">if<condition pos:line="240" pos:column="7">(<expr><name pos:line="240" pos:column="8">certclock<pos:position pos:line="240" pos:column="17"/></name> <operator pos:line="240" pos:column="18">&gt;<pos:position pos:line="240" pos:column="22"/></operator> <call><name pos:line="240" pos:column="20">time<pos:position pos:line="240" pos:column="24"/></name><argument_list pos:line="240" pos:column="24">(<argument><expr><name pos:line="240" pos:column="25">NULL<pos:position pos:line="240" pos:column="29"/></name></expr></argument>)<pos:position pos:line="240" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="240" pos:column="31"/></condition><then pos:line="240" pos:column="31"> <block pos:line="240" pos:column="32">{
      <if pos:line="241" pos:column="7">if<condition pos:line="241" pos:column="9">(<expr><name><name pos:line="241" pos:column="10">data<pos:position pos:line="241" pos:column="14"/></name><operator pos:line="241" pos:column="14">-&gt;<pos:position pos:line="241" pos:column="19"/></operator><name pos:line="241" pos:column="16">set<pos:position pos:line="241" pos:column="19"/></name><operator pos:line="241" pos:column="19">.<pos:position pos:line="241" pos:column="20"/></operator><name pos:line="241" pos:column="20">ssl<pos:position pos:line="241" pos:column="23"/></name><operator pos:line="241" pos:column="23">.<pos:position pos:line="241" pos:column="24"/></operator><name pos:line="241" pos:column="24">verifypeer<pos:position pos:line="241" pos:column="34"/></name></name></expr>)<pos:position pos:line="241" pos:column="35"/></condition><then pos:line="241" pos:column="35"> <block pos:line="241" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="242" pos:column="9">failf<pos:position pos:line="242" pos:column="14"/></name><argument_list pos:line="242" pos:column="14">(<argument><expr><name pos:line="242" pos:column="15">data<pos:position pos:line="242" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="21">"server certificate not activated yet."<pos:position pos:line="242" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="242" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">gnutls_x509_crt_deinit<pos:position pos:line="243" pos:column="31"/></name><argument_list pos:line="243" pos:column="31">(<argument><expr><name pos:line="243" pos:column="32">x509_cert<pos:position pos:line="243" pos:column="41"/></name></expr></argument>)<pos:position pos:line="243" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="43"/></expr_stmt>
        <return pos:line="244" pos:column="9">return <expr><name pos:line="244" pos:column="16">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="244" pos:column="46"/></name></expr>;<pos:position pos:line="244" pos:column="47"/></return>
      }<pos:position pos:line="245" pos:column="8"/></block></then>
      <else pos:line="246" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="247" pos:column="9">infof<pos:position pos:line="247" pos:column="14"/></name><argument_list pos:line="247" pos:column="14">(<argument><expr><name pos:line="247" pos:column="15">data<pos:position pos:line="247" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="21">"\t server certificate activation date FAILED\n"<pos:position pos:line="247" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="71"/></expr_stmt></block></else></if>
    }<pos:position pos:line="248" pos:column="6"/></block></then>
    <else pos:line="249" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="7">infof<pos:position pos:line="250" pos:column="12"/></name><argument_list pos:line="250" pos:column="12">(<argument><expr><name pos:line="250" pos:column="13">data<pos:position pos:line="250" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="19">"\t server certificate activation date OK\n"<pos:position pos:line="250" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="65"/></expr_stmt></block></else></if>
  }<pos:position pos:line="251" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name pos:line="253" pos:column="3">ptr<pos:position pos:line="253" pos:column="6"/></name> <operator pos:line="253" pos:column="7">=<pos:position pos:line="253" pos:column="8"/></operator> <name><name pos:line="253" pos:column="9">data<pos:position pos:line="253" pos:column="13"/></name><operator pos:line="253" pos:column="13">-&gt;<pos:position pos:line="253" pos:column="18"/></operator><name pos:line="253" pos:column="15">set<pos:position pos:line="253" pos:column="18"/></name><operator pos:line="253" pos:column="18">.<pos:position pos:line="253" pos:column="19"/></operator><name pos:line="253" pos:column="19">str<pos:position pos:line="253" pos:column="22"/></name><index pos:line="253" pos:column="22">[<expr><name pos:line="253" pos:column="23">STRING_SSL_PINNEDPUBLICKEY<pos:position pos:line="253" pos:column="49"/></name></expr>]<pos:position pos:line="253" pos:column="50"/></index></name></expr>;<pos:position pos:line="253" pos:column="51"/></expr_stmt>
  <if pos:line="254" pos:column="3">if<condition pos:line="254" pos:column="5">(<expr><name pos:line="254" pos:column="6">ptr<pos:position pos:line="254" pos:column="9"/></name></expr>)<pos:position pos:line="254" pos:column="10"/></condition><then pos:line="254" pos:column="10"> <block pos:line="254" pos:column="11">{
    <expr_stmt><expr><name pos:line="255" pos:column="5">result<pos:position pos:line="255" pos:column="11"/></name> <operator pos:line="255" pos:column="12">=<pos:position pos:line="255" pos:column="13"/></operator> <call><name pos:line="255" pos:column="14">pkp_pin_peer_pubkey<pos:position pos:line="255" pos:column="33"/></name><argument_list pos:line="255" pos:column="33">(<argument><expr><name pos:line="255" pos:column="34">x509_cert<pos:position pos:line="255" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="45">ptr<pos:position pos:line="255" pos:column="48"/></name></expr></argument>)<pos:position pos:line="255" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="50"/></expr_stmt>
    <if pos:line="256" pos:column="5">if<condition pos:line="256" pos:column="7">(<expr><name pos:line="256" pos:column="8">result<pos:position pos:line="256" pos:column="14"/></name> <operator pos:line="256" pos:column="15">!=<pos:position pos:line="256" pos:column="17"/></operator> <name pos:line="256" pos:column="18">CURLE_OK<pos:position pos:line="256" pos:column="26"/></name></expr>)<pos:position pos:line="256" pos:column="27"/></condition><then pos:line="256" pos:column="27"> <block pos:line="256" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="257" pos:column="7">failf<pos:position pos:line="257" pos:column="12"/></name><argument_list pos:line="257" pos:column="12">(<argument><expr><name pos:line="257" pos:column="13">data<pos:position pos:line="257" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="19">"SSL: public key does not match pinned public key!"<pos:position pos:line="257" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="258" pos:column="7">gnutls_x509_crt_deinit<pos:position pos:line="258" pos:column="29"/></name><argument_list pos:line="258" pos:column="29">(<argument><expr><name pos:line="258" pos:column="30">x509_cert<pos:position pos:line="258" pos:column="39"/></name></expr></argument>)<pos:position pos:line="258" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="41"/></expr_stmt>
      <return pos:line="259" pos:column="7">return <expr><name pos:line="259" pos:column="14">result<pos:position pos:line="259" pos:column="20"/></name></expr>;<pos:position pos:line="259" pos:column="21"/></return>
    }<pos:position pos:line="260" pos:column="6"/></block></then></if>
  }<pos:position pos:line="261" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="263" pos:column="3">/* Show:

  - ciphers used
  - subject
  - start date
  - expire date
  - common name
  - issuer

  */</comment>

  <comment type="block" pos:line="274" pos:column="3">/* public key algorithm's parameters */</comment>
  <expr_stmt><expr><name pos:line="275" pos:column="3">algo<pos:position pos:line="275" pos:column="7"/></name> <operator pos:line="275" pos:column="8">=<pos:position pos:line="275" pos:column="9"/></operator> <call><name pos:line="275" pos:column="10">gnutls_x509_crt_get_pk_algorithm<pos:position pos:line="275" pos:column="42"/></name><argument_list pos:line="275" pos:column="42">(<argument><expr><name pos:line="275" pos:column="43">x509_cert<pos:position pos:line="275" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="275" pos:column="54">&amp;<pos:position pos:line="275" pos:column="59"/></operator><name pos:line="275" pos:column="55">bits<pos:position pos:line="275" pos:column="59"/></name></expr></argument>)<pos:position pos:line="275" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="276" pos:column="3">infof<pos:position pos:line="276" pos:column="8"/></name><argument_list pos:line="276" pos:column="8">(<argument><expr><name pos:line="276" pos:column="9">data<pos:position pos:line="276" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="15">"\t certificate public key: %s\n"<pos:position pos:line="276" pos:column="48"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="277" pos:column="9">gnutls_pk_algorithm_get_name<pos:position pos:line="277" pos:column="37"/></name><argument_list pos:line="277" pos:column="37">(<argument><expr><name pos:line="277" pos:column="38">algo<pos:position pos:line="277" pos:column="42"/></name></expr></argument>)<pos:position pos:line="277" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="277" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="279" pos:column="3">/* version of the X.509 certificate. */</comment>
  <expr_stmt><expr><call><name pos:line="280" pos:column="3">infof<pos:position pos:line="280" pos:column="8"/></name><argument_list pos:line="280" pos:column="8">(<argument><expr><name pos:line="280" pos:column="9">data<pos:position pos:line="280" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="15">"\t certificate version: #%d\n"<pos:position pos:line="280" pos:column="46"/></literal></expr></argument>,
        <argument><expr><call><name pos:line="281" pos:column="9">gnutls_x509_crt_get_version<pos:position pos:line="281" pos:column="36"/></name><argument_list pos:line="281" pos:column="36">(<argument><expr><name pos:line="281" pos:column="37">x509_cert<pos:position pos:line="281" pos:column="46"/></name></expr></argument>)<pos:position pos:line="281" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="281" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="49"/></expr_stmt>


  <expr_stmt><expr><name pos:line="284" pos:column="3">size<pos:position pos:line="284" pos:column="7"/></name> <operator pos:line="284" pos:column="8">=<pos:position pos:line="284" pos:column="9"/></operator> <sizeof pos:line="284" pos:column="10">sizeof<argument_list pos:line="284" pos:column="16">(<argument><expr><name pos:line="284" pos:column="17">certbuf<pos:position pos:line="284" pos:column="24"/></name></expr></argument>)<pos:position pos:line="284" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="284" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="285" pos:column="3">gnutls_x509_crt_get_dn<pos:position pos:line="285" pos:column="25"/></name><argument_list pos:line="285" pos:column="25">(<argument><expr><name pos:line="285" pos:column="26">x509_cert<pos:position pos:line="285" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="37">certbuf<pos:position pos:line="285" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="285" pos:column="46">&amp;<pos:position pos:line="285" pos:column="51"/></operator><name pos:line="285" pos:column="47">size<pos:position pos:line="285" pos:column="51"/></name></expr></argument>)<pos:position pos:line="285" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="286" pos:column="3">infof<pos:position pos:line="286" pos:column="8"/></name><argument_list pos:line="286" pos:column="8">(<argument><expr><name pos:line="286" pos:column="9">data<pos:position pos:line="286" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="15">"\t subject: %s\n"<pos:position pos:line="286" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="286" pos:column="35">certbuf<pos:position pos:line="286" pos:column="42"/></name></expr></argument>)<pos:position pos:line="286" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="288" pos:column="3">certclock<pos:position pos:line="288" pos:column="12"/></name> <operator pos:line="288" pos:column="13">=<pos:position pos:line="288" pos:column="14"/></operator> <call><name pos:line="288" pos:column="15">gnutls_x509_crt_get_activation_time<pos:position pos:line="288" pos:column="50"/></name><argument_list pos:line="288" pos:column="50">(<argument><expr><name pos:line="288" pos:column="51">x509_cert<pos:position pos:line="288" pos:column="60"/></name></expr></argument>)<pos:position pos:line="288" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="289" pos:column="3">showtime<pos:position pos:line="289" pos:column="11"/></name><argument_list pos:line="289" pos:column="11">(<argument><expr><name pos:line="289" pos:column="12">data<pos:position pos:line="289" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="18">"start date"<pos:position pos:line="289" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="289" pos:column="32">certclock<pos:position pos:line="289" pos:column="41"/></name></expr></argument>)<pos:position pos:line="289" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name pos:line="291" pos:column="3">certclock<pos:position pos:line="291" pos:column="12"/></name> <operator pos:line="291" pos:column="13">=<pos:position pos:line="291" pos:column="14"/></operator> <call><name pos:line="291" pos:column="15">gnutls_x509_crt_get_expiration_time<pos:position pos:line="291" pos:column="50"/></name><argument_list pos:line="291" pos:column="50">(<argument><expr><name pos:line="291" pos:column="51">x509_cert<pos:position pos:line="291" pos:column="60"/></name></expr></argument>)<pos:position pos:line="291" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="292" pos:column="3">showtime<pos:position pos:line="292" pos:column="11"/></name><argument_list pos:line="292" pos:column="11">(<argument><expr><name pos:line="292" pos:column="12">data<pos:position pos:line="292" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="18">"expire date"<pos:position pos:line="292" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="292" pos:column="33">certclock<pos:position pos:line="292" pos:column="42"/></name></expr></argument>)<pos:position pos:line="292" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="294" pos:column="3">size<pos:position pos:line="294" pos:column="7"/></name> <operator pos:line="294" pos:column="8">=<pos:position pos:line="294" pos:column="9"/></operator> <sizeof pos:line="294" pos:column="10">sizeof<argument_list pos:line="294" pos:column="16">(<argument><expr><name pos:line="294" pos:column="17">certbuf<pos:position pos:line="294" pos:column="24"/></name></expr></argument>)<pos:position pos:line="294" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="294" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="295" pos:column="3">gnutls_x509_crt_get_issuer_dn<pos:position pos:line="295" pos:column="32"/></name><argument_list pos:line="295" pos:column="32">(<argument><expr><name pos:line="295" pos:column="33">x509_cert<pos:position pos:line="295" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="44">certbuf<pos:position pos:line="295" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="295" pos:column="53">&amp;<pos:position pos:line="295" pos:column="58"/></operator><name pos:line="295" pos:column="54">size<pos:position pos:line="295" pos:column="58"/></name></expr></argument>)<pos:position pos:line="295" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="296" pos:column="3">infof<pos:position pos:line="296" pos:column="8"/></name><argument_list pos:line="296" pos:column="8">(<argument><expr><name pos:line="296" pos:column="9">data<pos:position pos:line="296" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="296" pos:column="15">"\t issuer: %s\n"<pos:position pos:line="296" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="296" pos:column="34">certbuf<pos:position pos:line="296" pos:column="41"/></name></expr></argument>)<pos:position pos:line="296" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="298" pos:column="3">gnutls_x509_crt_deinit<pos:position pos:line="298" pos:column="25"/></name><argument_list pos:line="298" pos:column="25">(<argument><expr><name pos:line="298" pos:column="26">x509_cert<pos:position pos:line="298" pos:column="35"/></name></expr></argument>)<pos:position pos:line="298" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="300" pos:column="3">/* compression algorithm (if any) */</comment>
  <expr_stmt><expr><name pos:line="301" pos:column="3">ptr<pos:position pos:line="301" pos:column="6"/></name> <operator pos:line="301" pos:column="7">=<pos:position pos:line="301" pos:column="8"/></operator> <call><name pos:line="301" pos:column="9">gnutls_compression_get_name<pos:position pos:line="301" pos:column="36"/></name><argument_list pos:line="301" pos:column="36">(<argument><expr><call><name pos:line="301" pos:column="37">gnutls_compression_get<pos:position pos:line="301" pos:column="59"/></name><argument_list pos:line="301" pos:column="59">(<argument><expr><name pos:line="301" pos:column="60">session<pos:position pos:line="301" pos:column="67"/></name></expr></argument>)<pos:position pos:line="301" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="301" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="70"/></expr_stmt>
  <comment type="block" pos:line="302" pos:column="3">/* the *_get_name() says "NULL" if GNUTLS_COMP_NULL is returned */</comment>
  <expr_stmt><expr><call><name pos:line="303" pos:column="3">infof<pos:position pos:line="303" pos:column="8"/></name><argument_list pos:line="303" pos:column="8">(<argument><expr><name pos:line="303" pos:column="9">data<pos:position pos:line="303" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="303" pos:column="15">"\t compression: %s\n"<pos:position pos:line="303" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="303" pos:column="39">ptr<pos:position pos:line="303" pos:column="42"/></name></expr></argument>)<pos:position pos:line="303" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="44"/></expr_stmt>

  <comment type="block" pos:line="305" pos:column="3">/* the name of the cipher used. ie 3DES. */</comment>
  <expr_stmt><expr><name pos:line="306" pos:column="3">ptr<pos:position pos:line="306" pos:column="6"/></name> <operator pos:line="306" pos:column="7">=<pos:position pos:line="306" pos:column="8"/></operator> <call><name pos:line="306" pos:column="9">gnutls_cipher_get_name<pos:position pos:line="306" pos:column="31"/></name><argument_list pos:line="306" pos:column="31">(<argument><expr><call><name pos:line="306" pos:column="32">gnutls_cipher_get<pos:position pos:line="306" pos:column="49"/></name><argument_list pos:line="306" pos:column="49">(<argument><expr><name pos:line="306" pos:column="50">session<pos:position pos:line="306" pos:column="57"/></name></expr></argument>)<pos:position pos:line="306" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="306" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="307" pos:column="3">infof<pos:position pos:line="307" pos:column="8"/></name><argument_list pos:line="307" pos:column="8">(<argument><expr><name pos:line="307" pos:column="9">data<pos:position pos:line="307" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="15">"\t cipher: %s\n"<pos:position pos:line="307" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="307" pos:column="34">ptr<pos:position pos:line="307" pos:column="37"/></name></expr></argument>)<pos:position pos:line="307" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="39"/></expr_stmt>

  <comment type="block" pos:line="309" pos:column="3">/* the MAC algorithms name. ie SHA1 */</comment>
  <expr_stmt><expr><name pos:line="310" pos:column="3">ptr<pos:position pos:line="310" pos:column="6"/></name> <operator pos:line="310" pos:column="7">=<pos:position pos:line="310" pos:column="8"/></operator> <call><name pos:line="310" pos:column="9">gnutls_mac_get_name<pos:position pos:line="310" pos:column="28"/></name><argument_list pos:line="310" pos:column="28">(<argument><expr><call><name pos:line="310" pos:column="29">gnutls_mac_get<pos:position pos:line="310" pos:column="43"/></name><argument_list pos:line="310" pos:column="43">(<argument><expr><name pos:line="310" pos:column="44">session<pos:position pos:line="310" pos:column="51"/></name></expr></argument>)<pos:position pos:line="310" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="310" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="311" pos:column="3">infof<pos:position pos:line="311" pos:column="8"/></name><argument_list pos:line="311" pos:column="8">(<argument><expr><name pos:line="311" pos:column="9">data<pos:position pos:line="311" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="311" pos:column="15">"\t MAC: %s\n"<pos:position pos:line="311" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="311" pos:column="31">ptr<pos:position pos:line="311" pos:column="34"/></name></expr></argument>)<pos:position pos:line="311" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="36"/></expr_stmt>

<cpp:ifdef pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">ifdef<pos:position pos:line="313" pos:column="7"/></cpp:directive> <name pos:line="313" pos:column="8">HAS_ALPN<pos:position pos:line="313" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="314" pos:column="3">if<condition pos:line="314" pos:column="5">(<expr><name><name pos:line="314" pos:column="6">data<pos:position pos:line="314" pos:column="10"/></name><operator pos:line="314" pos:column="10">-&gt;<pos:position pos:line="314" pos:column="15"/></operator><name pos:line="314" pos:column="12">set<pos:position pos:line="314" pos:column="15"/></name><operator pos:line="314" pos:column="15">.<pos:position pos:line="314" pos:column="16"/></operator><name pos:line="314" pos:column="16">ssl_enable_alpn<pos:position pos:line="314" pos:column="31"/></name></name></expr>)<pos:position pos:line="314" pos:column="32"/></condition><then pos:line="314" pos:column="32"> <block pos:line="314" pos:column="33">{
    <expr_stmt><expr><name pos:line="315" pos:column="5">rc<pos:position pos:line="315" pos:column="7"/></name> <operator pos:line="315" pos:column="8">=<pos:position pos:line="315" pos:column="9"/></operator> <call><name pos:line="315" pos:column="10">gnutls_alpn_get_selected_protocol<pos:position pos:line="315" pos:column="43"/></name><argument_list pos:line="315" pos:column="43">(<argument><expr><name pos:line="315" pos:column="44">session<pos:position pos:line="315" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="315" pos:column="53">&amp;<pos:position pos:line="315" pos:column="58"/></operator><name pos:line="315" pos:column="54">proto<pos:position pos:line="315" pos:column="59"/></name></expr></argument>)<pos:position pos:line="315" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="61"/></expr_stmt>
    <if pos:line="316" pos:column="5">if<condition pos:line="316" pos:column="7">(<expr><name pos:line="316" pos:column="8">rc<pos:position pos:line="316" pos:column="10"/></name> <operator pos:line="316" pos:column="11">==<pos:position pos:line="316" pos:column="13"/></operator> <literal type="number" pos:line="316" pos:column="14">0<pos:position pos:line="316" pos:column="15"/></literal></expr>)<pos:position pos:line="316" pos:column="16"/></condition><then pos:line="316" pos:column="16"> <block pos:line="316" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="317" pos:column="7">infof<pos:position pos:line="317" pos:column="12"/></name><argument_list pos:line="317" pos:column="12">(<argument><expr><name pos:line="317" pos:column="13">data<pos:position pos:line="317" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="19">"ALPN, server accepted to use %.*s\n"<pos:position pos:line="317" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="317" pos:column="58">proto<pos:position pos:line="317" pos:column="63"/></name><operator pos:line="317" pos:column="63">.<pos:position pos:line="317" pos:column="64"/></operator><name pos:line="317" pos:column="64">size<pos:position pos:line="317" pos:column="68"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="318" pos:column="11">proto<pos:position pos:line="318" pos:column="16"/></name><operator pos:line="318" pos:column="16">.<pos:position pos:line="318" pos:column="17"/></operator><name pos:line="318" pos:column="17">data<pos:position pos:line="318" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="318" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="23"/></expr_stmt>

      <if pos:line="320" pos:column="7">if<condition pos:line="320" pos:column="9">(<expr><name><name pos:line="320" pos:column="10">proto<pos:position pos:line="320" pos:column="15"/></name><operator pos:line="320" pos:column="15">.<pos:position pos:line="320" pos:column="16"/></operator><name pos:line="320" pos:column="16">size<pos:position pos:line="320" pos:column="20"/></name></name> <operator pos:line="320" pos:column="21">==<pos:position pos:line="320" pos:column="23"/></operator> <name pos:line="320" pos:column="24">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="320" pos:column="52"/></name> <operator pos:line="320" pos:column="53">&amp;&amp;<pos:position pos:line="320" pos:column="63"/></operator>
        <call><name pos:line="321" pos:column="9">memcmp<pos:position pos:line="321" pos:column="15"/></name><argument_list pos:line="321" pos:column="15">(<argument><expr><name pos:line="321" pos:column="16">NGHTTP2_PROTO_VERSION_ID<pos:position pos:line="321" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="321" pos:column="42">proto<pos:position pos:line="321" pos:column="47"/></name><operator pos:line="321" pos:column="47">.<pos:position pos:line="321" pos:column="48"/></operator><name pos:line="321" pos:column="48">data<pos:position pos:line="321" pos:column="52"/></name></name></expr></argument>,
        <argument><expr><name pos:line="322" pos:column="9">NGHTTP2_PROTO_VERSION_ID_LEN<pos:position pos:line="322" pos:column="37"/></name></expr></argument>)<pos:position pos:line="322" pos:column="38"/></argument_list></call> <operator pos:line="322" pos:column="39">==<pos:position pos:line="322" pos:column="41"/></operator> <literal type="number" pos:line="322" pos:column="42">0<pos:position pos:line="322" pos:column="43"/></literal></expr>)<pos:position pos:line="322" pos:column="44"/></condition><then pos:line="322" pos:column="44"> <block pos:line="322" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="323" pos:column="9">conn<pos:position pos:line="323" pos:column="13"/></name><operator pos:line="323" pos:column="13">-&gt;<pos:position pos:line="323" pos:column="18"/></operator><name pos:line="323" pos:column="15">negnpn<pos:position pos:line="323" pos:column="21"/></name></name> <operator pos:line="323" pos:column="22">=<pos:position pos:line="323" pos:column="23"/></operator> <name pos:line="323" pos:column="24">NPN_HTTP2<pos:position pos:line="323" pos:column="33"/></name></expr>;<pos:position pos:line="323" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="324" pos:column="8"/></block></then>
      <elseif pos:line="325" pos:column="7">else <if pos:line="325" pos:column="12">if<condition pos:line="325" pos:column="14">(<expr><name><name pos:line="325" pos:column="15">proto<pos:position pos:line="325" pos:column="20"/></name><operator pos:line="325" pos:column="20">.<pos:position pos:line="325" pos:column="21"/></operator><name pos:line="325" pos:column="21">size<pos:position pos:line="325" pos:column="25"/></name></name> <operator pos:line="325" pos:column="26">==<pos:position pos:line="325" pos:column="28"/></operator> <name pos:line="325" pos:column="29">ALPN_HTTP_1_1_LENGTH<pos:position pos:line="325" pos:column="49"/></name> <operator pos:line="325" pos:column="50">&amp;&amp;<pos:position pos:line="325" pos:column="60"/></operator> <call><name pos:line="325" pos:column="53">memcmp<pos:position pos:line="325" pos:column="59"/></name><argument_list pos:line="325" pos:column="59">(<argument><expr><name pos:line="325" pos:column="60">ALPN_HTTP_1_1<pos:position pos:line="325" pos:column="73"/></name></expr></argument>,
          <argument><expr><name><name pos:line="326" pos:column="11">proto<pos:position pos:line="326" pos:column="16"/></name><operator pos:line="326" pos:column="16">.<pos:position pos:line="326" pos:column="17"/></operator><name pos:line="326" pos:column="17">data<pos:position pos:line="326" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="23">ALPN_HTTP_1_1_LENGTH<pos:position pos:line="326" pos:column="43"/></name></expr></argument>)<pos:position pos:line="326" pos:column="44"/></argument_list></call> <operator pos:line="326" pos:column="45">==<pos:position pos:line="326" pos:column="47"/></operator> <literal type="number" pos:line="326" pos:column="48">0<pos:position pos:line="326" pos:column="49"/></literal></expr>)<pos:position pos:line="326" pos:column="50"/></condition><then pos:line="326" pos:column="50"> <block pos:line="326" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="327" pos:column="9">conn<pos:position pos:line="327" pos:column="13"/></name><operator pos:line="327" pos:column="13">-&gt;<pos:position pos:line="327" pos:column="18"/></operator><name pos:line="327" pos:column="15">negnpn<pos:position pos:line="327" pos:column="21"/></name></name> <operator pos:line="327" pos:column="22">=<pos:position pos:line="327" pos:column="23"/></operator> <name pos:line="327" pos:column="24">NPN_HTTP1_1<pos:position pos:line="327" pos:column="35"/></name></expr>;<pos:position pos:line="327" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="328" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="329" pos:column="6"/></block></then>
    <elseif pos:line="330" pos:column="5">else <if pos:line="330" pos:column="10">if<condition pos:line="330" pos:column="12">(<expr><name><name pos:line="330" pos:column="13">conn<pos:position pos:line="330" pos:column="17"/></name><operator pos:line="330" pos:column="17">-&gt;<pos:position pos:line="330" pos:column="22"/></operator><name pos:line="330" pos:column="19">ssl<pos:position pos:line="330" pos:column="22"/></name><index pos:line="330" pos:column="22">[<expr><name pos:line="330" pos:column="23">sockindex<pos:position pos:line="330" pos:column="32"/></name></expr>]<pos:position pos:line="330" pos:column="33"/></index></name><operator pos:line="330" pos:column="33">.<pos:position pos:line="330" pos:column="34"/></operator><name pos:line="330" pos:column="34">asked_for_h2<pos:position pos:line="330" pos:column="46"/></name></expr>)<pos:position pos:line="330" pos:column="47"/></condition><then pos:line="330" pos:column="47"> <block pos:line="330" pos:column="48">{
      <expr_stmt><expr><call><name pos:line="331" pos:column="7">infof<pos:position pos:line="331" pos:column="12"/></name><argument_list pos:line="331" pos:column="12">(<argument><expr><name pos:line="331" pos:column="13">data<pos:position pos:line="331" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="331" pos:column="19">"ALPN, server did not agree to a protocol\n"<pos:position pos:line="331" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="332" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="333" pos:column="4"/></block></then></if>
<cpp:endif pos:line="334" pos:column="1">#<cpp:directive pos:line="334" pos:column="2">endif<pos:position pos:line="334" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name><name pos:line="336" pos:column="3">conn<pos:position pos:line="336" pos:column="7"/></name><operator pos:line="336" pos:column="7">-&gt;<pos:position pos:line="336" pos:column="12"/></operator><name pos:line="336" pos:column="9">ssl<pos:position pos:line="336" pos:column="12"/></name><index pos:line="336" pos:column="12">[<expr><name pos:line="336" pos:column="13">sockindex<pos:position pos:line="336" pos:column="22"/></name></expr>]<pos:position pos:line="336" pos:column="23"/></index></name><operator pos:line="336" pos:column="23">.<pos:position pos:line="336" pos:column="24"/></operator><name pos:line="336" pos:column="24">state<pos:position pos:line="336" pos:column="29"/></name> <operator pos:line="336" pos:column="30">=<pos:position pos:line="336" pos:column="31"/></operator> <name pos:line="336" pos:column="32">ssl_connection_complete<pos:position pos:line="336" pos:column="55"/></name></expr>;<pos:position pos:line="336" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="337" pos:column="3">conn<pos:position pos:line="337" pos:column="7"/></name><operator pos:line="337" pos:column="7">-&gt;<pos:position pos:line="337" pos:column="12"/></operator><name pos:line="337" pos:column="9">recv<pos:position pos:line="337" pos:column="13"/></name><index pos:line="337" pos:column="13">[<expr><name pos:line="337" pos:column="14">sockindex<pos:position pos:line="337" pos:column="23"/></name></expr>]<pos:position pos:line="337" pos:column="24"/></index></name> <operator pos:line="337" pos:column="25">=<pos:position pos:line="337" pos:column="26"/></operator> <name pos:line="337" pos:column="27">gtls_recv<pos:position pos:line="337" pos:column="36"/></name></expr>;<pos:position pos:line="337" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="338" pos:column="3">conn<pos:position pos:line="338" pos:column="7"/></name><operator pos:line="338" pos:column="7">-&gt;<pos:position pos:line="338" pos:column="12"/></operator><name pos:line="338" pos:column="9">send<pos:position pos:line="338" pos:column="13"/></name><index pos:line="338" pos:column="13">[<expr><name pos:line="338" pos:column="14">sockindex<pos:position pos:line="338" pos:column="23"/></name></expr>]<pos:position pos:line="338" pos:column="24"/></index></name> <operator pos:line="338" pos:column="25">=<pos:position pos:line="338" pos:column="26"/></operator> <name pos:line="338" pos:column="27">gtls_send<pos:position pos:line="338" pos:column="36"/></name></expr>;<pos:position pos:line="338" pos:column="37"/></expr_stmt>

  <block pos:line="340" pos:column="3">{
    <comment type="block" pos:line="341" pos:column="5">/* we always unconditionally get the session id here, as even if we
       already got it from the cache and asked to use it in the connection, it
       might've been rejected and then a new one is in use now and we need to
       detect that. */</comment>
    <decl_stmt><decl><type><name pos:line="345" pos:column="5">void<pos:position pos:line="345" pos:column="9"/></name> <modifier pos:line="345" pos:column="10">*<pos:position pos:line="345" pos:column="11"/></modifier></type><name pos:line="345" pos:column="11">connect_sessionid<pos:position pos:line="345" pos:column="28"/></name></decl>;<pos:position pos:line="345" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="346" pos:column="5">size_t<pos:position pos:line="346" pos:column="11"/></name></type> <name pos:line="346" pos:column="12">connect_idsize<pos:position pos:line="346" pos:column="26"/></name> <init pos:line="346" pos:column="27">= <expr><literal type="number" pos:line="346" pos:column="29">0<pos:position pos:line="346" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="346" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="348" pos:column="5">/* get the session ID data size */</comment>
    <expr_stmt><expr><call><name pos:line="349" pos:column="5">gnutls_session_get_data<pos:position pos:line="349" pos:column="28"/></name><argument_list pos:line="349" pos:column="28">(<argument><expr><name pos:line="349" pos:column="29">session<pos:position pos:line="349" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="38">NULL<pos:position pos:line="349" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="349" pos:column="44">&amp;<pos:position pos:line="349" pos:column="49"/></operator><name pos:line="349" pos:column="45">connect_idsize<pos:position pos:line="349" pos:column="59"/></name></expr></argument>)<pos:position pos:line="349" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="350" pos:column="5">connect_sessionid<pos:position pos:line="350" pos:column="22"/></name> <operator pos:line="350" pos:column="23">=<pos:position pos:line="350" pos:column="24"/></operator> <call><name pos:line="350" pos:column="25">malloc<pos:position pos:line="350" pos:column="31"/></name><argument_list pos:line="350" pos:column="31">(<argument><expr><name pos:line="350" pos:column="32">connect_idsize<pos:position pos:line="350" pos:column="46"/></name></expr></argument>)<pos:position pos:line="350" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="48"/></expr_stmt> <comment type="block" pos:line="350" pos:column="49">/* get a buffer for it */</comment>

    <if pos:line="352" pos:column="5">if<condition pos:line="352" pos:column="7">(<expr><name pos:line="352" pos:column="8">connect_sessionid<pos:position pos:line="352" pos:column="25"/></name></expr>)<pos:position pos:line="352" pos:column="26"/></condition><then pos:line="352" pos:column="26"> <block pos:line="352" pos:column="27">{
      <comment type="block" pos:line="353" pos:column="7">/* extract session ID to the allocated buffer */</comment>
      <expr_stmt><expr><call><name pos:line="354" pos:column="7">gnutls_session_get_data<pos:position pos:line="354" pos:column="30"/></name><argument_list pos:line="354" pos:column="30">(<argument><expr><name pos:line="354" pos:column="31">session<pos:position pos:line="354" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="40">connect_sessionid<pos:position pos:line="354" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="354" pos:column="59">&amp;<pos:position pos:line="354" pos:column="64"/></operator><name pos:line="354" pos:column="60">connect_idsize<pos:position pos:line="354" pos:column="74"/></name></expr></argument>)<pos:position pos:line="354" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="76"/></expr_stmt>

      <expr_stmt><expr><name pos:line="356" pos:column="7">incache<pos:position pos:line="356" pos:column="14"/></name> <operator pos:line="356" pos:column="15">=<pos:position pos:line="356" pos:column="16"/></operator> <operator pos:line="356" pos:column="17">!<pos:position pos:line="356" pos:column="18"/></operator><operator pos:line="356" pos:column="18">(<pos:position pos:line="356" pos:column="19"/></operator><call><name pos:line="356" pos:column="19">Curl_ssl_getsessionid<pos:position pos:line="356" pos:column="40"/></name><argument_list pos:line="356" pos:column="40">(<argument><expr><name pos:line="356" pos:column="41">conn<pos:position pos:line="356" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="356" pos:column="47">&amp;<pos:position pos:line="356" pos:column="52"/></operator><name pos:line="356" pos:column="48">ssl_sessionid<pos:position pos:line="356" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="63">NULL<pos:position pos:line="356" pos:column="67"/></name></expr></argument>)<pos:position pos:line="356" pos:column="68"/></argument_list></call><operator pos:line="356" pos:column="68">)<pos:position pos:line="356" pos:column="69"/></operator></expr>;<pos:position pos:line="356" pos:column="70"/></expr_stmt>
      <if pos:line="357" pos:column="7">if<condition pos:line="357" pos:column="9">(<expr><name pos:line="357" pos:column="10">incache<pos:position pos:line="357" pos:column="17"/></name></expr>)<pos:position pos:line="357" pos:column="18"/></condition><then pos:line="357" pos:column="18"> <block pos:line="357" pos:column="19">{
        <comment type="block" pos:line="358" pos:column="9">/* there was one before in the cache, so instead of risking that the
           previous one was rejected, we just kill that and store the new */</comment>
        <expr_stmt><expr><call><name pos:line="360" pos:column="9">Curl_ssl_delsessionid<pos:position pos:line="360" pos:column="30"/></name><argument_list pos:line="360" pos:column="30">(<argument><expr><name pos:line="360" pos:column="31">conn<pos:position pos:line="360" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="37">ssl_sessionid<pos:position pos:line="360" pos:column="50"/></name></expr></argument>)<pos:position pos:line="360" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="361" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="363" pos:column="7">/* store this session id */</comment>
      <expr_stmt><expr><name pos:line="364" pos:column="7">result<pos:position pos:line="364" pos:column="13"/></name> <operator pos:line="364" pos:column="14">=<pos:position pos:line="364" pos:column="15"/></operator> <call><name pos:line="364" pos:column="16">Curl_ssl_addsessionid<pos:position pos:line="364" pos:column="37"/></name><argument_list pos:line="364" pos:column="37">(<argument><expr><name pos:line="364" pos:column="38">conn<pos:position pos:line="364" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="44">connect_sessionid<pos:position pos:line="364" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="63">connect_idsize<pos:position pos:line="364" pos:column="77"/></name></expr></argument>)<pos:position pos:line="364" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="79"/></expr_stmt>
      <if pos:line="365" pos:column="7">if<condition pos:line="365" pos:column="9">(<expr><name pos:line="365" pos:column="10">result<pos:position pos:line="365" pos:column="16"/></name></expr>)<pos:position pos:line="365" pos:column="17"/></condition><then pos:line="365" pos:column="17"> <block pos:line="365" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="366" pos:column="9">free<pos:position pos:line="366" pos:column="13"/></name><argument_list pos:line="366" pos:column="13">(<argument><expr><name pos:line="366" pos:column="14">connect_sessionid<pos:position pos:line="366" pos:column="31"/></name></expr></argument>)<pos:position pos:line="366" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="367" pos:column="9">result<pos:position pos:line="367" pos:column="15"/></name> <operator pos:line="367" pos:column="16">=<pos:position pos:line="367" pos:column="17"/></operator> <name pos:line="367" pos:column="18">CURLE_OUT_OF_MEMORY<pos:position pos:line="367" pos:column="37"/></name></expr>;<pos:position pos:line="367" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="368" pos:column="8"/></block></then></if>
    }<pos:position pos:line="369" pos:column="6"/></block></then>
    <else pos:line="370" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="371" pos:column="7">result<pos:position pos:line="371" pos:column="13"/></name> <operator pos:line="371" pos:column="14">=<pos:position pos:line="371" pos:column="15"/></operator> <name pos:line="371" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="371" pos:column="35"/></name></expr>;<pos:position pos:line="371" pos:column="36"/></expr_stmt></block></else></if>
  }<pos:position pos:line="372" pos:column="4"/></block>

  <return pos:line="374" pos:column="3">return <expr><name pos:line="374" pos:column="10">result<pos:position pos:line="374" pos:column="16"/></name></expr>;<pos:position pos:line="374" pos:column="17"/></return>
}<pos:position pos:line="375" pos:column="2"/></block></function></unit>

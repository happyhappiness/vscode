<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_265_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">kill_locks<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">CRYPTO_set_locking_callback<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
  <for pos:line="6" pos:column="3">for<control pos:line="6" pos:column="6">(<init><expr><name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <literal type="number" pos:line="6" pos:column="11">0<pos:position pos:line="6" pos:column="12"/></literal></expr>;<pos:position pos:line="6" pos:column="13"/></init> <condition><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">&lt;<pos:position pos:line="6" pos:column="19"/></operator><call><name pos:line="6" pos:column="16">CRYPTO_num_locks<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></condition> <incr><expr><name pos:line="6" pos:column="36">i<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">++<pos:position pos:line="6" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="40"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">pthread_mutex_destroy<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><operator pos:line="7" pos:column="28">(<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">lockarray<pos:position pos:line="7" pos:column="38"/></name><index pos:line="7" pos:column="38">[<expr><name pos:line="7" pos:column="39">i<pos:position pos:line="7" pos:column="40"/></name></expr>]<pos:position pos:line="7" pos:column="41"/></index></name><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">OPENSSL_free<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">lockarray<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_905_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">setfiletime<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">long<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">filetime<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">filename<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">FILE<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">error_stream<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if<condition pos:line="4" pos:column="5">(<expr><name pos:line="4" pos:column="6">filetime<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">&gt;=<pos:position pos:line="4" pos:column="20"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
<comment type="block" pos:line="5" pos:column="1">/* Windows utime() may attempt to adjust our unix gmt 'filetime' by a daylight
   saving time offset and since it's GMT that is bad behavior. When we have
   access to a 64-bit type we can bypass utime and set the times directly. */</comment>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><call><name pos:line="8" pos:column="5">defined<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">WIN32<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">SIZEOF_CURL_OFF_T<pos:position pos:line="8" pos:column="41"/></name> <operator pos:line="8" pos:column="42">&gt;=<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="45">8<pos:position pos:line="8" pos:column="46"/></literal><operator pos:line="8" pos:column="46">)<pos:position pos:line="8" pos:column="47"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HANDLE<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">hfile<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><operator pos:line="11" pos:column="5">(<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">SIZEOF_LONG<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&gt;=<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">8<pos:position pos:line="11" pos:column="22"/></literal><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator></expr></cpp:if>
    <comment type="block" pos:line="12" pos:column="5">/* 910670515199 is the maximum unix filetime that can be used as a
       Windows FILETIME without overflow: 30827-12-31T23:59:59. */</comment>
    <if pos:line="14" pos:column="5">if<condition pos:line="14" pos:column="7">(<expr><name pos:line="14" pos:column="8">filetime<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="19">CURL_OFF_T_C<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><literal type="number" pos:line="14" pos:column="32">910670515199<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46"> <block pos:line="14" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">fprintf<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">error_stream<pos:position pos:line="15" pos:column="27"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="16" pos:column="15">"Failed to set filetime %ld on outfile: overflow\n"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>,
              <argument><expr><name pos:line="17" pos:column="15">filetime<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
      <return pos:line="18" pos:column="7">return;<pos:position pos:line="18" pos:column="14"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="20" pos:column="8">/* SIZEOF_LONG &gt;= 8 */</comment>

    <expr_stmt><expr><name pos:line="22" pos:column="5">hfile<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">CreateFileA<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">filename<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">FILE_WRITE_ATTRIBUTES<pos:position pos:line="22" pos:column="56"/></name></expr></argument>,
                        <argument><expr><operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">FILE_SHARE_READ<pos:position pos:line="23" pos:column="41"/></name> <operator pos:line="23" pos:column="42">|<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="44">FILE_SHARE_WRITE<pos:position pos:line="23" pos:column="60"/></name> <operator pos:line="23" pos:column="61">|<pos:position pos:line="23" pos:column="62"/></operator>
                         <name pos:line="24" pos:column="26">FILE_SHARE_DELETE<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator></expr></argument>,
                        <argument><expr><name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">OPEN_EXISTING<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="46">0<pos:position pos:line="25" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">NULL<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
    <if pos:line="26" pos:column="5">if<condition pos:line="26" pos:column="7">(<expr><name pos:line="26" pos:column="8">hfile<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">!=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">INVALID_HANDLE_VALUE<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">curl_off_t<pos:position pos:line="27" pos:column="17"/></name></type> <name pos:line="27" pos:column="18">converted<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><operator pos:line="27" pos:column="31">(<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">curl_off_t<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">)<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">filetime<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">*<pos:position pos:line="27" pos:column="53"/></operator> <literal type="number" pos:line="27" pos:column="54">10000000<pos:position pos:line="27" pos:column="62"/></literal><operator pos:line="27" pos:column="62">)<pos:position pos:line="27" pos:column="63"/></operator> <operator pos:line="27" pos:column="64">+<pos:position pos:line="27" pos:column="65"/></operator>
                             <call><name pos:line="28" pos:column="30">CURL_OFF_T_C<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><literal type="number" pos:line="28" pos:column="43">116444736000000000<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="63"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">FILETIME<pos:position pos:line="29" pos:column="15"/></name></type> <name pos:line="29" pos:column="16">ft<pos:position pos:line="29" pos:column="18"/></name></decl>;<pos:position pos:line="29" pos:column="19"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="30" pos:column="7">ft<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">.<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">dwLowDateTime<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <call pos:line="30" pos:column="26">(<name pos:line="30" pos:column="27">DWORD<pos:position pos:line="30" pos:column="32"/></name>)<argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">converted<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator> <literal type="number" pos:line="30" pos:column="46">0xFFFFFFFF<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="31" pos:column="7">ft<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">.<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">dwHighDateTime<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <call pos:line="31" pos:column="27">(<name pos:line="31" pos:column="28">DWORD<pos:position pos:line="31" pos:column="33"/></name>)<argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">converted<pos:position pos:line="31" pos:column="44"/></name> <operator pos:line="31" pos:column="45">&gt;&gt;<pos:position pos:line="31" pos:column="50"/></operator> <literal type="number" pos:line="31" pos:column="48">32<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><operator pos:line="32" pos:column="10">!<pos:position pos:line="32" pos:column="11"/></operator><call><name pos:line="32" pos:column="11">SetFileTime<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">hfile<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">NULL<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="37">ft<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="42">ft<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46"> <block pos:line="32" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">fprintf<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">error_stream<pos:position pos:line="33" pos:column="29"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="34" pos:column="17">"Failed to set filetime %ld on outfile: "<pos:position pos:line="34" pos:column="58"/></literal>
                <literal type="string" pos:line="35" pos:column="17">"SetFileTime failed: GetLastError %u\n"<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>,
                <argument><expr><name pos:line="36" pos:column="17">filetime<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="27">GetLastError<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">()<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">CloseHandle<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">hfile<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then>
    <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">fprintf<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">error_stream<pos:position pos:line="41" pos:column="27"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="42" pos:column="15">"Failed to set filetime %ld on outfile: "<pos:position pos:line="42" pos:column="56"/></literal>
              <literal type="string" pos:line="43" pos:column="15">"CreateFile failed: GetLastError %u\n"<pos:position pos:line="43" pos:column="53"/></literal></expr></argument>,
              <argument><expr><name pos:line="44" pos:column="15">filetime<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="25">GetLastError<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">()<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>

<cpp:elif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">elif<pos:position pos:line="47" pos:column="6"/></cpp:directive> <expr><call><name pos:line="47" pos:column="7">defined<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">HAVE_UTIMES<pos:position pos:line="47" pos:column="26"/></name></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></call></expr></cpp:elif>
    <decl_stmt><decl><type><name><name pos:line="48" pos:column="5">struct<pos:position pos:line="48" pos:column="11"/></name> <name pos:line="48" pos:column="12">timeval<pos:position pos:line="48" pos:column="19"/></name></name></type> <name><name pos:line="48" pos:column="20">times<pos:position pos:line="48" pos:column="25"/></name><index pos:line="48" pos:column="25">[<expr><literal type="number" pos:line="48" pos:column="26">2<pos:position pos:line="48" pos:column="27"/></literal></expr>]<pos:position pos:line="48" pos:column="28"/></index></name></decl>;<pos:position pos:line="48" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">times<pos:position pos:line="49" pos:column="10"/></name><index pos:line="49" pos:column="10">[<expr><literal type="number" pos:line="49" pos:column="11">0<pos:position pos:line="49" pos:column="12"/></literal></expr>]<pos:position pos:line="49" pos:column="13"/></index></name><operator pos:line="49" pos:column="13">.<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">tv_sec<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <name><name pos:line="49" pos:column="23">times<pos:position pos:line="49" pos:column="28"/></name><index pos:line="49" pos:column="28">[<expr><literal type="number" pos:line="49" pos:column="29">1<pos:position pos:line="49" pos:column="30"/></literal></expr>]<pos:position pos:line="49" pos:column="31"/></index></name><operator pos:line="49" pos:column="31">.<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">tv_sec<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <name pos:line="49" pos:column="41">filetime<pos:position pos:line="49" pos:column="49"/></name></expr>;<pos:position pos:line="49" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">times<pos:position pos:line="50" pos:column="10"/></name><index pos:line="50" pos:column="10">[<expr><literal type="number" pos:line="50" pos:column="11">0<pos:position pos:line="50" pos:column="12"/></literal></expr>]<pos:position pos:line="50" pos:column="13"/></index></name><operator pos:line="50" pos:column="13">.<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">tv_usec<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name><name pos:line="50" pos:column="24">times<pos:position pos:line="50" pos:column="29"/></name><index pos:line="50" pos:column="29">[<expr><literal type="number" pos:line="50" pos:column="30">1<pos:position pos:line="50" pos:column="31"/></literal></expr>]<pos:position pos:line="50" pos:column="32"/></index></name><operator pos:line="50" pos:column="32">.<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">tv_usec<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">=<pos:position pos:line="50" pos:column="42"/></operator> <literal type="number" pos:line="50" pos:column="43">0<pos:position pos:line="50" pos:column="44"/></literal></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
    <if pos:line="51" pos:column="5">if<condition pos:line="51" pos:column="7">(<expr><call><name pos:line="51" pos:column="8">utimes<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">filename<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="25">times<pos:position pos:line="51" pos:column="30"/></name></expr></argument>)<pos:position pos:line="51" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32"> <block pos:line="51" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">fprintf<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">error_stream<pos:position pos:line="52" pos:column="27"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="53" pos:column="15">"Failed to set filetime %ld on outfile: errno %d\n"<pos:position pos:line="53" pos:column="66"/></literal></expr></argument>,
              <argument><expr><name pos:line="54" pos:column="15">filetime<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="25">errno<pos:position pos:line="54" pos:column="30"/></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

<cpp:elif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">elif<pos:position pos:line="57" pos:column="6"/></cpp:directive> <expr><call><name pos:line="57" pos:column="7">defined<pos:position pos:line="57" pos:column="14"/></name><argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">HAVE_UTIME<pos:position pos:line="57" pos:column="25"/></name></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call></expr></cpp:elif>
    <decl_stmt><decl><type><name><name pos:line="58" pos:column="5">struct<pos:position pos:line="58" pos:column="11"/></name> <name pos:line="58" pos:column="12">utimbuf<pos:position pos:line="58" pos:column="19"/></name></name></type> <name pos:line="58" pos:column="20">times<pos:position pos:line="58" pos:column="25"/></name></decl>;<pos:position pos:line="58" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">times<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">.<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">actime<pos:position pos:line="59" pos:column="17"/></name></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <operator pos:line="59" pos:column="20">(<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">time_t<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">)<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">filetime<pos:position pos:line="59" pos:column="36"/></name></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">times<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">.<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">modtime<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <operator pos:line="60" pos:column="21">(<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">time_t<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">)<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="29">filetime<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
    <if pos:line="61" pos:column="5">if<condition pos:line="61" pos:column="7">(<expr><call><name pos:line="61" pos:column="8">utime<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">filename<pos:position pos:line="61" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="24">&amp;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="25">times<pos:position pos:line="61" pos:column="30"/></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32"> <block pos:line="61" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">fprintf<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">error_stream<pos:position pos:line="62" pos:column="27"/></name></expr></argument>,
              <argument><expr><literal type="string" pos:line="63" pos:column="15">"Failed to set filetime %ld on outfile: errno %d\n"<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>,
              <argument><expr><name pos:line="64" pos:column="15">filetime<pos:position pos:line="64" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="25">errno<pos:position pos:line="64" pos:column="30"/></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

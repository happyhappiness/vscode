<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2392_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">pkp_pin_peer_pubkey<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">struct<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">Curl_easy<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">data<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">X509<pos:position pos:line="1" pos:column="65"/></name><modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type> <name pos:line="1" pos:column="67">cert<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">pinnedpubkey<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* Scratch */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">len1<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">len2<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">buff1<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">temp<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><name pos:line="6" pos:column="40">NULL<pos:position pos:line="6" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Result is returned to caller */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">CURLcode<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">CURLE_SSL_PINNEDPUBKEYNOTMATCH<pos:position pos:line="9" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>

  <comment type="block" pos:line="11" pos:column="3">/* if a path wasn't specified, don't pin */</comment>
  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><operator pos:line="12" pos:column="6">!<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">pinnedpubkey<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">CURLE_OK<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><operator pos:line="15" pos:column="6">!<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">cert<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">result<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return></block></then></if>

  <do pos:line="18" pos:column="3">do <block pos:line="18" pos:column="6">{
    <comment type="block" pos:line="19" pos:column="5">/* Begin Gyrations to get the subjectPublicKeyInfo     */</comment>
    <comment type="block" pos:line="20" pos:column="5">/* Thanks to Viktor Dukhovni on the OpenSSL mailing list */</comment>

    <comment type="block" pos:line="22" pos:column="5">/* https://groups.google.com/group/mailing.openssl.users/browse_thread
     /thread/d61858dae102c6c7 */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">len1<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">i2d_X509_PUBKEY<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><call><name pos:line="24" pos:column="28">X509_get_X509_PUBKEY<pos:position pos:line="24" pos:column="48"/></name><argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">cert<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">NULL<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><name pos:line="25" pos:column="8">len1<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">&lt;<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="15">1<pos:position pos:line="25" pos:column="16"/></literal></expr>)<pos:position pos:line="25" pos:column="17"/></condition><then pos:line="25" pos:column="17">
      <block type="pseudo"><break pos:line="26" pos:column="7">break;<pos:position pos:line="26" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="26" pos:column="14">/* failed */</comment>

    <comment type="block" pos:line="28" pos:column="5">/* https://www.openssl.org/docs/crypto/buffer.html */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">buff1<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">temp<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <call><name pos:line="29" pos:column="20">malloc<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">len1<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><operator pos:line="30" pos:column="8">!<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">buff1<pos:position pos:line="30" pos:column="14"/></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15">
      <block type="pseudo"><break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="31" pos:column="14">/* failed */</comment>

    <comment type="block" pos:line="33" pos:column="5">/* https://www.openssl.org/docs/crypto/d2i_X509.html */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">len2<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name pos:line="34" pos:column="12">i2d_X509_PUBKEY<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><call><name pos:line="34" pos:column="28">X509_get_X509_PUBKEY<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">cert<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="34" pos:column="56">&amp;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="57">temp<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/*
     * These checks are verifying we got back the same values as when we
     * sized the buffer. It's pretty weak since they should always be the
     * same. But it gives us something to test.
     */</comment>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">(<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">len1<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">!=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">len2<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">)<pos:position pos:line="41" pos:column="22"/></operator> <operator pos:line="41" pos:column="23">||<pos:position pos:line="41" pos:column="25"/></operator> <operator pos:line="41" pos:column="26">!<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">temp<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">||<pos:position pos:line="41" pos:column="34"/></operator> <operator pos:line="41" pos:column="35">(<pos:position pos:line="41" pos:column="36"/></operator><operator pos:line="41" pos:column="36">(<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">temp<pos:position pos:line="41" pos:column="41"/></name> <operator pos:line="41" pos:column="42">-<pos:position pos:line="41" pos:column="43"/></operator> <name pos:line="41" pos:column="44">buff1<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">)<pos:position pos:line="41" pos:column="50"/></operator> <operator pos:line="41" pos:column="51">!=<pos:position pos:line="41" pos:column="53"/></operator> <name pos:line="41" pos:column="54">len1<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">)<pos:position pos:line="41" pos:column="59"/></operator></expr>)<pos:position pos:line="41" pos:column="60"/></condition><then pos:line="41" pos:column="60">
      <block type="pseudo"><break pos:line="42" pos:column="7">break;<pos:position pos:line="42" pos:column="13"/></break></block></then></if> <comment type="block" pos:line="42" pos:column="14">/* failed */</comment>

    <comment type="block" pos:line="44" pos:column="5">/* End Gyrations */</comment>

    <comment type="block" pos:line="46" pos:column="5">/* The one good exit point */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">result<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">Curl_pin_peer_pubkey<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">data<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">pinnedpubkey<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">buff1<pos:position pos:line="47" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="62">len1<pos:position pos:line="47" pos:column="66"/></name></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block> while<condition pos:line="48" pos:column="10">(<expr><literal type="number" pos:line="48" pos:column="11">0<pos:position pos:line="48" pos:column="12"/></literal></expr>)<pos:position pos:line="48" pos:column="13"/></condition>;<pos:position pos:line="48" pos:column="14"/></do>

  <comment type="block" pos:line="50" pos:column="3">/* https://www.openssl.org/docs/crypto/buffer.html */</comment>
  <if pos:line="51" pos:column="3">if<condition pos:line="51" pos:column="5">(<expr><name pos:line="51" pos:column="6">buff1<pos:position pos:line="51" pos:column="11"/></name></expr>)<pos:position pos:line="51" pos:column="12"/></condition><then pos:line="51" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="5">free<pos:position pos:line="52" pos:column="9"/></name><argument_list pos:line="52" pos:column="9">(<argument><expr><name pos:line="52" pos:column="10">buff1<pos:position pos:line="52" pos:column="15"/></name></expr></argument>)<pos:position pos:line="52" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt></block></then></if>

  <return pos:line="54" pos:column="3">return <expr><name pos:line="54" pos:column="10">result<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_104_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">void<pos:position pos:line="1" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="15"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURL<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">curl<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CURLcode<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">res<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">file_info<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">double<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">speed_upload<pos:position pos:line="6" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">total_time<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">FILE<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">fd<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">fd<pos:position pos:line="9" pos:column="5"/></name> <operator pos:line="9" pos:column="6">=<pos:position pos:line="9" pos:column="7"/></operator> <call><name pos:line="9" pos:column="8">fopen<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="string" pos:line="9" pos:column="14">"debugit"<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">"rb"<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt> <comment type="block" pos:line="9" pos:column="32">/* open file to upload */</comment>
  <if pos:line="10" pos:column="3">if<condition pos:line="10" pos:column="5">(<expr><operator pos:line="10" pos:column="6">!<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">fd<pos:position pos:line="10" pos:column="9"/></name></expr>)<pos:position pos:line="10" pos:column="10"/></condition><then pos:line="10" pos:column="10">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if> <comment type="block" pos:line="11" pos:column="15">/* can't continue */</comment>

  <comment type="block" pos:line="13" pos:column="3">/* to get the file size */</comment>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><call><name pos:line="14" pos:column="6">fstat<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><call><name pos:line="14" pos:column="12">fileno<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">fd<pos:position pos:line="14" pos:column="21"/></name></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="25">file_info<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call> <operator pos:line="14" pos:column="36">!=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="39">0<pos:position pos:line="14" pos:column="40"/></literal></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">1<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return></block></then></if> <comment type="block" pos:line="15" pos:column="15">/* can't continue */</comment>

  <expr_stmt><expr><name pos:line="17" pos:column="3">curl<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">curl_easy_init<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><name pos:line="18" pos:column="6">curl<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11"> <block pos:line="18" pos:column="12">{
    <comment type="block" pos:line="19" pos:column="5">/* upload to this place */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">curl_easy_setopt<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">curl<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">CURLOPT_URL<pos:position pos:line="20" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="21" pos:column="22">"file:///home/dast/src/curl/debug/new"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* tell it to "upload" to the URL */</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">curl_easy_setopt<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">curl<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="28">CURLOPT_UPLOAD<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="44">1L<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* set where to read from (on Windows you need to use READFUNCTION too) */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">curl_easy_setopt<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">curl<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">CURLOPT_READDATA<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">fd<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* and give the size of the upload (optional) */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">curl_easy_setopt<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">curl<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">CURLOPT_INFILESIZE_LARGE<pos:position pos:line="30" pos:column="52"/></name></expr></argument>,
                     <argument><expr><operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">curl_off_t<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">)<pos:position pos:line="31" pos:column="34"/></operator><name><name pos:line="31" pos:column="34">file_info<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">.<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="44">st_size<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* enable verbose for easier tracing */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">curl_easy_setopt<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">curl<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">CURLOPT_VERBOSE<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="45">1L<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">res<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">curl_easy_perform<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">curl<pos:position pos:line="36" pos:column="33"/></name></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="37" pos:column="5">/* Check for errors */</comment>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><name pos:line="38" pos:column="8">res<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">!=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="15">CURLE_OK<pos:position pos:line="38" pos:column="23"/></name></expr>)<pos:position pos:line="38" pos:column="24"/></condition><then pos:line="38" pos:column="24"> <block pos:line="38" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">fprintf<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">stderr<pos:position pos:line="39" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="23">"curl_easy_perform() failed: %s\n"<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="40" pos:column="15">curl_easy_strerror<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">res<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>

    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
      <comment type="block" pos:line="44" pos:column="7">/* now extract transfer info */</comment>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">curl_easy_getinfo<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">curl<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">CURLINFO_SPEED_UPLOAD<pos:position pos:line="45" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="54">&amp;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="55">speed_upload<pos:position pos:line="45" pos:column="67"/></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">curl_easy_getinfo<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">curl<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">CURLINFO_TOTAL_TIME<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="52">&amp;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="53">total_time<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="48" pos:column="7">fprintf<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">stderr<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="23">"Speed: %.3f bytes/sec during %.3f seconds\n"<pos:position pos:line="48" pos:column="68"/></literal></expr></argument>,
              <argument><expr><name pos:line="49" pos:column="15">speed_upload<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="29">total_time<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>

    }<pos:position pos:line="51" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="52" pos:column="5">/* always cleanup */</comment>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">curl_easy_cleanup<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">curl<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">fclose<pos:position pos:line="55" pos:column="9"/></name><argument_list pos:line="55" pos:column="9">(<argument><expr><name pos:line="55" pos:column="10">fd<pos:position pos:line="55" pos:column="12"/></name></expr></argument>)<pos:position pos:line="55" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="14"/></expr_stmt>
  <return pos:line="56" pos:column="3">return <expr><literal type="number" pos:line="56" pos:column="10">0<pos:position pos:line="56" pos:column="11"/></literal></expr>;<pos:position pos:line="56" pos:column="12"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

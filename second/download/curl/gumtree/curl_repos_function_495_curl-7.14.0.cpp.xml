<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_495_curl-7.14.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">Curl_select<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">curl_socket_t<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">readfd<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">curl_socket_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">writefd<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">timeout_ms<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_POLL_FINE<pos:position pos:line="3" pos:column="22"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">pollfd<pos:position pos:line="4" pos:column="16"/></name></name></type> <name><name pos:line="4" pos:column="17">pfd<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">2<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">num<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">r<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ret<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">num<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal></expr>;<pos:position pos:line="9" pos:column="11"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">readfd<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">CURL_SOCKET_BAD<pos:position pos:line="10" pos:column="32"/></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33"> <block pos:line="10" pos:column="34">{
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">pfd<pos:position pos:line="11" pos:column="8"/></name><index pos:line="11" pos:column="8">[<expr><name pos:line="11" pos:column="9">num<pos:position pos:line="11" pos:column="12"/></name></expr>]<pos:position pos:line="11" pos:column="13"/></index></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">fd<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">readfd<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">pfd<pos:position pos:line="12" pos:column="8"/></name><index pos:line="12" pos:column="8">[<expr><name pos:line="12" pos:column="9">num<pos:position pos:line="12" pos:column="12"/></name></expr>]<pos:position pos:line="12" pos:column="13"/></index></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">events<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">POLLIN<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">num<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">++<pos:position pos:line="13" pos:column="10"/></operator></expr>;<pos:position pos:line="13" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">writefd<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">!=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">CURL_SOCKET_BAD<pos:position pos:line="15" pos:column="33"/></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">pfd<pos:position pos:line="16" pos:column="8"/></name><index pos:line="16" pos:column="8">[<expr><name pos:line="16" pos:column="9">num<pos:position pos:line="16" pos:column="12"/></name></expr>]<pos:position pos:line="16" pos:column="13"/></index></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">fd<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">writefd<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">pfd<pos:position pos:line="17" pos:column="8"/></name><index pos:line="17" pos:column="8">[<expr><name pos:line="17" pos:column="9">num<pos:position pos:line="17" pos:column="12"/></name></expr>]<pos:position pos:line="17" pos:column="13"/></index></name><operator pos:line="17" pos:column="13">.<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">events<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">POLLOUT<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">num<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">++<pos:position pos:line="18" pos:column="10"/></operator></expr>;<pos:position pos:line="18" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <do pos:line="21" pos:column="3">do <block pos:line="21" pos:column="6">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">r<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">poll<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">pfd<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">num<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">timeout_ms<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block> while<condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">(<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">r<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">==<pos:position pos:line="23" pos:column="16"/></operator> <operator pos:line="23" pos:column="17">-<pos:position pos:line="23" pos:column="18"/></operator><literal type="number" pos:line="23" pos:column="18">1<pos:position pos:line="23" pos:column="19"/></literal><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">errno<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">==<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">EINTR<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator></expr>)<pos:position pos:line="23" pos:column="41"/></condition>;<pos:position pos:line="23" pos:column="42"/></do>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">r<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">&lt;<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="11">0<pos:position pos:line="25" pos:column="12"/></literal></expr>)<pos:position pos:line="25" pos:column="13"/></condition><then pos:line="25" pos:column="13">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></return></block></then></if>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">r<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">==<pos:position pos:line="27" pos:column="11"/></operator> <literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>)<pos:position pos:line="27" pos:column="14"/></condition><then pos:line="27" pos:column="14">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">ret<pos:position pos:line="30" pos:column="6"/></name> <operator pos:line="30" pos:column="7">=<pos:position pos:line="30" pos:column="8"/></operator> <literal type="number" pos:line="30" pos:column="9">0<pos:position pos:line="30" pos:column="10"/></literal></expr>;<pos:position pos:line="30" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="31" pos:column="3">num<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <literal type="number" pos:line="31" pos:column="9">0<pos:position pos:line="31" pos:column="10"/></literal></expr>;<pos:position pos:line="31" pos:column="11"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">readfd<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">!=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">CURL_SOCKET_BAD<pos:position pos:line="32" pos:column="32"/></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33"> <block pos:line="32" pos:column="34">{
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">pfd<pos:position pos:line="33" pos:column="12"/></name><index pos:line="33" pos:column="12">[<expr><name pos:line="33" pos:column="13">num<pos:position pos:line="33" pos:column="16"/></name></expr>]<pos:position pos:line="33" pos:column="17"/></index></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">revents<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">&amp;<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="28">POLLIN<pos:position pos:line="33" pos:column="34"/></name></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">ret<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">|=<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">CSELECT_IN<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt></block></then></if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">pfd<pos:position pos:line="35" pos:column="12"/></name><index pos:line="35" pos:column="12">[<expr><name pos:line="35" pos:column="13">num<pos:position pos:line="35" pos:column="16"/></name></expr>]<pos:position pos:line="35" pos:column="17"/></index></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">revents<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="28">POLLERR<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">ret<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">|=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">CSELECT_ERR<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="37" pos:column="5">num<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">++<pos:position pos:line="37" pos:column="10"/></operator></expr>;<pos:position pos:line="37" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">writefd<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">!=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">CURL_SOCKET_BAD<pos:position pos:line="39" pos:column="33"/></name></expr>)<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34"> <block pos:line="39" pos:column="35">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">pfd<pos:position pos:line="40" pos:column="12"/></name><index pos:line="40" pos:column="12">[<expr><name pos:line="40" pos:column="13">num<pos:position pos:line="40" pos:column="16"/></name></expr>]<pos:position pos:line="40" pos:column="17"/></index></name><operator pos:line="40" pos:column="17">.<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">revents<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator> <name pos:line="40" pos:column="28">POLLOUT<pos:position pos:line="40" pos:column="35"/></name></expr>)<pos:position pos:line="40" pos:column="36"/></condition><then pos:line="40" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">ret<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">|=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">CSELECT_OUT<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt></block></then></if>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">pfd<pos:position pos:line="42" pos:column="12"/></name><index pos:line="42" pos:column="12">[<expr><name pos:line="42" pos:column="13">num<pos:position pos:line="42" pos:column="16"/></name></expr>]<pos:position pos:line="42" pos:column="17"/></index></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">revents<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&amp;<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="28">POLLERR<pos:position pos:line="42" pos:column="35"/></name></expr>)<pos:position pos:line="42" pos:column="36"/></condition><then pos:line="42" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">ret<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">|=<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">CSELECT_ERR<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <return pos:line="46" pos:column="3">return <expr><name pos:line="46" pos:column="10">ret<pos:position pos:line="46" pos:column="13"/></name></expr>;<pos:position pos:line="46" pos:column="14"/></return>
<cpp:else pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">else<pos:position pos:line="47" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name><name pos:line="48" pos:column="3">struct<pos:position pos:line="48" pos:column="9"/></name> <name pos:line="48" pos:column="10">timeval<pos:position pos:line="48" pos:column="17"/></name></name></type> <name pos:line="48" pos:column="18">timeout<pos:position pos:line="48" pos:column="25"/></name></decl>;<pos:position pos:line="48" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="49" pos:column="3">fd_set<pos:position pos:line="49" pos:column="9"/></name></type> <name pos:line="49" pos:column="10">fds_read<pos:position pos:line="49" pos:column="18"/></name></decl>;<pos:position pos:line="49" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="50" pos:column="3">fd_set<pos:position pos:line="50" pos:column="9"/></name></type> <name pos:line="50" pos:column="10">fds_write<pos:position pos:line="50" pos:column="19"/></name></decl>;<pos:position pos:line="50" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="51" pos:column="3">fd_set<pos:position pos:line="51" pos:column="9"/></name></type> <name pos:line="51" pos:column="10">fds_err<pos:position pos:line="51" pos:column="17"/></name></decl>;<pos:position pos:line="51" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="52" pos:column="3">curl_socket_t<pos:position pos:line="52" pos:column="16"/></name></type> <name pos:line="52" pos:column="17">maxfd<pos:position pos:line="52" pos:column="22"/></name></decl>;<pos:position pos:line="52" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="53" pos:column="3">int<pos:position pos:line="53" pos:column="6"/></name></type> <name pos:line="53" pos:column="7">r<pos:position pos:line="53" pos:column="8"/></name></decl>;<pos:position pos:line="53" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="54" pos:column="3">int<pos:position pos:line="54" pos:column="6"/></name></type> <name pos:line="54" pos:column="7">ret<pos:position pos:line="54" pos:column="10"/></name></decl>;<pos:position pos:line="54" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="56" pos:column="3">timeout<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">.<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">tv_sec<pos:position pos:line="56" pos:column="17"/></name></name> <operator pos:line="56" pos:column="18">=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">timeout_ms<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">/<pos:position pos:line="56" pos:column="32"/></operator> <literal type="number" pos:line="56" pos:column="33">1000<pos:position pos:line="56" pos:column="37"/></literal></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="57" pos:column="3">timeout<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">.<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">tv_usec<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <operator pos:line="57" pos:column="21">(<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="22">timeout_ms<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">%<pos:position pos:line="57" pos:column="34"/></operator> <literal type="number" pos:line="57" pos:column="35">1000<pos:position pos:line="57" pos:column="39"/></literal><operator pos:line="57" pos:column="39">)<pos:position pos:line="57" pos:column="40"/></operator> <operator pos:line="57" pos:column="41">*<pos:position pos:line="57" pos:column="42"/></operator> <literal type="number" pos:line="57" pos:column="43">1000<pos:position pos:line="57" pos:column="47"/></literal></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">FD_ZERO<pos:position pos:line="59" pos:column="10"/></name><argument_list pos:line="59" pos:column="10">(<argument><expr><operator pos:line="59" pos:column="11">&amp;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="12">fds_err<pos:position pos:line="59" pos:column="19"/></name></expr></argument>)<pos:position pos:line="59" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">maxfd<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <operator pos:line="60" pos:column="11">-<pos:position pos:line="60" pos:column="12"/></operator><literal type="number" pos:line="60" pos:column="12">1<pos:position pos:line="60" pos:column="13"/></literal></expr>;<pos:position pos:line="60" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">FD_ZERO<pos:position pos:line="62" pos:column="10"/></name><argument_list pos:line="62" pos:column="10">(<argument><expr><operator pos:line="62" pos:column="11">&amp;<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="12">fds_read<pos:position pos:line="62" pos:column="20"/></name></expr></argument>)<pos:position pos:line="62" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">readfd<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">!=<pos:position pos:line="63" pos:column="16"/></operator> <name pos:line="63" pos:column="17">CURL_SOCKET_BAD<pos:position pos:line="63" pos:column="32"/></name></expr>)<pos:position pos:line="63" pos:column="33"/></condition><then pos:line="63" pos:column="33"> <block pos:line="63" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">VERIFY_SOCK<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">readfd<pos:position pos:line="64" pos:column="23"/></name></expr></argument>)<pos:position pos:line="64" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">FD_SET<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name pos:line="65" pos:column="12">readfd<pos:position pos:line="65" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="20">&amp;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="21">fds_read<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">FD_SET<pos:position pos:line="66" pos:column="11"/></name><argument_list pos:line="66" pos:column="11">(<argument><expr><name pos:line="66" pos:column="12">readfd<pos:position pos:line="66" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="20">&amp;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="21">fds_err<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="67" pos:column="5">maxfd<pos:position pos:line="67" pos:column="10"/></name> <operator pos:line="67" pos:column="11">=<pos:position pos:line="67" pos:column="12"/></operator> <name pos:line="67" pos:column="13">readfd<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="70" pos:column="3">FD_ZERO<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><operator pos:line="70" pos:column="11">&amp;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="12">fds_write<pos:position pos:line="70" pos:column="21"/></name></expr></argument>)<pos:position pos:line="70" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name pos:line="71" pos:column="7">writefd<pos:position pos:line="71" pos:column="14"/></name> <operator pos:line="71" pos:column="15">!=<pos:position pos:line="71" pos:column="17"/></operator> <name pos:line="71" pos:column="18">CURL_SOCKET_BAD<pos:position pos:line="71" pos:column="33"/></name></expr>)<pos:position pos:line="71" pos:column="34"/></condition><then pos:line="71" pos:column="34"> <block pos:line="71" pos:column="35">{
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">VERIFY_SOCK<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">writefd<pos:position pos:line="72" pos:column="24"/></name></expr></argument>)<pos:position pos:line="72" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">FD_SET<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><name pos:line="73" pos:column="12">writefd<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="21">&amp;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="22">fds_write<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">FD_SET<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">(<argument><expr><name pos:line="74" pos:column="12">writefd<pos:position pos:line="74" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="21">&amp;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="22">fds_err<pos:position pos:line="74" pos:column="29"/></name></expr></argument>)<pos:position pos:line="74" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">writefd<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">&gt;<pos:position pos:line="75" pos:column="21"/></operator> <name pos:line="75" pos:column="19">maxfd<pos:position pos:line="75" pos:column="24"/></name></expr>)<pos:position pos:line="75" pos:column="25"/></condition><then pos:line="75" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="7">maxfd<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <name pos:line="76" pos:column="15">writefd<pos:position pos:line="76" pos:column="22"/></name></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt></block></then></if>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <do pos:line="79" pos:column="3">do <block pos:line="79" pos:column="6">{
    <expr_stmt><expr><name pos:line="80" pos:column="5">r<pos:position pos:line="80" pos:column="6"/></name> <operator pos:line="80" pos:column="7">=<pos:position pos:line="80" pos:column="8"/></operator> <call><name pos:line="80" pos:column="9">select<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><operator pos:line="80" pos:column="16">(<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="17">int<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">)<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="21">maxfd<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">+<pos:position pos:line="80" pos:column="28"/></operator> <literal type="number" pos:line="80" pos:column="29">1<pos:position pos:line="80" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="32">&amp;<pos:position pos:line="80" pos:column="37"/></operator><name pos:line="80" pos:column="33">fds_read<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="43">&amp;<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="44">fds_write<pos:position pos:line="80" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="55">&amp;<pos:position pos:line="80" pos:column="60"/></operator><name pos:line="80" pos:column="56">fds_err<pos:position pos:line="80" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="65">&amp;<pos:position pos:line="80" pos:column="70"/></operator><name pos:line="80" pos:column="66">timeout<pos:position pos:line="80" pos:column="73"/></name></expr></argument>)<pos:position pos:line="80" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="81" pos:column="4"/></block> while<condition pos:line="81" pos:column="10">(<expr><operator pos:line="81" pos:column="11">(<pos:position pos:line="81" pos:column="12"/></operator><name pos:line="81" pos:column="12">r<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">==<pos:position pos:line="81" pos:column="16"/></operator> <operator pos:line="81" pos:column="17">-<pos:position pos:line="81" pos:column="18"/></operator><literal type="number" pos:line="81" pos:column="18">1<pos:position pos:line="81" pos:column="19"/></literal><operator pos:line="81" pos:column="19">)<pos:position pos:line="81" pos:column="20"/></operator> <operator pos:line="81" pos:column="21">&amp;&amp;<pos:position pos:line="81" pos:column="31"/></operator> <operator pos:line="81" pos:column="24">(<pos:position pos:line="81" pos:column="25"/></operator><call><name pos:line="81" pos:column="25">Curl_ourerrno<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">()<pos:position pos:line="81" pos:column="40"/></argument_list></call> <operator pos:line="81" pos:column="41">==<pos:position pos:line="81" pos:column="43"/></operator> <name pos:line="81" pos:column="44">EINTR<pos:position pos:line="81" pos:column="49"/></name><operator pos:line="81" pos:column="49">)<pos:position pos:line="81" pos:column="50"/></operator></expr>)<pos:position pos:line="81" pos:column="51"/></condition>;<pos:position pos:line="81" pos:column="52"/></do>

  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">r<pos:position pos:line="83" pos:column="8"/></name> <operator pos:line="83" pos:column="9">&lt;<pos:position pos:line="83" pos:column="13"/></operator> <literal type="number" pos:line="83" pos:column="11">0<pos:position pos:line="83" pos:column="12"/></literal></expr>)<pos:position pos:line="83" pos:column="13"/></condition><then pos:line="83" pos:column="13">
    <block type="pseudo"><return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">-<pos:position pos:line="84" pos:column="13"/></operator><literal type="number" pos:line="84" pos:column="13">1<pos:position pos:line="84" pos:column="14"/></literal></expr>;<pos:position pos:line="84" pos:column="15"/></return></block></then></if>
  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><name pos:line="85" pos:column="7">r<pos:position pos:line="85" pos:column="8"/></name> <operator pos:line="85" pos:column="9">==<pos:position pos:line="85" pos:column="11"/></operator> <literal type="number" pos:line="85" pos:column="12">0<pos:position pos:line="85" pos:column="13"/></literal></expr>)<pos:position pos:line="85" pos:column="14"/></condition><then pos:line="85" pos:column="14">
    <block type="pseudo"><return pos:line="86" pos:column="5">return <expr><literal type="number" pos:line="86" pos:column="12">0<pos:position pos:line="86" pos:column="13"/></literal></expr>;<pos:position pos:line="86" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="88" pos:column="3">ret<pos:position pos:line="88" pos:column="6"/></name> <operator pos:line="88" pos:column="7">=<pos:position pos:line="88" pos:column="8"/></operator> <literal type="number" pos:line="88" pos:column="9">0<pos:position pos:line="88" pos:column="10"/></literal></expr>;<pos:position pos:line="88" pos:column="11"/></expr_stmt>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><name pos:line="89" pos:column="7">readfd<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">!=<pos:position pos:line="89" pos:column="16"/></operator> <name pos:line="89" pos:column="17">CURL_SOCKET_BAD<pos:position pos:line="89" pos:column="32"/></name></expr>)<pos:position pos:line="89" pos:column="33"/></condition><then pos:line="89" pos:column="33"> <block pos:line="89" pos:column="34">{
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><call><name pos:line="90" pos:column="9">FD_ISSET<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">(<argument><expr><name pos:line="90" pos:column="18">readfd<pos:position pos:line="90" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="26">&amp;<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="27">fds_read<pos:position pos:line="90" pos:column="35"/></name></expr></argument>)<pos:position pos:line="90" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="37"/></condition><then pos:line="90" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="7">ret<pos:position pos:line="91" pos:column="10"/></name> <operator pos:line="91" pos:column="11">|=<pos:position pos:line="91" pos:column="13"/></operator> <name pos:line="91" pos:column="14">CSELECT_IN<pos:position pos:line="91" pos:column="24"/></name></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt></block></then></if>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><call><name pos:line="92" pos:column="9">FD_ISSET<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">readfd<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="26">&amp;<pos:position pos:line="92" pos:column="31"/></operator><name pos:line="92" pos:column="27">fds_err<pos:position pos:line="92" pos:column="34"/></name></expr></argument>)<pos:position pos:line="92" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="36"/></condition><then pos:line="92" pos:column="36">
      <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="7">ret<pos:position pos:line="93" pos:column="10"/></name> <operator pos:line="93" pos:column="11">|=<pos:position pos:line="93" pos:column="13"/></operator> <name pos:line="93" pos:column="14">CSELECT_ERR<pos:position pos:line="93" pos:column="25"/></name></expr>;<pos:position pos:line="93" pos:column="26"/></expr_stmt></block></then></if>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>
  <if pos:line="95" pos:column="3">if <condition pos:line="95" pos:column="6">(<expr><name pos:line="95" pos:column="7">writefd<pos:position pos:line="95" pos:column="14"/></name> <operator pos:line="95" pos:column="15">!=<pos:position pos:line="95" pos:column="17"/></operator> <name pos:line="95" pos:column="18">CURL_SOCKET_BAD<pos:position pos:line="95" pos:column="33"/></name></expr>)<pos:position pos:line="95" pos:column="34"/></condition><then pos:line="95" pos:column="34"> <block pos:line="95" pos:column="35">{
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><call><name pos:line="96" pos:column="9">FD_ISSET<pos:position pos:line="96" pos:column="17"/></name><argument_list pos:line="96" pos:column="17">(<argument><expr><name pos:line="96" pos:column="18">writefd<pos:position pos:line="96" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="27">&amp;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="28">fds_write<pos:position pos:line="96" pos:column="37"/></name></expr></argument>)<pos:position pos:line="96" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="39"/></condition><then pos:line="96" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="7">ret<pos:position pos:line="97" pos:column="10"/></name> <operator pos:line="97" pos:column="11">|=<pos:position pos:line="97" pos:column="13"/></operator> <name pos:line="97" pos:column="14">CSELECT_OUT<pos:position pos:line="97" pos:column="25"/></name></expr>;<pos:position pos:line="97" pos:column="26"/></expr_stmt></block></then></if>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><call><name pos:line="98" pos:column="9">FD_ISSET<pos:position pos:line="98" pos:column="17"/></name><argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">writefd<pos:position pos:line="98" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="27">&amp;<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="28">fds_err<pos:position pos:line="98" pos:column="35"/></name></expr></argument>)<pos:position pos:line="98" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="37"/></condition><then pos:line="98" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="7">ret<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">|=<pos:position pos:line="99" pos:column="13"/></operator> <name pos:line="99" pos:column="14">CSELECT_ERR<pos:position pos:line="99" pos:column="25"/></name></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt></block></then></if>
  }<pos:position pos:line="100" pos:column="4"/></block></then></if>

  <return pos:line="102" pos:column="3">return <expr><name pos:line="102" pos:column="10">ret<pos:position pos:line="102" pos:column="13"/></name></expr>;<pos:position pos:line="102" pos:column="14"/></return>
<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

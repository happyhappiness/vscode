<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1297_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ntlm_wb_init<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">connectdata<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">userp<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">curl_socket_t<pos:position pos:line="3" pos:column="16"/></name></type> <name><name pos:line="3" pos:column="17">sockfds<pos:position pos:line="3" pos:column="24"/></name><index pos:line="3" pos:column="24">[<expr><literal type="number" pos:line="3" pos:column="25">2<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">pid_t<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">child_pid<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">username<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">slash<pos:position pos:line="6" pos:column="14"/></name></decl>, <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="17">domain<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">ntlm_auth<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">ntlm_auth_alloc<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><call><name pos:line="9" pos:column="5">defined<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">HAVE_GETPWUID_R<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="33">defined<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">HAVE_GETEUID<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">passwd<pos:position pos:line="10" pos:column="16"/></name></name></type> <name pos:line="10" pos:column="17">pw<pos:position pos:line="10" pos:column="19"/></name></decl>, <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="22">pw_res<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">pwbuf<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><literal type="number" pos:line="11" pos:column="14">1024<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="14" pos:column="3">/* Return if communication with ntlm_auth already set up */</comment>
  <if pos:line="15" pos:column="3">if<condition pos:line="15" pos:column="5">(<expr><name><name pos:line="15" pos:column="6">conn<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">ntlm_auth_hlpr_socket<pos:position pos:line="15" pos:column="33"/></name></name> <operator pos:line="15" pos:column="34">!=<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">CURL_SOCKET_BAD<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">||<pos:position pos:line="15" pos:column="55"/></operator>
     <name><name pos:line="16" pos:column="6">conn<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">ntlm_auth_hlpr_pid<pos:position pos:line="16" pos:column="30"/></name></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">CURLE_OK<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">username<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">userp<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
  <comment type="block" pos:line="20" pos:column="3">/* The real ntlm_auth really doesn't like being invoked with an
     empty username. It won't make inferences for itself, and expects
     the client to do so (mostly because it's really designed for
     servers like squid to use for auth, and client support is an
     afterthought for it). So try hard to provide a suitable username
     if we don't already have one. But if we can't, provide the
     empty one anyway. Perhaps they have an implementation of the
     ntlm_auth helper which *doesn't* need it so we might as well try */</comment>
  <if pos:line="28" pos:column="3">if<condition pos:line="28" pos:column="5">(<expr><operator pos:line="28" pos:column="6">!<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">username<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">||<pos:position pos:line="28" pos:column="18"/></operator> <operator pos:line="28" pos:column="19">!<pos:position pos:line="28" pos:column="20"/></operator><name><name pos:line="28" pos:column="20">username<pos:position pos:line="28" pos:column="28"/></name><index pos:line="28" pos:column="28">[<expr><literal type="number" pos:line="28" pos:column="29">0<pos:position pos:line="28" pos:column="30"/></literal></expr>]<pos:position pos:line="28" pos:column="31"/></index></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <block pos:line="28" pos:column="33">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">username<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">getenv<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><literal type="string" pos:line="29" pos:column="23">"NTLMUSER"<pos:position pos:line="29" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><operator pos:line="30" pos:column="8">!<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">username<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">||<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><name><name pos:line="30" pos:column="22">username<pos:position pos:line="30" pos:column="30"/></name><index pos:line="30" pos:column="30">[<expr><literal type="number" pos:line="30" pos:column="31">0<pos:position pos:line="30" pos:column="32"/></literal></expr>]<pos:position pos:line="30" pos:column="33"/></index></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="7">username<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">getenv<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"LOGNAME"<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt></block></then></if>
    <if pos:line="32" pos:column="5">if<condition pos:line="32" pos:column="7">(<expr><operator pos:line="32" pos:column="8">!<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="9">username<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">||<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name><name pos:line="32" pos:column="22">username<pos:position pos:line="32" pos:column="30"/></name><index pos:line="32" pos:column="30">[<expr><literal type="number" pos:line="32" pos:column="31">0<pos:position pos:line="32" pos:column="32"/></literal></expr>]<pos:position pos:line="32" pos:column="33"/></index></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">username<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">getenv<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"USER"<pos:position pos:line="33" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt></block></then></if>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><call><name pos:line="34" pos:column="5">defined<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">HAVE_GETPWUID_R<pos:position pos:line="34" pos:column="28"/></name></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call> <operator pos:line="34" pos:column="30">&amp;&amp;<pos:position pos:line="34" pos:column="40"/></operator> <call><name pos:line="34" pos:column="33">defined<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">HAVE_GETEUID<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr></cpp:if>
    <if pos:line="35" pos:column="5">if<condition pos:line="35" pos:column="7">(<expr><operator pos:line="35" pos:column="8">(<pos:position pos:line="35" pos:column="9"/></operator><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">username<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">||<pos:position pos:line="35" pos:column="21"/></operator> <operator pos:line="35" pos:column="22">!<pos:position pos:line="35" pos:column="23"/></operator><name><name pos:line="35" pos:column="23">username<pos:position pos:line="35" pos:column="31"/></name><index pos:line="35" pos:column="31">[<expr><literal type="number" pos:line="35" pos:column="32">0<pos:position pos:line="35" pos:column="33"/></literal></expr>]<pos:position pos:line="35" pos:column="34"/></index></name><operator pos:line="35" pos:column="34">)<pos:position pos:line="35" pos:column="35"/></operator> <operator pos:line="35" pos:column="36">&amp;&amp;<pos:position pos:line="35" pos:column="46"/></operator>
       <operator pos:line="36" pos:column="8">!<pos:position pos:line="36" pos:column="9"/></operator><call><name pos:line="36" pos:column="9">getpwuid_r<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><call><name pos:line="36" pos:column="20">geteuid<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">()<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="36" pos:column="31">&amp;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="32">pw<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="36">pwbuf<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="43">sizeof<argument_list pos:line="36" pos:column="49">(<argument><expr><name pos:line="36" pos:column="50">pwbuf<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="36" pos:column="58">&amp;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="59">pw_res<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call> <operator pos:line="36" pos:column="67">&amp;&amp;<pos:position pos:line="36" pos:column="77"/></operator>
       <name pos:line="37" pos:column="8">pw_res<pos:position pos:line="37" pos:column="14"/></name></expr>)<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15"> <block pos:line="37" pos:column="16">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">username<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name><name pos:line="38" pos:column="18">pw<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">pw_name<pos:position pos:line="38" pos:column="28"/></name></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">!<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">username<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">||<pos:position pos:line="41" pos:column="20"/></operator> <operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><name><name pos:line="41" pos:column="22">username<pos:position pos:line="41" pos:column="30"/></name><index pos:line="41" pos:column="30">[<expr><literal type="number" pos:line="41" pos:column="31">0<pos:position pos:line="41" pos:column="32"/></literal></expr>]<pos:position pos:line="41" pos:column="33"/></index></name></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">username<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">userp<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt></block></then></if>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="44" pos:column="3">slash<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">strpbrk<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">username<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="29">"\\/"<pos:position pos:line="44" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name pos:line="45" pos:column="6">slash<pos:position pos:line="45" pos:column="11"/></name></expr>)<pos:position pos:line="45" pos:column="12"/></condition><then pos:line="45" pos:column="12"> <block pos:line="45" pos:column="13">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">domain<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">strdup<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">username<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><operator pos:line="47" pos:column="8">!<pos:position pos:line="47" pos:column="9"/></operator><name pos:line="47" pos:column="9">domain<pos:position pos:line="47" pos:column="15"/></name></expr>)<pos:position pos:line="47" pos:column="16"/></condition><then pos:line="47" pos:column="16">
      <block type="pseudo"><return pos:line="48" pos:column="7">return <expr><name pos:line="48" pos:column="14">CURLE_OUT_OF_MEMORY<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="49" pos:column="5">slash<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <name pos:line="49" pos:column="13">domain<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">+<pos:position pos:line="49" pos:column="21"/></operator> <operator pos:line="49" pos:column="22">(<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="23">slash<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">-<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="31">username<pos:position pos:line="49" pos:column="39"/></name><operator pos:line="49" pos:column="39">)<pos:position pos:line="49" pos:column="40"/></operator></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">slash<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <literal type="char" pos:line="50" pos:column="14">'\0'<pos:position pos:line="50" pos:column="18"/></literal></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">username<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <name pos:line="51" pos:column="16">username<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">+<pos:position pos:line="51" pos:column="26"/></operator> <operator pos:line="51" pos:column="27">(<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">slash<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">-<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="36">domain<pos:position pos:line="51" pos:column="42"/></name><operator pos:line="51" pos:column="42">)<pos:position pos:line="51" pos:column="43"/></operator> <operator pos:line="51" pos:column="44">+<pos:position pos:line="51" pos:column="45"/></operator> <literal type="number" pos:line="51" pos:column="46">1<pos:position pos:line="51" pos:column="47"/></literal></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="54" pos:column="3">/* For testing purposes, when DEBUGBUILD is defined and environment
     variable CURL_NTLM_WB_FILE is set a fake_ntlm is used to perform
     NTLM challenge/response which only accepts commands and output
     strings pre-written in test case definitions */</comment>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">DEBUGBUILD<pos:position pos:line="58" pos:column="18"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="59" pos:column="3">ntlm_auth_alloc<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">curl_getenv<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><literal type="string" pos:line="59" pos:column="33">"CURL_NTLM_WB_FILE"<pos:position pos:line="59" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
  <if pos:line="60" pos:column="3">if<condition pos:line="60" pos:column="5">(<expr><name pos:line="60" pos:column="6">ntlm_auth_alloc<pos:position pos:line="60" pos:column="21"/></name></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="5">ntlm_auth<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <name pos:line="61" pos:column="17">ntlm_auth_alloc<pos:position pos:line="61" pos:column="32"/></name></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="62" pos:column="3">else
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
    <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="5">ntlm_auth<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">NTLM_WB_FILE<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt></block></else></if>

  <if pos:line="66" pos:column="3">if<condition pos:line="66" pos:column="5">(<expr><call><name pos:line="66" pos:column="6">access<pos:position pos:line="66" pos:column="12"/></name><argument_list pos:line="66" pos:column="12">(<argument><expr><name pos:line="66" pos:column="13">ntlm_auth<pos:position pos:line="66" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="24">X_OK<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call> <operator pos:line="66" pos:column="30">!=<pos:position pos:line="66" pos:column="32"/></operator> <literal type="number" pos:line="66" pos:column="33">0<pos:position pos:line="66" pos:column="34"/></literal></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35"> <block pos:line="66" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">failf<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name><name pos:line="67" pos:column="11">conn<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">data<pos:position pos:line="67" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="23">"Could not access ntlm_auth: %s errno %d: %s"<pos:position pos:line="67" pos:column="68"/></literal></expr></argument>,
          <argument><expr><name pos:line="68" pos:column="11">ntlm_auth<pos:position pos:line="68" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="22">errno<pos:position pos:line="68" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="29">Curl_strerror<pos:position pos:line="68" pos:column="42"/></name><argument_list pos:line="68" pos:column="42">(<argument><expr><name pos:line="68" pos:column="43">conn<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="49">errno<pos:position pos:line="68" pos:column="54"/></name></expr></argument>)<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="57"/></expr_stmt>
    <goto pos:line="69" pos:column="5">goto <name pos:line="69" pos:column="10">done<pos:position pos:line="69" pos:column="14"/></name>;<pos:position pos:line="69" pos:column="15"/></goto>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if<condition pos:line="72" pos:column="5">(<expr><call><name pos:line="72" pos:column="6">socketpair<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">AF_UNIX<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="26">SOCK_STREAM<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="39">0<pos:position pos:line="72" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="42">sockfds<pos:position pos:line="72" pos:column="49"/></name></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="51"/></condition><then pos:line="72" pos:column="51"> <block pos:line="72" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">failf<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><name><name pos:line="73" pos:column="11">conn<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">data<pos:position pos:line="73" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="23">"Could not open socket pair. errno %d: %s"<pos:position pos:line="73" pos:column="65"/></literal></expr></argument>,
          <argument><expr><name pos:line="74" pos:column="11">errno<pos:position pos:line="74" pos:column="16"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="18">Curl_strerror<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">conn<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">errno<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt>
    <goto pos:line="75" pos:column="5">goto <name pos:line="75" pos:column="10">done<pos:position pos:line="75" pos:column="14"/></name>;<pos:position pos:line="75" pos:column="15"/></goto>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="78" pos:column="3">child_pid<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <call><name pos:line="78" pos:column="15">fork<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">()<pos:position pos:line="78" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="22"/></expr_stmt>
  <if pos:line="79" pos:column="3">if<condition pos:line="79" pos:column="5">(<expr><name pos:line="79" pos:column="6">child_pid<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">==<pos:position pos:line="79" pos:column="18"/></operator> <operator pos:line="79" pos:column="19">-<pos:position pos:line="79" pos:column="20"/></operator><literal type="number" pos:line="79" pos:column="20">1<pos:position pos:line="79" pos:column="21"/></literal></expr>)<pos:position pos:line="79" pos:column="22"/></condition><then pos:line="79" pos:column="22"> <block pos:line="79" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">sclose<pos:position pos:line="80" pos:column="11"/></name><argument_list pos:line="80" pos:column="11">(<argument><expr><name><name pos:line="80" pos:column="12">sockfds<pos:position pos:line="80" pos:column="19"/></name><index pos:line="80" pos:column="19">[<expr><literal type="number" pos:line="80" pos:column="20">0<pos:position pos:line="80" pos:column="21"/></literal></expr>]<pos:position pos:line="80" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">sclose<pos:position pos:line="81" pos:column="11"/></name><argument_list pos:line="81" pos:column="11">(<argument><expr><name><name pos:line="81" pos:column="12">sockfds<pos:position pos:line="81" pos:column="19"/></name><index pos:line="81" pos:column="19">[<expr><literal type="number" pos:line="81" pos:column="20">1<pos:position pos:line="81" pos:column="21"/></literal></expr>]<pos:position pos:line="81" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">failf<pos:position pos:line="82" pos:column="10"/></name><argument_list pos:line="82" pos:column="10">(<argument><expr><name><name pos:line="82" pos:column="11">conn<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">-&gt;<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="17">data<pos:position pos:line="82" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="23">"Could not fork. errno %d: %s"<pos:position pos:line="82" pos:column="53"/></literal></expr></argument>,
          <argument><expr><name pos:line="83" pos:column="11">errno<pos:position pos:line="83" pos:column="16"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="18">Curl_strerror<pos:position pos:line="83" pos:column="31"/></name><argument_list pos:line="83" pos:column="31">(<argument><expr><name pos:line="83" pos:column="32">conn<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="38">errno<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
    <goto pos:line="84" pos:column="5">goto <name pos:line="84" pos:column="10">done<pos:position pos:line="84" pos:column="14"/></name>;<pos:position pos:line="84" pos:column="15"/></goto>
  }<pos:position pos:line="85" pos:column="4"/></block></then>
  <elseif pos:line="86" pos:column="3">else <if pos:line="86" pos:column="8">if<condition pos:line="86" pos:column="10">(<expr><operator pos:line="86" pos:column="11">!<pos:position pos:line="86" pos:column="12"/></operator><name pos:line="86" pos:column="12">child_pid<pos:position pos:line="86" pos:column="21"/></name></expr>)<pos:position pos:line="86" pos:column="22"/></condition><then pos:line="86" pos:column="22"> <block pos:line="86" pos:column="23">{
    <comment type="block" pos:line="87" pos:column="5">/*
     * child process
     */</comment>

    <comment type="block" pos:line="91" pos:column="5">/* Don't use sclose in the child since it fools the socket leak detector */</comment>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">sclose_nolog<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name><name pos:line="92" pos:column="18">sockfds<pos:position pos:line="92" pos:column="25"/></name><index pos:line="92" pos:column="25">[<expr><literal type="number" pos:line="92" pos:column="26">0<pos:position pos:line="92" pos:column="27"/></literal></expr>]<pos:position pos:line="92" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="30"/></expr_stmt>
    <if pos:line="93" pos:column="5">if<condition pos:line="93" pos:column="7">(<expr><call><name pos:line="93" pos:column="8">dup2<pos:position pos:line="93" pos:column="12"/></name><argument_list pos:line="93" pos:column="12">(<argument><expr><name><name pos:line="93" pos:column="13">sockfds<pos:position pos:line="93" pos:column="20"/></name><index pos:line="93" pos:column="20">[<expr><literal type="number" pos:line="93" pos:column="21">1<pos:position pos:line="93" pos:column="22"/></literal></expr>]<pos:position pos:line="93" pos:column="23"/></index></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="25">STDIN_FILENO<pos:position pos:line="93" pos:column="37"/></name></expr></argument>)<pos:position pos:line="93" pos:column="38"/></argument_list></call> <operator pos:line="93" pos:column="39">==<pos:position pos:line="93" pos:column="41"/></operator> <operator pos:line="93" pos:column="42">-<pos:position pos:line="93" pos:column="43"/></operator><literal type="number" pos:line="93" pos:column="43">1<pos:position pos:line="93" pos:column="44"/></literal></expr>)<pos:position pos:line="93" pos:column="45"/></condition><then pos:line="93" pos:column="45"> <block pos:line="93" pos:column="46">{
      <expr_stmt><expr><call><name pos:line="94" pos:column="7">failf<pos:position pos:line="94" pos:column="12"/></name><argument_list pos:line="94" pos:column="12">(<argument><expr><name><name pos:line="94" pos:column="13">conn<pos:position pos:line="94" pos:column="17"/></name><operator pos:line="94" pos:column="17">-&gt;<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="19">data<pos:position pos:line="94" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="25">"Could not redirect child stdin. errno %d: %s"<pos:position pos:line="94" pos:column="71"/></literal></expr></argument>,
            <argument><expr><name pos:line="95" pos:column="13">errno<pos:position pos:line="95" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="95" pos:column="20">Curl_strerror<pos:position pos:line="95" pos:column="33"/></name><argument_list pos:line="95" pos:column="33">(<argument><expr><name pos:line="95" pos:column="34">conn<pos:position pos:line="95" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="40">errno<pos:position pos:line="95" pos:column="45"/></name></expr></argument>)<pos:position pos:line="95" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">exit<pos:position pos:line="96" pos:column="11"/></name><argument_list pos:line="96" pos:column="11">(<argument><expr><literal type="number" pos:line="96" pos:column="12">1<pos:position pos:line="96" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>

    <if pos:line="99" pos:column="5">if<condition pos:line="99" pos:column="7">(<expr><call><name pos:line="99" pos:column="8">dup2<pos:position pos:line="99" pos:column="12"/></name><argument_list pos:line="99" pos:column="12">(<argument><expr><name><name pos:line="99" pos:column="13">sockfds<pos:position pos:line="99" pos:column="20"/></name><index pos:line="99" pos:column="20">[<expr><literal type="number" pos:line="99" pos:column="21">1<pos:position pos:line="99" pos:column="22"/></literal></expr>]<pos:position pos:line="99" pos:column="23"/></index></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="25">STDOUT_FILENO<pos:position pos:line="99" pos:column="38"/></name></expr></argument>)<pos:position pos:line="99" pos:column="39"/></argument_list></call> <operator pos:line="99" pos:column="40">==<pos:position pos:line="99" pos:column="42"/></operator> <operator pos:line="99" pos:column="43">-<pos:position pos:line="99" pos:column="44"/></operator><literal type="number" pos:line="99" pos:column="44">1<pos:position pos:line="99" pos:column="45"/></literal></expr>)<pos:position pos:line="99" pos:column="46"/></condition><then pos:line="99" pos:column="46"> <block pos:line="99" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">failf<pos:position pos:line="100" pos:column="12"/></name><argument_list pos:line="100" pos:column="12">(<argument><expr><name><name pos:line="100" pos:column="13">conn<pos:position pos:line="100" pos:column="17"/></name><operator pos:line="100" pos:column="17">-&gt;<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="19">data<pos:position pos:line="100" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="25">"Could not redirect child stdout. errno %d: %s"<pos:position pos:line="100" pos:column="72"/></literal></expr></argument>,
            <argument><expr><name pos:line="101" pos:column="13">errno<pos:position pos:line="101" pos:column="18"/></name></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="20">Curl_strerror<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">conn<pos:position pos:line="101" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="40">errno<pos:position pos:line="101" pos:column="45"/></name></expr></argument>)<pos:position pos:line="101" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="102" pos:column="7">exit<pos:position pos:line="102" pos:column="11"/></name><argument_list pos:line="102" pos:column="11">(<argument><expr><literal type="number" pos:line="102" pos:column="12">1<pos:position pos:line="102" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then></if>

    <if pos:line="105" pos:column="5">if<condition pos:line="105" pos:column="7">(<expr><name pos:line="105" pos:column="8">domain<pos:position pos:line="105" pos:column="14"/></name></expr>)<pos:position pos:line="105" pos:column="15"/></condition><then pos:line="105" pos:column="15">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="7">execl<pos:position pos:line="106" pos:column="12"/></name><argument_list pos:line="106" pos:column="12">(<argument><expr><name pos:line="106" pos:column="13">ntlm_auth<pos:position pos:line="106" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="24">ntlm_auth<pos:position pos:line="106" pos:column="33"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="107" pos:column="13">"--helper-protocol"<pos:position pos:line="107" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="34">"ntlmssp-client-1"<pos:position pos:line="107" pos:column="52"/></literal></expr></argument>,
            <argument><expr><literal type="string" pos:line="108" pos:column="13">"--use-cached-creds"<pos:position pos:line="108" pos:column="33"/></literal></expr></argument>,
            <argument><expr><literal type="string" pos:line="109" pos:column="13">"--username"<pos:position pos:line="109" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="27">username<pos:position pos:line="109" pos:column="35"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="110" pos:column="13">"--domain"<pos:position pos:line="110" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="25">domain<pos:position pos:line="110" pos:column="31"/></name></expr></argument>,
            <argument><expr><name pos:line="111" pos:column="13">NULL<pos:position pos:line="111" pos:column="17"/></name></expr></argument>)<pos:position pos:line="111" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="112" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="7">execl<pos:position pos:line="113" pos:column="12"/></name><argument_list pos:line="113" pos:column="12">(<argument><expr><name pos:line="113" pos:column="13">ntlm_auth<pos:position pos:line="113" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="24">ntlm_auth<pos:position pos:line="113" pos:column="33"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="114" pos:column="13">"--helper-protocol"<pos:position pos:line="114" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="34">"ntlmssp-client-1"<pos:position pos:line="114" pos:column="52"/></literal></expr></argument>,
            <argument><expr><literal type="string" pos:line="115" pos:column="13">"--use-cached-creds"<pos:position pos:line="115" pos:column="33"/></literal></expr></argument>,
            <argument><expr><literal type="string" pos:line="116" pos:column="13">"--username"<pos:position pos:line="116" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="27">username<pos:position pos:line="116" pos:column="35"/></name></expr></argument>,
            <argument><expr><name pos:line="117" pos:column="13">NULL<pos:position pos:line="117" pos:column="17"/></name></expr></argument>)<pos:position pos:line="117" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="19"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="119" pos:column="5">sclose_nolog<pos:position pos:line="119" pos:column="17"/></name><argument_list pos:line="119" pos:column="17">(<argument><expr><name><name pos:line="119" pos:column="18">sockfds<pos:position pos:line="119" pos:column="25"/></name><index pos:line="119" pos:column="25">[<expr><literal type="number" pos:line="119" pos:column="26">1<pos:position pos:line="119" pos:column="27"/></literal></expr>]<pos:position pos:line="119" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="119" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="120" pos:column="5">failf<pos:position pos:line="120" pos:column="10"/></name><argument_list pos:line="120" pos:column="10">(<argument><expr><name><name pos:line="120" pos:column="11">conn<pos:position pos:line="120" pos:column="15"/></name><operator pos:line="120" pos:column="15">-&gt;<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="17">data<pos:position pos:line="120" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="23">"Could not execl(). errno %d: %s"<pos:position pos:line="120" pos:column="56"/></literal></expr></argument>,
          <argument><expr><name pos:line="121" pos:column="11">errno<pos:position pos:line="121" pos:column="16"/></name></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="18">Curl_strerror<pos:position pos:line="121" pos:column="31"/></name><argument_list pos:line="121" pos:column="31">(<argument><expr><name pos:line="121" pos:column="32">conn<pos:position pos:line="121" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="38">errno<pos:position pos:line="121" pos:column="43"/></name></expr></argument>)<pos:position pos:line="121" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">exit<pos:position pos:line="122" pos:column="9"/></name><argument_list pos:line="122" pos:column="9">(<argument><expr><literal type="number" pos:line="122" pos:column="10">1<pos:position pos:line="122" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="123" pos:column="4"/></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="125" pos:column="3">sclose<pos:position pos:line="125" pos:column="9"/></name><argument_list pos:line="125" pos:column="9">(<argument><expr><name><name pos:line="125" pos:column="10">sockfds<pos:position pos:line="125" pos:column="17"/></name><index pos:line="125" pos:column="17">[<expr><literal type="number" pos:line="125" pos:column="18">1<pos:position pos:line="125" pos:column="19"/></literal></expr>]<pos:position pos:line="125" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="125" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="126" pos:column="3">conn<pos:position pos:line="126" pos:column="7"/></name><operator pos:line="126" pos:column="7">-&gt;<pos:position pos:line="126" pos:column="12"/></operator><name pos:line="126" pos:column="9">ntlm_auth_hlpr_socket<pos:position pos:line="126" pos:column="30"/></name></name> <operator pos:line="126" pos:column="31">=<pos:position pos:line="126" pos:column="32"/></operator> <name><name pos:line="126" pos:column="33">sockfds<pos:position pos:line="126" pos:column="40"/></name><index pos:line="126" pos:column="40">[<expr><literal type="number" pos:line="126" pos:column="41">0<pos:position pos:line="126" pos:column="42"/></literal></expr>]<pos:position pos:line="126" pos:column="43"/></index></name></expr>;<pos:position pos:line="126" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="127" pos:column="3">conn<pos:position pos:line="127" pos:column="7"/></name><operator pos:line="127" pos:column="7">-&gt;<pos:position pos:line="127" pos:column="12"/></operator><name pos:line="127" pos:column="9">ntlm_auth_hlpr_pid<pos:position pos:line="127" pos:column="27"/></name></name> <operator pos:line="127" pos:column="28">=<pos:position pos:line="127" pos:column="29"/></operator> <name pos:line="127" pos:column="30">child_pid<pos:position pos:line="127" pos:column="39"/></name></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">free<pos:position pos:line="128" pos:column="7"/></name><argument_list pos:line="128" pos:column="7">(<argument><expr><name pos:line="128" pos:column="8">domain<pos:position pos:line="128" pos:column="14"/></name></expr></argument>)<pos:position pos:line="128" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="129" pos:column="3">free<pos:position pos:line="129" pos:column="7"/></name><argument_list pos:line="129" pos:column="7">(<argument><expr><name pos:line="129" pos:column="8">ntlm_auth_alloc<pos:position pos:line="129" pos:column="23"/></name></expr></argument>)<pos:position pos:line="129" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="25"/></expr_stmt>
  <return pos:line="130" pos:column="3">return <expr><name pos:line="130" pos:column="10">CURLE_OK<pos:position pos:line="130" pos:column="18"/></name></expr>;<pos:position pos:line="130" pos:column="19"/></return>

<label><name pos:line="132" pos:column="1">done<pos:position pos:line="132" pos:column="5"/></name>:<pos:position pos:line="132" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="133" pos:column="3">free<pos:position pos:line="133" pos:column="7"/></name><argument_list pos:line="133" pos:column="7">(<argument><expr><name pos:line="133" pos:column="8">domain<pos:position pos:line="133" pos:column="14"/></name></expr></argument>)<pos:position pos:line="133" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="134" pos:column="3">free<pos:position pos:line="134" pos:column="7"/></name><argument_list pos:line="134" pos:column="7">(<argument><expr><name pos:line="134" pos:column="8">ntlm_auth_alloc<pos:position pos:line="134" pos:column="23"/></name></expr></argument>)<pos:position pos:line="134" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="25"/></expr_stmt>
  <return pos:line="135" pos:column="3">return <expr><name pos:line="135" pos:column="10">CURLE_REMOTE_ACCESS_DENIED<pos:position pos:line="135" pos:column="36"/></name></expr>;<pos:position pos:line="135" pos:column="37"/></return>
}<pos:position pos:line="136" pos:column="2"/></block></function></unit>

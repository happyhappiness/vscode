<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1429_curl-7.41.0.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">curl_hash<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name pos:line="2" pos:column="1">Curl_hash_alloc<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">slots<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="3" pos:column="17">hash_function<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">hfunc<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="4" pos:column="17">comp_function<pos:position pos:line="4" pos:column="30"/></name></type> <name pos:line="4" pos:column="31">comparator<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="5" pos:column="17">curl_hash_dtor<pos:position pos:line="5" pos:column="31"/></name></type> <name pos:line="5" pos:column="32">dtor<pos:position pos:line="5" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="37"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">curl_hash<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">h<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><operator pos:line="9" pos:column="6">!<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">slots<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">||<pos:position pos:line="9" pos:column="15"/></operator> <operator pos:line="9" pos:column="16">!<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">hfunc<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">||<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">!<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">comparator<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">||<pos:position pos:line="9" pos:column="40"/></operator><operator pos:line="9" pos:column="40">!<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">dtor<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return> <comment type="block" pos:line="10" pos:column="18">/* failure */</comment>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">h<pos:position pos:line="13" pos:column="4"/></name> <operator pos:line="13" pos:column="5">=<pos:position pos:line="13" pos:column="6"/></operator> <call><name pos:line="13" pos:column="7">malloc<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><sizeof pos:line="13" pos:column="14">sizeof<argument_list pos:line="13" pos:column="20">(<argument><expr pos:line="13" pos:column="21">struct <name pos:line="13" pos:column="28">curl_hash<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">h<pos:position pos:line="14" pos:column="7"/></name></expr>)<pos:position pos:line="14" pos:column="8"/></condition><then pos:line="14" pos:column="8"> <block pos:line="14" pos:column="9">{
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><call><name pos:line="15" pos:column="8">Curl_hash_init<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">h<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">slots<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">hfunc<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">comparator<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">dtor<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58"> <block pos:line="15" pos:column="59">{
      <comment type="block" pos:line="16" pos:column="7">/* failure */</comment>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">free<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">h<pos:position pos:line="17" pos:column="13"/></name></expr></argument>)<pos:position pos:line="17" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">h<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">NULL<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <return pos:line="22" pos:column="3">return <expr><name pos:line="22" pos:column="10">h<pos:position pos:line="22" pos:column="11"/></name></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

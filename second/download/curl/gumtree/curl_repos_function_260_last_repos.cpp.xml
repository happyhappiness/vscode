<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_260_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">read_callback<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ptr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">size<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">size_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">nmemb<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">userp<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">WriteThis<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">upload<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><operator pos:line="3" pos:column="30">(<pos:position pos:line="3" pos:column="31"/></operator>struct <name pos:line="3" pos:column="38">WriteThis<pos:position pos:line="3" pos:column="47"/></name> <operator pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></operator><operator pos:line="3" pos:column="49">)<pos:position pos:line="3" pos:column="50"/></operator><name pos:line="3" pos:column="50">userp<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">max<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">size<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">nmemb<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">max<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">&lt;<pos:position pos:line="6" pos:column="14"/></operator> <literal type="number" pos:line="6" pos:column="12">1<pos:position pos:line="6" pos:column="13"/></literal></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if<condition pos:line="9" pos:column="5">(<expr><name><name pos:line="9" pos:column="6">upload<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">sizeleft<pos:position pos:line="9" pos:column="22"/></name></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">copylen<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">max<pos:position pos:line="10" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name pos:line="11" pos:column="8">copylen<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&gt;<pos:position pos:line="11" pos:column="20"/></operator> <name><name pos:line="11" pos:column="18">upload<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">sizeleft<pos:position pos:line="11" pos:column="34"/></name></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">copylen<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">upload<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">sizeleft<pos:position pos:line="12" pos:column="33"/></name></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memcpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">ptr<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="17">upload<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">readptr<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">copylen<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">upload<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">readptr<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">+=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">copylen<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">upload<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">sizeleft<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">-=<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">copylen<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">copylen<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <return pos:line="19" pos:column="3">return <expr><literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></return>                          <comment type="block" pos:line="19" pos:column="38">/* no more data left to deliver */</comment>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

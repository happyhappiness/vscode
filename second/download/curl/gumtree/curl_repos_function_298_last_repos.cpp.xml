<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_298_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">thdbufdestroy<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier> <specifier pos:line="2" pos:column="22">private<pos:position pos:line="2" pos:column="29"/></specifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>

<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if<condition pos:line="5" pos:column="5">(<expr><specifier pos:line="5" pos:column="6">private<pos:position pos:line="5" pos:column="13"/></specifier></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14"> <block pos:line="5" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">buffer_t<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type> <name pos:line="6" pos:column="16">p<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><operator pos:line="6" pos:column="20">(<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">buffer_t<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator> <specifier pos:line="6" pos:column="33">private<pos:position pos:line="6" pos:column="40"/></specifier></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">localkey_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <for pos:line="9" pos:column="5">for<control pos:line="9" pos:column="8">(<init><expr><name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">localkey_t<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></init> <condition><expr><name pos:line="9" pos:column="29">i<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&lt;<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="33">LK_LAST<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></condition> <incr><expr><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">++<pos:position pos:line="9" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="46"/></control> <block pos:line="9" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">free<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">buf<pos:position pos:line="10" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">p<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">++<pos:position pos:line="11" pos:column="10"/></operator></expr>;<pos:position pos:line="11" pos:column="11"/></expr_stmt>
      }<pos:position pos:line="12" pos:column="8"/></block></for>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">free<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><specifier pos:line="14" pos:column="10">private<pos:position pos:line="14" pos:column="17"/></specifier></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

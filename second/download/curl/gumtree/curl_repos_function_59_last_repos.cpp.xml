<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_59_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier> <specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier></type> <name><name pos:line="1" pos:column="33">argv<pos:position pos:line="1" pos:column="37"/></name><index pos:line="1" pos:column="37">[]<pos:position pos:line="1" pos:column="39"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="3" pos:column="5">1<pos:position pos:line="3" pos:column="6"/></literal></expr></cpp:if>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">transport<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="string" pos:line="4" pos:column="27">"RTP/AVP;unicast;client_port=1234-1235"<pos:position pos:line="4" pos:column="66"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="69">/* UDP */</comment>
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else>
  <comment type="block" pos:line="6" pos:column="3">/* TCP */</comment>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">transport<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="string" pos:line="7" pos:column="27">"RTP/AVP/TCP;unicast;client_port=1234-1235"<pos:position pos:line="7" pos:column="70"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="71"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">range<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="string" pos:line="9" pos:column="23">"0.000-"<pos:position pos:line="9" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">rc<pos:position pos:line="10" pos:column="9"/></name> <init pos:line="10" pos:column="10">= <expr><name pos:line="10" pos:column="12">EXIT_SUCCESS<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">base_name<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">printf<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><literal type="string" pos:line="13" pos:column="10">"\nRTSP request %s\n"<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">VERSION_STR<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">printf<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><literal type="string" pos:line="14" pos:column="10">"    Project web site: http://code.google.com/p/rtsprequest/\n"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">printf<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><literal type="string" pos:line="15" pos:column="10">"    Requires curl V7.20 or greater\n\n"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* check command line */</comment>
  <if pos:line="18" pos:column="3">if<condition pos:line="18" pos:column="5">(<expr><operator pos:line="18" pos:column="6">(<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">argc<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">!=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">2<pos:position pos:line="18" pos:column="16"/></literal><operator pos:line="18" pos:column="16">)<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">&amp;&amp;<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">argc<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">!=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">3<pos:position pos:line="18" pos:column="31"/></literal><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">base_name<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">strrchr<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name><name pos:line="19" pos:column="25">argv<pos:position pos:line="19" pos:column="29"/></name><index pos:line="19" pos:column="29">[<expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr>]<pos:position pos:line="19" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="34">'/'<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><name pos:line="20" pos:column="8">base_name<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">NULL<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26"> <block pos:line="20" pos:column="27">{
      <expr_stmt><expr><name pos:line="21" pos:column="7">base_name<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <call><name pos:line="21" pos:column="19">strrchr<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name><name pos:line="21" pos:column="27">argv<pos:position pos:line="21" pos:column="31"/></name><index pos:line="21" pos:column="31">[<expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>]<pos:position pos:line="21" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="36">'\\'<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name pos:line="23" pos:column="8">base_name<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">==<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">NULL<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">base_name<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name><name pos:line="24" pos:column="19">argv<pos:position pos:line="24" pos:column="23"/></name><index pos:line="24" pos:column="23">[<expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>]<pos:position pos:line="24" pos:column="26"/></index></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">base_name<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">++<pos:position pos:line="27" pos:column="18"/></operator></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">printf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"Usage:   %s url [transport]\n"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">base_name<pos:position pos:line="29" pos:column="54"/></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">printf<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="string" pos:line="30" pos:column="12">"         url of video server\n"<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">printf<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="string" pos:line="31" pos:column="12">"         transport (optional) specifier for media stream"<pos:position pos:line="31" pos:column="70"/></literal>
           <literal type="string" pos:line="32" pos:column="12">" protocol\n"<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">printf<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"         default transport: %s\n"<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">transport<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">printf<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="string" pos:line="34" pos:column="12">"Example: %s rtsp://192.168.0.2/media/video1\n\n"<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">base_name<pos:position pos:line="34" pos:column="72"/></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <name pos:line="35" pos:column="10">EXIT_FAILURE<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then>
  <else pos:line="37" pos:column="3">else <block pos:line="37" pos:column="8">{
    <decl_stmt><decl><type><specifier pos:line="38" pos:column="5">const<pos:position pos:line="38" pos:column="10"/></specifier> <name pos:line="38" pos:column="11">char<pos:position pos:line="38" pos:column="15"/></name> <modifier pos:line="38" pos:column="16">*<pos:position pos:line="38" pos:column="17"/></modifier></type><name pos:line="38" pos:column="17">url<pos:position pos:line="38" pos:column="20"/></name> <init pos:line="38" pos:column="21">= <expr><name><name pos:line="38" pos:column="23">argv<pos:position pos:line="38" pos:column="27"/></name><index pos:line="38" pos:column="27">[<expr><literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal></expr>]<pos:position pos:line="38" pos:column="30"/></index></name></expr></init></decl>;<pos:position pos:line="38" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">char<pos:position pos:line="39" pos:column="9"/></name> <modifier pos:line="39" pos:column="10">*<pos:position pos:line="39" pos:column="11"/></modifier></type><name pos:line="39" pos:column="11">uri<pos:position pos:line="39" pos:column="14"/></name> <init pos:line="39" pos:column="15">= <expr><call><name pos:line="39" pos:column="17">malloc<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><call><name pos:line="39" pos:column="24">strlen<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">url<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call> <operator pos:line="39" pos:column="36">+<pos:position pos:line="39" pos:column="37"/></operator> <literal type="number" pos:line="39" pos:column="38">32<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">char<pos:position pos:line="40" pos:column="9"/></name> <modifier pos:line="40" pos:column="10">*<pos:position pos:line="40" pos:column="11"/></modifier></type><name pos:line="40" pos:column="11">sdp_filename<pos:position pos:line="40" pos:column="23"/></name> <init pos:line="40" pos:column="24">= <expr><call><name pos:line="40" pos:column="26">malloc<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><call><name pos:line="40" pos:column="33">strlen<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name pos:line="40" pos:column="40">url<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call> <operator pos:line="40" pos:column="45">+<pos:position pos:line="40" pos:column="46"/></operator> <literal type="number" pos:line="40" pos:column="47">32<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">char<pos:position pos:line="41" pos:column="9"/></name> <modifier pos:line="41" pos:column="10">*<pos:position pos:line="41" pos:column="11"/></modifier></type><name pos:line="41" pos:column="11">control<pos:position pos:line="41" pos:column="18"/></name> <init pos:line="41" pos:column="19">= <expr><call><name pos:line="41" pos:column="21">malloc<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><call><name pos:line="41" pos:column="28">strlen<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">url<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call> <operator pos:line="41" pos:column="40">+<pos:position pos:line="41" pos:column="41"/></operator> <literal type="number" pos:line="41" pos:column="42">32<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">CURLcode<pos:position pos:line="42" pos:column="13"/></name></type> <name pos:line="42" pos:column="14">res<pos:position pos:line="42" pos:column="17"/></name></decl>;<pos:position pos:line="42" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">get_sdp_filename<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">url<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">sdp_filename<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="41">strlen<pos:position pos:line="43" pos:column="47"/></name><argument_list pos:line="43" pos:column="47">(<argument><expr><name pos:line="43" pos:column="48">url<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call> <operator pos:line="43" pos:column="53">+<pos:position pos:line="43" pos:column="54"/></operator> <literal type="number" pos:line="43" pos:column="55">32<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
    <if pos:line="44" pos:column="5">if<condition pos:line="44" pos:column="7">(<expr><name pos:line="44" pos:column="8">argc<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">==<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">3<pos:position pos:line="44" pos:column="17"/></literal></expr>)<pos:position pos:line="44" pos:column="18"/></condition><then pos:line="44" pos:column="18"> <block pos:line="44" pos:column="19">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">transport<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name><name pos:line="45" pos:column="19">argv<pos:position pos:line="45" pos:column="23"/></name><index pos:line="45" pos:column="23">[<expr><literal type="number" pos:line="45" pos:column="24">2<pos:position pos:line="45" pos:column="25"/></literal></expr>]<pos:position pos:line="45" pos:column="26"/></index></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* initialize curl */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">res<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <call><name pos:line="49" pos:column="11">curl_global_init<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">CURL_GLOBAL_ALL<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
    <if pos:line="50" pos:column="5">if<condition pos:line="50" pos:column="7">(<expr><name pos:line="50" pos:column="8">res<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">==<pos:position pos:line="50" pos:column="14"/></operator> <name pos:line="50" pos:column="15">CURLE_OK<pos:position pos:line="50" pos:column="23"/></name></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24"> <block pos:line="50" pos:column="25">{
      <decl_stmt><decl><type><name pos:line="51" pos:column="7">curl_version_info_data<pos:position pos:line="51" pos:column="29"/></name> <modifier pos:line="51" pos:column="30">*<pos:position pos:line="51" pos:column="31"/></modifier></type><name pos:line="51" pos:column="31">data<pos:position pos:line="51" pos:column="35"/></name> <init pos:line="51" pos:column="36">= <expr><call><name pos:line="51" pos:column="38">curl_version_info<pos:position pos:line="51" pos:column="55"/></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name pos:line="51" pos:column="56">CURLVERSION_NOW<pos:position pos:line="51" pos:column="71"/></name></expr></argument>)<pos:position pos:line="51" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="73"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">CURL<pos:position pos:line="52" pos:column="11"/></name> <modifier pos:line="52" pos:column="12">*<pos:position pos:line="52" pos:column="13"/></modifier></type><name pos:line="52" pos:column="13">curl<pos:position pos:line="52" pos:column="17"/></name></decl>;<pos:position pos:line="52" pos:column="18"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">fprintf<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">stderr<pos:position pos:line="53" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="23">"    curl V%s loaded\n"<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="48">data<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">version<pos:position pos:line="53" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>

      <comment type="block" pos:line="55" pos:column="7">/* initialize this curl session */</comment>
      <expr_stmt><expr><name pos:line="56" pos:column="7">curl<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">=<pos:position pos:line="56" pos:column="13"/></operator> <call><name pos:line="56" pos:column="14">curl_easy_init<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">()<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
      <if pos:line="57" pos:column="7">if<condition pos:line="57" pos:column="9">(<expr><name pos:line="57" pos:column="10">curl<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">!=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">NULL<pos:position pos:line="57" pos:column="22"/></name></expr>)<pos:position pos:line="57" pos:column="23"/></condition><then pos:line="57" pos:column="23"> <block pos:line="57" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">my_curl_easy_setopt<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">curl<pos:position pos:line="58" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="35">CURLOPT_VERBOSE<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="52">0L<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">my_curl_easy_setopt<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">curl<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">CURLOPT_NOPROGRESS<pos:position pos:line="59" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="55">1L<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">my_curl_easy_setopt<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">curl<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">CURLOPT_HEADERDATA<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">stdout<pos:position pos:line="60" pos:column="61"/></name></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">my_curl_easy_setopt<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">curl<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="35">CURLOPT_URL<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">url<pos:position pos:line="61" pos:column="51"/></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>

        <comment type="block" pos:line="63" pos:column="9">/* request server options */</comment>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">snprintf<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">uri<pos:position pos:line="64" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="23">strlen<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">url<pos:position pos:line="64" pos:column="33"/></name></expr></argument>)<pos:position pos:line="64" pos:column="34"/></argument_list></call> <operator pos:line="64" pos:column="35">+<pos:position pos:line="64" pos:column="36"/></operator> <literal type="number" pos:line="64" pos:column="37">32<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="41">"%s"<pos:position pos:line="64" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">url<pos:position pos:line="64" pos:column="50"/></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">rtsp_options<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">curl<pos:position pos:line="65" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="28">uri<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="67" pos:column="9">/* request session description and write response to sdp file */</comment>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">rtsp_describe<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">curl<pos:position pos:line="68" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="29">uri<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="34">sdp_filename<pos:position pos:line="68" pos:column="46"/></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="48"/></expr_stmt>

        <comment type="block" pos:line="70" pos:column="9">/* get media control attribute from sdp file */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">get_media_control_attribute<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name pos:line="71" pos:column="37">sdp_filename<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">control<pos:position pos:line="71" pos:column="58"/></name></expr></argument>)<pos:position pos:line="71" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="73" pos:column="9">/* setup media stream */</comment>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">snprintf<pos:position pos:line="74" pos:column="17"/></name><argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">uri<pos:position pos:line="74" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="23">strlen<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">url<pos:position pos:line="74" pos:column="33"/></name></expr></argument>)<pos:position pos:line="74" pos:column="34"/></argument_list></call> <operator pos:line="74" pos:column="35">+<pos:position pos:line="74" pos:column="36"/></operator> <literal type="number" pos:line="74" pos:column="37">32<pos:position pos:line="74" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="41">"%s/%s"<pos:position pos:line="74" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">url<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="55">control<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">rtsp_setup<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">curl<pos:position pos:line="75" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="26">uri<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">transport<pos:position pos:line="75" pos:column="40"/></name></expr></argument>)<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>

        <comment type="block" pos:line="77" pos:column="9">/* start playing media stream */</comment>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">snprintf<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">(<argument><expr><name pos:line="78" pos:column="18">uri<pos:position pos:line="78" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="23">strlen<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><name pos:line="78" pos:column="30">url<pos:position pos:line="78" pos:column="33"/></name></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call> <operator pos:line="78" pos:column="35">+<pos:position pos:line="78" pos:column="36"/></operator> <literal type="number" pos:line="78" pos:column="37">32<pos:position pos:line="78" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="41">"%s/"<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">url<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">rtsp_play<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name pos:line="79" pos:column="19">curl<pos:position pos:line="79" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="25">uri<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">range<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">printf<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><literal type="string" pos:line="80" pos:column="16">"Playing video, press any key to stop ..."<pos:position pos:line="80" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">_getch<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">()<pos:position pos:line="81" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">printf<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><literal type="string" pos:line="82" pos:column="16">"\n"<pos:position pos:line="82" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="22"/></expr_stmt>

        <comment type="block" pos:line="84" pos:column="9">/* teardown session */</comment>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">rtsp_teardown<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">curl<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="29">uri<pos:position pos:line="85" pos:column="32"/></name></expr></argument>)<pos:position pos:line="85" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="87" pos:column="9">/* cleanup */</comment>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">curl_easy_cleanup<pos:position pos:line="88" pos:column="26"/></name><argument_list pos:line="88" pos:column="26">(<argument><expr><name pos:line="88" pos:column="27">curl<pos:position pos:line="88" pos:column="31"/></name></expr></argument>)<pos:position pos:line="88" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="89" pos:column="9">curl<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <name pos:line="89" pos:column="16">NULL<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
      }<pos:position pos:line="90" pos:column="8"/></block></then>
      <else pos:line="91" pos:column="7">else <block pos:line="91" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">fprintf<pos:position pos:line="92" pos:column="16"/></name><argument_list pos:line="92" pos:column="16">(<argument><expr><name pos:line="92" pos:column="17">stderr<pos:position pos:line="92" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="25">"curl_easy_init() failed\n"<pos:position pos:line="92" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
      }<pos:position pos:line="93" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="94" pos:column="7">curl_global_cleanup<pos:position pos:line="94" pos:column="26"/></name><argument_list pos:line="94" pos:column="26">()<pos:position pos:line="94" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then>
    <else pos:line="96" pos:column="5">else <block pos:line="96" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">fprintf<pos:position pos:line="97" pos:column="14"/></name><argument_list pos:line="97" pos:column="14">(<argument><expr><name pos:line="97" pos:column="15">stderr<pos:position pos:line="97" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="23">"curl_global_init(%s) failed: %d\n"<pos:position pos:line="97" pos:column="58"/></literal></expr></argument>,
              <argument><expr><literal type="string" pos:line="98" pos:column="15">"CURL_GLOBAL_ALL"<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="34">res<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">free<pos:position pos:line="100" pos:column="9"/></name><argument_list pos:line="100" pos:column="9">(<argument><expr><name pos:line="100" pos:column="10">control<pos:position pos:line="100" pos:column="17"/></name></expr></argument>)<pos:position pos:line="100" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">free<pos:position pos:line="101" pos:column="9"/></name><argument_list pos:line="101" pos:column="9">(<argument><expr><name pos:line="101" pos:column="10">sdp_filename<pos:position pos:line="101" pos:column="22"/></name></expr></argument>)<pos:position pos:line="101" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">free<pos:position pos:line="102" pos:column="9"/></name><argument_list pos:line="102" pos:column="9">(<argument><expr><name pos:line="102" pos:column="10">uri<pos:position pos:line="102" pos:column="13"/></name></expr></argument>)<pos:position pos:line="102" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="103" pos:column="4"/></block></else></if>

  <return pos:line="105" pos:column="3">return <expr><name pos:line="105" pos:column="10">rc<pos:position pos:line="105" pos:column="12"/></name></expr>;<pos:position pos:line="105" pos:column="13"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

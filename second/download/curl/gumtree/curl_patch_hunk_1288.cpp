 "               https://curl.haxx.se/docs/ssl-ciphers.html\n"
 "\n"
 , stdout);
  fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
+"       --compressed-ssh\n"
+"              (SCP SFTP) Enables built-in SSH compression.  This is a request,\n"
+"              not an order; the server may or may not do it.\n"
+"\n"
+"              Added in 7.56.0.\n"
+"\n"
 "       --compressed\n"
 "              (HTTP) Request a compressed response using one of the algorithms\n"
-"              curl  supports,  and  save  the  uncompressed document.  If this\n"
-"              option is used and the server  sends  an  unsupported  encoding,\n"
+"              curl supports, and save  the  uncompressed  document.   If  this\n"
+, stdout);
+ fputs(
+"              option  is  used  and  the server sends an unsupported encoding,\n"
 "              curl will report an error.\n"
 "\n"
 "       -K, --config <file>\n"
 "\n"
-"              Specify  a  text  file  to read curl arguments from. The command\n"
-, stdout);
- fputs(
-"              line arguments found in the text file will be used  as  if  they\n"
+"              Specify a text file to read curl  arguments  from.  The  command\n"
+"              line  arguments  found  in the text file will be used as if they\n"
 "              were provided on the command line.\n"
 "\n"
-"              Options  and their parameters must be specified on the same line\n"
-"              in the file, separated by whitespace, colon, or the equals sign.\n"
-"              Long  option  names  can  optionally be given in the config file\n"
-"              without the initial double dashes and if so, the colon or equals\n"
+"              Options and their parameters must be specified on the same  line\n"
 , stdout);
  fputs(
+"              in the file, separated by whitespace, colon, or the equals sign.\n"
+"              Long option names can optionally be given  in  the  config  file\n"
+"              without the initial double dashes and if so, the colon or equals\n"
 "              characters can be used as separators. If the option is specified\n"
-"              with one or two dashes, there can be no colon or equals  charac-\n"
+"              with  one or two dashes, there can be no colon or equals charac-\n"
 "              ter between the option and its parameter.\n"
 "\n"
-"              If the parameter is to contain whitespace, the parameter must be\n"
-"              enclosed within quotes.  Within  double  quotes,  the  following\n"
-"              escape  sequences  are  available:  \\\\, \\\", \\t, \\n, \\r and \\v. A\n"
 , stdout);
  fputs(
-"              backslash preceding any other letter is ignored.  If  the  first\n"
+"              If the parameter is to contain whitespace, the parameter must be\n"
+"              enclosed  within  quotes.  Within  double  quotes, the following\n"
+"              escape sequences are available: \\\\, \\\", \\t, \\n,  \\r  and  \\v.  A\n"
+"              backslash  preceding  any  other letter is ignored. If the first\n"
 "              column of a config line is a '#' character, the rest of the line\n"
 "              will be treated as a comment. Only write one option per physical\n"
+, stdout);
+ fputs(
 "              line in the config file.\n"
 "\n"
-"              Specify  the  filename  to -K, --config as '-' to make curl read\n"
+"              Specify the filename to -K, --config as '-' to  make  curl  read\n"
 "              the file from stdin.\n"
 "\n"
-"              Note that to be able to specify a URL in the  config  file,  you\n"
-, stdout);
- fputs(
-"              need  to  specify  it  using the --url option, and not by simply\n"
-"              writing the URL on its own line. So, it could  look  similar  to\n"
+"              Note  that  to  be able to specify a URL in the config file, you\n"
+"              need to specify it using the --url option,  and  not  by  simply\n"
+"              writing  the  URL  on its own line. So, it could look similar to\n"
 "              this:\n"
 "\n"
 "              url = \"https://curl.haxx.se/docs/\"\n"
 "\n"
-"              When  curl  is invoked, it (unless -q, --disable is used) checks\n"
+, stdout);
+ fputs(
+"              When curl is invoked, it (unless -q, --disable is  used)  checks\n"
 "              for a default config file and uses it if found. The default con-\n"
 "              fig file is checked for in the following places in this order:\n"
 "\n"
+"              1) curl tries to find the \"home dir\": It first  checks  for  the\n"
+"              CURL_HOME and then the HOME environment variables. Failing that,\n"
+"              it uses getpwuid() on Unix-like systems (which returns the  home\n"
 , stdout);
  fputs(
-"              1)  curl  tries  to find the \"home dir\": It first checks for the\n"
-"              CURL_HOME and then the HOME environment variables. Failing that,\n"
-"              it  uses getpwuid() on Unix-like systems (which returns the home\n"
-"              dir given the current user in your system). On Windows, it  then\n"
+"              dir  given the current user in your system). On Windows, it then\n"
 "              checks for the APPDATA variable, or as a last resort the '%USER-\n"
 "              PROFILE%\\Application Data'.\n"
 "\n"
-, stdout);
- fputs(
-"              2) On windows, if there is no _curlrc file in the home  dir,  it\n"
+"              2)  On  windows, if there is no _curlrc file in the home dir, it\n"
 "              checks for one in the same dir the curl executable is placed. On\n"
-"              Unix-like systems, it will simply try to load .curlrc  from  the\n"
+"              Unix-like  systems,  it will simply try to load .curlrc from the\n"
 "              determined home dir.\n"
 "\n"
+, stdout);
+ fputs(
 "              # --- Example file ---\n"
 "              # this is a comment\n"
 "              url = \"example.com\"\n"
 "              output = \"curlhere.html\"\n"
 "              user-agent = \"superagent/1.0\"\n"
 "\n"
-, stdout);
- fputs(
 "              # and fetch another URL too\n"
 "              url = \"example.com/docs/manpage.html\"\n"
 "              -O\n"
 "              referer = \"http://nowhereatall.example.com/\"\n"
 "              # --- End of example file ---\n"
 "\n"
-"              This  option  can be used multiple times to load multiple config\n"
+"              This option can be used multiple times to load  multiple  config\n"
+, stdout);
+ fputs(
 "              files.\n"
 "\n"
 "       --connect-timeout <seconds>\n"
-"              Maximum time in seconds that  you  allow  curl's  connection  to\n"
-, stdout);
- fputs(
-"              take.   This  only  limits the connection phase, so if curl con-\n"
-"              nects within the given period it will continue - if not it  will\n"
+"              Maximum  time  in  seconds  that  you allow curl's connection to\n"
+"              take.  This only limits the connection phase, so  if  curl  con-\n"
+"              nects  within the given period it will continue - if not it will\n"
 "              exit.  Since version 7.32.0, this option accepts decimal values.\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "              See also -m, --max-time.\n"
 "\n"
+, stdout);
+ fputs(
 "       --connect-to <HOST1:PORT1:HOST2:PORT2>\n"
 "\n"
 "              For  a  request  to  the  given  HOST1:PORT1  pair,  connect  to\n"
-, stdout);
- fputs(
 "              HOST2:PORT2 instead.  This option is suitable to direct requests\n"
 "              at a specific server, e.g. at a specific cluster node in a clus-\n"
-"              ter of servers. This option is only used to establish  the  net-\n"
-"              work  connection.  It  does NOT affect the hostname/port that is\n"
-"              used for TLS/SSL (e.g. SNI, certificate verification) or for the\n"
-"              application  protocols.  \"HOST1\"  and  \"PORT1\"  may be the empty\n"
+"              ter  of  servers. This option is only used to establish the net-\n"
+"              work connection. It does NOT affect the  hostname/port  that  is\n"
 , stdout);
  fputs(
+"              used for TLS/SSL (e.g. SNI, certificate verification) or for the\n"
+"              application protocols. \"HOST1\" and  \"PORT1\"  may  be  the  empty\n"
 "              string, meaning \"any host/port\". \"HOST2\" and \"PORT2\" may also be\n"
-"              the   empty   string,   meaning   \"use  the  request's  original\n"
+"              the  empty  string,  meaning   \"use   the   request's   original\n"
 "              host/port\".\n"
 "\n"
 "              A \"host\" specified to this option is compared as a string, so it\n"
-"              needs  to  match  the name used in request URL. It can be either\n"
-"              numerical such as \"127.0.0.1\" or the  full  host  name  such  as\n"
-"              \"example.org\".\n"
-"\n"
 , stdout);
  fputs(
+"              needs to match the name used in request URL. It  can  be  either\n"
+"              numerical  such  as  \"127.0.0.1\"  or  the full host name such as\n"
+"              \"example.org\".\n"
+"\n"
 "              This option can be used many times to add many connect rules.\n"
 "\n"
 "              See also --resolve and -H, --header. Added in 7.49.0.\n"
 "\n"
 "       -C, --continue-at <offset>\n"
-"              Continue/Resume  a  previous  file transfer at the given offset.\n"
-"              The given offset is the exact  number  of  bytes  that  will  be\n"
-"              skipped,  counting  from the beginning of the source file before\n"
-"              it is transferred to the destination.  If used with uploads, the\n"
+"              Continue/Resume a previous file transfer at  the  given  offset.\n"
 , stdout);
  fputs(
+"              The  given  offset  is  the  exact  number of bytes that will be\n"
+"              skipped, counting from the beginning of the source  file  before\n"
+"              it is transferred to the destination.  If used with uploads, the\n"
 "              FTP server command SIZE will not be used by curl.\n"
 "\n"
-"              Use  \"-C  -\" to tell curl to automatically find out where/how to\n"
-"              resume the transfer. It then uses the given  output/input  files\n"
+"              Use \"-C -\" to tell curl to automatically find out  where/how  to\n"
+"              resume  the  transfer. It then uses the given output/input files\n"
 "              to figure that out.\n"
 "\n"
+, stdout);
+ fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "              See also -r, --range.\n"
 "\n"
 "       -c, --cookie-jar <filename>\n"
-"              (HTTP)  Specify to which file you want curl to write all cookies\n"
+"              (HTTP) Specify to which file you want curl to write all  cookies\n"
+"              after  a  completed  operation. Curl writes all cookies from its\n"
+"              in-memory cookie storage to the given file at the end of  opera-\n"
+"              tions.  If  no  cookies  are known, no data will be written. The\n"
 , stdout);
  fputs(
-"              after a completed operation. Curl writes all  cookies  from  its\n"
-"              in-memory  cookie storage to the given file at the end of opera-\n"
-"              tions. If no cookies are known, no data  will  be  written.  The\n"
-"              file  will  be written using the Netscape cookie file format. If\n"
+"              file will be written using the Netscape cookie file  format.  If\n"
 "              you set the file name to a single dash, \"-\", the cookies will be\n"
 "              written to stdout.\n"
 "\n"
-, stdout);
- fputs(
-"              This  command  line  option will activate the cookie engine that\n"
+"              This command line option will activate the  cookie  engine  that\n"
 "              makes curl record and use cookies. Another way to activate it is\n"
 "              to use the -b, --cookie option.\n"
 "\n"
 "              If the cookie jar can't be created or written to, the whole curl\n"
-"              operation won't fail or even report an error clearly. Using  -v,\n"
-"              --verbose  will  get  a  warning displayed, but that is the only\n"
 , stdout);
  fputs(
+"              operation  won't fail or even report an error clearly. Using -v,\n"
+"              --verbose will get a warning displayed, but  that  is  the  only\n"
 "              visible feedback you get about this possibly lethal situation.\n"
 "\n"
-"              If this option is used several times, the  last  specified  file\n"
+"              If  this  option  is used several times, the last specified file\n"
 "              name will be used.\n"
 "\n"
 "       -b, --cookie <data>\n"
 "              (HTTP) Pass the data to the HTTP server in the Cookie header. It\n"
-"              is supposedly the data previously received from the server in  a\n"
-"              \"Set-Cookie:\"   line.    The   data  should  be  in  the  format\n"
+, stdout);
+ fputs(
+"              is  supposedly the data previously received from the server in a\n"
+"              \"Set-Cookie:\"  line.   The  data  should  be   in   the   format\n"
 "              \"NAME1=VALUE1; NAME2=VALUE2\".\n"
 "\n"
+"              If  no '=' symbol is used in the argument, it is instead treated\n"
+"              as a filename to read previously stored cookie from. This option\n"
+"              also  activates  the  cookie  engine which will make curl record\n"
 , stdout);
  fputs(
-"              If no '=' symbol is used in the argument, it is instead  treated\n"
-"              as a filename to read previously stored cookie from. This option\n"
-"              also activates the cookie engine which  will  make  curl  record\n"
-"              incoming  cookies,  which  may  be handy if you're using this in\n"
-"              combination with the -L, --location option or  do  multiple  URL\n"
+"              incoming cookies, which may be handy if  you're  using  this  in\n"
+"              combination  with  the  -L, --location option or do multiple URL\n"
 "              transfers on the same invoke.\n"
 "\n"
-, stdout);
- fputs(
 "              The file format of the file to read cookies from should be plain\n"
-"              HTTP headers (Set-Cookie style) or the  Netscape/Mozilla  cookie\n"
+"              HTTP  headers  (Set-Cookie style) or the Netscape/Mozilla cookie\n"
 "              file format.\n"
 "\n"
-"              The  file  specified with -b, --cookie is only used as input. No\n"
-"              cookies will be written to the file. To store cookies,  use  the\n"
-"              -c, --cookie-jar option.\n"
-"\n"
-"              Exercise  caution  if  you  are  using  this option and multiple\n"
+"              The file specified with -b, --cookie is only used as  input.  No\n"
 , stdout);
  fputs(
+"              cookies  will  be written to the file. To store cookies, use the\n"
+"              -c, --cookie-jar option.\n"
+"\n"
+"              Exercise caution if you  are  using  this  option  and  multiple\n"
 "              transfers may occur.  If you use the NAME1=VALUE1; format, or in\n"
-"              a  file  use  the  Set-Cookie format and don't specify a domain,\n"
+"              a file use the Set-Cookie format and  don't  specify  a  domain,\n"
 "              then the cookie is sent for any domain (even after redirects are\n"
-"              followed)  and cannot be modified by a server-set cookie. If the\n"
-"              cookie engine is enabled and a server sets a cookie of the  same\n"
-"              name then both will be sent on a future transfer to that server,\n"
 , stdout);
  fputs(
-"              likely not what you intended.  To address  these  issues  set  a\n"
-"              domain  in  Set-Cookie  (doing that will include sub domains) or\n"
+"              followed) and cannot be modified by a server-set cookie. If  the\n"
+"              cookie  engine is enabled and a server sets a cookie of the same\n"
+"              name then both will be sent on a future transfer to that server,\n"
+"              likely  not  what  you  intended.  To address these issues set a\n"
+"              domain in Set-Cookie (doing that will include  sub  domains)  or\n"
 "              use the Netscape format.\n"
 "\n"
-"              If this option is used several times, the last one will be used.\n"
-"              Users very often want to both read cookies from a file and write\n"
-"              updated  cookies  back to a file, so using both -b, --cookie and\n"
 , stdout);
  fputs(
+"              If this option is used several times, the last one will be used.\n"
+"              Users very often want to both read cookies from a file and write\n"
+"              updated cookies back to a file, so using both -b,  --cookie  and\n"
 "              -c, --cookie-jar in the same command line is common.\n"
 "\n"
 "       --create-dirs\n"
 "              When used in conjunction with the -o, --output option, curl will\n"
-"              create  the  necessary local directory hierarchy as needed. This\n"
-"              option creates the dirs mentioned with the -o, --output  option,\n"
-"              nothing  else.  If  the --output file name uses no dir or if the\n"
-"              dirs it mentions already exist, no dir will be created.\n"
-"\n"
+"              create the necessary local directory hierarchy as  needed.  This\n"
 , stdout);
  fputs(
-"              To create remote directories when using FTP or SFTP, try  --ftp-\n"
+"              option  creates the dirs mentioned with the -o, --output option,\n"
+"              nothing else. If the --output file name uses no dir  or  if  the\n"
+"              dirs it mentions already exist, no dir will be created.\n"
+"\n"
+"              To  create remote directories when using FTP or SFTP, try --ftp-\n"
 "              create-dirs.\n"
 "\n"
-"       --crlf (FTP  SMTP)  Convert  LF  to  CRLF  in  upload.  Useful  for MVS\n"
+"       --crlf (FTP SMTP)  Convert  LF  to  CRLF  in  upload.  Useful  for  MVS\n"
 "              (OS/390).\n"
 "\n"
 "              (SMTP added in 7.40.0)\n"
 "\n"
+, stdout);
+ fputs(
 "       --crlfile <file>\n"
 "              (TLS) Provide a file using PEM format with a Certificate Revoca-\n"
 "              tion List that may specify peer certificates that are to be con-\n"
 "              sidered revoked.\n"
 "\n"
-, stdout);
- fputs(
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "              Added in 7.19.7.\n"
 "\n"
 "       --data-ascii <data>\n"
 "              (HTTP) This is just an alias for -d, --data.\n"
 "\n"
 "       --data-binary <data>\n"
-"              (HTTP) This posts data exactly as specified with no  extra  pro-\n"
-"              cessing whatsoever.\n"
-"\n"
-"              If  you  start  the data with the letter @, the rest should be a\n"
-"              filename.  Data is posted in a  similar  manner  as  -d,  --data\n"
 , stdout);
  fputs(
-"              does,  except  that  newlines and carriage returns are preserved\n"
+"              (HTTP)  This  posts data exactly as specified with no extra pro-\n"
+"              cessing whatsoever.\n"
+"\n"
+"              If you start the data with the letter @, the rest  should  be  a\n"
+"              filename.   Data  is  posted  in  a similar manner as -d, --data\n"
+"              does, except that newlines and carriage  returns  are  preserved\n"
 "              and conversions are never done.\n"
 "\n"
-"              If this option is used several times,  the  ones  following  the\n"
+"              If  this  option  is  used several times, the ones following the\n"
+, stdout);
+ fputs(
 "              first will append data as described in -d, --data.\n"
 "\n"
 "       --data-raw <data>\n"
-"              (HTTP)  This  posts data similarly to -d, --data but without the\n"
+"              (HTTP) This posts data similarly to -d, --data but  without  the\n"
 "              special interpretation of the @ character.\n"
 "\n"
 "              See also -d, --data. Added in 7.43.0.\n"
 "\n"
-, stdout);
- fputs(
 "       --data-urlencode <data>\n"
-"              (HTTP) This posts data, similar to the other -d, --data  options\n"
+"              (HTTP)  This posts data, similar to the other -d, --data options\n"
 "              with the exception that this performs URL-encoding.\n"
 "\n"
-"              To  be  CGI-compliant,  the <data> part should begin with a name\n"
-"              followed by a separator and a content specification. The  <data>\n"
+, stdout);
+ fputs(
+"              To be CGI-compliant, the <data> part should begin  with  a  name\n"
+"              followed  by a separator and a content specification. The <data>\n"
 "              part can be passed to curl using one of the following syntaxes:\n"
 "\n"
 "              content\n"
+"                     This will make curl URL-encode the content and pass  that\n"
+"                     on.  Just  be careful so that the content doesn't contain\n"
+"                     any = or @ symbols, as that will  then  make  the  syntax\n"
 , stdout);
  fputs(
-"                     This  will make curl URL-encode the content and pass that\n"
-"                     on. Just be careful so that the content  doesn't  contain\n"
-"                     any  =  or  @  symbols, as that will then make the syntax\n"
 "                     match one of the other cases below!\n"
 "\n"
 "              =content\n"
-"                     This will make curl URL-encode the content and pass  that\n"
+"                     This  will make curl URL-encode the content and pass that\n"
 "                     on. The preceding = symbol is not included in the data.\n"
 "\n"
-, stdout);
- fputs(
 "              name=content\n"
-"                     This  will make curl URL-encode the content part and pass\n"
-"                     that on. Note that the name part is expected to  be  URL-\n"
+"                     This will make curl URL-encode the content part and  pass\n"
+"                     that  on.  Note that the name part is expected to be URL-\n"
 "                     encoded already.\n"
 "\n"
 "              @filename\n"
-"                     This  will  make  curl  load  data  from  the  given file\n"
-"                     (including any newlines), URL-encode that data  and  pass\n"
+, stdout);
+ fputs(
+"                     This will  make  curl  load  data  from  the  given  file\n"
+"                     (including  any  newlines), URL-encode that data and pass\n"
 "                     it on in the POST.\n"
 "\n"
 "              name@filename\n"
+"                     This will  make  curl  load  data  from  the  given  file\n"
+"                     (including  any  newlines), URL-encode that data and pass\n"
+"                     it on in the POST. The  name  part  gets  an  equal  sign\n"
 , stdout);
  fputs(
-"                     This  will  make  curl  load  data  from  the  given file\n"
-"                     (including any newlines), URL-encode that data  and  pass\n"
-"                     it  on  in  the  POST.  The  name part gets an equal sign\n"
 "                     appended, resulting in name=urlencoded-file-content. Note\n"
 "                     that the name is expected to be URL-encoded already.\n"
 "       See also -d, --data and --data-raw. Added in 7.18.0.\n"
 "\n"
 "       -d, --data <data>\n"
+"              (HTTP) Sends the specified data in a POST request  to  the  HTTP\n"
+"              server,  in  the  same  way  that a browser does when a user has\n"
+"              filled in an HTML form and presses the submit button. This  will\n"
 , stdout);
  fputs(
-"              (HTTP)  Sends  the  specified data in a POST request to the HTTP\n"
-"              server, in the same way that a browser  does  when  a  user  has\n"
-"              filled  in an HTML form and presses the submit button. This will\n"
 "              cause curl to pass the data to the server using the content-type\n"
 "              application/x-www-form-urlencoded.  Compare to -F, --form.\n"
 "\n"
 "              --data-raw is almost the same but does not have a special inter-\n"
-, stdout);
- fputs(
-"              pretation of the @ character. To post data  purely  binary,  you\n"
-"              should  instead use the --data-binary option.  To URL-encode the\n"
+"              pretation  of  the  @ character. To post data purely binary, you\n"
+"              should instead use the --data-binary option.  To URL-encode  the\n"
 "              value of a form field you may use --data-urlencode.\n"
 "\n"
-"              If any of these options is used more than once on the same  com-\n"
-"              mand  line,  the  data  pieces specified will be merged together\n"
-"              with a separating  &-symbol.  Thus,  using  '-d  name=daniel  -d\n"
 , stdout);
  fputs(
+"              If  any of these options is used more than once on the same com-\n"
+"              mand line, the data pieces specified  will  be  merged  together\n"
+"              with  a  separating  &-symbol.  Thus,  using  '-d name=daniel -d\n"
 "              skill=lousy'  would  generate  a  post  chunk  that  looks  like\n"
 "              'name=daniel&skill=lousy'.\n"
 "\n"
-"              If you start the data with the letter @, the rest  should  be  a\n"
-"              file  name  to read the data from, or - if you want curl to read\n"
-"              the data from stdin. Multiple files can also be specified. Post-\n"
-"              ing  data  from  a  file  named  from a file like that, carriage\n"
+"              If  you  start  the data with the letter @, the rest should be a\n"
 , stdout);
  fputs(
+"              file name to read the data from, or - if you want curl  to  read\n"
+"              the data from stdin. Multiple files can also be specified. Post-\n"
+"              ing data from a file named  from  a  file  like  that,  carriage\n"
 "              returns and newlines will be stripped out. If you don't want the\n"
-"              @  character  to  have  a  special interpretation use --data-raw\n"
+"              @ character to have  a  special  interpretation  use  --data-raw\n"
 "              instead.\n"
 "\n"
 "              See also --data-binary and --data-urlencode and --data-raw. This\n"
+, stdout);
+ fputs(
 "              option overrides -F, --form and -I, --head and --upload.\n"
 "\n"
 "       --delegation <LEVEL>\n"
-"              (GSS/kerberos)  Set  LEVEL to tell the server what it is allowed\n"
-, stdout);
- fputs(
+"              (GSS/kerberos) Set LEVEL to tell the server what it  is  allowed\n"
 "              to delegate when it comes to user credentials.\n"
 "\n"
 "              none   Don't allow any delegation.\n"
 "\n"
-"              policy Delegates if and only if the OK-AS-DELEGATE flag  is  set\n"
-"                     in  the  Kerberos  service  ticket,  which is a matter of\n"
+"              policy Delegates  if  and only if the OK-AS-DELEGATE flag is set\n"
+"                     in the Kerberos service ticket,  which  is  a  matter  of\n"
 "                     realm policy.\n"
 "\n"
+, stdout);
+ fputs(
 "              always Unconditionally allow the server to delegate.\n"
 "\n"
 "       --digest\n"
-"              (HTTP) Enables HTTP Digest authentication. This is an  authenti-\n"
-, stdout);
- fputs(
-"              cation  scheme  that  prevents the password from being sent over\n"
-"              the wire in clear text. Use this in combination with the  normal\n"
+"              (HTTP)  Enables HTTP Digest authentication. This is an authenti-\n"
+"              cation scheme that prevents the password from  being  sent  over\n"
+"              the  wire in clear text. Use this in combination with the normal\n"
 "              -u, --user option to set user name and password.\n"
 "\n"
-"              If  this  option  is  used  several times, only the first one is\n"
+"              If this option is used several times,  only  the  first  one  is\n"
 "              used.\n"
 "\n"
-"              See also -u,  --user  and  --proxy-digest  and  --anyauth.  This\n"
+, stdout);
+ fputs(
+"              See  also  -u,  --user  and  --proxy-digest  and --anyauth. This\n"
 "              option overrides --basic and --ntlm and --negotiate.\n"
 "\n"
 "       --disable-eprt\n"
-, stdout);
- fputs(
 "              (FTP) Tell curl to disable the use of the EPRT and LPRT commands\n"
 "              when doing active FTP transfers. Curl will normally always first\n"
-"              attempt  to use EPRT, then LPRT before using PORT, but with this\n"
-"              option, it will use PORT right away. EPRT and  LPRT  are  exten-\n"
-"              sions  to  the  original  FTP  protocol, and may not work on all\n"
-"              servers, but they enable more functionality in a better way than\n"
+"              attempt to use EPRT, then LPRT before using PORT, but with  this\n"
+"              option,  it  will  use PORT right away. EPRT and LPRT are exten-\n"
 , stdout);
  fputs(
+"              sions to the original FTP protocol, and  may  not  work  on  all\n"
+"              servers, but they enable more functionality in a better way than\n"
 "              the traditional PORT command.\n"
 "\n"
 "              --eprt can be used to explicitly enable EPRT again and --no-eprt\n"
 "              is an alias for --disable-eprt.\n"
 "\n"
-"              If the server is accessed using IPv6, this option will  have  no\n"
+"              If  the  server is accessed using IPv6, this option will have no\n"
 "              effect as EPRT is necessary then.\n"
 "\n"
-"              Disabling  EPRT only changes the active behavior. If you want to\n"
-"              switch to passive mode you need to not  use  -P,  --ftp-port  or\n"
-"              force it with --ftp-pasv.\n"
-"\n"
 , stdout);
  fputs(
+"              Disabling EPRT only changes the active behavior. If you want  to\n"
+"              switch  to  passive  mode  you need to not use -P, --ftp-port or\n"
+"              force it with --ftp-pasv.\n"
+"\n"
 "       --disable-epsv\n"
-"              (FTP)  (FTP)  Tell  curl  to disable the use of the EPSV command\n"
-"              when doing passive FTP  transfers.  Curl  will  normally  always\n"
-"              first  attempt to use EPSV before PASV, but with this option, it\n"
+"              (FTP) (FTP) Tell curl to disable the use  of  the  EPSV  command\n"
+"              when  doing  passive  FTP  transfers.  Curl will normally always\n"
+"              first attempt to use EPSV before PASV, but with this option,  it\n"
 "              will not try using EPSV.\n"
 "\n"
+, stdout);
+ fputs(
 "              --epsv can be used to explicitly enable EPSV again and --no-epsv\n"
 "              is an alias for --disable-epsv.\n"
 "\n"
-, stdout);
- fputs(
-"              If  the  server is an IPv6 host, this option will have no effect\n"
+"              If the server is an IPv6 host, this option will have  no  effect\n"
 "              as EPSV is necessary then.\n"
 "\n"
 "              Disabling EPSV only changes the passive behavior. If you want to\n"
 "              switch to active mode you need to use -P, --ftp-port.\n"
 "\n"
 "       -q, --disable\n"
-"              If  used  as the first parameter on the command line, the curlrc\n"
-"              config file will not be read and used. See the -K, --config  for\n"
+"              If used as the first parameter on the command line,  the  curlrc\n"
 , stdout);
  fputs(
+"              config  file will not be read and used. See the -K, --config for\n"
 "              details on the default config file search path.\n"
 "\n"
 "       --dns-interface <interface>\n"
-"              (DNS)  Tell  curl  to send outgoing DNS requests through <inter-\n"
-"              face>. This option is a counterpart to --interface  (which  does\n"
-"              not  affect  DNS). The supplied string must be an interface name\n"
+"              (DNS) Tell curl to send outgoing DNS  requests  through  <inter-\n"
+"              face>.  This  option is a counterpart to --interface (which does\n"
+"              not affect DNS). The supplied string must be an  interface  name\n"
 "              (not an address).\n"
 "\n"
-"              See also --dns-ipv4-addr  and  --dns-ipv6-addr.  --dns-interface\n"
 , stdout);
  fputs(
-"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              See  also  --dns-ipv4-addr  and --dns-ipv6-addr. --dns-interface\n"
+"              requires that the underlying libcurl was  built  to  support  c-\n"
 "              ares. Added in 7.33.0.\n"
 "\n"
 "       --dns-ipv4-addr <address>\n"
-"              (DNS) Tell curl to bind to <ip-address>  when  making  IPv4  DNS\n"
-"              requests,  so that the DNS requests originate from this address.\n"
+"              (DNS)  Tell  curl  to  bind to <ip-address> when making IPv4 DNS\n"
+"              requests, so that the DNS requests originate from this  address.\n"
 "              The argument should be a single IPv4 address.\n"
 "\n"
-"              See also --dns-interface  and  --dns-ipv6-addr.  --dns-ipv4-addr\n"
 , stdout);
  fputs(
-"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              See  also  --dns-interface  and --dns-ipv6-addr. --dns-ipv4-addr\n"
+"              requires that the underlying libcurl was  built  to  support  c-\n"
 "              ares. Added in 7.33.0.\n"
 "\n"
 "       --dns-ipv6-addr <address>\n"
-"              (DNS) Tell curl to bind to <ip-address>  when  making  IPv6  DNS\n"
-"              requests,  so that the DNS requests originate from this address.\n"
+"              (DNS)  Tell  curl  to  bind to <ip-address> when making IPv6 DNS\n"
+"              requests, so that the DNS requests originate from this  address.\n"
 "              The argument should be a single IPv6 address.\n"
 "\n"
-"              See also --dns-interface  and  --dns-ipv4-addr.  --dns-ipv6-addr\n"
 , stdout);
  fputs(
-"              requires  that  the  underlying  libcurl was built to support c-\n"
+"              See  also  --dns-interface  and --dns-ipv4-addr. --dns-ipv6-addr\n"
+"              requires that the underlying libcurl was  built  to  support  c-\n"
 "              ares. Added in 7.33.0.\n"
 "\n"
 "       --dns-servers <addresses>\n"
-"              Set the list of DNS servers to be used  instead  of  the  system\n"
+"              Set  the  list  of  DNS servers to be used instead of the system\n"
 "              default.  The list of IP addresses should be separated with com-\n"
 "              mas. Port numbers may also optionally be given as :<port-number>\n"
-"              after each IP address.\n"
-"\n"
 , stdout);
  fputs(
-"              --dns-servers  requires that the underlying libcurl was built to\n"
+"              after each IP address.\n"
+"\n"
+"              --dns-servers requires that the underlying libcurl was built  to\n"
 "              support c-ares. Added in 7.33.0.\n"
 "\n"
 "       -D, --dump-header <filename>\n"
-"              (HTTP FTP) Write the received protocol headers to the  specified\n"
+"              (HTTP  FTP) Write the received protocol headers to the specified\n"
 "              file.\n"
 "\n"
-"              This  option  is handy to use when you want to store the headers\n"
-"              that an HTTP site sends to you. Cookies from the  headers  could\n"
-"              then  be  read  in  a  second  curl  invocation by using the -b,\n"
+"              This option is handy to use when you want to store  the  headers\n"
+"              that  an  HTTP site sends to you. Cookies from the headers could\n"
 , stdout);
  fputs(
-"              --cookie option! The -c, --cookie-jar option is a better way  to\n"
+"              then be read in a  second  curl  invocation  by  using  the  -b,\n"
+"              --cookie  option! The -c, --cookie-jar option is a better way to\n"
 "              store cookies.\n"
 "\n"
-"              When  used  in FTP, the FTP server response lines are considered\n"
+"              When used in FTP, the FTP server response lines  are  considered\n"
 "              being \"headers\" and thus are saved there.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
 "              See also -o, --output.\n"
 "\n"
 "       --egd-file <file>\n"
-"              (TLS) Specify the path name  to  the  Entropy  Gathering  Daemon\n"
 , stdout);
  fputs(
-"              socket.  The  socket  is  used to seed the random engine for SSL\n"
+"              (TLS)  Specify  the  path  name  to the Entropy Gathering Daemon\n"
+"              socket. The socket is used to seed the  random  engine  for  SSL\n"
 "              connections.\n"
 "\n"
 "              See also --random-file.\n"
 "\n"
 "       --engine <name>\n"
-"              (TLS) Select the OpenSSL crypto engine to use for cipher  opera-\n"
+"              (TLS)  Select the OpenSSL crypto engine to use for cipher opera-\n"
 "              tions. Use --engine list to print a list of build-time supported\n"
-"              engines. Note that not all (or  none)  of  the  engines  may  be\n"
+"              engines.  Note  that  not  all  (or  none) of the engines may be\n"
+, stdout);
+ fputs(
 "              available at run-time.\n"
 "\n"
 "       --expect100-timeout <seconds>\n"
-, stdout);
- fputs(
 "              (HTTP) Maximum time in seconds that you allow curl to wait for a\n"
-"              100-continue response when curl emits an  Expects:  100-continue\n"
-"              header  in  its  request.  By default curl will wait one second.\n"
-"              This option accepts decimal values! When curl stops waiting,  it\n"
+"              100-continue  response  when curl emits an Expects: 100-continue\n"
+"              header in its request. By default curl  will  wait  one  second.\n"
+"              This  option accepts decimal values! When curl stops waiting, it\n"
 "              will continue as if the response has been received.\n"
 "\n"
+, stdout);
+ fputs(
 "              See also --connect-timeout. Added in 7.47.0.\n"
 "\n"
 "       --fail-early\n"
-, stdout);
- fputs(
 "              Fail and exit on the first detected transfer error.\n"
 "\n"
-"              When  curl is used to do multiple transfers on the command line,\n"
-"              it will attempt to operate on each given URL,  one  by  one.  By\n"
-"              default,  it will ignore errors if there are more URLs given and\n"
-"              the last URL's  success  will  determine  the  error  code  curl\n"
-"              returns.  So  early failures will be \"hidden\" by subsequent suc-\n"
-"              cessful transfers.\n"
-"\n"
+"              When curl is used to do multiple transfers on the command  line,\n"
+"              it  will  attempt  to  operate on each given URL, one by one. By\n"
+"              default, it will ignore errors if there are more URLs given  and\n"
+"              the  last  URL's  success  will  determine  the  error code curl\n"
 , stdout);
  fputs(
-"              Using this option, curl will instead  return  an  error  on  the\n"
-"              first  transfer  that  fails,  independent of the amount of URLs\n"
-"              that are given on the command line. This way, no transfer  fail-\n"
+"              returns. So early failures will be \"hidden\" by  subsequent  suc-\n"
+"              cessful transfers.\n"
+"\n"
+"              Using  this  option,  curl  will  instead return an error on the\n"
+"              first transfer that fails, independent of  the  amount  of  URLs\n"
+"              that  are given on the command line. This way, no transfer fail-\n"
 "              ures go undetected by scripts and similar.\n"
 "\n"
 "              This option is global and does not need to be specified for each\n"
+, stdout);
+ fputs(
 "              use of -:, --next.\n"
 "\n"
 "              This option does not imply -f, --fail, which causes transfers to\n"
-, stdout);
- fputs(
-"              fail  due  to the server's HTTP status code. You can combine the\n"
+"              fail due to the server's HTTP status code. You can  combine  the\n"
 "              two options, however note -f, --fail is not global and is there-\n"
 "              fore contained by -:, --next.\n"
 "\n"
 "              Added in 7.52.0.\n"
 "\n"
 "       -f, --fail\n"
-"              (HTTP)  Fail  silently (no output at all) on server errors. This\n"
-"              is mostly done to better enable scripts etc to better deal  with\n"
-"              failed  attempts.  In  normal cases when an HTTP server fails to\n"
+"              (HTTP) Fail silently (no output at all) on server  errors.  This\n"
 , stdout);
  fputs(
-"              deliver a document, it  returns  an  HTML  document  stating  so\n"
-"              (which  often  also describes why and more). This flag will pre-\n"
+"              is  mostly done to better enable scripts etc to better deal with\n"
+"              failed attempts. In normal cases when an HTTP  server  fails  to\n"
+"              deliver  a  document,  it  returns  an  HTML document stating so\n"
+"              (which often also describes why and more). This flag  will  pre-\n"
 "              vent curl from outputting that and return error 22.\n"
 "\n"
-"              This method is not fail-safe and there are occasions where  non-\n"
-"              successful  response  codes  will  slip through, especially when\n"
+"              This  method is not fail-safe and there are occasions where non-\n"
+, stdout);
+ fputs(
+"              successful response codes will  slip  through,  especially  when\n"
 "              authentication is involved (response codes 401 and 407).\n"
 "\n"
 "       --false-start\n"
-, stdout);
- fputs(
-"              (TLS) Tells curl to use false start during  the  TLS  handshake.\n"
-"              False  start  is  a  mode  where a TLS client will start sending\n"
+"              (TLS)  Tells  curl  to use false start during the TLS handshake.\n"
+"              False start is a mode where a  TLS  client  will  start  sending\n"
 "              application data before verifying the server's Finished message,\n"
 "              thus saving a round trip when performing a full handshake.\n"
 "\n"
-"              This  is currently only implemented in the NSS and Secure Trans-\n"
+, stdout);
+ fputs(
+"              This is currently only implemented in the NSS and Secure  Trans-\n"
 "              port (on iOS 7.0 or later, or OS X 10.9 or later) backends.\n"
 "\n"
 "              Added in 7.42.0.\n"
 "\n"
-, stdout);
- fputs(
 "       --form-string <name=string>\n"
-"              (HTTP) Similar to -F, --form except that the  value  string  for\n"
-"              the named parameter is used literally. Leading '@' and '<' char-\n"
-"              acters, and the ';type=' string in the  value  have  no  special\n"
-"              meaning.  Use  this  in  preference to -F, --form if there's any\n"
-"              possibility that the string value may accidentally  trigger  the\n"
-"              '@' or '<' features of -F, --form.\n"
-"\n"
+"              (HTTP  SMTP  IMAP)  Similar  to -F, --form except that the value\n"
+"              string for the named parameter is used  literally.  Leading  '@'\n"
+"              and '<' characters, and the ';type=' string in the value have no\n"
 , stdout);
  fputs(
+"              special meaning. Use this in preference to -F, --form if there's\n"
+"              any  possibility  that the string value may accidentally trigger\n"
+"              the '@' or '<' features of -F, --form.\n"
+"\n"
 "              See also -F, --form.\n"
 "\n"
 "       -F, --form <name=content>\n"
-"              (HTTP)  This  lets curl emulate a filled-in form in which a user\n"
-"              has pressed the submit button. This causes  curl  to  POST  data\n"
-"              using  the  Content-Type  multipart/form-data  according  to RFC\n"
-"              2388. This enables uploading of binary files etc. To  force  the\n"
-"              'content'  part  to  be  a  file, prefix the file name with an @\n"
+"              (HTTP SMTP IMAP) For HTTP protocol family, this lets  curl  emu-\n"
+"              late  a  filled-in  form  in which a user has pressed the submit\n"
+, stdout);
+ fputs(
+"              button. This causes curl to POST  data  using  the  Content-Type\n"
+"              multipart/form-data according to RFC 2388.\n"
+"\n"
+"              For  SMTP and IMAP protocols, this is the mean to compose a mul-\n"
+"              tipart mail message to transmit.\n"
+"\n"
+"              This enables uploading of binary files etc. To force  the  'con-\n"
+"              tent' part to be a file, prefix the file name with an @ sign. To\n"
 , stdout);
  fputs(
-"              sign. To just get the content part from a file, prefix the  file\n"
-"              name  with  the symbol <. The difference between @ and < is then\n"
-"              that @ makes a file get attached in the post as a  file  upload,\n"
-"              while  the  <  makes  a text field and just get the contents for\n"
-"              that text field from a file.\n"
+"              just get the content part from a file, prefix the file name with\n"
+"              the  symbol  <.  The  difference  between @ and < is then that @\n"
+"              makes a file get attached in the post as a  file  upload,  while\n"
+"              the < makes a text field and just get the contents for that text\n"
+"              field from a file.\n"
 "\n"
-"              Example: to send an image to a server, where  'profile'  is  the\n"
+"              Example: to send an image to an HTTP server, where 'profile'  is\n"
 , stdout);
  fputs(
-"              name of the form-field to which portrait.jpg will be the input:\n"
+"              the  name  of  the  form-field to which portrait.jpg will be the\n"
+"              input:\n"
 "\n"
 "               curl -F profile=@portrait.jpg https://example.com/upload.cgi\n"
 "\n"
 "              To read content from stdin instead of a file, use - as the file-\n"
-"              name. This goes for both @ and <  constructs.  Unfortunately  it\n"
-"              does  not support reading the file from a named pipe or similar,\n"
+"              name.  This  goes  for both @ and < constructs. Unfortunately it\n"
+"              does not support reading the file from a named pipe or  similar,\n"
 "              as it needs the full size before the transfer starts.\n"
 "\n"
 , stdout);
  fputs(
-"              You can also  tell  curl  what  Content-Type  to  use  by  using\n"
+"              You  can  also  tell  curl  what  Content-Type  to  use by using\n"
 "              'type=', in a manner similar to:\n"
 "\n"
 "               curl -F \"web=@index.html;type=text/html\" example.com\n"
 "\n"
 "              or\n"
 "\n"
 "               curl -F \"name=daniel;type=text/foo\" example.com\n"
 "\n"
-"              You  can  also explicitly change the name field of a file upload\n"
+"              You can also explicitly change the name field of a  file  upload\n"
 "              part by setting filename=, like this:\n"
 "\n"
 "               curl -F \"file=@localfile;filename=nameinpost\" example.com\n"
 "\n"
 , stdout);
  fputs(
-"              If filename/path contains ',' or ';', it must be quoted by  dou-\n"
+"              If  filename/path contains ',' or ';', it must be quoted by dou-\n"
 "              ble-quotes like:\n"
 "\n"
-"               curl   -F  \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"  exam-\n"
+"               curl  -F  \"file=@\\\"localfile\\\";filename=\\\"nameinpost\\\"\"   exam-\n"
 "              ple.com\n"
 "\n"
 "              or\n"
 "\n"
 "               curl -F 'file=@\"localfile\";filename=\"nameinpost\"' example.com\n"
 "\n"
-"              Note that if a filename/path is  quoted  by  double-quotes,  any\n"
+"              Note  that  if  a  filename/path is quoted by double-quotes, any\n"
 "              double-quote or backslash within the filename must be escaped by\n"
 "              backslash.\n"
 "\n"
 , stdout);
  fputs(
+"              You  can  add  custom  headers to the field by setting headers=,\n"
+"              like\n"
+"\n"
+"                curl -F \"submit=OK;headers=\\\"X-submit-type: OK\\\"\" example.com\n"
+"\n"
+"              or\n"
+"\n"
+"                curl -F \"submit=OK;headers=@headerfile\" example.com\n"
+"\n"
+"              The headers= keyword may appear more that once and  above  notes\n"
+"              about  quoting  apply.  When headers are read from a file, Empty\n"
+, stdout);
+ fputs(
+"              lines and lines starting with '#' are comments and ignored; each\n"
+"              header can be folded by splitting between two words and starting\n"
+"              the continuation line with a  space;  embedded  carriage-returns\n"
+"              and  trailing  spaces  are  stripped.   Here  is an example of a\n"
+"              header file contents:\n"
+"\n"
+"                # This file contain two headers.\n"
+"                X-header-1: this is a header\n"
+"\n"
+"                # The following header is folded.\n"
+, stdout);
+ fputs(
+"                X-header-2: this is\n"
+"                 another header\n"
+"\n"
+"              To support  sending  multipart  mail  messages,  the  syntax  is\n"
+"              extended as follows:\n"
+"              -  name can be omitted: the equal sign is the first character of\n"
+"              the argument,\n"
+"              - if data starts with '(', this signals to start  a  new  multi-\n"
+"              part: it can be followed by a content type specification.\n"
+, stdout);
+ fputs(
+"              - a multipart can be terminated with a '=)' argument.\n"
+"\n"
+"              Example:  the  following  command sends an SMTP mime e-mail con-\n"
+"              sisting in an inline part in two alternative formats: plain text\n"
+"              and HTML. It attaches a text file:\n"
+"\n"
+"               curl -F '=(;type=multipart/alternative' \\\n"
+"                       -F '=plain text message' \\\n"
+"                       -F '= <body>HTML message</body>;type=text/html' \\\n"
+, stdout);
+ fputs(
+"                    -F '=)' -F '=@textfile.txt' ...  smtp://example.com\n"
+"\n"
+"              Data  can  be  encoded  for  transfer  using encoder=. Available\n"
+"              encodings are binary and 8bit that do nothing else  than  adding\n"
+"              the  corresponding  Content-Transfer-Encoding  header, 7bit that\n"
+"              only rejects 8-bit characters with  a  transfer  error,  quoted-\n"
+"              printable  and  base64 that encodes data according to the corre-\n"
+, stdout);
+ fputs(
+"              sponding schemes, limiting lines length to 76 characters.\n"
+"\n"
+"              Example: send multipart mail with a quoted-printable  text  mes-\n"
+"              sage and a base64 attached file:\n"
+"\n"
+"               curl -F '=text message;encoder=quoted-printable' \\\n"
+"                    -F '=@localfile;encoder=base64' ... smtp://example.com\n"
+"\n"
 "              See further examples and details in the MANUAL.\n"
 "\n"
 "              This option can be used multiple times.\n"
 "\n"
+, stdout);
+ fputs(
 "              This option overrides -d, --data and -I, --head and --upload.\n"
 "\n"
 "       --ftp-account <data>\n"
 "              (FTP) When an FTP server asks for \"account data\" after user name\n"
-"              and  password has been provided, this data is sent off using the\n"
+"              and password has been provided, this data is sent off using  the\n"
 "              ACCT command.\n"
 "\n"
 "              If this option is used several times, the last one will be used.\n"
 "\n"
-, stdout);
- fputs(
 "              Added in 7.13.0.\n"
 "\n"
 "       --ftp-alternative-to-user <command>\n"
-"              (FTP) If authenticating with the USER and PASS  commands  fails,\n"
-"              send  this  command.   When  connecting  to  Tumbleweed's Secure\n"
-"              Transport server over FTPS using  a  client  certificate,  using\n"
-"              \"SITE  AUTH\"  will tell the server to retrieve the username from\n"
+, stdout);
+ fputs(
+"              (FTP)  If  authenticating with the USER and PASS commands fails,\n"
+"              send this  command.   When  connecting  to  Tumbleweed's  Secure\n"
+"              Transport  server  over  FTPS  using a client certificate, using\n"
+"              \"SITE AUTH\" will tell the server to retrieve the  username  from\n"
 "              the certificate.\n"
 "              Added in 7.15.5.\n"
 "\n"
 "       --ftp-create-dirs\n"
+"              (FTP  SFTP)  When  an FTP or SFTP URL/operation uses a path that\n"
 , stdout);
  fputs(
-"              (FTP SFTP) When an FTP or SFTP URL/operation uses  a  path  that\n"
-"              doesn't  currently exist on the server, the standard behavior of\n"
+"              doesn't currently exist on the server, the standard behavior  of\n"
 "              curl is to fail. Using this option, curl will instead attempt to\n"
 "              create missing directories.\n"
 "\n"
 "              See also --create-dirs.\n"
 "\n"
 "       --ftp-method <method>\n"
-"              (FTP)  Control what method curl should use to reach a file on an\n"
-, stdout);
- fputs(
-"              FTP(S) server. The method argument should be one of the  follow-\n"
+"              (FTP) Control what method curl should use to reach a file on  an\n"
+"              FTP(S)  server. The method argument should be one of the follow-\n"
 "              ing alternatives:\n"
 "\n"
 "              multicwd\n"
-"                     curl  does  a  single CWD operation for each path part in\n"
-"                     the given URL. For deep hierarchies this means very  many\n"
-"                     commands.  This  is  how RFC 1738 says it should be done.\n"
+, stdout);
+ fputs(
+"                     curl does a single CWD operation for each  path  part  in\n"
+"                     the  given URL. For deep hierarchies this means very many\n"
+"                     commands. This is how RFC 1738 says it  should  be  done.\n"
 "                     This is the default but the slowest behavior.\n"
 "\n"
+"              nocwd  curl  does  no  CWD at all. curl will do SIZE, RETR, STOR\n"
+"                     etc and give a full path to the server for all these com-\n"
 , stdout);
  fputs(
-"              nocwd  curl does no CWD at all. curl will do  SIZE,  RETR,  STOR\n"
-"                     etc and give a full path to the server for all these com-\n"
 "                     mands. This is the fastest behavior.\n"
 "\n"
 "              singlecwd\n"
 "                     curl does one CWD with the full target directory and then\n"
-"                     operates  on  the  file  \"normally\" (like in the multicwd\n"
-"                     case). This is somewhat  more  standards  compliant  than\n"
-, stdout);
- fputs(
+"                     operates on the file \"normally\"  (like  in  the  multicwd\n"
+"                     case).  This  is  somewhat  more standards compliant than\n"
 "                     'nocwd' but without the full penalty of 'multicwd'.\n"
 "\n"
 "       Added in 7.15.1.\n"
 "\n"
 "       --ftp-pasv\n"
-"              (FTP)  Use  passive mode for the data connection. Passive is the\n"
-"              internal default behavior, but using this option can be used  to\n"
-"              override a previous -P, --ftp-port option.\n"
-"\n"
-"              If  this  option  is  used  several times, only the first one is\n"
-"              used. Undoing an enforced passive really isn't  doable  but  you\n"
 , stdout);
  fputs(
+"              (FTP) Use passive mode for the data connection. Passive  is  the\n"
+"              internal  default behavior, but using this option can be used to\n"
+"              override a previous -P, --ftp-port option.\n"
+"\n"
+"              If this option is used several times,  only  the  first  one  is\n"
+"              used.  Undoing  an  enforced passive really isn't doable but you\n"
 "              must then instead enforce the correct -P, --ftp-port again.\n"
 "\n"
+, stdout);
+ fputs(
 "              Passive mode means that curl will try the EPSV command first and\n"
 "              then PASV, unless --disable-epsv is used.\n"
 "              See also --disable-epsv. Added in 7.11.0.\n"
 "\n"
 "       -P, --ftp-port <address>\n"
-"              (FTP) Reverses the default initiator/listener  roles  when  con-\n"
-"              necting  with  FTP. This option makes curl use active mode. curl\n"
+"              (FTP)  Reverses  the  default initiator/listener roles when con-\n"
+"              necting with FTP. This option makes curl use active  mode.  curl\n"
+"              then  tells the server to connect back to the client's specified\n"
 , stdout);
  fputs(
-"              then tells the server to connect back to the client's  specified\n"
 "              address and port, while passive mode asks the server to setup an\n"
-"              IP address and port for it to connect to.  <address>  should  be\n"
+"              IP  address  and  port for it to connect to. <address> should be\n"
 "              one of:\n"
 "\n"
 "              interface\n"
-"                     i.e  \"eth0\"  to  specify which interface's IP address you\n"
+"                     i.e \"eth0\" to specify which interface's  IP  address  you\n"
 "                     want to use (Unix only)\n"
 "\n"
 "              IP address\n"
-, stdout);
- fputs(
 "                     i.e \"192.168.10.1\" to specify the exact IP address\n"
 "\n"
 "              host name\n"
+, stdout);
+ fputs(
 "                     i.e \"my.host.domain\" to specify the machine\n"
 "\n"
-"              -      make curl pick the same IP address that is  already  used\n"
+"              -      make  curl  pick the same IP address that is already used\n"
 "                     for the control connection\n"
 "\n"
-"       If  this  option is used several times, the last one will be used. Dis-\n"
-"       able the use of PORT with --ftp-pasv. Disable the attempt  to  use  the\n"
-, stdout);
- fputs(
-"       EPRT  command  instead  of PORT by using --disable-eprt. EPRT is really\n"
+"       If this option is used several times, the last one will be  used.  Dis-\n"
+"       able  the  use  of PORT with --ftp-pasv. Disable the attempt to use the\n"
+"       EPRT command instead of PORT by using --disable-eprt.  EPRT  is  really\n"
 "       PORT++.\n"
 "\n"
-"       Since 7.19.5, you can append  \":[start]-[end]\"  to  the  right  of  the\n"
-"       address,  to tell curl what TCP port range to use. That means you spec-\n"
-"       ify a port range, from a lower to a  higher  number.  A  single  number\n"
-"       works  as well, but do note that it increases the risk of failure since\n"
+, stdout);
+ fputs(
+"       Since  7.19.5,  you  can  append  \":[start]-[end]\"  to the right of the\n"
+"       address, to tell curl what TCP port range to use. That means you  spec-\n"
+"       ify  a  port  range,  from  a lower to a higher number. A single number\n"
+"       works as well, but do note that it increases the risk of failure  since\n"
 "       the port may not be available.\n"
 "\n"
 "       See also --ftp-pasv and --disable-eprt.\n"
 "\n"
+"       --ftp-pret\n"
 , stdout);
  fputs(
-"       --ftp-pret\n"
-"              (FTP) Tell curl to send a PRET command before PASV  (and  EPSV).\n"
-"              Certain  FTP  servers,  mainly drftpd, require this non-standard\n"
-"              command for directory listings as well as up  and  downloads  in\n"
+"              (FTP)  Tell  curl to send a PRET command before PASV (and EPSV).\n"
+"              Certain FTP servers, mainly drftpd,  require  this  non-standard\n"
+"              command  for  directory  listings as well as up and downloads in\n"
 "              PASV mode.\n"
 "\n"
 "              Added in 7.20.0.\n"
 "\n"
 "       --ftp-skip-pasv-ip\n"
 "              (FTP) Tell curl to not use the IP address the server suggests in\n"
-"              its response to curl's PASV command when curl connects the  data\n"
+"              its  response to curl's PASV command when curl connects the data\n"
 , stdout);
  fputs(
-"              connection.  Instead  curl  will  re-use  the same IP address it\n"
+"              connection. Instead curl will re-use  the  same  IP  address  it\n"
 "              already uses for the control connection.\n"
 "\n"
-"              This option has no effect if PORT, EPRT or EPSV is used  instead\n"
+"              This  option has no effect if PORT, EPRT or EPSV is used instead\n"
 "              of PASV.\n"
 "\n"
 "              See also --ftp-pasv. Added in 7.14.2.\n"
 "\n"
 "       --ftp-ssl-ccc-mode <active/passive>\n"
-"              (FTP)  Sets the CCC mode. The passive mode will not initiate the\n"
+"              (FTP) Sets the CCC mode. The passive mode will not initiate  the\n"
 "              shutdown, but instead wait for the server to do it, and will not\n"
 , stdout);
  fputs(
 "              reply to the shutdown from the server. The active mode initiates\n"
 "              the shutdown and waits for a reply from the server.\n"
 "\n"
 "              See also --ftp-ssl-ccc. Added in 7.16.2.\n"
 "\n"
 "       --ftp-ssl-ccc\n"
-"              (FTP) Use CCC (Clear Command Channel)  Shuts  down  the  SSL/TLS\n"
+"              (FTP)  Use  CCC  (Clear  Command Channel) Shuts down the SSL/TLS\n"
 "              layer after authenticating. The rest of the control channel com-\n"
-"              munication will be unencrypted. This allows NAT routers to  fol-\n"
+"              munication  will be unencrypted. This allows NAT routers to fol-\n"
 , stdout);
  fputs(
 "              low the FTP transaction. The default mode is passive.\n"
 "\n"
 "              See also --ssl and --ftp-ssl-ccc-mode. Added in 7.16.1.\n"
 "\n"
 "       --ftp-ssl-control\n"
-"              (FTP)  Require  SSL/TLS  for  the FTP login, clear for transfer.\n"
-"              Allows secure authentication, but non-encrypted  data  transfers\n"
-"              for  efficiency.   Fails the transfer if the server doesn't sup-\n"
+"              (FTP) Require SSL/TLS for the FTP  login,  clear  for  transfer.\n"
+"              Allows  secure  authentication, but non-encrypted data transfers\n"
+"              for efficiency.  Fails the transfer if the server  doesn't  sup-\n"
 "              port SSL/TLS.\n"
 "\n"
 "              Added in 7.16.0.\n"
 "\n"
 "       -G, --get\n"
 , stdout);
  fputs(
-"              When used, this option will make all  data  specified  with  -d,\n"
-"              --data,  --data-binary or --data-urlencode to be used in an HTTP\n"
-"              GET request instead of the POST request that otherwise would  be\n"
+"              When  used,  this  option  will make all data specified with -d,\n"
+"              --data, --data-binary or --data-urlencode to be used in an  HTTP\n"
+"              GET  request instead of the POST request that otherwise would be\n"
 "              used. The data will be appended to the URL with a '?' separator.\n"
-"              If  used  in  combination  with  -I,  --head, the POST data will\n"
+"              If used in combination with  -I,  --head,  the  POST  data  will\n"
 "              instead be appended to the URL with a HEAD request.\n"
 "\n"
 , stdout);
  fputs(
-"              If this option is used several times,  only  the  first  one  is\n"
-"              used.  This is because undoing a GET doesn't make sense, but you\n"
+"              If  this  option  is  used  several times, only the first one is\n"
+"              used. This is because undoing a GET doesn't make sense, but  you\n"
 "              should then instead enforce the alternative method you prefer.\n"
 "\n"
 "       -g, --globoff\n"
 "              This option switches off the \"URL globbing parser\". When you set\n"
-"              this  option, you can specify URLs that contain the letters {}[]\n"
-"              without having them being interpreted by curl itself. Note  that\n"
+"              this option, you can specify URLs that contain the letters  {}[]\n"
+"              without  having them being interpreted by curl itself. Note that\n"
 , stdout);
  fputs(
-"              these  letters are not normal legal URL contents but they should\n"
+"              these letters are not normal legal URL contents but they  should\n"
 "              be encoded according to the URI standard.\n"
 "\n"
 "       -I, --head\n"
 "              (HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the\n"
-"              command  HEAD which this uses to get nothing but the header of a\n"
-"              document. When used on an FTP or FILE file,  curl  displays  the\n"
+"              command HEAD which this uses to get nothing but the header of  a\n"
+"              document.  When  used  on an FTP or FILE file, curl displays the\n"
 "              file size and last modification time only.\n"
 "\n"
 "       -H, --header <header/@file>\n"
 , stdout);
  fputs(
-"              (HTTP)  Extra header to include in the request when sending HTTP\n"
-"              to a server. You may specify any number of extra  headers.  Note\n"
+"              (HTTP) Extra header to include in the request when sending  HTTP\n"
+"              to  a  server. You may specify any number of extra headers. Note\n"
 "              that if you should add a custom header that has the same name as\n"
-"              one of the internal ones curl would  use,  your  externally  set\n"
+"              one  of  the  internal  ones curl would use, your externally set\n"
 "              header will be used instead of the internal one. This allows you\n"
-"              to make even trickier stuff than curl  would  normally  do.  You\n"
+"              to  make  even  trickier  stuff than curl would normally do. You\n"
 , stdout);
  fputs(
-"              should  not  replace internally set headers without knowing per-\n"
+"              should not replace internally set headers without  knowing  per-\n"
 "              fectly well what you're doing. Remove an internal header by giv-\n"
-"              ing  a  replacement  without  content  on  the right side of the\n"
+"              ing a replacement without content  on  the  right  side  of  the\n"
 "              colon, as in: -H \"Host:\". If you send the custom header with no-\n"
-"              value  then its header must be terminated with a semicolon, such\n"
+"              value then its header must be terminated with a semicolon,  such\n"
 "              as -H \"X-Custom-Header;\" to send \"X-Custom-Header:\".\n"
 "\n"
 , stdout);
  fputs(
-"              curl will make sure that each header  you  add/replace  is  sent\n"
+"              curl  will  make  sure  that each header you add/replace is sent\n"
 "              with the proper end-of-line marker, you should thus not add that\n"
 "              as a part of the header content: do not add newlines or carriage\n"
 "              returns, they will only mess things up for you.\n"
 "\n"
-"              Starting  in  7.55.0, this option can take an argument in @file-\n"
-"              name style, which then adds a header for each line in the  input\n"
+"              Starting in 7.55.0, this option can take an argument  in  @file-\n"
+"              name  style, which then adds a header for each line in the input\n"
 , stdout);
  fputs(
 "              file. Using @- will make curl read the header file from stdin.\n"
 "\n"
 "              See also the -A, --user-agent and -e, --referer options.\n"
 "\n"

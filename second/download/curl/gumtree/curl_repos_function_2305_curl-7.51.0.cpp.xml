<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2305_curl-7.51.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">verify_certificate<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">connectdata<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">conn<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">sockindex<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">SECURITY_STATUS<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">status<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">ssl_connect_data<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">connssl<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><operator pos:line="5" pos:column="38">&amp;<pos:position pos:line="5" pos:column="43"/></operator><name><name pos:line="5" pos:column="39">conn<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">ssl<pos:position pos:line="5" pos:column="48"/></name><index pos:line="5" pos:column="48">[<expr><name pos:line="5" pos:column="49">sockindex<pos:position pos:line="5" pos:column="58"/></name></expr>]<pos:position pos:line="5" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">CURLcode<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">CURLE_OK<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CERT_CONTEXT<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">pCertContextServer<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">CERT_CHAIN_CONTEXT<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">pChainContext<pos:position pos:line="8" pos:column="42"/></name> <init pos:line="8" pos:column="43">= <expr><name pos:line="8" pos:column="45">NULL<pos:position pos:line="8" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">status<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name><name pos:line="10" pos:column="12">s_pSecFn<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">QueryContextAttributes<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">(<argument><expr><operator pos:line="10" pos:column="45">&amp;<pos:position pos:line="10" pos:column="50"/></operator><name><name pos:line="10" pos:column="46">connssl<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">ctxt<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">-&gt;<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="61">ctxt_handle<pos:position pos:line="10" pos:column="72"/></name></name></expr></argument>,
                                            <argument><expr><name pos:line="11" pos:column="45">SECPKG_ATTR_REMOTE_CERT_CONTEXT<pos:position pos:line="11" pos:column="76"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="12" pos:column="45">&amp;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="46">pCertContextServer<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">(<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">SEC_E_OK<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator> <operator pos:line="14" pos:column="27">||<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">pCertContextServer<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">==<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="53">NULL<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">)<pos:position pos:line="14" pos:column="58"/></operator></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59"> <block pos:line="14" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">failf<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">data<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="17">"schannel: Failed to read remote certificate context: %s"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="16" pos:column="11">Curl_sspi_strerror<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">conn<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">status<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">result<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <if pos:line="20" pos:column="3">if<condition pos:line="20" pos:column="5">(<expr><name pos:line="20" pos:column="6">result<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">==<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">CURLE_OK<pos:position pos:line="20" pos:column="24"/></name></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25"> <block pos:line="20" pos:column="26">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">CERT_CHAIN_PARA<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">ChainPara<pos:position pos:line="21" pos:column="30"/></name></decl>;<pos:position pos:line="21" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memset<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><operator pos:line="22" pos:column="12">&amp;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="13">ChainPara<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="27">sizeof<argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">ChainPara<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">ChainPara<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">cbSize<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <sizeof pos:line="23" pos:column="24">sizeof<argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">ChainPara<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>

    <if pos:line="25" pos:column="5">if<condition pos:line="25" pos:column="7">(<expr><operator pos:line="25" pos:column="8">!<pos:position pos:line="25" pos:column="9"/></operator><call><name pos:line="25" pos:column="9">CertGetCertificateChain<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr></argument>,
                                <argument><expr><name pos:line="26" pos:column="33">pCertContextServer<pos:position pos:line="26" pos:column="51"/></name></expr></argument>,
                                <argument><expr><name pos:line="27" pos:column="33">NULL<pos:position pos:line="27" pos:column="37"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="28" pos:column="33">pCertContextServer<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">-&gt;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="53">hCertStore<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="29" pos:column="33">&amp;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="34">ChainPara<pos:position pos:line="29" pos:column="43"/></name></expr></argument>,
                                <argument><expr><operator pos:line="30" pos:column="33">(<pos:position pos:line="30" pos:column="34"/></operator><ternary><condition><expr><name><name pos:line="30" pos:column="34">data<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">-&gt;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="40">set<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">.<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">ssl_no_revoke<pos:position pos:line="30" pos:column="57"/></name></name></expr> ?<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59"> <expr><literal type="number" pos:line="30" pos:column="60">0<pos:position pos:line="30" pos:column="61"/></literal></expr> <pos:position pos:line="30" pos:column="62"/></then><else pos:line="30" pos:column="62">:
                                 <expr><name pos:line="31" pos:column="34">CERT_CHAIN_REVOCATION_CHECK_CHAIN<pos:position pos:line="31" pos:column="67"/></name></expr></else></ternary><operator pos:line="31" pos:column="67">)<pos:position pos:line="31" pos:column="68"/></operator></expr></argument>,
                                <argument><expr><name pos:line="32" pos:column="33">NULL<pos:position pos:line="32" pos:column="37"/></name></expr></argument>,
                                <argument><expr><operator pos:line="33" pos:column="33">&amp;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="34">pChainContext<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49"> <block pos:line="33" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">failf<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">data<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"schannel: CertGetCertificateChain failed: %s"<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="35" pos:column="13">Curl_sspi_strerror<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">conn<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="38">GetLastError<pos:position pos:line="35" pos:column="50"/></name><argument_list pos:line="35" pos:column="50">()<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">pChainContext<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">NULL<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">result<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name pos:line="37" pos:column="16">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="37" pos:column="46"/></name></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if<condition pos:line="40" pos:column="7">(<expr><name pos:line="40" pos:column="8">result<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">CURLE_OK<pos:position pos:line="40" pos:column="26"/></name></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27"> <block pos:line="40" pos:column="28">{
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">CERT_SIMPLE_CHAIN<pos:position pos:line="41" pos:column="24"/></name> <modifier pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></modifier></type><name pos:line="41" pos:column="26">pSimpleChain<pos:position pos:line="41" pos:column="38"/></name> <init pos:line="41" pos:column="39">= <expr><name><name pos:line="41" pos:column="41">pChainContext<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">rgpChain<pos:position pos:line="41" pos:column="64"/></name><index pos:line="41" pos:column="64">[<expr><literal type="number" pos:line="41" pos:column="65">0<pos:position pos:line="41" pos:column="66"/></literal></expr>]<pos:position pos:line="41" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="41" pos:column="68"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">DWORD<pos:position pos:line="42" pos:column="12"/></name></type> <name pos:line="42" pos:column="13">dwTrustErrorMask<pos:position pos:line="42" pos:column="29"/></name> <init pos:line="42" pos:column="30">= <expr><operator pos:line="42" pos:column="32">~<pos:position pos:line="42" pos:column="33"/></operator><call pos:line="42" pos:column="33">(<name pos:line="42" pos:column="34">DWORD<pos:position pos:line="42" pos:column="39"/></name>)<argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">CERT_TRUST_IS_NOT_TIME_NESTED<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="72"/></decl_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">dwTrustErrorMask<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">&amp;=<pos:position pos:line="43" pos:column="30"/></operator> <name><name pos:line="43" pos:column="27">pSimpleChain<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">TrustStatus<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">.<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="53">dwErrorStatus<pos:position pos:line="43" pos:column="66"/></name></name></expr>;<pos:position pos:line="43" pos:column="67"/></expr_stmt>
      <if pos:line="44" pos:column="7">if<condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">dwTrustErrorMask<pos:position pos:line="44" pos:column="26"/></name></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27"> <block pos:line="44" pos:column="28">{
        <if pos:line="45" pos:column="9">if<condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">dwTrustErrorMask<pos:position pos:line="45" pos:column="28"/></name> <operator pos:line="45" pos:column="29">&amp;<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="31">CERT_TRUST_IS_REVOKED<pos:position pos:line="45" pos:column="52"/></name></expr>)<pos:position pos:line="45" pos:column="53"/></condition><then pos:line="45" pos:column="53">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="11">failf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">data<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"schannel: CertGetCertificateChain trust error"<pos:position pos:line="46" pos:column="70"/></literal>
                <literal type="string" pos:line="47" pos:column="17">" CERT_TRUST_IS_REVOKED"<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt></block></then>
        <elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if<condition pos:line="48" pos:column="16">(<expr><name pos:line="48" pos:column="17">dwTrustErrorMask<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">&amp;<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="36">CERT_TRUST_IS_PARTIAL_CHAIN<pos:position pos:line="48" pos:column="63"/></name></expr>)<pos:position pos:line="48" pos:column="64"/></condition><then pos:line="48" pos:column="64">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="11">failf<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">data<pos:position pos:line="49" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"schannel: CertGetCertificateChain trust error"<pos:position pos:line="49" pos:column="70"/></literal>
                <literal type="string" pos:line="50" pos:column="17">" CERT_TRUST_IS_PARTIAL_CHAIN"<pos:position pos:line="50" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="51" pos:column="9">else <if pos:line="51" pos:column="14">if<condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">dwTrustErrorMask<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator> <name pos:line="51" pos:column="36">CERT_TRUST_IS_UNTRUSTED_ROOT<pos:position pos:line="51" pos:column="64"/></name></expr>)<pos:position pos:line="51" pos:column="65"/></condition><then pos:line="51" pos:column="65">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="11">failf<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">data<pos:position pos:line="52" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">"schannel: CertGetCertificateChain trust error"<pos:position pos:line="52" pos:column="70"/></literal>
                <literal type="string" pos:line="53" pos:column="17">" CERT_TRUST_IS_UNTRUSTED_ROOT"<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="54" pos:column="9">else <if pos:line="54" pos:column="14">if<condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">dwTrustErrorMask<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">&amp;<pos:position pos:line="54" pos:column="39"/></operator> <name pos:line="54" pos:column="36">CERT_TRUST_IS_NOT_TIME_VALID<pos:position pos:line="54" pos:column="64"/></name></expr>)<pos:position pos:line="54" pos:column="65"/></condition><then pos:line="54" pos:column="65">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="11">failf<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">data<pos:position pos:line="55" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="23">"schannel: CertGetCertificateChain trust error"<pos:position pos:line="55" pos:column="70"/></literal>
                <literal type="string" pos:line="56" pos:column="17">" CERT_TRUST_IS_NOT_TIME_VALID"<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt></block></then></if></elseif>
        <else pos:line="57" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="11">failf<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name pos:line="58" pos:column="17">data<pos:position pos:line="58" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="23">"schannel: CertGetCertificateChain error mask: 0x%08x"<pos:position pos:line="58" pos:column="77"/></literal></expr></argument>,
                <argument><expr><name pos:line="59" pos:column="17">dwTrustErrorMask<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name pos:line="60" pos:column="9">result<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <name pos:line="60" pos:column="18">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="60" pos:column="48"/></name></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

  <if pos:line="65" pos:column="3">if<condition pos:line="65" pos:column="5">(<expr><name pos:line="65" pos:column="6">result<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">==<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">CURLE_OK<pos:position pos:line="65" pos:column="24"/></name></expr>)<pos:position pos:line="65" pos:column="25"/></condition><then pos:line="65" pos:column="25"> <block pos:line="65" pos:column="26">{
    <if pos:line="66" pos:column="5">if<condition pos:line="66" pos:column="7">(<expr><name><name pos:line="66" pos:column="8">data<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">set<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">.<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">ssl<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">.<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">verifyhost<pos:position pos:line="66" pos:column="32"/></name></name></expr>)<pos:position pos:line="66" pos:column="33"/></condition><then pos:line="66" pos:column="33"> <block pos:line="66" pos:column="34">{
      <decl_stmt><decl><type><name pos:line="67" pos:column="7">TCHAR<pos:position pos:line="67" pos:column="12"/></name></type> <name><name pos:line="67" pos:column="13">cert_hostname_buff<pos:position pos:line="67" pos:column="31"/></name><index pos:line="67" pos:column="31">[<expr><literal type="number" pos:line="67" pos:column="32">128<pos:position pos:line="67" pos:column="35"/></literal></expr>]<pos:position pos:line="67" pos:column="36"/></index></name></decl>;<pos:position pos:line="67" pos:column="37"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="68" pos:column="7">xcharp_u<pos:position pos:line="68" pos:column="15"/></name></type> <name pos:line="68" pos:column="16">hostname<pos:position pos:line="68" pos:column="24"/></name></decl>;<pos:position pos:line="68" pos:column="25"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="69" pos:column="7">xcharp_u<pos:position pos:line="69" pos:column="15"/></name></type> <name pos:line="69" pos:column="16">cert_hostname<pos:position pos:line="69" pos:column="29"/></name></decl>;<pos:position pos:line="69" pos:column="30"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="70" pos:column="7">DWORD<pos:position pos:line="70" pos:column="12"/></name></type> <name pos:line="70" pos:column="13">len<pos:position pos:line="70" pos:column="16"/></name></decl>;<pos:position pos:line="70" pos:column="17"/></decl_stmt>

      <expr_stmt><expr><name><name pos:line="72" pos:column="7">cert_hostname<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">.<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">const_tchar_ptr<pos:position pos:line="72" pos:column="36"/></name></name> <operator pos:line="72" pos:column="37">=<pos:position pos:line="72" pos:column="38"/></operator> <name pos:line="72" pos:column="39">cert_hostname_buff<pos:position pos:line="72" pos:column="57"/></name></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">hostname<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">.<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="16">tchar_ptr<pos:position pos:line="73" pos:column="25"/></name></name> <operator pos:line="73" pos:column="26">=<pos:position pos:line="73" pos:column="27"/></operator> <call><name pos:line="73" pos:column="28">Curl_convert_UTF8_to_tchar<pos:position pos:line="73" pos:column="54"/></name><argument_list pos:line="73" pos:column="54">(<argument><expr><name><name pos:line="73" pos:column="55">conn<pos:position pos:line="73" pos:column="59"/></name><operator pos:line="73" pos:column="59">-&gt;<pos:position pos:line="73" pos:column="64"/></operator><name pos:line="73" pos:column="61">host<pos:position pos:line="73" pos:column="65"/></name><operator pos:line="73" pos:column="65">.<pos:position pos:line="73" pos:column="66"/></operator><name pos:line="73" pos:column="66">name<pos:position pos:line="73" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="72"/></expr_stmt>

      <comment type="block" pos:line="75" pos:column="7">/* TODO: Fix this for certificates with multiple alternative names.
      Right now we're only asking for the first preferred alternative name.
      Instead we'd need to do all via CERT_NAME_SEARCH_ALL_NAMES_FLAG
      (if WinCE supports that?) and run this section in a loop for each.
      https://msdn.microsoft.com/en-us/library/windows/desktop/aa376086.aspx
      curl: (51) schannel: CertGetNameString() certificate hostname
      (.google.com) did not match connection (google.com)
      */</comment>
      <expr_stmt><expr><name pos:line="83" pos:column="7">len<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <call><name pos:line="83" pos:column="13">CertGetNameString<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">pCertContextServer<pos:position pos:line="83" pos:column="49"/></name></expr></argument>,
                              <argument><expr><name pos:line="84" pos:column="31">CERT_NAME_DNS_TYPE<pos:position pos:line="84" pos:column="49"/></name></expr></argument>,
                              <argument><expr><literal type="number" pos:line="85" pos:column="31">0<pos:position pos:line="85" pos:column="32"/></literal></expr></argument>,
                              <argument><expr><name pos:line="86" pos:column="31">NULL<pos:position pos:line="86" pos:column="35"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="87" pos:column="31">cert_hostname<pos:position pos:line="87" pos:column="44"/></name><operator pos:line="87" pos:column="44">.<pos:position pos:line="87" pos:column="45"/></operator><name pos:line="87" pos:column="45">tchar_ptr<pos:position pos:line="87" pos:column="54"/></name></name></expr></argument>,
                              <argument><expr><literal type="number" pos:line="88" pos:column="31">128<pos:position pos:line="88" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="36"/></expr_stmt>
      <if pos:line="89" pos:column="7">if<condition pos:line="89" pos:column="9">(<expr><name pos:line="89" pos:column="10">len<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">&gt;<pos:position pos:line="89" pos:column="18"/></operator> <literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal> <operator pos:line="89" pos:column="18">&amp;&amp;<pos:position pos:line="89" pos:column="28"/></operator> <operator pos:line="89" pos:column="21">*<pos:position pos:line="89" pos:column="22"/></operator><name><name pos:line="89" pos:column="22">cert_hostname<pos:position pos:line="89" pos:column="35"/></name><operator pos:line="89" pos:column="35">.<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">tchar_ptr<pos:position pos:line="89" pos:column="45"/></name></name> <operator pos:line="89" pos:column="46">==<pos:position pos:line="89" pos:column="48"/></operator> <literal type="char" pos:line="89" pos:column="49">'*'<pos:position pos:line="89" pos:column="52"/></literal></expr>)<pos:position pos:line="89" pos:column="53"/></condition><then pos:line="89" pos:column="53"> <block pos:line="89" pos:column="54">{
        <comment type="block" pos:line="90" pos:column="9">/* this is a wildcard cert.  try matching the last len - 1 chars */</comment>
        <decl_stmt><decl><type><name pos:line="91" pos:column="9">int<pos:position pos:line="91" pos:column="12"/></name></type> <name pos:line="91" pos:column="13">hostname_len<pos:position pos:line="91" pos:column="25"/></name> <init pos:line="91" pos:column="26">= <expr><call><name pos:line="91" pos:column="28">strlen<pos:position pos:line="91" pos:column="34"/></name><argument_list pos:line="91" pos:column="34">(<argument><expr><name><name pos:line="91" pos:column="35">conn<pos:position pos:line="91" pos:column="39"/></name><operator pos:line="91" pos:column="39">-&gt;<pos:position pos:line="91" pos:column="44"/></operator><name pos:line="91" pos:column="41">host<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">.<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="46">name<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="91" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">cert_hostname<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">.<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="23">tchar_ptr<pos:position pos:line="92" pos:column="32"/></name></name><operator pos:line="92" pos:column="32">++<pos:position pos:line="92" pos:column="34"/></operator></expr>;<pos:position pos:line="92" pos:column="35"/></expr_stmt>
        <if pos:line="93" pos:column="9">if<condition pos:line="93" pos:column="11">(<expr><call><name pos:line="93" pos:column="12">_tcsicmp<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><name><name pos:line="93" pos:column="21">cert_hostname<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">.<pos:position pos:line="93" pos:column="35"/></operator><name pos:line="93" pos:column="35">const_tchar_ptr<pos:position pos:line="93" pos:column="50"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="94" pos:column="21">hostname<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">.<pos:position pos:line="94" pos:column="30"/></operator><name pos:line="94" pos:column="30">const_tchar_ptr<pos:position pos:line="94" pos:column="45"/></name></name> <operator pos:line="94" pos:column="46">+<pos:position pos:line="94" pos:column="47"/></operator> <name pos:line="94" pos:column="48">hostname_len<pos:position pos:line="94" pos:column="60"/></name> <operator pos:line="94" pos:column="61">-<pos:position pos:line="94" pos:column="62"/></operator> <name pos:line="94" pos:column="63">len<pos:position pos:line="94" pos:column="66"/></name> <operator pos:line="94" pos:column="67">+<pos:position pos:line="94" pos:column="68"/></operator> <literal type="number" pos:line="94" pos:column="69">2<pos:position pos:line="94" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="71"/></argument_list></call> <operator pos:line="94" pos:column="72">!=<pos:position pos:line="94" pos:column="74"/></operator> <literal type="number" pos:line="94" pos:column="75">0<pos:position pos:line="94" pos:column="76"/></literal></expr>)<pos:position pos:line="94" pos:column="77"/></condition><then pos:line="94" pos:column="77">
          <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="11">result<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <name pos:line="95" pos:column="20">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="95" pos:column="50"/></name></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt></block></then></if>
      }<pos:position pos:line="96" pos:column="8"/></block></then>
      <elseif pos:line="97" pos:column="7">else <if pos:line="97" pos:column="12">if<condition pos:line="97" pos:column="14">(<expr><name pos:line="97" pos:column="15">len<pos:position pos:line="97" pos:column="18"/></name> <operator pos:line="97" pos:column="19">==<pos:position pos:line="97" pos:column="21"/></operator> <literal type="number" pos:line="97" pos:column="22">0<pos:position pos:line="97" pos:column="23"/></literal> <operator pos:line="97" pos:column="24">||<pos:position pos:line="97" pos:column="26"/></operator> <call><name pos:line="97" pos:column="27">_tcsicmp<pos:position pos:line="97" pos:column="35"/></name><argument_list pos:line="97" pos:column="35">(<argument><expr><name><name pos:line="97" pos:column="36">hostname<pos:position pos:line="97" pos:column="44"/></name><operator pos:line="97" pos:column="44">.<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="45">const_tchar_ptr<pos:position pos:line="97" pos:column="60"/></name></name></expr></argument>,
                                   <argument><expr><name><name pos:line="98" pos:column="36">cert_hostname<pos:position pos:line="98" pos:column="49"/></name><operator pos:line="98" pos:column="49">.<pos:position pos:line="98" pos:column="50"/></operator><name pos:line="98" pos:column="50">const_tchar_ptr<pos:position pos:line="98" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call> <operator pos:line="98" pos:column="67">!=<pos:position pos:line="98" pos:column="69"/></operator> <literal type="number" pos:line="98" pos:column="70">0<pos:position pos:line="98" pos:column="71"/></literal></expr>)<pos:position pos:line="98" pos:column="72"/></condition><then pos:line="98" pos:column="72"> <block pos:line="98" pos:column="73">{
        <expr_stmt><expr><name pos:line="99" pos:column="9">result<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <name pos:line="99" pos:column="18">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="99" pos:column="48"/></name></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="100" pos:column="8"/></block></then></if></elseif></if>
      <if pos:line="101" pos:column="7">if<condition pos:line="101" pos:column="9">(<expr><name pos:line="101" pos:column="10">result<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">==<pos:position pos:line="101" pos:column="19"/></operator> <name pos:line="101" pos:column="20">CURLE_PEER_FAILED_VERIFICATION<pos:position pos:line="101" pos:column="50"/></name></expr>)<pos:position pos:line="101" pos:column="51"/></condition><then pos:line="101" pos:column="51"> <block pos:line="101" pos:column="52">{
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">char<pos:position pos:line="102" pos:column="13"/></name> <modifier pos:line="102" pos:column="14">*<pos:position pos:line="102" pos:column="15"/></modifier></type><name pos:line="102" pos:column="15">_cert_hostname<pos:position pos:line="102" pos:column="29"/></name></decl>;<pos:position pos:line="102" pos:column="30"/></decl_stmt>
        <expr_stmt><expr><name pos:line="103" pos:column="9">_cert_hostname<pos:position pos:line="103" pos:column="23"/></name> <operator pos:line="103" pos:column="24">=<pos:position pos:line="103" pos:column="25"/></operator> <call><name pos:line="103" pos:column="26">Curl_convert_tchar_to_UTF8<pos:position pos:line="103" pos:column="52"/></name><argument_list pos:line="103" pos:column="52">(<argument><expr><name><name pos:line="103" pos:column="53">cert_hostname<pos:position pos:line="103" pos:column="66"/></name><operator pos:line="103" pos:column="66">.<pos:position pos:line="103" pos:column="67"/></operator><name pos:line="103" pos:column="67">tchar_ptr<pos:position pos:line="103" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">failf<pos:position pos:line="104" pos:column="14"/></name><argument_list pos:line="104" pos:column="14">(<argument><expr><name pos:line="104" pos:column="15">data<pos:position pos:line="104" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="21">"schannel: CertGetNameString() certificate hostname "<pos:position pos:line="104" pos:column="74"/></literal>
              <literal type="string" pos:line="105" pos:column="15">"(%s) did not match connection (%s)"<pos:position pos:line="105" pos:column="51"/></literal></expr></argument>,
              <argument><expr><name pos:line="106" pos:column="15">_cert_hostname<pos:position pos:line="106" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="31">conn<pos:position pos:line="106" pos:column="35"/></name><operator pos:line="106" pos:column="35">-&gt;<pos:position pos:line="106" pos:column="40"/></operator><name pos:line="106" pos:column="37">host<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">.<pos:position pos:line="106" pos:column="42"/></operator><name pos:line="106" pos:column="42">name<pos:position pos:line="106" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">Curl_unicodefree<pos:position pos:line="107" pos:column="25"/></name><argument_list pos:line="107" pos:column="25">(<argument><expr><name pos:line="107" pos:column="26">_cert_hostname<pos:position pos:line="107" pos:column="40"/></name></expr></argument>)<pos:position pos:line="107" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="42"/></expr_stmt>
      }<pos:position pos:line="108" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="109" pos:column="7">Curl_unicodefree<pos:position pos:line="109" pos:column="23"/></name><argument_list pos:line="109" pos:column="23">(<argument><expr><name><name pos:line="109" pos:column="24">hostname<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">.<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="33">tchar_ptr<pos:position pos:line="109" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
  }<pos:position pos:line="111" pos:column="4"/></block></then></if>

  <if pos:line="113" pos:column="3">if<condition pos:line="113" pos:column="5">(<expr><name pos:line="113" pos:column="6">pChainContext<pos:position pos:line="113" pos:column="19"/></name></expr>)<pos:position pos:line="113" pos:column="20"/></condition><then pos:line="113" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="5">CertFreeCertificateChain<pos:position pos:line="114" pos:column="29"/></name><argument_list pos:line="114" pos:column="29">(<argument><expr><name pos:line="114" pos:column="30">pChainContext<pos:position pos:line="114" pos:column="43"/></name></expr></argument>)<pos:position pos:line="114" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt></block></then></if>

  <if pos:line="116" pos:column="3">if<condition pos:line="116" pos:column="5">(<expr><name pos:line="116" pos:column="6">pCertContextServer<pos:position pos:line="116" pos:column="24"/></name></expr>)<pos:position pos:line="116" pos:column="25"/></condition><then pos:line="116" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="5">CertFreeCertificateContext<pos:position pos:line="117" pos:column="31"/></name><argument_list pos:line="117" pos:column="31">(<argument><expr><name pos:line="117" pos:column="32">pCertContextServer<pos:position pos:line="117" pos:column="50"/></name></expr></argument>)<pos:position pos:line="117" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="52"/></expr_stmt></block></then></if>

  <return pos:line="119" pos:column="3">return <expr><name pos:line="119" pos:column="10">result<pos:position pos:line="119" pos:column="16"/></name></expr>;<pos:position pos:line="119" pos:column="17"/></return>
}<pos:position pos:line="120" pos:column="2"/></block></function></unit>

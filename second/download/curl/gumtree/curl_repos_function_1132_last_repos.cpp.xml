<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1132_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_rtsp_parseheader<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">connectdata<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">conn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">header<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">Curl_easy<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">conn<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">data<pos:position pos:line="4" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">CSeq<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><call><name pos:line="7" pos:column="6">checkprefix<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><literal type="string" pos:line="7" pos:column="18">"CSeq:"<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">header<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35"> <block pos:line="7" pos:column="36">{
    <comment type="block" pos:line="8" pos:column="5">/* Store the received CSeq. Match is verified in rtsp_done */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">nc<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><call><name pos:line="9" pos:column="14">sscanf<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name><name pos:line="9" pos:column="22">header<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><literal type="number" pos:line="9" pos:column="29">4<pos:position pos:line="9" pos:column="30"/></literal></expr>]<pos:position pos:line="9" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">": %ld"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="42">&amp;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="43">CSeq<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name pos:line="10" pos:column="8">nc<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block pos:line="10" pos:column="17">{
      <decl_stmt><decl><type><name><name pos:line="11" pos:column="7">struct<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">RTSP<pos:position pos:line="11" pos:column="18"/></name></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">rtsp<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name><name pos:line="11" pos:column="27">data<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">req<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">protop<pos:position pos:line="11" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
      <expr_stmt><expr><name><name pos:line="12" pos:column="7">rtsp<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">CSeq_recv<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">CSeq<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt> <comment type="block" pos:line="12" pos:column="31">/* mark the request */</comment>
      <expr_stmt><expr><name><name pos:line="13" pos:column="7">data<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">state<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">rtsp_CSeq_recv<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">=<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">CSeq<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt> <comment type="block" pos:line="13" pos:column="42">/* update the handle */</comment>
    }<pos:position pos:line="14" pos:column="6"/></block></then>
    <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">failf<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">data<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"Unable to read the CSeq header: [%s]"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="59">header<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">CURLE_RTSP_CSEQ_ERROR<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if<condition pos:line="20" pos:column="10">(<expr><call><name pos:line="20" pos:column="11">checkprefix<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><literal type="string" pos:line="20" pos:column="23">"Session:"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">header<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">start<pos:position pos:line="21" pos:column="16"/></name></decl>;<pos:position pos:line="21" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Find the first non-space letter */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">start<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">header<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">+<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">8<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    <while pos:line="25" pos:column="5">while<condition pos:line="25" pos:column="10">(<expr><operator pos:line="25" pos:column="11">*<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">start<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&amp;&amp;<pos:position pos:line="25" pos:column="28"/></operator> <call><name pos:line="25" pos:column="21">ISSPACE<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">start<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="37"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">start<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">++<pos:position pos:line="26" pos:column="14"/></operator></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt></block></while>

    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><operator pos:line="28" pos:column="8">!<pos:position pos:line="28" pos:column="9"/></operator><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">start<pos:position pos:line="28" pos:column="15"/></name></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16"> <block pos:line="28" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">failf<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">data<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="19">"Got a blank Session ID"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if<condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">data<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">set<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">.<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">str<pos:position pos:line="31" pos:column="26"/></name><index pos:line="31" pos:column="26">[<expr><name pos:line="31" pos:column="27">STRING_RTSP_SESSION_ID<pos:position pos:line="31" pos:column="49"/></name></expr>]<pos:position pos:line="31" pos:column="50"/></index></name></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51"> <block pos:line="31" pos:column="52">{
      <comment type="block" pos:line="32" pos:column="7">/* If the Session ID is set, then compare */</comment>
      <if pos:line="33" pos:column="7">if<condition pos:line="33" pos:column="9">(<expr><call><name pos:line="33" pos:column="10">strncmp<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">start<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="25">data<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">set<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">.<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">str<pos:position pos:line="33" pos:column="38"/></name><index pos:line="33" pos:column="38">[<expr><name pos:line="33" pos:column="39">STRING_RTSP_SESSION_ID<pos:position pos:line="33" pos:column="61"/></name></expr>]<pos:position pos:line="33" pos:column="62"/></index></name></expr></argument>,
                 <argument><expr><call><name pos:line="34" pos:column="18">strlen<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name><name pos:line="34" pos:column="25">data<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">set<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">str<pos:position pos:line="34" pos:column="38"/></name><index pos:line="34" pos:column="38">[<expr><name pos:line="34" pos:column="39">STRING_RTSP_SESSION_ID<pos:position pos:line="34" pos:column="61"/></name></expr>]<pos:position pos:line="34" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call>  <operator pos:line="34" pos:column="66">!=<pos:position pos:line="34" pos:column="68"/></operator> <literal type="number" pos:line="34" pos:column="69">0<pos:position pos:line="34" pos:column="70"/></literal></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71"> <block pos:line="34" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">failf<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">data<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="21">"Got RTSP Session ID Line [%s], but wanted ID [%s]"<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>,
              <argument><expr><name pos:line="36" pos:column="15">start<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="22">data<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">set<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">.<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">str<pos:position pos:line="36" pos:column="35"/></name><index pos:line="36" pos:column="35">[<expr><name pos:line="36" pos:column="36">STRING_RTSP_SESSION_ID<pos:position pos:line="36" pos:column="58"/></name></expr>]<pos:position pos:line="36" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">CURLE_RTSP_SESSION_ERROR<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></return>
      }<pos:position pos:line="38" pos:column="8"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif>
    <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
      <comment type="block" pos:line="41" pos:column="7">/* If the Session ID is not set, and we find it in a response, then set
       * it.
       *
       * Allow any non whitespace content, up to the field separator or end of
       * line. RFC 2326 isn't 100% clear on the session ID and for example
       * gstreamer does url-encoded session ID's not covered by the standard.
       */</comment>
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">char<pos:position pos:line="48" pos:column="11"/></name> <modifier pos:line="48" pos:column="12">*<pos:position pos:line="48" pos:column="13"/></modifier></type><name pos:line="48" pos:column="13">end<pos:position pos:line="48" pos:column="16"/></name> <init pos:line="48" pos:column="17">= <expr><name pos:line="48" pos:column="19">start<pos:position pos:line="48" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="25"/></decl_stmt>
      <while pos:line="49" pos:column="7">while<condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">*<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">end<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">&amp;&amp;<pos:position pos:line="49" pos:column="28"/></operator> <operator pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">end<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">!=<pos:position pos:line="49" pos:column="28"/></operator> <literal type="char" pos:line="49" pos:column="29">';'<pos:position pos:line="49" pos:column="32"/></literal> <operator pos:line="49" pos:column="33">&amp;&amp;<pos:position pos:line="49" pos:column="43"/></operator> <operator pos:line="49" pos:column="36">!<pos:position pos:line="49" pos:column="37"/></operator><call><name pos:line="49" pos:column="37">ISSPACE<pos:position pos:line="49" pos:column="44"/></name><argument_list pos:line="49" pos:column="44">(<argument><expr><operator pos:line="49" pos:column="45">*<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">end<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="51"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="9">end<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">++<pos:position pos:line="50" pos:column="14"/></operator></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt></block></while>

      <comment type="block" pos:line="52" pos:column="7">/* Copy the id substring into a new buffer */</comment>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">data<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">set<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">.<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">str<pos:position pos:line="53" pos:column="20"/></name><index pos:line="53" pos:column="20">[<expr><name pos:line="53" pos:column="21">STRING_RTSP_SESSION_ID<pos:position pos:line="53" pos:column="43"/></name></expr>]<pos:position pos:line="53" pos:column="44"/></index></name> <operator pos:line="53" pos:column="45">=<pos:position pos:line="53" pos:column="46"/></operator> <call><name pos:line="53" pos:column="47">malloc<pos:position pos:line="53" pos:column="53"/></name><argument_list pos:line="53" pos:column="53">(<argument><expr><name pos:line="53" pos:column="54">end<pos:position pos:line="53" pos:column="57"/></name> <operator pos:line="53" pos:column="58">-<pos:position pos:line="53" pos:column="59"/></operator> <name pos:line="53" pos:column="60">start<pos:position pos:line="53" pos:column="65"/></name> <operator pos:line="53" pos:column="66">+<pos:position pos:line="53" pos:column="67"/></operator> <literal type="number" pos:line="53" pos:column="68">1<pos:position pos:line="53" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>
      <if pos:line="54" pos:column="7">if<condition pos:line="54" pos:column="9">(<expr><name><name pos:line="54" pos:column="10">data<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">set<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">str<pos:position pos:line="54" pos:column="23"/></name><index pos:line="54" pos:column="23">[<expr><name pos:line="54" pos:column="24">STRING_RTSP_SESSION_ID<pos:position pos:line="54" pos:column="46"/></name></expr>]<pos:position pos:line="54" pos:column="47"/></index></name> <operator pos:line="54" pos:column="48">==<pos:position pos:line="54" pos:column="50"/></operator> <name pos:line="54" pos:column="51">NULL<pos:position pos:line="54" pos:column="55"/></name></expr>)<pos:position pos:line="54" pos:column="56"/></condition><then pos:line="54" pos:column="56">
        <block type="pseudo"><return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">CURLE_OUT_OF_MEMORY<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">memcpy<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><name><name pos:line="56" pos:column="14">data<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">set<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">.<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">str<pos:position pos:line="56" pos:column="27"/></name><index pos:line="56" pos:column="27">[<expr><name pos:line="56" pos:column="28">STRING_RTSP_SESSION_ID<pos:position pos:line="56" pos:column="50"/></name></expr>]<pos:position pos:line="56" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="53">start<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">end<pos:position pos:line="56" pos:column="63"/></name> <operator pos:line="56" pos:column="64">-<pos:position pos:line="56" pos:column="65"/></operator> <name pos:line="56" pos:column="66">start<pos:position pos:line="56" pos:column="71"/></name></expr></argument>)<pos:position pos:line="56" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="57" pos:column="7">(<pos:position pos:line="57" pos:column="8"/></operator><name><name pos:line="57" pos:column="8">data<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">set<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">.<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="18">str<pos:position pos:line="57" pos:column="21"/></name><index pos:line="57" pos:column="21">[<expr><name pos:line="57" pos:column="22">STRING_RTSP_SESSION_ID<pos:position pos:line="57" pos:column="44"/></name></expr>]<pos:position pos:line="57" pos:column="45"/></index></name><operator pos:line="57" pos:column="45">)<pos:position pos:line="57" pos:column="46"/></operator><index pos:line="57" pos:column="46">[<expr><name pos:line="57" pos:column="47">end<pos:position pos:line="57" pos:column="50"/></name> <operator pos:line="57" pos:column="51">-<pos:position pos:line="57" pos:column="52"/></operator> <name pos:line="57" pos:column="53">start<pos:position pos:line="57" pos:column="58"/></name></expr>]<pos:position pos:line="57" pos:column="59"/></index> <operator pos:line="57" pos:column="60">=<pos:position pos:line="57" pos:column="61"/></operator> <literal type="char" pos:line="57" pos:column="62">'\0'<pos:position pos:line="57" pos:column="66"/></literal></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></else></if>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if></elseif></if>
  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">CURLE_OK<pos:position pos:line="60" pos:column="18"/></name></expr>;<pos:position pos:line="60" pos:column="19"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1550_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">smb_send_open<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">connectdata<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">conn<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">smb_request<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">req<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name><name pos:line="3" pos:column="29">conn<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">data<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">-&gt;<pos:position pos:line="3" pos:column="44"/></operator><name pos:line="3" pos:column="41">req<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">.<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">protop<pos:position pos:line="3" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">smb_nt_create<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">msg<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">byte_count<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><operator pos:line="7" pos:column="6">(<pos:position pos:line="7" pos:column="7"/></operator><call><name pos:line="7" pos:column="7">strlen<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">req<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">path<pos:position pos:line="7" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call> <operator pos:line="7" pos:column="25">+<pos:position pos:line="7" pos:column="26"/></operator> <literal type="number" pos:line="7" pos:column="27">1<pos:position pos:line="7" pos:column="28"/></literal><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator> <operator pos:line="7" pos:column="30">&gt;<pos:position pos:line="7" pos:column="34"/></operator> <sizeof pos:line="7" pos:column="32">sizeof<argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">msg<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">bytes<pos:position pos:line="7" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></sizeof></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">CURLE_FILESIZE_EXCEEDED<pos:position pos:line="8" pos:column="35"/></name></expr>;<pos:position pos:line="8" pos:column="36"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memset<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><operator pos:line="10" pos:column="10">&amp;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="11">msg<pos:position pos:line="10" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="19">sizeof<argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">msg<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">msg<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">.<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">word_count<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">SMB_WC_NT_CREATE_ANDX<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">msg<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">.<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">andx<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">command<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">SMB_COM_NO_ANDX_COMMAND<pos:position pos:line="12" pos:column="45"/></name></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">byte_count<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">strlen<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">req<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">path<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">msg<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">.<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">name_length<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">smb_swap16<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">unsigned<pos:position pos:line="14" pos:column="41"/></name> <name pos:line="14" pos:column="42">short<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">)<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="48">byte_count<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">msg<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">.<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">share_access<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <call><name pos:line="15" pos:column="22">smb_swap32<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">SMB_FILE_SHARE_ALL<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name><name pos:line="16" pos:column="6">conn<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">data<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">set<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">upload<pos:position pos:line="16" pos:column="28"/></name></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">msg<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">access<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">smb_swap32<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">SMB_GENERIC_READ<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">|<pos:position pos:line="17" pos:column="47"/></operator> <name pos:line="17" pos:column="48">SMB_GENERIC_WRITE<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">msg<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">create_disposition<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <call><name pos:line="18" pos:column="30">smb_swap32<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">SMB_FILE_OVERWRITE_IF<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <else pos:line="20" pos:column="3">else <block pos:line="20" pos:column="8">{
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">msg<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">access<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">smb_swap32<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">SMB_GENERIC_READ<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">msg<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">create_disposition<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">smb_swap32<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">SMB_FILE_OPEN<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">msg<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">.<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">byte_count<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">smb_swap16<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">unsigned<pos:position pos:line="24" pos:column="40"/></name> <name pos:line="24" pos:column="41">short<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator> <operator pos:line="24" pos:column="48">++<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">byte_count<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">strcpy<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name><name pos:line="25" pos:column="10">msg<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">bytes<pos:position pos:line="25" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="21">req<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">path<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>

  <return pos:line="27" pos:column="3">return <expr><call><name pos:line="27" pos:column="10">smb_send_message<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">conn<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="33">SMB_COM_NT_CREATE_ANDX<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="57">&amp;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="58">msg<pos:position pos:line="27" pos:column="61"/></name></expr></argument>,
                          <argument><expr><sizeof pos:line="28" pos:column="27">sizeof<argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">msg<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></sizeof> <operator pos:line="28" pos:column="39">-<pos:position pos:line="28" pos:column="40"/></operator> <sizeof pos:line="28" pos:column="41">sizeof<argument_list pos:line="28" pos:column="47">(<argument><expr><name><name pos:line="28" pos:column="48">msg<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">bytes<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></sizeof> <operator pos:line="28" pos:column="59">+<pos:position pos:line="28" pos:column="60"/></operator> <name pos:line="28" pos:column="61">byte_count<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_913_curl-7.18.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">CURLcode<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">ftp_setup_connection<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">connectdata<pos:position pos:line="1" pos:column="56"/></name></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">conn<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">SessionHandle<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">conn<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">-&gt;<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="38">data<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type> <name pos:line="4" pos:column="10">type<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">command<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <if pos:line="7" pos:column="3">if<condition pos:line="7" pos:column="5">(<expr><name><name pos:line="7" pos:column="6">conn<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">bits<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">httpproxy<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&amp;&amp;<pos:position pos:line="7" pos:column="37"/></operator> <operator pos:line="7" pos:column="30">!<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="31">data<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">set<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">.<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">tunnel_thru_httpproxy<pos:position pos:line="7" pos:column="62"/></name></name></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63"> <block pos:line="7" pos:column="64">{
    <comment type="block" pos:line="8" pos:column="5">/* Unless we have asked to tunnel ftp operations through the proxy, we
       switch and use HTTP operations only */</comment>
<cpp:ifndef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifndef<pos:position pos:line="10" pos:column="8"/></cpp:directive> <name pos:line="10" pos:column="9">CURL_DISABLE_HTTP<pos:position pos:line="10" pos:column="26"/></name></cpp:ifndef>
    <if pos:line="11" pos:column="5">if<condition pos:line="11" pos:column="7">(<expr><name><name pos:line="11" pos:column="8">conn<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">handler<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">&amp;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="26">Curl_handler_ftp<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="7">conn<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">handler<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">Curl_handler_ftp_proxy<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">USE_SSL<pos:position pos:line="14" pos:column="15"/></name></cpp:ifdef>
      <expr_stmt><expr><name><name pos:line="15" pos:column="7">conn<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">handler<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">&amp;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="24">Curl_handler_ftps_proxy<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">failf<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">data<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"FTPS not supported!"<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><name pos:line="18" pos:column="14">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="18" pos:column="40"/></name></expr>;<pos:position pos:line="18" pos:column="41"/></return>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">failf<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">data<pos:position pos:line="23" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="17">"FTP over http proxy requires HTTP support built-in!"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="72"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">CURLE_UNSUPPORTED_PROTOCOL<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></return>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">data<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">state<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">path<pos:position pos:line="28" pos:column="19"/></name></name><operator pos:line="28" pos:column="19">++<pos:position pos:line="28" pos:column="21"/></operator></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>   <comment type="block" pos:line="28" pos:column="25">/* don't include the initial slash */</comment>

  <comment type="block" pos:line="30" pos:column="3">/* FTP URLs support an extension like ";type=&lt;typecode&gt;" that
   * we'll try to get now! */</comment>
  <expr_stmt><expr><name pos:line="32" pos:column="3">type<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <call><name pos:line="32" pos:column="10">strstr<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name><name pos:line="32" pos:column="17">data<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">state<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">path<pos:position pos:line="32" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="35">";type="<pos:position pos:line="32" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><operator pos:line="34" pos:column="6">!<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">type<pos:position pos:line="34" pos:column="11"/></name></expr>)<pos:position pos:line="34" pos:column="12"/></condition><then pos:line="34" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="5">type<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <call><name pos:line="35" pos:column="12">strstr<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><name><name pos:line="35" pos:column="19">conn<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">host<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">.<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">rawalloc<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="40">";type="<pos:position pos:line="35" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt></block></then></if>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><name pos:line="37" pos:column="6">type<pos:position pos:line="37" pos:column="10"/></name></expr>)<pos:position pos:line="37" pos:column="11"/></condition><then pos:line="37" pos:column="11"> <block pos:line="37" pos:column="12">{
    <expr_stmt><expr><operator pos:line="38" pos:column="5">*<pos:position pos:line="38" pos:column="6"/></operator><name pos:line="38" pos:column="6">type<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <literal type="number" pos:line="38" pos:column="13">0<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></expr_stmt>                     <comment type="block" pos:line="38" pos:column="36">/* it was in the middle of the hostname */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">command<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <operator pos:line="39" pos:column="15">(<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">char<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">)<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">toupper<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">int<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">)<pos:position pos:line="39" pos:column="35"/></operator> <name><name pos:line="39" pos:column="36">type<pos:position pos:line="39" pos:column="40"/></name><index pos:line="39" pos:column="40">[<expr><literal type="number" pos:line="39" pos:column="41">6<pos:position pos:line="39" pos:column="42"/></literal></expr>]<pos:position pos:line="39" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>

    <switch pos:line="41" pos:column="5">switch <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">command<pos:position pos:line="41" pos:column="20"/></name></expr>)<pos:position pos:line="41" pos:column="21"/></condition> <block pos:line="41" pos:column="22">{
    <case pos:line="42" pos:column="5">case <expr><literal type="char" pos:line="42" pos:column="10">'A'<pos:position pos:line="42" pos:column="13"/></literal></expr>:<pos:position pos:line="42" pos:column="14"/></case> <comment type="block" pos:line="42" pos:column="15">/* ASCII mode */</comment>
      <expr_stmt><expr><name><name pos:line="43" pos:column="7">data<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">set<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">prefer_ascii<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">TRUE<pos:position pos:line="43" pos:column="36"/></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
      <break pos:line="44" pos:column="7">break;<pos:position pos:line="44" pos:column="13"/></break>

    <case pos:line="46" pos:column="5">case <expr><literal type="char" pos:line="46" pos:column="10">'D'<pos:position pos:line="46" pos:column="13"/></literal></expr>:<pos:position pos:line="46" pos:column="14"/></case> <comment type="block" pos:line="46" pos:column="15">/* directory mode */</comment>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">data<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">set<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">.<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">ftp_list_only<pos:position pos:line="47" pos:column="30"/></name></name> <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <name pos:line="47" pos:column="33">TRUE<pos:position pos:line="47" pos:column="37"/></name></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>

    <case pos:line="50" pos:column="5">case <expr><literal type="char" pos:line="50" pos:column="10">'I'<pos:position pos:line="50" pos:column="13"/></literal></expr>:<pos:position pos:line="50" pos:column="14"/></case> <comment type="block" pos:line="50" pos:column="15">/* binary mode */</comment>
    <default pos:line="51" pos:column="5">default:<pos:position pos:line="51" pos:column="13"/></default>
      <comment type="block" pos:line="52" pos:column="7">/* switch off ASCII */</comment>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">data<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">set<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">.<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">prefer_ascii<pos:position pos:line="53" pos:column="29"/></name></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <name pos:line="53" pos:column="32">FALSE<pos:position pos:line="53" pos:column="37"/></name></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
      <break pos:line="54" pos:column="7">break;<pos:position pos:line="54" pos:column="13"/></break>
    }<pos:position pos:line="55" pos:column="6"/></block></switch>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <return pos:line="58" pos:column="3">return <expr><name pos:line="58" pos:column="10">CURLE_OK<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

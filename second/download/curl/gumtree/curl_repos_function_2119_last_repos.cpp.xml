<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_2119_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CURLcode<pos:position pos:line="1" pos:column="9"/></name></type> <name pos:line="1" pos:column="10">Curl_mime_add_header<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">curl_slist<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">slp<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">fmt<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="73">...<pos:position pos:line="1" pos:column="76"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">curl_slist<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">hdr<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><name pos:line="3" pos:column="28">NULL<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name pos:line="4" pos:column="13">NULL<pos:position pos:line="4" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">va_list<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">ap<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">va_start<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">ap<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="16">fmt<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">s<pos:position pos:line="8" pos:column="4"/></name> <operator pos:line="8" pos:column="5">=<pos:position pos:line="8" pos:column="6"/></operator> <call><name pos:line="8" pos:column="7">curl_mvaprintf<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">fmt<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">ap<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">va_end<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">ap<pos:position pos:line="9" pos:column="12"/></name></expr></argument>)<pos:position pos:line="9" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>

  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><name pos:line="11" pos:column="6">s<pos:position pos:line="11" pos:column="7"/></name></expr>)<pos:position pos:line="11" pos:column="8"/></condition><then pos:line="11" pos:column="8"> <block pos:line="11" pos:column="9">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">hdr<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">Curl_slist_append_nodup<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><operator pos:line="12" pos:column="35">*<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">slp<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">s<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
    <if pos:line="13" pos:column="5">if<condition pos:line="13" pos:column="7">(<expr><name pos:line="13" pos:column="8">hdr<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">slp<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">hdr<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt></block></then>
    <else pos:line="15" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="7">free<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">s<pos:position pos:line="16" pos:column="13"/></name></expr></argument>)<pos:position pos:line="16" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt></block></else></if>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <return pos:line="19" pos:column="3">return <expr><ternary><condition><expr><name pos:line="19" pos:column="10">hdr<pos:position pos:line="19" pos:column="13"/></name></expr>?<pos:position pos:line="19" pos:column="14"/></condition><then pos:line="19" pos:column="14"> <expr><name pos:line="19" pos:column="15">CURLE_OK<pos:position pos:line="19" pos:column="23"/></name></expr></then><else pos:line="19" pos:column="23">: <expr><name pos:line="19" pos:column="25">CURLE_OUT_OF_MEMORY<pos:position pos:line="19" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="45"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

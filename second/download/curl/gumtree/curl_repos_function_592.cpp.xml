<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_592.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">sec_prot_internal<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">connectdata<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">conn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">level<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">s<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">1048576<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ssize_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">nread<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><operator pos:line="8" pos:column="6">!<pos:position pos:line="8" pos:column="7"/></operator><name><name pos:line="8" pos:column="7">conn<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">sec_complete<pos:position pos:line="8" pos:column="25"/></name></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then><block pos:line="8" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">infof<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">conn<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"No security data exchange has taken place.\n"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <if pos:line="13" pos:column="3">if<condition pos:line="13" pos:column="5">(<expr><name pos:line="13" pos:column="6">level<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then><block pos:line="13" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">code<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>
    <if pos:line="15" pos:column="5">if<condition pos:line="15" pos:column="7">(<expr><call><name pos:line="15" pos:column="8">Curl_ftpsendf<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">conn<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"PBSZ %u"<pos:position pos:line="15" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">s<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">-<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if<condition pos:line="18" pos:column="7">(<expr><call><name pos:line="18" pos:column="8">Curl_GetFTPResponse<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">nread<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">conn<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="42">&amp;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="43">code<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">-<pos:position pos:line="19" pos:column="15"/></operator><literal type="number" pos:line="19" pos:column="15">1<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

    <if pos:line="21" pos:column="5">if<condition pos:line="21" pos:column="7">(<expr><name pos:line="21" pos:column="8">code<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">/<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">100<pos:position pos:line="21" pos:column="16"/></literal> <operator pos:line="21" pos:column="17">!=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="char" pos:line="21" pos:column="20">'2'<pos:position pos:line="21" pos:column="23"/></literal></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then><block pos:line="21" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">failf<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name><name pos:line="22" pos:column="13">conn<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">data<pos:position pos:line="22" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"Failed to set protection buffer size."<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">-<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">conn<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">buffer_size<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">s<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">p<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">strstr<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name><name pos:line="27" pos:column="16">conn<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">data<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">state<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">buffer<pos:position pos:line="27" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="42">"PBSZ="<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><name pos:line="28" pos:column="8">p<pos:position pos:line="28" pos:column="9"/></name></expr>)<pos:position pos:line="28" pos:column="10"/></condition><then pos:line="28" pos:column="10">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">sscanf<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">p<pos:position pos:line="29" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="17">"PBSZ=%u"<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="29" pos:column="28">&amp;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="29">s<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><name pos:line="30" pos:column="8">s<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">&lt;<pos:position pos:line="30" pos:column="14"/></operator> <name><name pos:line="30" pos:column="12">conn<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">buffer_size<pos:position pos:line="30" pos:column="29"/></name></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="7">conn<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">buffer_size<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">s<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <if pos:line="34" pos:column="3">if<condition pos:line="34" pos:column="5">(<expr><call><name pos:line="34" pos:column="6">Curl_ftpsendf<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">conn<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="26">"PROT %c"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="37">level<pos:position pos:line="34" pos:column="42"/></name><index pos:line="34" pos:column="42">[<expr><literal type="string" pos:line="34" pos:column="43">"CSEP"<pos:position pos:line="34" pos:column="49"/></literal></expr>]<pos:position pos:line="34" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="52"/></condition><then pos:line="34" pos:column="52">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">-<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">1<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></return></block></then></if>

  <if pos:line="37" pos:column="3">if<condition pos:line="37" pos:column="5">(<expr><call><name pos:line="37" pos:column="6">Curl_GetFTPResponse<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><operator pos:line="37" pos:column="26">&amp;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="27">nread<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">conn<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="40">NULL<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46">
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">-<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">1<pos:position pos:line="38" pos:column="14"/></literal></expr>;<pos:position pos:line="38" pos:column="15"/></return></block></then></if>

  <if pos:line="40" pos:column="3">if<condition pos:line="40" pos:column="5">(<expr><name><name pos:line="40" pos:column="6">conn<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">data<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">state<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">buffer<pos:position pos:line="40" pos:column="30"/></name><index pos:line="40" pos:column="30">[<expr><literal type="number" pos:line="40" pos:column="31">0<pos:position pos:line="40" pos:column="32"/></literal></expr>]<pos:position pos:line="40" pos:column="33"/></index></name> <operator pos:line="40" pos:column="34">!=<pos:position pos:line="40" pos:column="36"/></operator> <literal type="char" pos:line="40" pos:column="37">'2'<pos:position pos:line="40" pos:column="40"/></literal></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then><block pos:line="40" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">failf<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name><name pos:line="41" pos:column="11">conn<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">data<pos:position pos:line="41" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"Failed to set protection level."<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">-<pos:position pos:line="42" pos:column="13"/></operator><literal type="number" pos:line="42" pos:column="13">1<pos:position pos:line="42" pos:column="14"/></literal></expr>;<pos:position pos:line="42" pos:column="15"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="45" pos:column="3">conn<pos:position pos:line="45" pos:column="7"/></name><operator pos:line="45" pos:column="7">-&gt;<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="9">data_prot<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator>enum <name pos:line="45" pos:column="27">protection_level<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">)<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="44">level<pos:position pos:line="45" pos:column="49"/></name></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt>
  <return pos:line="46" pos:column="3">return <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

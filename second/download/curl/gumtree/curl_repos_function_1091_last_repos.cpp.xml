<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/curl/gumtree/curl_repos_function_1091_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">on_data_chunk_recv<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">nghttp2_session<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">session<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">uint8_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">flags<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">int32_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">stream_id<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">uint8_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">data<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">size_t<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">len<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="64">void<pos:position pos:line="3" pos:column="68"/></name> <modifier pos:line="3" pos:column="69">*<pos:position pos:line="3" pos:column="70"/></modifier></type><name pos:line="3" pos:column="70">userp<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="76"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">HTTP<pos:position pos:line="5" pos:column="14"/></name></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">stream<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">Curl_easy<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">data_s<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">nread<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">connectdata<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">conn<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><operator pos:line="8" pos:column="30">(<pos:position pos:line="8" pos:column="31"/></operator>struct <name pos:line="8" pos:column="38">connectdata<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></operator><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">userp<pos:position pos:line="8" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="9" pos:column="3">(<pos:position pos:line="9" pos:column="4"/></operator><name pos:line="9" pos:column="4">void<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">)<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">session<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="10" pos:column="3">(<pos:position pos:line="10" pos:column="4"/></operator><name pos:line="10" pos:column="4">void<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">)<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">flags<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="11" pos:column="3">(<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">void<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">)<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">data<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUGASSERT<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">stream_id<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt> <comment type="block" pos:line="13" pos:column="27">/* should never be a zero stream ID here */</comment>

  <comment type="block" pos:line="15" pos:column="3">/* get the stream from the hash based on Stream ID */</comment>
  <expr_stmt><expr><name pos:line="16" pos:column="3">data_s<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">nghttp2_session_get_stream_user_data<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><name pos:line="16" pos:column="49">session<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">stream_id<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">data_s<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14">
    <comment type="block" pos:line="18" pos:column="5">/* Receiving a Stream ID not in the hash should not happen, this is an
       internal error more than anything else! */</comment>
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">stream<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name><name pos:line="22" pos:column="12">data_s<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">req<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">protop<pos:position pos:line="22" pos:column="30"/></name></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
  <if pos:line="23" pos:column="3">if<condition pos:line="23" pos:column="5">(<expr><operator pos:line="23" pos:column="6">!<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">stream<pos:position pos:line="23" pos:column="13"/></name></expr>)<pos:position pos:line="23" pos:column="14"/></condition><then pos:line="23" pos:column="14">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">NGHTTP2_ERR_CALLBACK_FAILURE<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">nread<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">MIN<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">stream<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">len<pos:position pos:line="26" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="28">len<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">memcpy<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><operator pos:line="27" pos:column="10">&amp;<pos:position pos:line="27" pos:column="15"/></operator><name><name pos:line="27" pos:column="11">stream<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">mem<pos:position pos:line="27" pos:column="22"/></name><index pos:line="27" pos:column="22">[<expr><name><name pos:line="27" pos:column="23">stream<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">-&gt;<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="31">memlen<pos:position pos:line="27" pos:column="37"/></name></name></expr>]<pos:position pos:line="27" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">data<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">nread<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="29" pos:column="3">stream<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">-&gt;<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="11">len<pos:position pos:line="29" pos:column="14"/></name></name> <operator pos:line="29" pos:column="15">-=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">nread<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">stream<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">memlen<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">+=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">nread<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="32" pos:column="3">data_s<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">state<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">drain<pos:position pos:line="32" pos:column="22"/></name></name><operator pos:line="32" pos:column="22">++<pos:position pos:line="32" pos:column="24"/></operator></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">conn<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">-&gt;<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="9">proto<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">httpc<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">drain_total<pos:position pos:line="33" pos:column="32"/></name></name><operator pos:line="33" pos:column="32">++<pos:position pos:line="33" pos:column="34"/></operator></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* if we receive data for another handle, wake that up */</comment>
  <if pos:line="36" pos:column="3">if<condition pos:line="36" pos:column="5">(<expr><name><name pos:line="36" pos:column="6">conn<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">data<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">!=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">data_s<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="5">Curl_expire<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">data_s<pos:position pos:line="37" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="25">0<pos:position pos:line="37" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">EXPIRE_RUN_NOW<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="39" pos:column="3">DEBUGF<pos:position pos:line="39" pos:column="9"/></name><argument_list pos:line="39" pos:column="9">(<argument><expr><call><name pos:line="39" pos:column="10">infof<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">data_s<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="24">"%zu data received for stream %u "<pos:position pos:line="39" pos:column="58"/></literal>
               <literal type="string" pos:line="40" pos:column="16">"(%zu left in buffer %p, total %zu)\n"<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>,
               <argument><expr><name pos:line="41" pos:column="16">nread<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="23">stream_id<pos:position pos:line="41" pos:column="32"/></name></expr></argument>,
               <argument><expr><name><name pos:line="42" pos:column="16">stream<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">len<pos:position pos:line="42" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="29">stream<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">mem<pos:position pos:line="42" pos:column="40"/></name></name></expr></argument>,
               <argument><expr><name><name pos:line="43" pos:column="16">stream<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">memlen<pos:position pos:line="43" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>

  <if pos:line="45" pos:column="3">if<condition pos:line="45" pos:column="5">(<expr><name pos:line="45" pos:column="6">nread<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">&lt;<pos:position pos:line="45" pos:column="16"/></operator> <name pos:line="45" pos:column="14">len<pos:position pos:line="45" pos:column="17"/></name></expr>)<pos:position pos:line="45" pos:column="18"/></condition><then pos:line="45" pos:column="18"> <block pos:line="45" pos:column="19">{
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">stream<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">pausedata<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <name pos:line="46" pos:column="25">data<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">+<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="32">nread<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">stream<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">pauselen<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">len<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">-<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">nread<pos:position pos:line="47" pos:column="35"/></name></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">DEBUGF<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><call><name pos:line="48" pos:column="12">infof<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">data_s<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="26">"NGHTTP2_ERR_PAUSE - %zu bytes out of buffer"<pos:position pos:line="48" pos:column="71"/></literal>
                 <literal type="string" pos:line="49" pos:column="18">", stream %u\n"<pos:position pos:line="49" pos:column="33"/></literal></expr></argument>,
                 <argument><expr><name pos:line="50" pos:column="18">len<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">-<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">nread<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">stream_id<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">data_s<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">easy_conn<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">proto<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">.<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">httpc<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">pause_stream_id<pos:position pos:line="51" pos:column="51"/></name></name> <operator pos:line="51" pos:column="52">=<pos:position pos:line="51" pos:column="53"/></operator> <name pos:line="51" pos:column="54">stream_id<pos:position pos:line="51" pos:column="63"/></name></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>

    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">NGHTTP2_ERR_PAUSE<pos:position pos:line="53" pos:column="29"/></name></expr>;<pos:position pos:line="53" pos:column="30"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="56" pos:column="3">/* pause execution of nghttp2 if we received data for another handle
     in order to process them first. */</comment>
  <if pos:line="58" pos:column="3">if<condition pos:line="58" pos:column="5">(<expr><name><name pos:line="58" pos:column="6">conn<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">data<pos:position pos:line="58" pos:column="16"/></name></name> <operator pos:line="58" pos:column="17">!=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">data_s<pos:position pos:line="58" pos:column="26"/></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27"> <block pos:line="58" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">data_s<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">easy_conn<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">-&gt;<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="24">proto<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">.<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">httpc<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">.<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">pause_stream_id<pos:position pos:line="59" pos:column="51"/></name></name> <operator pos:line="59" pos:column="52">=<pos:position pos:line="59" pos:column="53"/></operator> <name pos:line="59" pos:column="54">stream_id<pos:position pos:line="59" pos:column="63"/></name></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>

    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">NGHTTP2_ERR_PAUSE<pos:position pos:line="61" pos:column="29"/></name></expr>;<pos:position pos:line="61" pos:column="30"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><literal type="number" pos:line="64" pos:column="10">0<pos:position pos:line="64" pos:column="11"/></literal></expr>;<pos:position pos:line="64" pos:column="12"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

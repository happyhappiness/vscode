diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/00-RELEASENOTES /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/00-RELEASENOTES
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/00-RELEASENOTES	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/00-RELEASENOTES	2015-04-01 22:01:44.000000000 +0800
@@ -1,731 +1,600 @@
-Redis 2.8 release notes
+Redis 3.0 release notes
 =======================
 
-** IMPORTANT ** Check the 'Migrating from 2.6 to 2.8' section at the end of
-                this file for information about what changed between 2.6 and
-                2.8 and how this may affect your application.
+WARNING: Redis 3.0 is currently a BETA not suitable for production environments.
 
 --------------------------------------------------------------------------------
 Upgrade urgency levels:
 
 LOW:      No need to upgrade unless there are new features you want to use.
 MODERATE: Program an upgrade of the server, but it's not urgent.
 HIGH:     There is a critical bug that may affect a subset of users. Upgrade!
 CRITICAL: There is a critical bug affecting MOST USERS. Upgrade ASAP.
 --------------------------------------------------------------------------------
 
---[ Redis 2.8.24 ] Release date: 18 Dec 2015
+--[ Redis 3.0.0 ] Release date: 1 Apr 2015
 
-Upgrade urgency: MODERATE. We fixed a crash that happens very rarely, so
-                 updating does not hurt, but most users are unlikely to
-                 experience this condition because it requires some odd
-                 timing.
-
-* [FIX] lua_struct.c/getnum security issue fixed. (Luca Bruno discovered it,
-        patched by Sun He and Chris Lamb)
-* [FIX] Fix a race condition in processCommand() because of interactions
-        with freeMemoryIfNeeded(). Details in issue #2948 and especially
-        in the commit message d999f5a. (Race found analytically by
-        Oran Agra, patch by Salvatore Sanfilippo)
+>> What's new in Redis 3.0 compared to Redis 2.8?
 
-* [NEW] Log offending memory access address on SIGSEGV/SIGBUS (Salvatore
-        Sanfilippo)
+* Redis Cluster: a distributed implementation of a subset of Redis.
+* New "embedded string" object encoding resulting in less cache
+  misses. Big speed gain under certain work loads.
+* AOF child -> parent final data transmission to minimize latency due
+  to "last write" during AOF rewrites.
+* Much improved LRU approximation algorithm for keys eviction.
+* WAIT command to block waiting for a write to be transmitted to
+  the specified number of slaves.
+* MIGRATE connection caching. Much faster keys migraitons.
+* MIGARTE new options COPY and REPLACE.
+* CLIENT PAUSE command: stop processing client requests for a
+  specified amount of time.
+* BITCOUNT performance improvements.
+* CONFIG SET accepts memory values in different units (for example
+  you can use "CONFIG SET maxmemory 1gb").
+* Redis log format slightly changed reporting in each line the role of the
+  instance (master/slave) or if it's a saving child log.
+* INCR performance improvements.
 
---[ Redis 2.8.23 ] Release date: 15 Oct 2015
+>> Refactoring changes (no new features nor bug fixes)
 
-Upgrade urgency: MODERATE, the most important thing is a fix in the replication
-                 code that may make the slave hanging forever if the master
-                 remains with an open socket even if it is no longer able to
-                 reply.
-
-* [FIX] MOVE now moves the TTL as well. A bug lasting forever... finally
-        fixed thanks to Andy Grunwald that reported it.
-        (reported by Andy Grunwald, fixed by Salvatore Sanfilippo)
-* [FIX] Fix a false positive in HSTRLEN test.
-* [FIX] Fix a bug in redis-cli --pipe mode that was not able to read back
-        replies from the server incrementally. Now a mass import will use
-        a lot less memory, and you can use --pipe to do incremental streaming.
-        (reported by Twitter user @fsaintjacques, fixed by Salvatore
-        Sanfilippo)
-* [FIX] Slave detection of master timeout. (fixed by Kevin McGehee, refactoring
-        and regression test by Salvatore Sanfilippo)
+* Blocking operations full refactoring (blocked.c)
+* Client output buffer memory tracking refactored.
 
---[ Redis 2.8.22 ] Release date: 8 Sep 2015
+Changes between RC6 and 3.0.0 stable:
 
-Upgrade urgency: HIGH for Redis and Sentinel. However note that in order to
-                 fix certain replication bugs, the replication internals were
-                 modified in a very heavy way. So while this release is
-                 conceptually saner, it may contain regressions. For this
-                 reason, before the release, QA activities were performed by
-                 me (antirez) and Redis Labs and no evident bug was found.
-
-* [FIX] A number of bugs related to replication PSYNC and the (yet experimental)
-        diskless replication feature were fixed. The bugs could lead to
-        inconsistency between masters and slaves. (Salvatore Sanfilippo, Oran
-        Agra fixed the issue found by Yuval Inbar)
-* [FIX] A replication bug in the context of PSYNC partial resynchonization was
-        found and fixed. This bug happens even when diskless replication is off
-        in the case different slaves connect at different times while the master
-        is creating an RDB file, and later a partial resynchronization is
-        attempted by a slave that connected not as the first one. (Salvatore
-        Sanfilippo, Oran Agra)
-* [FIX] Chained replication and PSYNC interactions leading to potential stale
-        chained slaves data set, see issue #2694. (Salvatore Sanfilippo fixed
-        an issue reported by "GeorgeBJ" user at Github)
-* [FIX] redis-cli --scan iteration fixed when returned cursor overflows
-        32 bit signed integer. (Ofir Luzon, Yuval Inbar)
-* [FIX] Sentinel: fixed a bug during the master switch process, where for a
-        failed conditional check, the new configuration is rewritten, during
-        a small window of time, in a corrupted way where the master is
-        also reported to be one of the slaves. This bug is rare to trigger
-        but apparently it happens in the wild, and the effect is to see
-        a replication loop where the master will try to replicate with itself.
-        A detailed explanation of the bug and its effects can be found in
-        the commit message here: https://github.com/antirez/redis/commit/c20218eb5770b2cafb12bc7092313b8358fedc0a.
-        The bug was found by Jan-Erik Rediger using a static analyzer and
-        fixed by Salvatore Sanfilippo.
-* [FIX] Sentinel lack of arity checks for certain commands.
-        (Rogerio Goncalves, Salvatore Sanfilippo)
-
-* [NEW] Replication internals rewritten in order to be more resistant to bugs.
-        The replication handshake in the slave side was rewritten as a non
-        blocking state machine. (Salvatore Sanfilippo, Oran Agra)
-* [NEW] New "replication capabilities" feature introduced in order to signal
-        from the master to the slave what are the features supported, so that
-        the master can choose the kind of replication to start (diskless or
-        not) when master and slave are of different versions. (Oran Agra,
-        Salvatore Sanfilippo)
-* [NEW] Log clients details when SLAVEOF command is received. (Salvatore
-        Sanfilippo with inputs from Nick Craver and Marc Gravell).
+>> General changes
+
+* Fixes to diskless replication. (Oran Agra)
+* Test for BLPOP replication on role change. (Salvatore Sanfilippo)
+* prepareClientToWrite() error handling improvements. (Salvatore Sanfilippo)
+* Remove dict.c no longer used function. (Salvatore Sanfilippo)
+
+>> Cluster changes
+
+None
+
+>> Sentinel changes
 
---[ Redis 2.8.21 ] Release date: 4 Jun 2015
+None
 
-Upgrade urgency: HIGH for Redis because of a security issue.
-                 LOW for Sentinel.
+--[ Redis 3.0.0 RC6 (version 2.9.106) ] Release date: 24 mar 2015
 
-* [FIX] Critical security issue fix by Ben Murphy: http://t.co/LpGTyZmfS7
-* [FIX] SMOVE reply fixed when src and dst keys are the same. (Glenn Nethercutt)
-* [FIX] Lua cmsgpack lib updated to support str8 type. (Sebastian Waisbrot)
+Upgrade urgency: HIGH because of bugs related to Redis Custer and replication.
 
-* [NEW] Senitnel: CKQUORUM and FLUSHCONFIG commands back ported.
-        (Salvatore Sanfilippo and Bill Anderson)
+This is the 6th release candidate of Redis 3.0.0. This release fixes important
+issues discovered during stress testing, and implements safest behavior
+for blocking operations during clients reshardings, and a new much needed
+functionality of Redis Cluster manual failovers.
 
---[ Redis 2.8.20 ] Release date: 5 May 2015
+In order to fix certain bugs quite a bit of refactoring was needed which
+is usually non advisabble in a Release Candidate, but needed in order to
+end with a clean fix.
 
-Upgrade urgency: LOW for Redis, MODERATE for Sentinel.
+>> General changes
 
-* [FIX] Sentinel memory leak due to hiredis fixed. (Salvatore Sanfilippo)
-* [FIX] Sentinel memory leak on duplicated instance. (Charsyam)
-* [FIX] Redis crash on Lua reaching output buffer limits. (Yossi Gottlieb)
-* [FIX] Sentinel flushes config on +slave events. (Bill Anderson)
-* [FIX] Fixes to diskless replication. (Oran Agra)
 * [FIX] Redis (non clustered & clustered) replication bug involving blocking
         operations: see issue #2473. (Salvatore Sanfilippo)
+
+>> Cluster changes
+
+* [FIX] clientsArePaused() fix crashing the old master during manual failover.
+        (Salvatore Sanfilippo)
+* [FIX] Lua scripts replication in Redis Cluster was totally broken.
+        (Salvatore Sanfilippo)
+* [FIX] Redirect clients blocked into list operations when the hash slot
+        they are blocked into is migrated to another instance or the cluster
+        state turns into "fail". (Salvatore Sanfilippo)
+
+* [NEW] TAKEOVER option for CLUSTER FAILOVER implemented. It is now possible
+        to fix a cluster manually in the minority side of the partition, for
+        example in order to allow for multi DC setups & recovery.
+        (Salvatore Sanfilippo)
+
+>> Sentinel changes
+
+No changes in Sentinel.
+
+--[ Redis 3.0.0 RC5 (version 2.9.105) ] Release date: 20 mar 2015
+
+Upgrade urgency: Moderate for Redis Cluster users, low otherwise.
+
+This is the 5th release candidate of Redis 3.0.0, released in order to fix
+a moderate bug in Redis Cluster. This RC does not shift in the future the
+Redis 3.0.0 final release which is scheduled in a few days (we are in the
+process of finishing the documentation for Redis Cluster).
+
+>> General changes
+
+* [FIX] Fix LATENCY command crash. (Salvatore Sanfilippo, thx to Ingmar)
 * [FIX] Config: missing activerehashing option support in CONFIG SET added.
         (Salvatore Sanfilippo, thx to Bill Anderson)
+* [FIX] Fix for backtrace generation issue. (Mariano Pérez Rodríguez, Matt Stancliff, Salvatore Sanfilippo)
+
+* [NEW] Redis-cli --latency-dist backported from unstable.
+        (Salvatore Sanfilippo)
+
+>> Cluster changes
+
+* [FIX] Avoid redundant SELECT in MIGRATE. (Tommy Wang, Salvatore Sanfilippo)
+* [FIX] More robust slave check in CLUSTER REPLICATE. (Salvatore Sanfilippo)
+* [FIX] Fixed possible Redis Cluster node crash due to wrong separation of
+        concerns between getNodeByQuery() and Cluster global state update
+        fnuction. (Salvatore Sanfilippo, thx to Ingmar)
+
+* [NEW] Add command CLUSTER MYID to easily featch instance ID. (Michel Martens)
+
+>> Sentinel changes
+
+* [NEW] Support for CLIENT command added. It was missing in the command table.
+        (Leandro López)
+
+--[ Redis 3.0.0 RC4 (version 2.9.104) ] Release date: 13 feb 2015
+
+Upgrade urgency: High for Redis if you use LRU eviction, low otherwise.
+
+This is the 4th release candidate of Redis 3.0.0, it fixes problems with
+LRU eviction that are not present in older release (2.8.x is not affected)
+and adds new tools to inspect latency and load-test LRU.
+
+>> General changes
+
+* [FIX] redis-cli CSV output NIL spurious newline removed. (Matt Collier)
+* [FIX] Memory efficiency test in unit test is now much faster: it affacted
+        the total "make test" execution time in a bad way.  (Salvatore
+        Sanfilippo)
+* [FIX] Fixes and improvements to dict.c and LRU eviction. Redis 3.0.0 new
+        LRU eviction had bugs creating high latency spikes when LRU was
+        happening during the keys dictionary rehashing. This bug is not
+        present into 2.8, was 3.0 specific. As a side effect of this issue
+        dict.c is now improved, and LRU algorithm is more precise (better
+        approximates true LRU). This was a joint effort, see issue
+        #2306 for details. (Oran Agra, Sun He, Salvatore Sanfilippo).
+        Thanks to Charsyam for spotting an integer overflow.
+
+* [NEW] New latency tool: redis-cli --latency-dist is able to show an
+        xterm-256 based spectrum of latencies over time. (Salvatore Sanfilippo)
+* [NEW] redis-cli --lru-test implemented (cache workload simulator). (Salvatore
+        Sanfilippo)
+* [NEW] redis-cli --stat now shows LOAD when Redis is loading data.
+* [NEW] Support "1G" etc. units in CONFIG SET. (Chris Lamb, Salvatore
+        Sanfilippo)
+
+>> Cluster changes
+
+* None.
+
+>> Sentinel changes
+
+* None.
+
+--[ Redis 3.0.0 RC3 (version 2.9.103) ] Release date: 30 jan 2015
+
+Upgrade urgency: High for Redis Cluster users, low otherwise.
+
+This is the third release candidate for Redis 3.0.0, the new RC fixes
+several critical issues with Redis Cluster.
+
+>> General changes
+
 * [FIX] AOF bug unlikely to happen in practice and mostly harmless: child
         process segfaults when parent is not reachable via pipe. (Sun He)
 * [FIX] Scripting engine now reports an error when misused with Lua debug
         hooks, instead of crashing. (Salvatore Sanfilippo)
-* [FIX] INFO loading stats: three fixes.
-* [FIX] Fixed memory leaks in rdbSaveToSlavesSockets(). (Alon Diamant)
 
-* [NEW] Redis-cli --latency-dist backported from unstable.
-        (Salvatore Sanfilippo)
+>> Cluster changes
 
---[ Redis 2.8.19 ] Release date: 16 Dec 2014
+* [FIX] Several issues with Redis Cluster internal nodes objects handling.
+        (Matt Stancliff & Salvatore Sanfilippo)
+* [FIX] Improvements in the Cluster test.
+        (Matt Stancliff & Salvatore Sanfilippo).
+* [FIX] Cluster memory leaks / double frees (Matt Stancliff).
+* [FIX] /dev/urandom surrogate for generation of unique IDs in a more
+        cheap way. (Salvatore Sanfilippo)
+* [FIX] Fixes and improvements to PING / PONG packets gossip sections
+        in order to improve (and fix) failure detection and speedup
+        cluster info propagation. (Salvatore Sanfilippo)
 
-# UPGRADE URGENCY: LOW for both Redis and Sentinel. This release mostly
-                   fixes small issues.
+* [NEW] CLUSTER count-failure-reports command added. (Salvatore Sanfilippo)
 
-02d465c Don't log admin commands in MONITOR. (antirez)
-4d8f426 List of commands flagged as admin commands modified. (antirez)
-e47e460 Lua cmsgpack lib updated to latest version. (antirez)
-5509c14 Add symlink to redis-sentinel during make install (Rhommel Lamas)
-7de1ef7 SORT: Don't sort Set elements if not needed. (antirez)
-e945a54 Fix zero-ordering SORT when called against lists (Matt Stancliff)
-d81c383 Update redis_init_script.tpl (Ben Dowling)
-dba57ea FIXED redis-benchmark's idle mode.With idle mode shouldn't create write event (zhanghailei)
-888ea17 zipmap.c: update comments above (Sun He)
-86ebc13 replaced // comments  #2150 (Deepak Verma)
-3d73f08 redis-benchmark AUTH command to be discarded after the first send #2150 (azure provisioned user)
-76d53a6 sds.c: Correct two spelling mistakes in comments (Sun He)
-4848cf9 sds.c/sdscatvprintf: set va_end to finish va_list cpy (Sun He)
-d2f584f sds.c: Correct some comments (Sun He)
-2ed3f09 Update whatisdoing.sh (Serghei Iakovlev)
-77b997d Include stropts only if __sun is defined. (antirez)
-d409371 Fix implicit declaration of ioctl on Solaris (Jan-Erik Rediger)
-23b96c0 Silence _BSD_SOURCE warnings in glibc 2.20 and forward (Johan Bergström)
-a47a042 Mark whatisdoing.sh as deprecated in top-comment. (antirez)
-b5737d2 getting pid fixes (Serghei Iakovlev)
-a598e08 sparkline.c: AddSample skip Empty label (Sun He)
-7d480ab sparkline.c: mov label-ini into the AddSample Function (Sun He)
-2f3c860 Only ignore sigpipe in interactive mode (Jan-Erik Rediger)
-0c211a1 Simplify lua_cmsgpack macro and fix build on old Linux distros. (antirez)
-
---[ Redis 2.8.18 ] Release date: 4 Dec 2014
-
-# UPGRADE URGENCY: LOW for both Redis and Sentinel. This release mostly
-                   adds new features to Redis, and contains non critical
-                   fixes.
-
-* [FIX] Linenoise updated to be more VT100 compatible. (Salvatore Sanfilippo)
-* [FIX] A number of typos fixed inside comments. (Various authors)
-* [FIX] redis-cli no longer quits after long timeouts. (Matt Stancliff)
-* [FIX] Test framework improved to detect never terminating scripts, cleanup
-        instances on crashes. (Salvatore Sanfilippo)
-* [FIX] PFCOUNT can be used on slaves now. (Salvatore Sanfilippo)
-* [FIX] ZSCAN no longer report very small scores as 0. (Matt Stancliff,
-        Michael Grunder, Salvatore Sanfilippo)
-* [FIX] Don't show the ASCII logo if syslog is enabled. Redis is now
-        an Enterprise Grade product. (Salvatore Sanfilippo)
-
-* [NEW] EXPERIMENTAL: Diskless replication, for more info check the doc at
-        http://redis.io/topics/replication. (Salvatore Sanfilippo).
-* [NEW] Transparent Huge Pages detection and reporting in logs and
-        LATENCY DOCTOR output. (Salvatore Sanfilippo)
-* [NEW] Many Lua scripting enhancements: Bitops API, cjson upgrade and tests,
-        cmsgpack upgrade. (Matt Stancliff)
-* [NEW] Total and instantaneous Network bandwidth tracking in INFO.
-* [NEW] DEBUG POPULATE two args form implemented (old form still works).
-        The second argument is the key prefix. Default is "key:" (Salvatore
-        Sanfilippo)
-* [NEW] Check that tcp-backlog is matched by /proc/sys/net/core/somaxconn, and
-        warn about it if not. (Salvatore Sanfilippo)
+>> Sentinel changes
 
---[ Redis 2.8.17 ] Release date: 19 Sep 2014
+No changes for Sentinel.
 
-# UPGRADE URGENCY: HIGH for Redis Sentinel.
-                   LOW for Redis Server (unmodified compared to 2.8.16).
+--[ Redis 3.0.0 RC2 (version 2.9.102) ] Release date: 13 jan 2015
 
-* [FIX] Resolved a memory leak in the hiredis library causing a memory leak
-        in Redis Sentinel when a monitored instance or another Sentinel is
-        unavailable. Every reconnection attempt will leak a small amount of
-        memory, but in the long run the process can reach a considerable size.
+Upgrade urgency: LOW.
 
---[ Redis 2.8.16 ] Release date: 16 Sep 2014
+This is the second release candidate of Redis 3.0.0. The major changes
+are back porting of things implemented into the unstable branch while
+this was still possible (with the new development model adopted only
+bug fixes will be merged in the future).
 
-# UPGRADE URGENCY: HIGH for Redis if you are using 2.8.15 + AOF.
-                   LOW for Sentinel.
+RC2 also fixes a few Redis Cluster non critical bugs.
 
-* [FIX] The ability to load truncated AOF files introduced with Redis 2.8.15
-        contains a bug fixed in this release: after loading the file was not
-        truncated to the last valid command, so the new commands are appended
-        after a non well formed command. This means that:
-
-        1) The first AOF rewrite triggered by the server will automatically
-           fix the problem.
-        2) However, if the server is restarted before the rewrite, Redis may
-           not be able to load the file and you need to manually fix it.
-
-        In order to fix a corrupted file you should start the redis-check-aof
-        utility WITHOUT the --fix option, just to check the offset where the
-        corruption is found. Around the offset reported by the check utility
-        you'll find, inside your AOF file, a command which is not complete
-        according to the Redis protocol. Just remove this incomplete command
-        leafing the file unaltered before and after the offending command,
-        and restart the server.
-
-        IMPORTANT #1: Redis 2.8.15 is the only stable version of Redis with
-        this bug so probably no actual real-world problem happened since the
-        problem is automatically fixed at the first automatic AOF rewrite.
-
-        IMPORTANT #2: Before upgrading to Redis 2.8.16, if you are using Redis
-        2.8.15 with AOF enabled, make sure to trigger a manual AOF rewrite
-        using the BGREWRITEAOF command.
+>> General changes
 
-* [FIX] SAVE is no longer propagated to AOF / slaves.
+* [FIX] A number of minor bug fixes.
 
---[ Redis 2.8.15 ] Release date: 12 Sep 2014
+* [NEW] Diskless replication backportede.
+* [NEW] Lua bitops and updated cmsgpack backported.
+* [NEW] Transparent Huge Pages warnings and reporting backported.
 
-# UPGRADE URGENCY: LOW for Redis, HIGH for Sentinel.
+>> Cluster changes
 
-* [FIX] Sentinel critical bug fixed: the absolute majority was computed in a
-        wrong way because of a programming error. Now the implementation does
-        what the specification says and the majority to authorize a failover
-        (that should not be confused with the ODOWN quorum) is the majority of
-        *all* the Sentinels ever seen for a given master, regardless of their
-        current state.
+* [FIX] Fix PUBLISH cluster bus message count field.
+* [FIX] It is no longer possible to write outside node hash slots using Lua.
+* [FIX] Valgrind warnings (no actual bugs).
+* [FIX] Less strict in acceptiong myself->ip if it's not populated.
+
+* [NEW] Better testing of Lua scripts.
+
+>> Sentinel changes
+
+No changes to Sentinel.
+
+--[ Redis 3.0.0 RC1 (version 2.9.101) ] Release date: 9 oct 2014
+
+This is the first release candidate of Redis 3.0.0.
+
+>> General changes
+
+* [FIX] An very large number of small fixes, old and new, merged in the
+        context of a the issue #1906. Please see the issue page here
+        for exact credits: https://github.com/antirez/redis/pull/1906
+        of each commit. (Matt Stancliff and many others).
+* [FIX] SAVE is no longer propagated to AOF / slaves.
 * [FIX] GETRANGE test no longer fails for 32 bit builds (Matt Stancliff).
 * [FIX] Limit SCAN latency when the hash table is in an odd state (very few
         populted buckets because rehashing is in progress). (Xiaost and
         Salvatore Sanfilippo)
 
 * [NEW] Redis is now able to load truncated AOF files without requiring a
         redis-check-aof utility run. The default now is to load truncated
         (but apparently not corrupted) AOFs, you can change this in redis.conf.
         (Salvatore Sanfilippo).
+* [NEW] DEBUG POPULATE two args form implemented. It is now possible to
+        call it with DEBUG POPULATE <count> <prefix>. Default prefix
+        is "key:" as usually.
+* [NEW] INCR: Modify incremented object in-place when possible. This results
+        in speed improvements + possibly better memory locality.
+
+>> Cluster changes
+
+* [FIX] Cluster: claim ping_sent time even if we can't connect.
+* [FIX] redis-trib should not abort easily on connection issues.
+* [FIX] Cluster test: less console-spammy resharding test.
+* [FIX] Fix logic to detect we are among a minority.
+* [FIX] Process gossip section only for known nodes.
+
+* [NEW] Redis Cluster is stable and tested enough, there is a clear MVP,
+        so it was promoted from beta to stable.
+* [NEW] New unit 09, Pub/Sub across the cluster.
+* [NEW] New unit 08, update messages.
+* [NEW] New cluster option to work with partial slots coverage.
+* [NEW] More chatty cluster slaves when failover is stalled. They log reason
+        with rate limiting, only when reason changes or a given time
+        has elapsed.
+
+>> Sentinel changes
+
+* [FIX] Sentinel critical bug fixed: the absolute majority was computed in a
+        wrong way because of a programming error. Now the implementation does
+        what the specification says and the majority to authorize a failover
+        (that should not be confused with the ODOWN quorum) is the majority of
+        *all* the Sentinels ever seen for a given master, regardless of their
+        current state.
+* [FIX] Resolved a memory leak in the hiredis library causing a memory leak
+        in Redis Sentinel when a monitored instance or another Sentinel is
+        unavailable. Every reconnection attempt will leak a small amount of
+        memory, but in the long run the process can reach a considerable size.
+
 * [NEW] Sentinel: ability to announce itself with an arbitrary IP/port to work
         in the context of natted networks. However this is probably still
         not enough since there is no equivalent mechanism for slaves listed
         in the master INFO output. (Dara Kong and Salvatore Sanfilippo)
 
---[ Redis 2.8.14 ] Release date: 1 Sep 2014
+--[ Redis 3.0.0 Beta 8 (version 2.9.57) ] Release date: 29 jul 2014
 
-# UPGRADE URGENCY: HIGH for Lua scripting users, the server could crash because
-                   of a bug introduced in Redis 2.8.10, otherwise LOW.
-                   LOW for Redis Sentinel.
+This is the 8th beta of Redis 3.0.0.
 
-* [FIX] Don't prevent use of shared integers if maxmemory policy is non-LRU.
-        (Salvatore Sanfilippo)
-* [FIX] Fail SYNC if background save child aborted due to a signal.
-        (Yossi Gottlieb)
-* [FIX] Different small redis-cli fixes. (Dov Murik, Charsyam, cubicdaiya,
-        Kashif Rasul, Jan-Erik Rediger, Matt Stancliff)
-* [FIX] AIX compilation fixes. (Siah Lyimo)
-* [FIX] A number of other smaller issues.
-* [FIX] Improved SIGINT handling (Matt Stancliff, Salvatore Sanfilippo)
-* [FIX] Use unsigned types in SDS header to raise limit to 4GB.
-        (Matt Stancliff, Salvatore Sanfilippo)
-* [FIX] Handle signed/unsigned comparisons with more care around the code.
+>> General changes
+
+* [FIX] Solaris compilation issues. (Matt Stancliff, Salvatore Sanfilippo)
+* [FIX] Allow shared integer objects if maxmemory policy is not LRU based.
         (Salvatore Sanfilippo)
-* [FIX] Colorized test output fixed to don't change the background color.
-        (Mariano Pérez Rodríguez)
-* [FIX] More Sentinel IPv6 fixes. (Eiichi Sato)
-* [FIX] Deny CLIENT command in scripts. (Matt Stancliff)
-* [FIX] Allow datasets with more than 2 billion of keys, initial work.
-* [FIX] Fix a Lua scripting crash by storing the length of the static
-        argv when first allocated. (Paddy Byers)
+* [FIX] PFSELFTEST: less false positives. (Salvatore Sanfilippo)
+* [FIX] Fail SYNC if background save child aborted due to a signal. (Yossi
+        Gottlieb)
 
+* [NEW] Latency framework backported from unstable branch. (Salvatore
+        Sanfilippo)
+* [NEW] AOF rewrite improved for latency. (Salvatore Sanfilippo)
 * [NEW] Pub/Sub PING. (Salvatore Sanfilippo)
 * [NEW] Much faster ZUNIONSTORE. (Kyle Hubert, Salvatore Sanfilippo)
 * [NEW] Faster ll2string() implementation. (Salvatore Sanfilippo)
-* [NEW] **WARNING, minor API change**: PUBSUB NUMSUB: return type modified
-        to integer. (Matt Stancliff)
-* [NEW] redis-benchmark support for AUTH. (CharSyam)
-
---[ Redis 2.8.13 ] Release date: 14 Jul 2014
-
-# UPGRADE URGENCY: LOW for Redis and Sentinel, this is a features enhancement
-                   release mostly. Since this release introduces the latency
-                   monitoring feature, Redis 2.8 users experiencing latency
-                   issues are strongly encouraged to upgrade.
-
-* [FIX] CLIENT KILL minor backward compatibility fixes. (Salvatore Sanfilippo)
-* [FIX] Enable HAVE_ATOMIC for PowerPC. (Matt Stancliff)
-* [FIX] More robust PSYNC and AOF rewrites tests. (Salvatore Sanfilippo)
-* [FIX] Solaris build fixed. (Matt Stancliff, Salvatore Sanfilippo)
-
-* [NEW] The new latency monitoring feature, as documented at
-        http://redis.io/topics/latency-monitor (Salvatore Sanfilippo)
-* [NEW] The COMMAND command, exposing the Redis command table
-        as an API. (Matt Stancliff)
-* [NEW] Update used memory with C11 __atomic. (Matt Stancliff)
-
---[ Redis 2.8.12 ] Release date: 23 Jun 2014
-
-# UPGRADE URGENCY: HIGH for Redis, CRITICAL for Sentinel.
-
-# WARNING: This release contains a non backward compatible semantical change
-           to Lua script that should affect an almost zero number of users.
-
-* [FIX / BREAKS BACKWARD COMPATIBILITY] Using SELECT inside Lua scripts no
-       longer makes the selected DB to be set in the calling client.
-       So Lua can still use SELECT, but the client calling the script will
-       remain set to the original DB. Thix fixes an issue with Redis
-       replication of Lua scripts that called SELECT without reverting the
-       selected DB to the original one. (Salvatore Sanfilippo)
-* [FIX] Sentinel failover was instalbe if the master was detected as available
-        during the failover (especially during manual failovers) because
-        of an implementation error (lack of checking of
-        SRI_PROMOTED flag). (Salvatore Sanfilippo)
+
+>> Cluster changes
+
+* [FIX] CLUSTER RESET: Flush slave dataset on reset. (Salvatore Sanfilippo)
+* [FIX] Replica migration: don't migrate to masters that never had slaves
+        in the past, but only to masters that remained orphaned after
+        failure events. (Salvatore Sanfilippo)
+
+* [NEW] redis-trib: allow to reshard in non-interactive way. (Salvatore
+        Sanfilippo)
+* [NEW] Cluster test: unit 04, check consistency during resharding. (Salvatore
+        Sanfilippo)
+* [NEW] Cluster test: unit 05, slave selection. (Salvatore Sanfilippo)
+* [NEW] Cluster test: unit 06, slaves with stale data can't failover. (Salvatore
+        Sanfilippo)
+* [NEW] Cluster test: unit 07, replicas migration. (Salvatore Sanfilippo)
+
+>> Sentinel changes
+
+* No Sentinel changes in this release.
+
+--[ Redis 3.0.0 Beta 7 (version 2.9.56) ] Release date: 30 jun 2014
+
+This is the 7th beta of Redis 3.0.0.
+
+>> General changes
+
+* [FIX] Scripting fixes backported from unstable, see Redis 2.8.12 changelog
+        for more info. (Salvatore Sanfilippo)
 * [FIX] Cancel SHUTDOWN if initial AOF is being written. (Matt Stancliff)
-* [FIX] Sentinel: bind source address for outcoming connections. (Matt
-        Stancliff).
-* [FIX] Less timing sensitive Sentinel tests. (Salvatore Sanfilippo).
-
-* [NEW] redis-cli --intrinsic-latency stopped with SIGINT still reports
-        stats (Matt Stancliff)
-* [NEW] Sentinels broadcast an HELLO message ASAP after a failover in order to
-        reach a consistent state faster (before it relied for periodic HELLO
-        messages). (Salvatore Sanfilippo).
+
+* [NEW] New command: COMMAND, for commands introspection (Matt Stancliff &
+        Salvatore Sanfilippo)
+* [NEW] hiredis: Update to latest version. (Matt Stancliff)
 * [NEW] Jemalloc updated to 3.6.0. (Salvatore Sanfilippo)
-* [NEW] CLIENT LIST speedup. (Salvatore Sanfilippo)
-* [NEW] CLIENT LIST new unique incremental ID to every client. (Salvatore
-        Sanfilippo)
-* [NEW] ROLE command added. (Salvatore Sanfilippo)
-* [NEW] CLIENT KILL new form to kill by client type and ID (see doc at
-        redis.io for more info). (Salvatore Sanfilippo)
-* [NEW] Sentinel now disconnects clients when instances are reconfigured
-        (see http://redis.io/topics/sentinel-clients). (Salvatore Sanfilippo)
-* [NEW] Hiredis update to latest version. (Matt Stancliff)
-
---[ Redis 2.8.11 ] Release date: 11 Jun 2014
-
-# UPGRADE URGENCY: HIGH if you use Lua scripting, LOW otherwise.
-
-* [FIX] A previous fix for Lua -> Redis numerical precision enhancement
-        introduced a new problem. In Redis 2.8.10 commands called from Lua
-        passing a string that "looks like" a very large number, may actually
-        use as argument the string converted as a float. This bug is now
-        fixed.
-* [FIX] Now commands other than *PUSH* adding elements to a list will be able
-        to awake clients blocked in a blocking POP operation.
-* [FIX] Cygwin compilation fixes.
-
---[ Redis 2.8.10 ] Release date: 5 Jun 2014
-
-# UPGRADE URGENCY: HIGH if you use min-slaves-to-write option.
-
-* [FIX] IMPORTANT! A min-slaves-to-write option active in a slave totally
-        prevented the slave from acception the master stream of commands.
-        This release includes testes for min-slaves-to-write, and a fix
-        for this issue.
-* [FIX] Sometimes DEL returned 1 for already expired keys. Fixed.
-* [FIX] Fix test false positive because new osx 'leaks' output.
-* [FIX] PFCOUNT HLL cache invalidation fixed: no wrong value was reported
-        but the cache was not used at all, leading to lower performances.
-* [FIX] Accept(2) multiple clients per readable-event invocation, and better
-        processing of I/O while loading or busy running a timedout script.
-        Basically now the LOADING / BUSY errors are reported at a decent
-        speed.
-* [FIX] A softwaer watchdog crash fixed.
-* [FIX] Fixed a Lua -> Redis numerical precision loss.
-
-* [NEW] Lua scripting engine speed improved.
-* [NEW] Sentinel generates one new event for humans to understand better
-        what is happening during a failover: +config-update-from.
-        Also the time at which a failover will be re-attempted is logged.
-
---[ Redis 2.8.9 ] Release date: 22 Apr 2014
-
-# UPGRADE URGENCY: LOW, only new features introduced, no bugs fixed.
-
-* [NEW] The HyperLogLog data structure. You can read more about it
-        in this blog post. http://antirez.com/news/75
-* [NEW] The Sorted Set data type has now support for lexicographic range
-        queries, check the new commands ZRANGEBYLEX, ZLEXCOUNT and
-        ZREMRANGEBYLEX, which are documented at http://redis.io.
-
---[ Redis 2.8.8 ] Release date: 25 Mar 2014
-
-# UPGRADE URGENCY: HIGH for Redis, LOW for Sentinel. There is a potentially
-                   critical bug fix causing data loss in Redis but it requires
-                   a combination of disk full and the use of the
-                   SHUTDOWN command.
-
-* [FIX] Fixed data loss when SHUTDOWN was used with a disk full condition.
-* [FIX] Fixed a memory leak in the SORT syntax error processing.
-* [FIX] When Sentinel down-after-milliseconds parameter is modified at runtime
-        now it gets propagated to all the slaves and sentinel instances
-        of the master.
-* [FIX] `install_server.sh` script finally fixed.
-* [FIX] Different fixes to maxclients handling.
+
+>> Cluster changes
+
+* [FIX] Cluster: clear NOADDR flag when updating node address.
+        (Salvatore Sanfilippo)
+
+* [NEW] New CLUSTER SLOTS command to simplify Cluster clients operations.
+        (Matt Stancliff)
+* [NEW] More Cluster tests. (Salvatore Sanfilippo)
+* [NEW] Log when failover authorization are granted / denied.
+        (Salvatore Sanfilippo)
+
+>> Sentinel changes
+
+* [FIX] A few Sentinel bugs fixed and improvements, see Redis 2.8.12
+        changelog for more info.  (Salvatore Sanfilippo & Matt Stancliff)
+* [NEW] New Sentinel-Client handshake protocol, ROLE command, CLIENT KILL,
+        all backported to 3.0 branch. (Salvatore Sanfilippo)
+
+--[ Redis 3.0.0 Beta 6 (version 2.9.55) ] Release date: 9 jun 2014
+
+This is the 6th beta of Redis 3.0.0.
+
+>> General changes
+
+* [FIX] Fix software watchdog signal handler crash due to re-entering.
+* [FIX] Better Lua number -> string conversion for Lua scripts.
+* [FIX] Serious replication bug when min-slaves-* feature is used in slaves
+        configuration fixed.
+* [FIX] Blocking pop on lists now works when the list is created by commands
+        other than *PUSH* (for example SORT STORE).
+
+>> Cluster changes
+
+* [FIX] CRITICAL: For a bug in the implementation of CLUSTER SET-CONFIG-EPOCH
+        introduced with beta-3 (especially beta-4 where the command
+        is actually used by redis-trib), a configEpoch for a node could
+        jump backward, breaking the eventual consistency property of the
+        slots -> nodes mapping in the cluster.
+
+>> Sentinel changes
+
+* No changes for Sentinel in this release.
+
+--[ Redis 3.0.0 Beta 5 (version 2.9.54) ] Release date: 26 may 2014
+
+This is the 5th beta of Redis 3.0.0. It does not include any real
+worthwhile change (just three days passed since the previous beta), but
+fixes two stupid bugs preventing cluster tests to pass.
+
+--[ Redis 3.0.0 Beta 4 (version 2.9.53) ] Release date: 23 may 2014
+
+This is the fourth beta of Redis 3.0.0.
+
+>> General changes
+
+* [NEW] Scripting engine performances improvements.
+* [NEW] Log format slightly changed to report current node role.
+
+* [FIX] Correct the HyperLogLog stale cache flag to prevent unnecessary
+        computation.
+
+>> Cluster changes
+
+* [NEW] redis-trib: ability to import data from standalone Redis instances.
+* [NEW] redis-trib: "fix" subcommand much better at fixing errors.
+* [NEW] CLUSTER FAILOVER FORCE implemented.
+* [NEW] CLUSTER RESET implemented, it is now possible to completely reset
+        nodes and create a new cluster without restarting anything.
+* [NEW] Slave validity factor (max estimated data age to still failover)
+        is now under the control of the user, and can be configured via
+        redis.conf or CONFIG SET. Option name cluster-slave-validity-factor.
+* [NEW] Cluster test: failure detection and failover initial tests.
+* [NEW] CLUSTER MEET: better error messages when address is invalid.
+* [NEW] Bulk-accept new Cluster nodes in the Cluster bus instead of
+        performing just a single accept() per event fired.
+
+* [FIX] Bypass data_age check for manual failovers.
+* [FIX] Fixed data_age computation / check integer overflow.
+* [FIX] Various fixes to Tcl client.tcl Redis Cluster client used in tests.
+* [FIX] Better handling of stolen slots.
+* [FIX] Don't accept cluster bus connections during startup.
+
+>> Sentinel changes
+
+* [NEW] Generate +config-update-from event when a new config is received.
+* [NEW] Log when a failover will be re-attempted again.
+
+* [FIX] Sentinel: Add "dir /tmp" directive in example sentinel.conf.
+
+--[ Redis 3.0.0 Beta 3 (version 2.9.52) ] Release date: 5 may 2014
+
+This is the third beta of Redis 3.0.0.
+
+>> General changes
+
+* [NEW] New data structure: the HyperLogLog (see 2.8 release notes).
+* [NEW] Lexicograhical range queries in sorted sets (see 2.8 release notes).
+* [NEW] LRU algorithm precision greatly improved.
+
+* [FIX] Redis is now much more responsive to reply with LOADING / BUSY errors.
+
+>> Cluster changes
+
+* [NEW] Cluster testing framework and initial tests.
+* [NEW] Cluster epochs collision resolution (make Redis Cluster more resilient
+        to admin and programming errors).
+* [NEW] Persist / fsync some global state to ensure correct crash-recovery
+        semantics.
+* [NEW] New command introduced: CLUSTER SET-CONFIG-EPOCH, still not used
+        by redis-trib. Will be used to speedup the assignment of unique
+        epochs to different nodes at cluster creation time. For now this is
+        handled as a side effect of the cluster epochs collision resolution.
+
+* [FIX] Different fixes to redis-trib cluster creation.
+* [FIX] Fix an error in the CLUSTER NODES output for nodes slots.
+
+>> Sentinel changes
 
 * [NEW] Sentinels are now able to send update messages in a peer-to-peer
         fashion even if no Redis instances are available. Now the Sentinel
         liveness property that the most updated configuration in a given
         partition is propagated to all the Sentinels is extended to partitions
         without reachable instances.
 * [NEW] Sentinel safety properties are now ensured in a crash-recovery system
         model since some state is persisted on disk before replying to other
         nodes, and reloaded at startup.
 * [NEW] Sentinel now uses CLIENT SETNAME so that it is easy to identify
         Sentinels using CLIENT LIST among other clients.
 * [NEW] Sentinel failure detection and reconnection code improved.
-* [NEW] Use all 24 bits (instead of 22) for the Redis objects LRU field.
-        Note that the new LRU algorithm using eviction pools was not backported
-        from unstable for safery / code maturity concerns.
-* [NEW] Majory speedup for the INFO command (it is now 6 times faster).
-* [NEW] More Sentinel unit tests.
-* [NEW] New command DEBUG ERROR returns the specified error. Example:
-        DEBUG ERROR "LOADING database". This is handy to write Redis client
-        libraries unit tests.
-* [NEW] redis-cli now supports multi-line editing via updated linenoise lib.
-
-Thanks to Matt Stancliff and Jan-Erik Rediger for the work done in the context
-of this release.
-
---[ Redis 2.8.7 ] Release date: 5 Mar 2014
-
-# UPGRADE URGENCY: LOW for Redis, LOW for Sentinel. However this release adds
-                   new features so users may want to upgrade in order to
-                   exploit the new functionalities.
+
+--[ Redis 3.0.0 Beta 2 (version 2.9.51) ] Release date: 11 mar 2014
+
+This is the second beta of Redis 3.0.0.
+
+>> General changes
 
 * [FIX] Sometimes the absolute config file path was obtained in a wrong way.
         This happened when there was a "dir" directive inside the config file
         and at the same time the configuration file was given as a relative
         path to redis-server or redis-sentinel executables.
 * [FIX] redis-cli: Automatically enter --slave mode when SYNC or PSYNC are
         called during an interactive session.
-* [FIX] Sentinel "IDONTKNOW" error removed as it does not made sense with the
-        new Sentinel design. This error was actually a fix for a design error
-        in the first implementation of Sentinel.
-* [FIX] Sentinel: added a missing exit() call to abort after config file
-        checks at startup. This error was introduced with an improvement in
-        a previous 2.8 release.
 * [FIX] BITCOUNT: fixed unaligned access causing issues in sparc and other
         archs not capable of dealing with unaligned accesses. This also makes
         the code faster in archs where unaligned accesses are allowed.
-* [FIX] Sentinel: better nodes fail over start time desynchronization to avoid
-        split-brain during the voting process needed to get authorization to
-        fail over. This means the system is less likely to need to retry
-        and will fail over faster. No changes in behavior / correctness.
 * [FIX] Force INFO used_memory_peak to match peak memory. This generated some
         confusion among users even if it was not an actual bug.
+* [FIX] Fixed an critical EVALSHA script cache bug: scripts executed may not
+        propagate to AOF / Slaves correctly under certain conditions.
+        See issue #1549 at Github for more information.
+* [FIX] Fixed multiple bugs resulting into closing the link with master or slave
+        during replication without good reasons. This will result in useless
+        resynchronizations, or infinite loops where the replication link can't
+        be established.
+* [FIX] Don't count the time needed to populate the buffers of clients waiting
+        in MONITOR mode when populating the Slow Log entries.
 
-* [NEW] Sentinel unit tests and framework. More tests needed and units must
-        be improved in order to have less false positives, but it is a start
-        and features a debugging console that is useful to fix tests or to
-        inspect bugs causing tests failures.
-* [NEW] New Sentinel events: +/-monitor and +set used to monitor when an
-        instance to monitor is added or removed, or when a configuration
-        is modified via SENTINEL SET.
 * [NEW] Redis-cli updated to use SCAN instead of random sampling via
         RANDOMKEY in order to implement --bigkeys feature. Moreover the
         implementation now supports pipelining and reports more information
         at the end of the scan. Much faster, much better. A special thank
         you to Michael Grunder for this improvement.
 * [NEW] redis-cli now supports a new --intrinsic-latency mode that is able
         to meter the latency of a system due to kernel / hypervisor.
         How to use it is explained at http://redis.io/topics/latency.
 * [NEW] New command BITPOS: find first bit set or clear in a bitmap.
 * [NEW] CONFIG REWRITE calls are now logged.
-
---[ Redis 2.8.6 ] Release date: 13 Feb 2014
-
-# UPGRADE URGENCY: HIGH for Redis, LOW for Sentinel. Redis users using Lua
-                   scripts with EVALSHA and attached slaves and/or AOF
-                   persistence should consider upgrading ASAP.
-
-* [FIX] Fixed an critical EVALSHA script cache bug: scripts executed may not
-        propagate to AOF / Slaves correctly under certain conditions.
-        See issue #1549 at Github for more information.
-* [FIX] Fixed multiple bugs resulting into closing the link with master or slave
-        during replication without good reasons. This will result in useless
-        resynchronizations, or infinite loops where the replication link can't
-        be established.
-* [FIX] Don't count the time needed to populate the buffers of clients waiting
-        in MONITOR mode when populating the Slow Log entries.
-
 * [NEW] AOF write errors (like no space on device) no longer abort Redis if the
         fsync policy is none or every second. The database enters a read-only
         mode where every write is refused with an error. Normal operations are
         restored as soon as Redis is able to append again data to the AOF file.
 * [NEW] Sentinel now accepts SHUTDOWN command.
 
---[ Redis 2.8.5 ] Release date: 4 Feb 2014
-
-# UPGRADE URGENCY: HIGH for Redis, LOW for Sentinel. Redis users using Lua
-                   scripts with expires, and Redis users relying on the
-                   ability of Redis to block writes on RDB saving errors
-                   should plan to upgrade ASAP.
-
-* [FIX] Fixed a replication bug caused by Lua scripts + expired keys: keys could
-        expire in the middle of scripts causing non-deterministic behavior.
-* [FIX] MISCONFIG error if condition fixed, the server was no longer able
-        to stop writes on RDB misconfiguration after this error was introduced.
-* [FIX] REDIS_AOF_REWRITE_MIN_SIZE is now 64mb like example redis.conf default.
-* [FIX] Perform fflush() before fsync() in rio.c (bug without actual effects).
-* [FIX] Don't log MONITOR clients as disconnecting slaves.
-* [FIX] SENTINEL MASTER arity check fixed. Crashed the Sentinel instance when
-        the command was given without arguments.
-
-* [NEW] Allow CONFIG and SHUTDOWN while in stale-slave state.
-* [NEW] Support for configurable TCP listen(2) backlog size.
-* [NEW] redis-cli supports SCAN via the --scan and --pattern options.
-* [NEW] SENTINEL SET master quorum via runtime API implemented.
-
---[ Redis 2.8.4 ] Release date: 13 Jan 2014
-
-# UPGRADE URGENCY: MODERATE for Redis and Sentinel.
-
-* [FIX] Makefile compatibility with non common make variants improved.
-* [FIX] SDIFF crash in very unlikely to trigger state fixed.
-* [FIX] Config rewriting fixed: don't wipe options unknown to the rewrite
-        process.
-* [FIX] Set TCP port to 0 works again to disable TCP networking.
-* [FIX] Fixed replication with old Redis instances as masters by not
-        sending REPLCONF ACK to them.
-* [FIX] Fix keyspace notifications rewrite and CONFIG GET output.
-* [FIX] Fix RESTORE TTL handling in 32 bit systems (32 bit overflow).
-
-* [NEW] Sentinel now has a run time configuration API.
-* [NEW] Log when we lost connection with master or slave.
-* [NEW] When instance is turned from slave to master now inherits the
-        old master replication offset when possible. This improves the
-        Sentinel failover procedure.
-
---[ Redis 2.8.3 ] Release date: 11 Dec 2013
-
-# UPGRADE URGENCY: MODERATE for Redis, HIGH for Sentinel.
-
-* [FIX] Sentinel instance role sampling fixed, the system is now more
-        reliable during failover and when reconfiguring instances with
-        non matching configuration.
-* [FIX] Inline requests are now handled even when terminated with just LF.
-* [FIX] Replication timeout handling greatly improved, now the slave is able
-        to ping the master while removing the old data from memory, and while
-        loading the new RDB file. This avoid false timeouts sensed by
-        masters.
-* [FIX] Fixed a replication bug involving 32 bit instances and big datasets
-        hard to compress that resulted into more than 2GB of RDB file sent.
-* [FIX] Return error for inline requests with unbalanced quotes.
-* [FIX] Publish the slave replication offset even when disconnected from the
-        master if there is still a cached master instance.
-
---[ Redis 2.8.2 ] Release date: 2 Dec 2013
-
-# UPGRADE URGENCY: MODERATE for both Redis and Sentinel.
-
-* [FIX] Sentinel better desynchronization to avoid split-brain elections
-        where no Sentinel managed to get elected.
-* [FIX] Stop accepting writes on "MISCONF" error only if master, not slave.
-* [FIX] Reply to PING with an error on "MISCONF" errors.
-
---[ Redis 2.8.1 ] Release date: 25 Nov 2013
-
-# UPGRADE URGENCY: LOW for Redis, CRITICAL for Senitnel. You don't need to
-                   upgrade your Redis instances but it is highly recommended
-                   to upgrade and restart all the Sentinel processes.
-
-* [FIX] Fixed a bug in "new Sentinel" config propagation.
-* [FIX] Fixed a false positive in Redis tests.
-
---[ Redis 2.8.0 ] Release date: 22 Nov 2013
-
-# UPGRADE URGENCY: LOW, unless you want to upgrade to new Sentinel code.
-
-* [FIX] Fixed an error in rdbWriteRaw() that should have no practical impact.
-* [NEW] Log the new master when SLAVEOF command is used.
-* [NEW] Sentinel code synchronized with the unstable branch, the new Sentinel
-        is a reimplementation that uses more reliable algorithms.
-
---[ Redis 2.8 Release Candidate 6 (2.7.106) ] Release date: 6 Nov 2013
-
-This is the 6th release candidate of Redis 2.8 (official version is 2.7.106).
-
-# UPGRADE URGENCY: LOW, only new features back ported, no fixes.
-
-* [NEW] SCAN, SSCAN, HSCAN, ZSCAN commands.
-
---[ Redis 2.8 Release Candidate 5 (2.7.105) ] Release date: 9 Oct 2013
-
-This is the 5th release candidate of Redis 2.8 (official version is 2.7.105).
-Important bugs fixed inside.
-
-# UPGRADE URGENCY: HIGH because of many non critical replication bugs fixed.
-
-* [FIX] redis-cli: don't crash with --bigkeys when the key no longer exist.
-* [FIX] Allow AUTH / PING when disconnected from slave and serve-stale-data is no.
-* [FIX] PSYNC: safer handling of PSYNC requests with offsets in the future.
-* [FIX] Replication: Fix master timeout detection.
-* [FIX] Replication: Correctly install the write handler after successful PSYNC.
-
---[ Redis 2.8 Release Candidate 4 (2.7.104) ] Release date: 30 Aug 2013
-
-This is the fourth release candidate of Redis 2.8 (official version is 2.7.104).
-Important bugs fixed inside.
-
-# UPGRADE URGENCY: HIGH because of the EVAL memory leak.
-
-* [FIX] Fixed a serious EVAL memory leak in the Lua stack.
-* [FIX] Fixed server startup when no IPv6 address exists in any interface.
-* [FIX] Send MISCONFIG error when BGSAVE fails because can't fork.
-* [FIX] Memory efficiency with large (> a few kbytes) values improved considerably.
-* [NEW] DEBUG SDSLEN for sds memory debugging.
-
---[ Redis 2.8 Release Candidate 3 (2.7.103) ] Release date: 19 Aug 2013
-
-This is the third release candidate of Redis 2.8 (official version is 2.7.103).
-Important bugs fixed inside.
-
-# UPGRADE URGENCY: HIGH
-
-* [FIX] Improved expired keys collection algorithm. Even under heavy load keys
-        to be expired can't accumulate because of lack of CPU time.
-* [FIX] Replication speed regression fixed (issue #1238).
-* [FIX] Fixed an hard to trigger PSYNC bug.
-* [FIX] Fixed Issue #1240, ZUNIONSTORE could lead to wrong result.
-* [NEW] Add per-db average TTL information in INFO output.
-* [NEW] redis-benchmark improvements.
-* [NEW] dict.c API wrong usage detection.
-
---[ Redis 2.8 Release Candidate 2 (2.7.102) ] Release date: 30 Jul 2013
-
-This is the second release candidate of Redis 2.8 (official version is 2.7.102).
-Important bugs fixed inside.
-
-# UPGRADE URGENCY: HIGH
-
-* [FIX] Fixed a critical replication bug, see issue #1221.
-* [NEW] The new inline protocol now accepts quoted strings like, for example
-        you can now type in a telnet session: set 'foo bar' "hello world\n".
-
---[ Redis 2.8 Release Candidate 1 (2.7.101) ] Release date: 18 Jul 2013
-
-This is the first release candidate of Redis 2.8 (official version is 2.7.101).
-
-The following is a list of improvements in Redis 2.8, compared to Redis 2.6.
-
-* [NEW] Slaves are now able to partially resynchronize with the master, so most
-        of the times a full resynchronization with the RDB creation in the master
-        side is not needed when the master-slave link is disconnected for a short
-        amount of time.
-* [NEW] Experimental IPv6 support.
-* [NEW] Slaves explicitly ping masters now, a master is able to detect a timed out
-        slave independently.
-* [NEW] Masters can stop accepting writes if not enough slaves with a given
-        maximum latency are connected.
-* [NEW] Keyspace changes notifications via Pub/Sub.
-* [NEW] CONFIG SET maxclients is now available.
-* [NEW] Ability to bind multiple IP addresses.
-* [NEW] Set process names so that you can recognize, in the "ps" command output,
-        the listening port of an instance, or if it is a saving child.
-* [NEW] Automatic memory check on crash.
-* [NEW] CONFIG REWRITE is able to materialize the changes in the configuration
-        operated using CONFIG SET into the redis.conf file.
-* [NEW] More NetBSD friendly code base.
-* [NEW] PUBSUB command for Pub/Sub introspection capabilities.
-* [NEW] EVALSHA can now be replicated as such, without requiring to be expanded
-        to a full EVAL for the replication link.
-* [NEW] Better Lua scripts error reporting.
-* [NEW] SDIFF performance improved.
-* [FIX] A number of bugfixes.
 
-Migrating from 2.6 to 2.8
-=========================
+>> Cluster changes
 
-Redis 2.6 is mostly a strict subset of 2.8. However there are a few things
-that you should be aware of:
+* [FIX] Bind the first interface listed in the "bind" configuration directive
+        if any, in order to perform outgoing connections. This fixes Cluster
+        usage when an address is bound but there are multiple interfaces that
+        may be used to connect with other nodes.
+* [FIX] When an "Importing" slot is closed via CLUSTER SETSLOT NODE ...
+        increment the configEpoch in the special case it is zero.
+* [FIX] Current transaction is invalidated on redirection errors.
+* [FIX] Abort if port does not allow for a valid cluster bus port that is
+        always at fixed +10000 offset.
+* [FIX] Keys extraction algorithm fixed for ZUNIONSTORE/ZINTERSTORE and SORT.
+* [FIX] Better failover timeout and retry times: failover should now work
+        reliabily when node-timeout is very small (a few milliseconds).
+* [FIX] Don't allow SORT GET/BY options in Cluster mode.
+* [FIX] Clear importing/migrating state when turning from master to slave role.
+* [FIX] Set slot error if we receive an update for a busy slot.
+* [FIX] Update node configEpoch on UPDATE messages.
+
+* [NEW] Support multi-key operations as long as keys resolve to the same
+        hash slot, and the slot is not migrating, or it is migrating but all
+        the mentioned keys are available.
+* [NEW] New DEBUG command CMDKEYS available to debug / test keys identification
+        in Redis commands.
+* [NEW] redis-trib: create subcommand is now able to assign spare slaves.
+* [NEW] redis-trib: new subcommand 'call'. Exec command in all nodes.
 
-The following commands changed behavior:
 
-    * The TTL and PTTL commands now return -2 if the key does not exist and
-      -1 if it exists but has no associated expire. Redis 2.6 and previous
-      versions used to return -1 for both the conditions.
-    * SORT with ALPHA now sorts according to local collation locale if no STORE
-      option is used.
-    * ZADD/ZINCRBY are now able to accept a bigger range of values as valid
-      scores, that is, all the values you may end having as a result of
-      calling ZINCRBY multiple times.
-    * Many errors are now prefixed by a more specific error code instead of
-      the generic -ERR, for example -WRONGTYPE, -NOAUTH, ...
-    * PUBLISH called inside Lua scripts is now correctly propagated to slaves.
+>> Sentinel changes
 
-The following redis.conf and CONFIG GET / SET parameters changed:
+* [FIX] Sentinel "IDONTKNOW" error removed as it does not made sense with the
+        new Sentinel design. This error was actually a fix for a design error
+        in the first implementation of Sentinel.
+* [FIX] Sentinel: added a missing exit() call to abort after config file
+        checks at startup. This error was introduced with an improvement in
+        a previous 2.8 release.
+* [FIX] Sentinel: better nodes fail over start time desynchronization to avoid
+        split-brain during the voting process needed to get authorization to
+        fail over. This means the system is less likely to need to retry
+        and will fail over faster. No changes in behavior / correctness.
 
-    * logfile now uses the empty string in order to log to standard output,
-      so 'logfile stdout' is now invalid, use 'logfile ""' instead.
+* [NEW] Sentinel unit tests and framework. More tests needed and units must
+        be improved in order to have less false positives, but it is a start
+        and features a debugging console that is useful to fix tests or to
+        inspect bugs causing tests failures.
+* [NEW] New Sentinel events: +/-monitor and +set used to monitor when an
+        instance to monitor is added or removed, or when a configuration
+        is modified via SENTINEL SET.
 
-The following INFO fields changed format in a non-backward compatible way:
+--[ Redis 3.0.0 Beta 1 (version 2.9.50) ] Release date: 11 Feb 2014
 
-    * The list of slaves in INFO is now in field=value format.
+This is the first beta of Redis 3.0.0.
 
-Replication:
+Migrating from 2.8 to 3.0
+=========================
 
-    Redis 2.8 can be used as slave for Redis 2.6, but doing this is only
-    a good idea for the short amount of time needed to upgrade your servers.
-    We suggest to update both master and slaves at about the same time.
+Redis 2.8 is mostly a strict subset of 3.0, you should not have any problem
+upgrading your application from 2.8 to 3.0. However this is a list of small
+non-backward compatible changes introduced in the 3.0 release:
+
+* The log format was modified. The prefix of each line included the pid
+  in the following format [1234]. Now instead it is 1234:? Where
+  '?' is actually the role of the instance. M for master, S for slave, C
+  if this process is a saving child (for RDB/AOF), and X for Sentinel.
 
 --------------------------------------------------------------------------------
 
 Credits: Where not specified the implementation and design is done by
-Salvatore Sanfilippo. Thanks to VMware and Pivotal for making all
-this possible. Also many thanks to all the other contributors and the amazing
-community we have.
+Salvatore Sanfilippo. Thanks to Pivotal for making all this possible.
+Also many thanks to all the other contributors and the amazing community
+we have.
 
 See commit messages for more credits.
 
 Cheers,
 Salvatore
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/COPYING /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/COPYING
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/COPYING	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/COPYING	2015-04-01 22:01:44.000000000 +0800
@@ -1,7 +1,7 @@
-Copyright (c) 2006-2015, Salvatore Sanfilippo
+Copyright (c) 2006-2014, Salvatore Sanfilippo
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 
     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c	2015-04-01 22:01:44.000000000 +0800
@@ -440,13 +440,12 @@
              * In this case we also want to close the connection, and have the
              * user wait until the server is ready to take our request.
              */
             if (((redisReply*)reply)->type == REDIS_REPLY_ERROR) {
                 c->err = REDIS_ERR_OTHER;
                 snprintf(c->errstr,sizeof(c->errstr),"%s",((redisReply*)reply)->str);
-                c->reader->fn->freeObject(reply);
                 __redisAsyncDisconnect(ac);
                 return;
             }
             /* No more regular callbacks and no errors, the context *must* be subscribed or monitoring. */
             assert((c->flags & REDIS_SUBSCRIBED || c->flags & REDIS_MONITORING));
             if(c->flags & REDIS_SUBSCRIBED)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/libhiredis.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/libhiredis.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/config.log /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/config.log
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/config.log	2017-09-27 22:28:59.679005018 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/config.log	2017-09-27 22:38:29.910984119 +0800
@@ -563,14 +563,14 @@
 configure:6583: checking for pthread_create in -lpthread
 configure:6608: gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops  -fvisibility=hidden  -D_GNU_SOURCE  conftest.c -lpthread   >&5
 configure:6608: $? = 0
 configure:6617: result: yes
 configure:6686: checking for _malloc_thread_cleanup
 configure:6686: gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops  -fvisibility=hidden  -D_GNU_SOURCE -D_REENTRANT  conftest.c  -lpthread >&5
-/tmp/cc688APL.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c:82: undefined reference to `_malloc_thread_cleanup'
+/tmp/ccJcoJb5.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c:82: undefined reference to `_malloc_thread_cleanup'
 collect2: error: ld returned 1 exit status
 configure:6686: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME ""
 | #define PACKAGE_TARNAME ""
@@ -656,14 +656,14 @@
 |   ;
 |   return 0;
 | }
 configure:6686: result: no
 configure:6700: checking for _pthread_mutex_init_calloc_cb
 configure:6700: gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops  -fvisibility=hidden  -D_GNU_SOURCE -D_REENTRANT  conftest.c  -lpthread >&5
-/tmp/ccSPlJAN.o: In function `main':
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c:82: undefined reference to `_pthread_mutex_init_calloc_cb'
+/tmp/ccizk8A4.o: In function `main':
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c:82: undefined reference to `_pthread_mutex_init_calloc_cb'
 collect2: error: ld returned 1 exit status
 configure:6700: $? = 1
 configure: failed program was:
 | /* confdefs.h */
 | #define PACKAGE_NAME ""
 | #define PACKAGE_TARNAME ""
@@ -1343,15 +1343,15 @@
 configure:8893: result: INCLUDEDIR         : /usr/local/include
 configure:8895: result: LIBDIR             : /usr/local/lib
 configure:8897: result: DATADIR            : /usr/local/share
 configure:8899: result: MANDIR             : /usr/local/share/man
 configure:8901: result: 
 configure:8903: result: srcroot            : 
-configure:8905: result: abs_srcroot        : /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/
+configure:8905: result: abs_srcroot        : /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/
 configure:8907: result: objroot            : 
-configure:8909: result: abs_objroot        : /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/
+configure:8909: result: abs_objroot        : /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/
 configure:8911: result: 
 configure:8913: result: JEMALLOC_PREFIX    : je_
 configure:8915: result: JEMALLOC_PRIVATE_NAMESPACE
 configure:8917: result:                    : je_
 configure:8919: result: install_suffix     : 
 configure:8921: result: autogen            : 0
@@ -1509,14 +1509,14 @@
 SHELL='/bin/bash'
 SOREV='so.1'
 XSLROOT='/usr/share/xml/docbook/stylesheet/docbook-xsl'
 XSLTPROC='/opt/anaconda2/bin/xsltproc'
 a='a'
 abi='elf'
-abs_objroot='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/'
-abs_srcroot='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/'
+abs_objroot='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/'
+abs_srcroot='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/'
 ac_ct_CC='gcc'
 bindir='${exec_prefix}/bin'
 build='x86_64-unknown-linux-gnu'
 build_alias=''
 build_cpu='x86_64'
 build_os='linux-gnu'
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/config.status /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/config.status
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/config.status	2017-09-27 22:28:59.243005034 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/config.status	2017-09-27 22:38:29.522984133 +0800
@@ -434,13 +434,13 @@
   with options \"$ac_cs_config\"
 
 Copyright (C) 2012 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
 
-ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc'
+ac_pwd='/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc'
 srcdir='.'
 INSTALL='/usr/bin/install -c'
 test -n "$AWK" || AWK=awk
 # The default lists apply if the user does not specify any file.
 ac_need_defaults=:
 while test $# != 0
@@ -761,15 +761,15 @@
 S["MANDIR"]="/usr/local/share/man"
 S["DATADIR"]="/usr/local/share"
 S["LIBDIR"]="/usr/local/lib"
 S["INCLUDEDIR"]="/usr/local/include"
 S["BINDIR"]="/usr/local/bin"
 S["PREFIX"]="/usr/local"
-S["abs_objroot"]="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/"
+S["abs_objroot"]="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/"
 S["objroot"]=""
-S["abs_srcroot"]="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/"
+S["abs_srcroot"]="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/"
 S["srcroot"]=""
 S["rev"]="1"
 S["target_alias"]=""
 S["host_alias"]=""
 S["build_alias"]=""
 S["LIBS"]=" -lpthread"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/doc/html.xsl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/doc/html.xsl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/doc/html.xsl	2017-09-27 22:28:59.283005032 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/doc/html.xsl	2017-09-27 22:38:29.558984132 +0800
@@ -1,4 +1,4 @@
 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
   <xsl:import href="/usr/share/xml/docbook/stylesheet/docbook-xsl/html/docbook.xsl"/>
-  <xsl:import href="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/doc/stylesheet.xsl"/>
+  <xsl:import href="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/doc/stylesheet.xsl"/>
 </xsl:stylesheet>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/doc/manpages.xsl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/doc/manpages.xsl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/doc/manpages.xsl	2017-09-27 22:28:59.295005032 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/doc/manpages.xsl	2017-09-27 22:38:29.570984132 +0800
@@ -1,4 +1,4 @@
 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
   <xsl:import href="/usr/share/xml/docbook/stylesheet/docbook-xsl/manpages/docbook.xsl"/>
-  <xsl:import href="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/doc/stylesheet.xsl"/>
+  <xsl:import href="/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/doc/stylesheet.xsl"/>
 </xsl:stylesheet>
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/lib/libjemalloc.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/lib/libjemalloc.a differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/Makefile	2017-09-27 22:28:59.271005033 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/Makefile	2017-09-27 22:38:29.550984132 +0800
@@ -16,14 +16,14 @@
 INCLUDEDIR := $(DESTDIR)/usr/local/include
 LIBDIR := $(DESTDIR)/usr/local/lib
 DATADIR := $(DESTDIR)/usr/local/share
 MANDIR := $(DESTDIR)/usr/local/share/man
 srcroot := 
 objroot := 
-abs_srcroot := /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/
-abs_objroot := /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/
+abs_srcroot := /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/
+abs_objroot := /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/
 
 # Build parameters.
 CPPFLAGS :=  -D_GNU_SOURCE -D_REENTRANT -I$(srcroot)include -I$(objroot)include
 CFLAGS := -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops  -fvisibility=hidden
 LDFLAGS := 
 EXTRA_LDFLAGS := 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/test/test.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/test/test.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/test/test.sh	2017-09-27 22:28:59.355005030 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/test/test.sh	2017-09-27 22:38:29.614984130 +0800
@@ -21,13 +21,13 @@
 fail_count=0
 for t in $@; do
   if [ $pass_count -ne 0 -o $skip_count -ne 0 -o $fail_count != 0 ] ; then
     echo
   fi
   echo "=== ${t} ==="
-  ${t} /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/
+  ${t} /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/
   result_code=$?
   case ${result_code} in
     ${pass_code})
       pass_count=$((pass_count+1))
       ;;
     ${skip_code})
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/fpconv.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/fpconv.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lapi.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lapi.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lauxlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lauxlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lbaselib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lbaselib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lcode.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lcode.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldblib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldblib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldebug.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldebug.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c	2015-04-01 22:01:44.000000000 +0800
@@ -492,13 +492,13 @@
   int i;
   Proto *tf;
   Closure *cl;
   struct SParser *p = cast(struct SParser *, ud);
   int c = luaZ_lookahead(p->z);
   luaC_checkGC(L);
-  tf = (luaY_parser)(L, p->z,
+  tf = ((c == LUA_SIGNATURE[0]) ? luaU_undump : luaY_parser)(L, p->z,
                                                              &p->buff, p->name);
   cl = luaF_newLclosure(L, tf->nups, hvalue(gt(L)));
   cl->l.p = tf;
   for (i = 0; i < tf->nups; i++)  /* initialize eventual upvalues */
     cl->l.upvals[i] = luaF_newupval(L);
   setclvalue(L, L->top, cl);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lfunc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lfunc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lgc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lgc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liblua.a and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liblua.a differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/linit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/linit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liolib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liolib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/llex.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/llex.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmathlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmathlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmem.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmem.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loadlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loadlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lobject.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lobject.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lopcodes.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lopcodes.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loslib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loslib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lparser.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lparser.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstate.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstate.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstring.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstring.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstrlib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstrlib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltable.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltable.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltablib.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltablib.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltm.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltm.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_bit.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_bit.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cjson.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cjson.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c	2015-04-01 22:01:44.000000000 +0800
@@ -63,13 +63,13 @@
  * that swaps a binary string if arch is little endian (and left it untouched
  * otherwise). */
 
 /* Reverse memory bytes if arch is little endian. Given the conceptual
  * simplicity of the Lua build system we prefer check for endianess at runtime.
  * The performance difference should be acceptable. */
-void memrevifle(void *ptr, size_t len) {
+static void memrevifle(void *ptr, size_t len) {
     unsigned char   *p = (unsigned char *)ptr,
                     *e = (unsigned char *)p+len-1,
                     aux;
     int test = 1;
     unsigned char *testp = (unsigned char*) &test;
 
@@ -93,34 +93,34 @@
 typedef struct mp_buf {
     lua_State *L;
     unsigned char *b;
     size_t len, free;
 } mp_buf;
 
-void *mp_realloc(lua_State *L, void *target, size_t osize,size_t nsize) {
+static void *mp_realloc(lua_State *L, void *target, size_t osize,size_t nsize) {
     void *(*local_realloc) (void *, void *, size_t osize, size_t nsize) = NULL;
     void *ud;
 
     local_realloc = lua_getallocf(L, &ud);
 
     return local_realloc(ud, target, osize, nsize);
 }
 
-mp_buf *mp_buf_new(lua_State *L) {
+static mp_buf *mp_buf_new(lua_State *L) {
     mp_buf *buf = NULL;
 
     /* Old size = 0; new size = sizeof(*buf) */
     buf = (mp_buf*)mp_realloc(L, NULL, 0, sizeof(*buf));
 
     buf->L = L;
     buf->b = NULL;
     buf->len = buf->free = 0;
     return buf;
 }
 
-void mp_buf_append(mp_buf *buf, const unsigned char *s, size_t len) {
+static void mp_buf_append(mp_buf *buf, const unsigned char *s, size_t len) {
     if (buf->free < len) {
         size_t newlen = buf->len+len;
 
         buf->b = (unsigned char*)mp_realloc(buf->L, buf->b, buf->len, newlen*2);
         buf->free = newlen;
     }
@@ -150,13 +150,13 @@
 typedef struct mp_cur {
     const unsigned char *p;
     size_t left;
     int err;
 } mp_cur;
 
-void mp_cur_init(mp_cur *cursor, const unsigned char *s, size_t len) {
+static void mp_cur_init(mp_cur *cursor, const unsigned char *s, size_t len) {
     cursor->p = s;
     cursor->left = len;
     cursor->err = MP_CUR_ERROR_NONE;
 }
 
 #define mp_cur_consume(_c,_len) do { _c->p += _len; _c->left -= _len; } while(0)
@@ -170,23 +170,19 @@
         return; \
     } \
 } while(0)
 
 /* ------------------------- Low level MP encoding -------------------------- */
 
-void mp_encode_bytes(mp_buf *buf, const unsigned char *s, size_t len) {
+static void mp_encode_bytes(mp_buf *buf, const unsigned char *s, size_t len) {
     unsigned char hdr[5];
     int hdrlen;
 
     if (len < 32) {
         hdr[0] = 0xa0 | (len&0xff); /* fix raw */
         hdrlen = 1;
-    } else if (len <= 0xff) {
-        hdr[0] = 0xd9;
-        hdr[1] = len;
-        hdrlen = 2;
     } else if (len <= 0xffff) {
         hdr[0] = 0xda;
         hdr[1] = (len&0xff00)>>8;
         hdr[2] = len&0xff;
         hdrlen = 3;
     } else {
@@ -199,13 +195,13 @@
     }
     mp_buf_append(buf,hdr,hdrlen);
     mp_buf_append(buf,s,len);
 }
 
 /* we assume IEEE 754 internal format for single and double precision floats. */
-void mp_encode_double(mp_buf *buf, double d) {
+static void mp_encode_double(mp_buf *buf, double d) {
     unsigned char b[9];
     float f = d;
 
     assert(sizeof(f) == 4 && sizeof(d) == 8);
     if (d == (double)f) {
         b[0] = 0xca;    /* float IEEE 754 */
@@ -217,13 +213,13 @@
         memcpy(b+1,&d,8);
         memrevifle(b+1,8);
         mp_buf_append(buf,b,9);
     }
 }
 
-void mp_encode_int(mp_buf *buf, int64_t n) {
+static void mp_encode_int(mp_buf *buf, int64_t n) {
     unsigned char b[9];
     int enclen;
 
     if (n >= 0) {
         if (n <= 127) {
             b[0] = n & 0x7f;    /* positive fixnum */
@@ -289,13 +285,13 @@
             enclen = 9;
         }
     }
     mp_buf_append(buf,b,enclen);
 }
 
-void mp_encode_array(mp_buf *buf, int64_t n) {
+static void mp_encode_array(mp_buf *buf, int64_t n) {
     unsigned char b[5];
     int enclen;
 
     if (n <= 15) {
         b[0] = 0x90 | (n & 0xf);    /* fix array */
         enclen = 1;
@@ -312,13 +308,13 @@
         b[4] = n & 0xff;
         enclen = 5;
     }
     mp_buf_append(buf,b,enclen);
 }
 
-void mp_encode_map(mp_buf *buf, int64_t n) {
+static void mp_encode_map(mp_buf *buf, int64_t n) {
     unsigned char b[5];
     int enclen;
 
     if (n <= 15) {
         b[0] = 0x80 | (n & 0xf);    /* fix map */
         enclen = 1;
@@ -337,52 +333,52 @@
     }
     mp_buf_append(buf,b,enclen);
 }
 
 /* --------------------------- Lua types encoding --------------------------- */
 
-void mp_encode_lua_string(lua_State *L, mp_buf *buf) {
+static void mp_encode_lua_string(lua_State *L, mp_buf *buf) {
     size_t len;
     const char *s;
 
     s = lua_tolstring(L,-1,&len);
     mp_encode_bytes(buf,(const unsigned char*)s,len);
 }
 
-void mp_encode_lua_bool(lua_State *L, mp_buf *buf) {
+static void mp_encode_lua_bool(lua_State *L, mp_buf *buf) {
     unsigned char b = lua_toboolean(L,-1) ? 0xc3 : 0xc2;
     mp_buf_append(buf,&b,1);
 }
 
 /* Lua 5.3 has a built in 64-bit integer type */
-void mp_encode_lua_integer(lua_State *L, mp_buf *buf) {
+static void mp_encode_lua_integer(lua_State *L, mp_buf *buf) {
 #if (LUA_VERSION_NUM < 503) && BITS_32
     lua_Number i = lua_tonumber(L,-1);
 #else
     lua_Integer i = lua_tointeger(L,-1);
 #endif
     mp_encode_int(buf, (int64_t)i);
 }
 
 /* Lua 5.2 and lower only has 64-bit doubles, so we need to
  * detect if the double may be representable as an int
  * for Lua < 5.3 */
-void mp_encode_lua_number(lua_State *L, mp_buf *buf) {
+static void mp_encode_lua_number(lua_State *L, mp_buf *buf) {
     lua_Number n = lua_tonumber(L,-1);
 
     if (IS_INT64_EQUIVALENT(n)) {
         mp_encode_lua_integer(L, buf);
     } else {
         mp_encode_double(buf,(double)n);
     }
 }
 
-void mp_encode_lua_type(lua_State *L, mp_buf *buf, int level);
+static void mp_encode_lua_type(lua_State *L, mp_buf *buf, int level);
 
 /* Convert a lua table into a message pack list. */
-void mp_encode_lua_table_as_array(lua_State *L, mp_buf *buf, int level) {
+static void mp_encode_lua_table_as_array(lua_State *L, mp_buf *buf, int level) {
 #if LUA_VERSION_NUM < 502
     size_t len = lua_objlen(L,-1), j;
 #else
     size_t len = lua_rawlen(L,-1), j;
 #endif
 
@@ -392,13 +388,13 @@
         lua_gettable(L,-2);
         mp_encode_lua_type(L,buf,level+1);
     }
 }
 
 /* Convert a lua table into a message pack key-value map. */
-void mp_encode_lua_table_as_map(lua_State *L, mp_buf *buf, int level) {
+static void mp_encode_lua_table_as_map(lua_State *L, mp_buf *buf, int level) {
     size_t len = 0;
 
     /* First step: count keys into table. No other way to do it with the
      * Lua API, we need to iterate a first time. Note that an alternative
      * would be to do a single run, and then hack the buffer to insert the
      * map opcodes for message pack. Too hackish for this lib. */
@@ -419,13 +415,13 @@
     }
 }
 
 /* Returns true if the Lua table on top of the stack is exclusively composed
  * of keys from numerical keys from 1 up to N, with N being the total number
  * of elements, without any hole in the middle. */
-int table_is_an_array(lua_State *L) {
+static int table_is_an_array(lua_State *L) {
     int count = 0, max = 0;
 #if LUA_VERSION_NUM < 503
     lua_Number n;
 #else
     lua_Integer n;
 #endif
@@ -462,28 +458,28 @@
     return max == count;
 }
 
 /* If the length operator returns non-zero, that is, there is at least
  * an object at key '1', we serialize to message pack list. Otherwise
  * we use a map. */
-void mp_encode_lua_table(lua_State *L, mp_buf *buf, int level) {
+static void mp_encode_lua_table(lua_State *L, mp_buf *buf, int level) {
     if (table_is_an_array(L))
         mp_encode_lua_table_as_array(L,buf,level);
     else
         mp_encode_lua_table_as_map(L,buf,level);
 }
 
-void mp_encode_lua_null(lua_State *L, mp_buf *buf) {
+static void mp_encode_lua_null(lua_State *L, mp_buf *buf) {
     unsigned char b[1];
     (void)L;
 
     b[0] = 0xc0;
     mp_buf_append(buf,b,1);
 }
 
-void mp_encode_lua_type(lua_State *L, mp_buf *buf, int level) {
+static void mp_encode_lua_type(lua_State *L, mp_buf *buf, int level) {
     int t = lua_type(L,-1);
 
     /* Limit the encoding of nested tables to a specified maximum depth, so that
      * we survive when called against circular references in tables. */
     if (t == LUA_TTABLE && level == LUACMSGPACK_MAX_NESTING) t = LUA_TNIL;
     switch(t) {
@@ -507,13 +503,13 @@
 }
 
 /*
  * Packs all arguments as a stream for multiple upacking later.
  * Returns error if no arguments provided.
  */
-int mp_pack(lua_State *L) {
+static int mp_pack(lua_State *L) {
     int nargs = lua_gettop(L);
     int i;
     mp_buf *buf;
 
     if (nargs == 0)
         return luaL_argerror(L, 0, "MessagePack pack needs input.");
@@ -688,21 +684,12 @@
             memcpy(&d,c->p+1,8);
             memrevifle(&d,8);
             lua_pushnumber(L,d);
             mp_cur_consume(c,9);
         }
         break;
-    case 0xd9:  /* raw 8 */
-        mp_cur_need(c,2);
-        {
-            size_t l = c->p[1];
-            mp_cur_need(c,2+l);
-            lua_pushlstring(L,(char*)c->p+2,l);
-            mp_cur_consume(c,2+l);
-        }
-        break;
     case 0xda:  /* raw 16 */
         mp_cur_need(c,3);
         {
             size_t l = (c->p[1] << 8) | c->p[2];
             mp_cur_need(c,3+l);
             lua_pushlstring(L,(char*)c->p+3,l);
@@ -783,13 +770,13 @@
         } else {
             c->err = MP_CUR_ERROR_BADFMT;
         }
     }
 }
 
-int mp_unpack_full(lua_State *L, int limit, int offset) {
+static int mp_unpack_full(lua_State *L, int limit, int offset) {
     size_t len;
     const char *s;
     mp_cur c;
     int cnt; /* Number of objects unpacked */
     int decode_all = (!limit && !offset);
 
@@ -836,33 +823,33 @@
         cnt += 1; /* increase return count by one to make room for offset */
     }
 
     return cnt;
 }
 
-int mp_unpack(lua_State *L) {
+static int mp_unpack(lua_State *L) {
     return mp_unpack_full(L, 0, 0);
 }
 
-int mp_unpack_one(lua_State *L) {
+static int mp_unpack_one(lua_State *L) {
     int offset = luaL_optinteger(L, 2, 0);
     /* Variable pop because offset may not exist */
     lua_pop(L, lua_gettop(L)-1);
     return mp_unpack_full(L, 1, offset);
 }
 
-int mp_unpack_limit(lua_State *L) {
+static int mp_unpack_limit(lua_State *L) {
     int limit = luaL_checkinteger(L, 2);
     int offset = luaL_optinteger(L, 3, 0);
     /* Variable pop because offset may not exist */
     lua_pop(L, lua_gettop(L)-1);
 
     return mp_unpack_full(L, limit, offset);
 }
 
-int mp_safe(lua_State *L) {
+static int mp_safe(lua_State *L) {
     int argc, err, total_results;
 
     argc = lua_gettop(L);
 
     /* This adds our function to the bottom of the stack
      * (the "call this function" position) */
@@ -879,21 +866,21 @@
         lua_insert(L,-2);
         return 2;
     }
 }
 
 /* -------------------------------------------------------------------------- */
-const struct luaL_Reg cmds[] = {
+static const struct luaL_Reg cmds[] = {
     {"pack", mp_pack},
     {"unpack", mp_unpack},
     {"unpack_one", mp_unpack_one},
     {"unpack_limit", mp_unpack_limit},
     {0}
 };
 
-int luaopen_create(lua_State *L) {
+static int luaopen_create(lua_State *L) {
     int i;
     /* Manually construct our module table instead of
      * relying on _register or _newlib */
     lua_newtable(L);
 
     for (i = 0; i < (sizeof(cmds)/sizeof(*cmds) - 1); i++) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c	2015-04-01 22:01:44.000000000 +0800
@@ -86,20 +86,18 @@
 typedef struct Header {
   int endian;
   int align;
 } Header;
 
 
-static int getnum (lua_State *L, const char **fmt, int df) {
+static int getnum (const char **fmt, int df) {
   if (!isdigit(**fmt))  /* no number? */
     return df;  /* return default value */
   else {
     int a = 0;
     do {
-      if (a > (INT_MAX / 10) || a * 10 > (INT_MAX - (**fmt - '0')))
-        luaL_error(L, "integral size overflow");
       a = a*10 + *((*fmt)++) - '0';
     } while (isdigit(**fmt));
     return a;
   }
 }
 
@@ -114,15 +112,15 @@
     case 'H': case 'h': return sizeof(short);
     case 'L': case 'l': return sizeof(long);
     case 'T': return sizeof(size_t);
     case 'f':  return sizeof(float);
     case 'd':  return sizeof(double);
     case 'x': return 1;
-    case 'c': return getnum(L, fmt, 1);
+    case 'c': return getnum(fmt, 1);
     case 'i': case 'I': {
-      int sz = getnum(L, fmt, sizeof(int));
+      int sz = getnum(fmt, sizeof(int));
       if (sz > MAXINTSIZE)
         luaL_error(L, "integral size %d is larger than limit of %d",
                        sz, MAXINTSIZE);
       return sz;
     }
     default: return 0;  /* other cases do not need alignment */
@@ -149,13 +147,13 @@
                             Header *h) {
   switch (opt) {
     case  ' ': return;  /* ignore white spaces */
     case '>': h->endian = BIG; return;
     case '<': h->endian = LITTLE; return;
     case '!': {
-      int a = getnum(L, fmt, MAXALIGN);
+      int a = getnum(fmt, MAXALIGN);
       if (!isp2(a))
         luaL_error(L, "alignment %d is not a power of 2", a);
       h->align = a;
       return;
     }
     default: {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lundump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lundump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lvm.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lvm.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lzio.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lzio.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/print.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/print.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/strbuf.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/strbuf.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/.gitignore /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/.gitignore
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/.gitignore	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/.gitignore	2015-04-01 22:01:44.000000000 +0800
@@ -16,12 +16,13 @@
 SHORT_TERM_TODO
 release.h
 src/transfer.sh
 src/configs
 redis.ds
 src/redis.conf
+src/nodes.conf
 deps/lua/src/lua
 deps/lua/src/luac
 deps/lua/src/liblua.a
 .make-*
 .prerequisites
 *.dSYM
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/redis.conf /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/redis.conf
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/redis.conf	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/redis.conf	2015-04-01 22:01:44.000000000 +0800
@@ -1,12 +1,7 @@
-# Redis configuration file example.
-#
-# Note that in order to read the configuration file, Redis must be
-# started with the file path as first argument:
-#
-# ./redis-server /path/to/redis.conf
+# Redis configuration file example
 
 # Note on units: when memory size is needed, it is possible to specify
 # it in the usual form of 1k 5GB 4M and so forth:
 #
 # 1k => 1000 bytes
 # 1kb => 1024 bytes
@@ -274,13 +269,13 @@
 #
 # With slow disks and fast (large bandwidth) networks, diskless replication
 # works better.
 repl-diskless-sync no
 
 # When diskless replication is enabled, it is possible to configure the delay
-# the server waits in order to spawn the child that trnasfers the RDB via socket
+# the server waits in order to spawn the child that transfers the RDB via socket
 # to the slaves.
 #
 # This is important since once the transfer starts, it is not possible to serve
 # new slaves arriving, that will be queued for the next RDB transfer, so the server
 # waits a delay in order to let more slaves arrive.
 #
@@ -470,21 +465,24 @@
 #       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby
 #       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby
 #       getset mset msetnx exec sort
 #
 # The default is:
 #
-# maxmemory-policy volatile-lru
+# maxmemory-policy noeviction
 
 # LRU and minimal TTL algorithms are not precise algorithms but approximated
-# algorithms (in order to save memory), so you can select as well the sample
-# size to check. For instance for default Redis will check three keys and
-# pick the one that was used less recently, you can change the sample size
-# using the following configuration directive.
+# algorithms (in order to save memory), so you can tune it for speed or
+# accuracy. For default Redis will check five keys and pick the one that was
+# used less recently, you can change the sample size using the following
+# configuration directive.
 #
-# maxmemory-samples 3
+# The default of 5 produces good enough results. 10 Approximates very closely
+# true LRU but costs a bit more CPU. 3 is very fast but not very accurate.
+#
+# maxmemory-samples 5
 
 ############################## APPEND ONLY MODE ###############################
 
 # By default Redis asynchronously dumps the dataset on disk. This mode is
 # good enough in many applications, but an issue with the Redis process or
 # a power outage may result into a few minutes of writes lost (depending on
@@ -616,12 +614,120 @@
 # already issued by the script but the user doesn't want to wait for the natural
 # termination of the script.
 #
 # Set it to 0 or a negative value for unlimited execution without warnings.
 lua-time-limit 5000
 
+################################ REDIS CLUSTER  ###############################
+#
+# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+# WARNING EXPERIMENTAL: Redis Cluster is considered to be stable code, however
+# in order to mark it as "mature" we need to wait for a non trivial percentage
+# of users to deploy it in production.
+# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+#
+# Normal Redis instances can't be part of a Redis Cluster; only nodes that are
+# started as cluster nodes can. In order to start a Redis instance as a
+# cluster node enable the cluster support uncommenting the following:
+#
+# cluster-enabled yes
+
+# Every cluster node has a cluster configuration file. This file is not
+# intended to be edited by hand. It is created and updated by Redis nodes.
+# Every Redis Cluster node requires a different cluster configuration file.
+# Make sure that instances running in the same system do not have
+# overlapping cluster configuration file names.
+#
+# cluster-config-file nodes-6379.conf
+
+# Cluster node timeout is the amount of milliseconds a node must be unreachable
+# for it to be considered in failure state.
+# Most other internal time limits are multiple of the node timeout.
+#
+# cluster-node-timeout 15000
+
+# A slave of a failing master will avoid to start a failover if its data
+# looks too old.
+#
+# There is no simple way for a slave to actually have a exact measure of
+# its "data age", so the following two checks are performed:
+#
+# 1) If there are multiple slaves able to failover, they exchange messages
+#    in order to try to give an advantage to the slave with the best
+#    replication offset (more data from the master processed).
+#    Slaves will try to get their rank by offset, and apply to the start
+#    of the failover a delay proportional to their rank.
+#
+# 2) Every single slave computes the time of the last interaction with
+#    its master. This can be the last ping or command received (if the master
+#    is still in the "connected" state), or the time that elapsed since the
+#    disconnection with the master (if the replication link is currently down).
+#    If the last interaction is too old, the slave will not try to failover
+#    at all.
+#
+# The point "2" can be tuned by user. Specifically a slave will not perform
+# the failover if, since the last interaction with the master, the time
+# elapsed is greater than:
+#
+#   (node-timeout * slave-validity-factor) + repl-ping-slave-period
+#
+# So for example if node-timeout is 30 seconds, and the slave-validity-factor
+# is 10, and assuming a default repl-ping-slave-period of 10 seconds, the
+# slave will not try to failover if it was not able to talk with the master
+# for longer than 310 seconds.
+#
+# A large slave-validity-factor may allow slaves with too old data to failover
+# a master, while a too small value may prevent the cluster from being able to
+# elect a slave at all.
+#
+# For maximum availability, it is possible to set the slave-validity-factor
+# to a value of 0, which means, that slaves will always try to failover the
+# master regardless of the last time they interacted with the master.
+# (However they'll always try to apply a delay proportional to their
+# offset rank).
+#
+# Zero is the only value able to guarantee that when all the partitions heal
+# the cluster will always be able to continue.
+#
+# cluster-slave-validity-factor 10
+
+# Cluster slaves are able to migrate to orphaned masters, that are masters
+# that are left without working slaves. This improves the cluster ability
+# to resist to failures as otherwise an orphaned master can't be failed over
+# in case of failure if it has no working slaves.
+#
+# Slaves migrate to orphaned masters only if there are still at least a
+# given number of other working slaves for their old master. This number
+# is the "migration barrier". A migration barrier of 1 means that a slave
+# will migrate only if there is at least 1 other working slave for its master
+# and so forth. It usually reflects the number of slaves you want for every
+# master in your cluster.
+#
+# Default is 1 (slaves migrate only if their masters remain with at least
+# one slave). To disable migration just set it to a very large value.
+# A value of 0 can be set but is useful only for debugging and dangerous
+# in production.
+#
+# cluster-migration-barrier 1
+
+# By default Redis Cluster nodes stop accepting queries if they detect there
+# is at least an hash slot uncovered (no available node is serving it).
+# This way if the cluster is partially down (for example a range of hash slots
+# are no longer covered) all the cluster becomes, eventually, unavailable.
+# It automatically returns available as soon as all the slots are covered again.
+#
+# However sometimes you want the subset of the cluster which is working,
+# to continue to accept queries for the part of the key space that is still
+# covered. In order to do so, just set the cluster-require-full-coverage
+# option to no.
+#
+# cluster-require-full-coverage yes
+
+# In order to setup your cluster make sure to read the documentation
+# available at http://redis.io web site.
+
 ################################## SLOW LOG ###################################
 
 # The Redis Slow Log is a system to log queries that exceeded a specified
 # execution time. The execution time does not include the I/O operations
 # like talking with the client, sending the reply and so forth,
 # but just the time needed to actually execute the command (this is the only
@@ -657,17 +763,17 @@
 # latency-monitor-threshold configuration directive. When its value is set
 # to zero, the latency monitor is turned off.
 #
 # By default latency monitoring is disabled since it is mostly not needed
 # if you don't have latency issues, and collecting data has a performance
 # impact, that while very small, can be measured under big load. Latency
-# monitoring can easily be enalbed at runtime using the command
+# monitoring can easily be enabled at runtime using the command
 # "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.
 latency-monitor-threshold 0
 
-############################# Event notification ##############################
+############################# EVENT NOTIFICATION ##############################
 
 # Redis can notify Pub/Sub clients about events happening in the key space.
 # This feature is documented at http://redis.io/topics/notifications
 #
 # For instance if keyspace events notification is enabled, and a client
 # performs a DEL operation on key "foo" stored in the Database 0, two
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0: runtest-cluster
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c	2015-04-01 22:01:44.000000000 +0800
@@ -261,17 +261,18 @@
     }
     return s;
 }
 
 #define ANET_CONNECT_NONE 0
 #define ANET_CONNECT_NONBLOCK 1
-static int anetTcpGenericConnect(char *err, char *addr, int port, int flags)
+static int anetTcpGenericConnect(char *err, char *addr, int port,
+                                 char *source_addr, int flags)
 {
     int s = ANET_ERR, rv;
     char portstr[6];  /* strlen("65535") + 1; */
-    struct addrinfo hints, *servinfo, *p;
+    struct addrinfo hints, *servinfo, *bservinfo, *p, *b;
 
     snprintf(portstr,sizeof(portstr),"%d",port);
     memset(&hints,0,sizeof(hints));
     hints.ai_family = AF_UNSPEC;
     hints.ai_socktype = SOCK_STREAM;
 
@@ -285,12 +286,32 @@
          * the next entry in servinfo. */
         if ((s = socket(p->ai_family,p->ai_socktype,p->ai_protocol)) == -1)
             continue;
         if (anetSetReuseAddr(err,s) == ANET_ERR) goto error;
         if (flags & ANET_CONNECT_NONBLOCK && anetNonBlock(err,s) != ANET_OK)
             goto error;
+        if (source_addr) {
+            int bound = 0;
+            /* Using getaddrinfo saves us from self-determining IPv4 vs IPv6 */
+            if ((rv = getaddrinfo(source_addr, NULL, &hints, &bservinfo)) != 0)
+            {
+                anetSetError(err, "%s", gai_strerror(rv));
+                goto end;
+            }
+            for (b = bservinfo; b != NULL; b = b->ai_next) {
+                if (bind(s,b->ai_addr,b->ai_addrlen) != -1) {
+                    bound = 1;
+                    break;
+                }
+            }
+            freeaddrinfo(bservinfo);
+            if (!bound) {
+                anetSetError(err, "bind: %s", strerror(errno));
+                goto end;
+            }
+        }
         if (connect(s,p->ai_addr,p->ai_addrlen) == -1) {
             /* If the socket is non-blocking, it is ok for connect() to
              * return an EINPROGRESS error here. */
             if (errno == EINPROGRESS && flags & ANET_CONNECT_NONBLOCK)
                 goto end;
             close(s);
@@ -314,18 +335,23 @@
     freeaddrinfo(servinfo);
     return s;
 }
 
 int anetTcpConnect(char *err, char *addr, int port)
 {
-    return anetTcpGenericConnect(err,addr,port,ANET_CONNECT_NONE);
+    return anetTcpGenericConnect(err,addr,port,NULL,ANET_CONNECT_NONE);
 }
 
 int anetTcpNonBlockConnect(char *err, char *addr, int port)
 {
-    return anetTcpGenericConnect(err,addr,port,ANET_CONNECT_NONBLOCK);
+    return anetTcpGenericConnect(err,addr,port,NULL,ANET_CONNECT_NONBLOCK);
+}
+
+int anetTcpNonBlockBindConnect(char *err, char *addr, int port, char *source_addr)
+{
+    return anetTcpGenericConnect(err,addr,port,source_addr,ANET_CONNECT_NONBLOCK);
 }
 
 int anetUnixGenericConnect(char *err, char *path, int flags)
 {
     int s;
     struct sockaddr_un sa;
@@ -528,28 +554,42 @@
 }
 
 int anetPeerToString(int fd, char *ip, size_t ip_len, int *port) {
     struct sockaddr_storage sa;
     socklen_t salen = sizeof(sa);
 
-    if (getpeername(fd,(struct sockaddr*)&sa,&salen) == -1) {
-        if (port) *port = 0;
-        ip[0] = '?';
-        ip[1] = '\0';
-        return -1;
-    }
+    if (getpeername(fd,(struct sockaddr*)&sa,&salen) == -1) goto error;
+    if (ip_len == 0) goto error;
+
     if (sa.ss_family == AF_INET) {
         struct sockaddr_in *s = (struct sockaddr_in *)&sa;
         if (ip) inet_ntop(AF_INET,(void*)&(s->sin_addr),ip,ip_len);
         if (port) *port = ntohs(s->sin_port);
-    } else {
+    } else if (sa.ss_family == AF_INET6) {
         struct sockaddr_in6 *s = (struct sockaddr_in6 *)&sa;
         if (ip) inet_ntop(AF_INET6,(void*)&(s->sin6_addr),ip,ip_len);
         if (port) *port = ntohs(s->sin6_port);
+    } else if (sa.ss_family == AF_UNIX) {
+        if (ip) strncpy(ip,"/unixsocket",ip_len);
+        if (port) *port = 0;
+    } else {
+        goto error;
     }
     return 0;
+
+error:
+    if (ip) {
+        if (ip_len >= 2) {
+            ip[0] = '?';
+            ip[1] = '\0';
+        } else if (ip_len == 1) {
+            ip[0] = '\0';
+        }
+    }
+    if (port) *port = 0;
+    return -1;
 }
 
 int anetSockName(int fd, char *ip, size_t ip_len, int *port) {
     struct sockaddr_storage sa;
     socklen_t salen = sizeof(sa);
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.h	2015-04-01 22:01:44.000000000 +0800
@@ -46,12 +46,13 @@
 #ifdef _AIX
 #undef ip_len
 #endif
 
 int anetTcpConnect(char *err, char *addr, int port);
 int anetTcpNonBlockConnect(char *err, char *addr, int port);
+int anetTcpNonBlockBindConnect(char *err, char *addr, int port, char *source_addr);
 int anetUnixConnect(char *err, char *path);
 int anetUnixNonBlockConnect(char *err, char *path);
 int anetRead(int fd, char *buf, int count);
 int anetResolve(char *err, char *host, char *ipbuf, size_t ipbuf_len);
 int anetResolveIP(char *err, char *host, char *ipbuf, size_t ipbuf_len);
 int anetTcpServer(char *err, int port, char *bindaddr, int backlog);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c	2015-04-01 22:01:44.000000000 +0800
@@ -37,12 +37,13 @@
 #include <sys/types.h>
 #include <sys/time.h>
 #include <sys/resource.h>
 #include <sys/wait.h>
 
 void aofUpdateCurrentSize(void);
+void aofClosePipes(void);
 
 /* ----------------------------------------------------------------------------
  * AOF rewrite buffer implementation.
  *
  * The following code implement a simple buffer used in order to accumulate
  * changes while the background process is rewriting the AOF file.
@@ -72,22 +73,55 @@
     server.aof_rewrite_buf_blocks = listCreate();
     listSetFreeMethod(server.aof_rewrite_buf_blocks,zfree);
 }
 
 /* Return the current size of the AOF rewrite buffer. */
 unsigned long aofRewriteBufferSize(void) {
-    listNode *ln = listLast(server.aof_rewrite_buf_blocks);
-    aofrwblock *block = ln ? ln->value : NULL;
+    listNode *ln;
+    listIter li;
+    unsigned long size = 0;
 
-    if (block == NULL) return 0;
-    unsigned long size =
-        (listLength(server.aof_rewrite_buf_blocks)-1) * AOF_RW_BUF_BLOCK_SIZE;
-    size += block->used;
+    listRewind(server.aof_rewrite_buf_blocks,&li);
+    while((ln = listNext(&li))) {
+        aofrwblock *block = listNodeValue(ln);
+        size += block->used;
+    }
     return size;
 }
 
+/* Event handler used to send data to the child process doing the AOF
+ * rewrite. We send pieces of our AOF differences buffer so that the final
+ * write when the child finishes the rewrite will be small. */
+void aofChildWriteDiffData(aeEventLoop *el, int fd, void *privdata, int mask) {
+    listNode *ln;
+    aofrwblock *block;
+    ssize_t nwritten;
+    REDIS_NOTUSED(el);
+    REDIS_NOTUSED(fd);
+    REDIS_NOTUSED(privdata);
+    REDIS_NOTUSED(mask);
+
+    while(1) {
+        ln = listFirst(server.aof_rewrite_buf_blocks);
+        block = ln ? ln->value : NULL;
+        if (server.aof_stop_sending_diff || !block) {
+            aeDeleteFileEvent(server.el,server.aof_pipe_write_data_to_child,
+                              AE_WRITABLE);
+            return;
+        }
+        if (block->used > 0) {
+            nwritten = write(server.aof_pipe_write_data_to_child,
+                             block->buf,block->used);
+            if (nwritten <= 0) return;
+            memmove(block->buf,block->buf+nwritten,block->used-nwritten);
+            block->used -= nwritten;
+        }
+        if (block->used == 0) listDelNode(server.aof_rewrite_buf_blocks,ln);
+    }
+}
+
 /* Append data to the AOF rewrite buffer, allocating new blocks if needed. */
 void aofRewriteBufferAppend(unsigned char *s, unsigned long len) {
     listNode *ln = listLast(server.aof_rewrite_buf_blocks);
     aofrwblock *block = ln ? ln->value : NULL;
 
     while(len) {
@@ -120,12 +154,19 @@
                                                          REDIS_NOTICE;
                 redisLog(level,"Background AOF buffer size: %lu MB",
                     aofRewriteBufferSize()/(1024*1024));
             }
         }
     }
+
+    /* Install a file event to send data to the rewrite child if there is
+     * not one already. */
+    if (aeGetFileEvents(server.el,server.aof_pipe_write_data_to_child) == 0) {
+        aeCreateFileEvent(server.el, server.aof_pipe_write_data_to_child,
+            AE_WRITABLE, aofChildWriteDiffData, NULL);
+    }
 }
 
 /* Write the buffer (possibly composed of multiple blocks) into the specified
  * fd. If a short write or any other error happens -1 is returned,
  * otherwise the number of bytes written is returned. */
 ssize_t aofRewriteBufferWrite(int fd) {
@@ -181,12 +222,14 @@
             wait3(&statloc,0,NULL);
         /* reset the buffer accumulating changes while the child saves */
         aofRewriteBufferReset();
         aofRemoveTempFile(server.aof_child_pid);
         server.aof_child_pid = -1;
         server.aof_rewrite_time_start = -1;
+        /* close pipes used for IPC between the two processes. */
+        aofClosePipes();
     }
 }
 
 /* Called when the user switches from "appendonly no" to "appendonly yes"
  * at runtime using the CONFIG command. */
 int startAppendOnly(void) {
@@ -516,12 +559,13 @@
     c->querybuf = sdsempty();
     c->querybuf_peak = 0;
     c->argc = 0;
     c->argv = NULL;
     c->bufpos = 0;
     c->flags = 0;
+    c->btype = REDIS_BLOCKED_NONE;
     /* We set the fake client as a slave waiting for the synchronization
      * so that Redis will not try to send replies to this client. */
     c->replstate = REDIS_REPL_WAIT_BGSAVE_START;
     c->reply = listCreate();
     c->reply_bytes = 0;
     c->obuf_soft_limit_reached_time = 0;
@@ -711,13 +755,13 @@
  * This is not placed in rio.c since that adds the redis.h dependency. */
 int rioWriteBulkObject(rio *r, robj *obj) {
     /* Avoid using getDecodedObject to help copy-on-write (we are often
      * in a child process when this function is called). */
     if (obj->encoding == REDIS_ENCODING_INT) {
         return rioWriteBulkLongLong(r,(long)obj->ptr);
-    } else if (obj->encoding == REDIS_ENCODING_RAW) {
+    } else if (sdsEncodedObject(obj)) {
         return rioWriteBulkString(r,obj->ptr,sdslen(obj->ptr));
     } else {
         redisPanic("Unknown string encoding");
     }
 }
 
@@ -949,12 +993,27 @@
 
     hashTypeReleaseIterator(hi);
 
     return 1;
 }
 
+/* This function is called by the child rewriting the AOF file to read
+ * the difference accumulated from the parent into a buffer, that is
+ * concatenated at the end of the rewrite. */
+ssize_t aofReadDiffFromParent(void) {
+    char buf[65536]; /* Default pipe buffer size on most Linux systems. */
+    ssize_t nread, total = 0;
+
+    while ((nread =
+            read(server.aof_pipe_read_data_from_parent,buf,sizeof(buf))) > 0) {
+        server.aof_child_diff = sdscatlen(server.aof_child_diff,buf,nread);
+        total += nread;
+    }
+    return total;
+}
+
 /* Write a sequence of commands able to fully rebuild the dataset into
  * "filename". Used both by REWRITEAOF and BGREWRITEAOF.
  *
  * In order to minimize the number of commands needed in the rewritten
  * log Redis uses variadic commands when possible, such as RPUSH, SADD
  * and ZADD. However at max REDIS_AOF_REWRITE_ITEMS_PER_CMD items per time
@@ -964,22 +1023,25 @@
     dictEntry *de;
     rio aof;
     FILE *fp;
     char tmpfile[256];
     int j;
     long long now = mstime();
+    char byte;
+    size_t processed = 0;
 
     /* Note that we have to use a different temp name here compared to the
      * one used by rewriteAppendOnlyFileBackground() function. */
     snprintf(tmpfile,256,"temp-rewriteaof-%d.aof", (int) getpid());
     fp = fopen(tmpfile,"w");
     if (!fp) {
         redisLog(REDIS_WARNING, "Opening the temp file for AOF rewrite in rewriteAppendOnlyFile(): %s", strerror(errno));
         return REDIS_ERR;
     }
 
+    server.aof_child_diff = sdsempty();
     rioInitWithFile(&aof,fp);
     if (server.aof_rewrite_incremental_fsync)
         rioSetAutoSync(&aof,REDIS_AOF_AUTOSYNC_BYTES);
     for (j = 0; j < server.dbnum; j++) {
         char selectcmd[] = "*2\r\n$6\r\nSELECT\r\n";
         redisDb *db = server.db+j;
@@ -1033,17 +1095,67 @@
             if (expiretime != -1) {
                 char cmd[]="*3\r\n$9\r\nPEXPIREAT\r\n";
                 if (rioWrite(&aof,cmd,sizeof(cmd)-1) == 0) goto werr;
                 if (rioWriteBulkObject(&aof,&key) == 0) goto werr;
                 if (rioWriteBulkLongLong(&aof,expiretime) == 0) goto werr;
             }
+            /* Read some diff from the parent process from time to time. */
+            if (aof.processed_bytes > processed+1024*10) {
+                processed = aof.processed_bytes;
+                aofReadDiffFromParent();
+            }
         }
         dictReleaseIterator(di);
         di = NULL;
     }
 
+    /* Do an initial slow fsync here while the parent is still sending
+     * data, in order to make the next final fsync faster. */
+    if (fflush(fp) == EOF) goto werr;
+    if (fsync(fileno(fp)) == -1) goto werr;
+
+    /* Read again a few times to get more data from the parent.
+     * We can't read forever (the server may receive data from clients
+     * faster than it is able to send data to the child), so we try to read
+     * some more data in a loop as soon as there is a good chance more data
+     * will come. If it looks like we are wasting time, we abort (this
+     * happens after 20 ms without new data). */
+    int nodata = 0;
+    mstime_t start = mstime();
+    while(mstime()-start < 1000 && nodata < 20) {
+        if (aeWait(server.aof_pipe_read_data_from_parent, AE_READABLE, 1) <= 0)
+        {
+            nodata++;
+            continue;
+        }
+        nodata = 0; /* Start counting from zero, we stop on N *contiguous*
+                       timeouts. */
+        aofReadDiffFromParent();
+    }
+
+    /* Ask the master to stop sending diffs. */
+    if (write(server.aof_pipe_write_ack_to_parent,"!",1) != 1) goto werr;
+    if (anetNonBlock(NULL,server.aof_pipe_read_ack_from_parent) != ANET_OK)
+        goto werr;
+    /* We read the ACK from the server using a 10 seconds timeout. Normally
+     * it should reply ASAP, but just in case we lose its reply, we are sure
+     * the child will eventually get terminated. */
+    if (syncRead(server.aof_pipe_read_ack_from_parent,&byte,1,5000) != 1 ||
+        byte != '!') goto werr;
+    redisLog(REDIS_NOTICE,"Parent agreed to stop sending diffs. Finalizing AOF...");
+
+    /* Read the final diff if any. */
+    aofReadDiffFromParent();
+
+    /* Write the received diff to the file. */
+    redisLog(REDIS_NOTICE,
+        "Concatenating %.2f MB of AOF diff received from parent.",
+        (double) sdslen(server.aof_child_diff) / (1024*1024));
+    if (rioWrite(&aof,server.aof_child_diff,sdslen(server.aof_child_diff)) == 0)
+        goto werr;
+
     /* Make sure data will not remain on the OS's output buffers */
     if (fflush(fp) == EOF) goto werr;
     if (fsync(fileno(fp)) == -1) goto werr;
     if (fclose(fp) == EOF) goto werr;
 
     /* Use RENAME to make sure the DB file is changed atomically only
@@ -1054,19 +1166,97 @@
         return REDIS_ERR;
     }
     redisLog(REDIS_NOTICE,"SYNC append only file rewrite performed");
     return REDIS_OK;
 
 werr:
-    redisLog(REDIS_WARNING,"Write error writing append only file on disk: %s", strerror(errno));
     fclose(fp);
     unlink(tmpfile);
+    redisLog(REDIS_WARNING,"Write error writing append only file on disk: %s", strerror(errno));
     if (di) dictReleaseIterator(di);
     return REDIS_ERR;
 }
 
+/* ----------------------------------------------------------------------------
+ * AOF rewrite pipes for IPC
+ * -------------------------------------------------------------------------- */
+
+/* This event handler is called when the AOF rewriting child sends us a
+ * single '!' char to signal we should stop sending buffer diffs. The
+ * parent sends a '!' as well to acknowledge. */
+void aofChildPipeReadable(aeEventLoop *el, int fd, void *privdata, int mask) {
+    char byte;
+    REDIS_NOTUSED(el);
+    REDIS_NOTUSED(privdata);
+    REDIS_NOTUSED(mask);
+
+    if (read(fd,&byte,1) == 1 && byte == '!') {
+        redisLog(REDIS_NOTICE,"AOF rewrite child asks to stop sending diffs.");
+        server.aof_stop_sending_diff = 1;
+        if (write(server.aof_pipe_write_ack_to_child,"!",1) != 1) {
+            /* If we can't send the ack, inform the user, but don't try again
+             * since in the other side the children will use a timeout if the
+             * kernel can't buffer our write, or, the children was
+             * terminated. */
+            redisLog(REDIS_WARNING,"Can't send ACK to AOF child: %s",
+                strerror(errno));
+        }
+    }
+    /* Remove the handler since this can be called only one time during a
+     * rewrite. */
+    aeDeleteFileEvent(server.el,server.aof_pipe_read_ack_from_child,AE_READABLE);
+}
+
+/* Create the pipes used for parent - child process IPC during rewrite.
+ * We have a data pipe used to send AOF incremental diffs to the child,
+ * and two other pipes used by the children to signal it finished with
+ * the rewrite so no more data should be written, and another for the
+ * parent to acknowledge it understood this new condition. */
+int aofCreatePipes(void) {
+    int fds[6] = {-1, -1, -1, -1, -1, -1};
+    int j;
+
+    if (pipe(fds) == -1) goto error; /* parent -> children data. */
+    if (pipe(fds+2) == -1) goto error; /* children -> parent ack. */
+    if (pipe(fds+4) == -1) goto error; /* children -> parent ack. */
+    /* Parent -> children data is non blocking. */
+    if (anetNonBlock(NULL,fds[0]) != ANET_OK) goto error;
+    if (anetNonBlock(NULL,fds[1]) != ANET_OK) goto error;
+    if (aeCreateFileEvent(server.el, fds[2], AE_READABLE, aofChildPipeReadable, NULL) == AE_ERR) goto error;
+
+    server.aof_pipe_write_data_to_child = fds[1];
+    server.aof_pipe_read_data_from_parent = fds[0];
+    server.aof_pipe_write_ack_to_parent = fds[3];
+    server.aof_pipe_read_ack_from_child = fds[2];
+    server.aof_pipe_write_ack_to_child = fds[5];
+    server.aof_pipe_read_ack_from_parent = fds[4];
+    server.aof_stop_sending_diff = 0;
+    return REDIS_OK;
+
+error:
+    redisLog(REDIS_WARNING,"Error opening /setting AOF rewrite IPC pipes: %s",
+        strerror(errno));
+    for (j = 0; j < 6; j++) if(fds[j] != -1) close(fds[j]);
+    return REDIS_ERR;
+}
+
+void aofClosePipes(void) {
+    aeDeleteFileEvent(server.el,server.aof_pipe_read_ack_from_child,AE_READABLE);
+    aeDeleteFileEvent(server.el,server.aof_pipe_write_data_to_child,AE_WRITABLE);
+    close(server.aof_pipe_write_data_to_child);
+    close(server.aof_pipe_read_data_from_parent);
+    close(server.aof_pipe_write_ack_to_parent);
+    close(server.aof_pipe_read_ack_from_child);
+    close(server.aof_pipe_write_ack_to_child);
+    close(server.aof_pipe_read_ack_from_parent);
+}
+
+/* ----------------------------------------------------------------------------
+ * AOF background rewrite
+ * ------------------------------------------------------------------------- */
+
 /* This is how rewriting of the append only file in background works:
  *
  * 1) The user calls BGREWRITEAOF
  * 2) Redis calls this function, that forks():
  *    2a) the child rewrite the append only file in a temp file.
  *    2b) the parent accumulates differences in server.aof_rewrite_buf.
@@ -1078,12 +1268,13 @@
  */
 int rewriteAppendOnlyFileBackground(void) {
     pid_t childpid;
     long long start;
 
     if (server.aof_child_pid != -1) return REDIS_ERR;
+    if (aofCreatePipes() != REDIS_OK) return REDIS_ERR;
     start = ustime();
     if ((childpid = fork()) == 0) {
         char tmpfile[256];
 
         /* Child */
         closeListeningSockets(0);
@@ -1199,13 +1390,13 @@
             goto cleanup;
         }
         latencyEndMonitor(latency);
         latencyAddSampleIfNeeded("aof-rewrite-diff-write",latency);
 
         redisLog(REDIS_NOTICE,
-            "Parent diff successfully flushed to the rewritten AOF (%lu bytes)", aofRewriteBufferSize());
+            "Residual parent diff successfully flushed to the rewritten AOF (%.2f MB)", (double) aofRewriteBufferSize() / (1024*1024));
 
         /* The only remaining thing to do is to rename the temporary file to
          * the configured file and switch the file descriptor used to do AOF
          * writes. We don't want close(2) or rename(2) calls to block the
          * server on old file deletion.
          *
@@ -1300,12 +1491,13 @@
 
         redisLog(REDIS_WARNING,
             "Background AOF rewrite terminated by signal %d", bysignal);
     }
 
 cleanup:
+    aofClosePipes();
     aofRewriteBufferReset();
     aofRemoveTempFile(server.aof_child_pid);
     server.aof_child_pid = -1;
     server.aof_rewrite_time_last = time(NULL)-server.aof_rewrite_time_start;
     server.aof_rewrite_time_start = -1;
     /* Schedule a new rewrite if we are waiting for it to switch the AOF ON. */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c	2015-04-01 22:01:44.000000000 +0800
@@ -67,35 +67,47 @@
     /* Count initial bytes not aligned to 32 bit. */
     while((unsigned long)p & 3 && count) {
         bits += bitsinbyte[*p++];
         count--;
     }
 
-    /* Count bits 16 bytes at a time */
+    /* Count bits 28 bytes at a time */
     p4 = (uint32_t*)p;
-    while(count>=16) {
-        uint32_t aux1, aux2, aux3, aux4;
+    while(count>=28) {
+        uint32_t aux1, aux2, aux3, aux4, aux5, aux6, aux7;
 
         aux1 = *p4++;
         aux2 = *p4++;
         aux3 = *p4++;
         aux4 = *p4++;
-        count -= 16;
+        aux5 = *p4++;
+        aux6 = *p4++;
+        aux7 = *p4++;
+        count -= 28;
 
         aux1 = aux1 - ((aux1 >> 1) & 0x55555555);
         aux1 = (aux1 & 0x33333333) + ((aux1 >> 2) & 0x33333333);
         aux2 = aux2 - ((aux2 >> 1) & 0x55555555);
         aux2 = (aux2 & 0x33333333) + ((aux2 >> 2) & 0x33333333);
         aux3 = aux3 - ((aux3 >> 1) & 0x55555555);
         aux3 = (aux3 & 0x33333333) + ((aux3 >> 2) & 0x33333333);
         aux4 = aux4 - ((aux4 >> 1) & 0x55555555);
         aux4 = (aux4 & 0x33333333) + ((aux4 >> 2) & 0x33333333);
-        bits += ((((aux1 + (aux1 >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24) +
-                ((((aux2 + (aux2 >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24) +
-                ((((aux3 + (aux3 >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24) +
-                ((((aux4 + (aux4 >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24);
+        aux5 = aux5 - ((aux5 >> 1) & 0x55555555);
+        aux5 = (aux5 & 0x33333333) + ((aux5 >> 2) & 0x33333333);
+        aux6 = aux6 - ((aux6 >> 1) & 0x55555555);
+        aux6 = (aux6 & 0x33333333) + ((aux6 >> 2) & 0x33333333);
+        aux7 = aux7 - ((aux7 >> 1) & 0x55555555);
+        aux7 = (aux7 & 0x33333333) + ((aux7 >> 2) & 0x33333333);
+        bits += ((((aux1 + (aux1 >> 4)) & 0x0F0F0F0F) +
+                    ((aux2 + (aux2 >> 4)) & 0x0F0F0F0F) +
+                    ((aux3 + (aux3 >> 4)) & 0x0F0F0F0F) +
+                    ((aux4 + (aux4 >> 4)) & 0x0F0F0F0F) +
+                    ((aux5 + (aux5 >> 4)) & 0x0F0F0F0F) +
+                    ((aux6 + (aux6 >> 4)) & 0x0F0F0F0F) +
+                    ((aux7 + (aux7 >> 4)) & 0x0F0F0F0F))* 0x01010101) >> 24;
     }
     /* Count the remaining bytes. */
     p = (unsigned char*)p4;
     while(count--) bits += bitsinbyte[*p++];
     return bits;
 }
@@ -258,18 +270,18 @@
 
     if ((o = lookupKeyReadOrReply(c,c->argv[1],shared.czero)) == NULL ||
         checkType(c,o,REDIS_STRING)) return;
 
     byte = bitoffset >> 3;
     bit = 7 - (bitoffset & 0x7);
-    if (o->encoding != REDIS_ENCODING_RAW) {
-        if (byte < (size_t)ll2string(llbuf,sizeof(llbuf),(long)o->ptr))
-            bitval = llbuf[byte] & (1 << bit);
-    } else {
+    if (sdsEncodedObject(o)) {
         if (byte < sdslen(o->ptr))
             bitval = ((uint8_t*)o->ptr)[byte] & (1 << bit);
+    } else {
+        if (byte < (size_t)ll2string(llbuf,sizeof(llbuf),(long)o->ptr))
+            bitval = llbuf[byte] & (1 << bit);
     }
 
     addReply(c, bitval ? shared.cone : shared.czero);
 }
 
 /* BITOP op_name target_key src_key1 src_key2 src_key3 ... src_keyN */
@@ -345,13 +357,13 @@
         unsigned long i;
 
         /* Fast path: as far as we have data for all the input bitmaps we
          * can take a fast path that performs much better than the
          * vanilla algorithm. */
         j = 0;
-        if (minlen && numkeys <= 16) {
+        if (minlen >= sizeof(unsigned long)*4 && numkeys <= 16) {
             unsigned long *lp[16];
             unsigned long *lres = (unsigned long*) res;
 
             /* Note: sds pointer is always aligned to 8 byte boundary. */
             memcpy(lp,src,sizeof(unsigned long*)*numkeys);
             memcpy(res,src[0],minlen);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: blocked.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: blocked.c.bc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: blocked.o
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/build_ir.sh /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/build_ir.sh
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/build_ir.sh	2017-09-27 22:29:16.191004413 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/build_ir.sh	2017-09-27 22:38:46.678983505 +0800
@@ -11,607 +11,617 @@
 	then
 		succ=`expr $succ + 1`;
 	fi
 	total=`expr $total + 1`;
 }
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis
-clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis
+clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.c.bc
 check
-echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.c to bc" >&2
+echo "1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis
-clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis
+clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.c.bc
 check
-echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.c to bc" >&2
+echo "2 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis
-clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis
+clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.c.bc
 check
-echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.c to bc" >&2
+echo "3 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis
-clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis
+clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c.bc
 check
-echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c to bc" >&2
+echo "4 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise
-clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise
+clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.c.bc
 check
-echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.c to bc" >&2
+echo "5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lapi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lapi.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lapi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lapi.c.bc
 check
-echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lapi.c to bc" >&2
+echo "6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lapi.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lcode.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lcode.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lcode.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lcode.c.bc
 check
-echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lcode.c to bc" >&2
+echo "7 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lcode.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldebug.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldebug.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldebug.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldebug.c.bc
 check
-echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldebug.c to bc" >&2
+echo "8 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldebug.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c.bc
 check
-echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c to bc" >&2
+echo "9 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldump.c.bc
 check
-echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldump.c to bc" >&2
+echo "10 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldump.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lfunc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lfunc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lfunc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lfunc.c.bc
 check
-echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lfunc.c to bc" >&2
+echo "11 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lfunc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lgc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lgc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lgc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lgc.c.bc
 check
-echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lgc.c to bc" >&2
+echo "12 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lgc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/llex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/llex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/llex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/llex.c.bc
 check
-echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/llex.c to bc" >&2
+echo "13 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/llex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmem.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmem.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmem.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmem.c.bc
 check
-echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmem.c to bc" >&2
+echo "14 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmem.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lobject.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lobject.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lobject.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lobject.c.bc
 check
-echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lobject.c to bc" >&2
+echo "15 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lobject.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lopcodes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lopcodes.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lopcodes.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lopcodes.c.bc
 check
-echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lopcodes.c to bc" >&2
+echo "16 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lopcodes.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lparser.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lparser.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lparser.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lparser.c.bc
 check
-echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lparser.c to bc" >&2
+echo "17 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lparser.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstate.c.bc
 check
-echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstate.c to bc" >&2
+echo "18 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstate.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstring.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstring.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstring.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstring.c.bc
 check
-echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstring.c to bc" >&2
+echo "19 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstring.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltable.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltable.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltable.c.bc
 check
-echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltable.c to bc" >&2
+echo "20 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltable.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltm.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltm.c.bc
 check
-echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltm.c to bc" >&2
+echo "21 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltm.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lundump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lundump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lundump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lundump.c.bc
 check
-echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lundump.c to bc" >&2
+echo "22 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lundump.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lvm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lvm.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lvm.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lvm.c.bc
 check
-echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lvm.c to bc" >&2
+echo "23 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lvm.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lzio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lzio.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lzio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lzio.c.bc
 check
-echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lzio.c to bc" >&2
+echo "24 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lzio.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/strbuf.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/strbuf.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/strbuf.c.bc
 check
-echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/strbuf.c to bc" >&2
+echo "25 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/strbuf.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/fpconv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/fpconv.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/fpconv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/fpconv.c.bc
 check
-echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/fpconv.c to bc" >&2
+echo "26 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/fpconv.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lauxlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lauxlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lauxlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lauxlib.c.bc
 check
-echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lauxlib.c to bc" >&2
+echo "27 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lauxlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lbaselib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lbaselib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lbaselib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lbaselib.c.bc
 check
-echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lbaselib.c to bc" >&2
+echo "28 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lbaselib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldblib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldblib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldblib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldblib.c.bc
 check
-echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldblib.c to bc" >&2
+echo "29 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldblib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liolib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liolib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liolib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liolib.c.bc
 check
-echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liolib.c to bc" >&2
+echo "30 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liolib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmathlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmathlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmathlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmathlib.c.bc
 check
-echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmathlib.c to bc" >&2
+echo "31 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmathlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loslib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loslib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loslib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loslib.c.bc
 check
-echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loslib.c to bc" >&2
+echo "32 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loslib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltablib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltablib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltablib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltablib.c.bc
 check
-echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltablib.c to bc" >&2
+echo "33 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltablib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstrlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstrlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstrlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstrlib.c.bc
 check
-echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstrlib.c to bc" >&2
+echo "34 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstrlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loadlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loadlib.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loadlib.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loadlib.c.bc
 check
-echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loadlib.c to bc" >&2
+echo "35 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loadlib.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/linit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/linit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/linit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/linit.c.bc
 check
-echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/linit.c to bc" >&2
+echo "36 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/linit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cjson.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cjson.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cjson.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cjson.c.bc
 check
-echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cjson.c to bc" >&2
+echo "37 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cjson.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c.bc
 check
-echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c to bc" >&2
+echo "38 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c.bc
 check
-echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c to bc" >&2
+echo "39 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_bit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_bit.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_bit.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_bit.c.bc
 check
-echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_bit.c to bc" >&2
+echo "40 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_bit.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua.c.bc
 check
-echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua.c to bc" >&2
+echo "41 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac.c.bc
 check
-echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac.c to bc" >&2
+echo "42 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src
-clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/print.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/print.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src
+clang -g -emit-llvm -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/print.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/print.c.bc
 check
-echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/print.c to bc" >&2
+echo "43 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/print.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c.bc
 check
-echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c to bc" >&2
+echo "44 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -c /tmp/cgtgepUg/dummy.c -o /tmp/cgtgepUg/dummy.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -c /tmp/cgi2YSv8/dummy.c -o /tmp/cgi2YSv8/dummy.c.bc
 check
-echo "45 /tmp/cgtgepUg/dummy.c to bc" >&2
+echo "45 /tmp/cgi2YSv8/dummy.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c.bc
 check
-echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c to bc" >&2
+echo "46 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c.bc
 check
-echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c to bc" >&2
+echo "47 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c.bc
 check
-echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c to bc" >&2
+echo "48 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c.bc
 check
-echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c to bc" >&2
+echo "49 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c.bc
 check
-echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c to bc" >&2
+echo "50 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c.bc
 check
-echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c to bc" >&2
+echo "51 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c.bc
 check
-echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c to bc" >&2
+echo "52 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c.bc
 check
-echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c to bc" >&2
+echo "53 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c.bc
 check
-echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c to bc" >&2
+echo "54 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c.bc
 check
-echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c to bc" >&2
+echo "55 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c.bc
 check
-echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c to bc" >&2
+echo "56 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c.bc
 check
-echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c to bc" >&2
+echo "57 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c.bc
 check
-echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c to bc" >&2
+echo "58 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c.bc
 check
-echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c to bc" >&2
+echo "59 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c.bc
 check
-echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c to bc" >&2
+echo "60 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c.bc
 check
-echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c to bc" >&2
+echo "61 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c.bc
 check
-echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c to bc" >&2
+echo "62 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c.bc
 check
-echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c to bc" >&2
+echo "63 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c.bc
 check
-echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c to bc" >&2
+echo "64 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c.bc
 check
-echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c to bc" >&2
+echo "65 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c.bc
 check
-echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c to bc" >&2
+echo "66 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc
-clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc
+clang -g -emit-llvm -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c.bc
 check
-echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c to bc" >&2
+echo "67 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.c.bc
 check
-echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.c to bc" >&2
+echo "68 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.c.bc
 check
-echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.c to bc" >&2
+echo "69 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c.bc
 check
-echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c to bc" >&2
+echo "70 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c.bc
 check
-echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c to bc" >&2
+echo "71 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c.bc
 check
-echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c to bc" >&2
+echo "72 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c.bc
 check
-echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c to bc" >&2
+echo "73 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.c.bc
 check
-echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.c to bc" >&2
+echo "74 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.c.bc
 check
-echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.c to bc" >&2
+echo "75 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.c.bc
 check
-echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.c to bc" >&2
+echo "76 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.c.bc
 check
-echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.c to bc" >&2
+echo "77 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.c.bc
 check
-echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.c to bc" >&2
+echo "78 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c.bc
 check
-echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c to bc" >&2
+echo "79 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.c.bc
 check
-echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.c to bc" >&2
+echo "80 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.c.bc
 check
-echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.c to bc" >&2
+echo "81 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c.bc
 check
-echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c to bc" >&2
+echo "82 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c.bc
 check
-echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c to bc" >&2
+echo "83 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c.bc
 check
-echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c to bc" >&2
+echo "84 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c.bc
 check
-echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c to bc" >&2
+echo "85 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c.bc
 check
-echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c to bc" >&2
+echo "86 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c.bc
 check
-echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c to bc" >&2
+echo "87 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c.bc
 check
-echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c to bc" >&2
+echo "88 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c.bc
 check
-echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c to bc" >&2
+echo "89 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c.bc
 check
-echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c to bc" >&2
+echo "90 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c.bc
 check
-echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c to bc" >&2
+echo "91 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c.bc
 check
-echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c to bc" >&2
+echo "92 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c.bc
 check
-echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c to bc" >&2
+echo "93 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c.bc
 check
-echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c to bc" >&2
+echo "94 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c.bc
 check
-echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c to bc" >&2
+echo "95 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.c.bc
 check
-echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.c to bc" >&2
+echo "96 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c.bc
 check
-echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c to bc" >&2
+echo "97 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c.bc
 check
-echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c to bc" >&2
+echo "98 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.c.bc
 check
-echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.c to bc" >&2
+echo "99 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.c.bc
 check
-echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.c to bc" >&2
+echo "100 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/migrate.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/migrate.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/cluster.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/cluster.c.bc
 check
-echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/migrate.c to bc" >&2
+echo "101 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/cluster.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc16.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc16.c.bc
 check
-echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.c to bc" >&2
+echo "102 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc16.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.c.bc
 check
-echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c to bc" >&2
+echo "103 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c.bc
 check
-echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c to bc" >&2
+echo "104 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c.bc
 check
-echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.c to bc" >&2
+echo "105 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.c.bc
 check
-echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.c to bc" >&2
+echo "106 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.c.bc
 check
-echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.c to bc" >&2
+echo "107 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.c.bc
 check
-echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.c to bc" >&2
+echo "108 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.c.bc
 check
-echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.c to bc" >&2
+echo "109 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.c.bc
 check
-echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c to bc" >&2
+echo "110 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c.bc
 check
-echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c to bc" >&2
+echo "111 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c.bc
 check
-echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.c to bc" >&2
+echo "112 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.c.bc
 check
-echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.c to bc" >&2
+echo "113 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.c.bc
 check
-echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.c to bc" >&2
+echo "114 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/blocked.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/blocked.c.bc
 check
-echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c to bc" >&2
+echo "115 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/blocked.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.c.bc
 check
-echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.c to bc" >&2
+echo "116 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c.bc
 check
-echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c to bc" >&2
+echo "117 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.c.bc
 check
-echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.c to bc" >&2
+echo "118 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c.bc
 check
-echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.c to bc" >&2
+echo "119 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c to bc" >&2
 
-cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src
-clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.c.bc
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.c.bc
 check
-echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.c to bc" >&2
+echo "120 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.c to bc" >&2
+
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.c.bc
+check
+echo "121 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.c to bc" >&2
+
+cd /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src
+clang -g -emit-llvm -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.c -o /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.c.bc
+check
+echo "122 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.c to bc" >&2
 echo "Total ir $total" >&2
 echo "Succ ir $succ" >&2
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: cluster.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: cluster.c.bc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: cluster.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: cluster.o
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/compile_commands.json /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/compile_commands.json
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/compile_commands.json	2017-09-27 22:29:16.183004413 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/compile_commands.json	2017-09-27 22:38:46.670983505 +0800
@@ -1,1201 +1,1213 @@
 [
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis",
   "command": "cc -std=c99 -pedantic -c -O3 -fPIC -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb net.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis",
   "command": "cc -std=c99 -pedantic -c -O3 -fPIC -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb hiredis.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis",
   "command": "cc -std=c99 -pedantic -c -O3 -fPIC -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb sds.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis",
   "command": "cc -std=c99 -pedantic -c -O3 -fPIC -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb async.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise",
   "command": "cc -Wall -Os -g -c linenoise.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lapi.o lapi.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lapi.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lapi.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lcode.o lcode.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lcode.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lcode.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ldebug.o ldebug.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldebug.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldebug.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ldo.o ldo.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ldump.o ldump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldump.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lfunc.o lfunc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lfunc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lfunc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lgc.o lgc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lgc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lgc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o llex.o llex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/llex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/llex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lmem.o lmem.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmem.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmem.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lobject.o lobject.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lobject.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lobject.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lopcodes.o lopcodes.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lopcodes.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lopcodes.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lparser.o lparser.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lparser.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lparser.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lstate.o lstate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstate.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstate.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lstring.o lstring.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstring.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstring.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ltable.o ltable.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltable.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltable.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ltm.o ltm.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltm.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltm.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lundump.o lundump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lundump.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lundump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lvm.o lvm.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lvm.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lvm.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lzio.o lzio.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lzio.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lzio.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o strbuf.o strbuf.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/strbuf.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/strbuf.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o fpconv.o fpconv.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/fpconv.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/fpconv.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lauxlib.o lauxlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lauxlib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lauxlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lbaselib.o lbaselib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lbaselib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lbaselib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ldblib.o ldblib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldblib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldblib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o liolib.o liolib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liolib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liolib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lmathlib.o lmathlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmathlib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmathlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o loslib.o loslib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loslib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loslib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o ltablib.o ltablib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltablib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltablib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lstrlib.o lstrlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstrlib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstrlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o loadlib.o loadlib.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loadlib.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loadlib.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o linit.o linit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/linit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/linit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lua_cjson.o lua_cjson.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cjson.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cjson.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lua_struct.o lua_struct.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lua_cmsgpack.o lua_cmsgpack.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lua_bit.o lua_bit.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_bit.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_bit.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o lua.o lua.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o luac.o luac.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src",
   "command": "cc -O2 -Wall -DLUA_ANSI -DENABLE_CJSON_GLOBAL -c -o print.o print.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/print.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/print.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -g conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
-  "command": "cc -c -o /tmp/cgtgepUg/dummy.o /tmp/cgtgepUg/dummy.c",
-  "file": "/tmp/cgtgepUg/dummy.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
+  "command": "cc -c -o /tmp/cgi2YSv8/dummy.o /tmp/cgi2YSv8/dummy.c",
+  "file": "/tmp/cgi2YSv8/dummy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
-  "command": "cc -E /tmp/cgtgepUg/dummy.c",
-  "file": "/tmp/cgtgepUg/dummy.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
+  "command": "cc -E /tmp/cgi2YSv8/dummy.c",
+  "file": "/tmp/cgi2YSv8/dummy.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -Werror -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -Werror -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -E -D_GNU_SOURCE conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -o conftest -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c -lpthread",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -c -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -fvisibility=hidden -D_GNU_SOURCE -D_REENTRANT conftest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/jemalloc.o src/jemalloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/jemalloc.o -o src/jemalloc.d src/jemalloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/arena.o src/arena.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/arena.o -o src/arena.d src/arena.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/atomic.o src/atomic.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/atomic.o -o src/atomic.d src/atomic.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/base.o src/base.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/base.o -o src/base.d src/base.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/bitmap.o src/bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/bitmap.o -o src/bitmap.d src/bitmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/chunk.o src/chunk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/chunk.o -o src/chunk.d src/chunk.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/chunk_dss.o src/chunk_dss.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/chunk_dss.o -o src/chunk_dss.d src/chunk_dss.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/chunk_mmap.o src/chunk_mmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/chunk_mmap.o -o src/chunk_mmap.d src/chunk_mmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/ckh.o src/ckh.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/ckh.o -o src/ckh.d src/ckh.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/ctl.o src/ctl.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/ctl.o -o src/ctl.d src/ctl.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/extent.o src/extent.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/extent.o -o src/extent.d src/extent.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/hash.o src/hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/hash.o -o src/hash.d src/hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/huge.o src/huge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/huge.o -o src/huge.d src/huge.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/mb.o src/mb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/mb.o -o src/mb.d src/mb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/mutex.o src/mutex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/mutex.o -o src/mutex.d src/mutex.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/prof.o src/prof.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/prof.o -o src/prof.d src/prof.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/quarantine.o src/quarantine.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/quarantine.o -o src/quarantine.d src/quarantine.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/rtree.o src/rtree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/rtree.o -o src/rtree.d src/rtree.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/stats.o src/stats.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/stats.o -o src/stats.d src/stats.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/tcache.o src/tcache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/tcache.o -o src/tcache.d src/tcache.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/util.o src/util.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/util.o -o src/util.d src/util.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops -c -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -o src/tsd.o src/tsd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc",
   "command": "gcc -MM -D_GNU_SOURCE -D_REENTRANT -Iinclude -Iinclude -MT src/tsd.o -o src/tsd.d src/tsd.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c adlist.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c ae.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c anet.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c dict.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c redis.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c sds.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c zmalloc.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c lzf_c.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c lzf_d.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c pqsort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c zipmap.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c sha1.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c ziplist.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c release.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c networking.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c util.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c object.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c db.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c replication.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c rdb.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c t_string.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c t_list.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c t_set.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c t_zset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c t_hash.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c config.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c aof.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c pubsub.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c multi.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c debug.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c sort.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c intset.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c syncio.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
-  "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c migrate.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/migrate.c"
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
+  "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c cluster.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/cluster.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
+  "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c crc16.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc16.c"
+}
+,
+{
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c endianconv.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c slowlog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c scripting.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c bio.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c rio.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c rand.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c memtest.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c crc64.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c bitops.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c sentinel.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c notify.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c setproctitle.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.c"
+}
+,
+{
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
+  "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c blocked.c",
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/blocked.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c hyperloglog.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c latency.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c sparkline.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c redis-cli.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c redis-benchmark.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c redis-check-dump.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.c"
 }
 ,
 {
-  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src",
+  "directory": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src",
   "command": "cc -std=c99 -pedantic -Wall -W -O2 -g -ggdb -I../deps/hiredis -I../deps/linenoise -I../deps/lua/src -DUSE_JEMALLOC -I../deps/jemalloc/include -c redis-check-aof.c",
-  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.c"
+  "file": "/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.c"
 }
 ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/compiled_files.def /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/compiled_files.def
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/compiled_files.def	2017-09-27 22:29:16.191004413 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/compiled_files.def	2017-09-27 22:38:46.678983505 +0800
@@ -1,120 +1,122 @@
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/net.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/hiredis.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/sds.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/hiredis/async.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/linenoise/linenoise.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lapi.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lcode.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldebug.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldo.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lfunc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lgc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/llex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmem.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lobject.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lopcodes.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lparser.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstring.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltable.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltm.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lundump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lvm.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lzio.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/strbuf.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/fpconv.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lauxlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lbaselib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ldblib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/liolib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lmathlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loslib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/ltablib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lstrlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/loadlib.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/linit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cjson.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_struct.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_cmsgpack.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua_bit.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/lua.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/luac.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/lua/src/print.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/conftest.c
-/tmp/cgtgepUg/dummy.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/jemalloc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/arena.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/atomic.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/base.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/bitmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_dss.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/chunk_mmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ckh.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/ctl.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/extent.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/hash.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/huge.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mb.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/mutex.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/prof.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/quarantine.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/rtree.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/stats.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tcache.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/util.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/deps/jemalloc/src/tsd.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/adlist.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ae.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/anet.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/aof.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/migrate.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bio.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/bitops.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.c
-/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/net.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/hiredis.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/sds.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/hiredis/async.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/linenoise/linenoise.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lapi.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lcode.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldebug.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldo.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lfunc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lgc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/llex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmem.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lobject.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lopcodes.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lparser.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstate.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstring.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltable.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltm.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lundump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lvm.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lzio.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/strbuf.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/fpconv.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lauxlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lbaselib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ldblib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/liolib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lmathlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loslib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/ltablib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lstrlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/loadlib.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/linit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cjson.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_struct.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_cmsgpack.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua_bit.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/lua.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/luac.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/lua/src/print.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/conftest.c
+/tmp/cgi2YSv8/dummy.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/jemalloc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/arena.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/atomic.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/base.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/bitmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_dss.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/chunk_mmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ckh.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/ctl.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/extent.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/hash.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/huge.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mb.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/mutex.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/prof.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/quarantine.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/rtree.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/stats.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tcache.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/util.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/deps/jemalloc/src/tsd.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/adlist.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ae.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/anet.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/aof.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/cluster.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc16.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bio.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/bitops.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/blocked.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.c
+/usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c	2015-04-01 22:01:44.000000000 +0800
@@ -26,12 +26,13 @@
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
 #include "redis.h"
+#include "cluster.h"
 
 #include <fcntl.h>
 #include <sys/stat.h>
 
 static struct {
     const char     *name;
@@ -78,12 +79,13 @@
     server.saveparamslen = 0;
 }
 
 void loadServerConfigFromString(char *config) {
     char *err = NULL;
     int linenum = 0, totlines, i;
+    int slaveof_linenum = 0;
     sds *lines;
 
     lines = sdssplitlen(config,strlen(config),"\n",1,&totlines);
 
     for (i = 0; i < totlines; i++) {
         sds *argv;
@@ -245,12 +247,13 @@
             server.maxmemory_samples = atoi(argv[1]);
             if (server.maxmemory_samples <= 0) {
                 err = "maxmemory-samples must be 1 or greater";
                 goto loaderr;
             }
         } else if (!strcasecmp(argv[0],"slaveof") && argc == 3) {
+            slaveof_linenum = linenum;
             server.masterhost = sdsnew(argv[1]);
             server.masterport = atoi(argv[2]);
             server.repl_state = REDIS_REPL_CONNECT;
         } else if (!strcasecmp(argv[0],"repl-ping-slave-period") && argc == 2) {
             server.repl_ping_slave_period = atoi(argv[1]);
             if (server.repl_ping_slave_period <= 0) {
@@ -426,12 +429,47 @@
                 retval = dictAdd(server.commands, copy, cmd);
                 if (retval != DICT_OK) {
                     sdsfree(copy);
                     err = "Target command name already exists"; goto loaderr;
                 }
             }
+        } else if (!strcasecmp(argv[0],"cluster-enabled") && argc == 2) {
+            if ((server.cluster_enabled = yesnotoi(argv[1])) == -1) {
+                err = "argument must be 'yes' or 'no'"; goto loaderr;
+            }
+        } else if (!strcasecmp(argv[0],"cluster-config-file") && argc == 2) {
+            zfree(server.cluster_configfile);
+            server.cluster_configfile = zstrdup(argv[1]);
+        } else if (!strcasecmp(argv[0],"cluster-require-full-coverage") &&
+                    argc == 2)
+        {
+            if ((server.cluster_require_full_coverage = yesnotoi(argv[1])) == -1)
+            {
+                err = "argument must be 'yes' or 'no'"; goto loaderr;
+            }
+        } else if (!strcasecmp(argv[0],"cluster-node-timeout") && argc == 2) {
+            server.cluster_node_timeout = strtoll(argv[1],NULL,10);
+            if (server.cluster_node_timeout <= 0) {
+                err = "cluster node timeout must be 1 or greater"; goto loaderr;
+            }
+        } else if (!strcasecmp(argv[0],"cluster-migration-barrier")
+                   && argc == 2)
+        {
+            server.cluster_migration_barrier = atoi(argv[1]);
+            if (server.cluster_migration_barrier < 0) {
+                err = "cluster migration barrier must zero or positive";
+                goto loaderr;
+            }
+        } else if (!strcasecmp(argv[0],"cluster-slave-validity-factor")
+                   && argc == 2)
+        {
+            server.cluster_slave_validity_factor = atoi(argv[1]);
+            if (server.cluster_slave_validity_factor < 0) {
+                err = "cluster slave validity factor must be zero or positive";
+                goto loaderr;
+            }
         } else if (!strcasecmp(argv[0],"lua-time-limit") && argc == 2) {
             server.lua_time_limit = strtoll(argv[1],NULL,10);
         } else if (!strcasecmp(argv[0],"slowlog-log-slower-than") &&
                    argc == 2)
         {
             server.slowlog_log_slower_than = strtoll(argv[1],NULL,10);
@@ -504,12 +542,21 @@
             }
         } else {
             err = "Bad directive or wrong number of arguments"; goto loaderr;
         }
         sdsfreesplitres(argv,argc);
     }
+
+    /* Sanity checks. */
+    if (server.cluster_enabled && server.masterhost) {
+        linenum = slaveof_linenum;
+        i = linenum-1;
+        err = "slaveof directive not allowed in cluster mode";
+        goto loaderr;
+    }
+
     sdsfreesplitres(lines,totlines);
     return;
 
 loaderr:
     fprintf(stderr, "\n*** FATAL CONFIG FILE ERROR ***\n");
     fprintf(stderr, "Reading the configuration file, at line %d\n", linenum);
@@ -559,14 +606,15 @@
  * CONFIG SET implementation
  *----------------------------------------------------------------------------*/
 
 void configSetCommand(redisClient *c) {
     robj *o;
     long long ll;
-    redisAssertWithInfo(c,c->argv[2],c->argv[2]->encoding == REDIS_ENCODING_RAW);
-    redisAssertWithInfo(c,c->argv[2],c->argv[3]->encoding == REDIS_ENCODING_RAW);
+    int err;
+    redisAssertWithInfo(c,c->argv[2],sdsEncodedObject(c->argv[2]));
+    redisAssertWithInfo(c,c->argv[3],sdsEncodedObject(c->argv[3]));
     o = c->argv[3];
 
     if (!strcasecmp(c->argv[2]->ptr,"dbfilename")) {
         if (!pathIsBaseName(o->ptr)) {
             addReplyError(c, "dbfilename can't be a path, just a filename");
             return;
@@ -578,14 +626,14 @@
         zfree(server.requirepass);
         server.requirepass = ((char*)o->ptr)[0] ? zstrdup(o->ptr) : NULL;
     } else if (!strcasecmp(c->argv[2]->ptr,"masterauth")) {
         zfree(server.masterauth);
         server.masterauth = ((char*)o->ptr)[0] ? zstrdup(o->ptr) : NULL;
     } else if (!strcasecmp(c->argv[2]->ptr,"maxmemory")) {
-        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||
-            ll < 0) goto badfmt;
+        ll = memtoll(o->ptr,&err);
+        if (err || ll < 0) goto badfmt;
         server.maxmemory = ll;
         if (server.maxmemory) {
             if (server.maxmemory < zmalloc_used_memory()) {
                 redisLog(REDIS_WARNING,"WARNING: the new maxmemory value set via CONFIG SET is smaller than the current memory usage. This will result in keys eviction and/or inability to accept new write commands depending on the maxmemory-policy.");
             }
             freeMemoryIfNeeded();
@@ -806,23 +854,22 @@
         }
 
         /* Sanity check of single arguments, so that we either refuse the
          * whole configuration string or accept it all, even if a single
          * error in a single client class is present. */
         for (j = 0; j < vlen; j++) {
-            char *eptr;
             long val;
 
             if ((j % 4) == 0) {
                 if (getClientTypeByName(v[j]) == -1) {
                     sdsfreesplitres(v,vlen);
                     goto badfmt;
                 }
             } else {
-                val = strtoll(v[j], &eptr, 10);
-                if (eptr[0] != '\0' || val < 0) {
+                val = memtoll(v[j], &err);
+                if (err || val < 0) {
                     sdsfreesplitres(v,vlen);
                     goto badfmt;
                 }
             }
         }
         /* Finally set the new config */
@@ -850,13 +897,14 @@
         if (getLongLongFromObject(o,&ll) == REDIS_ERR || ll <= 0) goto badfmt;
         server.repl_ping_slave_period = ll;
     } else if (!strcasecmp(c->argv[2]->ptr,"repl-timeout")) {
         if (getLongLongFromObject(o,&ll) == REDIS_ERR || ll <= 0) goto badfmt;
         server.repl_timeout = ll;
     } else if (!strcasecmp(c->argv[2]->ptr,"repl-backlog-size")) {
-        if (getLongLongFromObject(o,&ll) == REDIS_ERR || ll <= 0) goto badfmt;
+        ll = memtoll(o->ptr,&err);
+        if (err || ll < 0) goto badfmt;
         resizeReplicationBacklog(ll);
     } else if (!strcasecmp(c->argv[2]->ptr,"repl-backlog-ttl")) {
         if (getLongLongFromObject(o,&ll) == REDIS_ERR || ll < 0) goto badfmt;
         server.repl_backlog_time_limit = ll;
     } else if (!strcasecmp(c->argv[2]->ptr,"watchdog-period")) {
         if (getLongLongFromObject(o,&ll) == REDIS_ERR || ll < 0) goto badfmt;
@@ -899,12 +947,29 @@
         refreshGoodSlavesCount();
     } else if (!strcasecmp(c->argv[2]->ptr,"min-slaves-max-lag")) {
         if (getLongLongFromObject(o,&ll) == REDIS_ERR ||
             ll < 0) goto badfmt;
         server.repl_min_slaves_max_lag = ll;
         refreshGoodSlavesCount();
+    } else if (!strcasecmp(c->argv[2]->ptr,"cluster-require-full-coverage")) {
+        int yn = yesnotoi(o->ptr);
+
+        if (yn == -1) goto badfmt;
+        server.cluster_require_full_coverage = yn;
+    } else if (!strcasecmp(c->argv[2]->ptr,"cluster-node-timeout")) {
+        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||
+            ll <= 0) goto badfmt;
+        server.cluster_node_timeout = ll;
+    } else if (!strcasecmp(c->argv[2]->ptr,"cluster-migration-barrier")) {
+        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||
+            ll < 0) goto badfmt;
+        server.cluster_migration_barrier = ll;
+    } else if (!strcasecmp(c->argv[2]->ptr,"cluster-slave-validity-factor")) {
+        if (getLongLongFromObject(o,&ll) == REDIS_ERR ||
+            ll < 0) goto badfmt;
+        server.cluster_slave_validity_factor = ll;
     } else {
         addReplyErrorFormat(c,"Unsupported CONFIG parameter: %s",
             (char*)c->argv[2]->ptr);
         return;
     }
     addReply(c,shared.ok);
@@ -948,13 +1013,13 @@
 void configGetCommand(redisClient *c) {
     robj *o = c->argv[2];
     void *replylen = addDeferredMultiBulkLength(c);
     char *pattern = o->ptr;
     char buf[128];
     int matches = 0;
-    redisAssertWithInfo(c,o,o->encoding == REDIS_ENCODING_RAW);
+    redisAssertWithInfo(c,o,sdsEncodedObject(o));
 
     /* String values */
     config_get_string_field("dbfilename",server.rdb_filename);
     config_get_string_field("requirepass",server.requirepass);
     config_get_string_field("masterauth",server.masterauth);
     config_get_string_field("unixsocket",server.unixsocket);
@@ -1003,15 +1068,20 @@
     config_get_numerical_field("maxclients",server.maxclients);
     config_get_numerical_field("watchdog-period",server.watchdog_period);
     config_get_numerical_field("slave-priority",server.slave_priority);
     config_get_numerical_field("min-slaves-to-write",server.repl_min_slaves_to_write);
     config_get_numerical_field("min-slaves-max-lag",server.repl_min_slaves_max_lag);
     config_get_numerical_field("hz",server.hz);
+    config_get_numerical_field("cluster-node-timeout",server.cluster_node_timeout);
+    config_get_numerical_field("cluster-migration-barrier",server.cluster_migration_barrier);
+    config_get_numerical_field("cluster-slave-validity-factor",server.cluster_slave_validity_factor);
     config_get_numerical_field("repl-diskless-sync-delay",server.repl_diskless_sync_delay);
 
     /* Bool (yes/no) values */
+    config_get_bool_field("cluster-require-full-coverage",
+            server.cluster_require_full_coverage);
     config_get_bool_field("no-appendfsync-on-rewrite",
             server.aof_no_fsync_on_rewrite);
     config_get_bool_field("slave-serve-stale-data",
             server.repl_serve_stale_data);
     config_get_bool_field("slave-read-only",
             server.repl_slave_ro);
@@ -1499,14 +1569,15 @@
 /* Rewrite the slaveof option. */
 void rewriteConfigSlaveofOption(struct rewriteConfigState *state) {
     char *option = "slaveof";
     sds line;
 
     /* If this is a master, we want all the slaveof config options
-     * in the file to be removed. */
-    if (server.masterhost == NULL) {
+     * in the file to be removed. Note that if this is a cluster instance
+     * we don't want a slaveof directive inside redis.conf. */
+    if (server.cluster_enabled || server.masterhost == NULL) {
         rewriteConfigMarkAsProcessed(state,"slaveof");
         return;
     }
     line = sdscatprintf(sdsempty(),"%s %s %d", option,
         server.masterhost, server.masterport);
     rewriteConfigRewriteLine(state,option,line,1);
@@ -1774,12 +1845,18 @@
         "no", AOF_FSYNC_NO,
         NULL, REDIS_DEFAULT_AOF_FSYNC);
     rewriteConfigYesNoOption(state,"no-appendfsync-on-rewrite",server.aof_no_fsync_on_rewrite,REDIS_DEFAULT_AOF_NO_FSYNC_ON_REWRITE);
     rewriteConfigNumericalOption(state,"auto-aof-rewrite-percentage",server.aof_rewrite_perc,REDIS_AOF_REWRITE_PERC);
     rewriteConfigBytesOption(state,"auto-aof-rewrite-min-size",server.aof_rewrite_min_size,REDIS_AOF_REWRITE_MIN_SIZE);
     rewriteConfigNumericalOption(state,"lua-time-limit",server.lua_time_limit,REDIS_LUA_TIME_LIMIT);
+    rewriteConfigYesNoOption(state,"cluster-enabled",server.cluster_enabled,0);
+    rewriteConfigStringOption(state,"cluster-config-file",server.cluster_configfile,REDIS_DEFAULT_CLUSTER_CONFIG_FILE);
+    rewriteConfigYesNoOption(state,"cluster-require-full-coverage",server.cluster_require_full_coverage,REDIS_CLUSTER_DEFAULT_REQUIRE_FULL_COVERAGE);
+    rewriteConfigNumericalOption(state,"cluster-node-timeout",server.cluster_node_timeout,REDIS_CLUSTER_DEFAULT_NODE_TIMEOUT);
+    rewriteConfigNumericalOption(state,"cluster-migration-barrier",server.cluster_migration_barrier,REDIS_CLUSTER_DEFAULT_MIGRATION_BARRIER);
+    rewriteConfigNumericalOption(state,"cluster-slave-validity-factor",server.cluster_slave_validity_factor,REDIS_CLUSTER_DEFAULT_SLAVE_VALIDITY);
     rewriteConfigNumericalOption(state,"slowlog-log-slower-than",server.slowlog_log_slower_than,REDIS_SLOWLOG_LOG_SLOWER_THAN);
     rewriteConfigNumericalOption(state,"latency-monitor-threshold",server.latency_monitor_threshold,REDIS_DEFAULT_LATENCY_MONITOR_THRESHOLD);
     rewriteConfigNumericalOption(state,"slowlog-max-len",server.slowlog_max_len,REDIS_SLOWLOG_MAX_LEN);
     rewriteConfigNotifykeyspaceeventsOption(state);
     rewriteConfigNumericalOption(state,"hash-max-ziplist-entries",server.hash_max_ziplist_entries,REDIS_HASH_MAX_ZIPLIST_ENTRIES);
     rewriteConfigNumericalOption(state,"hash-max-ziplist-value",server.hash_max_ziplist_value,REDIS_HASH_MAX_ZIPLIST_VALUE);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.h	2015-04-01 22:01:44.000000000 +0800
@@ -31,12 +31,17 @@
 #define __CONFIG_H
 
 #ifdef __APPLE__
 #include <AvailabilityMacros.h>
 #endif
 
+#ifdef __linux__
+#include <linux/version.h>
+#include <features.h>
+#endif
+
 /* Define redis_fstat to fstat or fstat64() */
 #if defined(__APPLE__) && !defined(MAC_OS_X_VERSION_10_6)
 #define redis_fstat fstat64
 #define redis_stat stat64
 #else
 #define redis_fstat fstat
@@ -54,13 +59,13 @@
 /* Test for task_info() */
 #if defined(__APPLE__)
 #define HAVE_TASKINFO 1
 #endif
 
 /* Test for backtrace() */
-#if defined(__APPLE__) || defined(__linux__)
+#if defined(__APPLE__) || (defined(__linux__) && defined(__GLIBC__))
 #define HAVE_BACKTRACE 1
 #endif
 
 /* Test for polling API */
 #ifdef __linux__
 #define HAVE_EPOLL 1
@@ -84,14 +89,12 @@
 #define aof_fsync fsync
 #endif
 
 /* Define rdb_fsync_range to sync_file_range() on Linux, otherwise we use
  * the plain fsync() call. */
 #ifdef __linux__
-#include <linux/version.h>
-#include <features.h>
 #if defined(__GLIBC__) && defined(__GLIBC_PREREQ)
 #if (LINUX_VERSION_CODE >= 0x020611 && __GLIBC_PREREQ(2, 6))
 #define HAVE_SYNC_FILE_RANGE 1
 #endif
 #else
 #if (LINUX_VERSION_CODE >= 0x020611)
@@ -110,13 +113,13 @@
  * BSD systems have support for it, we provide an implementation for
  * Linux and osx. */
 #if (defined __NetBSD__ || defined __FreeBSD__ || defined __OpenBSD__)
 #define USE_SETPROCTITLE
 #endif
 
-#if (defined __linux || defined __APPLE__)
+#if ((defined __linux && defined(__GLIBC__)) || defined __APPLE__)
 #define USE_SETPROCTITLE
 #define INIT_SETPROCTITLE_REPLACEMENT
 void spt_init(int argc, char *argv[]);
 void setproctitle(const char *fmt, ...);
 #endif
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/config.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/config.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: crc16.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: crc16.c.bc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: crc16.o
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/crc64.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/crc64.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c	2015-04-01 22:01:44.000000000 +0800
@@ -25,18 +25,20 @@
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
 #include "redis.h"
+#include "cluster.h"
 
 #include <signal.h>
 #include <ctype.h>
 
-void SlotToKeyAdd(robj *key);
-void SlotToKeyDel(robj *key);
+void slotToKeyAdd(robj *key);
+void slotToKeyDel(robj *key);
+void slotToKeyFlush(void);
 
 /*-----------------------------------------------------------------------------
  * C-level DB API
  *----------------------------------------------------------------------------*/
 
 robj *lookupKey(redisDb *db, robj *key) {
@@ -45,13 +47,13 @@
         robj *val = dictGetVal(de);
 
         /* Update the access time for the ageing algorithm.
          * Don't do it if we have a saving child, as this will trigger
          * a copy on write madness. */
         if (server.rdb_child_pid == -1 && server.aof_child_pid == -1)
-            val->lru = server.lruclock;
+            val->lru = LRU_CLOCK();
         return val;
     } else {
         return NULL;
     }
 }
 
@@ -91,21 +93,22 @@
 void dbAdd(redisDb *db, robj *key, robj *val) {
     sds copy = sdsdup(key->ptr);
     int retval = dictAdd(db->dict, copy, val);
 
     redisAssertWithInfo(NULL,key,retval == REDIS_OK);
     if (val->type == REDIS_LIST) signalListAsReady(db, key);
+    if (server.cluster_enabled) slotToKeyAdd(key);
  }
 
 /* Overwrite an existing key with a new value. Incrementing the reference
  * count of the new value is up to the caller.
  * This function does not modify the expire time of the existing key.
  *
  * The program is aborted if the key was not already present. */
 void dbOverwrite(redisDb *db, robj *key, robj *val) {
-    struct dictEntry *de = dictFind(db->dict,key->ptr);
+    dictEntry *de = dictFind(db->dict,key->ptr);
 
     redisAssertWithInfo(NULL,key,de != NULL);
     dictReplace(db->dict, key->ptr, val);
 }
 
 /* High level Set operation. This function can be used in order to set
@@ -131,13 +134,13 @@
 
 /* Return a random key, in form of a Redis object.
  * If there are no keys, NULL is returned.
  *
  * The function makes sure to return keys not already expired. */
 robj *dbRandomKey(redisDb *db) {
-    struct dictEntry *de;
+    dictEntry *de;
 
     while(1) {
         sds key;
         robj *keyobj;
 
         de = dictGetRandomKey(db->dict);
@@ -158,12 +161,13 @@
 /* Delete a key, value, and associated expiration entry if any, from the DB */
 int dbDelete(redisDb *db, robj *key) {
     /* Deleting an entry from the expires dict will not free the sds of
      * the key, because it is shared with the main dictionary. */
     if (dictSize(db->expires) > 0) dictDelete(db->expires,key->ptr);
     if (dictDelete(db->dict,key->ptr) == DICT_OK) {
+        if (server.cluster_enabled) slotToKeyDel(key);
         return 1;
     } else {
         return 0;
     }
 }
 
@@ -195,13 +199,13 @@
  * using an sdscat() call to append some data, or anything else.
  */
 robj *dbUnshareStringValue(redisDb *db, robj *key, robj *o) {
     redisAssert(o->type == REDIS_STRING);
     if (o->refcount != 1 || o->encoding != REDIS_ENCODING_RAW) {
         robj *decoded = getDecodedObject(o);
-        o = createStringObject(decoded->ptr, sdslen(decoded->ptr));
+        o = createRawStringObject(decoded->ptr, sdslen(decoded->ptr));
         decrRefCount(decoded);
         dbOverwrite(db,key,o);
     }
     return o;
 }
 
@@ -211,12 +215,13 @@
 
     for (j = 0; j < server.dbnum; j++) {
         removed += dictSize(server.db[j].dict);
         dictEmpty(server.db[j].dict,callback);
         dictEmpty(server.db[j].expires,callback);
     }
+    if (server.cluster_enabled) slotToKeyFlush();
     return removed;
 }
 
 int selectDb(redisClient *c, int id) {
     if (id < 0 || id >= server.dbnum)
         return REDIS_ERR;
@@ -247,12 +252,13 @@
 
 void flushdbCommand(redisClient *c) {
     server.dirty += dictSize(c->db->dict);
     signalFlushedDb(c->db->id);
     dictEmpty(c->db->dict,NULL);
     dictEmpty(c->db->expires,NULL);
+    if (server.cluster_enabled) slotToKeyFlush();
     addReply(c,shared.ok);
 }
 
 void flushallCommand(redisClient *c) {
     signalFlushedDb(-1);
     server.dirty += emptyDb(NULL);
@@ -300,12 +306,16 @@
     long id;
 
     if (getLongFromObjectOrReply(c, c->argv[1], &id,
         "invalid DB index") != REDIS_OK)
         return;
 
+    if (server.cluster_enabled && id != 0) {
+        addReplyError(c,"SELECT is not allowed in cluster mode");
+        return;
+    }
     if (selectDb(c,id) == REDIS_ERR) {
         addReplyError(c,"invalid DB index");
     } else {
         addReply(c,shared.ok);
     }
 }
@@ -530,22 +540,22 @@
         robj *kobj = listNodeValue(node);
         nextnode = listNextNode(node);
         int filter = 0;
 
         /* Filter element if it does not match the pattern. */
         if (!filter && use_pattern) {
-            if (kobj->encoding == REDIS_ENCODING_INT) {
+            if (sdsEncodedObject(kobj)) {
+                if (!stringmatchlen(pat, patlen, kobj->ptr, sdslen(kobj->ptr), 0))
+                    filter = 1;
+            } else {
                 char buf[REDIS_LONGSTR_SIZE];
                 int len;
 
                 redisAssert(kobj->encoding == REDIS_ENCODING_INT);
                 len = ll2string(buf,sizeof(buf),(long)kobj->ptr);
                 if (!stringmatchlen(pat, patlen, buf, len, 0)) filter = 1;
-            } else {
-                if (!stringmatchlen(pat, patlen, kobj->ptr, sdslen(kobj->ptr), 0))
-                    filter = 1;
             }
         }
 
         /* Filter element if it is an expired key. */
         if (!filter && o == NULL && expireIfNeeded(c->db, kobj)) filter = 1;
 
@@ -697,13 +707,18 @@
 }
 
 void moveCommand(redisClient *c) {
     robj *o;
     redisDb *src, *dst;
     int srcid;
-    long long dbid, expire;
+    long long dbid;
+
+    if (server.cluster_enabled) {
+        addReplyError(c,"MOVE is not allowed in cluster mode");
+        return;
+    }
 
     /* Obtain source and target DB pointers */
     src = c->db;
     srcid = c->db->id;
 
     if (getLongLongFromObject(c->argv[2],&dbid) == REDIS_ERR ||
@@ -726,21 +741,19 @@
     /* Check if the element exists and get a reference */
     o = lookupKeyWrite(c->db,c->argv[1]);
     if (!o) {
         addReply(c,shared.czero);
         return;
     }
-    expire = getExpire(c->db,c->argv[1]);
 
     /* Return zero if the key already exists in the target DB */
     if (lookupKeyWrite(dst,c->argv[1]) != NULL) {
         addReply(c,shared.czero);
         return;
     }
     dbAdd(dst,c->argv[1],o);
-    if (expire != -1) setExpire(dst,c->argv[1],expire);
     incrRefCount(o);
 
     /* OK! key moved, free the entry in the source DB */
     dbDelete(src,c->argv[1]);
     server.dirty++;
     addReply(c,shared.cone);
@@ -962,12 +975,14 @@
 }
 
 /* -----------------------------------------------------------------------------
  * API to get key arguments from commands
  * ---------------------------------------------------------------------------*/
 
+/* The base case is to use the keys position as given in the command table
+ * (firstkey, lastkey, step). */
 int *getKeysUsingCommandTable(struct redisCommand *cmd,robj **argv, int argc, int *numkeys) {
     int j, i = 0, last, *keys;
     REDIS_NOTUSED(argv);
 
     if (cmd->firstkey == 0) {
         *numkeys = 0;
@@ -981,48 +996,71 @@
         keys[i++] = j;
     }
     *numkeys = i;
     return keys;
 }
 
-int *getKeysFromCommand(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags) {
+/* Return all the arguments that are keys in the command passed via argc / argv.
+ *
+ * The command returns the positions of all the key arguments inside the array,
+ * so the actual return value is an heap allocated array of integers. The
+ * length of the array is returned by reference into *numkeys.
+ *
+ * 'cmd' must be point to the corresponding entry into the redisCommand
+ * table, according to the command name in argv[0].
+ *
+ * This function uses the command table if a command-specific helper function
+ * is not required, otherwise it calls the command-specific function. */
+int *getKeysFromCommand(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {
     if (cmd->getkeys_proc) {
-        return cmd->getkeys_proc(cmd,argv,argc,numkeys,flags);
+        return cmd->getkeys_proc(cmd,argv,argc,numkeys);
     } else {
         return getKeysUsingCommandTable(cmd,argv,argc,numkeys);
     }
 }
 
+/* Free the result of getKeysFromCommand. */
 void getKeysFreeResult(int *result) {
     zfree(result);
 }
 
-int *noPreloadGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags) {
-    if (flags & REDIS_GETKEYS_PRELOAD) {
+/* Helper function to extract keys from following commands:
+ * ZUNIONSTORE <destkey> <num-keys> <key> <key> ... <key> <options>
+ * ZINTERSTORE <destkey> <num-keys> <key> <key> ... <key> <options> */
+int *zunionInterGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {
+    int i, num, *keys;
+    REDIS_NOTUSED(cmd);
+
+    num = atoi(argv[2]->ptr);
+    /* Sanity check. Don't return any key if the command is going to
+     * reply with syntax error. */
+    if (num > (argc-3)) {
         *numkeys = 0;
         return NULL;
-    } else {
-        return getKeysUsingCommandTable(cmd,argv,argc,numkeys);
     }
-}
 
-int *renameGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags) {
-    if (flags & REDIS_GETKEYS_PRELOAD) {
-        int *keys = zmalloc(sizeof(int));
-        *numkeys = 1;
-        keys[0] = 1;
-        return keys;
-    } else {
-        return getKeysUsingCommandTable(cmd,argv,argc,numkeys);
-    }
+    /* Keys in z{union,inter}store come from two places:
+     * argv[1] = storage key,
+     * argv[3...n] = keys to intersect */
+    keys = zmalloc(sizeof(int)*(num+1));
+
+    /* Add all key positions for argv[3...n] to keys[] */
+    for (i = 0; i < num; i++) keys[i] = 3+i;
+
+    /* Finally add the argv[1] key position (the storage key target). */
+    keys[num] = 1;
+    *numkeys = num+1;  /* Total keys = {union,inter} keys + storage key */
+    return keys;
 }
 
-int *zunionInterGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags) {
+/* Helper function to extract keys from the following commands:
+ * EVAL <script> <num-keys> <key> <key> ... <key> [more stuff]
+ * EVALSHA <script> <num-keys> <key> <key> ... <key> [more stuff] */
+int *evalGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {
     int i, num, *keys;
     REDIS_NOTUSED(cmd);
-    REDIS_NOTUSED(flags);
 
     num = atoi(argv[2]->ptr);
     /* Sanity check. Don't return any key if the command is going to
      * reply with syntax error. */
     if (num > (argc-3)) {
         *numkeys = 0;
@@ -1025,11 +1063,152 @@
     /* Sanity check. Don't return any key if the command is going to
      * reply with syntax error. */
     if (num > (argc-3)) {
         *numkeys = 0;
         return NULL;
     }
+
     keys = zmalloc(sizeof(int)*num);
-    for (i = 0; i < num; i++) keys[i] = 3+i;
     *numkeys = num;
+
+    /* Add all key positions for argv[3...n] to keys[] */
+    for (i = 0; i < num; i++) keys[i] = 3+i;
+
     return keys;
 }
+
+/* Helper function to extract keys from the SORT command.
+ *
+ * SORT <sort-key> ... STORE <store-key> ...
+ *
+ * The first argument of SORT is always a key, however a list of options
+ * follow in SQL-alike style. Here we parse just the minimum in order to
+ * correctly identify keys in the "STORE" option. */
+int *sortGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {
+    int i, j, num, *keys, found_store = 0;
+    REDIS_NOTUSED(cmd);
+
+    num = 0;
+    keys = zmalloc(sizeof(int)*2); /* Alloc 2 places for the worst case. */
+
+    keys[num++] = 1; /* <sort-key> is always present. */
+
+    /* Search for STORE option. By default we consider options to don't
+     * have arguments, so if we find an unknown option name we scan the
+     * next. However there are options with 1 or 2 arguments, so we
+     * provide a list here in order to skip the right number of args. */
+    struct {
+        char *name;
+        int skip;
+    } skiplist[] = {
+        {"limit", 2},
+        {"get", 1},
+        {"by", 1},
+        {NULL, 0} /* End of elements. */
+    };
+
+    for (i = 2; i < argc; i++) {
+        for (j = 0; skiplist[j].name != NULL; j++) {
+            if (!strcasecmp(argv[i]->ptr,skiplist[j].name)) {
+                i += skiplist[j].skip;
+                break;
+            } else if (!strcasecmp(argv[i]->ptr,"store") && i+1 < argc) {
+                /* Note: we don't increment "num" here and continue the loop
+                 * to be sure to process the *last* "STORE" option if multiple
+                 * ones are provided. This is same behavior as SORT. */
+                found_store = 1;
+                keys[num] = i+1; /* <store-key> */
+                break;
+            }
+        }
+    }
+    *numkeys = num + found_store;
+    return keys;
+}
+
+/* Slot to Key API. This is used by Redis Cluster in order to obtain in
+ * a fast way a key that belongs to a specified hash slot. This is useful
+ * while rehashing the cluster. */
+void slotToKeyAdd(robj *key) {
+    unsigned int hashslot = keyHashSlot(key->ptr,sdslen(key->ptr));
+
+    zslInsert(server.cluster->slots_to_keys,hashslot,key);
+    incrRefCount(key);
+}
+
+void slotToKeyDel(robj *key) {
+    unsigned int hashslot = keyHashSlot(key->ptr,sdslen(key->ptr));
+
+    zslDelete(server.cluster->slots_to_keys,hashslot,key);
+}
+
+void slotToKeyFlush(void) {
+    zslFree(server.cluster->slots_to_keys);
+    server.cluster->slots_to_keys = zslCreate();
+}
+
+unsigned int getKeysInSlot(unsigned int hashslot, robj **keys, unsigned int count) {
+    zskiplistNode *n;
+    zrangespec range;
+    int j = 0;
+
+    range.min = range.max = hashslot;
+    range.minex = range.maxex = 0;
+
+    n = zslFirstInRange(server.cluster->slots_to_keys, &range);
+    while(n && n->score == hashslot && count--) {
+        keys[j++] = n->obj;
+        n = n->level[0].forward;
+    }
+    return j;
+}
+
+/* Remove all the keys in the specified hash slot.
+ * The number of removed items is returned. */
+unsigned int delKeysInSlot(unsigned int hashslot) {
+    zskiplistNode *n;
+    zrangespec range;
+    int j = 0;
+
+    range.min = range.max = hashslot;
+    range.minex = range.maxex = 0;
+
+    n = zslFirstInRange(server.cluster->slots_to_keys, &range);
+    while(n && n->score == hashslot) {
+        robj *key = n->obj;
+        n = n->level[0].forward; /* Go to the next item before freeing it. */
+        incrRefCount(key); /* Protect the object while freeing it. */
+        dbDelete(&server.db[0],key);
+        decrRefCount(key);
+        j++;
+    }
+    return j;
+}
+
+unsigned int countKeysInSlot(unsigned int hashslot) {
+    zskiplist *zsl = server.cluster->slots_to_keys;
+    zskiplistNode *zn;
+    zrangespec range;
+    int rank, count = 0;
+
+    range.min = range.max = hashslot;
+    range.minex = range.maxex = 0;
+
+    /* Find first element in range */
+    zn = zslFirstInRange(zsl, &range);
+
+    /* Use rank of first element, if any, to determine preliminary count */
+    if (zn != NULL) {
+        rank = zslGetRank(zsl, zn->score, zn->obj);
+        count = (zsl->length - (rank - 1));
+
+        /* Find last element in range */
+        zn = zslLastInRange(zsl, &range);
+
+        /* Use rank of last element, if any, to determine the actual count */
+        if (zn != NULL) {
+            rank = zslGetRank(zsl, zn->score, zn->obj);
+            count -= (zsl->length - rank);
+        }
+    }
+    return count;
+}
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/db.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/db.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c	2015-04-01 22:01:44.000000000 +0800
@@ -295,29 +295,29 @@
         val = dictGetVal(de);
         strenc = strEncoding(val->encoding);
 
         addReplyStatusFormat(c,
             "Value at:%p refcount:%d "
             "encoding:%s serializedlength:%lld "
-            "lru:%d lru_seconds_idle:%lu",
+            "lru:%d lru_seconds_idle:%llu",
             (void*)val, val->refcount,
             strenc, (long long) rdbSavedObjectLen(val),
-            val->lru, estimateObjectIdleTime(val));
+            val->lru, estimateObjectIdleTime(val)/1000);
     } else if (!strcasecmp(c->argv[1]->ptr,"sdslen") && c->argc == 3) {
         dictEntry *de;
         robj *val;
         sds key;
 
         if ((de = dictFind(c->db->dict,c->argv[2]->ptr)) == NULL) {
             addReply(c,shared.nokeyerr);
             return;
         }
         val = dictGetVal(de);
         key = dictGetKey(de);
 
-        if (val->type != REDIS_STRING || val->encoding != REDIS_ENCODING_RAW) {
+        if (val->type != REDIS_STRING || !sdsEncodedObject(val)) {
             addReplyError(c,"Not an sds encoded string.");
         } else {
             addReplyStatusFormat(c,
                 "key_sds_len:%lld, key_sds_avail:%lld, "
                 "val_sds_len:%lld, val_sds_avail:%lld",
                 (long long) sdslen(key),
@@ -409,15 +409,13 @@
     redisLog(REDIS_WARNING,"client->fd = %d", c->fd);
     redisLog(REDIS_WARNING,"client->argc = %d", c->argc);
     for (j=0; j < c->argc; j++) {
         char buf[128];
         char *arg;
 
-        if (c->argv[j]->type == REDIS_STRING &&
-            c->argv[j]->encoding == REDIS_ENCODING_RAW)
-        {
+        if (c->argv[j]->type == REDIS_STRING && sdsEncodedObject(c->argv[j])) {
             arg = (char*) c->argv[j]->ptr;
         } else {
             snprintf(buf,sizeof(buf),"Object type: %d, encoding: %d",
                 c->argv[j]->type, c->argv[j]->encoding);
             arg = buf;
         }
@@ -427,13 +425,13 @@
 }
 
 void redisLogObjectDebugInfo(robj *o) {
     redisLog(REDIS_WARNING,"Object type: %d", o->type);
     redisLog(REDIS_WARNING,"Object encoding: %d", o->encoding);
     redisLog(REDIS_WARNING,"Object refcount: %d", o->refcount);
-    if (o->type == REDIS_STRING && o->encoding == REDIS_ENCODING_RAW) {
+    if (o->type == REDIS_STRING && sdsEncodedObject(o)) {
         redisLog(REDIS_WARNING,"Object raw string len: %zu", sdslen(o->ptr));
         if (sdslen(o->ptr) < 4096) {
             sds repr = sdscatrepr(sdsempty(),o->ptr,sdslen(o->ptr));
             redisLog(REDIS_WARNING,"Object raw string content: %s", repr);
             sdsfree(repr);
         }
@@ -810,16 +808,12 @@
     struct sigaction act;
     REDIS_NOTUSED(info);
 
     bugReportStart();
     redisLog(REDIS_WARNING,
         "    Redis %s crashed by signal: %d", REDIS_VERSION, sig);
-    if (sig == SIGSEGV) {
-        redisLog(REDIS_WARNING,
-        "    SIGSEGV caused by address: %p", (void*)info->si_addr);
-    }
     redisLog(REDIS_WARNING,
         "    Failed assertion: %s (%s:%d)", server.assert_failed,
                         server.assert_file, server.assert_line);
 
     /* Log the stack trace */
     redisLog(REDIS_WARNING, "--- STACK TRACE");
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/debug.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/debug.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c	2015-04-01 22:01:44.000000000 +0800
@@ -208,12 +208,15 @@
 
     /* the size is invalid if it is smaller than the number of
      * elements already inside the hash table */
     if (dictIsRehashing(d) || d->ht[0].used > size)
         return DICT_ERR;
 
+    /* Rehashing to the same table size is not useful. */
+    if (realsize == d->ht[0].size) return DICT_ERR;
+
     /* Allocate the new hash table and initialize all pointers to NULL */
     n.size = realsize;
     n.sizemask = realsize-1;
     n.table = zcalloc(realsize*sizeof(dictEntry*));
     n.used = 0;
 
@@ -229,33 +232,33 @@
     d->rehashidx = 0;
     return DICT_OK;
 }
 
 /* Performs N steps of incremental rehashing. Returns 1 if there are still
  * keys to move from the old to the new hash table, otherwise 0 is returned.
+ *
  * Note that a rehashing step consists in moving a bucket (that may have more
- * than one key as we use chaining) from the old to the new hash table. */
+ * than one key as we use chaining) from the old to the new hash table, however
+ * since part of the hash table may be composed of empty spaces, it is not
+ * guaranteed that this function will rehash even a single bucket, since it
+ * will visit at max N*10 empty buckets in total, otherwise the amount of
+ * work it does would be unbound and the function may block for a long time. */
 int dictRehash(dict *d, int n) {
+    int empty_visits = n*10; /* Max number of empty buckets to visit. */
     if (!dictIsRehashing(d)) return 0;
 
-    while(n--) {
+    while(n-- && d->ht[0].used != 0) {
         dictEntry *de, *nextde;
 
-        /* Check if we already rehashed the whole table... */
-        if (d->ht[0].used == 0) {
-            zfree(d->ht[0].table);
-            d->ht[0] = d->ht[1];
-            _dictReset(&d->ht[1]);
-            d->rehashidx = -1;
-            return 0;
-        }
-
         /* Note that rehashidx can't overflow as we are sure there are more
          * elements because ht[0].used != 0 */
         assert(d->ht[0].size > (unsigned long)d->rehashidx);
-        while(d->ht[0].table[d->rehashidx] == NULL) d->rehashidx++;
+        while(d->ht[0].table[d->rehashidx] == NULL) {
+            d->rehashidx++;
+            if (--empty_visits == 0) return 1;
+        }
         de = d->ht[0].table[d->rehashidx];
         /* Move all the keys in this bucket from the old to the new hash HT */
         while(de) {
             unsigned int h;
 
             nextde = de->next;
@@ -267,12 +270,23 @@
             d->ht[1].used++;
             de = nextde;
         }
         d->ht[0].table[d->rehashidx] = NULL;
         d->rehashidx++;
     }
+
+    /* Check if we already rehashed the whole table... */
+    if (d->ht[0].used == 0) {
+        zfree(d->ht[0].table);
+        d->ht[0] = d->ht[1];
+        _dictReset(&d->ht[1]);
+        d->rehashidx = -1;
+        return 0;
+    }
+
+    /* More to rehash... */
     return 1;
 }
 
 long long timeInMilliseconds(void) {
     struct timeval tv;
 
@@ -315,13 +329,13 @@
 }
 
 /* Low level add. This function adds the entry but instead of setting
  * a value returns the dictEntry structure to the user, that will make
  * sure to fill the value field as he wishes.
  *
- * This function is also directly exposed to user API to be called
+ * This function is also directly exposed to the user API to be called
  * mainly in order to store non-pointers inside the hash value, example:
  *
  * entry = dictAddRaw(dict,mykey);
  * if (entry != NULL) dictSetSignedIntegerVal(entry,1000);
  *
  * Return values:
@@ -613,13 +627,17 @@
     int listlen, listele;
 
     if (dictSize(d) == 0) return NULL;
     if (dictIsRehashing(d)) _dictRehashStep(d);
     if (dictIsRehashing(d)) {
         do {
-            h = random() % (d->ht[0].size+d->ht[1].size);
+            /* We are sure there are no elements in indexes from 0
+             * to rehashidx-1 */
+            h = d->rehashidx + (random() % (d->ht[0].size +
+                                            d->ht[1].size -
+                                            d->rehashidx));
             he = (h >= d->ht[0].size) ? d->ht[1].table[h - d->ht[0].size] :
                                       d->ht[0].table[h];
         } while(he == NULL);
     } else {
         do {
             h = random() & d->ht[0].sizemask;
@@ -640,12 +658,101 @@
     listele = random() % listlen;
     he = orighe;
     while(listele--) he = he->next;
     return he;
 }
 
+/* This function samples the dictionary to return a few keys from random
+ * locations.
+ *
+ * It does not guarantee to return all the keys specified in 'count', nor
+ * it does guarantee to return non-duplicated elements, however it will make
+ * some effort to do both things.
+ *
+ * Returned pointers to hash table entries are stored into 'des' that
+ * points to an array of dictEntry pointers. The array must have room for
+ * at least 'count' elements, that is the argument we pass to the function
+ * to tell how many random elements we need.
+ *
+ * The function returns the number of items stored into 'des', that may
+ * be less than 'count' if the hash table has less than 'count' elements
+ * inside, or if not enough elements were found in a reasonable amount of
+ * steps.
+ *
+ * Note that this function is not suitable when you need a good distribution
+ * of the returned items, but only when you need to "sample" a given number
+ * of continuous elements to run some kind of algorithm or to produce
+ * statistics. However the function is much faster than dictGetRandomKey()
+ * at producing N elements. */
+unsigned int dictGetSomeKeys(dict *d, dictEntry **des, unsigned int count) {
+    unsigned int j; /* internal hash table id, 0 or 1. */
+    unsigned int tables; /* 1 or 2 tables? */
+    unsigned int stored = 0, maxsizemask;
+    unsigned int maxsteps;
+
+    if (dictSize(d) < count) count = dictSize(d);
+    maxsteps = count*10;
+
+    /* Try to do a rehashing work proportional to 'count'. */
+    for (j = 0; j < count; j++) {
+        if (dictIsRehashing(d))
+            _dictRehashStep(d);
+        else
+            break;
+    }
+
+    tables = dictIsRehashing(d) ? 2 : 1;
+    maxsizemask = d->ht[0].sizemask;
+    if (tables > 1 && maxsizemask < d->ht[1].sizemask)
+        maxsizemask = d->ht[1].sizemask;
+
+    /* Pick a random point inside the larger table. */
+    unsigned int i = random() & maxsizemask;
+    unsigned int emptylen = 0; /* Continuous empty entries so far. */
+    while(stored < count && maxsteps--) {
+        for (j = 0; j < tables; j++) {
+            /* Invariant of the dict.c rehashing: up to the indexes already
+             * visited in ht[0] during the rehashing, there are no populated
+             * buckets, so we can skip ht[0] for indexes between 0 and idx-1. */
+            if (tables == 2 && j == 0 && i < (unsigned int) d->rehashidx) {
+                /* Moreover, if we are currently out of range in the second
+                 * table, there will be no elements in both tables up to
+                 * the current rehashing index, so we jump if possible.
+                 * (this happens when going from big to small table). */
+                if (i >= d->ht[1].size) i = d->rehashidx;
+                continue;
+            }
+            if (i >= d->ht[j].size) continue; /* Out of range for this table. */
+            dictEntry *he = d->ht[j].table[i];
+
+            /* Count contiguous empty buckets, and jump to other
+             * locations if they reach 'count' (with a minimum of 5). */
+            if (he == NULL) {
+                emptylen++;
+                if (emptylen >= 5 && emptylen > count) {
+                    i = random() & maxsizemask;
+                    emptylen = 0;
+                }
+            } else {
+                emptylen = 0;
+                while (he) {
+                    /* Collect all the elements of the buckets found non
+                     * empty while iterating. */
+                    *des = he;
+                    des++;
+                    he = he->next;
+                    stored++;
+                    if (stored == count) return stored;
+                }
+            }
+        }
+        i = (i+1) & maxsizemask;
+    }
+    return stored;
+}
+
 /* Function to reverse bits. Algorithm from:
  * http://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel */
 static unsigned long rev(unsigned long v) {
     unsigned long s = 8 * sizeof(v); // bit size; must be power of 2
     unsigned long mask = ~0;
     while ((s >>= 1) > 0) {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.h	2015-04-01 22:01:44.000000000 +0800
@@ -161,12 +161,13 @@
 int dictResize(dict *d);
 dictIterator *dictGetIterator(dict *d);
 dictIterator *dictGetSafeIterator(dict *d);
 dictEntry *dictNext(dictIterator *iter);
 void dictReleaseIterator(dictIterator *iter);
 dictEntry *dictGetRandomKey(dict *d);
+unsigned int dictGetSomeKeys(dict *d, dictEntry **des, unsigned int count);
 void dictPrintStats(dict *d);
 unsigned int dictGenHashFunction(const void *key, int len);
 unsigned int dictGenCaseHashFunction(const unsigned char *buf, int len);
 void dictEmpty(dict *d, void(callback)(void*));
 void dictEnableResize(void);
 void dictDisableResize(void);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/dict.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/dict.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.h	2015-04-01 22:01:44.000000000 +0800
@@ -58,7 +58,17 @@
 #define memrev64ifbe(p) memrev64(p)
 #define intrev16ifbe(v) intrev16(v)
 #define intrev32ifbe(v) intrev32(v)
 #define intrev64ifbe(v) intrev64(v)
 #endif
 
+/* The functions htonu64() and ntohu64() convert the specified value to
+ * network byte ordering and back. In big endian systems they are no-ops. */
+#if (BYTE_ORDER == BIG_ENDIAN)
+#define htonu64(v) (v)
+#define ntohu64(v) (v)
+#else
+#define htonu64(v) intrev64(v)
+#define ntohu64(v) intrev64(v)
+#endif
+
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/endianconv.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/endianconv.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/hyperloglog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/hyperloglog.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/intset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/intset.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c	2015-04-01 22:01:44.000000000 +0800
@@ -225,12 +225,13 @@
     int advise_no_appendfsync = 0;  /* don't fsync during rewrites. */
     int advise_local_disk = 0;      /* Avoid remote disks. */
     int advise_ssd = 0;             /* Use an SSD drive. */
     int advise_write_load_info = 0; /* Print info about AOF and write load. */
     int advise_hz = 0;              /* Use higher HZ. */
     int advise_large_objects = 0;   /* Deletion of large objects. */
+    int advise_mass_eviction = 0;   /* Avoid mass eviction of keys. */
     int advise_relax_fsync_policy = 0; /* appendfsync always is slow. */
     int advise_disable_thp = 0;     /* AnonHugePages detected. */
     int advices = 0;
 
     /* Return ASAP if the latency engine is disabled and it looks like it
      * was never enabled so far. */
@@ -361,17 +362,22 @@
             advise_hz = 1;
             advise_large_objects = 1;
             advices += 2;
         }
 
         /* Eviction cycle. */
-        if (!strcasecmp(event,"eviction-cycle")) {
+        if (!strcasecmp(event,"eviction-del")) {
             advise_large_objects = 1;
             advices++;
         }
 
+        if (!strcasecmp(event,"eviction-cycle")) {
+            advise_mass_eviction = 1;
+            advices++;
+        }
+
         report = sdscatlen(report,"\n",1);
     }
     dictReleaseIterator(di);
 
     /* Add non event based advices. */
     if (THPGetAnonHugePagesSize() > 0) {
@@ -449,12 +455,16 @@
         }
 
         if (advise_large_objects) {
             report = sdscat(report,"- Deleting, expiring or evicting (because of maxmemory policy) large objects is a blocking operation. If you have very large objects that are often deleted, expired, or evicted, try to fragment those objects into multiple smaller objects.\n");
         }
 
+        if (advise_mass_eviction) {
+            report = sdscat(report,"- Sudden changes to the 'maxmemory' setting via 'CONFIG SET', or allocation of large objects via sets or sorted sets intersections, STORE option of SORT, Redis Cluster large keys migrations (RESTORE command), may create sudden memory pressure forcing the server to block trying to evict keys. \n");
+        }
+
         if (advise_disable_thp) {
             report = sdscat(report,"- I detected a non zero amount of anonymous huge pages used by your process. This creates very serious latency events in different conditions, especially when Redis is persisting on disk. To disable THP support use the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled', make sure to also add it into /etc/rc.local so that the command will be executed again after a reboot. Note that even if you have already disabled THP, you still need to restart the Redis process to get rid of the huge pages already created.\n");
         }
     }
 
     return report;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.h	2015-04-01 22:01:44.000000000 +0800
@@ -83,7 +83,11 @@
 /* Add the sample only if the elapsed time is >= to the configured threshold. */
 #define latencyAddSampleIfNeeded(event,var) \
     if (server.latency_monitor_threshold && \
         (var) >= server.latency_monitor_threshold) \
           latencyAddSample((event),(var));
 
+/* Remove time from a nested event. */
+#define latencyRemoveNestedEvent(event_var,nested_var) \
+    event_var += nested_var;
+
 #endif /* __LATENCY_H */
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/latency.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/latency.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_c.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_c.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/lzf_d.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/lzf_d.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/Makefile /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/Makefile
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/Makefile	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/Makefile	2015-04-01 22:01:44.000000000 +0800
@@ -110,13 +110,13 @@
 QUIET_LINK = @printf '    %b %b\n' $(LINKCOLOR)LINK$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR) 1>&2;
 QUIET_INSTALL = @printf '    %b %b\n' $(LINKCOLOR)INSTALL$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR) 1>&2;
 endif
 
 REDIS_SERVER_NAME=redis-server
 REDIS_SENTINEL_NAME=redis-sentinel
-REDIS_SERVER_OBJ=adlist.o ae.o anet.o dict.o redis.o sds.o zmalloc.o lzf_c.o lzf_d.o pqsort.o zipmap.o sha1.o ziplist.o release.o networking.o util.o object.o db.o replication.o rdb.o t_string.o t_list.o t_set.o t_zset.o t_hash.o config.o aof.o pubsub.o multi.o debug.o sort.o intset.o syncio.o migrate.o endianconv.o slowlog.o scripting.o bio.o rio.o rand.o memtest.o crc64.o bitops.o sentinel.o notify.o setproctitle.o hyperloglog.o latency.o sparkline.o
+REDIS_SERVER_OBJ=adlist.o ae.o anet.o dict.o redis.o sds.o zmalloc.o lzf_c.o lzf_d.o pqsort.o zipmap.o sha1.o ziplist.o release.o networking.o util.o object.o db.o replication.o rdb.o t_string.o t_list.o t_set.o t_zset.o t_hash.o config.o aof.o pubsub.o multi.o debug.o sort.o intset.o syncio.o cluster.o crc16.o endianconv.o slowlog.o scripting.o bio.o rio.o rand.o memtest.o crc64.o bitops.o sentinel.o notify.o setproctitle.o blocked.o hyperloglog.o latency.o sparkline.o
 REDIS_CLI_NAME=redis-cli
 REDIS_CLI_OBJ=anet.o sds.o adlist.o redis-cli.o zmalloc.o release.o anet.o ae.o crc64.o
 REDIS_BENCHMARK_NAME=redis-benchmark
 REDIS_BENCHMARK_OBJ=ae.o anet.o redis-benchmark.o sds.o adlist.o zmalloc.o redis-benchmark.o
 REDIS_CHECK_DUMP_NAME=redis-check-dump
 REDIS_CHECK_DUMP_OBJ=redis-check-dump.o lzf_c.o lzf_d.o crc64.o
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/Makefile.dep /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/Makefile.dep
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/Makefile.dep	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/Makefile.dep	2015-04-01 22:01:44.000000000 +0800
@@ -1,132 +1,142 @@
 adlist.o: adlist.c adlist.h zmalloc.h
-ae.o: ae.c ae.h zmalloc.h config.h ae_kqueue.c ae_select.c ae_evport.c ae_epoll.c
+ae.o: ae.c ae.h zmalloc.h config.h ae_kqueue.c ae_epoll.c ae_select.c ae_evport.c
 ae_epoll.o: ae_epoll.c
 ae_evport.o: ae_evport.c
 ae_kqueue.o: ae_kqueue.c
 ae_select.o: ae_select.c
 anet.o: anet.c fmacros.h anet.h
 aof.o: aof.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  bio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ bio.h
 bio.o: bio.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  bio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ bio.h
 bitops.o: bitops.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+blocked.o: blocked.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+cluster.o: cluster.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ cluster.h endianconv.h
 config.o: config.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ cluster.h
+crc16.o: crc16.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 crc64.o: crc64.c
 db.o: db.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ cluster.h
 debug.o: debug.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  sha1.h crc64.h bio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ sha1.h crc64.h bio.h
 dict.o: dict.c fmacros.h dict.h zmalloc.h redisassert.h
 endianconv.o: endianconv.c
 hyperloglog.o: hyperloglog.c redis.h fmacros.h config.h \
-  ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h sds.h dict.h \
-  adlist.h zmalloc.h anet.h ziplist.h intset.h version.h util.h \
-  latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h sds.h dict.h \
+ adlist.h zmalloc.h anet.h ziplist.h intset.h version.h util.h latency.h \
+ sparkline.h rdb.h rio.h
 intset.o: intset.c intset.h zmalloc.h endianconv.h config.h
 latency.o: latency.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 lzf_c.o: lzf_c.c lzfP.h
 lzf_d.o: lzf_d.c lzfP.h
 memtest.o: memtest.c config.h
-migrate.o: migrate.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  endianconv.h
 multi.o: multi.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 networking.o: networking.c redis.h fmacros.h config.h \
-  ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h sds.h dict.h \
-  adlist.h zmalloc.h anet.h ziplist.h intset.h version.h util.h \
-  latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h sds.h dict.h \
+ adlist.h zmalloc.h anet.h ziplist.h intset.h version.h util.h latency.h \
+ sparkline.h rdb.h rio.h
 notify.o: notify.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 object.o: object.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 pqsort.o: pqsort.c
 pubsub.o: pubsub.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 rand.o: rand.c
 rdb.o: rdb.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  lzf.h zipmap.h endianconv.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ lzf.h zipmap.h endianconv.h
 redis-benchmark.o: redis-benchmark.c fmacros.h ae.h \
-  ../deps/hiredis/hiredis.h sds.h adlist.h zmalloc.h
+ ../deps/hiredis/hiredis.h sds.h adlist.h zmalloc.h
 redis-check-aof.o: redis-check-aof.c fmacros.h config.h
 redis-check-dump.o: redis-check-dump.c lzf.h crc64.h
 redis-cli.o: redis-cli.c fmacros.h version.h ../deps/hiredis/hiredis.h \
-  sds.h zmalloc.h ../deps/linenoise/linenoise.h help.h anet.h ae.h
+ sds.h zmalloc.h ../deps/linenoise/linenoise.h help.h anet.h ae.h
 redis.o: redis.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  slowlog.h bio.h asciilogo.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ cluster.h slowlog.h bio.h asciilogo.h
 release.o: release.c release.h version.h crc64.h
 replication.o: replication.c redis.h fmacros.h config.h \
-  ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h sds.h dict.h \
-  adlist.h zmalloc.h anet.h ziplist.h intset.h version.h util.h \
-  latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h sds.h dict.h \
+ adlist.h zmalloc.h anet.h ziplist.h intset.h version.h util.h latency.h \
+ sparkline.h rdb.h rio.h
 rio.o: rio.c fmacros.h rio.h sds.h util.h crc64.h config.h redis.h \
-  ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h dict.h adlist.h \
-  zmalloc.h anet.h ziplist.h intset.h version.h latency.h sparkline.h \
-  rdb.h
+ ../deps/lua/src/lua.h ../deps/lua/src/luaconf.h ae.h dict.h adlist.h \
+ zmalloc.h anet.h ziplist.h intset.h version.h latency.h sparkline.h \
+ rdb.h
 scripting.o: scripting.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  sha1.h rand.h ../deps/lua/src/lauxlib.h ../deps/lua/src/lualib.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ sha1.h rand.h ../deps/lua/src/lauxlib.h ../deps/lua/src/lua.h \
+ ../deps/lua/src/lualib.h
 sds.o: sds.c sds.h zmalloc.h
 sentinel.o: sentinel.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  ../deps/hiredis/hiredis.h ../deps/hiredis/async.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ ../deps/hiredis/hiredis.h ../deps/hiredis/async.h \
+ ../deps/hiredis/hiredis.h
 setproctitle.o: setproctitle.c
 sha1.o: sha1.c sha1.h config.h
 slowlog.o: slowlog.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  slowlog.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ slowlog.h
 sort.o: sort.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
-  pqsort.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h \
+ pqsort.h
 sparkline.o: sparkline.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 syncio.o: syncio.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 t_hash.o: t_hash.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 t_list.o: t_list.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 t_set.o: t_set.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 t_string.o: t_string.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 t_zset.o: t_zset.c redis.h fmacros.h config.h ../deps/lua/src/lua.h \
-  ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
-  ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
+ ../deps/lua/src/luaconf.h ae.h sds.h dict.h adlist.h zmalloc.h anet.h \
+ ziplist.h intset.h version.h util.h latency.h sparkline.h rdb.h rio.h
 util.o: util.c fmacros.h util.h sds.h
 ziplist.o: ziplist.c zmalloc.h util.h sds.h ziplist.h endianconv.h \
-  config.h redisassert.h
+ config.h redisassert.h
 zipmap.o: zipmap.c zmalloc.h endianconv.h config.h
 zmalloc.o: zmalloc.c config.h zmalloc.h
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/memtest.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/memtest.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src: migrate.c
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src: migrate.c.bc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src: migrate.o
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/multi.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/multi.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c	2015-04-01 22:01:44.000000000 +0800
@@ -38,12 +38,23 @@
  * strings because of the trick they use to work (the header is before the
  * returned pointer), so we use this helper function. */
 size_t zmalloc_size_sds(sds s) {
     return zmalloc_size(s-sizeof(struct sdshdr));
 }
 
+/* Return the amount of memory used by the sds string at object->ptr
+ * for a string object. */
+size_t getStringObjectSdsUsedMemory(robj *o) {
+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
+    switch(o->encoding) {
+    case REDIS_ENCODING_RAW: return zmalloc_size_sds(o->ptr);
+    case REDIS_ENCODING_EMBSTR: return sdslen(o->ptr);
+    default: return 0; /* Just integer encoding for now. */
+    }
+}
+
 void *dupClientReplyValue(void *o) {
     incrRefCount((robj*)o);
     return o;
 }
 
 int listMatchObjects(void *a, void *b) {
@@ -91,21 +102,24 @@
     c->replstate = REDIS_REPL_NONE;
     c->repl_put_online_on_ack = 0;
     c->reploff = 0;
     c->repl_ack_off = 0;
     c->repl_ack_time = 0;
     c->slave_listening_port = 0;
-    c->slave_capa = SLAVE_CAPA_NONE;
     c->reply = listCreate();
     c->reply_bytes = 0;
     c->obuf_soft_limit_reached_time = 0;
     listSetFreeMethod(c->reply,decrRefCountVoid);
     listSetDupMethod(c->reply,dupClientReplyValue);
-    c->bpop.keys = dictCreate(&setDictType,NULL);
+    c->btype = REDIS_BLOCKED_NONE;
     c->bpop.timeout = 0;
+    c->bpop.keys = dictCreate(&setDictType,NULL);
     c->bpop.target = NULL;
+    c->bpop.numreplicas = 0;
+    c->bpop.reploffset = 0;
+    c->woff = 0;
     c->watched_keys = listCreate();
     c->pubsub_channels = dictCreate(&setDictType,NULL);
     c->pubsub_patterns = listCreate();
     c->peerid = NULL;
     listSetFreeMethod(c->pubsub_patterns,decrRefCountVoid);
     listSetMatchMethod(c->pubsub_patterns,listMatchObjects);
@@ -118,29 +132,55 @@
  * to the client. The behavior is the following:
  *
  * If the client should receive new data (normal clients will) the function
  * returns REDIS_OK, and make sure to install the write handler in our event
  * loop so that when the socket is writable new data gets written.
  *
- * If the client should not receive new data, because it is a fake client,
- * a master, a slave not yet online, or because the setup of the write handler
- * failed, the function returns REDIS_ERR.
+ * If the client should not receive new data, because it is a fake client
+ * (used to load AOF in memory), a master or because the setup of the write
+ * handler failed, the function returns REDIS_ERR.
+ *
+ * The function may return REDIS_OK without actually installing the write
+ * event handler in the following cases:
+ *
+ * 1) The event handler should already be installed since the output buffer
+ *    already contained something.
+ * 2) The client is a slave but not yet online, so we want to just accumulate
+ *    writes in the buffer but not actually sending them yet.
  *
  * Typically gets called every time a reply is built, before adding more
  * data to the clients output buffers. If the function returns REDIS_ERR no
  * data should be appended to the output buffers. */
 int prepareClientToWrite(redisClient *c) {
+    /* If it's the Lua client we always return ok without installing any
+     * handler since there is no socket at all. */
     if (c->flags & REDIS_LUA_CLIENT) return REDIS_OK;
+
+    /* Masters don't receive replies, unless REDIS_MASTER_FORCE_REPLY flag
+     * is set. */
     if ((c->flags & REDIS_MASTER) &&
         !(c->flags & REDIS_MASTER_FORCE_REPLY)) return REDIS_ERR;
-    if (c->fd <= 0) return REDIS_ERR; /* Fake client */
+
+    if (c->fd <= 0) return REDIS_ERR; /* Fake client for AOF loading. */
+
+    /* Only install the handler if not already installed and, in case of
+     * slaves, if the client can actually receive writes. */
     if (c->bufpos == 0 && listLength(c->reply) == 0 &&
         (c->replstate == REDIS_REPL_NONE ||
-         c->replstate == REDIS_REPL_ONLINE) && !c->repl_put_online_on_ack &&
-        aeCreateFileEvent(server.el, c->fd, AE_WRITABLE,
-        sendReplyToClient, c) == AE_ERR) return REDIS_ERR;
+         (c->replstate == REDIS_REPL_ONLINE && !c->repl_put_online_on_ack)))
+    {
+        /* Try to install the write handler. */
+        if (aeCreateFileEvent(server.el, c->fd, AE_WRITABLE,
+                sendReplyToClient, c) == AE_ERR)
+        {
+            freeClientAsync(c);
+            return REDIS_ERR;
+        }
+    }
+
+    /* Authorize the caller to queue in the output buffer of this client. */
     return REDIS_OK;
 }
 
 /* Create a duplicate of the last object in the reply list when
  * it is not exclusively owned by the reply list. */
 robj *dupLastObjectIfNeeded(list *reply) {
@@ -183,28 +223,29 @@
 
     if (c->flags & REDIS_CLOSE_AFTER_REPLY) return;
 
     if (listLength(c->reply) == 0) {
         incrRefCount(o);
         listAddNodeTail(c->reply,o);
-        c->reply_bytes += zmalloc_size_sds(o->ptr);
+        c->reply_bytes += getStringObjectSdsUsedMemory(o);
     } else {
         tail = listNodeValue(listLast(c->reply));
 
         /* Append to this object when possible. */
         if (tail->ptr != NULL &&
+            tail->encoding == REDIS_ENCODING_RAW &&
             sdslen(tail->ptr)+sdslen(o->ptr) <= REDIS_REPLY_CHUNK_BYTES)
         {
             c->reply_bytes -= zmalloc_size_sds(tail->ptr);
             tail = dupLastObjectIfNeeded(c->reply);
             tail->ptr = sdscatlen(tail->ptr,o->ptr,sdslen(o->ptr));
             c->reply_bytes += zmalloc_size_sds(tail->ptr);
         } else {
             incrRefCount(o);
             listAddNodeTail(c->reply,o);
-            c->reply_bytes += zmalloc_size_sds(o->ptr);
+            c->reply_bytes += getStringObjectSdsUsedMemory(o);
         }
     }
     asyncCloseClientOnOutputBufferLimitReached(c);
 }
 
 /* This method takes responsibility over the sds. When it is no longer
@@ -221,13 +262,13 @@
         listAddNodeTail(c->reply,createObject(REDIS_STRING,s));
         c->reply_bytes += zmalloc_size_sds(s);
     } else {
         tail = listNodeValue(listLast(c->reply));
 
         /* Append to this object when possible. */
-        if (tail->ptr != NULL &&
+        if (tail->ptr != NULL && tail->encoding == REDIS_ENCODING_RAW &&
             sdslen(tail->ptr)+sdslen(s) <= REDIS_REPLY_CHUNK_BYTES)
         {
             c->reply_bytes -= zmalloc_size_sds(tail->ptr);
             tail = dupLastObjectIfNeeded(c->reply);
             tail->ptr = sdscatlen(tail->ptr,s,sdslen(s));
             c->reply_bytes += zmalloc_size_sds(tail->ptr);
@@ -246,29 +287,29 @@
     if (c->flags & REDIS_CLOSE_AFTER_REPLY) return;
 
     if (listLength(c->reply) == 0) {
         robj *o = createStringObject(s,len);
 
         listAddNodeTail(c->reply,o);
-        c->reply_bytes += zmalloc_size_sds(o->ptr);
+        c->reply_bytes += getStringObjectSdsUsedMemory(o);
     } else {
         tail = listNodeValue(listLast(c->reply));
 
         /* Append to this object when possible. */
-        if (tail->ptr != NULL &&
+        if (tail->ptr != NULL && tail->encoding == REDIS_ENCODING_RAW &&
             sdslen(tail->ptr)+len <= REDIS_REPLY_CHUNK_BYTES)
         {
             c->reply_bytes -= zmalloc_size_sds(tail->ptr);
             tail = dupLastObjectIfNeeded(c->reply);
             tail->ptr = sdscatlen(tail->ptr,s,len);
             c->reply_bytes += zmalloc_size_sds(tail->ptr);
         } else {
             robj *o = createStringObject(s,len);
 
             listAddNodeTail(c->reply,o);
-            c->reply_bytes += zmalloc_size_sds(o->ptr);
+            c->reply_bytes += getStringObjectSdsUsedMemory(o);
         }
     }
     asyncCloseClientOnOutputBufferLimitReached(c);
 }
 
 /* -----------------------------------------------------------------------------
@@ -283,13 +324,13 @@
      * when there is a saving child running, avoiding touching the
      * refcount field of the object if it's not needed.
      *
      * If the encoding is RAW and there is room in the static buffer
      * we'll be able to send the object to the client without
      * messing with its page. */
-    if (obj->encoding == REDIS_ENCODING_RAW) {
+    if (sdsEncodedObject(obj)) {
         if (_addReplyToBuffer(c,obj->ptr,sdslen(obj->ptr)) != REDIS_OK)
             _addReplyObjectToList(c,obj);
     } else if (obj->encoding == REDIS_ENCODING_INT) {
         /* Optimization: if there is room in the static buffer for 32 bytes
          * (more than the max chars a 64 bit integer can take as string) we
          * avoid decoding the object and go for the lower level approach. */
@@ -395,20 +436,21 @@
 
     /* Abort when *node is NULL (see addDeferredMultiBulkLength). */
     if (node == NULL) return;
 
     len = listNodeValue(ln);
     len->ptr = sdscatprintf(sdsempty(),"*%ld\r\n",length);
+    len->encoding = REDIS_ENCODING_RAW; /* in case it was an EMBSTR. */
     c->reply_bytes += zmalloc_size_sds(len->ptr);
     if (ln->next != NULL) {
         next = listNodeValue(ln->next);
 
         /* Only glue when the next node is non-NULL (an sds in this case) */
         if (next->ptr != NULL) {
             c->reply_bytes -= zmalloc_size_sds(len->ptr);
-            c->reply_bytes -= zmalloc_size_sds(next->ptr);
+            c->reply_bytes -= getStringObjectSdsUsedMemory(next);
             len->ptr = sdscatlen(len->ptr,next->ptr,sdslen(next->ptr));
             c->reply_bytes += zmalloc_size_sds(len->ptr);
             listDelNode(c->reply,ln->next);
         }
     }
     asyncCloseClientOnOutputBufferLimitReached(c);
@@ -470,13 +512,13 @@
 }
 
 /* Create the length prefix of a bulk reply, example: $2234 */
 void addReplyBulkLen(redisClient *c, robj *obj) {
     size_t len;
 
-    if (obj->encoding == REDIS_ENCODING_RAW) {
+    if (sdsEncodedObject(obj)) {
         len = sdslen(obj->ptr);
     } else {
         long n = (long)obj->ptr;
 
         /* Compute how many bytes will take this integer as a radix 10 string */
         len = 1;
@@ -621,12 +663,26 @@
     while (listLength(server.slaves)) {
         listNode *ln = listFirst(server.slaves);
         freeClient((redisClient*)ln->value);
     }
 }
 
+/* This function is called when the slave lose the connection with the
+ * master into an unexpected way. */
+void replicationHandleMasterDisconnection(void) {
+    server.master = NULL;
+    server.repl_state = REDIS_REPL_CONNECT;
+    server.repl_down_since = server.unixtime;
+    /* We lost connection with our master, force our slaves to resync
+     * with us as well to load the new data set.
+     *
+     * If server.masterhost is NULL the user called SLAVEOF NO ONE so
+     * slave resync is not needed. */
+    if (server.masterhost != NULL) disconnectSlaves();
+}
+
 void freeClient(redisClient *c) {
     listNode *ln;
 
     /* If this is marked as current client unset it */
     if (server.current_client == c) server.current_client = NULL;
 
@@ -655,14 +711,13 @@
 
     /* Free the query buffer */
     sdsfree(c->querybuf);
     c->querybuf = NULL;
 
     /* Deallocate structures used to block on blocking ops. */
-    if (c->flags & REDIS_BLOCKED)
-        unblockClientWaitingData(c);
+    if (c->flags & REDIS_BLOCKED) unblockClient(c);
     dictRelease(c->bpop.keys);
 
     /* UNWATCH all the keys */
     unwatchAllKeys(c);
     listRelease(c->watched_keys);
 
@@ -739,13 +794,13 @@
 
 /* Schedule a client to free it at a safe time in the serverCron() function.
  * This function is useful when we need to terminate a client but we are in
  * a context where calling freeClient() is not possible, because the client
  * should be valid for the continuation of the flow of the program. */
 void freeClientAsync(redisClient *c) {
-    if (c->flags & REDIS_CLOSE_ASAP || c->flags & REDIS_LUA_CLIENT) return;
+    if (c->flags & REDIS_CLOSE_ASAP) return;
     c->flags |= REDIS_CLOSE_ASAP;
     listAddNodeTail(server.clients_to_close,c);
 }
 
 void freeClientsInAsyncFreeQueue(void) {
     while (listLength(server.clients_to_close)) {
@@ -779,16 +834,17 @@
                 c->bufpos = 0;
                 c->sentlen = 0;
             }
         } else {
             o = listNodeValue(listFirst(c->reply));
             objlen = sdslen(o->ptr);
-            objmem = zmalloc_size_sds(o->ptr);
+            objmem = getStringObjectSdsUsedMemory(o);
 
             if (objlen == 0) {
                 listDelNode(c->reply,listFirst(c->reply));
+                c->reply_bytes -= objmem;
                 continue;
             }
 
             nwritten = write(fd, ((char*)o->ptr)+c->sentlen,objlen-c->sentlen);
             if (nwritten <= 0) break;
             c->sentlen += nwritten;
@@ -839,18 +895,22 @@
         if (c->flags & REDIS_CLOSE_AFTER_REPLY) freeClient(c);
     }
 }
 
 /* resetClient prepare the client to process the next command */
 void resetClient(redisClient *c) {
+    redisCommandProc *prevcmd = c->cmd ? c->cmd->proc : NULL;
+
     freeClientArgv(c);
     c->reqtype = 0;
     c->multibulklen = 0;
     c->bulklen = -1;
-    /* We clear the ASKING flag as well if we are not inside a MULTI. */
-    if (!(c->flags & REDIS_MULTI)) c->flags &= (~REDIS_ASKING);
+    /* We clear the ASKING flag as well if we are not inside a MULTI, and
+     * if what we just executed is not the ASKING command itself. */
+    if (!(c->flags & REDIS_MULTI) && prevcmd != askingCommand)
+        c->flags &= (~REDIS_ASKING);
 }
 
 int processInlineBuffer(redisClient *c) {
     char *newline;
     int argc, j;
     sds *argv, aux;
@@ -911,13 +971,13 @@
     return REDIS_OK;
 }
 
 /* Helper function. Trims query buffer to make the function that processes
  * multi bulk requests idempotent. */
 static void setProtocolError(redisClient *c, int pos) {
-    if (server.verbosity <= REDIS_VERBOSE) {
+    if (server.verbosity >= REDIS_VERBOSE) {
         sds client = catClientInfoString(sdsempty(),c);
         redisLog(REDIS_VERBOSE,
             "Protocol error from client: %s", client);
         sdsfree(client);
     }
     c->flags |= REDIS_CLOSE_AFTER_REPLY;
@@ -1062,12 +1122,15 @@
     return REDIS_ERR;
 }
 
 void processInputBuffer(redisClient *c) {
     /* Keep processing while there is something in the input buffer */
     while(sdslen(c->querybuf)) {
+        /* Return if clients are paused. */
+        if (!(c->flags & REDIS_SLAVE) && clientsArePaused()) return;
+
         /* Immediately abort if the client is in the middle of something. */
         if (c->flags & REDIS_BLOCKED) return;
 
         /* REDIS_CLOSE_AFTER_REPLY closes the connection once the reply is
          * written to the client. Make sure to not let the reply grow after
          * this flag has been set (i.e. don't process more commands). */
@@ -1254,12 +1317,13 @@
     if (client->flags & REDIS_BLOCKED) *p++ = 'b';
     if (client->flags & REDIS_DIRTY_CAS) *p++ = 'd';
     if (client->flags & REDIS_CLOSE_AFTER_REPLY) *p++ = 'c';
     if (client->flags & REDIS_UNBLOCKED) *p++ = 'u';
     if (client->flags & REDIS_CLOSE_ASAP) *p++ = 'A';
     if (client->flags & REDIS_UNIX_SOCKET) *p++ = 'U';
+    if (client->flags & REDIS_READONLY) *p++ = 'r';
     if (p == flags) *p++ = 'N';
     *p++ = '\0';
 
     emask = client->fd == -1 ? 0 : aeGetFileEvents(server.el,client->fd);
     p = events;
     if (emask & AE_READABLE) *p++ = 'r';
@@ -1431,12 +1495,19 @@
         addReply(c,shared.ok);
     } else if (!strcasecmp(c->argv[1]->ptr,"getname") && c->argc == 2) {
         if (c->name)
             addReplyBulk(c,c->name);
         else
             addReply(c,shared.nullbulk);
+    } else if (!strcasecmp(c->argv[1]->ptr,"pause") && c->argc == 3) {
+        long long duration;
+
+        if (getTimeoutFromObjectOrReply(c,c->argv[2],&duration,UNIT_MILLISECONDS)
+                                        != REDIS_OK) return;
+        pauseClients(duration);
+        addReply(c,shared.ok);
     } else {
         addReplyError(c, "Syntax error, try CLIENT (LIST | KILL ip:port | GETNAME | SETNAME connection-name)");
     }
 }
 
 /* Rewrite the command vector of the client. All the new objects ref count
@@ -1605,28 +1676,73 @@
 
     listRewind(server.slaves,&li);
     while((ln = listNext(&li))) {
         redisClient *slave = listNodeValue(ln);
         int events;
 
-        /* Note that the following will not flush output buffers of slaves
-         * in STATE_ONLINE but having put_online_on_ack set to true: in this
-         * case the writable event is never installed, since the purpose
-         * of put_online_on_ack is to postpone the moment it is installed.
-         * This is what we want since slaves in this state should not receive
-         * writes before the first ACK. */
         events = aeGetFileEvents(server.el,slave->fd);
         if (events & AE_WRITABLE &&
             slave->replstate == REDIS_REPL_ONLINE &&
             listLength(slave->reply))
         {
             sendReplyToClient(server.el,slave->fd,slave,0);
         }
     }
 }
 
+/* Pause clients up to the specified unixtime (in ms). While clients
+ * are paused no command is processed from clients, so the data set can't
+ * change during that time.
+ *
+ * However while this function pauses normal and Pub/Sub clients, slaves are
+ * still served, so this function can be used on server upgrades where it is
+ * required that slaves process the latest bytes from the replication stream
+ * before being turned to masters.
+ *
+ * This function is also internally used by Redis Cluster for the manual
+ * failover procedure implemented by CLUSTER FAILOVER.
+ *
+ * The function always succeed, even if there is already a pause in progress.
+ * In such a case, the pause is extended if the duration is more than the
+ * time left for the previous duration. However if the duration is smaller
+ * than the time left for the previous pause, no change is made to the
+ * left duration. */
+void pauseClients(mstime_t end) {
+    if (!server.clients_paused || end > server.clients_pause_end_time)
+        server.clients_pause_end_time = end;
+    server.clients_paused = 1;
+}
+
+/* Return non-zero if clients are currently paused. As a side effect the
+ * function checks if the pause time was reached and clear it. */
+int clientsArePaused(void) {
+    if (server.clients_paused &&
+        server.clients_pause_end_time < server.mstime)
+    {
+        listNode *ln;
+        listIter li;
+        redisClient *c;
+
+        server.clients_paused = 0;
+
+        /* Put all the clients in the unblocked clients queue in order to
+         * force the re-processing of the input buffer if any. */
+        listRewind(server.clients,&li);
+        while ((ln = listNext(&li)) != NULL) {
+            c = listNodeValue(ln);
+
+            /* Don't touch slaves and blocked clients. The latter pending
+             * requests be processed when unblocked. */
+            if (c->flags & (REDIS_SLAVE|REDIS_BLOCKED)) continue;
+            c->flags |= REDIS_UNBLOCKED;
+            listAddNodeTail(server.unblocked_clients,c);
+        }
+    }
+    return server.clients_paused;
+}
+
 /* This function is called by Redis in order to process a few events from
  * time to time while blocked into some not interruptible operation.
  * This allows to reply to clients with the -LOADING error while loading the
  * data set at startup or after a full resynchronization with the master
  * and so forth.
  *
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/networking.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/networking.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/notify.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/notify.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c	2015-04-01 22:01:44.000000000 +0800
@@ -41,20 +41,60 @@
     o->type = type;
     o->encoding = REDIS_ENCODING_RAW;
     o->ptr = ptr;
     o->refcount = 1;
 
     /* Set the LRU to the current lruclock (minutes resolution). */
-    o->lru = server.lruclock;
+    o->lru = LRU_CLOCK();
     return o;
 }
 
-robj *createStringObject(char *ptr, size_t len) {
+/* Create a string object with encoding REDIS_ENCODING_RAW, that is a plain
+ * string object where o->ptr points to a proper sds string. */
+robj *createRawStringObject(char *ptr, size_t len) {
     return createObject(REDIS_STRING,sdsnewlen(ptr,len));
 }
 
+/* Create a string object with encoding REDIS_ENCODING_EMBSTR, that is
+ * an object where the sds string is actually an unmodifiable string
+ * allocated in the same chunk as the object itself. */
+robj *createEmbeddedStringObject(char *ptr, size_t len) {
+    robj *o = zmalloc(sizeof(robj)+sizeof(struct sdshdr)+len+1);
+    struct sdshdr *sh = (void*)(o+1);
+
+    o->type = REDIS_STRING;
+    o->encoding = REDIS_ENCODING_EMBSTR;
+    o->ptr = sh+1;
+    o->refcount = 1;
+    o->lru = LRU_CLOCK();
+
+    sh->len = len;
+    sh->free = 0;
+    if (ptr) {
+        memcpy(sh->buf,ptr,len);
+        sh->buf[len] = '\0';
+    } else {
+        memset(sh->buf,0,len+1);
+    }
+    return o;
+}
+
+/* Create a string object with EMBSTR encoding if it is smaller than
+ * REIDS_ENCODING_EMBSTR_SIZE_LIMIT, otherwise the RAW encoding is
+ * used.
+ *
+ * The current limit of 39 is chosen so that the biggest string object
+ * we allocate as EMBSTR will still fit into the 64 byte arena of jemalloc. */
+#define REDIS_ENCODING_EMBSTR_SIZE_LIMIT 39
+robj *createStringObject(char *ptr, size_t len) {
+    if (len <= REDIS_ENCODING_EMBSTR_SIZE_LIMIT)
+        return createEmbeddedStringObject(ptr,len);
+    else
+        return createRawStringObject(ptr,len);
+}
+
 robj *createStringObjectFromLongLong(long long value) {
     robj *o;
     if (value >= 0 && value < REDIS_SHARED_INTEGERS) {
         incrRefCount(shared.integers[value]);
         o = shared.integers[value];
     } else {
@@ -108,15 +148,39 @@
     } else {
         len = snprintf(buf,sizeof(buf),"%.17Lg", value);
     }
     return createStringObject(buf,len);
 }
 
+/* Duplicate a string object, with the guarantee that the returned object
+ * has the same encoding as the original one.
+ *
+ * This function also guarantees that duplicating a small integere object
+ * (or a string object that contains a representation of a small integer)
+ * will always result in a fresh object that is unshared (refcount == 1).
+ *
+ * The resulting object always has refcount set to 1. */
 robj *dupStringObject(robj *o) {
-    redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);
-    return createStringObject(o->ptr,sdslen(o->ptr));
+    robj *d;
+
+    redisAssert(o->type == REDIS_STRING);
+
+    switch(o->encoding) {
+    case REDIS_ENCODING_RAW:
+        return createRawStringObject(o->ptr,sdslen(o->ptr));
+    case REDIS_ENCODING_EMBSTR:
+        return createEmbeddedStringObject(o->ptr,sdslen(o->ptr));
+    case REDIS_ENCODING_INT:
+        d = createObject(REDIS_STRING, NULL);
+        d->encoding = REDIS_ENCODING_INT;
+        d->ptr = o->ptr;
+        return d;
+    default:
+        redisPanic("Wrong encoding.");
+        break;
+    }
 }
 
 robj *createListObject(void) {
     list *l = listCreate();
     robj *o = createObject(REDIS_LIST,l);
     listSetFreeMethod(l,decrRefCountVoid);
@@ -299,75 +363,92 @@
 /* Try to encode a string object in order to save space */
 robj *tryObjectEncoding(robj *o) {
     long value;
     sds s = o->ptr;
     size_t len;
 
-    if (o->encoding != REDIS_ENCODING_RAW)
-        return o; /* Already encoded */
+    /* Make sure this is a string object, the only type we encode
+     * in this function. Other types use encoded memory efficient
+     * representations but are handled by the commands implementing
+     * the type. */
+    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
+
+    /* We try some specialized encoding only for objects that are
+     * RAW or EMBSTR encoded, in other words objects that are still
+     * in represented by an actually array of chars. */
+    if (!sdsEncodedObject(o)) return o;
 
     /* It's not safe to encode shared objects: shared objects can be shared
-     * everywhere in the "object space" of Redis. Encoded objects can only
-     * appear as "values" (and not, for instance, as keys) */
+     * everywhere in the "object space" of Redis and may end in places where
+     * they are not handled. We handle them only as values in the keyspace. */
      if (o->refcount > 1) return o;
 
-    /* Currently we try to encode only strings */
-    redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
-
-    /* Check if we can represent this string as a long integer */
+    /* Check if we can represent this string as a long integer.
+     * Note that we are sure that a string larger than 21 chars is not
+     * representable as a 32 nor 64 bit integer. */
     len = sdslen(s);
-    if (len > 21 || !string2l(s,len,&value)) {
-        /* We can't encode the object...
-         *
-         * Do the last try, and at least optimize the SDS string inside
-         * the string object to require little space, in case there
-         * is more than 10% of free space at the end of the SDS string.
-         *
-         * We do that for larger strings, using the arbitrary value
-         * of 32 bytes. This code was backported from the unstable branch
-         * where this is performed when the object is too large to be
-         * encoded as EMBSTR. */
-        if (len > 32 &&
-            o->encoding == REDIS_ENCODING_RAW &&
-            sdsavail(s) > len/10)
+    if (len <= 21 && string2l(s,len,&value)) {
+        /* This object is encodable as a long. Try to use a shared object.
+         * Note that we avoid using shared integers when maxmemory is used
+         * because every object needs to have a private LRU field for the LRU
+         * algorithm to work well. */
+        if ((server.maxmemory == 0 ||
+             (server.maxmemory_policy != REDIS_MAXMEMORY_VOLATILE_LRU &&
+              server.maxmemory_policy != REDIS_MAXMEMORY_ALLKEYS_LRU)) &&
+            value >= 0 &&
+            value < REDIS_SHARED_INTEGERS)
         {
-            o->ptr = sdsRemoveFreeSpace(o->ptr);
+            decrRefCount(o);
+            incrRefCount(shared.integers[value]);
+            return shared.integers[value];
+        } else {
+            if (o->encoding == REDIS_ENCODING_RAW) sdsfree(o->ptr);
+            o->encoding = REDIS_ENCODING_INT;
+            o->ptr = (void*) value;
+            return o;
         }
-        /* Return the original object. */
-        return o;
     }
 
-    /* Ok, this object can be encoded...
+    /* If the string is small and is still RAW encoded,
+     * try the EMBSTR encoding which is more efficient.
+     * In this representation the object and the SDS string are allocated
+     * in the same chunk of memory to save space and cache misses. */
+    if (len <= REDIS_ENCODING_EMBSTR_SIZE_LIMIT) {
+        robj *emb;
+
+        if (o->encoding == REDIS_ENCODING_EMBSTR) return o;
+        emb = createEmbeddedStringObject(s,sdslen(s));
+        decrRefCount(o);
+        return emb;
+    }
+
+    /* We can't encode the object...
      *
-     * Can I use a shared object? Only if the object is inside a given range
+     * Do the last try, and at least optimize the SDS string inside
+     * the string object to require little space, in case there
+     * is more than 10% of free space at the end of the SDS string.
      *
-     * Note that we also avoid using shared integers when maxmemory is used
-     * because every object needs to have a private LRU field for the LRU
-     * algorithm to work well. */
-    if ((server.maxmemory == 0 ||
-         (server.maxmemory_policy != REDIS_MAXMEMORY_VOLATILE_LRU &&
-          server.maxmemory_policy != REDIS_MAXMEMORY_ALLKEYS_LRU)) &&
-        value >= 0 && value < REDIS_SHARED_INTEGERS)
+     * We do that only for relatively large strings as this branch
+     * is only entered if the length of the string is greater than
+     * REDIS_ENCODING_EMBSTR_SIZE_LIMIT. */
+    if (o->encoding == REDIS_ENCODING_RAW &&
+        sdsavail(s) > len/10)
     {
-        decrRefCount(o);
-        incrRefCount(shared.integers[value]);
-        return shared.integers[value];
-    } else {
-        o->encoding = REDIS_ENCODING_INT;
-        sdsfree(o->ptr);
-        o->ptr = (void*) value;
-        return o;
+        o->ptr = sdsRemoveFreeSpace(o->ptr);
     }
+
+    /* Return the original object. */
+    return o;
 }
 
 /* Get a decoded version of an encoded object (returned as a new object).
  * If the object is already raw-encoded just increment the ref count. */
 robj *getDecodedObject(robj *o) {
     robj *dec;
 
-    if (o->encoding == REDIS_ENCODING_RAW) {
+    if (sdsEncodedObject(o)) {
         incrRefCount(o);
         return o;
     }
     if (o->type == REDIS_STRING && o->encoding == REDIS_ENCODING_INT) {
         char buf[32];
 
@@ -393,25 +474,25 @@
 int compareStringObjectsWithFlags(robj *a, robj *b, int flags) {
     redisAssertWithInfo(NULL,a,a->type == REDIS_STRING && b->type == REDIS_STRING);
     char bufa[128], bufb[128], *astr, *bstr;
     size_t alen, blen, minlen;
 
     if (a == b) return 0;
-    if (a->encoding != REDIS_ENCODING_RAW) {
-        alen = ll2string(bufa,sizeof(bufa),(long) a->ptr);
-        astr = bufa;
-    } else {
+    if (sdsEncodedObject(a)) {
         astr = a->ptr;
         alen = sdslen(astr);
-    }
-    if (b->encoding != REDIS_ENCODING_RAW) {
-        blen = ll2string(bufb,sizeof(bufb),(long) b->ptr);
-        bstr = bufb;
     } else {
+        alen = ll2string(bufa,sizeof(bufa),(long) a->ptr);
+        astr = bufa;
+    }
+    if (sdsEncodedObject(b)) {
         bstr = b->ptr;
         blen = sdslen(bstr);
+    } else {
+        blen = ll2string(bufb,sizeof(bufb),(long) b->ptr);
+        bstr = bufb;
     }
     if (flags & REDIS_COMPARE_COLL) {
         return strcoll(astr,bstr);
     } else {
         int cmp;
 
@@ -434,22 +515,25 @@
 
 /* Equal string objects return 1 if the two objects are the same from the
  * point of view of a string comparison, otherwise 0 is returned. Note that
  * this function is faster then checking for (compareStringObject(a,b) == 0)
  * because it can perform some more optimization. */
 int equalStringObjects(robj *a, robj *b) {
-    if (a->encoding != REDIS_ENCODING_RAW && b->encoding != REDIS_ENCODING_RAW){
+    if (a->encoding == REDIS_ENCODING_INT &&
+        b->encoding == REDIS_ENCODING_INT){
+        /* If both strings are integer encoded just check if the stored
+         * long is the same. */
         return a->ptr == b->ptr;
     } else {
         return compareStringObjects(a,b) == 0;
     }
 }
 
 size_t stringObjectLen(robj *o) {
     redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
-    if (o->encoding == REDIS_ENCODING_RAW) {
+    if (sdsEncodedObject(o)) {
         return sdslen(o->ptr);
     } else {
         char buf[32];
 
         return ll2string(buf,32,(long)o->ptr);
     }
@@ -460,13 +544,13 @@
     char *eptr;
 
     if (o == NULL) {
         value = 0;
     } else {
         redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
-        if (o->encoding == REDIS_ENCODING_RAW) {
+        if (sdsEncodedObject(o)) {
             errno = 0;
             value = strtod(o->ptr, &eptr);
             if (isspace(((char*)o->ptr)[0]) ||
                 eptr[0] != '\0' ||
                 (errno == ERANGE &&
                     (value == HUGE_VAL || value == -HUGE_VAL || value == 0)) ||
@@ -502,13 +586,13 @@
     char *eptr;
 
     if (o == NULL) {
         value = 0;
     } else {
         redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
-        if (o->encoding == REDIS_ENCODING_RAW) {
+        if (sdsEncodedObject(o)) {
             errno = 0;
             value = strtold(o->ptr, &eptr);
             if (isspace(((char*)o->ptr)[0]) || eptr[0] != '\0' ||
                 errno == ERANGE || isnan(value))
                 return REDIS_ERR;
         } else if (o->encoding == REDIS_ENCODING_INT) {
@@ -540,13 +624,13 @@
     char *eptr;
 
     if (o == NULL) {
         value = 0;
     } else {
         redisAssertWithInfo(NULL,o,o->type == REDIS_STRING);
-        if (o->encoding == REDIS_ENCODING_RAW) {
+        if (sdsEncodedObject(o)) {
             errno = 0;
             value = strtoll(o->ptr, &eptr, 10);
             if (isspace(((char*)o->ptr)[0]) || eptr[0] != '\0' ||
                 errno == ERANGE)
                 return REDIS_ERR;
         } else if (o->encoding == REDIS_ENCODING_INT) {
@@ -595,23 +679,25 @@
     case REDIS_ENCODING_INT: return "int";
     case REDIS_ENCODING_HT: return "hashtable";
     case REDIS_ENCODING_LINKEDLIST: return "linkedlist";
     case REDIS_ENCODING_ZIPLIST: return "ziplist";
     case REDIS_ENCODING_INTSET: return "intset";
     case REDIS_ENCODING_SKIPLIST: return "skiplist";
+    case REDIS_ENCODING_EMBSTR: return "embstr";
     default: return "unknown";
     }
 }
 
-/* Given an object returns the min number of seconds the object was never
+/* Given an object returns the min number of milliseconds the object was never
  * requested, using an approximated LRU algorithm. */
-unsigned long estimateObjectIdleTime(robj *o) {
-    if (server.lruclock >= o->lru) {
-        return (server.lruclock - o->lru) * REDIS_LRU_CLOCK_RESOLUTION;
+unsigned long long estimateObjectIdleTime(robj *o) {
+    unsigned long long lruclock = LRU_CLOCK();
+    if (lruclock >= o->lru) {
+        return (lruclock - o->lru) * REDIS_LRU_CLOCK_RESOLUTION;
     } else {
-        return ((REDIS_LRU_CLOCK_MAX - o->lru) + server.lruclock) *
+        return (lruclock + (REDIS_LRU_CLOCK_MAX - o->lru)) *
                     REDIS_LRU_CLOCK_RESOLUTION;
     }
 }
 
 /* This is a helper function for the OBJECT command. We need to lookup keys
  * without any modification of LRU or other parameters. */
@@ -642,12 +728,12 @@
         if ((o = objectCommandLookupOrReply(c,c->argv[2],shared.nullbulk))
                 == NULL) return;
         addReplyBulkCString(c,strEncoding(o->encoding));
     } else if (!strcasecmp(c->argv[1]->ptr,"idletime") && c->argc == 3) {
         if ((o = objectCommandLookupOrReply(c,c->argv[2],shared.nullbulk))
                 == NULL) return;
-        addReplyLongLong(c,estimateObjectIdleTime(o));
+        addReplyLongLong(c,estimateObjectIdleTime(o)/1000);
     } else {
         addReplyError(c,"Syntax error. Try OBJECT (refcount|encoding|idletime)");
     }
 }
 
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/object.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/object.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pqsort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pqsort.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c	2015-04-01 22:01:44.000000000 +0800
@@ -53,13 +53,13 @@
            listLength(c->pubsub_patterns);
 }
 
 /* Subscribe a client to a channel. Returns 1 if the operation succeeded, or
  * 0 if the client was already subscribed to that channel. */
 int pubsubSubscribeChannel(redisClient *c, robj *channel) {
-    struct dictEntry *de;
+    dictEntry *de;
     list *clients = NULL;
     int retval = 0;
 
     /* Add the channel to the client -> channels hash table */
     if (dictAdd(c->pubsub_channels,channel,NULL) == DICT_OK) {
         retval = 1;
@@ -83,13 +83,13 @@
     return retval;
 }
 
 /* Unsubscribe a client from a channel. Returns 1 if the operation succeeded, or
  * 0 if the client was not subscribed to the specified channel. */
 int pubsubUnsubscribeChannel(redisClient *c, robj *channel, int notify) {
-    struct dictEntry *de;
+    dictEntry *de;
     list *clients;
     listNode *ln;
     int retval = 0;
 
     /* Remove the channel from the client -> channels hash table */
     incrRefCount(channel); /* channel may be just a pointer to the same object
@@ -221,13 +221,13 @@
     return count;
 }
 
 /* Publish a message */
 int pubsubPublishMessage(robj *channel, robj *message) {
     int receivers = 0;
-    struct dictEntry *de;
+    dictEntry *de;
     listNode *ln;
     listIter li;
 
     /* Send to clients listening for that channel */
     de = dictFind(server.pubsub_channels,channel);
     if (de) {
@@ -313,13 +313,16 @@
     }
     if (clientSubscriptionsCount(c) == 0) c->flags &= ~REDIS_PUBSUB;
 }
 
 void publishCommand(redisClient *c) {
     int receivers = pubsubPublishMessage(c->argv[1],c->argv[2]);
-    forceCommandPropagation(c,REDIS_PROPAGATE_REPL);
+    if (server.cluster_enabled)
+        clusterPropagatePublish(c->argv[1],c->argv[2]);
+    else
+        forceCommandPropagation(c,REDIS_PROPAGATE_REPL);
     addReplyLongLong(c,receivers);
 }
 
 /* PUBSUB command for Pub/Sub introspection. */
 void pubsubCommand(redisClient *c) {
     if (!strcasecmp(c->argv[1]->ptr,"channels") &&
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/pubsub.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/pubsub.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rand.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rand.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c	2015-04-01 22:01:44.000000000 +0800
@@ -322,21 +322,21 @@
 int rdbSaveStringObject(rio *rdb, robj *obj) {
     /* Avoid to decode the object, then encode it again, if the
      * object is already integer encoded. */
     if (obj->encoding == REDIS_ENCODING_INT) {
         return rdbSaveLongLongAsStringObject(rdb,(long)obj->ptr);
     } else {
-        redisAssertWithInfo(NULL,obj,obj->encoding == REDIS_ENCODING_RAW);
+        redisAssertWithInfo(NULL,obj,sdsEncodedObject(obj));
         return rdbSaveRawString(rdb,obj->ptr,sdslen(obj->ptr));
     }
 }
 
 robj *rdbGenericLoadStringObject(rio *rdb, int encode) {
     int isencoded;
     uint32_t len;
-    sds val;
+    robj *o;
 
     len = rdbLoadLen(rdb,&isencoded);
     if (isencoded) {
         switch(len) {
         case REDIS_RDB_ENC_INT8:
         case REDIS_RDB_ENC_INT16:
@@ -347,18 +347,19 @@
         default:
             redisPanic("Unknown RDB encoding type");
         }
     }
 
     if (len == REDIS_RDB_LENERR) return NULL;
-    val = sdsnewlen(NULL,len);
-    if (len && rioRead(rdb,val,len) == 0) {
-        sdsfree(val);
+    o = encode ? createStringObject(NULL,len) :
+                 createRawStringObject(NULL,len);
+    if (len && rioRead(rdb,o->ptr,len) == 0) {
+        decrRefCount(o);
         return NULL;
     }
-    return createObject(REDIS_STRING,val);
+    return o;
 }
 
 robj *rdbLoadStringObject(rio *rdb) {
     return rdbGenericLoadStringObject(rdb,0);
 }
 
@@ -751,15 +752,15 @@
     server.dirty = 0;
     server.lastsave = time(NULL);
     server.lastbgsave_status = REDIS_OK;
     return REDIS_OK;
 
 werr:
-    redisLog(REDIS_WARNING,"Write error saving DB on disk: %s", strerror(errno));
     fclose(fp);
     unlink(tmpfile);
+    redisLog(REDIS_WARNING,"Write error saving DB on disk: %s", strerror(errno));
     return REDIS_ERR;
 }
 
 int rdbSaveBackground(char *filename) {
     pid_t childpid;
     long long start;
@@ -841,13 +842,13 @@
         while(len--) {
             if ((ele = rdbLoadEncodedStringObject(rdb)) == NULL) return NULL;
 
             /* If we are using a ziplist and the value is too big, convert
              * the object to a real list. */
             if (o->encoding == REDIS_ENCODING_ZIPLIST &&
-                ele->encoding == REDIS_ENCODING_RAW &&
+                sdsEncodedObject(ele) &&
                 sdslen(ele->ptr) > server.list_max_ziplist_value)
                     listTypeConvert(o,REDIS_ENCODING_LINKEDLIST);
 
             if (o->encoding == REDIS_ENCODING_ZIPLIST) {
                 dec = getDecodedObject(ele);
                 o->ptr = ziplistPush(o->ptr,dec->ptr,sdslen(dec->ptr),REDIS_TAIL);
@@ -887,13 +888,13 @@
                     setTypeConvert(o,REDIS_ENCODING_HT);
                     dictExpand(o->ptr,len);
                 }
             }
 
             /* This will also be called when the set was just converted
-             * to regular hash table encoded set */
+             * to a regular hash table encoded set */
             if (o->encoding == REDIS_ENCODING_HT) {
                 dictAdd((dict*)o->ptr,ele,NULL);
             } else {
                 decrRefCount(ele);
             }
         }
@@ -915,15 +916,14 @@
 
             if ((ele = rdbLoadEncodedStringObject(rdb)) == NULL) return NULL;
             ele = tryObjectEncoding(ele);
             if (rdbLoadDoubleValue(rdb,&score) == -1) return NULL;
 
             /* Don't care about integer-encoded strings. */
-            if (ele->encoding == REDIS_ENCODING_RAW &&
-                sdslen(ele->ptr) > maxelelen)
-                    maxelelen = sdslen(ele->ptr);
+            if (sdsEncodedObject(ele) && sdslen(ele->ptr) > maxelelen)
+                maxelelen = sdslen(ele->ptr);
 
             znode = zslInsert(zs->zsl,score,ele);
             dictAdd(zs->dict,ele,&znode->score);
             incrRefCount(ele); /* added to skiplist */
         }
 
@@ -949,16 +949,16 @@
             robj *field, *value;
 
             len--;
             /* Load raw strings */
             field = rdbLoadStringObject(rdb);
             if (field == NULL) return NULL;
-            redisAssert(field->encoding == REDIS_ENCODING_RAW);
+            redisAssert(sdsEncodedObject(field));
             value = rdbLoadStringObject(rdb);
             if (value == NULL) return NULL;
-            redisAssert(field->encoding == REDIS_ENCODING_RAW);
+            redisAssert(sdsEncodedObject(value));
 
             /* Add pair to ziplist */
             o->ptr = ziplistPush(o->ptr, field->ptr, sdslen(field->ptr), ZIPLIST_TAIL);
             o->ptr = ziplistPush(o->ptr, value->ptr, sdslen(value->ptr), ZIPLIST_TAIL);
             /* Convert to hash table if size threshold is exceeded */
             if (sdslen(field->ptr) > server.hash_max_ziplist_value ||
@@ -1417,13 +1417,13 @@
     while((ln = listNext(&li))) {
         redisClient *slave = ln->value;
 
         if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START) {
             clientids[numfds] = slave->id;
             fds[numfds++] = slave->fd;
-            replicationSetupSlaveForFullResync(slave,getPsyncInitialOffset());
+            slave->replstate = REDIS_REPL_WAIT_BGSAVE_END;
             /* Put the socket in non-blocking mode to simplify RDB transfer.
              * We'll restore it when the children returns (since duped socket
              * will share the O_NONBLOCK attribute with the parent). */
             anetBlock(NULL,slave->fd);
             anetSendTimeout(NULL,slave->fd,server.repl_timeout*1000);
         }
@@ -1495,49 +1495,33 @@
             zfree(msg);
         }
         zfree(clientids);
         exitFromChild((retval == REDIS_OK) ? 0 : 1);
     } else {
         /* Parent */
+        zfree(clientids); /* Not used by parent. Free ASAP. */
         server.stat_fork_time = ustime()-start;
         server.stat_fork_rate = (double) zmalloc_used_memory() * 1000000 / server.stat_fork_time / (1024*1024*1024); /* GB per second. */
         latencyAddSampleIfNeeded("fork",server.stat_fork_time/1000);
         if (childpid == -1) {
             redisLog(REDIS_WARNING,"Can't save in background: fork: %s",
                 strerror(errno));
-
-            /* Undo the state change. The caller will perform cleanup on
-             * all the slaves in BGSAVE_START state, but an early call to
-             * replicationSetupSlaveForFullResync() turned it into BGSAVE_END */
-            listRewind(server.slaves,&li);
-            while((ln = listNext(&li))) {
-                redisClient *slave = ln->value;
-                int j;
-
-                for (j = 0; j < numfds; j++) {
-                    if (slave->id == clientids[j]) {
-                        slave->replstate = REDIS_REPL_WAIT_BGSAVE_START;
-                        break;
-                    }
-                }
-            }
+            zfree(fds);
             close(pipefds[0]);
             close(pipefds[1]);
-        } else {
-            redisLog(REDIS_NOTICE,"Background RDB transfer started by pid %d",
-                childpid);
-            server.rdb_save_time_start = time(NULL);
-            server.rdb_child_pid = childpid;
-            server.rdb_child_type = REDIS_RDB_CHILD_TYPE_SOCKET;
-            updateDictResizePolicy();
+            return REDIS_ERR;
         }
-        zfree(clientids);
+        redisLog(REDIS_NOTICE,"Background RDB transfer started by pid %d",childpid);
+        server.rdb_save_time_start = time(NULL);
+        server.rdb_child_pid = childpid;
+        server.rdb_child_type = REDIS_RDB_CHILD_TYPE_SOCKET;
+        updateDictResizePolicy();
         zfree(fds);
-        return (childpid == -1) ? REDIS_ERR : REDIS_OK;
+        return REDIS_OK;
     }
-    return REDIS_OK; /* Unreached. */
+    return REDIS_OK; /* unreached */
 }
 
 void saveCommand(redisClient *c) {
     if (server.rdb_child_pid != -1) {
         addReplyError(c,"Background save already in progress");
         return;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rdb.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rdb.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-benchmark.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-benchmark.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c	2015-04-01 22:01:44.000000000 +0800
@@ -25,12 +25,13 @@
  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
 #include "redis.h"
+#include "cluster.h"
 #include "slowlog.h"
 #include "bio.h"
 #include "latency.h"
 
 #include <time.h>
 #include <signal.h>
@@ -109,12 +110,14 @@
  *    is deterministic.
  * l: Allow command while loading the database.
  * t: Allow command while a slave has stale data but is not allowed to
  *    server this data. Normally no command is accepted in this condition
  *    but just a few.
  * M: Do not automatically propagate the command on MONITOR.
+ * k: Perform an implicit ASKING for this command, so the command will be
+ *    accepted in cluster mode if the slot is marked as 'importing'.
  * F: Fast command: O(1) or O(log(N)) command that should never delay
  *    its execution as long as the kernel scheduler is giving us time.
  *    Note that commands that may trigger a DEL as a side effect (like SET)
  *    are not fast commands.
  */
 struct redisCommand redisCommandTable[] = {
@@ -234,13 +237,13 @@
     {"discard",discardCommand,1,"rsF",0,NULL,0,0,0,0,0},
     {"sync",syncCommand,1,"ars",0,NULL,0,0,0,0,0},
     {"psync",syncCommand,3,"ars",0,NULL,0,0,0,0,0},
     {"replconf",replconfCommand,-1,"arslt",0,NULL,0,0,0,0,0},
     {"flushdb",flushdbCommand,1,"w",0,NULL,0,0,0,0,0},
     {"flushall",flushallCommand,1,"w",0,NULL,0,0,0,0,0},
-    {"sort",sortCommand,-2,"wm",0,NULL,1,1,1,0,0},
+    {"sort",sortCommand,-2,"wm",0,sortGetKeys,1,1,1,0,0},
     {"info",infoCommand,-1,"rlt",0,NULL,0,0,0,0,0},
     {"monitor",monitorCommand,1,"ars",0,NULL,0,0,0,0,0},
     {"ttl",ttlCommand,2,"rF",0,NULL,1,1,1,0,0},
     {"pttl",pttlCommand,2,"rF",0,NULL,1,1,1,0,0},
     {"persist",persistCommand,2,"wF",0,NULL,1,1,1,0,0},
     {"slaveof",slaveofCommand,3,"ast",0,NULL,0,0,0,0,0},
@@ -252,34 +255,42 @@
     {"psubscribe",psubscribeCommand,-2,"rpslt",0,NULL,0,0,0,0,0},
     {"punsubscribe",punsubscribeCommand,-1,"rpslt",0,NULL,0,0,0,0,0},
     {"publish",publishCommand,3,"pltrF",0,NULL,0,0,0,0,0},
     {"pubsub",pubsubCommand,-2,"pltrR",0,NULL,0,0,0,0,0},
     {"watch",watchCommand,-2,"rsF",0,NULL,1,-1,1,0,0},
     {"unwatch",unwatchCommand,1,"rsF",0,NULL,0,0,0,0,0},
-    {"restore",restoreCommand,4,"wm",0,NULL,1,1,1,0,0},
-    {"migrate",migrateCommand,6,"w",0,NULL,0,0,0,0,0},
+    {"cluster",clusterCommand,-2,"ar",0,NULL,0,0,0,0,0},
+    {"restore",restoreCommand,-4,"wm",0,NULL,1,1,1,0,0},
+    {"restore-asking",restoreCommand,-4,"wmk",0,NULL,1,1,1,0,0},
+    {"migrate",migrateCommand,-6,"w",0,NULL,0,0,0,0,0},
+    {"asking",askingCommand,1,"r",0,NULL,0,0,0,0,0},
+    {"readonly",readonlyCommand,1,"rF",0,NULL,0,0,0,0,0},
+    {"readwrite",readwriteCommand,1,"rF",0,NULL,0,0,0,0,0},
     {"dump",dumpCommand,2,"r",0,NULL,1,1,1,0,0},
     {"object",objectCommand,3,"r",0,NULL,2,2,2,0,0},
     {"client",clientCommand,-2,"rs",0,NULL,0,0,0,0,0},
-    {"eval",evalCommand,-3,"s",0,zunionInterGetKeys,0,0,0,0,0},
-    {"evalsha",evalShaCommand,-3,"s",0,zunionInterGetKeys,0,0,0,0,0},
+    {"eval",evalCommand,-3,"s",0,evalGetKeys,0,0,0,0,0},
+    {"evalsha",evalShaCommand,-3,"s",0,evalGetKeys,0,0,0,0,0},
     {"slowlog",slowlogCommand,-2,"r",0,NULL,0,0,0,0,0},
     {"script",scriptCommand,-2,"rs",0,NULL,0,0,0,0,0},
     {"time",timeCommand,1,"rRF",0,NULL,0,0,0,0,0},
     {"bitop",bitopCommand,-4,"wm",0,NULL,2,-1,1,0,0},
     {"bitcount",bitcountCommand,-2,"r",0,NULL,1,1,1,0,0},
     {"bitpos",bitposCommand,-3,"r",0,NULL,1,1,1,0,0},
+    {"wait",waitCommand,3,"rs",0,NULL,0,0,0,0,0},
     {"command",commandCommand,0,"rlt",0,NULL,0,0,0,0,0},
     {"pfselftest",pfselftestCommand,1,"r",0,NULL,0,0,0,0,0},
     {"pfadd",pfaddCommand,-2,"wmF",0,NULL,1,1,1,0,0},
-    {"pfcount",pfcountCommand,-2,"r",0,NULL,1,-1,1,0,0},
+    {"pfcount",pfcountCommand,-2,"r",0,NULL,1,1,1,0,0},
     {"pfmerge",pfmergeCommand,-2,"wm",0,NULL,1,-1,1,0,0},
     {"pfdebug",pfdebugCommand,-3,"w",0,NULL,0,0,0,0,0},
     {"latency",latencyCommand,-2,"arslt",0,NULL,0,0,0,0,0}
 };
 
+struct evictionPoolEntry *evictionPoolAlloc(void);
+
 /*============================ Utility functions ============================ */
 
 /* Low level logging. To use only for very big messages, otherwise
  * redisLog() is to prefer. */
 void redisLogRaw(int level, const char *msg) {
     const int syslogLevelMap[] = { LOG_DEBUG, LOG_INFO, LOG_NOTICE, LOG_WARNING };
@@ -297,17 +308,27 @@
 
     if (rawmode) {
         fprintf(fp,"%s",msg);
     } else {
         int off;
         struct timeval tv;
+        int role_char;
+        pid_t pid = getpid();
 
         gettimeofday(&tv,NULL);
         off = strftime(buf,sizeof(buf),"%d %b %H:%M:%S.",localtime(&tv.tv_sec));
         snprintf(buf+off,sizeof(buf)-off,"%03d",(int)tv.tv_usec/1000);
-        fprintf(fp,"[%d] %s %c %s\n",(int)getpid(),buf,c[level],msg);
+        if (server.sentinel_mode) {
+            role_char = 'X'; /* Sentinel. */
+        } else if (pid != server.pid) {
+            role_char = 'C'; /* RDB / AOF writing child. */
+        } else {
+            role_char = (server.masterhost ? 'S':'M'); /* Slave or Master. */
+        }
+        fprintf(fp,"%d:%c %s %c %s\n",
+            (int)getpid(),role_char, buf,c[level],msg);
     }
     fflush(fp);
 
     if (!log_to_stdout) fclose(fp);
     if (server.syslog_enabled) syslog(syslogLevelMap[level], "%s", msg);
 }
@@ -342,15 +363,14 @@
     if ((level&0xff) < server.verbosity || (log_to_stdout && server.daemonize))
         return;
     fd = log_to_stdout ? STDOUT_FILENO :
                          open(server.logfile, O_APPEND|O_CREAT|O_WRONLY, 0644);
     if (fd == -1) return;
     ll2string(buf,sizeof(buf),getpid());
-    if (write(fd,"[",1) == -1) goto err;
     if (write(fd,buf,strlen(buf)) == -1) goto err;
-    if (write(fd," | signal handler] (",20) == -1) goto err;
+    if (write(fd,":signal-handler (",17) == -1) goto err;
     ll2string(buf,sizeof(buf),time(NULL));
     if (write(fd,buf,strlen(buf)) == -1) goto err;
     if (write(fd,") ",2) == -1) goto err;
     if (write(fd,msg,strlen(msg)) == -1) goto err;
     if (write(fd,"\n",1) == -1) goto err;
 err:
@@ -478,13 +498,13 @@
     return cmp;
 }
 
 unsigned int dictEncObjHash(const void *key) {
     robj *o = (robj*) key;
 
-    if (o->encoding == REDIS_ENCODING_RAW) {
+    if (sdsEncodedObject(o)) {
         return dictGenHashFunction(o->ptr, sdslen((sds)o->ptr));
     } else {
         if (o->encoding == REDIS_ENCODING_INT) {
             char buf[32];
             int len;
 
@@ -580,12 +600,45 @@
     NULL,                       /* val dup */
     dictObjKeyCompare,          /* key compare */
     dictRedisObjectDestructor,  /* key destructor */
     dictListDestructor          /* val destructor */
 };
 
+/* Cluster nodes hash table, mapping nodes addresses 1.2.3.4:6379 to
+ * clusterNode structures. */
+dictType clusterNodesDictType = {
+    dictSdsHash,                /* hash function */
+    NULL,                       /* key dup */
+    NULL,                       /* val dup */
+    dictSdsKeyCompare,          /* key compare */
+    dictSdsDestructor,          /* key destructor */
+    NULL                        /* val destructor */
+};
+
+/* Cluster re-addition blacklist. This maps node IDs to the time
+ * we can re-add this node. The goal is to avoid readding a removed
+ * node for some time. */
+dictType clusterNodesBlackListDictType = {
+    dictSdsCaseHash,            /* hash function */
+    NULL,                       /* key dup */
+    NULL,                       /* val dup */
+    dictSdsKeyCaseCompare,      /* key compare */
+    dictSdsDestructor,          /* key destructor */
+    NULL                        /* val destructor */
+};
+
+/* Migrate cache dict type. */
+dictType migrateCacheDictType = {
+    dictSdsHash,                /* hash function */
+    NULL,                       /* key dup */
+    NULL,                       /* val dup */
+    dictSdsKeyCompare,          /* key compare */
+    dictSdsDestructor,          /* key destructor */
+    NULL                        /* val destructor */
+};
+
 /* Replication cached script dict (server.repl_scriptcache_dict).
  * Keys are sds SHA1 strings, while values are not used at all in the current
  * implementation. */
 dictType replScriptCacheDictType = {
     dictSdsCaseHash,            /* hash function */
     NULL,                       /* key dup */
@@ -657,13 +710,13 @@
  * 1 is returned. Otherwise no operation is performed and 0 is returned.
  *
  * When a key is expired, server.stat_expiredkeys is incremented.
  *
  * The parameter 'now' is the current time in milliseconds as is passed
  * to the function to avoid too many gettimeofday() syscalls. */
-int activeExpireCycleTryExpire(redisDb *db, struct dictEntry *de, long long now) {
+int activeExpireCycleTryExpire(redisDb *db, dictEntry *de, long long now) {
     long long t = dictGetSignedIntegerVal(de);
     if (now > t) {
         sds key = dictGetKey(de);
         robj *keyobj = createStringObject(key,sdslen(key));
 
         propagateExpire(db,keyobj);
@@ -815,18 +868,16 @@
             /* We don't repeat the cycle if there are less than 25% of keys
              * found expired in the current DB. */
         } while (expired > ACTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP/4);
     }
 }
 
-void updateLRUClock(void) {
-    server.lruclock = (server.unixtime/REDIS_LRU_CLOCK_RESOLUTION) &
-                                                REDIS_LRU_CLOCK_MAX;
+unsigned int getLRUClock(void) {
+    return (mstime()/REDIS_LRU_CLOCK_RESOLUTION) & REDIS_LRU_CLOCK_MAX;
 }
 
-
 /* Add a sample to the operations per second array of samples. */
 void trackInstantaneousMetric(int metric, long long current_reading) {
     long long t = mstime() - server.inst_metric[metric].last_sample_time;
     long long ops = current_reading -
                     server.inst_metric[metric].last_sample_count;
     long long ops_sec;
@@ -863,15 +914,26 @@
         (now - c->lastinteraction > server.maxidletime))
     {
         redisLog(REDIS_VERBOSE,"Closing idle client");
         freeClient(c);
         return 1;
     } else if (c->flags & REDIS_BLOCKED) {
-        if (c->bpop.timeout != 0 && c->bpop.timeout < now) {
-            addReply(c,shared.nullmultibulk);
-            unblockClientWaitingData(c);
+        /* Blocked OPS timeout is handled with milliseconds resolution.
+         * However note that the actual resolution is limited by
+         * server.hz. */
+        mstime_t now_ms = mstime();
+
+        if (c->bpop.timeout != 0 && c->bpop.timeout < now_ms) {
+            /* Handle blocking operation specific timeout. */
+            replyToBlockedClientTimedOut(c);
+            unblockClient(c);
+        } else if (server.cluster_enabled) {
+            /* Cluster: handle unblock & redirect of clients blocked
+             * into keys no longer served by this server. */
+            if (clusterRedirectBlockedClientIfNeeded(c))
+                unblockClient(c);
         }
     }
     return 0;
 }
 
 /* The client query buffer is an sds.c string that can end with a lot of
@@ -1020,25 +1082,24 @@
         trackInstantaneousMetric(REDIS_METRIC_NET_INPUT,
                 server.stat_net_input_bytes);
         trackInstantaneousMetric(REDIS_METRIC_NET_OUTPUT,
                 server.stat_net_output_bytes);
     }
 
-    /* We have just 22 bits per object for LRU information.
-     * So we use an (eventually wrapping) LRU clock with 10 seconds resolution.
-     * 2^22 bits with 10 seconds resolution is more or less 1.5 years.
+    /* We have just REDIS_LRU_BITS bits per object for LRU information.
+     * So we use an (eventually wrapping) LRU clock.
      *
-     * Note that even if this will wrap after 1.5 years it's not a problem,
-     * everything will still work but just some object will appear younger
-     * to Redis. But for this to happen a given object should never be touched
-     * for 1.5 years.
+     * Note that even if the counter wraps it's not a big problem,
+     * everything will still work but some object will appear younger
+     * to Redis. However for this to happen a given object should never be
+     * touched for all the time needed to the counter to wrap, which is
+     * not likely.
      *
      * Note that you can change the resolution altering the
-     * REDIS_LRU_CLOCK_RESOLUTION define.
-     */
-    updateLRUClock();
+     * REDIS_LRU_CLOCK_RESOLUTION define. */
+    server.lruclock = getLRUClock();
 
     /* Record the max memory used since the server was started. */
     if (zmalloc_used_memory() > server.stat_peak_memory)
         server.stat_peak_memory = zmalloc_used_memory();
 
     /* Sample the RSS here since this is a relatively slow call. */
@@ -1167,53 +1228,78 @@
             flushAppendOnlyFile(0);
     }
 
     /* Close clients that need to be closed asynchronous */
     freeClientsInAsyncFreeQueue();
 
+    /* Clear the paused clients flag if needed. */
+    clientsArePaused(); /* Don't check return value, just use the side effect. */
+
     /* Replication cron function -- used to reconnect to master and
      * to detect transfer failures. */
     run_with_period(1000) replicationCron();
 
-    /* Run the sentinel timer if we are in sentinel mode. */
+    /* Run the Redis Cluster cron. */
+    run_with_period(100) {
+        if (server.cluster_enabled) clusterCron();
+    }
+
+    /* Run the Sentinel timer if we are in sentinel mode. */
     run_with_period(100) {
         if (server.sentinel_mode) sentinelTimer();
     }
 
+    /* Cleanup expired MIGRATE cached sockets. */
+    run_with_period(1000) {
+        migrateCloseTimedoutSockets();
+    }
+
     server.cronloops++;
     return 1000/server.hz;
 }
 
 /* This function gets called every time Redis is entering the
  * main loop of the event driven library, that is, before to sleep
  * for ready file descriptors. */
 void beforeSleep(struct aeEventLoop *eventLoop) {
     REDIS_NOTUSED(eventLoop);
-    listNode *ln;
-    redisClient *c;
+
+    /* Call the Redis Cluster before sleep function. Note that this function
+     * may change the state of Redis Cluster (from ok to fail or vice versa),
+     * so it's a good idea to call it before serving the unblocked clients
+     * later in this function. */
+    if (server.cluster_enabled) clusterBeforeSleep();
 
     /* Run a fast expire cycle (the called function will return
      * ASAP if a fast cycle is not needed). */
     if (server.active_expire_enabled && server.masterhost == NULL)
         activeExpireCycle(ACTIVE_EXPIRE_CYCLE_FAST);
 
+    /* Send all the slaves an ACK request if at least one client blocked
+     * during the previous event loop iteration. */
+    if (server.get_ack_from_slaves) {
+        robj *argv[3];
+
+        argv[0] = createStringObject("REPLCONF",8);
+        argv[1] = createStringObject("GETACK",6);
+        argv[2] = createStringObject("*",1); /* Not used argument. */
+        replicationFeedSlaves(server.slaves, server.slaveseldb, argv, 3);
+        decrRefCount(argv[0]);
+        decrRefCount(argv[1]);
+        decrRefCount(argv[2]);
+        server.get_ack_from_slaves = 0;
+    }
+
+    /* Unblock all the clients blocked for synchronous replication
+     * in WAIT. */
+    if (listLength(server.clients_waiting_acks))
+        processClientsWaitingReplicas();
+
     /* Try to process pending commands for clients that were just unblocked. */
-    while (listLength(server.unblocked_clients)) {
-        ln = listFirst(server.unblocked_clients);
-        redisAssert(ln != NULL);
-        c = ln->value;
-        listDelNode(server.unblocked_clients,ln);
-        c->flags &= ~REDIS_UNBLOCKED;
-
-        /* Process remaining data in the input buffer. */
-        if (c->querybuf && sdslen(c->querybuf) > 0) {
-            server.current_client = c;
-            processInputBuffer(c);
-            server.current_client = NULL;
-        }
-    }
+    if (listLength(server.unblocked_clients))
+        processUnblockedClients();
 
     /* Write the AOF buffer on disk */
     flushAppendOnlyFile(0);
 }
 
 /* =========================== Server initialization ======================== */
@@ -1261,12 +1347,14 @@
     shared.oomerr = createObject(REDIS_STRING,sdsnew(
         "-OOM command not allowed when used memory > 'maxmemory'.\r\n"));
     shared.execaborterr = createObject(REDIS_STRING,sdsnew(
         "-EXECABORT Transaction discarded because of previous errors.\r\n"));
     shared.noreplicaserr = createObject(REDIS_STRING,sdsnew(
         "-NOREPLICAS Not enough good slaves to write.\r\n"));
+    shared.busykeyerr = createObject(REDIS_STRING,sdsnew(
+        "-BUSYKEY Target key name already exists.\r\n"));
     shared.space = createObject(REDIS_STRING,sdsnew(" "));
     shared.colon = createObject(REDIS_STRING,sdsnew(":"));
     shared.plus = createObject(REDIS_STRING,sdsnew("+"));
 
     for (j = 0; j < REDIS_SHARED_SELECT_CMDS; j++) {
         char dictid_str[64];
@@ -1375,20 +1463,27 @@
     server.hll_sparse_max_bytes = REDIS_DEFAULT_HLL_SPARSE_MAX_BYTES;
     server.shutdown_asap = 0;
     server.repl_ping_slave_period = REDIS_REPL_PING_SLAVE_PERIOD;
     server.repl_timeout = REDIS_REPL_TIMEOUT;
     server.repl_min_slaves_to_write = REDIS_DEFAULT_MIN_SLAVES_TO_WRITE;
     server.repl_min_slaves_max_lag = REDIS_DEFAULT_MIN_SLAVES_MAX_LAG;
+    server.cluster_enabled = 0;
+    server.cluster_node_timeout = REDIS_CLUSTER_DEFAULT_NODE_TIMEOUT;
+    server.cluster_migration_barrier = REDIS_CLUSTER_DEFAULT_MIGRATION_BARRIER;
+    server.cluster_slave_validity_factor = REDIS_CLUSTER_DEFAULT_SLAVE_VALIDITY;
+    server.cluster_require_full_coverage = REDIS_CLUSTER_DEFAULT_REQUIRE_FULL_COVERAGE;
+    server.cluster_configfile = zstrdup(REDIS_DEFAULT_CLUSTER_CONFIG_FILE);
     server.lua_caller = NULL;
     server.lua_time_limit = REDIS_LUA_TIME_LIMIT;
     server.lua_client = NULL;
     server.lua_timedout = 0;
+    server.migrate_cached_sockets = dictCreate(&migrateCacheDictType,NULL);
     server.next_client_id = 1; /* Client IDs, start from 1 .*/
     server.loading_process_events_interval_bytes = (1024*1024*2);
 
-    updateLRUClock();
+    server.lruclock = getLRUClock();
     resetServerSaveParams();
 
     appendServerSaveParams(60*60,1);  /* save after 1 hour and 1 change */
     appendServerSaveParams(300,100);  /* save after 5 minutes and 100 changes */
     appendServerSaveParams(60,10000); /* save after 1 minute and 10000 changes */
     /* Replication related */
@@ -1606,13 +1701,13 @@
                 server.tcp_backlog);
         }
         if (fds[*count] == ANET_ERR) {
             redisLog(REDIS_WARNING,
                 "Creating Server TCP listening socket %s:%d: %s",
                 server.bindaddr[j] ? server.bindaddr[j] : "*",
-                server.port, server.neterr);
+                port, server.neterr);
             return REDIS_ERR;
         }
         anetNonBlock(NULL,fds[*count]);
         (*count)++;
     }
     return REDIS_OK;
@@ -1642,13 +1737,12 @@
         server.inst_metric[j].last_sample_count = 0;
         memset(server.inst_metric[j].samples,0,
             sizeof(server.inst_metric[j].samples));
     }
     server.stat_net_input_bytes = 0;
     server.stat_net_output_bytes = 0;
-    server.aof_delayed_fsync = 0;
 }
 
 void initServer(void) {
     int j;
 
     signal(SIGHUP, SIG_IGN);
@@ -1657,20 +1751,24 @@
 
     if (server.syslog_enabled) {
         openlog(server.syslog_ident, LOG_PID | LOG_NDELAY | LOG_NOWAIT,
             server.syslog_facility);
     }
 
+    server.pid = getpid();
     server.current_client = NULL;
     server.clients = listCreate();
     server.clients_to_close = listCreate();
     server.slaves = listCreate();
     server.monitors = listCreate();
     server.slaveseldb = -1; /* Force to emit the first SELECT command. */
     server.unblocked_clients = listCreate();
     server.ready_keys = listCreate();
+    server.clients_waiting_acks = listCreate();
+    server.get_ack_from_slaves = 0;
+    server.clients_paused = 0;
 
     createSharedObjects();
     adjustOpenFilesLimit();
     server.el = aeCreateEventLoop(server.maxclients+REDIS_EVENTLOOP_FDSET_INCR);
     server.db = zmalloc(sizeof(redisDb)*server.dbnum);
 
@@ -1682,13 +1780,13 @@
     /* Open the listening Unix domain socket. */
     if (server.unixsocket != NULL) {
         unlink(server.unixsocket); /* don't care if this fails */
         server.sofd = anetUnixServer(server.neterr,server.unixsocket,
             server.unixsocketperm, server.tcp_backlog);
         if (server.sofd == ANET_ERR) {
-            redisLog(REDIS_WARNING, "Opening socket: %s", server.neterr);
+            redisLog(REDIS_WARNING, "Opening Unix socket: %s", server.neterr);
             exit(1);
         }
         anetNonBlock(NULL,server.sofd);
     }
 
     /* Abort if there are no listening sockets at all. */
@@ -1701,12 +1799,13 @@
     for (j = 0; j < server.dbnum; j++) {
         server.db[j].dict = dictCreate(&dbDictType,NULL);
         server.db[j].expires = dictCreate(&keyptrDictType,NULL);
         server.db[j].blocking_keys = dictCreate(&keylistDictType,NULL);
         server.db[j].ready_keys = dictCreate(&setDictType,NULL);
         server.db[j].watched_keys = dictCreate(&keylistDictType,NULL);
+        server.db[j].eviction_pool = evictionPoolAlloc();
         server.db[j].id = j;
         server.db[j].avg_ttl = 0;
     }
     server.pubsub_channels = dictCreate(&keylistDictType,NULL);
     server.pubsub_patterns = listCreate();
     listSetFreeMethod(server.pubsub_patterns,freePubsubPattern);
@@ -1771,12 +1870,13 @@
     if (server.arch_bits == 32 && server.maxmemory == 0) {
         redisLog(REDIS_WARNING,"Warning: 32 bit instance detected but no memory limit set. Setting 3 GB maxmemory limit with 'noeviction' policy now.");
         server.maxmemory = 3072LL*(1024*1024); /* 3 GB */
         server.maxmemory_policy = REDIS_MAXMEMORY_NO_EVICTION;
     }
 
+    if (server.cluster_enabled) clusterInit();
     replicationScriptCacheInit();
     scriptingInit();
     slowlogInit();
     latencyMonitorInit();
     bioInit();
 }
@@ -1802,12 +1902,13 @@
             case 's': c->flags |= REDIS_CMD_NOSCRIPT; break;
             case 'R': c->flags |= REDIS_CMD_RANDOM; break;
             case 'S': c->flags |= REDIS_CMD_SORT_FOR_SCRIPT; break;
             case 'l': c->flags |= REDIS_CMD_LOADING; break;
             case 't': c->flags |= REDIS_CMD_STALE; break;
             case 'M': c->flags |= REDIS_CMD_SKIP_MONITOR; break;
+            case 'k': c->flags |= REDIS_CMD_ASKING; break;
             case 'F': c->flags |= REDIS_CMD_FAST; break;
             default: redisPanic("Unsupported command flag"); break;
             }
             f++;
         }
 
@@ -2054,25 +2155,46 @@
     {
         flagTransaction(c);
         addReply(c,shared.noautherr);
         return REDIS_OK;
     }
 
+    /* If cluster is enabled perform the cluster redirection here.
+     * However we don't perform the redirection if:
+     * 1) The sender of this command is our master.
+     * 2) The command has no key arguments. */
+    if (server.cluster_enabled &&
+        !(c->flags & REDIS_MASTER) &&
+        !(c->flags & REDIS_LUA_CLIENT &&
+          server.lua_caller->flags & REDIS_MASTER) &&
+        !(c->cmd->getkeys_proc == NULL && c->cmd->firstkey == 0))
+    {
+        int hashslot;
+
+        if (server.cluster->state != REDIS_CLUSTER_OK) {
+            flagTransaction(c);
+            clusterRedirectClient(c,NULL,0,REDIS_CLUSTER_REDIR_DOWN_STATE);
+            return REDIS_OK;
+        } else {
+            int error_code;
+            clusterNode *n = getNodeByQuery(c,c->cmd,c->argv,c->argc,&hashslot,&error_code);
+            if (n == NULL || n != server.cluster->myself) {
+                flagTransaction(c);
+                clusterRedirectClient(c,n,hashslot,error_code);
+                return REDIS_OK;
+            }
+        }
+    }
+
     /* Handle the maxmemory directive.
      *
      * First we try to free some memory if possible (if there are volatile
      * keys in the dataset). If there are not the only thing we can do
      * is returning an error. */
     if (server.maxmemory) {
         int retval = freeMemoryIfNeeded();
-        /* freeMemoryIfNeeded may flush slave output buffers. This may result
-         * into a slave, that may be the active client, to be freed. */
-        if (server.current_client == NULL) return REDIS_ERR;
-
-        /* It was impossible to free enough memory, and the command the client
-         * is trying to execute is denied during OOM conditions? Error. */
         if ((c->cmd->flags & REDIS_CMD_DENYOOM) && retval == REDIS_ERR) {
             flagTransaction(c);
             addReply(c, shared.oomerr);
             return REDIS_OK;
         }
     }
@@ -2172,12 +2294,13 @@
         c->cmd->proc != multiCommand && c->cmd->proc != watchCommand)
     {
         queueMultiCommand(c);
         addReply(c,shared.queued);
     } else {
         call(c,REDIS_CALL_FULL);
+        c->woff = server.master_repl_offset;
         if (listLength(server.ready_keys))
             handleClientsBlockedOnLists();
     }
     return REDIS_OK;
 }
 
@@ -2187,12 +2310,14 @@
  * unlink_unix_socket is non-zero. */
 void closeListeningSockets(int unlink_unix_socket) {
     int j;
 
     for (j = 0; j < server.ipfd_count; j++) close(server.ipfd[j]);
     if (server.sofd != -1) close(server.sofd);
+    if (server.cluster_enabled)
+        for (j = 0; j < server.cfd_count; j++) close(server.cfd[j]);
     if (unlink_unix_socket && server.unixsocket) {
         redisLog(REDIS_NOTICE,"Removing the unix socket file.");
         unlink(server.unixsocket); /* don't care if this fails */
     }
 }
 
@@ -2377,12 +2502,13 @@
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_NOSCRIPT, "noscript");
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_RANDOM, "random");
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_SORT_FOR_SCRIPT,"sort_for_script");
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_LOADING, "loading");
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_STALE, "stale");
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_SKIP_MONITOR, "skip_monitor");
+        flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_ASKING, "asking");
         flagcount += addReplyCommandFlag(c,cmd,REDIS_CMD_FAST, "fast");
         if (cmd->getkeys_proc) {
             addReplyStatus(c, "movablekeys");
             flagcount += 1;
         }
         setDeferredMultiBulkLength(c, flaglen, flagcount);
@@ -2410,12 +2536,30 @@
         addReplyMultiBulkLen(c, c->argc-2);
         for (i = 2; i < c->argc; i++) {
             addReplyCommand(c, dictFetchValue(server.commands, c->argv[i]->ptr));
         }
     } else if (!strcasecmp(c->argv[1]->ptr, "count") && c->argc == 2) {
         addReplyLongLong(c, dictSize(server.commands));
+    } else if (!strcasecmp(c->argv[1]->ptr,"getkeys") && c->argc >= 3) {
+        struct redisCommand *cmd = lookupCommand(c->argv[2]->ptr);
+        int *keys, numkeys, j;
+
+        if (!cmd) {
+            addReplyErrorFormat(c,"Invalid command specified");
+            return;
+        } else if ((cmd->arity > 0 && cmd->arity != c->argc-2) ||
+                   ((c->argc-2) < -cmd->arity))
+        {
+            addReplyError(c,"Invalid number of arguments specified for command");
+            return;
+        }
+
+        keys = getKeysFromCommand(cmd,c->argv+2,c->argc-2,&numkeys);
+        addReplyMultiBulkLen(c,numkeys);
+        for (j = 0; j < numkeys; j++) addReplyBulk(c,c->argv[keys[j]+2]);
+        getKeysFreeResult(keys);
     } else {
         addReplyError(c, "Unknown subcommand or wrong number of arguments.");
         return;
     }
 }
 
@@ -2472,13 +2616,14 @@
     /* Server */
     if (allsections || defsections || !strcasecmp(section,"server")) {
         static int call_uname = 1;
         static struct utsname name;
         char *mode;
 
-        if (server.sentinel_mode) mode = "sentinel";
+        if (server.cluster_enabled) mode = "cluster";
+        else if (server.sentinel_mode) mode = "sentinel";
         else mode = "standalone";
 
         if (sections++) info = sdscat(info,"\r\n");
 
         if (call_uname) {
             /* Uname can be slow and is always the same output. Cache it. */
@@ -2684,13 +2829,14 @@
             "expired_keys:%lld\r\n"
             "evicted_keys:%lld\r\n"
             "keyspace_hits:%lld\r\n"
             "keyspace_misses:%lld\r\n"
             "pubsub_channels:%ld\r\n"
             "pubsub_patterns:%lu\r\n"
-            "latest_fork_usec:%lld\r\n",
+            "latest_fork_usec:%lld\r\n"
+            "migrate_cached_sockets:%ld\r\n",
             server.stat_numconnections,
             server.stat_numcommands,
             getInstantaneousMetric(REDIS_METRIC_COMMAND),
             server.stat_net_input_bytes,
             server.stat_net_output_bytes,
             (float)getInstantaneousMetric(REDIS_METRIC_NET_INPUT)/1024,
@@ -2702,13 +2848,14 @@
             server.stat_expiredkeys,
             server.stat_evictedkeys,
             server.stat_keyspace_hits,
             server.stat_keyspace_misses,
             dictSize(server.pubsub_channels),
             listLength(server.pubsub_patterns),
-            server.stat_fork_time);
+            server.stat_fork_time,
+            dictSize(server.migrate_cached_sockets));
     }
 
     /* Replication */
     if (allsections || defsections || !strcasecmp(section,"replication")) {
         if (sections++) info = sdscat(info,"\r\n");
         info = sdscatprintf(info,
@@ -2854,12 +3001,21 @@
                 "cmdstat_%s:calls=%lld,usec=%lld,usec_per_call=%.2f\r\n",
                 c->name, c->calls, c->microseconds,
                 (c->calls == 0) ? 0 : ((float)c->microseconds/c->calls));
         }
     }
 
+    /* Cluster */
+    if (allsections || defsections || !strcasecmp(section,"cluster")) {
+        if (sections++) info = sdscat(info,"\r\n");
+        info = sdscatprintf(info,
+        "# Cluster\r\n"
+        "cluster_enabled:%d\r\n",
+        server.cluster_enabled);
+    }
+
     /* Key space */
     if (allsections || defsections || !strcasecmp(section,"keyspace")) {
         if (sections++) info = sdscat(info,"\r\n");
         info = sdscatprintf(info, "# Keyspace\r\n");
         for (j = 0; j < server.dbnum; j++) {
             long long keys, vkeys;
@@ -2898,31 +3054,142 @@
     listAddNodeTail(server.monitors,c);
     addReply(c,shared.ok);
 }
 
 /* ============================ Maxmemory directive  ======================== */
 
-/* This function gets called when 'maxmemory' is set on the config file to limit
- * the max memory used by the server, before processing a command.
+/* freeMemoryIfNeeded() gets called when 'maxmemory' is set on the config
+ * file to limit the max memory used by the server, before processing a
+ * command.
  *
  * The goal of the function is to free enough memory to keep Redis under the
  * configured memory limit.
  *
  * The function starts calculating how many bytes should be freed to keep
  * Redis under the limit, and enters a loop selecting the best keys to
  * evict accordingly to the configured policy.
  *
  * If all the bytes needed to return back under the limit were freed the
  * function returns REDIS_OK, otherwise REDIS_ERR is returned, and the caller
  * should block the execution of commands that will result in more memory
  * used by the server.
- */
+ *
+ * ------------------------------------------------------------------------
+ *
+ * LRU approximation algorithm
+ *
+ * Redis uses an approximation of the LRU algorithm that runs in constant
+ * memory. Every time there is a key to expire, we sample N keys (with
+ * N very small, usually in around 5) to populate a pool of best keys to
+ * evict of M keys (the pool size is defined by REDIS_EVICTION_POOL_SIZE).
+ *
+ * The N keys sampled are added in the pool of good keys to expire (the one
+ * with an old access time) if they are better than one of the current keys
+ * in the pool.
+ *
+ * After the pool is populated, the best key we have in the pool is expired.
+ * However note that we don't remove keys from the pool when they are deleted
+ * so the pool may contain keys that no longer exist.
+ *
+ * When we try to evict a key, and all the entries in the pool don't exist
+ * we populate it again. This time we'll be sure that the pool has at least
+ * one key that can be evicted, if there is at least one key that can be
+ * evicted in the whole database. */
+
+/* Create a new eviction pool. */
+struct evictionPoolEntry *evictionPoolAlloc(void) {
+    struct evictionPoolEntry *ep;
+    int j;
+
+    ep = zmalloc(sizeof(*ep)*REDIS_EVICTION_POOL_SIZE);
+    for (j = 0; j < REDIS_EVICTION_POOL_SIZE; j++) {
+        ep[j].idle = 0;
+        ep[j].key = NULL;
+    }
+    return ep;
+}
+
+/* This is an helper function for freeMemoryIfNeeded(), it is used in order
+ * to populate the evictionPool with a few entries every time we want to
+ * expire a key. Keys with idle time smaller than one of the current
+ * keys are added. Keys are always added if there are free entries.
+ *
+ * We insert keys on place in ascending order, so keys with the smaller
+ * idle time are on the left, and keys with the higher idle time on the
+ * right. */
+
+#define EVICTION_SAMPLES_ARRAY_SIZE 16
+void evictionPoolPopulate(dict *sampledict, dict *keydict, struct evictionPoolEntry *pool) {
+    int j, k, count;
+    dictEntry *_samples[EVICTION_SAMPLES_ARRAY_SIZE];
+    dictEntry **samples;
+
+    /* Try to use a static buffer: this function is a big hit...
+     * Note: it was actually measured that this helps. */
+    if (server.maxmemory_samples <= EVICTION_SAMPLES_ARRAY_SIZE) {
+        samples = _samples;
+    } else {
+        samples = zmalloc(sizeof(samples[0])*server.maxmemory_samples);
+    }
+
+    count = dictGetSomeKeys(sampledict,samples,server.maxmemory_samples);
+    for (j = 0; j < count; j++) {
+        unsigned long long idle;
+        sds key;
+        robj *o;
+        dictEntry *de;
+
+        de = samples[j];
+        key = dictGetKey(de);
+        /* If the dictionary we are sampling from is not the main
+         * dictionary (but the expires one) we need to lookup the key
+         * again in the key dictionary to obtain the value object. */
+        if (sampledict != keydict) de = dictFind(keydict, key);
+        o = dictGetVal(de);
+        idle = estimateObjectIdleTime(o);
+
+        /* Insert the element inside the pool.
+         * First, find the first empty bucket or the first populated
+         * bucket that has an idle time smaller than our idle time. */
+        k = 0;
+        while (k < REDIS_EVICTION_POOL_SIZE &&
+               pool[k].key &&
+               pool[k].idle < idle) k++;
+        if (k == 0 && pool[REDIS_EVICTION_POOL_SIZE-1].key != NULL) {
+            /* Can't insert if the element is < the worst element we have
+             * and there are no empty buckets. */
+            continue;
+        } else if (k < REDIS_EVICTION_POOL_SIZE && pool[k].key == NULL) {
+            /* Inserting into empty position. No setup needed before insert. */
+        } else {
+            /* Inserting in the middle. Now k points to the first element
+             * greater than the element to insert.  */
+            if (pool[REDIS_EVICTION_POOL_SIZE-1].key == NULL) {
+                /* Free space on the right? Insert at k shifting
+                 * all the elements from k to end to the right. */
+                memmove(pool+k+1,pool+k,
+                    sizeof(pool[0])*(REDIS_EVICTION_POOL_SIZE-k-1));
+            } else {
+                /* No free space on right? Insert at k-1 */
+                k--;
+                /* Shift all elements on the left of k (included) to the
+                 * left, so we discard the element with smaller idle time. */
+                sdsfree(pool[0].key);
+                memmove(pool,pool+1,sizeof(pool[0])*k);
+            }
+        }
+        pool[k].key = sdsdup(key);
+        pool[k].idle = idle;
+    }
+    if (samples != _samples) zfree(samples);
+}
+
 int freeMemoryIfNeeded(void) {
     size_t mem_used, mem_tofree, mem_freed;
     int slaves = listLength(server.slaves);
-    mstime_t latency;
+    mstime_t latency, eviction_latency;
 
     /* Remove the size of slaves output buffers and AOF buffer from the
      * count of used memory. */
     mem_used = zmalloc_used_memory();
     if (slaves) {
         listIter li;
@@ -2956,13 +3223,13 @@
     while (mem_freed < mem_tofree) {
         int j, k, keys_freed = 0;
 
         for (j = 0; j < server.dbnum; j++) {
             long bestval = 0; /* just to prevent warning */
             sds bestkey = NULL;
-            struct dictEntry *de;
+            dictEntry *de;
             redisDb *db = server.db+j;
             dict *dict;
 
             if (server.maxmemory_policy == REDIS_MAXMEMORY_ALLKEYS_LRU ||
                 server.maxmemory_policy == REDIS_MAXMEMORY_ALLKEYS_RANDOM)
             {
@@ -2981,30 +3248,40 @@
             }
 
             /* volatile-lru and allkeys-lru policy */
             else if (server.maxmemory_policy == REDIS_MAXMEMORY_ALLKEYS_LRU ||
                 server.maxmemory_policy == REDIS_MAXMEMORY_VOLATILE_LRU)
             {
-                for (k = 0; k < server.maxmemory_samples; k++) {
-                    sds thiskey;
-                    long thisval;
-                    robj *o;
+                struct evictionPoolEntry *pool = db->eviction_pool;
 
-                    de = dictGetRandomKey(dict);
-                    thiskey = dictGetKey(de);
-                    /* When policy is volatile-lru we need an additional lookup
-                     * to locate the real key, as dict is set to db->expires. */
-                    if (server.maxmemory_policy == REDIS_MAXMEMORY_VOLATILE_LRU)
-                        de = dictFind(db->dict, thiskey);
-                    o = dictGetVal(de);
-                    thisval = estimateObjectIdleTime(o);
-
-                    /* Higher idle time is better candidate for deletion */
-                    if (bestkey == NULL || thisval > bestval) {
-                        bestkey = thiskey;
-                        bestval = thisval;
+                while(bestkey == NULL) {
+                    evictionPoolPopulate(dict, db->dict, db->eviction_pool);
+                    /* Go backward from best to worst element to evict. */
+                    for (k = REDIS_EVICTION_POOL_SIZE-1; k >= 0; k--) {
+                        if (pool[k].key == NULL) continue;
+                        de = dictFind(dict,pool[k].key);
+
+                        /* Remove the entry from the pool. */
+                        sdsfree(pool[k].key);
+                        /* Shift all elements on its right to left. */
+                        memmove(pool+k,pool+k+1,
+                            sizeof(pool[0])*(REDIS_EVICTION_POOL_SIZE-k-1));
+                        /* Clear the element on the right which is empty
+                         * since we shifted one position to the left.  */
+                        pool[REDIS_EVICTION_POOL_SIZE-1].key = NULL;
+                        pool[REDIS_EVICTION_POOL_SIZE-1].idle = 0;
+
+                        /* If the key exists, is our pick. Otherwise it is
+                         * a ghost and we need to try the next element. */
+                        if (de) {
+                            bestkey = dictGetKey(de);
+                            break;
+                        } else {
+                            /* Ghost... */
+                            continue;
+                        }
                     }
                 }
             }
 
             /* volatile-ttl */
             else if (server.maxmemory_policy == REDIS_MAXMEMORY_VOLATILE_TTL) {
@@ -3037,13 +3314,17 @@
                  * we are freeing removing the key, but we can't account for
                  * that otherwise we would never exit the loop.
                  *
                  * AOF and Output buffer memory will be freed eventually so
                  * we only care about memory used by the key space. */
                 delta = (long long) zmalloc_used_memory();
+                latencyStartMonitor(eviction_latency);
                 dbDelete(db,keyobj);
+                latencyEndMonitor(eviction_latency);
+                latencyAddSampleIfNeeded("eviction-del",eviction_latency);
+                latencyRemoveNestedEvent(latency,eviction_latency);
                 delta -= (long long) zmalloc_used_memory();
                 mem_freed += delta;
                 server.stat_evictedkeys++;
                 notifyKeyspaceEvent(REDIS_NOTIFY_EVICTED, "evicted",
                     keyobj, db->id);
                 decrRefCount(keyobj);
@@ -3148,15 +3429,17 @@
     exit(1);
 }
 
 void redisAsciiArt(void) {
 #include "asciilogo.h"
     char *buf = zmalloc(1024*16);
-    char *mode = "stand alone";
+    char *mode;
 
-    if (server.sentinel_mode) mode = "sentinel";
+    if (server.cluster_enabled) mode = "cluster";
+    else if (server.sentinel_mode) mode = "sentinel";
+    else mode = "standalone";
 
     if (server.syslog_enabled) {
         redisLog(REDIS_NOTICE,
             "Redis %s (%s/%d) %s bit, %s mode, port %d, pid %ld ready to start.",
             REDIS_VERSION,
             redisGitSHA1(),
@@ -3267,16 +3550,21 @@
         allocation_size);
     redisPanic("Redis aborting for OUT OF MEMORY");
 }
 
 void redisSetProcTitle(char *title) {
 #ifdef USE_SETPROCTITLE
-    setproctitle("%s %s:%d",
+    char *server_mode = "";
+    if (server.cluster_enabled) server_mode = " [cluster]";
+    else if (server.sentinel_mode) server_mode = " [sentinel]";
+
+    setproctitle("%s %s:%d%s",
         title,
         server.bindaddr_count ? server.bindaddr[0] : "*",
-        server.port);
+        server.port,
+        server_mode);
 #else
     REDIS_NOTUSED(title);
 #endif
 }
 
 int main(int argc, char **argv) {
@@ -3369,12 +3657,20 @@
         redisLog(REDIS_WARNING,"Server started, Redis version " REDIS_VERSION);
     #ifdef __linux__
         linuxMemoryWarnings();
     #endif
         checkTcpBacklogSettings();
         loadDataFromDisk();
+        if (server.cluster_enabled) {
+            if (verifyClusterConfigWithData() == REDIS_ERR) {
+                redisLog(REDIS_WARNING,
+                    "You can't have keys in a DB different than DB 0 when in "
+                    "Cluster mode. Exiting.");
+                exit(1);
+            }
+        }
         if (server.ipfd_count > 0)
             redisLog(REDIS_NOTICE,"The server is now ready to accept connections on port %d", server.port);
         if (server.sofd > 0)
             redisLog(REDIS_NOTICE,"The server is now ready to accept connections at %s", server.unixsocket);
     } else {
         sentinelIsRunning();
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-aof.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-aof.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-check-dump.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-check-dump.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c	2015-04-01 22:01:44.000000000 +0800
@@ -61,12 +61,23 @@
 #define OUTPUT_CSV 2
 #define REDIS_CLI_KEEPALIVE_INTERVAL 15 /* seconds */
 #define REDIS_CLI_DEFAULT_PIPE_TIMEOUT 30 /* seconds */
 #define REDIS_CLI_HISTFILE_ENV "REDISCLI_HISTFILE"
 #define REDIS_CLI_HISTFILE_DEFAULT ".rediscli_history"
 
+/* --latency-dist palettes. */
+int spectrum_palette_color_size = 19;
+int spectrum_palette_color[] = {0,233,234,235,237,239,241,243,245,247,144,143,142,184,226,214,208,202,196};
+
+int spectrum_palette_mono_size = 13;
+int spectrum_palette_mono[] = {0,233,234,235,237,239,241,243,245,247,249,251,253};
+
+/* The actual palette in use. */
+int *spectrum_palette;
+int spectrum_palette_size;
+
 static redisContext *context;
 static struct config {
     char *hostip;
     int hostport;
     char *hostsocket;
     long repeat;
@@ -329,26 +340,26 @@
 
 /*------------------------------------------------------------------------------
  * Networking / parsing
  *--------------------------------------------------------------------------- */
 
 /* Send AUTH command to the server */
-static int cliAuth() {
+static int cliAuth(void) {
     redisReply *reply;
     if (config.auth == NULL) return REDIS_OK;
 
     reply = redisCommand(context,"AUTH %s",config.auth);
     if (reply != NULL) {
         freeReplyObject(reply);
         return REDIS_OK;
     }
     return REDIS_ERR;
 }
 
 /* Send SELECT dbnum to the server */
-static int cliSelect() {
+static int cliSelect(void) {
     redisReply *reply;
     if (config.dbnum == 0) return REDIS_OK;
 
     reply = redisCommand(context,"SELECT %d",config.dbnum);
     if (reply != NULL) {
         int result = REDIS_OK;
@@ -593,12 +604,13 @@
         config.hostip = sdsnew(p+1);
         config.hostport = atoi(s+1);
         if (config.interactive)
             printf("-> Redirected to slot [%d] located at %s:%d\n",
                 slot, config.hostip, config.hostport);
         config.cluster_reissue_command = 1;
+        cliRefreshPrompt();
     }
 
     if (output) {
         if (output_raw_strings) {
             out = cliFormatReplyRaw(reply);
         } else {
@@ -774,12 +786,15 @@
         } else if (!strcmp(argv[i],"--csv")) {
             config.output = OUTPUT_CSV;
         } else if (!strcmp(argv[i],"--latency")) {
             config.latency_mode = 1;
         } else if (!strcmp(argv[i],"--latency-dist")) {
             config.latency_dist_mode = 1;
+        } else if (!strcmp(argv[i],"--mono")) {
+            spectrum_palette = spectrum_palette_mono;
+            spectrum_palette_size = spectrum_palette_mono_size;
         } else if (!strcmp(argv[i],"--latency-history")) {
             config.latency_mode = 1;
             config.latency_history = 1;
         } else if (!strcmp(argv[i],"--lru-test") && !lastarg) {
             config.lru_test_mode = 1;
             config.lru_test_sample_size = strtoll(argv[++i],NULL,10);
@@ -916,12 +931,39 @@
   for(j = 0; j < count; j++)
     sds[j] = sdsnew(args[j]);
 
   return sds;
 }
 
+static int issueCommandRepeat(int argc, char **argv, long repeat) {
+    while (1) {
+        config.cluster_reissue_command = 0;
+        if (cliSendCommand(argc,argv,repeat) != REDIS_OK) {
+            cliConnect(1);
+
+            /* If we still cannot send the command print error.
+             * We'll try to reconnect the next time. */
+            if (cliSendCommand(argc,argv,repeat) != REDIS_OK) {
+                cliPrintContextError();
+                return REDIS_ERR;
+            }
+         }
+         /* Issue the command again if we got redirected in cluster mode */
+         if (config.cluster_mode && config.cluster_reissue_command) {
+            cliConnect(1);
+         } else {
+             break;
+        }
+    }
+    return REDIS_OK;
+}
+
+static int issueCommand(int argc, char **argv) {
+    return issueCommandRepeat(argc, argv, config.repeat);
+}
+
 static void repl(void) {
     sds historyfile = NULL;
     int history = 0;
     char *line;
     int argc;
     sds *argv;
@@ -971,32 +1013,14 @@
                     if (argc > 1 && repeat) {
                         skipargs = 1;
                     } else {
                         repeat = 1;
                     }
 
-                    while (1) {
-                        config.cluster_reissue_command = 0;
-                        if (cliSendCommand(argc-skipargs,argv+skipargs,repeat)
-                            != REDIS_OK)
-                        {
-                            cliConnect(1);
-
-                            /* If we still cannot send the command print error.
-                             * We'll try to reconnect the next time. */
-                            if (cliSendCommand(argc-skipargs,argv+skipargs,repeat)
-                                != REDIS_OK)
-                                cliPrintContextError();
-                        }
-                        /* Issue the command again if we got redirected in cluster mode */
-                        if (config.cluster_mode && config.cluster_reissue_command) {
-                            cliConnect(1);
-                        } else {
-                            break;
-                        }
-                    }
+                    issueCommandRepeat(argc-skipargs, argv+skipargs, repeat);
+
                     elapsed = mstime()-start_time;
                     if (elapsed >= 500) {
                         printf("(%.2fs)\n",(double)elapsed/1000);
                     }
                 }
             }
@@ -1011,16 +1035,15 @@
 
 static int noninteractive(int argc, char **argv) {
     int retval = 0;
     if (config.stdinarg) {
         argv = zrealloc(argv, (argc+1)*sizeof(char*));
         argv[argc] = readArgFromStdin();
-        retval = cliSendCommand(argc+1, argv, config.repeat);
+        retval = issueCommand(argc+1, argv);
     } else {
-        /* stdin is probably a tty, can be tested with S_ISCHR(s.st_mode) */
-        retval = cliSendCommand(argc, argv, config.repeat);
+        retval = issueCommand(argc, argv);
     }
     return retval;
 }
 
 /*------------------------------------------------------------------------------
  * Eval mode
@@ -1058,13 +1081,13 @@
         argv2[j+3-got_comma] = sdsnew(argv[j]);
         if (!got_comma) keys++;
     }
     argv2[2] = sdscatprintf(sdsempty(),"%d",keys);
 
     /* Call it */
-    return cliSendCommand(argc+3-got_comma, argv2, config.repeat);
+    return issueCommand(argc+3-got_comma, argv2);
 }
 
 /*------------------------------------------------------------------------------
  * Latency and latency history modes
  *--------------------------------------------------------------------------- */
 
@@ -1114,19 +1137,12 @@
 
 /*------------------------------------------------------------------------------
  * Latency distribution mode -- requires 256 colors xterm
  *--------------------------------------------------------------------------- */
 
 #define LATENCY_DIST_DEFAULT_INTERVAL 1000 /* milliseconds. */
-#define LATENCY_DIST_MIN_GRAY 233 /* Less than that is too hard to see gray. */
-#define LATENCY_DIST_MAX_GRAY 255
-#define LATENCY_DIST_GRAYS (LATENCY_DIST_MAX_GRAY-LATENCY_DIST_MIN_GRAY+1)
-
-/* Gray palette. */
-int spectrum_palette_size = 24;
-int spectrum_palette[] = {0, 233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255};
 
 /* Structure to store samples distribution. */
 struct distsamples {
     long long max;   /* Max latency to fit into this interval (usec). */
     long long count; /* Number of samples in this interval. */
     int character;   /* Associated character in visualization. */
@@ -1378,13 +1394,12 @@
 }
 
 /*------------------------------------------------------------------------------
  * Bulk import (pipe) mode
  *--------------------------------------------------------------------------- */
 
-#define PIPEMODE_WRITE_LOOP_MAX_BYTES (128*1024)
 static void pipeMode(void) {
     int fd = context->fd;
     long long errors = 0, replies = 0, obuf_len = 0, obuf_pos = 0;
     char ibuf[1024*16], obuf[1024*16]; /* Input and output buffers */
     char aneterr[ANET_ERR_LEN];
     redisReader *reader = redisReaderCreate();
@@ -1455,14 +1470,12 @@
                 }
             } while(reply);
         }
 
         /* Handle the writable state: we can send protocol to the server. */
         if (mask & AE_WRITABLE) {
-            ssize_t loop_nwritten = 0;
-
             while(1) {
                 /* Transfer current buffer to server. */
                 if (obuf_len != 0) {
                     ssize_t nwritten = write(fd,obuf+obuf_pos,obuf_len);
 
                     if (nwritten == -1) {
@@ -1473,13 +1486,12 @@
                         } else {
                             nwritten = 0;
                         }
                     }
                     obuf_len -= nwritten;
                     obuf_pos += nwritten;
-                    loop_nwritten += nwritten;
                     if (obuf_len != 0) break; /* Can't accept more data. */
                 }
                 /* If buffer is empty, load from stdin. */
                 if (obuf_len == 0 && !eof) {
                     ssize_t nread = read(STDIN_FILENO,obuf,sizeof(obuf));
 
@@ -1509,14 +1521,13 @@
                         exit(1);
                     } else {
                         obuf_len = nread;
                         obuf_pos = 0;
                     }
                 }
-                if ((obuf_len == 0 && eof) ||
-                    loop_nwritten > PIPEMODE_WRITE_LOOP_MAX_BYTES) break;
+                if (obuf_len == 0 && eof) break;
             }
         }
 
         /* Handle timeout, that is, we reached EOF, and we are not getting
          * replies from the server for a few seconds, nor the final ECHO is
          * received. */
@@ -1568,13 +1579,13 @@
 
     /* Validate our types are correct */
     assert(reply->element[0]->type == REDIS_REPLY_STRING);
     assert(reply->element[1]->type == REDIS_REPLY_ARRAY);
 
     /* Update iterator */
-    *it = strtoull(reply->element[0]->str, NULL, 10);
+    *it = atoi(reply->element[0]->str);
 
     return reply;
 }
 
 static int getDbSize(void) {
     redisReply *reply;
@@ -1936,23 +1947,27 @@
         sprintf(buf,"%ld",aux);
         printf(" %-12s",buf);
 
         /* Children */
         aux = getLongInfoField(reply->str,"bgsave_in_progress");
         aux |= getLongInfoField(reply->str,"aof_rewrite_in_progress") << 1;
+        aux |= getLongInfoField(reply->str,"loading") << 2;
         switch(aux) {
         case 0: break;
         case 1:
             printf("SAVE");
             break;
         case 2:
             printf("AOF");
             break;
         case 3:
             printf("SAVE+AOF");
             break;
+        case 4:
+            printf("LOAD");
+            break;
         }
 
         printf("\n");
         freeReplyObject(reply);
         usleep(config.interval);
     }
@@ -2187,12 +2202,15 @@
     config.bigkeys = 0;
     config.stdinarg = 0;
     config.auth = NULL;
     config.eval = NULL;
     config.last_cmd_type = -1;
 
+    spectrum_palette = spectrum_palette_color;
+    spectrum_palette_size = spectrum_palette_color_size;
+
     if (!isatty(fileno(stdout)) && (getenv("FAKETTY") == NULL))
         config.output = OUTPUT_RAW;
     else
         config.output = OUTPUT_STANDARD;
     config.mb_delim = sdsnew("\n");
     cliInitHelp();
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-cli.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-cli.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.h	2015-04-01 22:01:44.000000000 +0800
@@ -113,21 +113,21 @@
 #define REDIS_DEFAULT_REPL_DISKLESS_SYNC 0
 #define REDIS_DEFAULT_REPL_DISKLESS_SYNC_DELAY 5
 #define REDIS_DEFAULT_SLAVE_SERVE_STALE_DATA 1
 #define REDIS_DEFAULT_SLAVE_READ_ONLY 1
 #define REDIS_DEFAULT_REPL_DISABLE_TCP_NODELAY 0
 #define REDIS_DEFAULT_MAXMEMORY 0
-#define REDIS_DEFAULT_MAXMEMORY_SAMPLES 3
+#define REDIS_DEFAULT_MAXMEMORY_SAMPLES 5
 #define REDIS_DEFAULT_AOF_FILENAME "appendonly.aof"
 #define REDIS_DEFAULT_AOF_NO_FSYNC_ON_REWRITE 0
 #define REDIS_DEFAULT_AOF_LOAD_TRUNCATED 1
 #define REDIS_DEFAULT_ACTIVE_REHASHING 1
 #define REDIS_DEFAULT_AOF_REWRITE_INCREMENTAL_FSYNC 1
 #define REDIS_DEFAULT_MIN_SLAVES_TO_WRITE 0
 #define REDIS_DEFAULT_MIN_SLAVES_MAX_LAG 10
-#define REDIS_IP_STR_LEN INET6_ADDRSTRLEN
+#define REDIS_IP_STR_LEN 46 /* INET6_ADDRSTRLEN is 46, but we need to be sure */
 #define REDIS_PEER_ID_LEN (REDIS_IP_STR_LEN+32) /* Must be enough for ip:port */
 #define REDIS_BINDADDR_MAX 16
 #define REDIS_MIN_RESERVED_FDS 32
 #define REDIS_DEFAULT_LATENCY_MONITOR_THRESHOLD 0
 
 #define ACTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP 20 /* Loopkups per loop. */
@@ -191,12 +191,13 @@
 #define REDIS_ENCODING_HT 2      /* Encoded as hash table */
 #define REDIS_ENCODING_ZIPMAP 3  /* Encoded as zipmap */
 #define REDIS_ENCODING_LINKEDLIST 4 /* Encoded as regular linked list */
 #define REDIS_ENCODING_ZIPLIST 5 /* Encoded as ziplist */
 #define REDIS_ENCODING_INTSET 6  /* Encoded as intset */
 #define REDIS_ENCODING_SKIPLIST 7  /* Encoded as skiplist */
+#define REDIS_ENCODING_EMBSTR 8  /* Embedded sds string encoding */
 
 /* Defines related to the dump file format. To store 32 bits lengths for short
  * keys requires a lot of space, so we check the most significant 2 bits of
  * the first byte to interpreter the length:
  *
  * 00|000000 => if the two MSB are 00 the len is the 6 bits of this byte
@@ -246,54 +247,45 @@
 #define REDIS_FORCE_AOF (1<<14)   /* Force AOF propagation of current cmd. */
 #define REDIS_FORCE_REPL (1<<15)  /* Force replication of current cmd. */
 #define REDIS_PRE_PSYNC (1<<16)   /* Instance don't understand PSYNC. */
 #define REDIS_READONLY (1<<17)    /* Cluster client is in read-only state. */
 #define REDIS_PUBSUB (1<<18)      /* Client is in Pub/Sub mode. */
 
+/* Client block type (btype field in client structure)
+ * if REDIS_BLOCKED flag is set. */
+#define REDIS_BLOCKED_NONE 0    /* Not blocked, no REDIS_BLOCKED flag set. */
+#define REDIS_BLOCKED_LIST 1    /* BLPOP & co. */
+#define REDIS_BLOCKED_WAIT 2    /* WAIT for synchronous replication. */
+
 /* Client request types */
 #define REDIS_REQ_INLINE 1
 #define REDIS_REQ_MULTIBULK 2
 
 /* Client classes for client limits, currently used only for
  * the max-client-output-buffer limit implementation. */
 #define REDIS_CLIENT_TYPE_NORMAL 0 /* Normal req-reply clients + MONITORs */
 #define REDIS_CLIENT_TYPE_SLAVE 1  /* Slaves. */
 #define REDIS_CLIENT_TYPE_PUBSUB 2 /* Clients subscribed to PubSub channels. */
 #define REDIS_CLIENT_TYPE_COUNT 3
 
-/* Slave replication state. Used in server.repl_state for slaves to remember
- * what to do next. */
+/* Slave replication state - from the point of view of the slave. */
 #define REDIS_REPL_NONE 0 /* No active replication */
 #define REDIS_REPL_CONNECT 1 /* Must connect to master */
 #define REDIS_REPL_CONNECTING 2 /* Connecting to master */
-/* --- Handshake states, must be ordered --- */
 #define REDIS_REPL_RECEIVE_PONG 3 /* Wait for PING reply */
-#define REDIS_REPL_SEND_AUTH 4 /* Send AUTH to master */
-#define REDIS_REPL_RECEIVE_AUTH 5 /* Wait for AUTH reply */
-#define REDIS_REPL_SEND_PORT 6 /* Send REPLCONF listening-port */
-#define REDIS_REPL_RECEIVE_PORT 7 /* Wait for REPLCONF reply */
-#define REDIS_REPL_SEND_CAPA 8 /* Send REPLCONF capa */
-#define REDIS_REPL_RECEIVE_CAPA 9 /* Wait for REPLCONF reply */
-#define REDIS_REPL_SEND_PSYNC 10 /* Send PSYNC */
-#define REDIS_REPL_RECEIVE_PSYNC 11 /* Wait for PSYNC reply */
-/* --- End of handshake states --- */
-#define REDIS_REPL_TRANSFER 12 /* Receiving .rdb from master */
-#define REDIS_REPL_CONNECTED 13 /* Connected to master */
+#define REDIS_REPL_TRANSFER 4 /* Receiving .rdb from master */
+#define REDIS_REPL_CONNECTED 5 /* Connected to master */
 
-/* State of slaves from the POV of the master. Used in client->replstate.
+/* Slave replication state - from the point of view of the master.
  * In SEND_BULK and ONLINE state the slave receives new updates
  * in its output queue. In the WAIT_BGSAVE state instead the server is waiting
  * to start the next background saving in order to send updates to it. */
-#define REDIS_REPL_WAIT_BGSAVE_START 14 /* We need to produce a new RDB file. */
-#define REDIS_REPL_WAIT_BGSAVE_END 15 /* Waiting RDB file creation to finish. */
-#define REDIS_REPL_SEND_BULK 16 /* Sending RDB file to slave. */
-#define REDIS_REPL_ONLINE 17 /* RDB file transmitted, sending just updates. */
-
-/* Slave capabilities. */
-#define SLAVE_CAPA_NONE 0
-#define SLAVE_CAPA_EOF (1<<0)   /* Can parse the RDB EOF streaming format. */
+#define REDIS_REPL_WAIT_BGSAVE_START 6 /* We need to produce a new RDB file. */
+#define REDIS_REPL_WAIT_BGSAVE_END 7 /* Waiting RDB file creation to finish. */
+#define REDIS_REPL_SEND_BULK 8 /* Sending RDB file to slave. */
+#define REDIS_REPL_ONLINE 9 /* RDB file transmitted, sending just updates. */
 
 /* Synchronous read timeout - slave side */
 #define REDIS_REPL_SYNCIO_TIMEOUT 5
 
 /* List related stuff */
 #define REDIS_HEAD 0
@@ -346,13 +338,13 @@
 #define REDIS_MAXMEMORY_VOLATILE_LRU 0
 #define REDIS_MAXMEMORY_VOLATILE_TTL 1
 #define REDIS_MAXMEMORY_VOLATILE_RANDOM 2
 #define REDIS_MAXMEMORY_ALLKEYS_LRU 3
 #define REDIS_MAXMEMORY_ALLKEYS_RANDOM 4
 #define REDIS_MAXMEMORY_NO_EVICTION 5
-#define REDIS_DEFAULT_MAXMEMORY_POLICY REDIS_MAXMEMORY_VOLATILE_LRU
+#define REDIS_DEFAULT_MAXMEMORY_POLICY REDIS_MAXMEMORY_NO_EVICTION
 
 /* Scripting */
 #define REDIS_LUA_TIME_LIMIT 5000 /* milliseconds */
 
 /* Units */
 #define UNIT_SECONDS 0
@@ -413,39 +405,62 @@
 
 /* A redis object, that is a type able to hold a string / list / set */
 
 /* The actual Redis Object */
 #define REDIS_LRU_BITS 24
 #define REDIS_LRU_CLOCK_MAX ((1<<REDIS_LRU_BITS)-1) /* Max value of obj->lru */
-#define REDIS_LRU_CLOCK_RESOLUTION 1 /* LRU clock resolution in seconds */
+#define REDIS_LRU_CLOCK_RESOLUTION 1000 /* LRU clock resolution in ms */
 typedef struct redisObject {
     unsigned type:4;
     unsigned encoding:4;
     unsigned lru:REDIS_LRU_BITS; /* lru time (relative to server.lruclock) */
     int refcount;
     void *ptr;
 } robj;
 
+/* Macro used to obtain the current LRU clock.
+ * If the current resolution is lower than the frequency we refresh the
+ * LRU clock (as it should be in production servers) we return the
+ * precomputed value, otherwise we need to resort to a function call. */
+#define LRU_CLOCK() ((1000/server.hz <= REDIS_LRU_CLOCK_RESOLUTION) ? server.lruclock : getLRUClock())
+
 /* Macro used to initialize a Redis object allocated on the stack.
  * Note that this macro is taken near the structure definition to make sure
  * we'll update it when the structure is changed, to avoid bugs like
  * bug #85 introduced exactly in this way. */
 #define initStaticStringObject(_var,_ptr) do { \
     _var.refcount = 1; \
     _var.type = REDIS_STRING; \
     _var.encoding = REDIS_ENCODING_RAW; \
     _var.ptr = _ptr; \
 } while(0);
 
+/* To improve the quality of the LRU approximation we take a set of keys
+ * that are good candidate for eviction across freeMemoryIfNeeded() calls.
+ *
+ * Entries inside the eviciton pool are taken ordered by idle time, putting
+ * greater idle times to the right (ascending order).
+ *
+ * Empty entries have the key pointer set to NULL. */
+#define REDIS_EVICTION_POOL_SIZE 16
+struct evictionPoolEntry {
+    unsigned long long idle;    /* Object idle time. */
+    sds key;                    /* Key name. */
+};
+
+/* Redis database representation. There are multiple databases identified
+ * by integers from 0 (the default database) up to the max configured
+ * database. The database number is the 'id' field in the structure. */
 typedef struct redisDb {
     dict *dict;                 /* The keyspace for this DB */
     dict *expires;              /* Timeout of keys with a timeout set */
     dict *blocking_keys;        /* Keys with clients waiting for data (BLPOP) */
     dict *ready_keys;           /* Blocked keys that received a PUSH */
     dict *watched_keys;         /* WATCHED keys for MULTI/EXEC CAS */
-    int id;
+    struct evictionPoolEntry *eviction_pool;    /* Eviction pool of keys */
+    int id;                     /* Database ID */
     long long avg_ttl;          /* Average TTL, just for stats */
 } redisDb;
 
 /* Client MULTI/EXEC state */
 typedef struct multiCmd {
     robj **argv;
@@ -457,19 +472,28 @@
     multiCmd *commands;     /* Array of MULTI commands */
     int count;              /* Total number of MULTI commands */
     int minreplicas;        /* MINREPLICAS for synchronous replication */
     time_t minreplicas_timeout; /* MINREPLICAS timeout as unixtime. */
 } multiState;
 
+/* This structure holds the blocking operation state for a client.
+ * The fields used depend on client->btype. */
 typedef struct blockingState {
+    /* Generic fields. */
+    mstime_t timeout;       /* Blocking operation timeout. If UNIX current time
+                             * is > timeout then the operation timed out. */
+
+    /* REDIS_BLOCK_LIST */
     dict *keys;             /* The keys we are waiting to terminate a blocking
                              * operation such as BLPOP. Otherwise NULL. */
-    time_t timeout;         /* Blocking operation timeout. If UNIX current time
-                             * is > timeout then the operation timed out. */
     robj *target;           /* The key that should receive the element,
                              * for BRPOPLPUSH. */
+
+    /* REDIS_BLOCK_WAIT */
+    int numreplicas;        /* Number of replicas we are waiting for ACK. */
+    long long reploffset;   /* Replication offset to reach. */
 } blockingState;
 
 /* The following structure represents a node in the server.ready_keys list,
  * where we accumulate all the keys that had clients blocked with a blocking
  * operation such as B[LR]POP, but received new data in the context of the
  * last executed command.
@@ -516,20 +540,18 @@
     off_t repldboff;        /* replication DB file offset */
     off_t repldbsize;       /* replication DB file size */
     sds replpreamble;       /* replication DB preamble. */
     long long reploff;      /* replication offset if this is our master */
     long long repl_ack_off; /* replication ack offset, if this is a slave */
     long long repl_ack_time;/* replication ack time, if this is a slave */
-    long long psync_initial_offset; /* FULLRESYNC reply offset other slaves
-                                       copying this slave output buffer
-                                       should use. */
     char replrunid[REDIS_RUN_ID_SIZE+1]; /* master run id if this is a master */
     int slave_listening_port; /* As configured with: SLAVECONF listening-port */
-    int slave_capa;         /* Slave capabilities: SLAVE_CAPA_* bitwise OR. */
     multiState mstate;      /* MULTI/EXEC state */
-    blockingState bpop;   /* blocking state */
+    int btype;              /* Type of blocking op if REDIS_BLOCKED. */
+    blockingState bpop;     /* blocking state */
+    long long woff;         /* Last write global replication offset. */
     list *watched_keys;     /* Keys WATCHED for MULTI/EXEC CAS */
     dict *pubsub_channels;  /* channels a client is interested in (SUBSCRIBE) */
     list *pubsub_patterns;  /* patterns a client is interested in (SUBSCRIBE) */
     sds peerid;             /* Cached peer ID. */
 
     /* Response buffer */
@@ -545,13 +567,13 @@
 struct sharedObjectsStruct {
     robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,
     *colon, *nullbulk, *nullmultibulk, *queued,
     *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,
     *outofrangeerr, *noscripterr, *loadingerr, *slowscripterr, *bgsaveerr,
     *masterdownerr, *roslaveerr, *execaborterr, *noautherr, *noreplicaserr,
-    *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,
+    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,
     *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,
     *lpush, *emptyscan, *minstring, *maxstring,
     *select[REDIS_SHARED_SELECT_CMDS],
     *integers[REDIS_SHARED_INTEGERS],
     *mbulkhdr[REDIS_SHARED_BULKHDR_LEN], /* "*<value>\r\n" */
     *bulkhdr[REDIS_SHARED_BULKHDR_LEN];  /* "$<value>\r\n" */
@@ -612,20 +634,23 @@
 } redisOpArray;
 
 /*-----------------------------------------------------------------------------
  * Global server state
  *----------------------------------------------------------------------------*/
 
+struct clusterState;
+
 /* AIX defines hz to __hz, we don't use this define and in order to allow
  * Redis build on AIX we need to undef it. */
 #ifdef _AIX
 #undef hz
 #endif
 
 struct redisServer {
     /* General */
+    pid_t pid;                  /* Main process pid. */
     char *configfile;           /* Absolute config file path, or NULL */
     int hz;                     /* serverCron() calls frequency in hertz */
     redisDb *db;
     dict *commands;             /* Command table */
     dict *orig_commands;        /* Command table before command renaming. */
     aeEventLoop *el;
@@ -645,17 +670,22 @@
     int bindaddr_count;         /* Number of addresses in server.bindaddr[] */
     char *unixsocket;           /* UNIX socket path */
     mode_t unixsocketperm;      /* UNIX socket permission */
     int ipfd[REDIS_BINDADDR_MAX]; /* TCP socket file descriptors */
     int ipfd_count;             /* Used slots in ipfd[] */
     int sofd;                   /* Unix socket file descriptor */
+    int cfd[REDIS_BINDADDR_MAX];/* Cluster bus listening socket */
+    int cfd_count;              /* Used slots in cfd[] */
     list *clients;              /* List of active clients */
     list *clients_to_close;     /* Clients to close asynchronously */
     list *slaves, *monitors;    /* List of slaves and MONITORs */
     redisClient *current_client; /* Current client, only used on crash report */
+    int clients_paused;         /* True if clients are currently paused */
+    mstime_t clients_pause_end_time; /* Time when we undo clients_paused */
     char neterr[ANET_ERR_LEN];   /* Error buffer for anet.c */
+    dict *migrate_cached_sockets;/* MIGRATE cached sockets */
     uint64_t next_client_id;    /* Next client unique ID. Incremental. */
     /* RDB / AOF loading information */
     int loading;                /* We are loading data from disk if true */
     off_t loading_total_bytes;
     off_t loading_loaded_bytes;
     time_t loading_start_time;
@@ -724,12 +754,22 @@
     int aof_lastbgrewrite_status;   /* REDIS_OK or REDIS_ERR */
     unsigned long aof_delayed_fsync;  /* delayed AOF fsync() counter */
     int aof_rewrite_incremental_fsync;/* fsync incrementally while rewriting? */
     int aof_last_write_status;      /* REDIS_OK or REDIS_ERR */
     int aof_last_write_errno;       /* Valid if aof_last_write_status is ERR */
     int aof_load_truncated;         /* Don't stop on unexpected AOF EOF. */
+    /* AOF pipes used to communicate between parent and child during rewrite. */
+    int aof_pipe_write_data_to_child;
+    int aof_pipe_read_data_from_parent;
+    int aof_pipe_write_ack_to_parent;
+    int aof_pipe_read_ack_from_child;
+    int aof_pipe_write_ack_to_child;
+    int aof_pipe_read_ack_from_parent;
+    int aof_stop_sending_diff;     /* If true stop sending accumulated diffs
+                                      to child process. */
+    sds aof_child_diff;             /* AOF diff accumulator child side. */
     /* RDB persistence */
     long long dirty;                /* Changes to DB from the last save */
     long long dirty_before_bgsave;  /* Used to restore dirty on failed BGSAVE */
     pid_t rdb_child_pid;            /* PID of RDB saving child */
     struct saveparam *saveparams;   /* Save points array for RDB */
     int saveparamslen;              /* Number of saving points */
@@ -795,12 +835,15 @@
     char repl_master_runid[REDIS_RUN_ID_SIZE+1];  /* Master run id for PSYNC. */
     long long repl_master_initial_offset;         /* Master PSYNC offset. */
     /* Replication script cache. */
     dict *repl_scriptcache_dict;        /* SHA1 all slaves are aware of. */
     list *repl_scriptcache_fifo;        /* First in, first out LRU eviction. */
     unsigned int repl_scriptcache_size; /* Max number of elements. */
+    /* Synchronous replication. */
+    list *clients_waiting_acks;         /* Clients waiting in WAIT command. */
+    int get_ack_from_slaves;            /* If true we send REPLCONF GETACK. */
     /* Limits */
     unsigned int maxclients;            /* Max number of simultaneous clients */
     unsigned long long maxmemory;   /* Max number of memory bytes to use */
     int maxmemory_policy;           /* Policy for key eviction */
     int maxmemory_samples;          /* Pricision of random sampling */
     /* Blocked clients */
@@ -826,12 +869,21 @@
     long long mstime;       /* Like 'unixtime' but with milliseconds resolution. */
     /* Pubsub */
     dict *pubsub_channels;  /* Map channels to list of subscribed clients */
     list *pubsub_patterns;  /* A list of pubsub_patterns */
     int notify_keyspace_events; /* Events to propagate via Pub/Sub. This is an
                                    xor of REDIS_NOTIFY... flags. */
+    /* Cluster */
+    int cluster_enabled;      /* Is cluster enabled? */
+    mstime_t cluster_node_timeout; /* Cluster node timeout. */
+    char *cluster_configfile; /* Cluster auto-generated config file name. */
+    struct clusterState *cluster;  /* State of the cluster */
+    int cluster_migration_barrier; /* Cluster replicas migration barrier. */
+    int cluster_slave_validity_factor; /* Slave max data age for failover. */
+    int cluster_require_full_coverage; /* If true, put the cluster down if
+                                          there is at least an uncovered slot. */
     /* Scripting */
     lua_State *lua; /* The Lua interpreter. We use just one for all clients */
     redisClient *lua_client;   /* The "fake client" to query Redis from Lua */
     redisClient *lua_caller;   /* The client running EVAL right now, or NULL */
     dict *lua_scripts;         /* A dictionary of SHA1 -> Lua scripts */
     mstime_t lua_time_limit;  /* Script timeout in milliseconds */
@@ -857,20 +909,21 @@
 typedef struct pubsubPattern {
     redisClient *client;
     robj *pattern;
 } pubsubPattern;
 
 typedef void redisCommandProc(redisClient *c);
-typedef int *redisGetKeysProc(struct redisCommand *cmd, robj **argv, int argc, int *numkeys, int flags);
+typedef int *redisGetKeysProc(struct redisCommand *cmd, robj **argv, int argc, int *numkeys);
 struct redisCommand {
     char *name;
     redisCommandProc *proc;
     int arity;
     char *sflags; /* Flags as string representation, one char per flag. */
     int flags;    /* The actual flags, obtained from the 'sflags' field. */
-    /* Use a function to determine keys arguments in a command line. */
+    /* Use a function to determine keys arguments in a command line.
+     * Used for Redis Cluster redirect. */
     redisGetKeysProc *getkeys_proc;
     /* What keys should be loaded in background when calling this command? */
     int firstkey; /* The first argument that's a key (0 = no keys) */
     int lastkey;  /* The last argument that's a key */
     int keystep;  /* The step between first and last key */
     long long microseconds, calls;
@@ -940,12 +993,14 @@
  *----------------------------------------------------------------------------*/
 
 extern struct redisServer server;
 extern struct sharedObjectsStruct shared;
 extern dictType setDictType;
 extern dictType zsetDictType;
+extern dictType clusterNodesDictType;
+extern dictType clusterNodesBlackListDictType;
 extern dictType dbDictType;
 extern dictType shaScriptObjectDictType;
 extern double R_Zero, R_PosInf, R_NegInf, R_Nan;
 extern dictType hashDictType;
 extern dictType replScriptCacheDictType;
 
@@ -1002,12 +1057,15 @@
 void asyncCloseClientOnOutputBufferLimitReached(redisClient *c);
 int getClientType(redisClient *c);
 int getClientTypeByName(char *name);
 char *getClientTypeName(int class);
 void flushSlavesOutputBuffers(void);
 void disconnectSlaves(void);
+int listenToPort(int port, int *fds, int *count);
+void pauseClients(mstime_t duration);
+int clientsArePaused(void);
 int processEventsWhileBlocked(void);
 
 #ifdef __GNUC__
 void addReplyErrorFormat(redisClient *c, const char *fmt, ...)
     __attribute__((format(printf, 2, 3)));
 void addReplyStatusFormat(redisClient *c, const char *fmt, ...)
@@ -1054,12 +1112,14 @@
 void freeListObject(robj *o);
 void freeSetObject(robj *o);
 void freeZsetObject(robj *o);
 void freeHashObject(robj *o);
 robj *createObject(int type, void *ptr);
 robj *createStringObject(char *ptr, size_t len);
+robj *createRawStringObject(char *ptr, size_t len);
+robj *createEmbeddedStringObject(char *ptr, size_t len);
 robj *dupStringObject(robj *o);
 int isObjectRepresentableAsLongLong(robj *o, long long *llongval);
 robj *tryObjectEncoding(robj *o);
 robj *getDecodedObject(robj *o);
 size_t stringObjectLen(robj *o);
 robj *createStringObjectFromLongLong(long long value);
@@ -1079,13 +1139,14 @@
 int getLongDoubleFromObject(robj *o, long double *target);
 int getLongDoubleFromObjectOrReply(redisClient *c, robj *o, long double *target, const char *msg);
 char *strEncoding(int encoding);
 int compareStringObjects(robj *a, robj *b);
 int collateStringObjects(robj *a, robj *b);
 int equalStringObjects(robj *a, robj *b);
-unsigned long estimateObjectIdleTime(robj *o);
+unsigned long long estimateObjectIdleTime(robj *o);
+#define sdsEncodedObject(objptr) (objptr->encoding == REDIS_ENCODING_RAW || objptr->encoding == REDIS_ENCODING_EMBSTR)
 
 /* Synchronous I/O with timeout */
 ssize_t syncWrite(int fd, char *ptr, ssize_t size, long long timeout);
 ssize_t syncRead(int fd, char *ptr, ssize_t size, long long timeout);
 ssize_t syncReadLine(int fd, char *ptr, ssize_t size, long long timeout);
 
@@ -1094,23 +1155,25 @@
 void replicationFeedMonitors(redisClient *c, list *monitors, int dictid, robj **argv, int argc);
 void updateSlavesWaitingBgsave(int bgsaveerr, int type);
 void replicationCron(void);
 void replicationHandleMasterDisconnection(void);
 void replicationCacheMaster(redisClient *c);
 void resizeReplicationBacklog(long long newsize);
+void replicationSetMaster(char *ip, int port);
+void replicationUnsetMaster(void);
 void refreshGoodSlavesCount(void);
 void replicationScriptCacheInit(void);
 void replicationScriptCacheFlush(void);
 void replicationScriptCacheAdd(sds sha1);
 int replicationScriptCacheExists(sds sha1);
-void replicationSetMaster(char *ip, int port);
-void replicationUnsetMaster(void);
+void processClientsWaitingReplicas(void);
+void unblockClientWaitingReplicas(redisClient *c);
+int replicationCountAcksByOffset(long long offset);
 void replicationSendNewlineToMaster(void);
+long long replicationGetSlaveOffset(void);
 char *replicationGetSlaveName(redisClient *c);
-long long getPsyncInitialOffset(void);
-int replicationSetupSlaveForFullResync(redisClient *slave, long long offset);
 
 /* Generic persistence functions */
 void startLoading(FILE *fp);
 void loadingProgress(off_t pos);
 void stopLoading(void);
 
@@ -1146,17 +1209,19 @@
 zskiplist *zslCreate(void);
 void zslFree(zskiplist *zsl);
 zskiplistNode *zslInsert(zskiplist *zsl, double score, robj *obj);
 unsigned char *zzlInsert(unsigned char *zl, robj *ele, double score);
 int zslDelete(zskiplist *zsl, double score, robj *obj);
 zskiplistNode *zslFirstInRange(zskiplist *zsl, zrangespec *range);
+zskiplistNode *zslLastInRange(zskiplist *zsl, zrangespec *range);
 double zzlGetScore(unsigned char *sptr);
 void zzlNext(unsigned char *zl, unsigned char **eptr, unsigned char **sptr);
 void zzlPrev(unsigned char *zl, unsigned char **eptr, unsigned char **sptr);
 unsigned int zsetLength(robj *zobj);
 void zsetConvert(robj *zobj, int encoding);
+unsigned long zslGetRank(zskiplist *zsl, double score, robj *o);
 
 /* Core functions */
 int freeMemoryIfNeeded(void);
 int processCommand(redisClient *c);
 void setupSignalHandlers(void);
 struct redisCommand *lookupCommand(sds name);
@@ -1182,12 +1247,13 @@
 void populateCommandTable(void);
 void resetCommandTableStats(void);
 void adjustOpenFilesLimit(void);
 void closeListeningSockets(int unlink_unix_socket);
 void updateCachedTime(void);
 void resetServerStats(void);
+unsigned int getLRUClock(void);
 
 /* Set data type */
 robj *setTypeCreate(robj *value);
 int setTypeAdd(robj *subject, robj *value);
 int setTypeRemove(robj *subject, robj *value);
 int setTypeIsMember(robj *subject, robj *value);
@@ -1258,35 +1324,53 @@
 int dbDelete(redisDb *db, robj *key);
 robj *dbUnshareStringValue(redisDb *db, robj *key, robj *o);
 long long emptyDb(void(callback)(void*));
 int selectDb(redisClient *c, int id);
 void signalModifiedKey(redisDb *db, robj *key);
 void signalFlushedDb(int dbid);
-unsigned int GetKeysInSlot(unsigned int hashslot, robj **keys, unsigned int count);
+unsigned int getKeysInSlot(unsigned int hashslot, robj **keys, unsigned int count);
+unsigned int countKeysInSlot(unsigned int hashslot);
+unsigned int delKeysInSlot(unsigned int hashslot);
+int verifyClusterConfigWithData(void);
 void scanGenericCommand(redisClient *c, robj *o, unsigned long cursor);
 int parseScanCursorOrReply(redisClient *c, robj *o, unsigned long *cursor);
 
 /* API to get key arguments from commands */
-#define REDIS_GETKEYS_ALL 0
-#define REDIS_GETKEYS_PRELOAD 1
-int *getKeysFromCommand(struct redisCommand *cmd, robj **argv, int argc, int *numkeys, int flags);
+int *getKeysFromCommand(struct redisCommand *cmd, robj **argv, int argc, int *numkeys);
 void getKeysFreeResult(int *result);
-int *noPreloadGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags);
-int *renameGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags);
-int *zunionInterGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags);
+int *zunionInterGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys);
+int *evalGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys);
+int *sortGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys);
+
+/* Cluster */
+void clusterInit(void);
+unsigned short crc16(const char *buf, int len);
+unsigned int keyHashSlot(char *key, int keylen);
+void clusterCron(void);
+void clusterPropagatePublish(robj *channel, robj *message);
+void migrateCloseTimedoutSockets(void);
+void clusterBeforeSleep(void);
 
 /* Sentinel */
 void initSentinelConfig(void);
 void initSentinel(void);
 void sentinelTimer(void);
 char *sentinelHandleConfiguration(char **argv, int argc);
 void sentinelIsRunning(void);
 
 /* Scripting */
 void scriptingInit(void);
 
+/* Blocked clients */
+void processUnblockedClients(void);
+void blockClient(redisClient *c, int btype);
+void unblockClient(redisClient *c);
+void replyToBlockedClientTimedOut(redisClient *c);
+int getTimeoutFromObjectOrReply(redisClient *c, robj *object, mstime_t *timeout, int unit);
+void disconnectAllBlockedClients(void);
+
 /* Git SHA1 */
 char *redisGitSHA1(void);
 char *redisGitDirty(void);
 uint64_t redisBuildId(void);
 
 /* Commands prototypes */
@@ -1421,25 +1505,30 @@
 void psubscribeCommand(redisClient *c);
 void punsubscribeCommand(redisClient *c);
 void publishCommand(redisClient *c);
 void pubsubCommand(redisClient *c);
 void watchCommand(redisClient *c);
 void unwatchCommand(redisClient *c);
+void clusterCommand(redisClient *c);
 void restoreCommand(redisClient *c);
 void migrateCommand(redisClient *c);
+void askingCommand(redisClient *c);
+void readonlyCommand(redisClient *c);
+void readwriteCommand(redisClient *c);
 void dumpCommand(redisClient *c);
 void objectCommand(redisClient *c);
 void clientCommand(redisClient *c);
 void evalCommand(redisClient *c);
 void evalShaCommand(redisClient *c);
 void scriptCommand(redisClient *c);
 void timeCommand(redisClient *c);
 void bitopCommand(redisClient *c);
 void bitcountCommand(redisClient *c);
 void bitposCommand(redisClient *c);
 void replconfCommand(redisClient *c);
+void waitCommand(redisClient *c);
 void pfselftestCommand(redisClient *c);
 void pfaddCommand(redisClient *c);
 void pfcountCommand(redisClient *c);
 void pfmergeCommand(redisClient *c);
 void pfdebugCommand(redisClient *c);
 void latencyCommand(redisClient *c);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-sentinel and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-sentinel differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/redis-server and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/redis-server differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src: redis-trib.rb
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.h	2017-09-27 22:28:52.919005266 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.h	2017-09-27 22:38:23.438984356 +0800
@@ -1,3 +1,3 @@
 #define REDIS_GIT_SHA1 "00000000"
 #define REDIS_GIT_DIRTY "0"
-#define REDIS_BUILD_ID "sarah-Erazer-X310-1506522532"
+#define REDIS_BUILD_ID "sarah-Erazer-X310-1506523103"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/release.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/release.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c	2015-04-01 22:01:44.000000000 +0800
@@ -198,13 +198,12 @@
         if (server.repl_backlog) feedReplicationBacklogWithObject(selectcmd);
 
         /* Send it to slaves. */
         listRewind(slaves,&li);
         while((ln = listNext(&li))) {
             redisClient *slave = ln->value;
-            if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START) continue;
             addReply(slave,selectcmd);
         }
 
         if (dictid < 0 || dictid >= REDIS_SHARED_SELECT_CMDS)
             decrRefCount(selectcmd);
     }
@@ -347,64 +346,12 @@
         len -= thislen;
         j = 0;
     }
     return server.repl_backlog_histlen - skip;
 }
 
-/* Return the offset to provide as reply to the PSYNC command received
- * from the slave. The returned value is only valid immediately after
- * the BGSAVE process started and before executing any other command
- * from clients. */
-long long getPsyncInitialOffset(void) {
-    long long psync_offset = server.master_repl_offset;
-    /* Add 1 to psync_offset if it the replication backlog does not exists
-     * as when it will be created later we'll increment the offset by one. */
-    if (server.repl_backlog == NULL) psync_offset++;
-    return psync_offset;
-}
-
-/* Send a FULLRESYNC reply in the specific case of a full resynchronization,
- * as a side effect setup the slave for a full sync in different ways:
- *
- * 1) Remember, into the slave client structure, the offset we sent
- *    here, so that if new slaves will later attach to the same
- *    background RDB saving process (by duplicating this client output
- *    buffer), we can get the right offset from this slave.
- * 2) Set the replication state of the slave to WAIT_BGSAVE_END so that
- *    we start accumulating differences from this point.
- * 3) Force the replication stream to re-emit a SELECT statement so
- *    the new slave incremental differences will start selecting the
- *    right database number.
- *
- * Normally this function should be called immediately after a successful
- * BGSAVE for replication was started, or when there is one already in
- * progress that we attached our slave to. */
-int replicationSetupSlaveForFullResync(redisClient *slave, long long offset) {
-    char buf[128];
-    int buflen;
-
-    slave->psync_initial_offset = offset;
-    slave->replstate = REDIS_REPL_WAIT_BGSAVE_END;
-    /* We are going to accumulate the incremental changes for this
-     * slave as well. Set slaveseldb to -1 in order to force to re-emit
-     * a SLEECT statement in the replication stream. */
-    server.slaveseldb = -1;
-
-    /* Don't send this reply to slaves that approached us with
-     * the old SYNC command. */
-    if (!(slave->flags & REDIS_PRE_PSYNC)) {
-        buflen = snprintf(buf,sizeof(buf),"+FULLRESYNC %s %lld\r\n",
-                          server.runid,offset);
-        if (write(slave->fd,buf,buflen) != buflen) {
-            freeClientAsync(slave);
-            return REDIS_ERR;
-        }
-    }
-    return REDIS_OK;
-}
-
 /* This function handles the PSYNC command from the point of view of a
  * master receiving a request for partial resynchronization.
  *
  * On success return REDIS_OK, otherwise REDIS_ERR is returned and we proceed
  * with the usual full resync. */
 int masterTryPartialResynchronization(redisClient *c) {
@@ -417,13 +364,13 @@
      * via PSYNC? If runid changed this master is a different instance and
      * there is no way to continue. */
     if (strcasecmp(master_runid, server.runid)) {
         /* Run id "?" is used by slaves that want to force a full resync. */
         if (master_runid[0] != '?') {
             redisLog(REDIS_NOTICE,"Partial resynchronization not accepted: "
-                "Runid mismatch (Client asked for '%s', I'm '%s')",
+                "Runid mismatch (Client asked for runid '%s', my runid is '%s')",
                 master_runid, server.runid);
         } else {
             redisLog(REDIS_NOTICE,"Full resync requested by slave %s",
                 replicationGetSlaveName(c));
         }
         goto need_full_resync;
@@ -472,85 +419,43 @@
      * has this state from the previous connection with the master. */
 
     refreshGoodSlavesCount();
     return REDIS_OK; /* The caller can return, no full resync needed. */
 
 need_full_resync:
-    /* We need a full resync for some reason... Note that we can't
-     * reply to PSYNC right now if a full SYNC is needed. The reply
-     * must include the master offset at the time the RDB file we transfer
-     * is generated, so we need to delay the reply to that moment. */
+    /* We need a full resync for some reason... notify the client. */
+    psync_offset = server.master_repl_offset;
+    /* Add 1 to psync_offset if it the replication backlog does not exists
+     * as when it will be created later we'll increment the offset by one. */
+    if (server.repl_backlog == NULL) psync_offset++;
+    /* Again, we can't use the connection buffers (see above). */
+    buflen = snprintf(buf,sizeof(buf),"+FULLRESYNC %s %lld\r\n",
+                      server.runid,psync_offset);
+    if (write(c->fd,buf,buflen) != buflen) {
+        freeClientAsync(c);
+        return REDIS_OK;
+    }
     return REDIS_ERR;
 }
 
 /* Start a BGSAVE for replication goals, which is, selecting the disk or
  * socket target depending on the configuration, and making sure that
  * the script cache is flushed before to start.
  *
- * The mincapa argument is the bitwise AND among all the slaves capabilities
- * of the slaves waiting for this BGSAVE, so represents the slave capabilities
- * all the slaves support. Can be tested via SLAVE_CAPA_* macros.
- *
- * Side effects, other than starting a BGSAVE:
- *
- * 1) Handle the slaves in WAIT_START state, by preparing them for a full
- *    sync if the BGSAVE was succesfully started, or sending them an error
- *    and dropping them from the list of slaves.
- *
- * 2) Flush the Lua scripting script cache if the BGSAVE was actually
- *    started.
- *
  * Returns REDIS_OK on success or REDIS_ERR otherwise. */
-int startBgsaveForReplication(int mincapa) {
+int startBgsaveForReplication(void) {
     int retval;
-    int socket_target = server.repl_diskless_sync && (mincapa & SLAVE_CAPA_EOF);
-    listIter li;
-    listNode *ln;
 
     redisLog(REDIS_NOTICE,"Starting BGSAVE for SYNC with target: %s",
-        socket_target ? "slaves sockets" : "disk");
+        server.repl_diskless_sync ? "slaves sockets" : "disk");
 
-    if (socket_target)
+    if (server.repl_diskless_sync)
         retval = rdbSaveToSlavesSockets();
     else
         retval = rdbSaveBackground(server.rdb_filename);
 
-    /* If we failed to BGSAVE, remove the slaves waiting for a full
-     * resynchorinization from the list of salves, inform them with
-     * an error about what happened, close the connection ASAP. */
-    if (retval == REDIS_ERR) {
-        redisLog(REDIS_WARNING,"BGSAVE for replication failed");
-        listRewind(server.slaves,&li);
-        while((ln = listNext(&li))) {
-            redisClient *slave = ln->value;
-
-            if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START) {
-                slave->flags &= ~REDIS_SLAVE;
-                listDelNode(server.slaves,ln);
-                addReplyError(slave,
-                    "BGSAVE failed, replication can't continue");
-                slave->flags |= REDIS_CLOSE_AFTER_REPLY;
-            }
-        }
-        return retval;
-    }
-
-    /* If the target is socket, rdbSaveToSlavesSockets() already setup
-     * the salves for a full resync. Otherwise for disk target do it now.*/
-    if (!socket_target) {
-        listRewind(server.slaves,&li);
-        while((ln = listNext(&li))) {
-            redisClient *slave = ln->value;
-
-            if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START) {
-                    replicationSetupSlaveForFullResync(slave,
-                            getPsyncInitialOffset());
-            }
-        }
-    }
-
     /* Flush the script cache, since we need that slave differences are
      * accumulated without requiring slaves to match our cached scripts. */
     if (retval == REDIS_OK) replicationScriptCacheFlush();
     return retval;
 }
 
@@ -607,22 +512,14 @@
         c->flags |= REDIS_PRE_PSYNC;
     }
 
     /* Full resynchronization. */
     server.stat_sync_full++;
 
-    /* Setup the slave as one waiting for BGSAVE to start. The following code
-     * paths will change the state if we handle the slave differently. */
-    c->replstate = REDIS_REPL_WAIT_BGSAVE_START;
-    if (server.repl_disable_tcp_nodelay)
-        anetDisableTcpNoDelay(NULL, c->fd); /* Non critical if it fails. */
-    c->repldbfd = -1;
-    c->flags |= REDIS_SLAVE;
-    listAddNodeTail(server.slaves,c);
-
-    /* CASE 1: BGSAVE is in progress, with disk target. */
+    /* Here we need to check if there is a background saving operation
+     * in progress, or if it is required to start one */
     if (server.rdb_child_pid != -1 &&
         server.rdb_child_type == REDIS_RDB_CHILD_TYPE_DISK)
     {
         /* Ok a background save is in progress. Let's check if it is a good
          * one for replication, i.e. if there is another slave that is
          * registering differences since the server forked to save. */
@@ -632,51 +529,57 @@
 
         listRewind(server.slaves,&li);
         while((ln = listNext(&li))) {
             slave = ln->value;
             if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_END) break;
         }
-        /* To attach this slave, we check that it has at least all the
-         * capabilities of the slave that triggered the current BGSAVE. */
-        if (ln && ((c->slave_capa & slave->slave_capa) == slave->slave_capa)) {
+        if (ln) {
             /* Perfect, the server is already registering differences for
              * another slave. Set the right state, and copy the buffer. */
             copyClientOutputBuffer(c,slave);
-            replicationSetupSlaveForFullResync(c,slave->psync_initial_offset);
+            c->replstate = REDIS_REPL_WAIT_BGSAVE_END;
             redisLog(REDIS_NOTICE,"Waiting for end of BGSAVE for SYNC");
         } else {
             /* No way, we need to wait for the next BGSAVE in order to
              * register differences. */
+            c->replstate = REDIS_REPL_WAIT_BGSAVE_START;
             redisLog(REDIS_NOTICE,"Waiting for next BGSAVE for SYNC");
         }
-
-    /* CASE 2: BGSAVE is in progress, with socket target. */
     } else if (server.rdb_child_pid != -1 &&
                server.rdb_child_type == REDIS_RDB_CHILD_TYPE_SOCKET)
     {
         /* There is an RDB child process but it is writing directly to
          * children sockets. We need to wait for the next BGSAVE
          * in order to synchronize. */
+        c->replstate = REDIS_REPL_WAIT_BGSAVE_START;
         redisLog(REDIS_NOTICE,"Waiting for next BGSAVE for SYNC");
-
-    /* CASE 3: There is no BGSAVE is progress. */
     } else {
-        if (server.repl_diskless_sync && (c->slave_capa & SLAVE_CAPA_EOF)) {
+        if (server.repl_diskless_sync) {
             /* Diskless replication RDB child is created inside
              * replicationCron() since we want to delay its start a
              * few seconds to wait for more slaves to arrive. */
+            c->replstate = REDIS_REPL_WAIT_BGSAVE_START;
             if (server.repl_diskless_sync_delay)
                 redisLog(REDIS_NOTICE,"Delay next BGSAVE for SYNC");
         } else {
-            /* Target is disk (or the slave is not capable of supporting
-             * diskless replication) and we don't have a BGSAVE in progress,
-             * let's start one. */
-            if (startBgsaveForReplication(c->slave_capa) != REDIS_OK) return;
+            /* Ok we don't have a BGSAVE in progress, let's start one. */
+            if (startBgsaveForReplication() != REDIS_OK) {
+                redisLog(REDIS_NOTICE,"Replication failed, can't BGSAVE");
+                addReplyError(c,"Unable to perform background save");
+                return;
+            }
+            c->replstate = REDIS_REPL_WAIT_BGSAVE_END;
         }
     }
 
+    if (server.repl_disable_tcp_nodelay)
+        anetDisableTcpNoDelay(NULL, c->fd); /* Non critical if it fails. */
+    c->repldbfd = -1;
+    c->flags |= REDIS_SLAVE;
+    server.slaveseldb = -1; /* Force to re-emit the SELECT command. */
+    listAddNodeTail(server.slaves,c);
     if (listLength(server.slaves) == 1 && server.repl_backlog == NULL)
         createReplicationBacklog();
     return;
 }
 
 /* REPLCONF <option> <value> <option> <value> ...
@@ -707,16 +610,12 @@
             long port;
 
             if ((getLongFromObjectOrReply(c,c->argv[j+1],
                     &port,NULL) != REDIS_OK))
                 return;
             c->slave_listening_port = port;
-        } else if (!strcasecmp(c->argv[j]->ptr,"capa")) {
-            /* Ignore capabilities not understood by this master. */
-            if (!strcasecmp(c->argv[j+1]->ptr,"eof"))
-                c->slave_capa |= SLAVE_CAPA_EOF;
         } else if (!strcasecmp(c->argv[j]->ptr,"ack")) {
             /* REPLCONF ACK is used by slave to inform the master the amount
              * of replication stream that it processed so far. It is an
              * internal only command that normal clients should never use. */
             long long offset;
 
@@ -730,12 +629,17 @@
              * the slave online when the first ACK is received (which
              * confirms slave is online and ready to get more data). */
             if (c->repl_put_online_on_ack && c->replstate == REDIS_REPL_ONLINE)
                 putSlaveOnline(c);
             /* Note: this command does not reply anything! */
             return;
+        } else if (!strcasecmp(c->argv[j]->ptr,"getack")) {
+            /* REPLCONF GETACK is used in order to request an ACK ASAP
+             * to the slave. */
+            if (server.masterhost && server.master) replicationSendAck();
+            /* Note: this command does not reply anything! */
         } else {
             addReplyErrorFormat(c,"Unrecognized REPLCONF option: %s",
                 (char*)c->argv[j]->ptr);
             return;
         }
     }
@@ -745,21 +649,22 @@
 /* This function puts a slave in the online state, and should be called just
  * after a slave received the RDB file for the initial synchronization, and
  * we are finally ready to send the incremental stream of commands.
  *
  * It does a few things:
  *
- * 1) Put the slave in ONLINE state.
+ * 1) Put the slave in ONLINE state (useless when the function is called
+ *    because state is already ONLINE but repl_put_online_on_ack is true).
  * 2) Make sure the writable event is re-installed, since calling the SYNC
  *    command disables it, so that we can accumulate output buffer without
  *    sending it to the slave.
  * 3) Update the count of good slaves. */
 void putSlaveOnline(redisClient *slave) {
     slave->replstate = REDIS_REPL_ONLINE;
     slave->repl_put_online_on_ack = 0;
-    slave->repl_ack_time = server.unixtime;
+    slave->repl_ack_time = server.unixtime; /* Prevent false timeout. */
     if (aeCreateFileEvent(server.el, slave->fd, AE_WRITABLE,
         sendReplyToClient, slave) == AE_ERR) {
         redisLog(REDIS_WARNING,"Unable to register writable event for slave bulk transfer: %s", strerror(errno));
         freeClient(slave);
         return;
     }
@@ -838,23 +743,21 @@
  * otherwise REDIS_ERR is passed to the function.
  * The 'type' argument is the type of the child that terminated
  * (if it had a disk or socket target). */
 void updateSlavesWaitingBgsave(int bgsaveerr, int type) {
     listNode *ln;
     int startbgsave = 0;
-    int mincapa = -1;
     listIter li;
 
     listRewind(server.slaves,&li);
     while((ln = listNext(&li))) {
         redisClient *slave = ln->value;
 
         if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START) {
             startbgsave = 1;
-            mincapa = (mincapa == -1) ? slave->slave_capa :
-                                        (mincapa & slave->slave_capa);
+            slave->replstate = REDIS_REPL_WAIT_BGSAVE_END;
         } else if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_END) {
             struct redis_stat buf;
 
             /* If this was an RDB on disk save, we have to prepare to send
              * the RDB from disk to the slave socket. Otherwise if this was
              * already an RDB -> Slaves socket transfer, used in the case of
@@ -868,13 +771,13 @@
                  * order to really put it online (install the write handler
                  * so that the accumulated data can be transfered). However
                  * we change the replication state ASAP, since our slave
                  * is technically online now. */
                 slave->replstate = REDIS_REPL_ONLINE;
                 slave->repl_put_online_on_ack = 1;
-                slave->repl_ack_time = server.unixtime;
+                slave->repl_ack_time = server.unixtime; /* Timeout otherwise. */
             } else {
                 if (bgsaveerr != REDIS_OK) {
                     freeClient(slave);
                     redisLog(REDIS_WARNING,"SYNC failed. BGSAVE child returned an error");
                     continue;
                 }
@@ -895,24 +798,30 @@
                     freeClient(slave);
                     continue;
                 }
             }
         }
     }
-    if (startbgsave) startBgsaveForReplication(mincapa);
+    if (startbgsave) {
+        if (startBgsaveForReplication() != REDIS_OK) {
+            listIter li;
+
+            listRewind(server.slaves,&li);
+            redisLog(REDIS_WARNING,"SYNC failed. BGSAVE failed");
+            while((ln = listNext(&li))) {
+                redisClient *slave = ln->value;
+
+                if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START)
+                    freeClient(slave);
+            }
+        }
+    }
 }
 
 /* ----------------------------------- SLAVE -------------------------------- */
 
-/* Returns 1 if the given replication state is a handshake state,
- * 0 otherwise. */
-int slaveIsInHandshakeState(void) {
-    return server.repl_state >= REDIS_REPL_RECEIVE_PONG &&
-           server.repl_state <= REDIS_REPL_RECEIVE_PSYNC;
-}
-
 /* Abort the async download of the bulk dataset while SYNC-ing with master */
 void replicationAbortSyncTransfer(void) {
     redisAssert(server.repl_state == REDIS_REPL_TRANSFER);
 
     aeDeleteFileEvent(server.el,server.repl_transfer_s,AE_READABLE);
     close(server.repl_transfer_s);
@@ -1150,60 +1059,44 @@
 /* Send a synchronous command to the master. Used to send AUTH and
  * REPLCONF commands before starting the replication with SYNC.
  *
  * The command returns an sds string representing the result of the
  * operation. On error the first byte is a "-".
  */
-#define SYNC_CMD_READ (1<<0)
-#define SYNC_CMD_WRITE (1<<1)
-#define SYNC_CMD_FULL (SYNC_CMD_READ|SYNC_CMD_WRITE)
-char *sendSynchronousCommand(int flags, int fd, ...) {
+char *sendSynchronousCommand(int fd, ...) {
+    va_list ap;
+    sds cmd = sdsempty();
+    char *arg, buf[256];
 
     /* Create the command to send to the master, we use simple inline
      * protocol for simplicity as currently we only send simple strings. */
-    if (flags & SYNC_CMD_WRITE) {
-        char *arg;
-        va_list ap;
-        sds cmd = sdsempty();
-        va_start(ap,fd);
-
-        while(1) {
-            arg = va_arg(ap, char*);
-            if (arg == NULL) break;
-
-            if (sdslen(cmd) != 0) cmd = sdscatlen(cmd," ",1);
-            cmd = sdscat(cmd,arg);
-        }
-        cmd = sdscatlen(cmd,"\r\n",2);
-
-        /* Transfer command to the server. */
-        if (syncWrite(fd,cmd,sdslen(cmd),server.repl_syncio_timeout*1000)
-            == -1)
-        {
-            sdsfree(cmd);
-            return sdscatprintf(sdsempty(),"-Writing to master: %s",
-                    strerror(errno));
-        }
+    va_start(ap,fd);
+    while(1) {
+        arg = va_arg(ap, char*);
+        if (arg == NULL) break;
+
+        if (sdslen(cmd) != 0) cmd = sdscatlen(cmd," ",1);
+        cmd = sdscat(cmd,arg);
+    }
+    cmd = sdscatlen(cmd,"\r\n",2);
+
+    /* Transfer command to the server. */
+    if (syncWrite(fd,cmd,sdslen(cmd),server.repl_syncio_timeout*1000) == -1) {
         sdsfree(cmd);
-        va_end(ap);
+        return sdscatprintf(sdsempty(),"-Writing to master: %s",
+                strerror(errno));
     }
+    sdsfree(cmd);
 
     /* Read the reply from the server. */
-    if (flags & SYNC_CMD_READ) {
-        char buf[256];
-
-        if (syncReadLine(fd,buf,sizeof(buf),server.repl_syncio_timeout*1000)
-            == -1)
-        {
-            return sdscatprintf(sdsempty(),"-Reading from master: %s",
-                    strerror(errno));
-        }
-        server.repl_transfer_lastio = server.unixtime;
-        return sdsnew(buf);
+    if (syncReadLine(fd,buf,sizeof(buf),server.repl_syncio_timeout*1000) == -1)
+    {
+        return sdscatprintf(sdsempty(),"-Reading from master: %s",
+                strerror(errno));
     }
-    return NULL;
+    return sdsnew(buf);
 }
 
 /* Try a partial resynchronization with the master if we are about to reconnect.
  * If there is no cached master structure, at least try to issue a
  * "PSYNC ? -1" command in order to trigger a full resync using the PSYNC
  * command in order to obtain the master run id and the master replication
@@ -1214,95 +1107,49 @@
  *
  * 1) We pass the function an already connected socket "fd".
  * 2) This function does not close the file descriptor "fd". However in case
  *    of successful partial resynchronization, the function will reuse
  *    'fd' as file descriptor of the server.master client structure.
  *
- * The function is split in two halves: if read_reply is 0, the function
- * writes the PSYNC command on the socket, and a new function call is
- * needed, with read_reply set to 1, in order to read the reply of the
- * command. This is useful in order to support non blocking operations, so
- * that we write, return into the event loop, and read when there are data.
- *
- * When read_reply is 0 the function returns PSYNC_WRITE_ERR if there
- * was a write error, or PSYNC_WAIT_REPLY to signal we need another call
- * with read_reply set to 1. However even when read_reply is set to 1
- * the function may return PSYNC_WAIT_REPLY again to signal there were
- * insufficient data to read to complete its work. We should re-enter
- * into the event loop and wait in such a case.
- *
  * The function returns:
  *
  * PSYNC_CONTINUE: If the PSYNC command succeded and we can continue.
  * PSYNC_FULLRESYNC: If PSYNC is supported but a full resync is needed.
  *                   In this case the master run_id and global replication
  *                   offset is saved.
  * PSYNC_NOT_SUPPORTED: If the server does not understand PSYNC at all and
  *                      the caller should fall back to SYNC.
- * PSYNC_WRITE_ERR: There was an error writing the command to the socket.
- * PSYNC_WAIT_REPLY: Call again the function with read_reply set to 1.
- *
- * Notable side effects:
- *
- * 1) As a side effect of the function call the function removes the readable
- *    event handler from "fd", unless the return value is PSYNC_WAIT_REPLY.
- * 2) server.repl_master_initial_offset is set to the right value according
- *    to the master reply. This will be used to populate the 'server.master'
- *    structure replication offset.
  */
 
-#define PSYNC_WRITE_ERROR 0
-#define PSYNC_WAIT_REPLY 1
-#define PSYNC_CONTINUE 2
-#define PSYNC_FULLRESYNC 3
-#define PSYNC_NOT_SUPPORTED 4
-int slaveTryPartialResynchronization(int fd, int read_reply) {
+#define PSYNC_CONTINUE 0
+#define PSYNC_FULLRESYNC 1
+#define PSYNC_NOT_SUPPORTED 2
+int slaveTryPartialResynchronization(int fd) {
     char *psync_runid;
     char psync_offset[32];
     sds reply;
 
-    /* Writing half */
-    if (!read_reply) {
-        /* Initially set repl_master_initial_offset to -1 to mark the current
-         * master run_id and offset as not valid. Later if we'll be able to do
-         * a FULL resync using the PSYNC command we'll set the offset at the
-         * right value, so that this information will be propagated to the
-         * client structure representing the master into server.master. */
-        server.repl_master_initial_offset = -1;
-
-        if (server.cached_master) {
-            psync_runid = server.cached_master->replrunid;
-            snprintf(psync_offset,sizeof(psync_offset),"%lld", server.cached_master->reploff+1);
-            redisLog(REDIS_NOTICE,"Trying a partial resynchronization (request %s:%s).", psync_runid, psync_offset);
-        } else {
-            redisLog(REDIS_NOTICE,"Partial resynchronization not possible (no cached master)");
-            psync_runid = "?";
-            memcpy(psync_offset,"-1",3);
-        }
-
-        /* Issue the PSYNC command */
-        reply = sendSynchronousCommand(SYNC_CMD_WRITE,fd,"PSYNC",psync_runid,psync_offset,NULL);
-        if (reply != NULL) {
-            redisLog(REDIS_WARNING,"Unable to send PSYNC to master: %s",reply);
-            sdsfree(reply);
-            aeDeleteFileEvent(server.el,fd,AE_READABLE);
-            return PSYNC_WRITE_ERROR;
-        }
-        return PSYNC_WAIT_REPLY;
-    }
-
-    /* Reading half */
-    reply = sendSynchronousCommand(SYNC_CMD_READ,fd,NULL);
-    if (sdslen(reply) == 0) {
-        /* The master may send empty newlines after it receives PSYNC
-         * and before to reply, just to keep the connection alive. */
-        sdsfree(reply);
-        return PSYNC_WAIT_REPLY;
+    /* Initially set repl_master_initial_offset to -1 to mark the current
+     * master run_id and offset as not valid. Later if we'll be able to do
+     * a FULL resync using the PSYNC command we'll set the offset at the
+     * right value, so that this information will be propagated to the
+     * client structure representing the master into server.master. */
+    server.repl_master_initial_offset = -1;
+
+    if (server.cached_master) {
+        psync_runid = server.cached_master->replrunid;
+        snprintf(psync_offset,sizeof(psync_offset),"%lld", server.cached_master->reploff+1);
+        redisLog(REDIS_NOTICE,"Trying a partial resynchronization (request %s:%s).", psync_runid, psync_offset);
+    } else {
+        redisLog(REDIS_NOTICE,"Partial resynchronization not possible (no cached master)");
+        psync_runid = "?";
+        memcpy(psync_offset,"-1",3);
     }
 
-    aeDeleteFileEvent(server.el,fd,AE_READABLE);
+    /* Issue the PSYNC command */
+    reply = sendSynchronousCommand(fd,"PSYNC",psync_runid,psync_offset,NULL);
 
     if (!strncmp(reply,"+FULLRESYNC",11)) {
         char *runid = NULL, *offset = NULL;
 
         /* FULL RESYNC, parse the reply in order to extract the run id
          * and the replication offset. */
@@ -1340,13 +1187,13 @@
             "Successful partial resynchronization with master.");
         sdsfree(reply);
         replicationResurrectCachedMaster(fd);
         return PSYNC_CONTINUE;
     }
 
-    /* If we reach this point we received either an error since the master does
+    /* If we reach this point we receied either an error since the master does
      * not understand PSYNC, or an unexpected reply from the master.
      * Return PSYNC_NOT_SUPPORTED to the caller in both cases. */
 
     if (strncmp(reply,"-ERR",4)) {
         /* If it's not an error, log the unexpected event. */
         redisLog(REDIS_WARNING,
@@ -1359,13 +1206,13 @@
     sdsfree(reply);
     replicationDiscardCachedMaster();
     return PSYNC_NOT_SUPPORTED;
 }
 
 void syncWithMaster(aeEventLoop *el, int fd, void *privdata, int mask) {
-    char tmpfile[256], *err = NULL;
+    char tmpfile[256], *err;
     int dfd, maxtries = 5;
     int sockerr = 0, psync_result;
     socklen_t errlen = sizeof(sockerr);
     REDIS_NOTUSED(el);
     REDIS_NOTUSED(privdata);
     REDIS_NOTUSED(mask);
@@ -1378,171 +1225,107 @@
     }
 
     /* Check for errors in the socket. */
     if (getsockopt(fd, SOL_SOCKET, SO_ERROR, &sockerr, &errlen) == -1)
         sockerr = errno;
     if (sockerr) {
+        aeDeleteFileEvent(server.el,fd,AE_READABLE|AE_WRITABLE);
         redisLog(REDIS_WARNING,"Error condition on socket for SYNC: %s",
             strerror(sockerr));
         goto error;
     }
 
-    /* Send a PING to check the master is able to reply without errors. */
+    /* If we were connecting, it's time to send a non blocking PING, we want to
+     * make sure the master is able to reply before going into the actual
+     * replication process where we have long timeouts in the order of
+     * seconds (in the meantime the slave would block). */
     if (server.repl_state == REDIS_REPL_CONNECTING) {
         redisLog(REDIS_NOTICE,"Non blocking connect for SYNC fired the event.");
         /* Delete the writable event so that the readable event remains
          * registered and we can wait for the PONG reply. */
         aeDeleteFileEvent(server.el,fd,AE_WRITABLE);
         server.repl_state = REDIS_REPL_RECEIVE_PONG;
         /* Send the PING, don't check for errors at all, we have the timeout
          * that will take care about this. */
-        err = sendSynchronousCommand(SYNC_CMD_WRITE,fd,"PING",NULL);
-        if (err) goto write_error;
+        syncWrite(fd,"PING\r\n",6,100);
         return;
     }
 
     /* Receive the PONG command. */
     if (server.repl_state == REDIS_REPL_RECEIVE_PONG) {
-        err = sendSynchronousCommand(SYNC_CMD_READ,fd,NULL);
+        char buf[1024];
+
+        /* Delete the readable event, we no longer need it now that there is
+         * the PING reply to read. */
+        aeDeleteFileEvent(server.el,fd,AE_READABLE);
+
+        /* Read the reply with explicit timeout. */
+        buf[0] = '\0';
+        if (syncReadLine(fd,buf,sizeof(buf),
+            server.repl_syncio_timeout*1000) == -1)
+        {
+            redisLog(REDIS_WARNING,
+                "I/O error reading PING reply from master: %s",
+                strerror(errno));
+            goto error;
+        }
 
         /* We accept only two replies as valid, a positive +PONG reply
          * (we just check for "+") or an authentication error.
          * Note that older versions of Redis replied with "operation not
          * permitted" instead of using a proper error code, so we test
          * both. */
-        if (err[0] != '+' &&
-            strncmp(err,"-NOAUTH",7) != 0 &&
-            strncmp(err,"-ERR operation not permitted",28) != 0)
+        if (buf[0] != '+' &&
+            strncmp(buf,"-NOAUTH",7) != 0 &&
+            strncmp(buf,"-ERR operation not permitted",28) != 0)
         {
-            redisLog(REDIS_WARNING,"Error reply to PING from master: '%s'",err);
-            sdsfree(err);
+            redisLog(REDIS_WARNING,"Error reply to PING from master: '%s'",buf);
             goto error;
         } else {
             redisLog(REDIS_NOTICE,
                 "Master replied to PING, replication can continue...");
         }
-        sdsfree(err);
-        server.repl_state = REDIS_REPL_SEND_AUTH;
     }
 
     /* AUTH with the master if required. */
-    if (server.repl_state == REDIS_REPL_SEND_AUTH) {
-        if (server.masterauth) {
-            err = sendSynchronousCommand(SYNC_CMD_WRITE,fd,"AUTH",server.masterauth,NULL);
-            if (err) goto write_error;
-            server.repl_state = REDIS_REPL_RECEIVE_AUTH;
-            return;
-        } else {
-            server.repl_state = REDIS_REPL_SEND_PORT;
-        }
-    }
-
-    /* Receive AUTH reply. */
-    if (server.repl_state == REDIS_REPL_RECEIVE_AUTH) {
-        err = sendSynchronousCommand(SYNC_CMD_READ,fd,NULL);
+    if(server.masterauth) {
+        err = sendSynchronousCommand(fd,"AUTH",server.masterauth,NULL);
         if (err[0] == '-') {
             redisLog(REDIS_WARNING,"Unable to AUTH to MASTER: %s",err);
             sdsfree(err);
             goto error;
         }
         sdsfree(err);
-        server.repl_state = REDIS_REPL_SEND_PORT;
     }
 
     /* Set the slave port, so that Master's INFO command can list the
      * slave listening port correctly. */
-    if (server.repl_state == REDIS_REPL_SEND_PORT) {
+    {
         sds port = sdsfromlonglong(server.port);
-        err = sendSynchronousCommand(SYNC_CMD_WRITE,fd,"REPLCONF",
-                "listening-port",port, NULL);
+        err = sendSynchronousCommand(fd,"REPLCONF","listening-port",port,
+                                         NULL);
         sdsfree(port);
-        if (err) goto write_error;
-        sdsfree(err);
-        server.repl_state = REDIS_REPL_RECEIVE_PORT;
-        return;
-    }
-
-    /* Receive REPLCONF listening-port reply. */
-    if (server.repl_state == REDIS_REPL_RECEIVE_PORT) {
-        err = sendSynchronousCommand(SYNC_CMD_READ,fd,NULL);
         /* Ignore the error if any, not all the Redis versions support
          * REPLCONF listening-port. */
         if (err[0] == '-') {
-            redisLog(REDIS_NOTICE,"(Non critical) Master does not understand "
-                                  "REPLCONF listening-port: %s", err);
+            redisLog(REDIS_NOTICE,"(Non critical) Master does not understand REPLCONF listening-port: %s", err);
         }
         sdsfree(err);
-        server.repl_state = REDIS_REPL_SEND_CAPA;
-    }
-
-    /* Inform the master of our capabilities. While we currently send
-     * just one capability, it is possible to chain new capabilities here
-     * in the form of REPLCONF capa X capa Y capa Z ...
-     * The master will ignore capabilities it does not understand. */
-    if (server.repl_state == REDIS_REPL_SEND_CAPA) {
-        err = sendSynchronousCommand(SYNC_CMD_WRITE,fd,"REPLCONF",
-                "capa","eof",NULL);
-        if (err) goto write_error;
-        sdsfree(err);
-        server.repl_state = REDIS_REPL_RECEIVE_CAPA;
-        return;
-    }
-
-    /* Receive CAPA reply. */
-    if (server.repl_state == REDIS_REPL_RECEIVE_CAPA) {
-        err = sendSynchronousCommand(SYNC_CMD_READ,fd,NULL);
-        /* Ignore the error if any, not all the Redis versions support
-         * REPLCONF capa. */
-        if (err[0] == '-') {
-            redisLog(REDIS_NOTICE,"(Non critical) Master does not understand "
-                                  "REPLCONF capa: %s", err);
-        }
-        sdsfree(err);
-        server.repl_state = REDIS_REPL_SEND_PSYNC;
     }
 
     /* Try a partial resynchonization. If we don't have a cached master
      * slaveTryPartialResynchronization() will at least try to use PSYNC
      * to start a full resynchronization so that we get the master run id
      * and the global offset, to try a partial resync at the next
      * reconnection attempt. */
-    if (server.repl_state == REDIS_REPL_SEND_PSYNC) {
-        if (slaveTryPartialResynchronization(fd,0) == PSYNC_WRITE_ERROR) {
-            err = sdsnew("Write error sending the PSYNC command.");
-            goto write_error;
-        }
-        server.repl_state = REDIS_REPL_RECEIVE_PSYNC;
-        return;
-    }
-
-    /* If reached this point, we should be in REDIS_REPL_RECEIVE_PSYNC. */
-    if (server.repl_state != REDIS_REPL_RECEIVE_PSYNC) {
-        redisLog(REDIS_WARNING,"syncWithMaster(): state machine error, "
-                             "state should be RECEIVE_PSYNC but is %d",
-                             server.repl_state);
-        goto error;
-    }
-
-    psync_result = slaveTryPartialResynchronization(fd,1);
-    if (psync_result == PSYNC_WAIT_REPLY) return; /* Try again later... */
-
-    /* Note: if PSYNC does not return WAIT_REPLY, it will take care of
-     * uninstalling the read handler from the file descriptor. */
-
+    psync_result = slaveTryPartialResynchronization(fd);
     if (psync_result == PSYNC_CONTINUE) {
         redisLog(REDIS_NOTICE, "MASTER <-> SLAVE sync: Master accepted a Partial Resynchronization.");
         return;
     }
 
-    /* PSYNC failed or is not supported: we want our slaves to resync with us
-     * as well, if we have any (chained replication case). The mater may
-     * transfer us an entirely different data set and we have no way to
-     * incrementally feed our slaves after that. */
-    disconnectSlaves(); /* Force our slaves to resync with us as well. */
-    freeReplicationBacklog(); /* Don't allow our chained slaves to PSYNC. */
-
     /* Fall back to SYNC if needed. Otherwise psync_result == PSYNC_FULLRESYNC
      * and the server.repl_master_runid and repl_master_initial_offset are
      * already populated. */
     if (psync_result == PSYNC_NOT_SUPPORTED) {
         redisLog(REDIS_NOTICE,"Retrying with SYNC...");
         if (syncWrite(fd,"SYNC\r\n",6,server.repl_syncio_timeout*1000) == -1) {
@@ -1582,28 +1365,23 @@
     server.repl_transfer_fd = dfd;
     server.repl_transfer_lastio = server.unixtime;
     server.repl_transfer_tmpfile = zstrdup(tmpfile);
     return;
 
 error:
-    aeDeleteFileEvent(server.el,fd,AE_READABLE|AE_WRITABLE);
     close(fd);
     server.repl_transfer_s = -1;
     server.repl_state = REDIS_REPL_CONNECT;
     return;
-
-write_error: /* Handle sendSynchronousCommand(SYNC_CMD_WRITE) errors. */
-    redisLog(REDIS_WARNING,"Sending command to master in replication handshake: %s", err);
-    sdsfree(err);
-    goto error;
 }
 
 int connectWithMaster(void) {
     int fd;
 
-    fd = anetTcpNonBlockConnect(NULL,server.masterhost,server.masterport);
+    fd = anetTcpNonBlockBindConnect(NULL,
+        server.masterhost,server.masterport,REDIS_BIND_ADDR);
     if (fd == -1) {
         redisLog(REDIS_WARNING,"Unable to connect to MASTER: %s",
             strerror(errno));
         return REDIS_ERR;
     }
 
@@ -1624,13 +1402,13 @@
 /* This function can be called when a non blocking connection is currently
  * in progress to undo it. */
 void undoConnectWithMaster(void) {
     int fd = server.repl_transfer_s;
 
     redisAssert(server.repl_state == REDIS_REPL_CONNECTING ||
-                slaveIsInHandshakeState());
+                server.repl_state == REDIS_REPL_RECEIVE_PONG);
     aeDeleteFileEvent(server.el,fd,AE_READABLE|AE_WRITABLE);
     close(fd);
     server.repl_transfer_s = -1;
     server.repl_state = REDIS_REPL_CONNECT;
 }
 
@@ -1643,59 +1421,35 @@
  *
  * Otherwise zero is returned and no operation is perforemd at all. */
 int cancelReplicationHandshake(void) {
     if (server.repl_state == REDIS_REPL_TRANSFER) {
         replicationAbortSyncTransfer();
     } else if (server.repl_state == REDIS_REPL_CONNECTING ||
-               slaveIsInHandshakeState())
+             server.repl_state == REDIS_REPL_RECEIVE_PONG)
     {
         undoConnectWithMaster();
     } else {
         return 0;
     }
     return 1;
 }
 
-/* Mass-unblock clients because something changed in the instance that makes
- * blocking no longer safe. For example clients blocked in list operations
- * in an instance which turns from master to slave is unsafe, so this function
- * is called when a master turns into a slave.
- *
- * The semantics is to send an -UNBLOCKED error to the client, disconnecting
- * it at the same time. */
-void disconnectAllBlockedClients(void) {
-    listNode *ln;
-    listIter li;
-
-    listRewind(server.clients,&li);
-    while((ln = listNext(&li))) {
-        redisClient *c = listNodeValue(ln);
-
-        if (c->flags & REDIS_BLOCKED) {
-            addReplySds(c,sdsnew(
-                "-UNBLOCKED force unblock from blocking operation, "
-                "instance state changed (master -> slave?)\r\n"));
-            unblockClientWaitingData(c);
-            c->flags |= REDIS_CLOSE_AFTER_REPLY;
-        }
-    }
-}
-
 /* Set replication to the specified master address and port. */
 void replicationSetMaster(char *ip, int port) {
     sdsfree(server.masterhost);
-    server.masterhost = sdsdup(ip);
+    server.masterhost = sdsnew(ip);
     server.masterport = port;
     if (server.master) freeClient(server.master);
     disconnectAllBlockedClients(); /* Clients blocked in master, now slave. */
     disconnectSlaves(); /* Force our slaves to resync with us as well. */
     replicationDiscardCachedMaster(); /* Don't try a PSYNC. */
     freeReplicationBacklog(); /* Don't allow our chained slaves to PSYNC. */
     cancelReplicationHandshake();
     server.repl_state = REDIS_REPL_CONNECT;
     server.master_repl_offset = 0;
+    server.repl_down_since = 0;
 }
 
 /* Cancel replication, setting the instance as a master itself. */
 void replicationUnsetMaster(void) {
     if (server.masterhost == NULL) return; /* Nothing to do. */
     sdsfree(server.masterhost);
@@ -1713,32 +1467,27 @@
     }
     replicationDiscardCachedMaster();
     cancelReplicationHandshake();
     server.repl_state = REDIS_REPL_NONE;
 }
 
-/* This function is called when the slave lose the connection with the
- * master into an unexpected way. */
-void replicationHandleMasterDisconnection(void) {
-    server.master = NULL;
-    server.repl_state = REDIS_REPL_CONNECT;
-    server.repl_down_since = server.unixtime;
-    /* We lost connection with our master, don't disconnect slaves yet,
-     * maybe we'll be able to PSYNC with our master later. We'll disconnect
-     * the slaves only if we'll have to do a full resync with our master. */
-}
-
 void slaveofCommand(redisClient *c) {
+    /* SLAVEOF is not allowed in cluster mode as replication is automatically
+     * configured using the current address of the master node. */
+    if (server.cluster_enabled) {
+        addReplyError(c,"SLAVEOF not allowed in cluster mode.");
+        return;
+    }
+
+    /* The special host/port combination "NO" "ONE" turns the instance
+     * into a master. Otherwise the new master address is set. */
     if (!strcasecmp(c->argv[1]->ptr,"no") &&
         !strcasecmp(c->argv[2]->ptr,"one")) {
         if (server.masterhost) {
             replicationUnsetMaster();
-            sds client = catClientInfoString(sdsempty(),c);
-            redisLog(REDIS_NOTICE,
-                "MASTER MODE enabled (user request from '%s')",client);
-            sdsfree(client);
+            redisLog(REDIS_NOTICE,"MASTER MODE enabled (user request)");
         }
     } else {
         long port;
 
         if ((getLongFromObjectOrReply(c, c->argv[2], &port, NULL) != REDIS_OK))
             return;
@@ -1750,16 +1499,14 @@
             addReplySds(c,sdsnew("+OK Already connected to specified master\r\n"));
             return;
         }
         /* There was no previous master or the user specified a different one,
          * we can continue. */
         replicationSetMaster(c->argv[1]->ptr, port);
-        sds client = catClientInfoString(sdsempty(),c);
-        redisLog(REDIS_NOTICE,"SLAVE OF %s:%d enabled (user request from '%s')",
-            server.masterhost, server.masterport, client);
-        sdsfree(client);
+        redisLog(REDIS_NOTICE,"SLAVE OF %s:%d enabled (user request)",
+            server.masterhost, server.masterport);
     }
     addReply(c,shared.ok);
 }
 
 /* ROLE command: provide information about the role of the instance
  * (master or slave) and additional information related to replication
@@ -1793,23 +1540,20 @@
         char *slavestate = NULL;
 
         addReplyMultiBulkLen(c,5);
         addReplyBulkCBuffer(c,"slave",5);
         addReplyBulkCString(c,server.masterhost);
         addReplyLongLong(c,server.masterport);
-        if (slaveIsInHandshakeState()) {
-            slavestate = "handshake";
-        } else {
-            switch(server.repl_state) {
-            case REDIS_REPL_NONE: slavestate = "none"; break;
-            case REDIS_REPL_CONNECT: slavestate = "connect"; break;
-            case REDIS_REPL_CONNECTING: slavestate = "connecting"; break;
-            case REDIS_REPL_TRANSFER: slavestate = "sync"; break;
-            case REDIS_REPL_CONNECTED: slavestate = "connected"; break;
-            default: slavestate = "unknown"; break;
-            }
+        switch(server.repl_state) {
+        case REDIS_REPL_NONE: slavestate = "none"; break;
+        case REDIS_REPL_CONNECT: slavestate = "connect"; break;
+        case REDIS_REPL_CONNECTING: slavestate = "connecting"; break;
+        case REDIS_REPL_RECEIVE_PONG: /* see next */
+        case REDIS_REPL_TRANSFER: slavestate = "sync"; break;
+        case REDIS_REPL_CONNECTED: slavestate = "connected"; break;
+        default: slavestate = "unknown"; break;
         }
         addReplyBulkCString(c,slavestate);
         addReplyLongLong(c,server.master ? server.master->reploff : -1);
     }
 }
 
@@ -2036,23 +1780,170 @@
 /* Returns non-zero if the specified entry exists inside the cache, that is,
  * if all the slaves are aware of this script SHA1. */
 int replicationScriptCacheExists(sds sha1) {
     return dictFind(server.repl_scriptcache_dict,sha1) != NULL;
 }
 
-/* --------------------------- REPLICATION CRON  ----------------------------- */
+/* ----------------------- SYNCHRONOUS REPLICATION --------------------------
+ * Redis synchronous replication design can be summarized in points:
+ *
+ * - Redis masters have a global replication offset, used by PSYNC.
+ * - Master increment the offset every time new commands are sent to slaves.
+ * - Slaves ping back masters with the offset processed so far.
+ *
+ * So synchronous replication adds a new WAIT command in the form:
+ *
+ *   WAIT <num_replicas> <milliseconds_timeout>
+ *
+ * That returns the number of replicas that processed the query when
+ * we finally have at least num_replicas, or when the timeout was
+ * reached.
+ *
+ * The command is implemented in this way:
+ *
+ * - Every time a client processes a command, we remember the replication
+ *   offset after sending that command to the slaves.
+ * - When WAIT is called, we ask slaves to send an acknowledgement ASAP.
+ *   The client is blocked at the same time (see blocked.c).
+ * - Once we receive enough ACKs for a given offset or when the timeout
+ *   is reached, the WAIT command is unblocked and the reply sent to the
+ *   client.
+ */
+
+/* This just set a flag so that we broadcast a REPLCONF GETACK command
+ * to all the slaves in the beforeSleep() function. Note that this way
+ * we "group" all the clients that want to wait for synchronouns replication
+ * in a given event loop iteration, and send a single GETACK for them all. */
+void replicationRequestAckFromSlaves(void) {
+    server.get_ack_from_slaves = 1;
+}
+
+/* Return the number of slaves that already acknowledged the specified
+ * replication offset. */
+int replicationCountAcksByOffset(long long offset) {
+    listIter li;
+    listNode *ln;
+    int count = 0;
+
+    listRewind(server.slaves,&li);
+    while((ln = listNext(&li))) {
+        redisClient *slave = ln->value;
+
+        if (slave->replstate != REDIS_REPL_ONLINE) continue;
+        if (slave->repl_ack_off >= offset) count++;
+    }
+    return count;
+}
+
+/* WAIT for N replicas to acknowledge the processing of our latest
+ * write command (and all the previous commands). */
+void waitCommand(redisClient *c) {
+    mstime_t timeout;
+    long numreplicas, ackreplicas;
+    long long offset = c->woff;
+
+    /* Argument parsing. */
+    if (getLongFromObjectOrReply(c,c->argv[1],&numreplicas,NULL) != REDIS_OK)
+        return;
+    if (getTimeoutFromObjectOrReply(c,c->argv[2],&timeout,UNIT_MILLISECONDS)
+        != REDIS_OK) return;
+
+    /* First try without blocking at all. */
+    ackreplicas = replicationCountAcksByOffset(c->woff);
+    if (ackreplicas >= numreplicas || c->flags & REDIS_MULTI) {
+        addReplyLongLong(c,ackreplicas);
+        return;
+    }
+
+    /* Otherwise block the client and put it into our list of clients
+     * waiting for ack from slaves. */
+    c->bpop.timeout = timeout;
+    c->bpop.reploffset = offset;
+    c->bpop.numreplicas = numreplicas;
+    listAddNodeTail(server.clients_waiting_acks,c);
+    blockClient(c,REDIS_BLOCKED_WAIT);
+
+    /* Make sure that the server will send an ACK request to all the slaves
+     * before returning to the event loop. */
+    replicationRequestAckFromSlaves();
+}
+
+/* This is called by unblockClient() to perform the blocking op type
+ * specific cleanup. We just remove the client from the list of clients
+ * waiting for replica acks. Never call it directly, call unblockClient()
+ * instead. */
+void unblockClientWaitingReplicas(redisClient *c) {
+    listNode *ln = listSearchKey(server.clients_waiting_acks,c);
+    redisAssert(ln != NULL);
+    listDelNode(server.clients_waiting_acks,ln);
+}
+
+/* Check if there are clients blocked in WAIT that can be unblocked since
+ * we received enough ACKs from slaves. */
+void processClientsWaitingReplicas(void) {
+    long long last_offset = 0;
+    int last_numreplicas = 0;
+
+    listIter li;
+    listNode *ln;
+
+    listRewind(server.clients_waiting_acks,&li);
+    while((ln = listNext(&li))) {
+        redisClient *c = ln->value;
+
+        /* Every time we find a client that is satisfied for a given
+         * offset and number of replicas, we remember it so the next client
+         * may be unblocked without calling replicationCountAcksByOffset()
+         * if the requested offset / replicas were equal or less. */
+        if (last_offset && last_offset > c->bpop.reploffset &&
+                           last_numreplicas > c->bpop.numreplicas)
+        {
+            unblockClient(c);
+            addReplyLongLong(c,last_numreplicas);
+        } else {
+            int numreplicas = replicationCountAcksByOffset(c->bpop.reploffset);
+
+            if (numreplicas >= c->bpop.numreplicas) {
+                last_offset = c->bpop.reploffset;
+                last_numreplicas = numreplicas;
+                unblockClient(c);
+                addReplyLongLong(c,numreplicas);
+            }
+        }
+    }
+}
+
+/* Return the slave replication offset for this instance, that is
+ * the offset for which we already processed the master replication stream. */
+long long replicationGetSlaveOffset(void) {
+    long long offset = 0;
+
+    if (server.masterhost != NULL) {
+        if (server.master) {
+            offset = server.master->reploff;
+        } else if (server.cached_master) {
+            offset = server.cached_master->reploff;
+        }
+    }
+    /* offset may be -1 when the master does not support it at all, however
+     * this function is designed to return an offset that can express the
+     * amount of data processed by the master, so we return a positive
+     * integer. */
+    if (offset < 0) offset = 0;
+    return offset;
+}
+
+/* --------------------------- REPLICATION CRON  ---------------------------- */
 
 /* Replication cron function, called 1 time per second. */
 void replicationCron(void) {
-    static long long replication_cron_loops = 0;
-
     /* Non blocking connection timeout? */
     if (server.masterhost &&
         (server.repl_state == REDIS_REPL_CONNECTING ||
-         slaveIsInHandshakeState()) &&
-         (time(NULL)-server.repl_transfer_lastio) > server.repl_timeout)
+         server.repl_state == REDIS_REPL_RECEIVE_PONG) &&
+        (time(NULL)-server.repl_transfer_lastio) > server.repl_timeout)
     {
         redisLog(REDIS_WARNING,"Timeout connecting to the MASTER...");
         undoConnectWithMaster();
     }
 
     /* Bulk transfer I/O timeout? */
@@ -2088,40 +1979,37 @@
         replicationSendAck();
 
     /* If we have attached slaves, PING them from time to time.
      * So slaves can implement an explicit timeout to masters, and will
      * be able to detect a link disconnection even if the TCP connection
      * will not actually go down. */
-    listIter li;
-    listNode *ln;
-    robj *ping_argv[1];
+    if (!(server.cronloops % (server.repl_ping_slave_period * server.hz))) {
+        listIter li;
+        listNode *ln;
+        robj *ping_argv[1];
 
-    /* First, send PING according to ping_slave_period. */
-    if ((replication_cron_loops % server.repl_ping_slave_period) == 0) {
+        /* First, send PING */
         ping_argv[0] = createStringObject("PING",4);
-        replicationFeedSlaves(server.slaves, server.slaveseldb,
-            ping_argv, 1);
+        replicationFeedSlaves(server.slaves, server.slaveseldb, ping_argv, 1);
         decrRefCount(ping_argv[0]);
-    }
 
-    /* Second, send a newline to all the slaves in pre-synchronization
-     * stage, that is, slaves waiting for the master to create the RDB file.
-     * The newline will be ignored by the slave but will refresh the
-     * last-io timer preventing a timeout. In this case we ignore the
-     * ping period and refresh the connection once per second since certain
-     * timeouts are set at a few seconds (example: PSYNC response). */
-    listRewind(server.slaves,&li);
-    while((ln = listNext(&li))) {
-        redisClient *slave = ln->value;
+        /* Second, send a newline to all the slaves in pre-synchronization
+         * stage, that is, slaves waiting for the master to create the RDB file.
+         * The newline will be ignored by the slave but will refresh the
+         * last-io timer preventing a timeout. */
+        listRewind(server.slaves,&li);
+        while((ln = listNext(&li))) {
+            redisClient *slave = ln->value;
 
-        if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START ||
-            (slave->replstate == REDIS_REPL_WAIT_BGSAVE_END &&
-             server.rdb_child_type != REDIS_RDB_CHILD_TYPE_SOCKET))
-        {
-            if (write(slave->fd, "\n", 1) == -1) {
-                /* Don't worry, it's just a ping. */
+            if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START ||
+                (slave->replstate == REDIS_REPL_WAIT_BGSAVE_END &&
+                 server.rdb_child_type != REDIS_RDB_CHILD_TYPE_SOCKET))
+            {
+                if (write(slave->fd, "\n", 1) == -1) {
+                    /* Don't worry, it's just a ping. */
+                }
             }
         }
     }
 
     /* Disconnect timedout slaves. */
     if (listLength(server.slaves)) {
@@ -2176,33 +2064,41 @@
      * This code is also useful to trigger a BGSAVE if the diskless
      * replication was turned off with CONFIG SET, while there were already
      * slaves in WAIT_BGSAVE_START state. */
     if (server.rdb_child_pid == -1 && server.aof_child_pid == -1) {
         time_t idle, max_idle = 0;
         int slaves_waiting = 0;
-        int mincapa = -1;
         listNode *ln;
         listIter li;
 
         listRewind(server.slaves,&li);
         while((ln = listNext(&li))) {
             redisClient *slave = ln->value;
             if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START) {
                 idle = server.unixtime - slave->lastinteraction;
                 if (idle > max_idle) max_idle = idle;
                 slaves_waiting++;
-                mincapa = (mincapa == -1) ? slave->slave_capa :
-                                            (mincapa & slave->slave_capa);
             }
         }
 
         if (slaves_waiting && max_idle > server.repl_diskless_sync_delay) {
             /* Start a BGSAVE. Usually with socket target, or with disk target
              * if there was a recent socket -> disk config change. */
-            startBgsaveForReplication(mincapa);
+            if (startBgsaveForReplication() == REDIS_OK) {
+                /* It started! We need to change the state of slaves
+                 * from WAIT_BGSAVE_START to WAIT_BGSAVE_END in case
+                 * the current target is disk. Otherwise it was already done
+                 * by rdbSaveToSlavesSockets() which is called by
+                 * startBgsaveForReplication(). */
+                listRewind(server.slaves,&li);
+                while((ln = listNext(&li))) {
+                    redisClient *slave = ln->value;
+                    if (slave->replstate == REDIS_REPL_WAIT_BGSAVE_START)
+                        slave->replstate = REDIS_REPL_WAIT_BGSAVE_END;
+                }
+            }
         }
     }
 
     /* Refresh the number of slaves with lag <= min-slaves-max-lag. */
     refreshGoodSlavesCount();
-    replication_cron_loops++; /* Incremented with frequency 1 HZ. */
 }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/replication.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/replication.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/rio.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/rio.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c	2015-04-01 22:01:44.000000000 +0800
@@ -27,12 +27,13 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
 #include "redis.h"
 #include "sha1.h"
 #include "rand.h"
+#include "cluster.h"
 
 #include <lua.h>
 #include <lauxlib.h>
 #include <lualib.h>
 #include <ctype.h>
 #include <math.h>
@@ -305,12 +306,13 @@
             luaPushError(lua,
                 "Wrong number of args calling Redis command From Lua script");
         else
             luaPushError(lua,"Unknown Redis command called from Lua script");
         goto cleanup;
     }
+    c->cmd = cmd;
 
     /* There are commands that are not allowed inside scripts. */
     if (cmd->flags & REDIS_CMD_NOSCRIPT) {
         luaPushError(lua, "This Redis command is not allowed from scripts");
         goto cleanup;
     }
@@ -351,14 +353,30 @@
         }
     }
 
     if (cmd->flags & REDIS_CMD_RANDOM) server.lua_random_dirty = 1;
     if (cmd->flags & REDIS_CMD_WRITE) server.lua_write_dirty = 1;
 
+    /* If this is a Redis Cluster node, we need to make sure Lua is not
+     * trying to access non-local keys, with the exception of commands
+     * received from our master. */
+    if (server.cluster_enabled && !(server.lua_caller->flags & REDIS_MASTER)) {
+        /* Duplicate relevant flags in the lua client. */
+        c->flags &= ~(REDIS_READONLY|REDIS_ASKING);
+        c->flags |= server.lua_caller->flags & (REDIS_READONLY|REDIS_ASKING);
+        if (getNodeByQuery(c,c->cmd,c->argv,c->argc,NULL,NULL) !=
+                           server.cluster->myself)
+        {
+            luaPushError(lua,
+                "Lua script attempted to access a non local key in a "
+                "cluster node");
+            goto cleanup;
+        }
+    }
+
     /* Run the command */
-    c->cmd = cmd;
     call(c,REDIS_CALL_SLOWLOG | REDIS_CALL_STATS);
 
     /* Convert the result of the Redis command into a suitable Lua type.
      * The first thing we need is to create a single string from the client
      * output buffers. */
     if (listLength(c->reply) == 0 && c->bufpos < REDIS_REPLY_CHUNK_BYTES) {
@@ -397,13 +415,14 @@
 
         /* Try to cache the object in the cached_objects array.
          * The object must be small, SDS-encoded, and with refcount = 1
          * (we must be the only owner) for us to cache it. */
         if (j < LUA_CMD_OBJCACHE_SIZE &&
             o->refcount == 1 &&
-            o->encoding == REDIS_ENCODING_RAW &&
+            (o->encoding == REDIS_ENCODING_RAW ||
+             o->encoding == REDIS_ENCODING_EMBSTR) &&
             sdslen(o->ptr) <= LUA_CMD_OBJCACHE_MAX_LEN)
         {
             struct sdshdr *sh = (void*)(((char*)(o->ptr))-(sizeof(struct sdshdr)));
 
             if (cached_objects[j]) decrRefCount(cached_objects[j]);
             cached_objects[j] = o;
@@ -590,31 +609,29 @@
     char *s[32];
     sds code = sdsempty();
     int j = 0;
 
     /* strict.lua from: http://metalua.luaforge.net/src/lib/strict.lua.html.
      * Modified to be adapted to Redis. */
-    s[j++]="local dbg=debug\n";
     s[j++]="local mt = {}\n";
     s[j++]="setmetatable(_G, mt)\n";
     s[j++]="mt.__newindex = function (t, n, v)\n";
-    s[j++]="  if dbg.getinfo(2) then\n";
-    s[j++]="    local w = dbg.getinfo(2, \"S\").what\n";
+    s[j++]="  if debug.getinfo(2) then\n";
+    s[j++]="    local w = debug.getinfo(2, \"S\").what\n";
     s[j++]="    if w ~= \"main\" and w ~= \"C\" then\n";
     s[j++]="      error(\"Script attempted to create global variable '\"..tostring(n)..\"'\", 2)\n";
     s[j++]="    end\n";
     s[j++]="  end\n";
     s[j++]="  rawset(t, n, v)\n";
     s[j++]="end\n";
     s[j++]="mt.__index = function (t, n)\n";
-    s[j++]="  if dbg.getinfo(2) and dbg.getinfo(2, \"S\").what ~= \"C\" then\n";
+    s[j++]="  if debug.getinfo(2) and debug.getinfo(2, \"S\").what ~= \"C\" then\n";
     s[j++]="    error(\"Script attempted to access unexisting global variable '\"..tostring(n)..\"'\", 2)\n";
     s[j++]="  end\n";
     s[j++]="  return rawget(t, n)\n";
     s[j++]="end\n";
-    s[j++]="debug = nil\n";
     s[j++]=NULL;
 
     for (j = 0; s[j] != NULL; j++) code = sdscatlen(code,s[j],strlen(s[j]));
     luaL_loadbuffer(lua,code,sdslen(code),"@enable_strict_lua");
     lua_pcall(lua,0,0,0);
     sdsfree(code);
@@ -712,17 +729,16 @@
 
     /* Add a helper function we use for pcall error reporting.
      * Note that when the error is in the C function we want to report the
      * information about the caller, that's what makes sense from the point
      * of view of the user debugging a script. */
     {
-        char *errh_func =       "local dbg = debug\n"
-                                "function __redis__err__handler(err)\n"
-                                "  local i = dbg.getinfo(2,'nSl')\n"
+        char *errh_func =       "function __redis__err__handler(err)\n"
+                                "  local i = debug.getinfo(2,'nSl')\n"
                                 "  if i and i.what == 'C' then\n"
-                                "    i = dbg.getinfo(3,'nSl')\n"
+                                "    i = debug.getinfo(3,'nSl')\n"
                                 "  end\n"
                                 "  if i then\n"
                                 "    return i.source .. ':' .. i.currentline .. ': ' .. err\n"
                                 "  else\n"
                                 "    return err\n"
                                 "  end\n"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/scripting.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/scripting.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c	2015-04-01 22:01:44.000000000 +0800
@@ -68,13 +68,13 @@
 /* Create an empty (zero length) sds string. Even in this case the string
  * always has an implicit null term. */
 sds sdsempty(void) {
     return sdsnewlen("",0);
 }
 
-/* Create a new sds string starting from a null terminated C string. */
+/* Create a new sds string starting from a null termined C string. */
 sds sdsnew(const char *init) {
     size_t initlen = (init == NULL) ? 0 : strlen(init);
     return sdsnewlen(init, initlen);
 }
 
 /* Duplicate an sds string. */
@@ -554,13 +554,13 @@
  * After the call, the modified sds string is no longer valid and all the
  * references must be substituted with the new pointer returned by the call.
  *
  * Example:
  *
  * s = sdsnew("AA...AA.a.aa.aHelloWorld     :::");
- * s = sdstrim(s,"Aa. :");
+ * s = sdstrim(s,"A. :");
  * printf("%s\n", s);
  *
  * Output will be just "Hello World".
  */
 sds sdstrim(sds s, const char *cset) {
     struct sdshdr *sh = (void*) (s-(sizeof(struct sdshdr)));
@@ -1080,27 +1080,24 @@
             memcmp(y,"\"\\a\\n\\x00foo\\r\"",15) == 0)
 
         {
             int oldfree;
 
             sdsfree(x);
-            sdsfree(y);
             x = sdsnew("0");
             sh = (void*) (x-(sizeof(struct sdshdr)));
             test_cond("sdsnew() free/len buffers", sh->len == 1 && sh->free == 0);
             x = sdsMakeRoomFor(x,1);
             sh = (void*) (x-(sizeof(struct sdshdr)));
             test_cond("sdsMakeRoomFor()", sh->len == 1 && sh->free > 0);
             oldfree = sh->free;
             x[1] = '1';
             sdsIncrLen(x,1);
             test_cond("sdsIncrLen() -- content", x[0] == '0' && x[1] == '1');
             test_cond("sdsIncrLen() -- len", sh->len == 2);
             test_cond("sdsIncrLen() -- free", sh->free == oldfree-1);
-
-            sdsfree(x);
         }
     }
     test_report()
     return 0;
 }
 #endif
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sds.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sds.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c	2015-04-01 22:01:44.000000000 +0800
@@ -394,12 +394,13 @@
     {"unsubscribe",unsubscribeCommand,-1,"",0,NULL,0,0,0,0,0},
     {"psubscribe",psubscribeCommand,-2,"",0,NULL,0,0,0,0,0},
     {"punsubscribe",punsubscribeCommand,-1,"",0,NULL,0,0,0,0,0},
     {"publish",sentinelPublishCommand,3,"",0,NULL,0,0,0,0,0},
     {"info",sentinelInfoCommand,-1,"",0,NULL,0,0,0,0,0},
     {"role",sentinelRoleCommand,1,"l",0,NULL,0,0,0,0,0},
+    {"client",clientCommand,-2,"rs",0,NULL,0,0,0,0,0},
     {"shutdown",shutdownCommand,-1,"",0,NULL,0,0,0,0,0}
 };
 
 /* This function overwrites a few normal Redis config default with Sentinel
  * specific defaults. */
 void initSentinelConfig(void) {
@@ -919,13 +920,12 @@
      * to a master. */
     if (flags & SRI_MASTER) table = sentinel.masters;
     else if (flags & SRI_SLAVE) table = master->slaves;
     else if (flags & SRI_SENTINEL) table = master->sentinels;
     sdsname = sdsnew(name);
     if (dictFind(table,sdsname)) {
-        releaseSentinelAddr(addr);
         sdsfree(sdsname);
         errno = EBUSY;
         return NULL;
     }
 
     /* Create the instance object. */
@@ -1153,15 +1153,13 @@
 }
 
 /* Reset the state of a monitored master:
  * 1) Remove all slaves.
  * 2) Remove all sentinels.
  * 3) Remove most of the flags resulting from runtime operations.
- * 4) Reset timers to their default value. For example after a reset it will be
- *    possible to failover again the same master ASAP, without waiting the
- *    failover timeout delay.
+ * 4) Reset timers to their default value.
  * 5) In the process of doing this undo the failover if in progress.
  * 6) Disconnect the connections with the master (will reconnect automatically).
  */
 
 #define SENTINEL_RESET_NO_SENTINELS (1<<0)
 void sentinelResetMaster(sentinelRedisInstance *ri, int flags) {
@@ -1178,13 +1176,13 @@
     if (ri->leader) {
         sdsfree(ri->leader);
         ri->leader = NULL;
     }
     ri->failover_state = SENTINEL_FAILOVER_STATE_NONE;
     ri->failover_state_change_time = 0;
-    ri->failover_start_time = 0; /* We can failover again ASAP. */
+    ri->failover_start_time = 0;
     ri->promoted_slave = NULL;
     sdsfree(ri->runid);
     sdsfree(ri->slave_master_host);
     ri->runid = NULL;
     ri->slave_master_host = NULL;
     ri->last_ping_time = mstime();
@@ -1268,13 +1266,16 @@
     for (j = 0; j < numslaves; j++) {
         sentinelRedisInstance *slave;
 
         slave = createSentinelRedisInstance(NULL,SRI_SLAVE,slaves[j]->ip,
                     slaves[j]->port, master->quorum, master);
         releaseSentinelAddr(slaves[j]);
-        if (slave) sentinelEvent(REDIS_NOTICE,"+slave",slave,"%@");
+        if (slave) {
+            sentinelEvent(REDIS_NOTICE,"+slave",slave,"%@");
+            sentinelFlushConfig();
+        }
     }
     zfree(slaves);
 
     /* Release the old address at the end so we are safe even if the function
      * gets the master->addr->ip and master->addr->port as arguments. */
     releaseSentinelAddr(oldaddr);
@@ -1542,13 +1543,13 @@
              * already successfully promoted. So as the address of this slave
              * we use the old master address instead. */
             if (sentinelAddrIsEqual(slave_addr,master_addr))
                 slave_addr = master->addr;
             line = sdscatprintf(sdsempty(),
                 "sentinel known-slave %s %s %d",
-                master->name, slave_addr->ip, slave_addr->port);
+                master->name, ri->addr->ip, ri->addr->port);
             rewriteConfigRewriteLine(state,"sentinel",line,1);
         }
         dictReleaseIterator(di2);
 
         /* sentinel known-sentinel */
         di2 = dictGetIterator(master->sentinels);
@@ -1840,13 +1841,12 @@
              * otherwise add it. */
             if (sentinelRedisInstanceLookupSlave(ri,ip,atoi(port)) == NULL) {
                 if ((slave = createSentinelRedisInstance(NULL,SRI_SLAVE,ip,
                             atoi(port), ri->quorum, ri)) != NULL)
                 {
                     sentinelEvent(REDIS_NOTICE,"+slave",slave,"%@");
-                    sentinelFlushConfig();
                 }
             }
         }
 
         /* master_link_down_since_seconds:<seconds> */
         if (sdslen(l) >= 32 &&
@@ -2612,37 +2612,12 @@
         addReplyError(c,"No such master with that name");
         return NULL;
     }
     return ri;
 }
 
-#define SENTINEL_ISQR_OK 0
-#define SENTINEL_ISQR_NOQUORUM (1<<0)
-#define SENTINEL_ISQR_NOAUTH (1<<1)
-int sentinelIsQuorumReachable(sentinelRedisInstance *master, int *usableptr) {
-    dictIterator *di;
-    dictEntry *de;
-    int usable = 1; /* Number of usable Sentinels. Init to 1 to count myself. */
-    int result = SENTINEL_ISQR_OK;
-    int voters = dictSize(master->sentinels)+1; /* Known Sentinels + myself. */
-
-    di = dictGetIterator(master->sentinels);
-    while((de = dictNext(di)) != NULL) {
-        sentinelRedisInstance *ri = dictGetVal(de);
-
-        if (ri->flags & (SRI_S_DOWN|SRI_O_DOWN)) continue;
-        usable++;
-    }
-    dictReleaseIterator(di);
-
-    if (usable < (int)master->quorum) result |= SENTINEL_ISQR_NOQUORUM;
-    if (usable < voters/2+1) result |= SENTINEL_ISQR_NOAUTH;
-    if (usableptr) *usableptr = usable;
-    return result;
-}
-
 void sentinelCommand(redisClient *c) {
     if (!strcasecmp(c->argv[1]->ptr,"masters")) {
         /* SENTINEL MASTERS */
         if (c->argc != 2) goto numargserr;
         addReplyDictOfRedisInstances(c,sentinel.masters);
     } else if (!strcasecmp(c->argv[1]->ptr,"master")) {
@@ -2787,55 +2762,22 @@
             }
         } else {
             sentinelFlushConfig();
             sentinelEvent(REDIS_WARNING,"+monitor",ri,"%@ quorum %d",ri->quorum);
             addReply(c,shared.ok);
         }
-    } else if (!strcasecmp(c->argv[1]->ptr,"flushconfig")) {
-        if (c->argc != 2) goto numargserr;
-        sentinelFlushConfig();
-        addReply(c,shared.ok);
-        return;
     } else if (!strcasecmp(c->argv[1]->ptr,"remove")) {
         /* SENTINEL REMOVE <name> */
         sentinelRedisInstance *ri;
 
-        if (c->argc != 3) goto numargserr;
         if ((ri = sentinelGetMasterByNameOrReplyError(c,c->argv[2]))
             == NULL) return;
         sentinelEvent(REDIS_WARNING,"-monitor",ri,"%@");
         dictDelete(sentinel.masters,c->argv[2]->ptr);
         sentinelFlushConfig();
         addReply(c,shared.ok);
-    } else if (!strcasecmp(c->argv[1]->ptr,"ckquorum")) {
-        /* SENTINEL CKQUORUM <name> */
-        sentinelRedisInstance *ri;
-        int usable;
-
-        if (c->argc != 3) goto numargserr;
-        if ((ri = sentinelGetMasterByNameOrReplyError(c,c->argv[2]))
-            == NULL) return;
-        int result = sentinelIsQuorumReachable(ri,&usable);
-        if (result == SENTINEL_ISQR_OK) {
-            addReplySds(c, sdscatfmt(sdsempty(),
-                "+OK %i usable Sentinels. Quorum and failover authorization "
-                "can be reached\r\n",usable));
-        } else {
-            sds e = sdscatfmt(sdsempty(),
-                "-NOQUORUM %i usable Sentinels. ",usable);
-            if (result & SENTINEL_ISQR_NOQUORUM)
-                e = sdscat(e,"Not enough available Sentinels to reach the"
-                             " specified quorum for this master");
-            if (result & SENTINEL_ISQR_NOAUTH) {
-                if (result & SENTINEL_ISQR_NOQUORUM) e = sdscat(e,". ");
-                e = sdscat(e, "Not enough available Sentinels to reach the"
-                              " majority and authorize a failover");
-            }
-            e = sdscat(e,"\r\n");
-            addReplySds(c,e);
-        }
     } else if (!strcasecmp(c->argv[1]->ptr,"set")) {
         if (c->argc < 3 || c->argc % 2 == 0) goto numargserr;
         sentinelSetCommand(c);
     } else {
         addReplyErrorFormat(c,"Unknown sentinel subcommand '%s'",
                                (char*)c->argv[1]->ptr);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sentinel.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sentinel.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/setproctitle.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/setproctitle.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c	2015-04-01 22:01:44.000000000 +0800
@@ -20,13 +20,13 @@
 /* #define SHA1HANDSOFF * Copies data before messing with it. */
 
 #define SHA1HANDSOFF
 
 #include <stdio.h>
 #include <string.h>
-#include <stdint.h>
+#include <sys/types.h>	/* for u_int*_t */
 #include "solarisfixes.h"
 #include "sha1.h"
 #include "config.h"
 
 #define rol(value, bits) (((value) << (bits)) | ((value) >> (32 - (bits))))
 
@@ -50,18 +50,18 @@
 #define R3(v,w,x,y,z,i) z+=(((w|x)&y)|(w&x))+blk(i)+0x8F1BBCDC+rol(v,5);w=rol(w,30);
 #define R4(v,w,x,y,z,i) z+=(w^x^y)+blk(i)+0xCA62C1D6+rol(v,5);w=rol(w,30);
 
 
 /* Hash a single 512-bit block. This is the core of the algorithm. */
 
-void SHA1Transform(uint32_t state[5], const unsigned char buffer[64])
+void SHA1Transform(u_int32_t state[5], const unsigned char buffer[64])
 {
-    uint32_t a, b, c, d, e;
+    u_int32_t a, b, c, d, e;
     typedef union {
         unsigned char c[64];
-        uint32_t l[16];
+        u_int32_t l[16];
     } CHAR64LONG16;
 #ifdef SHA1HANDSOFF
     CHAR64LONG16 block[1];  /* use array to appear as a pointer */
     memcpy(block, buffer, 64);
 #else
     /* The following had better never be used because it causes the
@@ -125,15 +125,15 @@
     context->count[0] = context->count[1] = 0;
 }
 
 
 /* Run your data through this. */
 
-void SHA1Update(SHA1_CTX* context, const unsigned char* data, uint32_t len)
+void SHA1Update(SHA1_CTX* context, const unsigned char* data, u_int32_t len)
 {
-    uint32_t i, j;
+    u_int32_t i, j;
 
     j = context->count[0];
     if ((context->count[0] += len << 3) < j)
         context->count[1]++;
     context->count[1] += (len>>29);
     j = (j >> 3) & 63;
@@ -165,13 +165,13 @@
      * But we do it all backwards.
      */
     unsigned char *fcp = &finalcount[8];
 
     for (i = 0; i < 2; i++)
        {
-        uint32_t t = context->count[i];
+        u_int32_t t = context->count[i];
         int j;
 
         for (j = 0; j < 4; t >>= 8, j++)
 	          *--fcp = (unsigned char) t;
     }
 #else
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.c.bc differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.h	2015-04-01 22:01:44.000000000 +0800
@@ -3,15 +3,15 @@
 SHA-1 in C
 By Steve Reid <steve@edmweb.com>
 100% Public Domain
 */
 
 typedef struct {
-    uint32_t state[5];
-    uint32_t count[2];
+    u_int32_t state[5];
+    u_int32_t count[2];
     unsigned char buffer[64];
 } SHA1_CTX;
 
-void SHA1Transform(uint32_t state[5], const unsigned char buffer[64]);
+void SHA1Transform(u_int32_t state[5], const unsigned char buffer[64]);
 void SHA1Init(SHA1_CTX* context);
-void SHA1Update(SHA1_CTX* context, const unsigned char* data, uint32_t len);
+void SHA1Update(SHA1_CTX* context, const unsigned char* data, u_int32_t len);
 void SHA1Final(unsigned char digest[20], SHA1_CTX* context);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sha1.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sha1.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c	2015-04-01 22:01:44.000000000 +0800
@@ -60,13 +60,13 @@
             se->argv[j] = createObject(REDIS_STRING,
                 sdscatprintf(sdsempty(),"... (%d more arguments)",
                 argc-slargc+1));
         } else {
             /* Trim too long strings as well... */
             if (argv[j]->type == REDIS_STRING &&
-                argv[j]->encoding == REDIS_ENCODING_RAW &&
+                sdsEncodedObject(argv[j]) &&
                 sdslen(argv[j]->ptr) > SLOWLOG_ENTRY_MAX_STRING)
             {
                 sds s = sdsnewlen(argv[j]->ptr, SLOWLOG_ENTRY_MAX_STRING);
 
                 s = sdscatprintf(s,"... (%lu more bytes)",
                     (unsigned long)
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/slowlog.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/slowlog.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c	2015-04-01 22:01:44.000000000 +0800
@@ -191,12 +191,13 @@
     unsigned int outputlen = 0;
     int desc = 0, alpha = 0;
     long limit_start = 0, limit_count = -1, start, end;
     int j, dontsort = 0, vectorlen;
     int getop = 0; /* GET operation counter */
     int int_convertion_error = 0;
+    int syntax_error = 0;
     robj *sortval, *sortby = NULL, *storekey = NULL;
     redisSortObject *vector; /* Resulting vector to sort */
 
     /* Lookup the key to sort. It must be of the right types */
     sortval = lookupKeyRead(c->db,c->argv[1]);
     if (sortval && sortval->type != REDIS_SET &&
@@ -233,40 +234,60 @@
         } else if (!strcasecmp(c->argv[j]->ptr,"limit") && leftargs >= 2) {
             if ((getLongFromObjectOrReply(c, c->argv[j+1], &limit_start, NULL)
                  != REDIS_OK) ||
                 (getLongFromObjectOrReply(c, c->argv[j+2], &limit_count, NULL)
                  != REDIS_OK))
             {
-                decrRefCount(sortval);
-                listRelease(operations);
-                return;
+                syntax_error++;
+                break;
             }
             j+=2;
         } else if (!strcasecmp(c->argv[j]->ptr,"store") && leftargs >= 1) {
             storekey = c->argv[j+1];
             j++;
         } else if (!strcasecmp(c->argv[j]->ptr,"by") && leftargs >= 1) {
             sortby = c->argv[j+1];
             /* If the BY pattern does not contain '*', i.e. it is constant,
              * we don't need to sort nor to lookup the weight keys. */
-            if (strchr(c->argv[j+1]->ptr,'*') == NULL) dontsort = 1;
+            if (strchr(c->argv[j+1]->ptr,'*') == NULL) {
+                dontsort = 1;
+            } else {
+                /* If BY is specified with a real patter, we can't accept
+                 * it in cluster mode. */
+                if (server.cluster_enabled) {
+                    addReplyError(c,"BY option of SORT denied in Cluster mode.");
+                    syntax_error++;
+                    break;
+                }
+            }
             j++;
         } else if (!strcasecmp(c->argv[j]->ptr,"get") && leftargs >= 1) {
+            if (server.cluster_enabled) {
+                addReplyError(c,"GET option of SORT denied in Cluster mode.");
+                syntax_error++;
+                break;
+            }
             listAddNodeTail(operations,createSortOperation(
                 REDIS_SORT_GET,c->argv[j+1]));
             getop++;
             j++;
         } else {
-            decrRefCount(sortval);
-            listRelease(operations);
             addReply(c,shared.syntaxerr);
-            return;
+            syntax_error++;
+            break;
         }
         j++;
     }
 
+    /* Handle syntax errors set during options parsing. */
+    if (syntax_error) {
+        decrRefCount(sortval);
+        listRelease(operations);
+        return;
+    }
+
     /* When sorting a set with no sort specified, we must sort the output
      * so the result is consistent across scripting and replication.
      *
      * The other types (list, sorted set) will retain their native order
      * even if no sort order is requested, so they remain stable across
      * scripting and replication. */
@@ -414,13 +435,13 @@
                 byval = vector[j].obj;
             }
 
             if (alpha) {
                 if (sortby) vector[j].u.cmpobj = getDecodedObject(byval);
             } else {
-                if (byval->encoding == REDIS_ENCODING_RAW) {
+                if (sdsEncodedObject(byval)) {
                     char *eptr;
 
                     vector[j].u.score = strtod(byval->ptr,&eptr);
                     if (eptr[0] != '\0' || errno == ERANGE ||
                         isnan(vector[j].u.score))
                     {
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sort.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sort.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/sparkline.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/sparkline.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/syncio.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/syncio.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c	2015-04-01 22:01:44.000000000 +0800
@@ -40,13 +40,13 @@
 void hashTypeTryConversion(robj *o, robj **argv, int start, int end) {
     int i;
 
     if (o->encoding != REDIS_ENCODING_ZIPLIST) return;
 
     for (i = start; i <= end; i++) {
-        if (argv[i]->encoding == REDIS_ENCODING_RAW &&
+        if (sdsEncodedObject(argv[i]) &&
             sdslen(argv[i]->ptr) > server.hash_max_ziplist_value)
         {
             hashTypeConvert(o, REDIS_ENCODING_HT);
             break;
         }
     }
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_hash.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_hash.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c	2015-04-01 22:01:44.000000000 +0800
@@ -35,13 +35,13 @@
 
 /* Check the argument length to see if it requires us to convert the ziplist
  * to a real list. Only check raw-encoded objects because integer encoded
  * objects are never too long. */
 void listTypeTryConversion(robj *subject, robj *value) {
     if (subject->encoding != REDIS_ENCODING_ZIPLIST) return;
-    if (value->encoding == REDIS_ENCODING_RAW &&
+    if (sdsEncodedObject(value) &&
         sdslen(value->ptr) > server.list_max_ziplist_value)
             listTypeConvert(subject,REDIS_ENCODING_LINKEDLIST);
 }
 
 /* The function pushes an element to the specified list object 'subject',
  * at head or tail position as specified by 'where'.
@@ -229,13 +229,13 @@
 }
 
 /* Compare the given object with the entry at the current position. */
 int listTypeEqual(listTypeEntry *entry, robj *o) {
     listTypeIterator *li = entry->li;
     if (li->encoding == REDIS_ENCODING_ZIPLIST) {
-        redisAssertWithInfo(NULL,o,o->encoding == REDIS_ENCODING_RAW);
+        redisAssertWithInfo(NULL,o,sdsEncodedObject(o));
         return ziplistCompare(entry->zi,o->ptr,sdslen(o->ptr));
     } else if (li->encoding == REDIS_ENCODING_LINKEDLIST) {
         return equalStringObjects(o,listNodeValue(entry->ln));
     } else {
         redisPanic("Unknown list encoding");
     }
@@ -769,13 +769,13 @@
  *   for this list, from the one that blocked first, to the last, accordingly
  *   to the number of elements we have in the ready list.
  */
 
 /* Set a client in blocking mode for the specified key, with the specified
  * timeout */
-void blockForKeys(redisClient *c, robj **keys, int numkeys, time_t timeout, robj *target) {
+void blockForKeys(redisClient *c, robj **keys, int numkeys, mstime_t timeout, robj *target) {
     dictEntry *de;
     list *l;
     int j;
 
     c->bpop.timeout = timeout;
     c->bpop.target = target;
@@ -799,19 +799,17 @@
             redisAssertWithInfo(c,keys[j],retval == DICT_OK);
         } else {
             l = dictGetVal(de);
         }
         listAddNodeTail(l,c);
     }
-
-    /* Mark the client as a blocked client */
-    c->flags |= REDIS_BLOCKED;
-    server.bpop_blocked_clients++;
+    blockClient(c,REDIS_BLOCKED_LIST);
 }
 
-/* Unblock a client that's waiting in a blocking operation such as BLPOP */
+/* Unblock a client that's waiting in a blocking operation such as BLPOP.
+ * You should never call this function directly, but unblockClient() instead. */
 void unblockClientWaitingData(redisClient *c) {
     dictEntry *de;
     dictIterator *di;
     list *l;
 
     redisAssertWithInfo(c,NULL,dictSize(c->bpop.keys) != 0);
@@ -833,16 +831,12 @@
     /* Cleanup the client structure */
     dictEmpty(c->bpop.keys,NULL);
     if (c->bpop.target) {
         decrRefCount(c->bpop.target);
         c->bpop.target = NULL;
     }
-    c->flags &= ~REDIS_BLOCKED;
-    c->flags |= REDIS_UNBLOCKED;
-    server.bpop_blocked_clients--;
-    listAddNodeTail(server.unblocked_clients,c);
 }
 
 /* If the specified key has clients blocked waiting for list pushes, this
  * function will put the key reference into the server.ready_keys list.
  * Note that db->ready_keys is a hash table that allows us to avoid putting
  * the same key again and again in the list in case of multiple pushes
@@ -991,16 +985,16 @@
                                      receiver->lastcmd->proc == blpopCommand) ?
                                     REDIS_HEAD : REDIS_TAIL;
                         robj *value = listTypePop(o,where);
 
                         if (value) {
                             /* Protect receiver->bpop.target, that will be
-                             * freed by the next unblockClientWaitingData()
+                             * freed by the next unblockClient()
                              * call. */
                             if (dstkey) incrRefCount(dstkey);
-                            unblockClientWaitingData(receiver);
+                            unblockClient(receiver);
 
                             if (serveClientBlockedOnList(receiver,
                                 rl->key,dstkey,rl->db,value,
                                 where) == REDIS_ERR)
                             {
                                 /* If we failed serving the client we need
@@ -1027,38 +1021,20 @@
             listDelNode(l,ln);
         }
         listRelease(l); /* We have the new list on place at this point. */
     }
 }
 
-int getTimeoutFromObjectOrReply(redisClient *c, robj *object, time_t *timeout) {
-    long tval;
-
-    if (getLongFromObjectOrReply(c,object,&tval,
-        "timeout is not an integer or out of range") != REDIS_OK)
-        return REDIS_ERR;
-
-    if (tval < 0) {
-        addReplyError(c,"timeout is negative");
-        return REDIS_ERR;
-    }
-
-    if (tval > 0) tval += server.unixtime;
-    *timeout = tval;
-
-    return REDIS_OK;
-}
-
 /* Blocking RPOP/LPOP */
 void blockingPopGenericCommand(redisClient *c, int where) {
     robj *o;
-    time_t timeout;
+    mstime_t timeout;
     int j;
 
-    if (getTimeoutFromObjectOrReply(c,c->argv[c->argc-1],&timeout) != REDIS_OK)
-        return;
+    if (getTimeoutFromObjectOrReply(c,c->argv[c->argc-1],&timeout,UNIT_SECONDS)
+        != REDIS_OK) return;
 
     for (j = 1; j < c->argc-1; j++) {
         o = lookupKeyWrite(c->db,c->argv[j]);
         if (o != NULL) {
             if (o->type != REDIS_LIST) {
                 addReply(c,shared.wrongtypeerr);
@@ -1111,16 +1087,16 @@
 
 void brpopCommand(redisClient *c) {
     blockingPopGenericCommand(c,REDIS_TAIL);
 }
 
 void brpoplpushCommand(redisClient *c) {
-    time_t timeout;
+    mstime_t timeout;
 
-    if (getTimeoutFromObjectOrReply(c,c->argv[3],&timeout) != REDIS_OK)
-        return;
+    if (getTimeoutFromObjectOrReply(c,c->argv[3],&timeout,UNIT_SECONDS)
+        != REDIS_OK) return;
 
     robj *key = lookupKeyWrite(c->db, c->argv[1]);
 
     if (key == NULL) {
         if (c->flags & REDIS_MULTI) {
             /* Blocking against an empty list in a multi state
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_list.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_list.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c	2015-04-01 22:01:44.000000000 +0800
@@ -318,13 +318,13 @@
      * is set and has the wrong type, return with an error. */
     if (checkType(c,srcset,REDIS_SET) ||
         (dstset && checkType(c,dstset,REDIS_SET))) return;
 
     /* If srcset and dstset are equal, SMOVE is a no-op */
     if (srcset == dstset) {
-        addReply(c,setTypeIsMember(srcset,ele) ? shared.cone : shared.czero);
+        addReply(c,shared.cone);
         return;
     }
 
     /* If the element cannot be removed from the src set, return 0. */
     if (!setTypeRemove(srcset,ele)) {
         addReply(c,shared.czero);
@@ -492,17 +492,14 @@
         si = setTypeInitIterator(set);
         while((encoding = setTypeNext(si,&ele,&llele)) != -1) {
             int retval = DICT_ERR;
 
             if (encoding == REDIS_ENCODING_INTSET) {
                 retval = dictAdd(d,createStringObjectFromLongLong(llele),NULL);
-            } else if (ele->encoding == REDIS_ENCODING_RAW) {
+            } else {
                 retval = dictAdd(d,dupStringObject(ele),NULL);
-            } else if (ele->encoding == REDIS_ENCODING_INT) {
-                retval = dictAdd(d,
-                    createStringObjectFromLongLong((long)ele->ptr),NULL);
             }
             redisAssert(retval == DICT_OK);
         }
         setTypeReleaseIterator(si);
         redisAssert(dictSize(d) == size);
 
@@ -524,16 +521,14 @@
         unsigned long added = 0;
 
         while(added < count) {
             encoding = setTypeRandomElement(set,&ele,&llele);
             if (encoding == REDIS_ENCODING_INTSET) {
                 ele = createStringObjectFromLongLong(llele);
-            } else if (ele->encoding == REDIS_ENCODING_RAW) {
+            } else {
                 ele = dupStringObject(ele);
-            } else if (ele->encoding == REDIS_ENCODING_INT) {
-                ele = createStringObjectFromLongLong((long)ele->ptr);
             }
             /* Try to add the object to the dictionary. If it already exists
              * free it, otherwise increment the number of objects we have
              * in the result dictionary. */
             if (dictAdd(d,ele,NULL) == DICT_OK)
                 added++;
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_set.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_set.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c	2015-04-01 22:01:44.000000000 +0800
@@ -334,17 +334,27 @@
     if ((incr < 0 && oldvalue < 0 && incr < (LLONG_MIN-oldvalue)) ||
         (incr > 0 && oldvalue > 0 && incr > (LLONG_MAX-oldvalue))) {
         addReplyError(c,"increment or decrement would overflow");
         return;
     }
     value += incr;
-    new = createStringObjectFromLongLong(value);
-    if (o)
-        dbOverwrite(c->db,c->argv[1],new);
-    else
-        dbAdd(c->db,c->argv[1],new);
+
+    if (o && o->refcount == 1 && o->encoding == REDIS_ENCODING_INT &&
+        (value < 0 || value >= REDIS_SHARED_INTEGERS) &&
+        value >= LONG_MIN && value <= LONG_MAX)
+    {
+        new = o;
+        o->ptr = (void*)((long)value);
+    } else {
+        new = createStringObjectFromLongLong(value);
+        if (o) {
+            dbOverwrite(c->db,c->argv[1],new);
+        } else {
+            dbAdd(c->db,c->argv[1],new);
+        }
+    }
     signalModifiedKey(c->db,c->argv[1]);
     notifyKeyspaceEvent(REDIS_NOTIFY_STRING,"incrby",c->argv[1],c->db->id);
     server.dirty++;
     addReply(c,shared.colon);
     addReply(c,new);
     addReply(c,shared.crlf);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_string.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_string.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c	2015-04-01 22:01:44.000000000 +0800
@@ -949,13 +949,13 @@
 unsigned char *zzlInsertAt(unsigned char *zl, unsigned char *eptr, robj *ele, double score) {
     unsigned char *sptr;
     char scorebuf[128];
     int scorelen;
     size_t offset;
 
-    redisAssertWithInfo(NULL,ele,ele->encoding == REDIS_ENCODING_RAW);
+    redisAssertWithInfo(NULL,ele,sdsEncodedObject(ele));
     scorelen = d2string(scorebuf,sizeof(scorebuf),score);
     if (eptr == NULL) {
         zl = ziplistPush(zl,ele->ptr,sdslen(ele->ptr),ZIPLIST_TAIL);
         zl = ziplistPush(zl,(unsigned char*)scorebuf,scorelen,ZIPLIST_TAIL);
     } else {
         /* Keep offset relative to zl, as it might be re-allocated. */
@@ -1707,13 +1707,13 @@
         val->flags |= OPVAL_DIRTY_LL;
 
         if (val->ele != NULL) {
             if (val->ele->encoding == REDIS_ENCODING_INT) {
                 val->ell = (long)val->ele->ptr;
                 val->flags |= OPVAL_VALID_LL;
-            } else if (val->ele->encoding == REDIS_ENCODING_RAW) {
+            } else if (sdsEncodedObject(val->ele)) {
                 if (string2ll(val->ele->ptr,sdslen(val->ele->ptr),&val->ell))
                     val->flags |= OPVAL_VALID_LL;
             } else {
                 redisPanic("Unsupported element encoding");
             }
         } else if (val->estr != NULL) {
@@ -1742,13 +1742,13 @@
 int zuiBufferFromValue(zsetopval *val) {
     if (val->estr == NULL) {
         if (val->ele != NULL) {
             if (val->ele->encoding == REDIS_ENCODING_INT) {
                 val->elen = ll2string((char*)val->_buf,sizeof(val->_buf),(long)val->ele->ptr);
                 val->estr = val->_buf;
-            } else if (val->ele->encoding == REDIS_ENCODING_RAW) {
+            } else if (sdsEncodedObject(val->ele)) {
                 val->elen = sdslen(val->ele->ptr);
                 val->estr = val->ele->ptr;
             } else {
                 redisPanic("Unsupported element encoding");
             }
         } else {
@@ -1967,15 +1967,16 @@
                     tmp = zuiObjectFromValue(&zval);
                     znode = zslInsert(dstzset->zsl,score,tmp);
                     incrRefCount(tmp); /* added to skiplist */
                     dictAdd(dstzset->dict,tmp,&znode->score);
                     incrRefCount(tmp); /* added to dictionary */
 
-                    if (tmp->encoding == REDIS_ENCODING_RAW)
+                    if (sdsEncodedObject(tmp)) {
                         if (sdslen(tmp->ptr) > maxelelen)
                             maxelelen = sdslen(tmp->ptr);
+                    }
                 }
             }
             zuiClearIterator(&src[0]);
         }
     } else if (op == REDIS_OP_UNION) {
         dict *accumulator = dictCreate(&setDictType,NULL);
@@ -2005,13 +2006,13 @@
                 /* If we don't have it, we need to create a new entry. */
                 if (de == NULL) {
                     tmp = zuiObjectFromValue(&zval);
                     /* Remember the longest single element encountered,
                      * to understand if it's possible to convert to ziplist
                      * at the end. */
-                    if (tmp->encoding == REDIS_ENCODING_RAW) {
+                    if (sdsEncodedObject(tmp)) {
                         if (sdslen(tmp->ptr) > maxelelen)
                             maxelelen = sdslen(tmp->ptr);
                     }
                     /* Add the element with its initial score. */
                     de = dictAddRaw(accumulator,tmp);
                     incrRefCount(tmp);
@@ -2782,13 +2783,14 @@
     unsigned long rank;
 
     if ((zobj = lookupKeyReadOrReply(c,key,shared.nullbulk)) == NULL ||
         checkType(c,zobj,REDIS_ZSET)) return;
     llen = zsetLength(zobj);
 
-    redisAssertWithInfo(c,ele,ele->encoding == REDIS_ENCODING_RAW);
+    redisAssertWithInfo(c,ele,sdsEncodedObject(ele));
+
     if (zobj->encoding == REDIS_ENCODING_ZIPLIST) {
         unsigned char *zl = zobj->ptr;
         unsigned char *eptr, *sptr;
 
         eptr = ziplistIndex(zl,0);
         redisAssertWithInfo(c,zobj,eptr != NULL);
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/t_zset.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/t_zset.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c	2015-04-01 22:01:44.000000000 +0800
@@ -35,14 +35,16 @@
 #include <limits.h>
 #include <math.h>
 #include <unistd.h>
 #include <sys/time.h>
 #include <float.h>
 #include <stdint.h>
+#include <errno.h>
 
 #include "util.h"
+#include "sha1.h"
 
 /* Glob-style pattern matching. */
 int stringmatchlen(const char *pattern, int patternLen,
         const char *string, int stringLen, int nocase)
 {
     while(patternLen) {
@@ -166,17 +168,18 @@
 
 int stringmatch(const char *pattern, const char *string, int nocase) {
     return stringmatchlen(pattern,strlen(pattern),string,strlen(string),nocase);
 }
 
 /* Convert a string representing an amount of memory into the number of
- * bytes, so for instance memtoll("1Gi") will return 1073741824 that is
+ * bytes, so for instance memtoll("1Gb") will return 1073741824 that is
  * (1024*1024*1024).
  *
  * On parsing error, if *err is not NULL, it's set to 1, otherwise it's
- * set to 0 */
+ * set to 0. On error the function return value is 0, regardless of the
+ * fact 'err' is NULL or not. */
 long long memtoll(const char *p, int *err) {
     const char *u;
     char buf[128];
     long mul; /* unit multiplier */
     long long val;
     unsigned int digits;
@@ -199,22 +203,32 @@
     } else if (!strcasecmp(u,"g")) {
         mul = 1000L*1000*1000;
     } else if (!strcasecmp(u,"gb")) {
         mul = 1024L*1024*1024;
     } else {
         if (err) *err = 1;
-        mul = 1;
+        return 0;
     }
+
+    /* Copy the digits into a buffer, we'll use strtoll() to convert
+     * the digit (without the unit) into a number. */
     digits = u-p;
     if (digits >= sizeof(buf)) {
         if (err) *err = 1;
-        return LLONG_MAX;
+        return 0;
     }
     memcpy(buf,p,digits);
     buf[digits] = '\0';
-    val = strtoll(buf,NULL,10);
+
+    char *endptr;
+    errno = 0;
+    val = strtoll(buf,&endptr,10);
+    if ((val == 0 && errno == EINVAL) || *endptr != '\0') {
+        if (err) *err = 1;
+        return 0;
+    }
     return val*mul;
 }
 
 /* Return the number of digits of 'v' when converted to string in radix 10.
  * See ll2string() for more information. */
 uint32_t digits10(uint64_t v) {
@@ -425,17 +439,50 @@
 
 /* Generate the Redis "Run ID", a SHA1-sized random number that identifies a
  * given execution of Redis, so that if you are talking with an instance
  * having run_id == A, and you reconnect and it has run_id == B, you can be
  * sure that it is either a different instance or it was restarted. */
 void getRandomHexChars(char *p, unsigned int len) {
-    FILE *fp = fopen("/dev/urandom","r");
     char *charset = "0123456789abcdef";
     unsigned int j;
 
-    if (fp == NULL || fread(p,len,1,fp) == 0) {
+    /* Global state. */
+    static int seed_initialized = 0;
+    static unsigned char seed[20]; /* The SHA1 seed, from /dev/urandom. */
+    static uint64_t counter = 0; /* The counter we hash with the seed. */
+
+    if (!seed_initialized) {
+        /* Initialize a seed and use SHA1 in counter mode, where we hash
+         * the same seed with a progressive counter. For the goals of this
+         * function we just need non-colliding strings, there are no
+         * cryptographic security needs. */
+        FILE *fp = fopen("/dev/urandom","r");
+        if (fp && fread(seed,sizeof(seed),1,fp) == 1)
+            seed_initialized = 1;
+        if (fp) fclose(fp);
+    }
+
+    if (seed_initialized) {
+        while(len) {
+            unsigned char digest[20];
+            SHA1_CTX ctx;
+            unsigned int copylen = len > 20 ? 20 : len;
+
+            SHA1Init(&ctx);
+            SHA1Update(&ctx, seed, sizeof(seed));
+            SHA1Update(&ctx, (unsigned char*)&counter,sizeof(counter));
+            SHA1Final(digest, &ctx);
+            counter++;
+
+            memcpy(p,digest,copylen);
+            /* Convert to hex digits. */
+            for (j = 0; j < copylen; j++) p[j] = charset[p[j] & 0x0F];
+            len -= copylen;
+            p += copylen;
+        }
+    } else {
         /* If we can't read from /dev/urandom, do some reasonable effort
          * in order to create some entropy, since this function is used to
          * generate run_id and cluster instance IDs */
         char *x = p;
         unsigned int l = len;
         struct timeval tv;
@@ -456,20 +503,18 @@
         if (l >= sizeof(pid)) {
             memcpy(x,&pid,sizeof(pid));
             l -= sizeof(pid);
             x += sizeof(pid);
         }
         /* Finally xor it with rand() output, that was already seeded with
-         * time() at startup. */
-        for (j = 0; j < len; j++)
+         * time() at startup, and convert to hex digits. */
+        for (j = 0; j < len; j++) {
             p[j] ^= rand();
+            p[j] = charset[p[j] & 0x0F];
+        }
     }
-    /* Turn it into hex digits taking just 4 bits out of 8 for every byte. */
-    for (j = 0; j < len; j++)
-        p[j] = charset[p[j] & 0x0F];
-    if (fp) fclose(fp);
 }
 
 /* Given the filename, return the absolute path as an SDS string, or NULL
  * if it fails for some reason. Note that "filename" may be an absolute path
  * already, this will be detected and handled correctly.
  *
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/util.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/util.o differ
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/version.h	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/version.h	2015-04-01 22:01:44.000000000 +0800
@@ -1 +1 @@
-#define REDIS_VERSION "2.8.24"
+#define REDIS_VERSION "3.0.0"
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/ziplist.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/ziplist.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zipmap.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zipmap.o differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.c.bc and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.c.bc differ
Binary files /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/src/zmalloc.o and /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/src/zmalloc.o differ
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests: cluster
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/instances.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/instances.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/instances.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/instances.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -13,14 +13,16 @@
 source ../support/redis.tcl
 source ../support/util.tcl
 source ../support/server.tcl
 source ../support/test.tcl
 
 set ::verbose 0
+set ::valgrind 0
 set ::pause_on_error 0
 set ::simulate_error 0
+set ::failed 0
 set ::sentinel_instances {}
 set ::redis_instances {}
 set ::sentinel_base_port 20000
 set ::redis_base_port 30000
 set ::pids {} ; # We kill everything at exit
 set ::dirs {} ; # We remove all the temp dirs at exit
@@ -29,12 +31,31 @@
 if {[catch {cd tmp}]} {
     puts "tmp directory not found."
     puts "Please run this test from the Redis source root."
     exit 1
 }
 
+# Execute the specified instance of the server specified by 'type', using
+# the provided configuration file. Returns the PID of the process.
+proc exec_instance {type cfgfile} {
+    if {$type eq "redis"} {
+        set prgname redis-server
+    } elseif {$type eq "sentinel"} {
+        set prgname redis-sentinel
+    } else {
+        error "Unknown instance type."
+    }
+
+    if {$::valgrind} {
+        set pid [exec valgrind --track-origins=yes --suppressions=../../../src/valgrind.sup --show-reachable=no --show-possibly-lost=no --leak-check=full ../../../src/${prgname} $cfgfile &]
+    } else {
+        set pid [exec ../../../src/${prgname} $cfgfile &]
+    }
+    return $pid
+}
+
 # Spawn a redis or sentinel instance, depending on 'type'.
 proc spawn_instance {type base_port count {conf {}}} {
     for {set j 0} {$j < $count} {incr j} {
         set port [find_available_port $base_port]
         incr base_port
         puts "Starting $type #$j at port $port"
@@ -55,20 +76,13 @@
         foreach directive $conf {
             puts $cfg $directive
         }
         close $cfg
 
         # Finally exec it and remember the pid for later cleanup.
-        if {$type eq "redis"} {
-            set prgname redis-server
-        } elseif {$type eq "sentinel"} {
-            set prgname redis-sentinel
-        } else {
-            error "Unknown instance type."
-        }
-        set pid [exec ../../../src/${prgname} $cfgfile &]
+        set pid [exec_instance $type $cfgfile]
         lappend ::pids $pid
 
         # Check availability
         if {[server_is_up 127.0.0.1 $port 100] == 0} {
             abort_sentinel_test "Problems starting $type #$j: ping timeout"
         }
@@ -95,12 +109,13 @@
     }
 }
 
 proc abort_sentinel_test msg {
     puts "WARNING: Aborting the test."
     puts ">>>>>>>> $msg"
+    if {$::pause_on_error} pause_on_error
     cleanup
     exit 1
 }
 
 proc parse_options {} {
     for {set j 0} {$j < [llength $::argv]} {incr j} {
@@ -110,12 +125,14 @@
             incr j
             set ::run_matching "*${val}*"
         } elseif {$opt eq "--pause-on-error"} {
             set ::pause_on_error 1
         } elseif {$opt eq "--fail"} {
             set ::simulate_error 1
+        } elseif {$opt eq {--valgrind}} {
+            set ::valgrind 1
         } elseif {$opt eq "--help"} {
             puts "Hello, I'm sentinel.tcl and I run Sentinel unit tests."
             puts "\nOptions:"
             puts "--single <pattern>      Only runs tests specified by pattern."
             puts "--pause-on-error        Pause for manual inspection on error."
             puts "--fail                  Simulate a test failure."
@@ -212,12 +229,13 @@
 proc test {descr code} {
     set ts [clock format [clock seconds] -format %H:%M:%S]
     puts -nonewline "$ts> $descr: "
     flush stdout
 
     if {[catch {set retval [uplevel 1 $code]} error]} {
+        incr ::failed
         if {[string match "assertion:*" $error]} {
             set msg [string range $error 10 end]
             puts [colorstr red $msg]
             if {$::pause_on_error} pause_on_error
             puts "(Jumping to next unit after error)"
             return -code continue
@@ -227,24 +245,36 @@
         }
     } else {
         puts [colorstr green OK]
     }
 }
 
+# Execute all the units inside the 'tests' directory.
 proc run_tests {} {
     set tests [lsort [glob ../tests/*]]
     foreach test $tests {
         if {$::run_matching ne {} && [string match $::run_matching $test] == 0} {
             continue
         }
         if {[file isdirectory $test]} continue
         puts [colorstr yellow "Testing unit: [lindex [file split $test] end]"]
         source $test
     }
 }
 
+# Print a message and exists with 0 / 1 according to zero or more failures.
+proc end_tests {} {
+    if {$::failed == 0} {
+        puts "GOOD! No errors."
+        exit 0
+    } else {
+        puts "WARNING $::failed tests faield."
+        exit 1
+    }
+}
+
 # The "S" command is used to interact with the N-th Sentinel.
 # The general form is:
 #
 # S <sentinel-id> command arg arg arg ...
 #
 # Example to ping the Sentinel 0 (first instance): S 0 PING
@@ -357,15 +387,18 @@
 # is no longer running and will remove its PID from the list of pids that
 # we kill at cleanup.
 #
 # The instance can be restarted with restart-instance.
 proc kill_instance {type id} {
     set pid [get_instance_attrib $type $id pid]
+    set port [get_instance_attrib $type $id port]
+
     if {$pid == -1} {
         error "You tried to kill $type $id twice."
     }
+
     exec kill -9 $pid
     set_instance_attrib $type $id pid -1
     set_instance_attrib $type $id link you_tried_to_talk_with_killed_instance
 
     # Remove the PID from the list of pids to kill at exit.
     set ::pids [lsearch -all -inline -not -exact $::pids $pid]
@@ -366,12 +399,25 @@
     exec kill -9 $pid
     set_instance_attrib $type $id pid -1
     set_instance_attrib $type $id link you_tried_to_talk_with_killed_instance
 
     # Remove the PID from the list of pids to kill at exit.
     set ::pids [lsearch -all -inline -not -exact $::pids $pid]
+
+    # Wait for the port it was using to be available again, so that's not
+    # an issue to start a new server ASAP with the same port.
+    set retry 10
+    while {[incr retry -1]} {
+        set port_is_free [catch {set s [socket 127.0.01 $port]}]
+        if {$port_is_free} break
+        catch {close $s}
+        after 1000
+    }
+    if {$retry == 0} {
+        error "Port $port does not return available after killing instance."
+    }
 }
 
 # Return true of the instance of the specified type/id is killed.
 proc instance_is_killed {type id} {
     set pid [get_instance_attrib $type $id pid]
     expr {$pid == -1}
@@ -382,18 +428,13 @@
     set dirname "${type}_${id}"
     set cfgfile [file join $dirname $type.conf]
     set port [get_instance_attrib $type $id port]
 
     # Execute the instance with its old setup and append the new pid
     # file for cleanup.
-    if {$type eq "redis"} {
-        set prgname redis-server
-    } else {
-        set prgname redis-sentinel
-    }
-    set pid [exec ../../../src/${prgname} $cfgfile &]
+    set pid [exec_instance $type $cfgfile]
     set_instance_attrib $type $id pid $pid
     lappend ::pids $pid
 
     # Check that the instance is running
     if {[server_is_up 127.0.0.1 $port 100] == 0} {
         abort_sentinel_test "Problems starting $type #$id: ping timeout"
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration: logging.tcl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/integration/rdb.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration/rdb.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/integration/rdb.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration/rdb.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -4,25 +4,25 @@
 exec cp tests/assets/encodings.rdb $server_path
 
 start_server [list overrides [list "dir" $server_path "dbfilename" "encodings.rdb"]] {
   test "RDB encoding loading test" {
     r select 0
     csvdump r
-  } {"0","compressible","string","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
-"0","hash","hash","a","1","aa","10","aaa","100","b","2","bb","20","bbb","200","c","3","cc","30","ccc","300","ddd","400","eee","5000000000",
-"0","hash_zipped","hash","a","1","b","2","c","3",
-"0","list","list","1","2","3","a","b","c","100000","6000000000","1","2","3","a","b","c","100000","6000000000","1","2","3","a","b","c","100000","6000000000",
-"0","list_zipped","list","1","2","3","a","b","c","100000","6000000000",
-"0","number","string","10"
-"0","set","set","1","100000","2","3","6000000000","a","b","c",
-"0","set_zipped_1","set","1","2","3","4",
-"0","set_zipped_2","set","100000","200000","300000","400000",
-"0","set_zipped_3","set","1000000000","2000000000","3000000000","4000000000","5000000000","6000000000",
-"0","string","string","Hello World"
-"0","zset","zset","a","1","b","2","c","3","aa","10","bb","20","cc","30","aaa","100","bbb","200","ccc","300","aaaa","1000","cccc","123456789","bbbb","5000000000",
-"0","zset_zipped","zset","a","1","b","2","c","3",
+  } {"compressible","string","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
+"hash","hash","a","1","aa","10","aaa","100","b","2","bb","20","bbb","200","c","3","cc","30","ccc","300","ddd","400","eee","5000000000",
+"hash_zipped","hash","a","1","b","2","c","3",
+"list","list","1","2","3","a","b","c","100000","6000000000","1","2","3","a","b","c","100000","6000000000","1","2","3","a","b","c","100000","6000000000",
+"list_zipped","list","1","2","3","a","b","c","100000","6000000000",
+"number","string","10"
+"set","set","1","100000","2","3","6000000000","a","b","c",
+"set_zipped_1","set","1","2","3","4",
+"set_zipped_2","set","100000","200000","300000","400000",
+"set_zipped_3","set","1000000000","2000000000","3000000000","4000000000","5000000000","6000000000",
+"string","string","Hello World"
+"zset","zset","a","1","b","2","c","3","aa","10","bb","20","cc","30","aaa","100","bbb","200","ccc","300","aaaa","1000","cccc","123456789","bbbb","5000000000",
+"zset_zipped","zset","a","1","b","2","c","3",
 }
 }
 
 set server_path [tmpdir "server.rdb-startup-test"]
 
 start_server [list overrides [list "dir" $server_path]] {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/integration/replication-psync.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration/replication-psync.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/integration/replication-psync.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration/replication-psync.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -10,29 +10,23 @@
 # Creates a master-slave pair and breaks the link continuously to force
 # partial resyncs attempts, all this while flooding the master with
 # write queries.
 #
 # You can specifiy backlog size, ttl, delay before reconnection, test duration
 # in seconds, and an additional condition to verify at the end.
-#
-# If reconnect is > 0, the test actually try to break the connection and
-# reconnect with the master, otherwise just the initial synchronization is
-# checked for consistency.
-proc test_psync {descr duration backlog_size backlog_ttl delay cond diskless reconnect} {
+proc test_psync {descr duration backlog_size backlog_ttl delay cond} {
     start_server {tags {"repl"}} {
         start_server {} {
 
             set master [srv -1 client]
             set master_host [srv -1 host]
             set master_port [srv -1 port]
             set slave [srv 0 client]
 
             $master config set repl-backlog-size $backlog_size
             $master config set repl-backlog-ttl $backlog_ttl
-            $master config set repl-diskless-sync $diskless
-            $master config set repl-diskless-sync-delay 1
 
             set load_handle0 [start_bg_complex_data $master_host $master_port 9 100000]
             set load_handle1 [start_bg_complex_data $master_host $master_port 11 100000]
             set load_handle2 [start_bg_complex_data $master_host $master_port 12 100000]
 
             test {Slave should be able to synchronize with the master} {
@@ -51,30 +45,28 @@
                     [$master dbsize] > 100
                 } else {
                     fail "Can't detect write load from background clients."
                 }
             }
 
-            test "Test replication partial resync: $descr (diskless: $diskless, reconnect: $reconnect)" {
+            test "Test replication partial resync: $descr" {
                 # Now while the clients are writing data, break the maste-slave
                 # link multiple times.
-                if ($reconnect) {
-                    for {set j 0} {$j < $duration*10} {incr j} {
-                        after 100
-                        # catch {puts "MASTER [$master dbsize] keys, SLAVE [$slave dbsize] keys"}
-
-                        if {($j % 20) == 0} {
-                            catch {
-                                if {$delay} {
-                                    $slave multi
-                                    $slave client kill $master_host:$master_port
-                                    $slave debug sleep $delay
-                                    $slave exec
-                                } else {
-                                    $slave client kill $master_host:$master_port
-                                }
+                for {set j 0} {$j < $duration*10} {incr j} {
+                    after 100
+                    # catch {puts "MASTER [$master dbsize] keys, SLAVE [$slave dbsize] keys"}
+
+                    if {($j % 20) == 0} {
+                        catch {
+                            if {$delay} {
+                                $slave multi
+                                $slave client kill $master_host:$master_port
+                                $slave debug sleep $delay
+                                $slave exec
+                            } else {
+                                $slave client kill $master_host:$master_port
                             }
                         }
                     }
                 }
                 stop_bg_complex_data $load_handle0
                 stop_bg_complex_data $load_handle1
@@ -103,26 +95,21 @@
                 eval $cond
             }
         }
     }
 }
 
-foreach diskless {no yes} {
-    test_psync {no reconnection, just sync} 6 1000000 3600 0 {
-    } $diskless 0
-
-    test_psync {ok psync} 6 1000000 3600 0 {
-        assert {[s -1 sync_partial_ok] > 0}
-    } $diskless 1
-
-    test_psync {no backlog} 6 100 3600 0.5 {
-        assert {[s -1 sync_partial_err] > 0}
-    } $diskless 1
-
-    test_psync {ok after delay} 3 100000000 3600 3 {
-        assert {[s -1 sync_partial_ok] > 0}
-    } $diskless 1
-
-    test_psync {backlog expired} 3 100000000 1 3 {
-        assert {[s -1 sync_partial_err] > 0}
-    } $diskless 1
+test_psync {ok psync} 6 1000000 3600 0 {
+    assert {[s -1 sync_partial_ok] > 0}
+}
+
+test_psync {no backlog} 6 100 3600 0.5 {
+    assert {[s -1 sync_partial_err] > 0}
+}
+
+test_psync {ok after delay} 3 100000000 3600 3 {
+    assert {[s -1 sync_partial_ok] > 0}
+}
+
+test_psync {backlog expired} 3 100000000 1 3 {
+    assert {[s -1 sync_partial_err] > 0}
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/integration/replication.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration/replication.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/integration/replication.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/integration/replication.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -1,59 +1,6 @@
-proc log_file_matches {log pattern} {
-    set fp [open $log r]
-    set content [read $fp]
-    close $fp
-    string match $pattern $content
-}
-
-start_server {tags {"repl"}} {
-    set slave [srv 0 client]
-    set slave_host [srv 0 host]
-    set slave_port [srv 0 port]
-    set slave_log [srv 0 stdout]
-    start_server {} {
-        set master [srv 0 client]
-        set master_host [srv 0 host]
-        set master_port [srv 0 port]
-
-        # Configure the master in order to hang waiting for the BGSAVE
-        # operation, so that the slave remains in the handshake state.
-        $master config set repl-diskless-sync yes
-        $master config set repl-diskless-sync-delay 1000
-
-        # Use a short replication timeout on the slave, so that if there
-        # are no bugs the timeout is triggered in a reasonable amount
-        # of time.
-        $slave config set repl-timeout 5
-
-        # Start the replication process...
-        $slave slaveof $master_host $master_port
-
-        test {Slave enters handshake} {
-            wait_for_condition 50 1000 {
-                [string match *handshake* [$slave role]]
-            } else {
-                fail "Slave does not enter handshake state"
-            }
-        }
-
-        # But make the master unable to send
-        # the periodic newlines to refresh the connection. The slave
-        # should detect the timeout.
-        $master debug sleep 10
-
-        test {Slave is able to detect timeout during handshake} {
-            wait_for_condition 50 1000 {
-                [log_file_matches $slave_log "*Timeout connecting to the MASTER*"]
-            } else {
-                fail "Slave is not able to detect timeout"
-            }
-        }
-    }
-}
-
 start_server {tags {"repl"}} {
     set A [srv 0 client]
     set A_host [srv 0 host]
     set A_port [srv 0 port]
     start_server {} {
         set B [srv 0 client]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/sentinel/run.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/sentinel/run.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/sentinel/run.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/sentinel/run.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -10,12 +10,13 @@
 proc main {} {
     parse_options
     spawn_instance sentinel $::sentinel_base_port $::instances_count
     spawn_instance redis $::redis_base_port $::instances_count
     run_tests
     cleanup
+    end_tests
 }
 
 if {[catch main e]} {
     puts $::errorInfo
     cleanup
     exit 1
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/sentinel/tests: 06-ckquorum.tcl
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support: cluster.tcl
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/support/redis.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support/redis.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/support/redis.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support/redis.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -1,8 +1,8 @@
-# Tcl clinet library - used by test-redis.tcl script for now
-# Copyright (C) 2009 Salvatore Sanfilippo
+# Tcl client library - used by the Redis test
+# Copyright (C) 2009-2014 Salvatore Sanfilippo
 # Released under the BSD license like Redis itself
 #
 # Example usage:
 #
 # set r [redis 127.0.0.1 6379]
 # $r lpush mylist foo
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/support/server.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support/server.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/support/server.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support/server.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -51,16 +51,21 @@
             }
         }
     }
 
     # kill server and wait for the process to be totally exited
     catch {exec kill $pid}
+    if {$::valgrind} {
+        set max_wait 60000
+    } else {
+        set max_wait 10000
+    }
     while {[is_alive $config]} {
         incr wait 10
 
-        if {$wait >= 5000} {
+        if {$wait >= $max_wait} {
             puts "Forcing process $pid to exit..."
             catch {exec kill -KILL $pid}
         } elseif {$wait % 1000 == 0} {
             puts "Waiting for process $pid to exit..."
         }
         after 10
@@ -204,13 +209,13 @@
     close $fp
 
     set stdout [format "%s/%s" [dict get $config "dir"] "stdout"]
     set stderr [format "%s/%s" [dict get $config "dir"] "stderr"]
 
     if {$::valgrind} {
-        set pid [exec valgrind --suppressions=src/valgrind.sup --show-reachable=no --show-possibly-lost=no --leak-check=full src/redis-server $config_file > $stdout 2> $stderr &]
+        set pid [exec valgrind --track-origins=yes --suppressions=src/valgrind.sup --show-reachable=no --show-possibly-lost=no --leak-check=full src/redis-server $config_file > $stdout 2> $stderr &]
     } else {
         set pid [exec src/redis-server $config_file > $stdout 2> $stderr &]
     }
 
     # Tell the test server about this new instance.
     send_data_packet $::test_server_fd server-spawned $pid
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/support/util.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support/util.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/support/util.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/support/util.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -259,56 +259,52 @@
     }
     set _ $cmd
 }
 
 proc csvdump r {
     set o {}
-    for {set db 0} {$db < 16} {incr db} {
-        {*}$r select $db
-        foreach k [lsort [{*}$r keys *]] {
-            set type [{*}$r type $k]
-            append o [csvstring $db] , [csvstring $k] , [csvstring $type] ,
-            switch $type {
-                string {
-                    append o [csvstring [{*}$r get $k]] "\n"
+    foreach k [lsort [{*}$r keys *]] {
+        set type [{*}$r type $k]
+        append o [csvstring $k] , [csvstring $type] ,
+        switch $type {
+            string {
+                append o [csvstring [{*}$r get $k]] "\n"
+            }
+            list {
+                foreach e [{*}$r lrange $k 0 -1] {
+                    append o [csvstring $e] ,
                 }
-                list {
-                    foreach e [{*}$r lrange $k 0 -1] {
-                        append o [csvstring $e] ,
-                    }
-                    append o "\n"
+                append o "\n"
+            }
+            set {
+                foreach e [lsort [{*}$r smembers $k]] {
+                    append o [csvstring $e] ,
                 }
-                set {
-                    foreach e [lsort [{*}$r smembers $k]] {
-                        append o [csvstring $e] ,
-                    }
-                    append o "\n"
+                append o "\n"
+            }
+            zset {
+                foreach e [{*}$r zrange $k 0 -1 withscores] {
+                    append o [csvstring $e] ,
                 }
-                zset {
-                    foreach e [{*}$r zrange $k 0 -1 withscores] {
-                        append o [csvstring $e] ,
-                    }
-                    append o "\n"
+                append o "\n"
+            }
+            hash {
+                set fields [{*}$r hgetall $k]
+                set newfields {}
+                foreach {k v} $fields {
+                    lappend newfields [list $k $v]
                 }
-                hash {
-                    set fields [{*}$r hgetall $k]
-                    set newfields {}
-                    foreach {k v} $fields {
-                        lappend newfields [list $k $v]
-                    }
-                    set fields [lsort -index 0 $newfields]
-                    foreach kv $fields {
-                        append o [csvstring [lindex $kv 0]] ,
-                        append o [csvstring [lindex $kv 1]] ,
-                    }
-                    append o "\n"
+                set fields [lsort -index 0 $newfields]
+                foreach kv $fields {
+                    append o [csvstring [lindex $kv 0]] ,
+                    append o [csvstring [lindex $kv 1]] ,
                 }
+                append o "\n"
             }
         }
     }
-    {*}$r select 9
     return $o
 }
 
 proc csvstring s {
     return "\"$s\""
 }
@@ -316,18 +312,20 @@
 proc roundFloat f {
     format "%.10g" $f
 }
 
 proc find_available_port start {
     for {set j $start} {$j < $start+1024} {incr j} {
-        if {[catch {
-            set fd [socket 127.0.0.1 $j]
-        }]} {
+        if {[catch {set fd1 [socket 127.0.0.1 $j]}] &&
+            [catch {set fd2 [socket 127.0.0.1 [expr $j+10000]]}]} {
             return $j
         } else {
-            close $fd
+            catch {
+                close $fd1
+                close $fd2
+            }
         }
     }
     if {$j == $start+1024} {
         error "Can't find a non busy port in the $start-[expr {$start+1023}] range."
     }
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/test_helper.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/test_helper.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/test_helper.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/test_helper.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -10,12 +10,13 @@
 source tests/support/tmpfile.tcl
 source tests/support/test.tcl
 source tests/support/util.tcl
 
 set ::all_tests {
     unit/printver
+    unit/dump
     unit/auth
     unit/protocol
     unit/basic
     unit/scan
     unit/type/list
     unit/type/list-2
@@ -34,20 +35,20 @@
     integration/replication-3
     integration/replication-4
     integration/replication-psync
     integration/aof
     integration/rdb
     integration/convert-zipmap-hash-on-load
+    integration/logging
     unit/pubsub
     unit/slowlog
     unit/scripting
     unit/maxmemory
     unit/introspection
     unit/limits
     unit/obuf-limits
-    unit/dump
     unit/bitops
     unit/memefficiency
     unit/hyperloglog
 }
 # Index to the next test to run in the ::all_tests list.
 set ::next_test 0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/basic.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/basic.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/basic.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/basic.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -147,12 +147,35 @@
 
     test {DECRBY over 32bit value with over 32bit increment, negative res} {
         r set novar 17179869184
         r decrby novar 17179869185
     } {-1}
 
+    test {INCR uses shared objects in the 0-9999 range} {
+        r set foo -1
+        r incr foo
+        assert {[r object refcount foo] > 1}
+        r set foo 9998
+        r incr foo
+        assert {[r object refcount foo] > 1}
+        r incr foo
+        assert {[r object refcount foo] == 1}
+    }
+
+    test {INCR can modify objects in-place} {
+        r set foo 20000
+        r incr foo
+        assert {[r object refcount foo] == 1}
+        set old [lindex [split [r debug object foo]] 1]
+        r incr foo
+        set new [lindex [split [r debug object foo]] 1]
+        assert {[string range $old 0 2] eq "at:"}
+        assert {[string range $new 0 2] eq "at:"}
+        assert {$old eq $new}
+    }
+
     test {INCRBYFLOAT against non existing key} {
         r del novar
         list    [roundFloat [r incrbyfloat novar 1]] \
                 [roundFloat [r get novar]] \
                 [roundFloat [r incrbyfloat novar 0.25]] \
                 [roundFloat [r get novar]]
@@ -407,38 +430,12 @@
     test {MOVE against non-integer DB (#1428)} {
         r set mykey hello
         catch {r move mykey notanumber} e
         set e
     } {*ERR*index out of range}
 
-    test {MOVE can move key expire metadata as well} {
-        r select 10
-        r flushdb
-        r select 9
-        r set mykey foo ex 100
-        r move mykey 10
-        assert {[r ttl mykey] == -2}
-        r select 10
-        assert {[r ttl mykey] > 0 && [r ttl mykey] <= 100}
-        assert {[r get mykey] eq "foo"}
-        r select 9
-    }
-
-    test {MOVE does not create an expire if it does not exist} {
-        r select 10
-        r flushdb
-        r select 9
-        r set mykey foo
-        r move mykey 10
-        assert {[r ttl mykey] == -2}
-        r select 10
-        assert {[r ttl mykey] == -1}
-        assert {[r get mykey] eq "foo"}
-        r select 9
-    }
-
     test {SET/GET keys in different DBs} {
         r set a hello
         r set b world
         r select 10
         r set a foo
         r set b bared
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/dump.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/dump.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/dump.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/dump.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -28,18 +28,55 @@
 
     test {RESTORE returns an error of the key already exists} {
         r set foo bar
         set e {}
         catch {r restore foo 0 "..."} e
         set e
-    } {*is busy*}
+    } {*BUSYKEY*}
+
+    test {RESTORE can overwrite an existing key with REPLACE} {
+        r set foo bar1
+        set encoded1 [r dump foo]
+        r set foo bar2
+        set encoded2 [r dump foo]
+        r del foo
+        r restore foo 0 $encoded1
+        r restore foo 0 $encoded2 replace
+        r get foo
+    } {bar2}
+
+    test {RESTORE can detect a syntax error for unrecongized options} {
+        catch {r restore foo 0 "..." invalid-option} e
+        set e
+    } {*syntax*}
 
     test {DUMP of non existing key returns nil} {
         r dump nonexisting_key
     } {}
 
+    test {MIGRATE is caching connections} {
+        # Note, we run this as first test so that the connection cache
+        # is empty.
+        set first [srv 0 client]
+        r set key "Some Value"
+        start_server {tags {"repl"}} {
+            set second [srv 0 client]
+            set second_host [srv 0 host]
+            set second_port [srv 0 port]
+
+            assert_match {*migrate_cached_sockets:0*} [r -1 info]
+            r -1 migrate $second_host $second_port key 9 1000
+            assert_match {*migrate_cached_sockets:1*} [r -1 info]
+        }
+    }
+
+    test {MIGRATE cached connections are released after some time} {
+        after 15000
+        assert_match {*migrate_cached_sockets:0*} [r info]
+    }
+
     test {MIGRATE is able to migrate a key between two instances} {
         set first [srv 0 client]
         r set key "Some Value"
         start_server {tags {"repl"}} {
             set second [srv 0 client]
             set second_host [srv 0 host]
@@ -53,12 +90,53 @@
             assert {[$second exists key] == 1}
             assert {[$second get key] eq {Some Value}}
             assert {[$second ttl key] == -1}
         }
     }
 
+    test {MIGRATE is able to copy a key between two instances} {
+        set first [srv 0 client]
+        r del list
+        r lpush list a b c d
+        start_server {tags {"repl"}} {
+            set second [srv 0 client]
+            set second_host [srv 0 host]
+            set second_port [srv 0 port]
+
+            assert {[$first exists list] == 1}
+            assert {[$second exists list] == 0}
+            set ret [r -1 migrate $second_host $second_port list 9 5000 copy]
+            assert {$ret eq {OK}}
+            assert {[$first exists list] == 1}
+            assert {[$second exists list] == 1}
+            assert {[$first lrange list 0 -1] eq [$second lrange list 0 -1]}
+        }
+    }
+
+    test {MIGRATE will not overwrite existing keys, unless REPLACE is used} {
+        set first [srv 0 client]
+        r del list
+        r lpush list a b c d
+        start_server {tags {"repl"}} {
+            set second [srv 0 client]
+            set second_host [srv 0 host]
+            set second_port [srv 0 port]
+
+            assert {[$first exists list] == 1}
+            assert {[$second exists list] == 0}
+            $second set list somevalue
+            catch {r -1 migrate $second_host $second_port list 9 5000 copy} e
+            assert_match {ERR*} $e
+            set res [r -1 migrate $second_host $second_port list 9 5000 copy replace]
+            assert {$ret eq {OK}}
+            assert {[$first exists list] == 1}
+            assert {[$second exists list] == 1}
+            assert {[$first lrange list 0 -1] eq [$second lrange list 0 -1]}
+        }
+    }
+
     test {MIGRATE propagates TTL correctly} {
         set first [srv 0 client]
         r set key "Some Value"
         start_server {tags {"repl"}} {
             set second [srv 0 client]
             set second_host [srv 0 host]
@@ -130,13 +208,13 @@
             set second_port [srv 0 port]
 
             assert {[$first exists key] == 1}
             assert {[$second exists key] == 0}
 
             set rd [redis_deferring_client]
-            $rd debug sleep 5.0 ; # Make second server unable to reply.
+            $rd debug sleep 1.0 ; # Make second server unable to reply.
             set e {}
-            catch {r -1 migrate $second_host $second_port key 9 1000} e
+            catch {r -1 migrate $second_host $second_port key 9 500} e
             assert_match {IOERR*} $e
         }
     }
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/sort.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/sort.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/sort.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/sort.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -92,12 +92,20 @@
         r sort tosort BY wobj_*->weight store sort-res
         assert_equal $result [r lrange sort-res 0 -1]
         assert_equal 16 [r llen sort-res]
         assert_encoding ziplist sort-res
     }
 
+    test "SORT extracts STORE correctly" {
+        r command getkeys sort abc store def
+    } {abc def}
+
+    test "SORT extracts multiple STORE correctly" {
+        r command getkeys sort abc store invalid store stillbad store def
+    } {abc def}
+
     test "SORT DESC" {
         assert_equal [lsort -decreasing -integer $result] [r sort tosort DESC]
     }
 
     test "SORT ALPHA against integer encoded strings" {
         r del mylist
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/type/hash.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/type/hash.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/type/hash.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/type/hash.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -1,12 +1,12 @@
 start_server {tags {"hash"}} {
     test {HSET/HLEN - Small hash creation} {
         array set smallhash {}
         for {set i 0} {$i < 8} {incr i} {
-            set key __avoid_collisions__[randstring 0 8 alpha]
-            set val __avoid_collisions__[randstring 0 8 alpha]
+            set key [randstring 0 8 alpha]
+            set val [randstring 0 8 alpha]
             if {[info exists smallhash($key)]} {
                 incr i -1
                 continue
             }
             r hset smallhash $key $val
             set smallhash($key) $val
@@ -18,25 +18,25 @@
         assert_encoding ziplist smallhash
     }
 
     test {HSET/HLEN - Big hash creation} {
         array set bighash {}
         for {set i 0} {$i < 1024} {incr i} {
-            set key __avoid_collisions__[randstring 0 8 alpha]
-            set val __avoid_collisions__[randstring 0 8 alpha]
+            set key [randstring 0 8 alpha]
+            set val [randstring 0 8 alpha]
             if {[info exists bighash($key)]} {
                 incr i -1
                 continue
             }
             r hset bighash $key $val
             set bighash($key) $val
         }
         list [r hlen bighash]
     } {1024}
 
-    test {Is the big hash encoded with an hash table?} {
+    test {Is the big hash encoded with a ziplist?} {
         assert_encoding hashtable bighash
     }
 
     test {HGET against the small hash} {
         set err {}
         foreach k [array names smallhash *] {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/type/set.tcl /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/type/set.tcl
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-2.8.24/tests/unit/type/set.tcl	2015-12-18 23:13:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/tests/unit/type/set.tcl	2015-04-01 22:01:44.000000000 +0800
@@ -447,13 +447,12 @@
         assert_equal {3 4} [lsort [r smembers myset2]]
     }
 
     test "SMOVE non existing key" {
         setup_move
         assert_equal 0 [r smove myset1 myset2 foo]
-        assert_equal 0 [r smove myset1 myset1 foo]
         assert_equal {1 a b} [lsort [r smembers myset1]]
         assert_equal {2 3 4} [lsort [r smembers myset2]]
     }
 
     test "SMOVE non existing src set" {
         setup_move
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/utils: cluster_fail_time.tcl
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/utils: create-cluster
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/redis/repos/redis-3.0.0/utils: lru

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_448.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">push_front<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">std<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">string<pos:position pos:line="2" pos:column="34"/></name></name><modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="36">msg<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">m_enabled<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="6" pos:column="3">Base<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">::<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">push_front<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">(<argument><expr><call><name pos:line="6" pos:column="20">Type<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">cachedTime<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">msg<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">size<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">()<pos:position pos:line="8" pos:column="13"/></argument_list></call> <operator pos:line="8" pos:column="14">&gt;<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="16">50<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="5">Base<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">::<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">pop_back<pos:position pos:line="9" pos:column="19"/></name></name><argument_list pos:line="9" pos:column="19">()<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="11" pos:column="3">m_signalUpdate<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator></name></expr></expr_stmt><emit pos:line="11" pos:column="18">emit<expr><operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator></expr>;<pos:position pos:line="11" pos:column="25"/></emit>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

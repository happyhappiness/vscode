<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_264.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name><name pos:line="2" pos:column="1">ExecFile<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">execute_object<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">torrent<pos:position pos:line="2" pos:column="39"/></name><operator pos:line="2" pos:column="39">::<pos:position pos:line="2" pos:column="41"/></operator><name pos:line="2" pos:column="41">Object<pos:position pos:line="2" pos:column="47"/></name></name><modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="49">rawArgs<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">flags<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list> <block pos:line="2" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name><modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type>  <name><name pos:line="3" pos:column="10">argsBuffer<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><name pos:line="3" pos:column="21">max_args<pos:position pos:line="3" pos:column="29"/></name></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name><modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier><modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type> <name pos:line="4" pos:column="10">argsCurrent<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">argsBuffer<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <comment type="line" pos:line="6" pos:column="3">// Size of value strings are less than 24.</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type>   <name><name pos:line="7" pos:column="10">valueBuffer<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><name pos:line="7" pos:column="22">buffer_size<pos:position pos:line="7" pos:column="33"/></name></expr>]<pos:position pos:line="7" pos:column="34"/></index></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name><modifier pos:line="8" pos:column="7">*<pos:position pos:line="8" pos:column="8"/></modifier></type>  <name pos:line="8" pos:column="10">valueCurrent<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">valueBuffer<pos:position pos:line="8" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name><name pos:line="10" pos:column="9">torrent<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">::<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">Object<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">::<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">list_type<pos:position pos:line="10" pos:column="35"/></name></name><modifier pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></modifier></type> <name pos:line="10" pos:column="37">args<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><call><name><name pos:line="10" pos:column="44">rawArgs<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">.<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">as_list<pos:position pos:line="10" pos:column="59"/></name></name><argument_list pos:line="10" pos:column="59">()<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name><name pos:line="12" pos:column="7">args<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">empty<pos:position pos:line="12" pos:column="17"/></name></name><argument_list pos:line="12" pos:column="17">()<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
    <block type="pseudo"><throw pos:line="13" pos:column="5">throw <expr><call><name><name pos:line="13" pos:column="11">torrent<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">::<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">input_error<pos:position pos:line="13" pos:column="31"/></name></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"Too few arguments."<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></throw></block></then></if>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name><name pos:line="15" pos:column="8">torrent<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">::<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">Object<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">::<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">list_type<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">::<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">const_iterator<pos:position pos:line="15" pos:column="50"/></name></name></type> <name pos:line="15" pos:column="51">itr<pos:position pos:line="15" pos:column="54"/></name> <init pos:line="15" pos:column="55">= <expr><call><name><name pos:line="15" pos:column="57">args<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">.<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">begin<pos:position pos:line="15" pos:column="67"/></name></name><argument_list pos:line="15" pos:column="67">()<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="71">last<pos:position pos:line="15" pos:column="75"/></name> <init pos:line="15" pos:column="76">= <expr><call><name><name pos:line="15" pos:column="78">args<pos:position pos:line="15" pos:column="82"/></name><operator pos:line="15" pos:column="82">.<pos:position pos:line="15" pos:column="83"/></operator><name pos:line="15" pos:column="83">end<pos:position pos:line="15" pos:column="86"/></name></name><argument_list pos:line="15" pos:column="86">()<pos:position pos:line="15" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="89"/></init> <condition><expr><name pos:line="15" pos:column="90">itr<pos:position pos:line="15" pos:column="93"/></name> <operator pos:line="15" pos:column="94">!=<pos:position pos:line="15" pos:column="96"/></operator> <name pos:line="15" pos:column="97">last<pos:position pos:line="15" pos:column="101"/></name></expr>;<pos:position pos:line="15" pos:column="102"/></condition> <incr><expr><name pos:line="15" pos:column="103">itr<pos:position pos:line="15" pos:column="106"/></name><operator pos:line="15" pos:column="106">++<pos:position pos:line="15" pos:column="108"/></operator></expr><operator pos:line="15" pos:column="108">,<pos:position pos:line="15" pos:column="109"/></operator> <expr><name pos:line="15" pos:column="110">argsCurrent<pos:position pos:line="15" pos:column="121"/></name><operator pos:line="15" pos:column="121">++<pos:position pos:line="15" pos:column="123"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="124"/></control> <block pos:line="15" pos:column="125">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">argsCurrent<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">argsBuffer<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">+<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">max_args<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">-<pos:position pos:line="16" pos:column="47"/></operator> <literal type="number" pos:line="16" pos:column="48">1<pos:position pos:line="16" pos:column="49"/></literal></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50">
      <block type="pseudo"><throw pos:line="17" pos:column="7">throw <expr><call><name><name pos:line="17" pos:column="13">torrent<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">::<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">input_error<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="string" pos:line="17" pos:column="34">"Too many arguments."<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></throw></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name><name pos:line="19" pos:column="9">itr<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">is_string<pos:position pos:line="19" pos:column="23"/></name></name><argument_list pos:line="19" pos:column="23">()<pos:position pos:line="19" pos:column="25"/></argument_list></call> <operator pos:line="19" pos:column="26">&amp;&amp;<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="29">(<pos:position pos:line="19" pos:column="30"/></operator><operator pos:line="19" pos:column="30">!<pos:position pos:line="19" pos:column="31"/></operator><operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">flags<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="40">flag_expand_tilde<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">)<pos:position pos:line="19" pos:column="58"/></operator> <operator pos:line="19" pos:column="59">||<pos:position pos:line="19" pos:column="61"/></operator> <operator pos:line="19" pos:column="62">*<pos:position pos:line="19" pos:column="63"/></operator><call><name><name pos:line="19" pos:column="63">itr<pos:position pos:line="19" pos:column="66"/></name><operator pos:line="19" pos:column="66">-&gt;<pos:position pos:line="19" pos:column="71"/></operator><name pos:line="19" pos:column="68">as_string<pos:position pos:line="19" pos:column="77"/></name></name><argument_list pos:line="19" pos:column="77">()<pos:position pos:line="19" pos:column="79"/></argument_list></call><operator pos:line="19" pos:column="79">.<pos:position pos:line="19" pos:column="80"/></operator><call><name pos:line="19" pos:column="80">c_str<pos:position pos:line="19" pos:column="85"/></name><argument_list pos:line="19" pos:column="85">()<pos:position pos:line="19" pos:column="87"/></argument_list></call> <operator pos:line="19" pos:column="88">!=<pos:position pos:line="19" pos:column="90"/></operator> <literal type="char" pos:line="19" pos:column="91">'~'<pos:position pos:line="19" pos:column="94"/></literal><operator pos:line="19" pos:column="94">)<pos:position pos:line="19" pos:column="95"/></operator></expr>)<pos:position pos:line="19" pos:column="96"/></condition><then pos:line="19" pos:column="96"> <block pos:line="19" pos:column="97">{
      <expr_stmt><expr><operator pos:line="20" pos:column="7">*<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">argsCurrent<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <cast type="const" pos:line="20" pos:column="22">const_cast<argument_list type="generic" pos:line="20" pos:column="32">&lt;<argument><expr><name pos:line="20" pos:column="33">char<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">*<pos:position pos:line="20" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="20" pos:column="42"/></argument_list><argument_list pos:line="20" pos:column="39">(<argument><expr><call><name><name pos:line="20" pos:column="40">itr<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">as_string<pos:position pos:line="20" pos:column="54"/></name></name><argument_list pos:line="20" pos:column="54">()<pos:position pos:line="20" pos:column="56"/></argument_list></call><operator pos:line="20" pos:column="56">.<pos:position pos:line="20" pos:column="57"/></operator><call><name pos:line="20" pos:column="57">c_str<pos:position pos:line="20" pos:column="62"/></name><argument_list pos:line="20" pos:column="62">()<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></cast></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>

    }<pos:position pos:line="22" pos:column="6"/></block></then> <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{
      <expr_stmt><expr><operator pos:line="23" pos:column="7">*<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">argsCurrent<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">valueCurrent<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">valueCurrent<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">print_object<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">valueCurrent<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">valueBuffer<pos:position pos:line="24" pos:column="60"/></name> <operator pos:line="24" pos:column="61">+<pos:position pos:line="24" pos:column="62"/></operator> <name pos:line="24" pos:column="63">buffer_size<pos:position pos:line="24" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="76">&amp;<pos:position pos:line="24" pos:column="81"/></operator><operator pos:line="24" pos:column="77">*<pos:position pos:line="24" pos:column="78"/></operator><name pos:line="24" pos:column="78">itr<pos:position pos:line="24" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="83">flags<pos:position pos:line="24" pos:column="88"/></name></expr></argument>)<pos:position pos:line="24" pos:column="89"/></argument_list></call> <operator pos:line="24" pos:column="90">+<pos:position pos:line="24" pos:column="91"/></operator> <literal type="number" pos:line="24" pos:column="92">1<pos:position pos:line="24" pos:column="93"/></literal></expr>;<pos:position pos:line="24" pos:column="94"/></expr_stmt>

      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">valueCurrent<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&gt;=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="27">valueBuffer<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">+<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">buffer_size<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
        <block type="pseudo"><throw pos:line="27" pos:column="9">throw <expr><call><name><name pos:line="27" pos:column="15">torrent<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">::<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">input_error<pos:position pos:line="27" pos:column="35"/></name></name><argument_list pos:line="27" pos:column="35">(<argument><expr><literal type="string" pos:line="27" pos:column="36">"Overflowed execute arg buffer."<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></throw></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>      
  }<pos:position pos:line="29" pos:column="4"/></block></for>

  <expr_stmt><expr><operator pos:line="31" pos:column="3">*<pos:position pos:line="31" pos:column="4"/></operator><name pos:line="31" pos:column="4">argsCurrent<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">NULL<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="33" pos:column="3">int<pos:position pos:line="33" pos:column="6"/></name></type> <name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <init pos:line="33" pos:column="14">= <expr><call><name pos:line="33" pos:column="16">execute<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name><name pos:line="33" pos:column="24">argsBuffer<pos:position pos:line="33" pos:column="34"/></name><index pos:line="33" pos:column="34">[<expr><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr>]<pos:position pos:line="33" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">argsBuffer<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="51"/></decl_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">flags<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">&amp;<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="16">flag_throw<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">)<pos:position pos:line="35" pos:column="27"/></operator> <operator pos:line="35" pos:column="28">&amp;&amp;<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="31">status<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">!=<pos:position pos:line="35" pos:column="40"/></operator> <literal type="number" pos:line="35" pos:column="41">0<pos:position pos:line="35" pos:column="42"/></literal></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43">
    <block type="pseudo"><throw pos:line="36" pos:column="5">throw <expr><call><name><name pos:line="36" pos:column="11">torrent<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">::<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">input_error<pos:position pos:line="36" pos:column="31"/></name></name><argument_list pos:line="36" pos:column="31">(<argument><expr><literal type="string" pos:line="36" pos:column="32">"Bad return code."<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="52"/></throw></block></then></if>

  <return pos:line="38" pos:column="3">return <expr><call><name><name pos:line="38" pos:column="10">torrent<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">::<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">Object<pos:position pos:line="38" pos:column="25"/></name></name><argument_list pos:line="38" pos:column="25">(<argument><expr><operator pos:line="38" pos:column="26">(<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">int64_t<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">)<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">status<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="43"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_317.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Root<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">setup_keys<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list> <block pos:line="2" pos:column="20">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">m_control<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">input<pos:position pos:line="3" pos:column="19"/></name></name><argument_list pos:line="3" pos:column="19">()<pos:position pos:line="3" pos:column="21"/></argument_list></call><operator pos:line="3" pos:column="21">-&gt;<pos:position pos:line="3" pos:column="26"/></operator><call><name pos:line="3" pos:column="23">push_back<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">(<argument><expr><operator pos:line="3" pos:column="33">&amp;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="34">m_bindings<pos:position pos:line="3" pos:column="44"/></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="46"/></expr_stmt>

  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">std<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">::<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">string<pos:position pos:line="5" pos:column="20"/></name></name><modifier pos:line="5" pos:column="20">&amp;<pos:position pos:line="5" pos:column="25"/></modifier></type> <name pos:line="5" pos:column="22">keyLayout<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><call><name><name pos:line="5" pos:column="34">rpc<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">::<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">call_command_string<pos:position pos:line="5" pos:column="58"/></name></name><argument_list pos:line="5" pos:column="58">(<argument><expr><literal type="string" pos:line="5" pos:column="59">"get_key_layout"<pos:position pos:line="5" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="77"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">strcasecmp<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><call><name><name pos:line="7" pos:column="18">keyLayout<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">.<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">c_str<pos:position pos:line="7" pos:column="33"/></name></name><argument_list pos:line="7" pos:column="33">()<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="37">"azerty"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call> <operator pos:line="7" pos:column="47">==<pos:position pos:line="7" pos:column="49"/></operator> <literal type="number" pos:line="7" pos:column="50">0<pos:position pos:line="7" pos:column="51"/></literal></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52"> <block pos:line="7" pos:column="53">{
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">m_bindings<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="char" pos:line="8" pos:column="16">'q'<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name>           <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <call><name><name pos:line="8" pos:column="33">sigc<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">::<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">bind<pos:position pos:line="8" pos:column="43"/></name></name><argument_list pos:line="8" pos:column="43">(<argument><expr><call><name><name pos:line="8" pos:column="44">sigc<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">::<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">mem_fun<pos:position pos:line="8" pos:column="57"/></name></name><argument_list pos:line="8" pos:column="57">(<argument><expr><operator pos:line="8" pos:column="58">*<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">this<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="65">&amp;<pos:position pos:line="8" pos:column="70"/></operator><name><name pos:line="8" pos:column="66">Root<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">::<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="72">adjust_up_throttle<pos:position pos:line="8" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="93">1<pos:position pos:line="8" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">m_bindings<pos:position pos:line="9" pos:column="15"/></name><index pos:line="9" pos:column="15">[<expr><literal type="char" pos:line="9" pos:column="16">'w'<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name>           <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <call><name><name pos:line="9" pos:column="33">sigc<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">::<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">bind<pos:position pos:line="9" pos:column="43"/></name></name><argument_list pos:line="9" pos:column="43">(<argument><expr><call><name><name pos:line="9" pos:column="44">sigc<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">::<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">mem_fun<pos:position pos:line="9" pos:column="57"/></name></name><argument_list pos:line="9" pos:column="57">(<argument><expr><operator pos:line="9" pos:column="58">*<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="59">this<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="65">&amp;<pos:position pos:line="9" pos:column="70"/></operator><name><name pos:line="9" pos:column="66">Root<pos:position pos:line="9" pos:column="70"/></name><operator pos:line="9" pos:column="70">::<pos:position pos:line="9" pos:column="72"/></operator><name pos:line="9" pos:column="72">adjust_up_throttle<pos:position pos:line="9" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="9" pos:column="93">-<pos:position pos:line="9" pos:column="94"/></operator><literal type="number" pos:line="9" pos:column="94">1<pos:position pos:line="9" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">m_bindings<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><literal type="char" pos:line="10" pos:column="16">'Q'<pos:position pos:line="10" pos:column="19"/></literal></expr>]<pos:position pos:line="10" pos:column="20"/></index></name>           <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <call><name><name pos:line="10" pos:column="33">sigc<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">::<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">bind<pos:position pos:line="10" pos:column="43"/></name></name><argument_list pos:line="10" pos:column="43">(<argument><expr><call><name><name pos:line="10" pos:column="44">sigc<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">::<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">mem_fun<pos:position pos:line="10" pos:column="57"/></name></name><argument_list pos:line="10" pos:column="57">(<argument><expr><operator pos:line="10" pos:column="58">*<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="59">this<pos:position pos:line="10" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="65">&amp;<pos:position pos:line="10" pos:column="70"/></operator><name><name pos:line="10" pos:column="66">Root<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">::<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="72">adjust_down_throttle<pos:position pos:line="10" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="95">1<pos:position pos:line="10" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">m_bindings<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><literal type="char" pos:line="11" pos:column="16">'W'<pos:position pos:line="11" pos:column="19"/></literal></expr>]<pos:position pos:line="11" pos:column="20"/></index></name>           <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <call><name><name pos:line="11" pos:column="33">sigc<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">::<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">bind<pos:position pos:line="11" pos:column="43"/></name></name><argument_list pos:line="11" pos:column="43">(<argument><expr><call><name><name pos:line="11" pos:column="44">sigc<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">::<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">mem_fun<pos:position pos:line="11" pos:column="57"/></name></name><argument_list pos:line="11" pos:column="57">(<argument><expr><operator pos:line="11" pos:column="58">*<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="59">this<pos:position pos:line="11" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="65">&amp;<pos:position pos:line="11" pos:column="70"/></operator><name><name pos:line="11" pos:column="66">Root<pos:position pos:line="11" pos:column="70"/></name><operator pos:line="11" pos:column="70">::<pos:position pos:line="11" pos:column="72"/></operator><name pos:line="11" pos:column="72">adjust_down_throttle<pos:position pos:line="11" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="11" pos:column="95">-<pos:position pos:line="11" pos:column="96"/></operator><literal type="number" pos:line="11" pos:column="96">1<pos:position pos:line="11" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="99"/></expr_stmt>

  }<pos:position pos:line="13" pos:column="4"/></block></then> <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><call><name pos:line="13" pos:column="14">strcasecmp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><call><name><name pos:line="13" pos:column="25">keyLayout<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">c_str<pos:position pos:line="13" pos:column="40"/></name></name><argument_list pos:line="13" pos:column="40">()<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="44">"qwertz"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call> <operator pos:line="13" pos:column="54">==<pos:position pos:line="13" pos:column="56"/></operator> <literal type="number" pos:line="13" pos:column="57">0<pos:position pos:line="13" pos:column="58"/></literal></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">m_bindings<pos:position pos:line="14" pos:column="15"/></name><index pos:line="14" pos:column="15">[<expr><literal type="char" pos:line="14" pos:column="16">'a'<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name>           <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <call><name><name pos:line="14" pos:column="33">sigc<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">::<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">bind<pos:position pos:line="14" pos:column="43"/></name></name><argument_list pos:line="14" pos:column="43">(<argument><expr><call><name><name pos:line="14" pos:column="44">sigc<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">::<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">mem_fun<pos:position pos:line="14" pos:column="57"/></name></name><argument_list pos:line="14" pos:column="57">(<argument><expr><operator pos:line="14" pos:column="58">*<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">this<pos:position pos:line="14" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="65">&amp;<pos:position pos:line="14" pos:column="70"/></operator><name><name pos:line="14" pos:column="66">Root<pos:position pos:line="14" pos:column="70"/></name><operator pos:line="14" pos:column="70">::<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">adjust_up_throttle<pos:position pos:line="14" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="93">1<pos:position pos:line="14" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">m_bindings<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><literal type="char" pos:line="15" pos:column="16">'y'<pos:position pos:line="15" pos:column="19"/></literal></expr>]<pos:position pos:line="15" pos:column="20"/></index></name>           <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <call><name><name pos:line="15" pos:column="33">sigc<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">::<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">bind<pos:position pos:line="15" pos:column="43"/></name></name><argument_list pos:line="15" pos:column="43">(<argument><expr><call><name><name pos:line="15" pos:column="44">sigc<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">::<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">mem_fun<pos:position pos:line="15" pos:column="57"/></name></name><argument_list pos:line="15" pos:column="57">(<argument><expr><operator pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">this<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="65">&amp;<pos:position pos:line="15" pos:column="70"/></operator><name><name pos:line="15" pos:column="66">Root<pos:position pos:line="15" pos:column="70"/></name><operator pos:line="15" pos:column="70">::<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="72">adjust_up_throttle<pos:position pos:line="15" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="15" pos:column="93">-<pos:position pos:line="15" pos:column="94"/></operator><literal type="number" pos:line="15" pos:column="94">1<pos:position pos:line="15" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">m_bindings<pos:position pos:line="16" pos:column="15"/></name><index pos:line="16" pos:column="15">[<expr><literal type="char" pos:line="16" pos:column="16">'A'<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name>           <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <call><name><name pos:line="16" pos:column="33">sigc<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">::<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">bind<pos:position pos:line="16" pos:column="43"/></name></name><argument_list pos:line="16" pos:column="43">(<argument><expr><call><name><name pos:line="16" pos:column="44">sigc<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">::<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">mem_fun<pos:position pos:line="16" pos:column="57"/></name></name><argument_list pos:line="16" pos:column="57">(<argument><expr><operator pos:line="16" pos:column="58">*<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">this<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="65">&amp;<pos:position pos:line="16" pos:column="70"/></operator><name><name pos:line="16" pos:column="66">Root<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">::<pos:position pos:line="16" pos:column="72"/></operator><name pos:line="16" pos:column="72">adjust_down_throttle<pos:position pos:line="16" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="95">1<pos:position pos:line="16" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">m_bindings<pos:position pos:line="17" pos:column="15"/></name><index pos:line="17" pos:column="15">[<expr><literal type="char" pos:line="17" pos:column="16">'Y'<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name>           <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <call><name><name pos:line="17" pos:column="33">sigc<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">::<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">bind<pos:position pos:line="17" pos:column="43"/></name></name><argument_list pos:line="17" pos:column="43">(<argument><expr><call><name><name pos:line="17" pos:column="44">sigc<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">::<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">mem_fun<pos:position pos:line="17" pos:column="57"/></name></name><argument_list pos:line="17" pos:column="57">(<argument><expr><operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">this<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="65">&amp;<pos:position pos:line="17" pos:column="70"/></operator><name><name pos:line="17" pos:column="66">Root<pos:position pos:line="17" pos:column="70"/></name><operator pos:line="17" pos:column="70">::<pos:position pos:line="17" pos:column="72"/></operator><name pos:line="17" pos:column="72">adjust_down_throttle<pos:position pos:line="17" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="95">-<pos:position pos:line="17" pos:column="96"/></operator><literal type="number" pos:line="17" pos:column="96">1<pos:position pos:line="17" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="99"/></expr_stmt>

  }<pos:position pos:line="19" pos:column="4"/></block></then></if></elseif> <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">strcasecmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><call><name><name pos:line="19" pos:column="25">keyLayout<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">c_str<pos:position pos:line="19" pos:column="40"/></name></name><argument_list pos:line="19" pos:column="40">()<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="44">"dvorak"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call> <operator pos:line="19" pos:column="54">==<pos:position pos:line="19" pos:column="56"/></operator> <literal type="number" pos:line="19" pos:column="57">0<pos:position pos:line="19" pos:column="58"/></literal></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59"> <block pos:line="19" pos:column="60">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">m_bindings<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><literal type="char" pos:line="20" pos:column="16">'a'<pos:position pos:line="20" pos:column="19"/></literal></expr>]<pos:position pos:line="20" pos:column="20"/></index></name>           <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <call><name><name pos:line="20" pos:column="33">sigc<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">::<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">bind<pos:position pos:line="20" pos:column="43"/></name></name><argument_list pos:line="20" pos:column="43">(<argument><expr><call><name><name pos:line="20" pos:column="44">sigc<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">::<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">mem_fun<pos:position pos:line="20" pos:column="57"/></name></name><argument_list pos:line="20" pos:column="57">(<argument><expr><operator pos:line="20" pos:column="58">*<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">this<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="65">&amp;<pos:position pos:line="20" pos:column="70"/></operator><name><name pos:line="20" pos:column="66">Root<pos:position pos:line="20" pos:column="70"/></name><operator pos:line="20" pos:column="70">::<pos:position pos:line="20" pos:column="72"/></operator><name pos:line="20" pos:column="72">adjust_up_throttle<pos:position pos:line="20" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="93">1<pos:position pos:line="20" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">m_bindings<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><literal type="char" pos:line="21" pos:column="16">';'<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name>           <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <call><name><name pos:line="21" pos:column="33">sigc<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">::<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">bind<pos:position pos:line="21" pos:column="43"/></name></name><argument_list pos:line="21" pos:column="43">(<argument><expr><call><name><name pos:line="21" pos:column="44">sigc<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">::<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">mem_fun<pos:position pos:line="21" pos:column="57"/></name></name><argument_list pos:line="21" pos:column="57">(<argument><expr><operator pos:line="21" pos:column="58">*<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">this<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="65">&amp;<pos:position pos:line="21" pos:column="70"/></operator><name><name pos:line="21" pos:column="66">Root<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">::<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="72">adjust_up_throttle<pos:position pos:line="21" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="21" pos:column="93">-<pos:position pos:line="21" pos:column="94"/></operator><literal type="number" pos:line="21" pos:column="94">1<pos:position pos:line="21" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">m_bindings<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="char" pos:line="22" pos:column="16">'A'<pos:position pos:line="22" pos:column="19"/></literal></expr>]<pos:position pos:line="22" pos:column="20"/></index></name>           <operator pos:line="22" pos:column="31">=<pos:position pos:line="22" pos:column="32"/></operator> <call><name><name pos:line="22" pos:column="33">sigc<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">::<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">bind<pos:position pos:line="22" pos:column="43"/></name></name><argument_list pos:line="22" pos:column="43">(<argument><expr><call><name><name pos:line="22" pos:column="44">sigc<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">::<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">mem_fun<pos:position pos:line="22" pos:column="57"/></name></name><argument_list pos:line="22" pos:column="57">(<argument><expr><operator pos:line="22" pos:column="58">*<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">this<pos:position pos:line="22" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="65">&amp;<pos:position pos:line="22" pos:column="70"/></operator><name><name pos:line="22" pos:column="66">Root<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">::<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="72">adjust_down_throttle<pos:position pos:line="22" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="95">1<pos:position pos:line="22" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">m_bindings<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><literal type="char" pos:line="23" pos:column="16">':'<pos:position pos:line="23" pos:column="19"/></literal></expr>]<pos:position pos:line="23" pos:column="20"/></index></name>           <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name><name pos:line="23" pos:column="33">sigc<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">::<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">bind<pos:position pos:line="23" pos:column="43"/></name></name><argument_list pos:line="23" pos:column="43">(<argument><expr><call><name><name pos:line="23" pos:column="44">sigc<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">::<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">mem_fun<pos:position pos:line="23" pos:column="57"/></name></name><argument_list pos:line="23" pos:column="57">(<argument><expr><operator pos:line="23" pos:column="58">*<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">this<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="65">&amp;<pos:position pos:line="23" pos:column="70"/></operator><name><name pos:line="23" pos:column="66">Root<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">::<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="72">adjust_down_throttle<pos:position pos:line="23" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="23" pos:column="95">-<pos:position pos:line="23" pos:column="96"/></operator><literal type="number" pos:line="23" pos:column="96">1<pos:position pos:line="23" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="99"/></expr_stmt>

  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif> <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">m_bindings<pos:position pos:line="26" pos:column="15"/></name><index pos:line="26" pos:column="15">[<expr><literal type="char" pos:line="26" pos:column="16">'a'<pos:position pos:line="26" pos:column="19"/></literal></expr>]<pos:position pos:line="26" pos:column="20"/></index></name>           <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <call><name><name pos:line="26" pos:column="33">sigc<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">::<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">bind<pos:position pos:line="26" pos:column="43"/></name></name><argument_list pos:line="26" pos:column="43">(<argument><expr><call><name><name pos:line="26" pos:column="44">sigc<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">::<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="50">mem_fun<pos:position pos:line="26" pos:column="57"/></name></name><argument_list pos:line="26" pos:column="57">(<argument><expr><operator pos:line="26" pos:column="58">*<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">this<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="65">&amp;<pos:position pos:line="26" pos:column="70"/></operator><name><name pos:line="26" pos:column="66">Root<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">::<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="72">adjust_up_throttle<pos:position pos:line="26" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="93">1<pos:position pos:line="26" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">m_bindings<pos:position pos:line="27" pos:column="15"/></name><index pos:line="27" pos:column="15">[<expr><literal type="char" pos:line="27" pos:column="16">'z'<pos:position pos:line="27" pos:column="19"/></literal></expr>]<pos:position pos:line="27" pos:column="20"/></index></name>           <operator pos:line="27" pos:column="31">=<pos:position pos:line="27" pos:column="32"/></operator> <call><name><name pos:line="27" pos:column="33">sigc<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">::<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">bind<pos:position pos:line="27" pos:column="43"/></name></name><argument_list pos:line="27" pos:column="43">(<argument><expr><call><name><name pos:line="27" pos:column="44">sigc<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">::<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">mem_fun<pos:position pos:line="27" pos:column="57"/></name></name><argument_list pos:line="27" pos:column="57">(<argument><expr><operator pos:line="27" pos:column="58">*<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="59">this<pos:position pos:line="27" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="65">&amp;<pos:position pos:line="27" pos:column="70"/></operator><name><name pos:line="27" pos:column="66">Root<pos:position pos:line="27" pos:column="70"/></name><operator pos:line="27" pos:column="70">::<pos:position pos:line="27" pos:column="72"/></operator><name pos:line="27" pos:column="72">adjust_up_throttle<pos:position pos:line="27" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="27" pos:column="93">-<pos:position pos:line="27" pos:column="94"/></operator><literal type="number" pos:line="27" pos:column="94">1<pos:position pos:line="27" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">m_bindings<pos:position pos:line="28" pos:column="15"/></name><index pos:line="28" pos:column="15">[<expr><literal type="char" pos:line="28" pos:column="16">'A'<pos:position pos:line="28" pos:column="19"/></literal></expr>]<pos:position pos:line="28" pos:column="20"/></index></name>           <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <call><name><name pos:line="28" pos:column="33">sigc<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">::<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">bind<pos:position pos:line="28" pos:column="43"/></name></name><argument_list pos:line="28" pos:column="43">(<argument><expr><call><name><name pos:line="28" pos:column="44">sigc<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">::<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">mem_fun<pos:position pos:line="28" pos:column="57"/></name></name><argument_list pos:line="28" pos:column="57">(<argument><expr><operator pos:line="28" pos:column="58">*<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">this<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="65">&amp;<pos:position pos:line="28" pos:column="70"/></operator><name><name pos:line="28" pos:column="66">Root<pos:position pos:line="28" pos:column="70"/></name><operator pos:line="28" pos:column="70">::<pos:position pos:line="28" pos:column="72"/></operator><name pos:line="28" pos:column="72">adjust_down_throttle<pos:position pos:line="28" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="95">1<pos:position pos:line="28" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">m_bindings<pos:position pos:line="29" pos:column="15"/></name><index pos:line="29" pos:column="15">[<expr><literal type="char" pos:line="29" pos:column="16">'Z'<pos:position pos:line="29" pos:column="19"/></literal></expr>]<pos:position pos:line="29" pos:column="20"/></index></name>           <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <call><name><name pos:line="29" pos:column="33">sigc<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">::<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">bind<pos:position pos:line="29" pos:column="43"/></name></name><argument_list pos:line="29" pos:column="43">(<argument><expr><call><name><name pos:line="29" pos:column="44">sigc<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">::<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">mem_fun<pos:position pos:line="29" pos:column="57"/></name></name><argument_list pos:line="29" pos:column="57">(<argument><expr><operator pos:line="29" pos:column="58">*<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="59">this<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="65">&amp;<pos:position pos:line="29" pos:column="70"/></operator><name><name pos:line="29" pos:column="66">Root<pos:position pos:line="29" pos:column="70"/></name><operator pos:line="29" pos:column="70">::<pos:position pos:line="29" pos:column="72"/></operator><name pos:line="29" pos:column="72">adjust_down_throttle<pos:position pos:line="29" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="29" pos:column="95">-<pos:position pos:line="29" pos:column="96"/></operator><literal type="number" pos:line="29" pos:column="96">1<pos:position pos:line="29" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="99"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></else></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><call><name pos:line="32" pos:column="7">strcasecmp<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><call><name><name pos:line="32" pos:column="18">keyLayout<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">c_str<pos:position pos:line="32" pos:column="33"/></name></name><argument_list pos:line="32" pos:column="33">()<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="37">"dvorak"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call> <operator pos:line="32" pos:column="47">!=<pos:position pos:line="32" pos:column="49"/></operator> <literal type="number" pos:line="32" pos:column="50">0<pos:position pos:line="32" pos:column="51"/></literal></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52"> <block pos:line="32" pos:column="53">{
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">m_bindings<pos:position pos:line="33" pos:column="15"/></name><index pos:line="33" pos:column="15">[<expr><literal type="char" pos:line="33" pos:column="16">'s'<pos:position pos:line="33" pos:column="19"/></literal></expr>]<pos:position pos:line="33" pos:column="20"/></index></name>           <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <call><name><name pos:line="33" pos:column="33">sigc<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">::<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">bind<pos:position pos:line="33" pos:column="43"/></name></name><argument_list pos:line="33" pos:column="43">(<argument><expr><call><name><name pos:line="33" pos:column="44">sigc<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">::<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">mem_fun<pos:position pos:line="33" pos:column="57"/></name></name><argument_list pos:line="33" pos:column="57">(<argument><expr><operator pos:line="33" pos:column="58">*<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="59">this<pos:position pos:line="33" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="65">&amp;<pos:position pos:line="33" pos:column="70"/></operator><name><name pos:line="33" pos:column="66">Root<pos:position pos:line="33" pos:column="70"/></name><operator pos:line="33" pos:column="70">::<pos:position pos:line="33" pos:column="72"/></operator><name pos:line="33" pos:column="72">adjust_up_throttle<pos:position pos:line="33" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="93">5<pos:position pos:line="33" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">m_bindings<pos:position pos:line="34" pos:column="15"/></name><index pos:line="34" pos:column="15">[<expr><literal type="char" pos:line="34" pos:column="16">'x'<pos:position pos:line="34" pos:column="19"/></literal></expr>]<pos:position pos:line="34" pos:column="20"/></index></name>           <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <call><name><name pos:line="34" pos:column="33">sigc<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">::<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">bind<pos:position pos:line="34" pos:column="43"/></name></name><argument_list pos:line="34" pos:column="43">(<argument><expr><call><name><name pos:line="34" pos:column="44">sigc<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">::<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="50">mem_fun<pos:position pos:line="34" pos:column="57"/></name></name><argument_list pos:line="34" pos:column="57">(<argument><expr><operator pos:line="34" pos:column="58">*<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">this<pos:position pos:line="34" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="65">&amp;<pos:position pos:line="34" pos:column="70"/></operator><name><name pos:line="34" pos:column="66">Root<pos:position pos:line="34" pos:column="70"/></name><operator pos:line="34" pos:column="70">::<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="72">adjust_up_throttle<pos:position pos:line="34" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="34" pos:column="93">-<pos:position pos:line="34" pos:column="94"/></operator><literal type="number" pos:line="34" pos:column="94">5<pos:position pos:line="34" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">m_bindings<pos:position pos:line="35" pos:column="15"/></name><index pos:line="35" pos:column="15">[<expr><literal type="char" pos:line="35" pos:column="16">'S'<pos:position pos:line="35" pos:column="19"/></literal></expr>]<pos:position pos:line="35" pos:column="20"/></index></name>           <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <call><name><name pos:line="35" pos:column="33">sigc<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">::<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">bind<pos:position pos:line="35" pos:column="43"/></name></name><argument_list pos:line="35" pos:column="43">(<argument><expr><call><name><name pos:line="35" pos:column="44">sigc<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">::<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">mem_fun<pos:position pos:line="35" pos:column="57"/></name></name><argument_list pos:line="35" pos:column="57">(<argument><expr><operator pos:line="35" pos:column="58">*<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="59">this<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="65">&amp;<pos:position pos:line="35" pos:column="70"/></operator><name><name pos:line="35" pos:column="66">Root<pos:position pos:line="35" pos:column="70"/></name><operator pos:line="35" pos:column="70">::<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="72">adjust_down_throttle<pos:position pos:line="35" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="95">5<pos:position pos:line="35" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">m_bindings<pos:position pos:line="36" pos:column="15"/></name><index pos:line="36" pos:column="15">[<expr><literal type="char" pos:line="36" pos:column="16">'X'<pos:position pos:line="36" pos:column="19"/></literal></expr>]<pos:position pos:line="36" pos:column="20"/></index></name>           <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <call><name><name pos:line="36" pos:column="33">sigc<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">::<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">bind<pos:position pos:line="36" pos:column="43"/></name></name><argument_list pos:line="36" pos:column="43">(<argument><expr><call><name><name pos:line="36" pos:column="44">sigc<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">::<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="50">mem_fun<pos:position pos:line="36" pos:column="57"/></name></name><argument_list pos:line="36" pos:column="57">(<argument><expr><operator pos:line="36" pos:column="58">*<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="59">this<pos:position pos:line="36" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="65">&amp;<pos:position pos:line="36" pos:column="70"/></operator><name><name pos:line="36" pos:column="66">Root<pos:position pos:line="36" pos:column="70"/></name><operator pos:line="36" pos:column="70">::<pos:position pos:line="36" pos:column="72"/></operator><name pos:line="36" pos:column="72">adjust_down_throttle<pos:position pos:line="36" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="36" pos:column="95">-<pos:position pos:line="36" pos:column="96"/></operator><literal type="number" pos:line="36" pos:column="96">5<pos:position pos:line="36" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="99"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">m_bindings<pos:position pos:line="38" pos:column="15"/></name><index pos:line="38" pos:column="15">[<expr><literal type="char" pos:line="38" pos:column="16">'d'<pos:position pos:line="38" pos:column="19"/></literal></expr>]<pos:position pos:line="38" pos:column="20"/></index></name>           <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <call><name><name pos:line="38" pos:column="33">sigc<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">::<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">bind<pos:position pos:line="38" pos:column="43"/></name></name><argument_list pos:line="38" pos:column="43">(<argument><expr><call><name><name pos:line="38" pos:column="44">sigc<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">::<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="50">mem_fun<pos:position pos:line="38" pos:column="57"/></name></name><argument_list pos:line="38" pos:column="57">(<argument><expr><operator pos:line="38" pos:column="58">*<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="59">this<pos:position pos:line="38" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="65">&amp;<pos:position pos:line="38" pos:column="70"/></operator><name><name pos:line="38" pos:column="66">Root<pos:position pos:line="38" pos:column="70"/></name><operator pos:line="38" pos:column="70">::<pos:position pos:line="38" pos:column="72"/></operator><name pos:line="38" pos:column="72">adjust_up_throttle<pos:position pos:line="38" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="93">50<pos:position pos:line="38" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">m_bindings<pos:position pos:line="39" pos:column="15"/></name><index pos:line="39" pos:column="15">[<expr><literal type="char" pos:line="39" pos:column="16">'c'<pos:position pos:line="39" pos:column="19"/></literal></expr>]<pos:position pos:line="39" pos:column="20"/></index></name>           <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <call><name><name pos:line="39" pos:column="33">sigc<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">::<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">bind<pos:position pos:line="39" pos:column="43"/></name></name><argument_list pos:line="39" pos:column="43">(<argument><expr><call><name><name pos:line="39" pos:column="44">sigc<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">::<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="50">mem_fun<pos:position pos:line="39" pos:column="57"/></name></name><argument_list pos:line="39" pos:column="57">(<argument><expr><operator pos:line="39" pos:column="58">*<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">this<pos:position pos:line="39" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="65">&amp;<pos:position pos:line="39" pos:column="70"/></operator><name><name pos:line="39" pos:column="66">Root<pos:position pos:line="39" pos:column="70"/></name><operator pos:line="39" pos:column="70">::<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="72">adjust_up_throttle<pos:position pos:line="39" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="39" pos:column="93">-<pos:position pos:line="39" pos:column="94"/></operator><literal type="number" pos:line="39" pos:column="94">50<pos:position pos:line="39" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">m_bindings<pos:position pos:line="40" pos:column="15"/></name><index pos:line="40" pos:column="15">[<expr><literal type="char" pos:line="40" pos:column="16">'D'<pos:position pos:line="40" pos:column="19"/></literal></expr>]<pos:position pos:line="40" pos:column="20"/></index></name>           <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <call><name><name pos:line="40" pos:column="33">sigc<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">::<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">bind<pos:position pos:line="40" pos:column="43"/></name></name><argument_list pos:line="40" pos:column="43">(<argument><expr><call><name><name pos:line="40" pos:column="44">sigc<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">::<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="50">mem_fun<pos:position pos:line="40" pos:column="57"/></name></name><argument_list pos:line="40" pos:column="57">(<argument><expr><operator pos:line="40" pos:column="58">*<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="59">this<pos:position pos:line="40" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="65">&amp;<pos:position pos:line="40" pos:column="70"/></operator><name><name pos:line="40" pos:column="66">Root<pos:position pos:line="40" pos:column="70"/></name><operator pos:line="40" pos:column="70">::<pos:position pos:line="40" pos:column="72"/></operator><name pos:line="40" pos:column="72">adjust_down_throttle<pos:position pos:line="40" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="95">50<pos:position pos:line="40" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">m_bindings<pos:position pos:line="41" pos:column="15"/></name><index pos:line="41" pos:column="15">[<expr><literal type="char" pos:line="41" pos:column="16">'C'<pos:position pos:line="41" pos:column="19"/></literal></expr>]<pos:position pos:line="41" pos:column="20"/></index></name>           <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <call><name><name pos:line="41" pos:column="33">sigc<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">::<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">bind<pos:position pos:line="41" pos:column="43"/></name></name><argument_list pos:line="41" pos:column="43">(<argument><expr><call><name><name pos:line="41" pos:column="44">sigc<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">::<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="50">mem_fun<pos:position pos:line="41" pos:column="57"/></name></name><argument_list pos:line="41" pos:column="57">(<argument><expr><operator pos:line="41" pos:column="58">*<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="59">this<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="65">&amp;<pos:position pos:line="41" pos:column="70"/></operator><name><name pos:line="41" pos:column="66">Root<pos:position pos:line="41" pos:column="70"/></name><operator pos:line="41" pos:column="70">::<pos:position pos:line="41" pos:column="72"/></operator><name pos:line="41" pos:column="72">adjust_down_throttle<pos:position pos:line="41" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="41" pos:column="95">-<pos:position pos:line="41" pos:column="96"/></operator><literal type="number" pos:line="41" pos:column="96">50<pos:position pos:line="41" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="100"/></expr_stmt>

  }<pos:position pos:line="43" pos:column="4"/></block></then> <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">m_bindings<pos:position pos:line="44" pos:column="15"/></name><index pos:line="44" pos:column="15">[<expr><literal type="char" pos:line="44" pos:column="16">'o'<pos:position pos:line="44" pos:column="19"/></literal></expr>]<pos:position pos:line="44" pos:column="20"/></index></name>           <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <call><name><name pos:line="44" pos:column="33">sigc<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">::<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="39">bind<pos:position pos:line="44" pos:column="43"/></name></name><argument_list pos:line="44" pos:column="43">(<argument><expr><call><name><name pos:line="44" pos:column="44">sigc<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">::<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">mem_fun<pos:position pos:line="44" pos:column="57"/></name></name><argument_list pos:line="44" pos:column="57">(<argument><expr><operator pos:line="44" pos:column="58">*<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="59">this<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="65">&amp;<pos:position pos:line="44" pos:column="70"/></operator><name><name pos:line="44" pos:column="66">Root<pos:position pos:line="44" pos:column="70"/></name><operator pos:line="44" pos:column="70">::<pos:position pos:line="44" pos:column="72"/></operator><name pos:line="44" pos:column="72">adjust_up_throttle<pos:position pos:line="44" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="93">5<pos:position pos:line="44" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">m_bindings<pos:position pos:line="45" pos:column="15"/></name><index pos:line="45" pos:column="15">[<expr><literal type="char" pos:line="45" pos:column="16">'q'<pos:position pos:line="45" pos:column="19"/></literal></expr>]<pos:position pos:line="45" pos:column="20"/></index></name>           <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <call><name><name pos:line="45" pos:column="33">sigc<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">::<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">bind<pos:position pos:line="45" pos:column="43"/></name></name><argument_list pos:line="45" pos:column="43">(<argument><expr><call><name><name pos:line="45" pos:column="44">sigc<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">::<pos:position pos:line="45" pos:column="50"/></operator><name pos:line="45" pos:column="50">mem_fun<pos:position pos:line="45" pos:column="57"/></name></name><argument_list pos:line="45" pos:column="57">(<argument><expr><operator pos:line="45" pos:column="58">*<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="59">this<pos:position pos:line="45" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="65">&amp;<pos:position pos:line="45" pos:column="70"/></operator><name><name pos:line="45" pos:column="66">Root<pos:position pos:line="45" pos:column="70"/></name><operator pos:line="45" pos:column="70">::<pos:position pos:line="45" pos:column="72"/></operator><name pos:line="45" pos:column="72">adjust_up_throttle<pos:position pos:line="45" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="45" pos:column="93">-<pos:position pos:line="45" pos:column="94"/></operator><literal type="number" pos:line="45" pos:column="94">5<pos:position pos:line="45" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">m_bindings<pos:position pos:line="46" pos:column="15"/></name><index pos:line="46" pos:column="15">[<expr><literal type="char" pos:line="46" pos:column="16">'O'<pos:position pos:line="46" pos:column="19"/></literal></expr>]<pos:position pos:line="46" pos:column="20"/></index></name>           <operator pos:line="46" pos:column="31">=<pos:position pos:line="46" pos:column="32"/></operator> <call><name><name pos:line="46" pos:column="33">sigc<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">::<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">bind<pos:position pos:line="46" pos:column="43"/></name></name><argument_list pos:line="46" pos:column="43">(<argument><expr><call><name><name pos:line="46" pos:column="44">sigc<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">::<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="50">mem_fun<pos:position pos:line="46" pos:column="57"/></name></name><argument_list pos:line="46" pos:column="57">(<argument><expr><operator pos:line="46" pos:column="58">*<pos:position pos:line="46" pos:column="59"/></operator><name pos:line="46" pos:column="59">this<pos:position pos:line="46" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="65">&amp;<pos:position pos:line="46" pos:column="70"/></operator><name><name pos:line="46" pos:column="66">Root<pos:position pos:line="46" pos:column="70"/></name><operator pos:line="46" pos:column="70">::<pos:position pos:line="46" pos:column="72"/></operator><name pos:line="46" pos:column="72">adjust_down_throttle<pos:position pos:line="46" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="95">5<pos:position pos:line="46" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">m_bindings<pos:position pos:line="47" pos:column="15"/></name><index pos:line="47" pos:column="15">[<expr><literal type="char" pos:line="47" pos:column="16">'Q'<pos:position pos:line="47" pos:column="19"/></literal></expr>]<pos:position pos:line="47" pos:column="20"/></index></name>           <operator pos:line="47" pos:column="31">=<pos:position pos:line="47" pos:column="32"/></operator> <call><name><name pos:line="47" pos:column="33">sigc<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">::<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">bind<pos:position pos:line="47" pos:column="43"/></name></name><argument_list pos:line="47" pos:column="43">(<argument><expr><call><name><name pos:line="47" pos:column="44">sigc<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">::<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="50">mem_fun<pos:position pos:line="47" pos:column="57"/></name></name><argument_list pos:line="47" pos:column="57">(<argument><expr><operator pos:line="47" pos:column="58">*<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="59">this<pos:position pos:line="47" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="65">&amp;<pos:position pos:line="47" pos:column="70"/></operator><name><name pos:line="47" pos:column="66">Root<pos:position pos:line="47" pos:column="70"/></name><operator pos:line="47" pos:column="70">::<pos:position pos:line="47" pos:column="72"/></operator><name pos:line="47" pos:column="72">adjust_down_throttle<pos:position pos:line="47" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="47" pos:column="95">-<pos:position pos:line="47" pos:column="96"/></operator><literal type="number" pos:line="47" pos:column="96">5<pos:position pos:line="47" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="99"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">m_bindings<pos:position pos:line="49" pos:column="15"/></name><index pos:line="49" pos:column="15">[<expr><literal type="char" pos:line="49" pos:column="16">'e'<pos:position pos:line="49" pos:column="19"/></literal></expr>]<pos:position pos:line="49" pos:column="20"/></index></name>           <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <call><name><name pos:line="49" pos:column="33">sigc<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">::<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="39">bind<pos:position pos:line="49" pos:column="43"/></name></name><argument_list pos:line="49" pos:column="43">(<argument><expr><call><name><name pos:line="49" pos:column="44">sigc<pos:position pos:line="49" pos:column="48"/></name><operator pos:line="49" pos:column="48">::<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="50">mem_fun<pos:position pos:line="49" pos:column="57"/></name></name><argument_list pos:line="49" pos:column="57">(<argument><expr><operator pos:line="49" pos:column="58">*<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="59">this<pos:position pos:line="49" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="65">&amp;<pos:position pos:line="49" pos:column="70"/></operator><name><name pos:line="49" pos:column="66">Root<pos:position pos:line="49" pos:column="70"/></name><operator pos:line="49" pos:column="70">::<pos:position pos:line="49" pos:column="72"/></operator><name pos:line="49" pos:column="72">adjust_up_throttle<pos:position pos:line="49" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="93">50<pos:position pos:line="49" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="97"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">m_bindings<pos:position pos:line="50" pos:column="15"/></name><index pos:line="50" pos:column="15">[<expr><literal type="char" pos:line="50" pos:column="16">'j'<pos:position pos:line="50" pos:column="19"/></literal></expr>]<pos:position pos:line="50" pos:column="20"/></index></name>           <operator pos:line="50" pos:column="31">=<pos:position pos:line="50" pos:column="32"/></operator> <call><name><name pos:line="50" pos:column="33">sigc<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">::<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">bind<pos:position pos:line="50" pos:column="43"/></name></name><argument_list pos:line="50" pos:column="43">(<argument><expr><call><name><name pos:line="50" pos:column="44">sigc<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">::<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="50">mem_fun<pos:position pos:line="50" pos:column="57"/></name></name><argument_list pos:line="50" pos:column="57">(<argument><expr><operator pos:line="50" pos:column="58">*<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="59">this<pos:position pos:line="50" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="65">&amp;<pos:position pos:line="50" pos:column="70"/></operator><name><name pos:line="50" pos:column="66">Root<pos:position pos:line="50" pos:column="70"/></name><operator pos:line="50" pos:column="70">::<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="72">adjust_up_throttle<pos:position pos:line="50" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="50" pos:column="93">-<pos:position pos:line="50" pos:column="94"/></operator><literal type="number" pos:line="50" pos:column="94">50<pos:position pos:line="50" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">m_bindings<pos:position pos:line="51" pos:column="15"/></name><index pos:line="51" pos:column="15">[<expr><literal type="char" pos:line="51" pos:column="16">'E'<pos:position pos:line="51" pos:column="19"/></literal></expr>]<pos:position pos:line="51" pos:column="20"/></index></name>           <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <call><name><name pos:line="51" pos:column="33">sigc<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">::<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">bind<pos:position pos:line="51" pos:column="43"/></name></name><argument_list pos:line="51" pos:column="43">(<argument><expr><call><name><name pos:line="51" pos:column="44">sigc<pos:position pos:line="51" pos:column="48"/></name><operator pos:line="51" pos:column="48">::<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="50">mem_fun<pos:position pos:line="51" pos:column="57"/></name></name><argument_list pos:line="51" pos:column="57">(<argument><expr><operator pos:line="51" pos:column="58">*<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="59">this<pos:position pos:line="51" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="65">&amp;<pos:position pos:line="51" pos:column="70"/></operator><name><name pos:line="51" pos:column="66">Root<pos:position pos:line="51" pos:column="70"/></name><operator pos:line="51" pos:column="70">::<pos:position pos:line="51" pos:column="72"/></operator><name pos:line="51" pos:column="72">adjust_down_throttle<pos:position pos:line="51" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="95">50<pos:position pos:line="51" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">m_bindings<pos:position pos:line="52" pos:column="15"/></name><index pos:line="52" pos:column="15">[<expr><literal type="char" pos:line="52" pos:column="16">'J'<pos:position pos:line="52" pos:column="19"/></literal></expr>]<pos:position pos:line="52" pos:column="20"/></index></name>           <operator pos:line="52" pos:column="31">=<pos:position pos:line="52" pos:column="32"/></operator> <call><name><name pos:line="52" pos:column="33">sigc<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">::<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="39">bind<pos:position pos:line="52" pos:column="43"/></name></name><argument_list pos:line="52" pos:column="43">(<argument><expr><call><name><name pos:line="52" pos:column="44">sigc<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">::<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="50">mem_fun<pos:position pos:line="52" pos:column="57"/></name></name><argument_list pos:line="52" pos:column="57">(<argument><expr><operator pos:line="52" pos:column="58">*<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="59">this<pos:position pos:line="52" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="65">&amp;<pos:position pos:line="52" pos:column="70"/></operator><name><name pos:line="52" pos:column="66">Root<pos:position pos:line="52" pos:column="70"/></name><operator pos:line="52" pos:column="70">::<pos:position pos:line="52" pos:column="72"/></operator><name pos:line="52" pos:column="72">adjust_down_throttle<pos:position pos:line="52" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="52" pos:column="95">-<pos:position pos:line="52" pos:column="96"/></operator><literal type="number" pos:line="52" pos:column="96">50<pos:position pos:line="52" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="100"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="55" pos:column="3">m_bindings<pos:position pos:line="55" pos:column="13"/></name><index pos:line="55" pos:column="13">[<expr><literal type="char" pos:line="55" pos:column="14">'\x0C'<pos:position pos:line="55" pos:column="20"/></literal></expr>]<pos:position pos:line="55" pos:column="21"/></index></name>        <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <call><name><name pos:line="55" pos:column="31">sigc<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">::<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">mem_fun<pos:position pos:line="55" pos:column="44"/></name></name><argument_list pos:line="55" pos:column="44">(<argument><expr><call><name><name pos:line="55" pos:column="45">m_control<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">-&gt;<pos:position pos:line="55" pos:column="59"/></operator><name pos:line="55" pos:column="56">display<pos:position pos:line="55" pos:column="63"/></name></name><argument_list pos:line="55" pos:column="63">()<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="55" pos:column="67">&amp;<pos:position pos:line="55" pos:column="72"/></operator><name><name pos:line="55" pos:column="68">display<pos:position pos:line="55" pos:column="75"/></name><operator pos:line="55" pos:column="75">::<pos:position pos:line="55" pos:column="77"/></operator><name pos:line="55" pos:column="77">Manager<pos:position pos:line="55" pos:column="84"/></name><operator pos:line="55" pos:column="84">::<pos:position pos:line="55" pos:column="86"/></operator><name pos:line="55" pos:column="86">force_redraw<pos:position pos:line="55" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="100"/></expr_stmt> <comment type="line" pos:line="55" pos:column="101">// ^L</comment>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">m_bindings<pos:position pos:line="56" pos:column="13"/></name><index pos:line="56" pos:column="13">[<expr><literal type="char" pos:line="56" pos:column="14">'\x11'<pos:position pos:line="56" pos:column="20"/></literal></expr>]<pos:position pos:line="56" pos:column="21"/></index></name>        <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <call><name><name pos:line="56" pos:column="31">sigc<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">::<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="37">mem_fun<pos:position pos:line="56" pos:column="44"/></name></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name pos:line="56" pos:column="45">m_control<pos:position pos:line="56" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="56">&amp;<pos:position pos:line="56" pos:column="61"/></operator><name><name pos:line="56" pos:column="57">Control<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">::<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="66">receive_normal_shutdown<pos:position pos:line="56" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="91"/></expr_stmt> <comment type="line" pos:line="56" pos:column="92">// ^Q</comment>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

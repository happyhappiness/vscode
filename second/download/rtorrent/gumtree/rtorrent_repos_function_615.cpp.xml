<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_615.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowLogComplete<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">redraw<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list> <block pos:line="2" pos:column="29">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">m_canvas<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">erase<pos:position pos:line="3" pos:column="18"/></name></name><argument_list pos:line="3" pos:column="18">()<pos:position pos:line="3" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">m_canvas<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">width<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call> <operator pos:line="5" pos:column="25">&lt;<pos:position pos:line="5" pos:column="29"/></operator> <literal type="number" pos:line="5" pos:column="27">16<pos:position pos:line="5" pos:column="29"/></literal></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">pos<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><call><name><name pos:line="8" pos:column="13">m_canvas<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">height<pos:position pos:line="8" pos:column="29"/></name></name><argument_list pos:line="8" pos:column="29">()<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><decl><type><name><name pos:line="10" pos:column="8">core<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">::<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">Log<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">::<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">iterator<pos:position pos:line="10" pos:column="27"/></name></name></type> <name pos:line="10" pos:column="28">itr<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><call><name><name pos:line="10" pos:column="34">m_log<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">begin<pos:position pos:line="10" pos:column="46"/></name></name><argument_list pos:line="10" pos:column="46">()<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="50">last<pos:position pos:line="10" pos:column="54"/></name> <init pos:line="10" pos:column="55">= <expr><call><name><name pos:line="10" pos:column="57">m_log<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">-&gt;<pos:position pos:line="10" pos:column="67"/></operator><name pos:line="10" pos:column="64">end<pos:position pos:line="10" pos:column="67"/></name></name><argument_list pos:line="10" pos:column="67">()<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="70"/></init> <condition><expr><name pos:line="10" pos:column="71">itr<pos:position pos:line="10" pos:column="74"/></name> <operator pos:line="10" pos:column="75">!=<pos:position pos:line="10" pos:column="77"/></operator> <name pos:line="10" pos:column="78">last<pos:position pos:line="10" pos:column="82"/></name> <operator pos:line="10" pos:column="83">&amp;&amp;<pos:position pos:line="10" pos:column="93"/></operator> <name pos:line="10" pos:column="86">pos<pos:position pos:line="10" pos:column="89"/></name> <operator pos:line="10" pos:column="90">&gt;<pos:position pos:line="10" pos:column="94"/></operator> <literal type="number" pos:line="10" pos:column="92">0<pos:position pos:line="10" pos:column="93"/></literal></expr>;<pos:position pos:line="10" pos:column="94"/></condition> <incr><expr><operator pos:line="10" pos:column="95">++<pos:position pos:line="10" pos:column="97"/></operator><name pos:line="10" pos:column="97">itr<pos:position pos:line="10" pos:column="100"/></name></expr></incr>)<pos:position pos:line="10" pos:column="101"/></control> <block pos:line="10" pos:column="102">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">buffer<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">16<pos:position pos:line="11" pos:column="19"/></literal></expr>]<pos:position pos:line="11" pos:column="20"/></index></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

    <comment type="line" pos:line="13" pos:column="5">// Use an arbitrary min width of 60 for allowing multiple</comment>
    <comment type="line" pos:line="14" pos:column="5">// lines. This should ensure we don't mess up the display when the</comment>
    <comment type="line" pos:line="15" pos:column="5">// screen is shrunk too much.</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">int<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">timeWidth<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><literal type="number" pos:line="16" pos:column="30">3<pos:position pos:line="16" pos:column="31"/></literal> <operator pos:line="16" pos:column="32">+<pos:position pos:line="16" pos:column="33"/></operator> <call><name pos:line="16" pos:column="34">print_hhmmss_local<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">buffer<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">buffer<pos:position pos:line="16" pos:column="67"/></name> <operator pos:line="16" pos:column="68">+<pos:position pos:line="16" pos:column="69"/></operator> <literal type="number" pos:line="16" pos:column="70">16<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>, <argument><expr><cast type="static" pos:line="16" pos:column="74">static_cast<argument_list type="generic" pos:line="16" pos:column="85">&lt;<argument><expr><name pos:line="16" pos:column="86">time_t<pos:position pos:line="16" pos:column="92"/></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="96"/></argument_list><argument_list pos:line="16" pos:column="93">(<argument><expr><call><name><name pos:line="16" pos:column="94">itr<pos:position pos:line="16" pos:column="97"/></name><operator pos:line="16" pos:column="97">-&gt;<pos:position pos:line="16" pos:column="102"/></operator><name pos:line="16" pos:column="99">first<pos:position pos:line="16" pos:column="104"/></name><operator pos:line="16" pos:column="104">.<pos:position pos:line="16" pos:column="105"/></operator><name pos:line="16" pos:column="105">seconds<pos:position pos:line="16" pos:column="112"/></name></name><argument_list pos:line="16" pos:column="112">()<pos:position pos:line="16" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="115"/></argument_list></cast></expr></argument>)<pos:position pos:line="16" pos:column="116"/></argument_list></call> <operator pos:line="16" pos:column="117">-<pos:position pos:line="16" pos:column="118"/></operator> <name pos:line="16" pos:column="119">buffer<pos:position pos:line="16" pos:column="125"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="126"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">unsigned<pos:position pos:line="18" pos:column="13"/></name> <name pos:line="18" pos:column="14">int<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">logWidth<pos:position pos:line="18" pos:column="26"/></name>  <init pos:line="18" pos:column="28">= <expr><ternary><condition><expr><call><name><name pos:line="18" pos:column="30">m_canvas<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">width<pos:position pos:line="18" pos:column="45"/></name></name><argument_list pos:line="18" pos:column="45">()<pos:position pos:line="18" pos:column="47"/></argument_list></call> <operator pos:line="18" pos:column="48">&gt;<pos:position pos:line="18" pos:column="52"/></operator> <literal type="number" pos:line="18" pos:column="50">60<pos:position pos:line="18" pos:column="52"/></literal></expr> ?<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54"> <expr><operator pos:line="18" pos:column="55">(<pos:position pos:line="18" pos:column="56"/></operator><call><name><name pos:line="18" pos:column="56">m_canvas<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">-&gt;<pos:position pos:line="18" pos:column="69"/></operator><name pos:line="18" pos:column="66">width<pos:position pos:line="18" pos:column="71"/></name></name><argument_list pos:line="18" pos:column="71">()<pos:position pos:line="18" pos:column="73"/></argument_list></call> <operator pos:line="18" pos:column="74">-<pos:position pos:line="18" pos:column="75"/></operator> <name pos:line="18" pos:column="76">timeWidth<pos:position pos:line="18" pos:column="85"/></name><operator pos:line="18" pos:column="85">)<pos:position pos:line="18" pos:column="86"/></operator></expr> <pos:position pos:line="18" pos:column="87"/></then><else pos:line="18" pos:column="87">: <expr><operator pos:line="18" pos:column="89">(<pos:position pos:line="18" pos:column="90"/></operator><literal type="number" pos:line="18" pos:column="90">60<pos:position pos:line="18" pos:column="92"/></literal> <operator pos:line="18" pos:column="93">-<pos:position pos:line="18" pos:column="94"/></operator> <name pos:line="18" pos:column="95">timeWidth<pos:position pos:line="18" pos:column="104"/></name><operator pos:line="18" pos:column="104">)<pos:position pos:line="18" pos:column="105"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="18" pos:column="106"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">unsigned<pos:position pos:line="19" pos:column="13"/></name> <name pos:line="19" pos:column="14">int<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">logHeight<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><call><name><name pos:line="19" pos:column="31">itr<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">second<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">.<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">size<pos:position pos:line="19" pos:column="47"/></name></name><argument_list pos:line="19" pos:column="47">()<pos:position pos:line="19" pos:column="49"/></argument_list></call> <operator pos:line="19" pos:column="50">+<pos:position pos:line="19" pos:column="51"/></operator> <name pos:line="19" pos:column="52">logWidth<pos:position pos:line="19" pos:column="60"/></name> <operator pos:line="19" pos:column="61">-<pos:position pos:line="19" pos:column="62"/></operator> <literal type="number" pos:line="19" pos:column="63">1<pos:position pos:line="19" pos:column="64"/></literal><operator pos:line="19" pos:column="64">)<pos:position pos:line="19" pos:column="65"/></operator> <operator pos:line="19" pos:column="66">/<pos:position pos:line="19" pos:column="67"/></operator> <name pos:line="19" pos:column="68">logWidth<pos:position pos:line="19" pos:column="76"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="77"/></decl_stmt>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><decl><type><name pos:line="21" pos:column="10">unsigned<pos:position pos:line="21" pos:column="18"/></name> <name pos:line="21" pos:column="19">int<pos:position pos:line="21" pos:column="22"/></name></type> <name pos:line="21" pos:column="23">j<pos:position pos:line="21" pos:column="24"/></name> <init pos:line="21" pos:column="25">= <expr><name pos:line="21" pos:column="27">logHeight<pos:position pos:line="21" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="37"/></init> <condition><expr><name pos:line="21" pos:column="38">j<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">&gt;<pos:position pos:line="21" pos:column="44"/></operator> <literal type="number" pos:line="21" pos:column="42">0<pos:position pos:line="21" pos:column="43"/></literal> <operator pos:line="21" pos:column="44">&amp;&amp;<pos:position pos:line="21" pos:column="54"/></operator> <name pos:line="21" pos:column="47">pos<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">&gt;<pos:position pos:line="21" pos:column="55"/></operator> <literal type="number" pos:line="21" pos:column="53">0<pos:position pos:line="21" pos:column="54"/></literal></expr>;<pos:position pos:line="21" pos:column="55"/></condition> <incr><expr><operator pos:line="21" pos:column="56">--<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">j<pos:position pos:line="21" pos:column="59"/></name></expr><operator pos:line="21" pos:column="59">,<pos:position pos:line="21" pos:column="60"/></operator> <expr><operator pos:line="21" pos:column="61">--<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="63">pos<pos:position pos:line="21" pos:column="66"/></name></expr></incr>)<pos:position pos:line="21" pos:column="67"/></control>
      <block type="pseudo"><if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">j<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">==<pos:position pos:line="22" pos:column="15"/></operator> <literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr>)<pos:position pos:line="22" pos:column="18"/></condition><then pos:line="22" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="23" pos:column="9">m_canvas<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">print<pos:position pos:line="23" pos:column="24"/></name></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">pos<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">-<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">1<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="37">"(%s) %s"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">buffer<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="56">itr<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">second<pos:position pos:line="23" pos:column="67"/></name><operator pos:line="23" pos:column="67">.<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="68">substr<pos:position pos:line="23" pos:column="74"/></name></name><argument_list pos:line="23" pos:column="74">(<argument><expr><literal type="number" pos:line="23" pos:column="75">0<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="78">m_canvas<pos:position pos:line="23" pos:column="86"/></name><operator pos:line="23" pos:column="86">-&gt;<pos:position pos:line="23" pos:column="91"/></operator><name pos:line="23" pos:column="88">width<pos:position pos:line="23" pos:column="93"/></name></name><argument_list pos:line="23" pos:column="93">()<pos:position pos:line="23" pos:column="95"/></argument_list></call> <operator pos:line="23" pos:column="96">-<pos:position pos:line="23" pos:column="97"/></operator> <name pos:line="23" pos:column="98">timeWidth<pos:position pos:line="23" pos:column="107"/></name></expr></argument>)<pos:position pos:line="23" pos:column="108"/></argument_list></call><operator pos:line="23" pos:column="108">.<pos:position pos:line="23" pos:column="109"/></operator><call><name pos:line="23" pos:column="109">c_str<pos:position pos:line="23" pos:column="114"/></name><argument_list pos:line="23" pos:column="114">()<pos:position pos:line="23" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="118"/></expr_stmt></block></then>
      <else pos:line="24" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="25" pos:column="9">m_canvas<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">print<pos:position pos:line="25" pos:column="24"/></name></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">timeWidth<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">pos<pos:position pos:line="25" pos:column="39"/></name> <operator pos:line="25" pos:column="40">-<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="42">1<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="45">"%s"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="51">itr<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">second<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">.<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="63">substr<pos:position pos:line="25" pos:column="69"/></name></name><argument_list pos:line="25" pos:column="69">(<argument><expr><name pos:line="25" pos:column="70">logWidth<pos:position pos:line="25" pos:column="78"/></name> <operator pos:line="25" pos:column="79">*<pos:position pos:line="25" pos:column="80"/></operator> <operator pos:line="25" pos:column="81">(<pos:position pos:line="25" pos:column="82"/></operator><name pos:line="25" pos:column="82">j<pos:position pos:line="25" pos:column="83"/></name> <operator pos:line="25" pos:column="84">-<pos:position pos:line="25" pos:column="85"/></operator> <literal type="number" pos:line="25" pos:column="86">1<pos:position pos:line="25" pos:column="87"/></literal><operator pos:line="25" pos:column="87">)<pos:position pos:line="25" pos:column="88"/></operator></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="90">m_canvas<pos:position pos:line="25" pos:column="98"/></name><operator pos:line="25" pos:column="98">-&gt;<pos:position pos:line="25" pos:column="103"/></operator><name pos:line="25" pos:column="100">width<pos:position pos:line="25" pos:column="105"/></name></name><argument_list pos:line="25" pos:column="105">()<pos:position pos:line="25" pos:column="107"/></argument_list></call> <operator pos:line="25" pos:column="108">-<pos:position pos:line="25" pos:column="109"/></operator> <name pos:line="25" pos:column="110">timeWidth<pos:position pos:line="25" pos:column="119"/></name></expr></argument>)<pos:position pos:line="25" pos:column="120"/></argument_list></call><operator pos:line="25" pos:column="120">.<pos:position pos:line="25" pos:column="121"/></operator><call><name pos:line="25" pos:column="121">c_str<pos:position pos:line="25" pos:column="126"/></name><argument_list pos:line="25" pos:column="126">()<pos:position pos:line="25" pos:column="128"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="130"/></expr_stmt></block></else></if></block></for>
  }<pos:position pos:line="26" pos:column="4"/></block></for>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_146.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name pos:line="2" pos:column="1">apply_d_change_link<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">changeType<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="37">core<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">Download<pos:position pos:line="2" pos:column="51"/></name></name><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">download<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name><name pos:line="2" pos:column="69">torrent<pos:position pos:line="2" pos:column="76"/></name><operator pos:line="2" pos:column="76">::<pos:position pos:line="2" pos:column="78"/></operator><name pos:line="2" pos:column="78">Object<pos:position pos:line="2" pos:column="84"/></name></name><modifier pos:line="2" pos:column="84">&amp;<pos:position pos:line="2" pos:column="89"/></modifier></type> <name pos:line="2" pos:column="86">rawArgs<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list> <block pos:line="2" pos:column="95">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">torrent<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">Object<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">::<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">list_type<pos:position pos:line="3" pos:column="35"/></name></name><modifier pos:line="3" pos:column="35">&amp;<pos:position pos:line="3" pos:column="40"/></modifier></type> <name pos:line="3" pos:column="37">args<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><call><name><name pos:line="3" pos:column="44">rawArgs<pos:position pos:line="3" pos:column="51"/></name><operator pos:line="3" pos:column="51">.<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">as_list<pos:position pos:line="3" pos:column="59"/></name></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">args<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">size<pos:position pos:line="5" pos:column="16"/></name></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call> <operator pos:line="5" pos:column="19">!=<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="22">3<pos:position pos:line="5" pos:column="23"/></literal></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">input_error<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">(<argument><expr><literal type="string" pos:line="6" pos:column="32">"Wrong argument count."<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">torrent<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">::<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">Object<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">::<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">list_type<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">::<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">const_iterator<pos:position pos:line="8" pos:column="45"/></name></name></type> <name pos:line="8" pos:column="46">itr<pos:position pos:line="8" pos:column="49"/></name> <init pos:line="8" pos:column="50">= <expr><call><name><name pos:line="8" pos:column="52">args<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">.<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">begin<pos:position pos:line="8" pos:column="62"/></name></name><argument_list pos:line="8" pos:column="62">()<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name><name pos:line="10" pos:column="9">std<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">::<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">string<pos:position pos:line="10" pos:column="20"/></name></name><modifier pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></modifier></type> <name pos:line="10" pos:column="22">type<pos:position pos:line="10" pos:column="26"/></name>    <init pos:line="10" pos:column="30">= <expr><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">itr<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">++<pos:position pos:line="10" pos:column="38"/></operator><operator pos:line="10" pos:column="38">)<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><call><name pos:line="10" pos:column="41">as_string<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">()<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name><name pos:line="11" pos:column="9">std<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">::<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">string<pos:position pos:line="11" pos:column="20"/></name></name><modifier pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></modifier></type> <name pos:line="11" pos:column="22">prefix<pos:position pos:line="11" pos:column="28"/></name>  <init pos:line="11" pos:column="30">= <expr><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">itr<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">++<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><call><name pos:line="11" pos:column="41">as_string<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">()<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name><name pos:line="12" pos:column="9">std<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">::<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">string<pos:position pos:line="12" pos:column="20"/></name></name><modifier pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></modifier></type> <name pos:line="12" pos:column="22">postfix<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">itr<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">++<pos:position pos:line="12" pos:column="38"/></operator><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><call><name pos:line="12" pos:column="41">as_string<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">()<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>
  
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name><name pos:line="14" pos:column="7">type<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">empty<pos:position pos:line="14" pos:column="17"/></name></name><argument_list pos:line="14" pos:column="17">()<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
    <block type="pseudo"><throw pos:line="15" pos:column="5">throw <expr><call><name><name pos:line="15" pos:column="11">torrent<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">::<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">input_error<pos:position pos:line="15" pos:column="31"/></name></name><argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"Invalid arguments."<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">std<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">::<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">string<pos:position pos:line="17" pos:column="14"/></name></name></type> <name pos:line="17" pos:column="15">target<pos:position pos:line="17" pos:column="21"/></name></decl>;<pos:position pos:line="17" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="18" pos:column="3">std<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">::<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">string<pos:position pos:line="18" pos:column="14"/></name></name></type> <name pos:line="18" pos:column="15">link<pos:position pos:line="18" pos:column="19"/></name></decl>;<pos:position pos:line="18" pos:column="20"/></decl_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">type<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">==<pos:position pos:line="20" pos:column="14"/></operator> <literal type="string" pos:line="20" pos:column="15">"base_path"<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">target<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name><name pos:line="21" pos:column="14">rpc<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">::<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">call_command_d_string<pos:position pos:line="21" pos:column="40"/></name></name><argument_list pos:line="21" pos:column="40">(<argument><expr><literal type="string" pos:line="21" pos:column="41">"d.get_base_path"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">download<pos:position pos:line="21" pos:column="68"/></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">link<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <call><name><name pos:line="22" pos:column="12">rak<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">::<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">path_expand<pos:position pos:line="22" pos:column="28"/></name></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">prefix<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">+<pos:position pos:line="22" pos:column="37"/></operator> <call><name><name pos:line="22" pos:column="38">rpc<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">::<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">call_command_d_string<pos:position pos:line="22" pos:column="64"/></name></name><argument_list pos:line="22" pos:column="64">(<argument><expr><literal type="string" pos:line="22" pos:column="65">"d.get_base_path"<pos:position pos:line="22" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="84">download<pos:position pos:line="22" pos:column="92"/></name></expr></argument>)<pos:position pos:line="22" pos:column="93"/></argument_list></call> <operator pos:line="22" pos:column="94">+<pos:position pos:line="22" pos:column="95"/></operator> <name pos:line="22" pos:column="96">postfix<pos:position pos:line="22" pos:column="103"/></name></expr></argument>)<pos:position pos:line="22" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="105"/></expr_stmt>

  }<pos:position pos:line="24" pos:column="4"/></block></then> <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><name pos:line="24" pos:column="14">type<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">==<pos:position pos:line="24" pos:column="21"/></operator> <literal type="string" pos:line="24" pos:column="22">"base_filename"<pos:position pos:line="24" pos:column="37"/></literal></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
    <expr_stmt><expr><name pos:line="25" pos:column="5">target<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name><name pos:line="25" pos:column="14">rpc<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">::<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">call_command_d_string<pos:position pos:line="25" pos:column="40"/></name></name><argument_list pos:line="25" pos:column="40">(<argument><expr><literal type="string" pos:line="25" pos:column="41">"d.get_base_path"<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="60">download<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">link<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name><name pos:line="26" pos:column="12">rak<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">::<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">path_expand<pos:position pos:line="26" pos:column="28"/></name></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">prefix<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">+<pos:position pos:line="26" pos:column="37"/></operator> <call><name><name pos:line="26" pos:column="38">rpc<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">::<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">call_command_d_string<pos:position pos:line="26" pos:column="64"/></name></name><argument_list pos:line="26" pos:column="64">(<argument><expr><literal type="string" pos:line="26" pos:column="65">"d.get_base_filename"<pos:position pos:line="26" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="88">download<pos:position pos:line="26" pos:column="96"/></name></expr></argument>)<pos:position pos:line="26" pos:column="97"/></argument_list></call> <operator pos:line="26" pos:column="98">+<pos:position pos:line="26" pos:column="99"/></operator> <name pos:line="26" pos:column="100">postfix<pos:position pos:line="26" pos:column="107"/></name></expr></argument>)<pos:position pos:line="26" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="109"/></expr_stmt>

  }<pos:position pos:line="28" pos:column="4"/></block></then></if></elseif> <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><name pos:line="28" pos:column="14">type<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">==<pos:position pos:line="28" pos:column="21"/></operator> <literal type="string" pos:line="28" pos:column="22">"tied"<pos:position pos:line="28" pos:column="28"/></literal></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">link<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name><name pos:line="29" pos:column="12">rak<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">::<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">path_expand<pos:position pos:line="29" pos:column="28"/></name></name><argument_list pos:line="29" pos:column="28">(<argument><expr><call><name><name pos:line="29" pos:column="29">rpc<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">::<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">call_command_d_string<pos:position pos:line="29" pos:column="55"/></name></name><argument_list pos:line="29" pos:column="55">(<argument><expr><literal type="string" pos:line="29" pos:column="56">"d.get_tied_to_file"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="78">download<pos:position pos:line="29" pos:column="86"/></name></expr></argument>)<pos:position pos:line="29" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="89"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name><name pos:line="31" pos:column="9">link<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">empty<pos:position pos:line="31" pos:column="19"/></name></name><argument_list pos:line="31" pos:column="19">()<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><call><name><name pos:line="32" pos:column="14">torrent<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">::<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">Object<pos:position pos:line="32" pos:column="29"/></name></name><argument_list pos:line="32" pos:column="29">()<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">link<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <call><name><name pos:line="34" pos:column="12">rak<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">::<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">path_expand<pos:position pos:line="34" pos:column="28"/></name></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">prefix<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">+<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">link<pos:position pos:line="34" pos:column="42"/></name> <operator pos:line="34" pos:column="43">+<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">postfix<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">target<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name><name pos:line="35" pos:column="14">rpc<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">::<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">call_command_d_string<pos:position pos:line="35" pos:column="40"/></name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><literal type="string" pos:line="35" pos:column="41">"d.get_base_path"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="60">download<pos:position pos:line="35" pos:column="68"/></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>

  }<pos:position pos:line="37" pos:column="4"/></block></then></if></elseif> <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
    <throw pos:line="38" pos:column="5">throw <expr><call><name><name pos:line="38" pos:column="11">torrent<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">::<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">input_error<pos:position pos:line="38" pos:column="31"/></name></name><argument_list pos:line="38" pos:column="31">(<argument><expr><literal type="string" pos:line="38" pos:column="32">"Unknown type argument."<pos:position pos:line="38" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></throw>
  }<pos:position pos:line="39" pos:column="4"/></block></else></if>

  <switch pos:line="41" pos:column="3">switch <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">changeType<pos:position pos:line="41" pos:column="21"/></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition> <block pos:line="41" pos:column="23">{
  <case pos:line="42" pos:column="3">case <expr><literal type="number" pos:line="42" pos:column="8">0<pos:position pos:line="42" pos:column="9"/></literal></expr>:<pos:position pos:line="42" pos:column="10"/></case>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">symlink<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><call><name><name pos:line="43" pos:column="17">target<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">.<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">c_str<pos:position pos:line="43" pos:column="29"/></name></name><argument_list pos:line="43" pos:column="29">()<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="43" pos:column="33">link<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">.<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">c_str<pos:position pos:line="43" pos:column="43"/></name></name><argument_list pos:line="43" pos:column="43">()<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call> <operator pos:line="43" pos:column="47">==<pos:position pos:line="43" pos:column="49"/></operator> <operator pos:line="43" pos:column="50">-<pos:position pos:line="43" pos:column="51"/></operator><literal type="number" pos:line="43" pos:column="51">1<pos:position pos:line="43" pos:column="52"/></literal></expr>)<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53">
      <comment type="line" pos:line="44" pos:column="7">//     control-&gt;core()-&gt;push_log("create_link failed: " + std::string(rak::error_number::current().c_str()));</comment>
      <comment type="line" pos:line="45" pos:column="7">//     control-&gt;core()-&gt;push_log("create_link failed: " + std::string(rak::error_number::current().c_str()) + " to " + target);</comment>
      <block type="pseudo"><empty_stmt pos:line="46" pos:column="7">;<pos:position pos:line="46" pos:column="8"/></empty_stmt></block></then></if> <comment type="line" pos:line="46" pos:column="9">// Disabled.</comment>
    <break pos:line="47" pos:column="5">break;<pos:position pos:line="47" pos:column="11"/></break>

  <case pos:line="49" pos:column="3">case <expr><literal type="number" pos:line="49" pos:column="8">1<pos:position pos:line="49" pos:column="9"/></literal></expr>:<pos:position pos:line="49" pos:column="10"/></case>
  <block pos:line="50" pos:column="3">{
    <decl_stmt><decl><type><name><name pos:line="51" pos:column="5">rak<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">::<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">file_stat<pos:position pos:line="51" pos:column="19"/></name></name></type> <name pos:line="51" pos:column="20">fileStat<pos:position pos:line="51" pos:column="28"/></name></decl>;<pos:position pos:line="51" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="52" pos:column="5">rak<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">::<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">error_number<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">::<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">clear_global<pos:position pos:line="52" pos:column="36"/></name></name><argument_list pos:line="52" pos:column="36">()<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">!<pos:position pos:line="54" pos:column="10"/></operator><call><name><name pos:line="54" pos:column="10">fileStat<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">.<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">update_link<pos:position pos:line="54" pos:column="30"/></name></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">link<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call> <operator pos:line="54" pos:column="37">||<pos:position pos:line="54" pos:column="39"/></operator> <operator pos:line="54" pos:column="40">!<pos:position pos:line="54" pos:column="41"/></operator><call><name><name pos:line="54" pos:column="41">fileStat<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">.<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="50">is_link<pos:position pos:line="54" pos:column="57"/></name></name><argument_list pos:line="54" pos:column="57">()<pos:position pos:line="54" pos:column="59"/></argument_list></call> <operator pos:line="54" pos:column="60">||<pos:position pos:line="54" pos:column="62"/></operator>
        <call><name pos:line="55" pos:column="9">unlink<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><call><name><name pos:line="55" pos:column="16">link<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">c_str<pos:position pos:line="55" pos:column="26"/></name></name><argument_list pos:line="55" pos:column="26">()<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call> <operator pos:line="55" pos:column="30">==<pos:position pos:line="55" pos:column="32"/></operator> <operator pos:line="55" pos:column="33">-<pos:position pos:line="55" pos:column="34"/></operator><literal type="number" pos:line="55" pos:column="34">1<pos:position pos:line="55" pos:column="35"/></literal></expr>)<pos:position pos:line="55" pos:column="36"/></condition><then pos:line="55" pos:column="36">
      <block type="pseudo"><empty_stmt pos:line="56" pos:column="7">;<pos:position pos:line="56" pos:column="8"/></empty_stmt></block></then></if> <comment type="line" pos:line="56" pos:column="9">//     control-&gt;core()-&gt;push_log("delete_link failed: " + std::string(rak::error_number::current().c_str()));</comment>

    <break pos:line="58" pos:column="5">break;<pos:position pos:line="58" pos:column="11"/></break>
  }<pos:position pos:line="59" pos:column="4"/></block>
  <default pos:line="60" pos:column="3">default:<pos:position pos:line="60" pos:column="11"/></default>
    <break pos:line="61" pos:column="5">break;<pos:position pos:line="61" pos:column="11"/></break>
  }<pos:position pos:line="62" pos:column="4"/></block></switch>

  <return pos:line="64" pos:column="3">return <expr><call><name><name pos:line="64" pos:column="10">torrent<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">::<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="19">Object<pos:position pos:line="64" pos:column="25"/></name></name><argument_list pos:line="64" pos:column="25">()<pos:position pos:line="64" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="28"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

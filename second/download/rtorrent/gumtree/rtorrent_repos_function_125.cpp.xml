<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_125.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">OptionParser<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">has_flag<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">flag<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">argc<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier><modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type> <name pos:line="2" pos:column="52">argv<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list> <block pos:line="2" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">options<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">3<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name> <init pos:line="3" pos:column="19">= <expr><block pos:line="3" pos:column="21">{ <expr><literal type="char" pos:line="3" pos:column="23">'-'<pos:position pos:line="3" pos:column="26"/></literal></expr>, <expr><name pos:line="3" pos:column="28">flag<pos:position pos:line="3" pos:column="32"/></name></expr>, <expr><literal type="char" pos:line="3" pos:column="34">'\0'<pos:position pos:line="3" pos:column="38"/></literal></expr> }<pos:position pos:line="3" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>

  <return pos:line="5" pos:column="3">return <expr><call><name><name pos:line="5" pos:column="10">std<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">::<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">find_if<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">argv<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">argv<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">+<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">argc<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="42">std<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">::<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">not1<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">(<argument><expr><call><name><name pos:line="5" pos:column="52">std<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">::<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">bind1st<pos:position pos:line="5" pos:column="64"/></name></name><argument_list pos:line="5" pos:column="64">(<argument><expr><call><name><name pos:line="5" pos:column="65">std<pos:position pos:line="5" pos:column="68"/></name><operator pos:line="5" pos:column="68">::<pos:position pos:line="5" pos:column="70"/></operator><name pos:line="5" pos:column="70">ptr_fun<pos:position pos:line="5" pos:column="77"/></name></name><argument_list pos:line="5" pos:column="77">(<argument><expr><operator pos:line="5" pos:column="78">&amp;<pos:position pos:line="5" pos:column="83"/></operator><name><name pos:line="5" pos:column="79">std<pos:position pos:line="5" pos:column="82"/></name><operator pos:line="5" pos:column="82">::<pos:position pos:line="5" pos:column="84"/></operator><name pos:line="5" pos:column="84">strcmp<pos:position pos:line="5" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="93">options<pos:position pos:line="5" pos:column="100"/></name></expr></argument>)<pos:position pos:line="5" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="103"/></argument_list></call> <operator pos:line="5" pos:column="104">!=<pos:position pos:line="5" pos:column="106"/></operator> <name pos:line="5" pos:column="107">argv<pos:position pos:line="5" pos:column="111"/></name> <operator pos:line="5" pos:column="112">+<pos:position pos:line="5" pos:column="113"/></operator> <name pos:line="5" pos:column="114">argc<pos:position pos:line="5" pos:column="118"/></name></expr>;<pos:position pos:line="5" pos:column="119"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

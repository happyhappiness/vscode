<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_574.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Manager<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">initialize_second<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list> <block pos:line="2" pos:column="30">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">torrent<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">::<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="12">Http<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">set_factory<pos:position pos:line="3" pos:column="29"/></name></name><argument_list pos:line="3" pos:column="29">(<argument><expr><call><name><name pos:line="3" pos:column="30">sigc<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">::<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">mem_fun<pos:position pos:line="3" pos:column="43"/></name></name><argument_list pos:line="3" pos:column="43">(<argument><expr><call><name><name pos:line="3" pos:column="44">m_pollManager<pos:position pos:line="3" pos:column="57"/></name><operator pos:line="3" pos:column="57">-&gt;<pos:position pos:line="3" pos:column="62"/></operator><name pos:line="3" pos:column="59">get_http_stack<pos:position pos:line="3" pos:column="73"/></name></name><argument_list pos:line="3" pos:column="73">()<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="3" pos:column="77">&amp;<pos:position pos:line="3" pos:column="82"/></operator><name><name pos:line="3" pos:column="78">CurlStack<pos:position pos:line="3" pos:column="87"/></name><operator pos:line="3" pos:column="87">::<pos:position pos:line="3" pos:column="89"/></operator><name pos:line="3" pos:column="89">new_object<pos:position pos:line="3" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="102"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">m_httpQueue<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">-&gt;<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="16">slot_factory<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">(<argument><expr><call><name><name pos:line="4" pos:column="29">sigc<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">::<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">mem_fun<pos:position pos:line="4" pos:column="42"/></name></name><argument_list pos:line="4" pos:column="42">(<argument><expr><call><name><name pos:line="4" pos:column="43">m_pollManager<pos:position pos:line="4" pos:column="56"/></name><operator pos:line="4" pos:column="56">-&gt;<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="58">get_http_stack<pos:position pos:line="4" pos:column="72"/></name></name><argument_list pos:line="4" pos:column="72">()<pos:position pos:line="4" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="4" pos:column="76">&amp;<pos:position pos:line="4" pos:column="81"/></operator><name><name pos:line="4" pos:column="77">CurlStack<pos:position pos:line="4" pos:column="86"/></name><operator pos:line="4" pos:column="86">::<pos:position pos:line="4" pos:column="88"/></operator><name pos:line="4" pos:column="88">new_object<pos:position pos:line="4" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="101"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="6" pos:column="3">CurlStack<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">::<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">global_init<pos:position pos:line="6" pos:column="25"/></name></name><argument_list pos:line="6" pos:column="25">()<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

  <comment type="line" pos:line="8" pos:column="3">// Register slots to be called when a download is inserted/erased,</comment>
  <comment type="line" pos:line="9" pos:column="3">// opened or closed.</comment>
  <expr_stmt><expr><call><name><name pos:line="10" pos:column="3">m_downloadList<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">slot_map_insert<pos:position pos:line="10" pos:column="34"/></name></name><argument_list pos:line="10" pos:column="34">()<pos:position pos:line="10" pos:column="36"/></argument_list></call><index pos:line="10" pos:column="36">[<expr><literal type="string" pos:line="10" pos:column="37">"1_connect_network_log"<pos:position pos:line="10" pos:column="60"/></literal></expr>]<pos:position pos:line="10" pos:column="61"/></index>  <operator pos:line="10" pos:column="63">=<pos:position pos:line="10" pos:column="64"/></operator> <call><name><name pos:line="10" pos:column="65">sigc<pos:position pos:line="10" pos:column="69"/></name><operator pos:line="10" pos:column="69">::<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">bind<pos:position pos:line="10" pos:column="75"/></name></name><argument_list pos:line="10" pos:column="75">(<argument><expr><call><name><name pos:line="10" pos:column="76">sigc<pos:position pos:line="10" pos:column="80"/></name><operator pos:line="10" pos:column="80">::<pos:position pos:line="10" pos:column="82"/></operator><name pos:line="10" pos:column="82">ptr_fun<pos:position pos:line="10" pos:column="89"/></name></name><argument_list pos:line="10" pos:column="89">(<argument><expr><operator pos:line="10" pos:column="90">&amp;<pos:position pos:line="10" pos:column="95"/></operator><name pos:line="10" pos:column="91">connect_signal_network_log<pos:position pos:line="10" pos:column="117"/></name></expr></argument>)<pos:position pos:line="10" pos:column="118"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="120">sigc<pos:position pos:line="10" pos:column="124"/></name><operator pos:line="10" pos:column="124">::<pos:position pos:line="10" pos:column="126"/></operator><name pos:line="10" pos:column="126">mem_fun<pos:position pos:line="10" pos:column="133"/></name></name><argument_list pos:line="10" pos:column="133">(<argument><expr><name pos:line="10" pos:column="134">m_logComplete<pos:position pos:line="10" pos:column="147"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="149">&amp;<pos:position pos:line="10" pos:column="154"/></operator><name><name pos:line="10" pos:column="150">Log<pos:position pos:line="10" pos:column="153"/></name><operator pos:line="10" pos:column="153">::<pos:position pos:line="10" pos:column="155"/></operator><name pos:line="10" pos:column="155">push_front<pos:position pos:line="10" pos:column="165"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="166"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="167"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="168"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="11" pos:column="3">m_downloadList<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">slot_map_insert<pos:position pos:line="11" pos:column="34"/></name></name><argument_list pos:line="11" pos:column="34">()<pos:position pos:line="11" pos:column="36"/></argument_list></call><index pos:line="11" pos:column="36">[<expr><literal type="string" pos:line="11" pos:column="37">"1_connect_storage_log"<pos:position pos:line="11" pos:column="60"/></literal></expr>]<pos:position pos:line="11" pos:column="61"/></index>  <operator pos:line="11" pos:column="63">=<pos:position pos:line="11" pos:column="64"/></operator> <call><name><name pos:line="11" pos:column="65">sigc<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">::<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="71">bind<pos:position pos:line="11" pos:column="75"/></name></name><argument_list pos:line="11" pos:column="75">(<argument><expr><call><name><name pos:line="11" pos:column="76">sigc<pos:position pos:line="11" pos:column="80"/></name><operator pos:line="11" pos:column="80">::<pos:position pos:line="11" pos:column="82"/></operator><name pos:line="11" pos:column="82">ptr_fun<pos:position pos:line="11" pos:column="89"/></name></name><argument_list pos:line="11" pos:column="89">(<argument><expr><operator pos:line="11" pos:column="90">&amp;<pos:position pos:line="11" pos:column="95"/></operator><name pos:line="11" pos:column="91">connect_signal_storage_log<pos:position pos:line="11" pos:column="117"/></name></expr></argument>)<pos:position pos:line="11" pos:column="118"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="120">sigc<pos:position pos:line="11" pos:column="124"/></name><operator pos:line="11" pos:column="124">::<pos:position pos:line="11" pos:column="126"/></operator><name pos:line="11" pos:column="126">mem_fun<pos:position pos:line="11" pos:column="133"/></name></name><argument_list pos:line="11" pos:column="133">(<argument><expr><name pos:line="11" pos:column="134">m_logComplete<pos:position pos:line="11" pos:column="147"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="149">&amp;<pos:position pos:line="11" pos:column="154"/></operator><name><name pos:line="11" pos:column="150">Log<pos:position pos:line="11" pos:column="153"/></name><operator pos:line="11" pos:column="153">::<pos:position pos:line="11" pos:column="155"/></operator><name pos:line="11" pos:column="155">push_front<pos:position pos:line="11" pos:column="165"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="166"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="167"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="168"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="12" pos:column="3">m_downloadList<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">slot_map_insert<pos:position pos:line="12" pos:column="34"/></name></name><argument_list pos:line="12" pos:column="34">()<pos:position pos:line="12" pos:column="36"/></argument_list></call><index pos:line="12" pos:column="36">[<expr><literal type="string" pos:line="12" pos:column="37">"1_connect_tracker_dump"<pos:position pos:line="12" pos:column="61"/></literal></expr>]<pos:position pos:line="12" pos:column="62"/></index> <operator pos:line="12" pos:column="63">=<pos:position pos:line="12" pos:column="64"/></operator> <call><name><name pos:line="12" pos:column="65">sigc<pos:position pos:line="12" pos:column="69"/></name><operator pos:line="12" pos:column="69">::<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">bind<pos:position pos:line="12" pos:column="75"/></name></name><argument_list pos:line="12" pos:column="75">(<argument><expr><call><name><name pos:line="12" pos:column="76">sigc<pos:position pos:line="12" pos:column="80"/></name><operator pos:line="12" pos:column="80">::<pos:position pos:line="12" pos:column="82"/></operator><name pos:line="12" pos:column="82">ptr_fun<pos:position pos:line="12" pos:column="89"/></name></name><argument_list pos:line="12" pos:column="89">(<argument><expr><operator pos:line="12" pos:column="90">&amp;<pos:position pos:line="12" pos:column="95"/></operator><name pos:line="12" pos:column="91">connect_signal_tracker_dump<pos:position pos:line="12" pos:column="118"/></name></expr></argument>)<pos:position pos:line="12" pos:column="119"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="121">sigc<pos:position pos:line="12" pos:column="125"/></name><operator pos:line="12" pos:column="125">::<pos:position pos:line="12" pos:column="127"/></operator><name pos:line="12" pos:column="127">ptr_fun<pos:position pos:line="12" pos:column="134"/></name></name><argument_list pos:line="12" pos:column="134">(<argument><expr><operator pos:line="12" pos:column="135">&amp;<pos:position pos:line="12" pos:column="140"/></operator><name pos:line="12" pos:column="136">receive_tracker_dump<pos:position pos:line="12" pos:column="156"/></name></expr></argument>)<pos:position pos:line="12" pos:column="157"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="158"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="159"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">m_downloadList<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">slot_map_erase<pos:position pos:line="14" pos:column="33"/></name></name><argument_list pos:line="14" pos:column="33">()<pos:position pos:line="14" pos:column="35"/></argument_list></call><index pos:line="14" pos:column="35">[<expr><literal type="string" pos:line="14" pos:column="36">"9_delete_tied"<pos:position pos:line="14" pos:column="51"/></literal></expr>]<pos:position pos:line="14" pos:column="52"/></index> <operator pos:line="14" pos:column="53">=<pos:position pos:line="14" pos:column="54"/></operator> <call><name><name pos:line="14" pos:column="55">sigc<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">::<pos:position pos:line="14" pos:column="61"/></operator><name><name pos:line="14" pos:column="61">bind<pos:position pos:line="14" pos:column="65"/></name><argument_list type="generic" pos:line="14" pos:column="65">&lt;<argument><expr><literal type="number" pos:line="14" pos:column="66">0<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>&gt;<pos:position pos:line="14" pos:column="71"/></argument_list></name></name><argument_list pos:line="14" pos:column="68">(<argument><expr><operator pos:line="14" pos:column="69">&amp;<pos:position pos:line="14" pos:column="74"/></operator><name><name pos:line="14" pos:column="70">rpc<pos:position pos:line="14" pos:column="73"/></name><operator pos:line="14" pos:column="73">::<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="75">call_command_d_v_void<pos:position pos:line="14" pos:column="96"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="98">"d.delete_tied"<pos:position pos:line="14" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="115"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="16" pos:column="3">torrent<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">::<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">connection_manager<pos:position pos:line="16" pos:column="30"/></name></name><argument_list pos:line="16" pos:column="30">()<pos:position pos:line="16" pos:column="32"/></argument_list></call><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><call><name pos:line="16" pos:column="34">set_signal_handshake_log<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><call><name><name pos:line="16" pos:column="59">sigc<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">::<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="65">mem_fun<pos:position pos:line="16" pos:column="72"/></name></name><argument_list pos:line="16" pos:column="72">(<argument><expr><name pos:line="16" pos:column="73">this<pos:position pos:line="16" pos:column="77"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="79">&amp;<pos:position pos:line="16" pos:column="84"/></operator><name><name pos:line="16" pos:column="80">Manager<pos:position pos:line="16" pos:column="87"/></name><operator pos:line="16" pos:column="87">::<pos:position pos:line="16" pos:column="89"/></operator><name pos:line="16" pos:column="89">handshake_log<pos:position pos:line="16" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="105"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

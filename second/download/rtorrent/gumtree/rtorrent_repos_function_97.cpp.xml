<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_97.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">apply_xmlrpc_dialect<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name><name pos:line="2" pos:column="28">std<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">string<pos:position pos:line="2" pos:column="39"/></name></name><modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="41">arg<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">value<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">arg<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <literal type="string" pos:line="5" pos:column="14">"i8"<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">value<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name><name pos:line="6" pos:column="13">rpc<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">::<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">XmlRpc<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">::<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">dialect_i8<pos:position pos:line="6" pos:column="36"/></name></name></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt></block></then>
  <elseif pos:line="7" pos:column="3">else <if pos:line="7" pos:column="8">if <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">arg<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <literal type="string" pos:line="7" pos:column="19">"apache"<pos:position pos:line="7" pos:column="27"/></literal></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">value<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name><name pos:line="8" pos:column="13">rpc<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">XmlRpc<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">::<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">dialect_apache<pos:position pos:line="8" pos:column="40"/></name></name></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="9" pos:column="3">else <if pos:line="9" pos:column="8">if <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">arg<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <literal type="string" pos:line="9" pos:column="19">"generic"<pos:position pos:line="9" pos:column="28"/></literal></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">value<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name><name pos:line="10" pos:column="13">rpc<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">::<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">XmlRpc<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">::<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">dialect_generic<pos:position pos:line="10" pos:column="41"/></name></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt></block></then></if></elseif>
  <else pos:line="11" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">value<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">rpc<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">::<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">xmlrpc<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">set_dialect<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">value<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

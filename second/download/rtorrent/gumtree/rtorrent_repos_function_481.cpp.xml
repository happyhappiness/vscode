<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_481.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Scheduler<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">update<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <block pos:line="2" pos:column="21">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_type<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">curActive<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">active<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">()<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <comment type="line" pos:line="4" pos:column="3">//  size_type curInactive = m_view-&gt;size() - curActive;</comment>

  <comment type="line" pos:line="6" pos:column="3">// Hmm... Perhaps we should use a more complex sorting thingie.</comment>
  <expr_stmt><expr><call><name><name pos:line="7" pos:column="3">m_view<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">sort<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">()<pos:position pos:line="7" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>

  <comment type="line" pos:line="9" pos:column="3">// Just a hack for now, need to take into consideration how many</comment>
  <comment type="line" pos:line="10" pos:column="3">// inactive we can switch with.</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_type<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">target<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name pos:line="11" pos:column="22">m_maxActive<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">-<pos:position pos:line="11" pos:column="35"/></operator> <call><name><name pos:line="11" pos:column="36">std<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">::<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">min<pos:position pos:line="11" pos:column="44"/></name></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">m_cycle<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">m_maxActive<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="67"/></decl_stmt>

  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><decl><type><name><name pos:line="13" pos:column="8">View<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">::<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">iterator<pos:position pos:line="13" pos:column="22"/></name></name></type> <name pos:line="13" pos:column="23">itr<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><call><name><name pos:line="13" pos:column="29">m_view<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">begin_visible<pos:position pos:line="13" pos:column="50"/></name></name><argument_list pos:line="13" pos:column="50">()<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="54">last<pos:position pos:line="13" pos:column="58"/></name> <init pos:line="13" pos:column="59">= <expr><call><name><name pos:line="13" pos:column="61">m_view<pos:position pos:line="13" pos:column="67"/></name><operator pos:line="13" pos:column="67">-&gt;<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="69">end_visible<pos:position pos:line="13" pos:column="80"/></name></name><argument_list pos:line="13" pos:column="80">()<pos:position pos:line="13" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="83"/></init> <condition><expr><name pos:line="13" pos:column="84">curActive<pos:position pos:line="13" pos:column="93"/></name> <operator pos:line="13" pos:column="94">&gt;<pos:position pos:line="13" pos:column="98"/></operator> <name pos:line="13" pos:column="96">target<pos:position pos:line="13" pos:column="102"/></name></expr>;<pos:position pos:line="13" pos:column="103"/></condition> <incr><expr><operator pos:line="13" pos:column="104">++<pos:position pos:line="13" pos:column="106"/></operator><name pos:line="13" pos:column="106">itr<pos:position pos:line="13" pos:column="109"/></name></expr></incr>)<pos:position pos:line="13" pos:column="110"/></control> <block pos:line="13" pos:column="111">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">itr<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">last<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
      <block type="pseudo"><throw pos:line="15" pos:column="7">throw <expr><call><name><name pos:line="15" pos:column="13">torrent<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">::<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">internal_error<pos:position pos:line="15" pos:column="36"/></name></name><argument_list pos:line="15" pos:column="36">(<argument><expr><literal type="string" pos:line="15" pos:column="37">"Scheduler::update() loop bork."<pos:position pos:line="15" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></throw></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><operator pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">itr<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">)<pos:position pos:line="17" pos:column="15"/></operator><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">is_active<pos:position pos:line="17" pos:column="26"/></name></name><argument_list pos:line="17" pos:column="26">()<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
      <expr_stmt><expr><call><name><name pos:line="18" pos:column="7">m_downloadList<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">pause<pos:position pos:line="18" pos:column="28"/></name></name><argument_list pos:line="18" pos:column="28">(<argument><expr><operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">itr<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="19" pos:column="7">--<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">curActive<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>      
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name><name pos:line="23" pos:column="3">m_view<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">sort<pos:position pos:line="23" pos:column="15"/></name></name><argument_list pos:line="23" pos:column="15">()<pos:position pos:line="23" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name><name pos:line="25" pos:column="8">View<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">::<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">iterator<pos:position pos:line="25" pos:column="22"/></name></name></type> <name pos:line="25" pos:column="23">itr<pos:position pos:line="25" pos:column="26"/></name> <init pos:line="25" pos:column="27">= <expr><call><name><name pos:line="25" pos:column="29">m_view<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">begin_visible<pos:position pos:line="25" pos:column="50"/></name></name><argument_list pos:line="25" pos:column="50">()<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="25" pos:column="54">last<pos:position pos:line="25" pos:column="58"/></name> <init pos:line="25" pos:column="59">= <expr><call><name><name pos:line="25" pos:column="61">m_view<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">-&gt;<pos:position pos:line="25" pos:column="72"/></operator><name pos:line="25" pos:column="69">end_visible<pos:position pos:line="25" pos:column="80"/></name></name><argument_list pos:line="25" pos:column="80">()<pos:position pos:line="25" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="83"/></init> <condition><expr><name pos:line="25" pos:column="84">curActive<pos:position pos:line="25" pos:column="93"/></name> <operator pos:line="25" pos:column="94">&lt;<pos:position pos:line="25" pos:column="98"/></operator> <name pos:line="25" pos:column="96">m_maxActive<pos:position pos:line="25" pos:column="107"/></name></expr>;<pos:position pos:line="25" pos:column="108"/></condition> <incr><expr><operator pos:line="25" pos:column="109">++<pos:position pos:line="25" pos:column="111"/></operator><name pos:line="25" pos:column="111">itr<pos:position pos:line="25" pos:column="114"/></name></expr></incr>)<pos:position pos:line="25" pos:column="115"/></control> <block pos:line="25" pos:column="116">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">itr<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">last<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
      <block type="pseudo"><throw pos:line="27" pos:column="7">throw <expr><call><name><name pos:line="27" pos:column="13">torrent<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">::<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">internal_error<pos:position pos:line="27" pos:column="36"/></name></name><argument_list pos:line="27" pos:column="36">(<argument><expr><literal type="string" pos:line="27" pos:column="37">"Scheduler::update() loop bork."<pos:position pos:line="27" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></throw></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><call><name><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><operator pos:line="29" pos:column="11">*<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">itr<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">is_active<pos:position pos:line="29" pos:column="27"/></name></name><argument_list pos:line="29" pos:column="27">()<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
      <expr_stmt><expr><call><name><name pos:line="30" pos:column="7">m_downloadList<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">start_try<pos:position pos:line="30" pos:column="32"/></name></name><argument_list pos:line="30" pos:column="32">(<argument><expr><operator pos:line="30" pos:column="33">*<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">itr<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="31" pos:column="7">++<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">curActive<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>      
  }<pos:position pos:line="33" pos:column="4"/></block></for>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_202.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowDownloadList<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">redraw<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list> <block pos:line="2" pos:column="30">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">m_slotSchedule<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">this<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">cachedTime<pos:position pos:line="3" pos:column="35"/></name> <operator pos:line="3" pos:column="36">+<pos:position pos:line="3" pos:column="37"/></operator> <call><name><name pos:line="3" pos:column="38">rak<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">::<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="43">timer<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">::<pos:position pos:line="3" pos:column="50"/></operator><name pos:line="3" pos:column="50">from_seconds<pos:position pos:line="3" pos:column="62"/></name></name><argument_list pos:line="3" pos:column="62">(<argument><expr><literal type="number" pos:line="3" pos:column="63">1<pos:position pos:line="3" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></call><operator pos:line="3" pos:column="65">)<pos:position pos:line="3" pos:column="66"/></operator><operator pos:line="3" pos:column="66">.<pos:position pos:line="3" pos:column="67"/></operator><call><name pos:line="3" pos:column="67">round_seconds<pos:position pos:line="3" pos:column="80"/></name><argument_list pos:line="3" pos:column="80">()<pos:position pos:line="3" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="84"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="5" pos:column="3">m_canvas<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">erase<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name><name pos:line="7" pos:column="7">m_list<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">base<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">empty<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call> <operator pos:line="7" pos:column="30">||<pos:position pos:line="7" pos:column="32"/></operator> <call><name><name pos:line="7" pos:column="33">m_canvas<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">get_width<pos:position pos:line="7" pos:column="52"/></name></name><argument_list pos:line="7" pos:column="52">()<pos:position pos:line="7" pos:column="54"/></argument_list></call> <operator pos:line="7" pos:column="55">&lt;<pos:position pos:line="7" pos:column="59"/></operator> <literal type="number" pos:line="7" pos:column="57">5<pos:position pos:line="7" pos:column="58"/></literal></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <typedef pos:line="10" pos:column="3">typedef <type><name><name pos:line="10" pos:column="11">std<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name><name pos:line="10" pos:column="16">pair<pos:position pos:line="10" pos:column="20"/></name><argument_list type="generic" pos:line="10" pos:column="20">&lt;<argument><expr><name><name pos:line="10" pos:column="21">DList<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">::<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">iterator<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="38">DList<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">::<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">iterator<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="57"/></argument_list></name></name></type> <name pos:line="10" pos:column="55">Range<pos:position pos:line="10" pos:column="60"/></name>;<pos:position pos:line="10" pos:column="61"/></typedef>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">Range<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">range<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><call><name><name pos:line="12" pos:column="17">rak<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">::<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">advance_bidirectional<pos:position pos:line="12" pos:column="43"/></name></name><argument_list pos:line="12" pos:column="43">(<argument><expr><call><name><name pos:line="12" pos:column="44">m_list<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">begin<pos:position pos:line="12" pos:column="57"/></name></name><argument_list pos:line="12" pos:column="57">()<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr></argument>,
					   <argument><expr><ternary><condition><expr><call><name><name pos:line="13" pos:column="44">m_list<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">get_focus<pos:position pos:line="13" pos:column="61"/></name></name><argument_list pos:line="13" pos:column="61">()<pos:position pos:line="13" pos:column="63"/></argument_list></call> <operator pos:line="13" pos:column="64">!=<pos:position pos:line="13" pos:column="66"/></operator> <call><name><name pos:line="13" pos:column="67">m_list<pos:position pos:line="13" pos:column="73"/></name><operator pos:line="13" pos:column="73">-&gt;<pos:position pos:line="13" pos:column="78"/></operator><name pos:line="13" pos:column="75">end<pos:position pos:line="13" pos:column="78"/></name></name><argument_list pos:line="13" pos:column="78">()<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr> ?<pos:position pos:line="13" pos:column="82"/></condition><then pos:line="13" pos:column="82"> <expr><call><name><name pos:line="13" pos:column="83">m_list<pos:position pos:line="13" pos:column="89"/></name><operator pos:line="13" pos:column="89">-&gt;<pos:position pos:line="13" pos:column="94"/></operator><name pos:line="13" pos:column="91">get_focus<pos:position pos:line="13" pos:column="100"/></name></name><argument_list pos:line="13" pos:column="100">()<pos:position pos:line="13" pos:column="102"/></argument_list></call></expr> <pos:position pos:line="13" pos:column="103"/></then><else pos:line="13" pos:column="103">: <expr><call><name><name pos:line="13" pos:column="105">m_list<pos:position pos:line="13" pos:column="111"/></name><operator pos:line="13" pos:column="111">-&gt;<pos:position pos:line="13" pos:column="116"/></operator><name pos:line="13" pos:column="113">begin<pos:position pos:line="13" pos:column="118"/></name></name><argument_list pos:line="13" pos:column="118">()<pos:position pos:line="13" pos:column="120"/></argument_list></call></expr></else></ternary></expr></argument>,
					   <argument><expr><call><name><name pos:line="14" pos:column="44">m_list<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">end<pos:position pos:line="14" pos:column="55"/></name></name><argument_list pos:line="14" pos:column="55">()<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr></argument>,
					   <argument><expr><call><name><name pos:line="15" pos:column="44">m_canvas<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">get_height<pos:position pos:line="15" pos:column="64"/></name></name><argument_list pos:line="15" pos:column="64">()<pos:position pos:line="15" pos:column="66"/></argument_list></call> <operator pos:line="15" pos:column="67">/<pos:position pos:line="15" pos:column="68"/></operator> <literal type="number" pos:line="15" pos:column="69">3<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="72"/></decl_stmt>

  <comment type="line" pos:line="17" pos:column="3">// Make sure we properly fill out the last lines so it looks like</comment>
  <comment type="line" pos:line="18" pos:column="3">// there are more torrents, yet don't hide it if we got the last one</comment>
  <comment type="line" pos:line="19" pos:column="3">// in focus.</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name><name pos:line="20" pos:column="7">range<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">second<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <call><name><name pos:line="20" pos:column="23">m_list<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">end<pos:position pos:line="20" pos:column="34"/></name></name><argument_list pos:line="20" pos:column="34">()<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="5">++<pos:position pos:line="21" pos:column="7"/></operator><name><name pos:line="21" pos:column="7">range<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">second<pos:position pos:line="21" pos:column="19"/></name></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt></block></then></if>

  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">pos<pos:position pos:line="23" pos:column="10"/></name> <init pos:line="23" pos:column="11">= <expr><literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="15"/></decl_stmt>

  <while pos:line="25" pos:column="3">while <condition pos:line="25" pos:column="9">(<expr><name><name pos:line="25" pos:column="10">range<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">first<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">!=<pos:position pos:line="25" pos:column="24"/></operator> <name><name pos:line="25" pos:column="25">range<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">.<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="31">second<pos:position pos:line="25" pos:column="37"/></name></name></expr>)<pos:position pos:line="25" pos:column="38"/></condition> <block pos:line="25" pos:column="39">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name></type> <name><name pos:line="26" pos:column="10">buffer<pos:position pos:line="26" pos:column="16"/></name><index pos:line="26" pos:column="16">[<expr><call><name><name pos:line="26" pos:column="17">m_canvas<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">get_width<pos:position pos:line="26" pos:column="36"/></name></name><argument_list pos:line="26" pos:column="36">()<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>]<pos:position pos:line="26" pos:column="39"/></index></name></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">char<pos:position pos:line="27" pos:column="9"/></name><modifier pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></modifier></type> <name pos:line="27" pos:column="11">position<pos:position pos:line="27" pos:column="19"/></name></decl>;<pos:position pos:line="27" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">char<pos:position pos:line="28" pos:column="9"/></name><modifier pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></modifier></type> <name pos:line="28" pos:column="11">last<pos:position pos:line="28" pos:column="15"/></name> <init pos:line="28" pos:column="16">= <expr><name pos:line="28" pos:column="18">buffer<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">+<pos:position pos:line="28" pos:column="26"/></operator> <call><name><name pos:line="28" pos:column="27">m_canvas<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">get_width<pos:position pos:line="28" pos:column="46"/></name></name><argument_list pos:line="28" pos:column="46">()<pos:position pos:line="28" pos:column="48"/></argument_list></call> <operator pos:line="28" pos:column="49">-<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="51">2<pos:position pos:line="28" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="53"/></decl_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">position<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">print_download_title<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><name pos:line="30" pos:column="37">buffer<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">last<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="51">*<pos:position pos:line="30" pos:column="52"/></operator><name><name pos:line="30" pos:column="52">range<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">.<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="58">first<pos:position pos:line="30" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">m_canvas<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">print<pos:position pos:line="31" pos:column="20"/></name></name><argument_list pos:line="31" pos:column="20">(<argument><expr><literal type="number" pos:line="31" pos:column="21">0<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">pos<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">++<pos:position pos:line="31" pos:column="29"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"%c %s"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="31" pos:column="40">range<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">first<pos:position pos:line="31" pos:column="51"/></name></name> <operator pos:line="31" pos:column="52">==<pos:position pos:line="31" pos:column="54"/></operator> <call><name><name pos:line="31" pos:column="55">m_list<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">-&gt;<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="63">get_focus<pos:position pos:line="31" pos:column="72"/></name></name><argument_list pos:line="31" pos:column="72">()<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr> ?<pos:position pos:line="31" pos:column="76"/></condition><then pos:line="31" pos:column="76"> <expr><literal type="char" pos:line="31" pos:column="77">'*'<pos:position pos:line="31" pos:column="80"/></literal></expr> <pos:position pos:line="31" pos:column="81"/></then><else pos:line="31" pos:column="81">: <expr><literal type="char" pos:line="31" pos:column="83">' '<pos:position pos:line="31" pos:column="86"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="31" pos:column="88">buffer<pos:position pos:line="31" pos:column="94"/></name></expr></argument>)<pos:position pos:line="31" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="96"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="33" pos:column="5">position<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">print_download_info<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">buffer<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">last<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="50">*<pos:position pos:line="33" pos:column="51"/></operator><name><name pos:line="33" pos:column="51">range<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">.<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">first<pos:position pos:line="33" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">m_canvas<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">print<pos:position pos:line="34" pos:column="20"/></name></name><argument_list pos:line="34" pos:column="20">(<argument><expr><literal type="number" pos:line="34" pos:column="21">0<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">pos<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">++<pos:position pos:line="34" pos:column="29"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="31">"%c %s"<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="34" pos:column="40">range<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">.<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">first<pos:position pos:line="34" pos:column="51"/></name></name> <operator pos:line="34" pos:column="52">==<pos:position pos:line="34" pos:column="54"/></operator> <call><name><name pos:line="34" pos:column="55">m_list<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">-&gt;<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="63">get_focus<pos:position pos:line="34" pos:column="72"/></name></name><argument_list pos:line="34" pos:column="72">()<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr> ?<pos:position pos:line="34" pos:column="76"/></condition><then pos:line="34" pos:column="76"> <expr><literal type="char" pos:line="34" pos:column="77">'*'<pos:position pos:line="34" pos:column="80"/></literal></expr> <pos:position pos:line="34" pos:column="81"/></then><else pos:line="34" pos:column="81">: <expr><literal type="char" pos:line="34" pos:column="83">' '<pos:position pos:line="34" pos:column="86"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="34" pos:column="88">buffer<pos:position pos:line="34" pos:column="94"/></name></expr></argument>)<pos:position pos:line="34" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="96"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">position<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">print_download_status<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">buffer<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">last<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="52">*<pos:position pos:line="36" pos:column="53"/></operator><name><name pos:line="36" pos:column="53">range<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">.<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="59">first<pos:position pos:line="36" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">m_canvas<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">print<pos:position pos:line="37" pos:column="20"/></name></name><argument_list pos:line="37" pos:column="20">(<argument><expr><literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="24">pos<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">++<pos:position pos:line="37" pos:column="29"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="31">"%c %s"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="37" pos:column="40">range<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">.<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="46">first<pos:position pos:line="37" pos:column="51"/></name></name> <operator pos:line="37" pos:column="52">==<pos:position pos:line="37" pos:column="54"/></operator> <call><name><name pos:line="37" pos:column="55">m_list<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">get_focus<pos:position pos:line="37" pos:column="72"/></name></name><argument_list pos:line="37" pos:column="72">()<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr> ?<pos:position pos:line="37" pos:column="76"/></condition><then pos:line="37" pos:column="76"> <expr><literal type="char" pos:line="37" pos:column="77">'*'<pos:position pos:line="37" pos:column="80"/></literal></expr> <pos:position pos:line="37" pos:column="81"/></then><else pos:line="37" pos:column="81">: <expr><literal type="char" pos:line="37" pos:column="83">' '<pos:position pos:line="37" pos:column="86"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="37" pos:column="88">buffer<pos:position pos:line="37" pos:column="94"/></name></expr></argument>)<pos:position pos:line="37" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="96"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="39" pos:column="5">++<pos:position pos:line="39" pos:column="7"/></operator><name><name pos:line="39" pos:column="7">range<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">.<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">first<pos:position pos:line="39" pos:column="18"/></name></name></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></while>    
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

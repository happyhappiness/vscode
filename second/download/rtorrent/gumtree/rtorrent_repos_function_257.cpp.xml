<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_257.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">torrent<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">Object<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">CommandVariable<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">set_value<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">Command<pos:position pos:line="2" pos:column="35"/></name><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">rawCommand<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name><name pos:line="2" pos:column="55">torrent<pos:position pos:line="2" pos:column="62"/></name><operator pos:line="2" pos:column="62">::<pos:position pos:line="2" pos:column="64"/></operator><name pos:line="2" pos:column="64">Object<pos:position pos:line="2" pos:column="70"/></name></name><modifier pos:line="2" pos:column="70">&amp;<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="72">rawArgs<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list> <block pos:line="2" pos:column="81">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CommandVariable<pos:position pos:line="3" pos:column="18"/></name><modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type> <name pos:line="3" pos:column="20">variable<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><cast type="static" pos:line="3" pos:column="31">static_cast<argument_list type="generic" pos:line="3" pos:column="42">&lt;<argument><expr><name pos:line="3" pos:column="43">CommandVariable<pos:position pos:line="3" pos:column="58"/></name><operator pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></operator></expr></argument>&gt;<pos:position pos:line="3" pos:column="63"/></argument_list><argument_list pos:line="3" pos:column="60">(<argument><expr><name pos:line="3" pos:column="61">rawCommand<pos:position pos:line="3" pos:column="71"/></name></expr></argument>)<pos:position pos:line="3" pos:column="72"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="3" pos:column="73"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name><name pos:line="5" pos:column="9">torrent<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">::<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">Object<pos:position pos:line="5" pos:column="24"/></name></name><modifier pos:line="5" pos:column="24">&amp;<pos:position pos:line="5" pos:column="29"/></modifier></type> <name pos:line="5" pos:column="26">arg<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><call><name pos:line="5" pos:column="32">convert_to_single_argument<pos:position pos:line="5" pos:column="58"/></name><argument_list pos:line="5" pos:column="58">(<argument><expr><name pos:line="5" pos:column="59">rawArgs<pos:position pos:line="5" pos:column="66"/></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>

  <switch pos:line="7" pos:column="3">switch <condition pos:line="7" pos:column="10">(<expr><call><name><name pos:line="7" pos:column="11">arg<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">type<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="22"/></condition> <block pos:line="7" pos:column="23">{
  <case pos:line="8" pos:column="3">case <expr><name><name pos:line="8" pos:column="8">torrent<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">::<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">Object<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">::<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">TYPE_NONE<pos:position pos:line="8" pos:column="34"/></name></name></expr>:<pos:position pos:line="8" pos:column="35"/></case>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">variable<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">m_variable<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">int64_t<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">)<pos:position pos:line="9" pos:column="37"/></operator><literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
    <break pos:line="10" pos:column="5">break;<pos:position pos:line="10" pos:column="11"/></break>

  <case pos:line="12" pos:column="3">case <expr><name><name pos:line="12" pos:column="8">torrent<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">Object<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">::<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">TYPE_VALUE<pos:position pos:line="12" pos:column="35"/></name></name></expr>:<pos:position pos:line="12" pos:column="36"/></case>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">variable<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">m_variable<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">arg<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
    <break pos:line="14" pos:column="5">break;<pos:position pos:line="14" pos:column="11"/></break>

  <case pos:line="16" pos:column="3">case <expr><name><name pos:line="16" pos:column="8">torrent<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">::<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">Object<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">::<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">TYPE_STRING<pos:position pos:line="16" pos:column="36"/></name></name></expr>:<pos:position pos:line="16" pos:column="37"/></case>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int64_t<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">value<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">parse_whole_value<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><call><name><name pos:line="18" pos:column="23">arg<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">as_string<pos:position pos:line="18" pos:column="36"/></name></name><argument_list pos:line="18" pos:column="36">()<pos:position pos:line="18" pos:column="38"/></argument_list></call><operator pos:line="18" pos:column="38">.<pos:position pos:line="18" pos:column="39"/></operator><call><name pos:line="18" pos:column="39">c_str<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">()<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="18" pos:column="48">&amp;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="49">value<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="56">0<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="59">1<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">variable<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">m_variable<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">value<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
    <break pos:line="21" pos:column="5">break;<pos:position pos:line="21" pos:column="11"/></break>

  <default pos:line="23" pos:column="3">default:<pos:position pos:line="23" pos:column="11"/></default>
    <throw pos:line="24" pos:column="5">throw <expr><call><name><name pos:line="24" pos:column="11">torrent<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">::<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">input_error<pos:position pos:line="24" pos:column="31"/></name></name><argument_list pos:line="24" pos:column="31">(<argument><expr><literal type="string" pos:line="24" pos:column="32">"CommandValue unsupported type restriction."<pos:position pos:line="24" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></throw>
  }<pos:position pos:line="25" pos:column="4"/></block></switch>

  <return pos:line="27" pos:column="3">return <expr><name><name pos:line="27" pos:column="10">variable<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">m_variable<pos:position pos:line="27" pos:column="30"/></name></name></expr>;<pos:position pos:line="27" pos:column="31"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

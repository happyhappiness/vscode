<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_749.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SocketFd<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">set_priority<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">priority_type<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">p<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">check_valid<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">()<pos:position pos:line="3" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="17"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">opt<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><name pos:line="4" pos:column="13">p<pos:position pos:line="4" pos:column="14"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <return pos:line="6" pos:column="3">return <expr><call><name pos:line="6" pos:column="10">setsockopt<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">m_fd<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">IPPROTO_IP<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">IP_TOS<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="47">&amp;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="48">opt<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="53">sizeof<argument_list pos:line="6" pos:column="59">(<argument><expr><name pos:line="6" pos:column="60">opt<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call> <operator pos:line="6" pos:column="66">==<pos:position pos:line="6" pos:column="68"/></operator> <literal type="number" pos:line="6" pos:column="69">0<pos:position pos:line="6" pos:column="70"/></literal></expr>;<pos:position pos:line="6" pos:column="71"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_193.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">CommandMap<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">iterator<pos:position pos:line="1" pos:column="21"/></name></name></type>
<name><name pos:line="2" pos:column="1">CommandMap<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">insert<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">key_type<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">key<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">Command<pos:position pos:line="2" pos:column="41"/></name><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">variable<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">flags<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="64">const<pos:position pos:line="2" pos:column="69"/></specifier> <name pos:line="2" pos:column="70">char<pos:position pos:line="2" pos:column="74"/></name><modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="76">parm<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="82">const<pos:position pos:line="2" pos:column="87"/></specifier> <name pos:line="2" pos:column="88">char<pos:position pos:line="2" pos:column="92"/></name><modifier pos:line="2" pos:column="92">*<pos:position pos:line="2" pos:column="93"/></modifier></type> <name pos:line="2" pos:column="94">doc<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list> <block pos:line="2" pos:column="99">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">iterator<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">itr<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><call><name><name pos:line="3" pos:column="18">base_type<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">::<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">find<pos:position pos:line="3" pos:column="33"/></name></name><argument_list pos:line="3" pos:column="33">(<argument><expr><name pos:line="3" pos:column="34">key<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">itr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">!=<pos:position pos:line="5" pos:column="13"/></operator> <call><name><name pos:line="5" pos:column="14">base_type<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">::<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">end<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">()<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">internal_error<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><literal type="string" pos:line="6" pos:column="35">"CommandMap::insert(...) tried to insert an already existing key."<pos:position pos:line="6" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="103"/></throw></block></then></if>

  <return pos:line="8" pos:column="3">return <expr><call><name><name pos:line="8" pos:column="10">base_type<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">::<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">insert<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">itr<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="33">value_type<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name pos:line="8" pos:column="44">key<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="49">command_map_data_type<pos:position pos:line="8" pos:column="70"/></name><argument_list pos:line="8" pos:column="70">(<argument><expr><name pos:line="8" pos:column="71">variable<pos:position pos:line="8" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="81">flags<pos:position pos:line="8" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="88">parm<pos:position pos:line="8" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="94">doc<pos:position pos:line="8" pos:column="97"/></name></expr></argument>)<pos:position pos:line="8" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="101"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

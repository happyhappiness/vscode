<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_362.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementPeerList<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">receive_peer_disconnected<pos:position pos:line="2" pos:column="43"/></name></name><parameter_list pos:line="2" pos:column="43">(<parameter><decl><type><name><name pos:line="2" pos:column="44">torrent<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">Peer<pos:position pos:line="2" pos:column="57"/></name></name></type> <name pos:line="2" pos:column="58">p<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list> <block pos:line="2" pos:column="61">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">PList<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">iterator<pos:position pos:line="3" pos:column="18"/></name></name></type> <name pos:line="3" pos:column="19">itr<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name><name pos:line="3" pos:column="25">std<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">::<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">find<pos:position pos:line="3" pos:column="34"/></name></name><argument_list pos:line="3" pos:column="34">(<argument><expr><call><name><name pos:line="3" pos:column="35">m_list<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">.<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">begin<pos:position pos:line="3" pos:column="47"/></name></name><argument_list pos:line="3" pos:column="47">()<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3" pos:column="51">m_list<pos:position pos:line="3" pos:column="57"/></name><operator pos:line="3" pos:column="57">.<pos:position pos:line="3" pos:column="58"/></operator><name pos:line="3" pos:column="58">end<pos:position pos:line="3" pos:column="61"/></name></name><argument_list pos:line="3" pos:column="61">()<pos:position pos:line="3" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="3" pos:column="65">p<pos:position pos:line="3" pos:column="66"/></name></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="68"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">itr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <call><name><name pos:line="5" pos:column="14">m_list<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">.<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">end<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">internal_error<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><literal type="string" pos:line="6" pos:column="35">"ElementPeerList::receive_peer_disconnected(...) itr == m_list.end()."<pos:position pos:line="6" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="107"/></throw></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">itr<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">m_listItr<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">m_listItr<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name><name pos:line="9" pos:column="17">m_list<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">erase<pos:position pos:line="9" pos:column="29"/></name></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">itr<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then>
  <else pos:line="10" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="11" pos:column="5">m_list<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">erase<pos:position pos:line="11" pos:column="17"/></name></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">itr<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">update_itr<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">()<pos:position pos:line="13" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

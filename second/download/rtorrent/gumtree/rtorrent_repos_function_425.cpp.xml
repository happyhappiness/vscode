<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_425.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">ViewManager<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">filter_list<pos:position pos:line="1" pos:column="32"/></name></name></type>
<name><name pos:line="2" pos:column="1">ViewManager<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">build_filter_list<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">filter_args<pos:position pos:line="2" pos:column="49"/></name><modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="51">args<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <block pos:line="2" pos:column="57">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">View<pos:position pos:line="3" pos:column="7"/></name><operator pos:line="3" pos:column="7">::<pos:position pos:line="3" pos:column="9"/></operator><name pos:line="3" pos:column="9">filter_list<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">filterList<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">filterList<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">.<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">reserve<pos:position pos:line="4" pos:column="21"/></name></name><argument_list pos:line="4" pos:column="21">(<argument><expr><call><name><name pos:line="4" pos:column="22">args<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">size<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name><name pos:line="6" pos:column="8">filter_args<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">::<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">const_iterator<pos:position pos:line="6" pos:column="35"/></name></name></type> <name pos:line="6" pos:column="36">itr<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><call><name><name pos:line="6" pos:column="42">args<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">.<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">begin<pos:position pos:line="6" pos:column="52"/></name></name><argument_list pos:line="6" pos:column="52">()<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="56">last<pos:position pos:line="6" pos:column="60"/></name> <init pos:line="6" pos:column="61">= <expr><call><name><name pos:line="6" pos:column="63">args<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">.<pos:position pos:line="6" pos:column="68"/></operator><name pos:line="6" pos:column="68">end<pos:position pos:line="6" pos:column="71"/></name></name><argument_list pos:line="6" pos:column="71">()<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></init> <condition><expr><name pos:line="6" pos:column="75">itr<pos:position pos:line="6" pos:column="78"/></name> <operator pos:line="6" pos:column="79">!=<pos:position pos:line="6" pos:column="81"/></operator> <name pos:line="6" pos:column="82">last<pos:position pos:line="6" pos:column="86"/></name></expr>;<pos:position pos:line="6" pos:column="87"/></condition> <incr><expr><operator pos:line="6" pos:column="88">++<pos:position pos:line="6" pos:column="90"/></operator><name pos:line="6" pos:column="90">itr<pos:position pos:line="6" pos:column="93"/></name></expr></incr>)<pos:position pos:line="6" pos:column="94"/></control> <block pos:line="6" pos:column="95">{
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">filter_map<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">::<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">const_iterator<pos:position pos:line="7" pos:column="31"/></name></name></type> <name pos:line="7" pos:column="32">filterItr<pos:position pos:line="7" pos:column="41"/></name> <init pos:line="7" pos:column="42">= <expr><call><name><name pos:line="7" pos:column="44">m_filter<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">.<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">find<pos:position pos:line="7" pos:column="57"/></name></name><argument_list pos:line="7" pos:column="57">(<argument><expr><call><name><name pos:line="7" pos:column="58">itr<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">-&gt;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="63">c_str<pos:position pos:line="7" pos:column="68"/></name></name><argument_list pos:line="7" pos:column="68">()<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="72"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">filterItr<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <call><name><name pos:line="9" pos:column="22">m_filter<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">.<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">end<pos:position pos:line="9" pos:column="34"/></name></name><argument_list pos:line="9" pos:column="34">()<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
      <block type="pseudo"><throw pos:line="10" pos:column="7">throw <expr><call><name><name pos:line="10" pos:column="13">torrent<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">input_error<pos:position pos:line="10" pos:column="33"/></name></name><argument_list pos:line="10" pos:column="33">(<argument><expr><literal type="string" pos:line="10" pos:column="34">"Invalid filtering identifier."<pos:position pos:line="10" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></throw></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">filterList<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">push_back<pos:position pos:line="12" pos:column="25"/></name></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name><name pos:line="12" pos:column="26">filterItr<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">second<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></for>

  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">filterList<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

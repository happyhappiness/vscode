<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_573.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Manager<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">initialize_first<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list> <block pos:line="2" pos:column="29">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">m_pollManager<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">=<pos:position pos:line="3" pos:column="23"/></operator> <call><name><name pos:line="3" pos:column="24">PollManagerEPoll<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">::<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">create<pos:position pos:line="3" pos:column="48"/></name></name><argument_list pos:line="3" pos:column="48">(<argument><expr><call><name pos:line="3" pos:column="49">sysconf<pos:position pos:line="3" pos:column="56"/></name><argument_list pos:line="3" pos:column="56">(<argument><expr><name pos:line="3" pos:column="57">_SC_OPEN_MAX<pos:position pos:line="3" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="71"/></argument_list></call><operator pos:line="3" pos:column="71">)<pos:position pos:line="3" pos:column="72"/></operator> <operator pos:line="3" pos:column="73">!=<pos:position pos:line="3" pos:column="75"/></operator> <name pos:line="3" pos:column="76">NULL<pos:position pos:line="3" pos:column="80"/></name></expr>)<pos:position pos:line="3" pos:column="81"/></condition><then pos:line="3" pos:column="81">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="4" pos:column="5">m_logImportant<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">.<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">push_front<pos:position pos:line="4" pos:column="30"/></name></name><argument_list pos:line="4" pos:column="30">(<argument><expr><literal type="string" pos:line="4" pos:column="31">"Using 'epoll' based polling."<pos:position pos:line="4" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="63"/></expr_stmt></block></then>

  <elseif pos:line="6" pos:column="3">else <if pos:line="6" pos:column="8">if <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">m_pollManager<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <call><name><name pos:line="6" pos:column="29">PollManagerKQueue<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">::<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">create<pos:position pos:line="6" pos:column="54"/></name></name><argument_list pos:line="6" pos:column="54">(<argument><expr><call><name pos:line="6" pos:column="55">sysconf<pos:position pos:line="6" pos:column="62"/></name><argument_list pos:line="6" pos:column="62">(<argument><expr><name pos:line="6" pos:column="63">_SC_OPEN_MAX<pos:position pos:line="6" pos:column="75"/></name></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="77"/></argument_list></call><operator pos:line="6" pos:column="77">)<pos:position pos:line="6" pos:column="78"/></operator> <operator pos:line="6" pos:column="79">!=<pos:position pos:line="6" pos:column="81"/></operator> <name pos:line="6" pos:column="82">NULL<pos:position pos:line="6" pos:column="86"/></name></expr>)<pos:position pos:line="6" pos:column="87"/></condition><then pos:line="6" pos:column="87">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="5">m_logImportant<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">push_front<pos:position pos:line="7" pos:column="30"/></name></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"Using 'kqueue' based polling."<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt></block></then></if></elseif>

  <elseif pos:line="9" pos:column="3">else <if pos:line="9" pos:column="8">if <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">m_pollManager<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <call><name><name pos:line="9" pos:column="29">PollManagerSelect<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">::<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">create<pos:position pos:line="9" pos:column="54"/></name></name><argument_list pos:line="9" pos:column="54">(<argument><expr><call><name pos:line="9" pos:column="55">sysconf<pos:position pos:line="9" pos:column="62"/></name><argument_list pos:line="9" pos:column="62">(<argument><expr><name pos:line="9" pos:column="63">_SC_OPEN_MAX<pos:position pos:line="9" pos:column="75"/></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call><operator pos:line="9" pos:column="77">)<pos:position pos:line="9" pos:column="78"/></operator> <operator pos:line="9" pos:column="79">!=<pos:position pos:line="9" pos:column="81"/></operator> <name pos:line="9" pos:column="82">NULL<pos:position pos:line="9" pos:column="86"/></name></expr>)<pos:position pos:line="9" pos:column="87"/></condition><then pos:line="9" pos:column="87">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="5">m_logImportant<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">push_front<pos:position pos:line="10" pos:column="30"/></name></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"Using 'select' based polling."<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt></block></then></if></elseif>

  <else pos:line="12" pos:column="3">else
    <block type="pseudo"><throw pos:line="13" pos:column="5">throw <expr><call><name><name pos:line="13" pos:column="11">std<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">::<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">runtime_error<pos:position pos:line="13" pos:column="29"/></name></name><argument_list pos:line="13" pos:column="29">(<argument><expr><literal type="string" pos:line="13" pos:column="30">"Could not create any PollManager."<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></throw></block></else></if>

  <comment type="line" pos:line="15" pos:column="3">// Need to initialize this before parseing options.</comment>
  <expr_stmt><expr><call><name><name pos:line="16" pos:column="3">torrent<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">::<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">initialize<pos:position pos:line="16" pos:column="22"/></name></name><argument_list pos:line="16" pos:column="22">(<argument><expr><call><name><name pos:line="16" pos:column="23">m_pollManager<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">get_torrent_poll<pos:position pos:line="16" pos:column="54"/></name></name><argument_list pos:line="16" pos:column="54">()<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_672.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowHttpQueue<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">cleanup_list<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list> <block pos:line="2" pos:column="33">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name><name pos:line="3" pos:column="8">Container<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">::<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="19">iterator<pos:position pos:line="3" pos:column="27"/></name></name></type> <name pos:line="3" pos:column="28">itr<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><call><name><name pos:line="3" pos:column="34">m_container<pos:position pos:line="3" pos:column="45"/></name><operator pos:line="3" pos:column="45">.<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">begin<pos:position pos:line="3" pos:column="51"/></name></name><argument_list pos:line="3" pos:column="51">()<pos:position pos:line="3" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></init> <condition><expr><name pos:line="3" pos:column="55">itr<pos:position pos:line="3" pos:column="58"/></name> <operator pos:line="3" pos:column="59">!=<pos:position pos:line="3" pos:column="61"/></operator> <call><name><name pos:line="3" pos:column="62">m_container<pos:position pos:line="3" pos:column="73"/></name><operator pos:line="3" pos:column="73">.<pos:position pos:line="3" pos:column="74"/></operator><name pos:line="3" pos:column="74">end<pos:position pos:line="3" pos:column="77"/></name></name><argument_list pos:line="3" pos:column="77">()<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="80"/></condition><incr/>)<pos:position pos:line="3" pos:column="81"/></control>
    <block type="pseudo"><if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">itr<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">m_http<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">==<pos:position pos:line="4" pos:column="23"/></operator> <name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">&amp;&amp;<pos:position pos:line="4" pos:column="39"/></operator> <name><name pos:line="4" pos:column="32">itr<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">m_timer<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="47">cachedTime<pos:position pos:line="4" pos:column="57"/></name></expr>)<pos:position pos:line="4" pos:column="58"/></condition><then pos:line="4" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="7">itr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <call><name><name pos:line="5" pos:column="13">m_container<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">erase<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">(<argument><expr><name pos:line="5" pos:column="31">itr<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="6" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="7">++<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">itr<pos:position pos:line="7" pos:column="12"/></name></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt></block></else></if></block></for>

  <comment type="line" pos:line="9" pos:column="3">// Bad, can't have this here as it is called from redraw().</comment>
  <comment type="line" pos:line="10" pos:column="3">//   mark_dirty();</comment>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

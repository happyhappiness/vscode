<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_183.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">convert_to_value_nothrow<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">torrent<pos:position pos:line="2" pos:column="39"/></name><operator pos:line="2" pos:column="39">::<pos:position pos:line="2" pos:column="41"/></operator><name pos:line="2" pos:column="41">Object<pos:position pos:line="2" pos:column="47"/></name></name><modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="49">src<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int64_t<pos:position pos:line="2" pos:column="61"/></name><modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type> <name pos:line="2" pos:column="63">value<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">int<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">base<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="80">int<pos:position pos:line="2" pos:column="83"/></name></type> <name pos:line="2" pos:column="84">unit<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list> <block pos:line="2" pos:column="90">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">torrent<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">Object<pos:position pos:line="3" pos:column="24"/></name></name><modifier pos:line="3" pos:column="24">&amp;<pos:position pos:line="3" pos:column="29"/></modifier></type> <name pos:line="3" pos:column="26">unpacked<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><ternary><condition><expr><operator pos:line="3" pos:column="37">(<pos:position pos:line="3" pos:column="38"/></operator><call><name><name pos:line="3" pos:column="38">src<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">.<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">is_list<pos:position pos:line="3" pos:column="49"/></name></name><argument_list pos:line="3" pos:column="49">()<pos:position pos:line="3" pos:column="51"/></argument_list></call> <operator pos:line="3" pos:column="52">&amp;&amp;<pos:position pos:line="3" pos:column="62"/></operator> <call><name><name pos:line="3" pos:column="55">src<pos:position pos:line="3" pos:column="58"/></name><operator pos:line="3" pos:column="58">.<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="59">as_list<pos:position pos:line="3" pos:column="66"/></name></name><argument_list pos:line="3" pos:column="66">()<pos:position pos:line="3" pos:column="68"/></argument_list></call><operator pos:line="3" pos:column="68">.<pos:position pos:line="3" pos:column="69"/></operator><call><name pos:line="3" pos:column="69">size<pos:position pos:line="3" pos:column="73"/></name><argument_list pos:line="3" pos:column="73">()<pos:position pos:line="3" pos:column="75"/></argument_list></call> <operator pos:line="3" pos:column="76">==<pos:position pos:line="3" pos:column="78"/></operator> <literal type="number" pos:line="3" pos:column="79">1<pos:position pos:line="3" pos:column="80"/></literal><operator pos:line="3" pos:column="80">)<pos:position pos:line="3" pos:column="81"/></operator></expr> ?<pos:position pos:line="3" pos:column="83"/></condition><then pos:line="3" pos:column="83"> <expr><call><name><name pos:line="3" pos:column="84">src<pos:position pos:line="3" pos:column="87"/></name><operator pos:line="3" pos:column="87">.<pos:position pos:line="3" pos:column="88"/></operator><name pos:line="3" pos:column="88">as_list<pos:position pos:line="3" pos:column="95"/></name></name><argument_list pos:line="3" pos:column="95">()<pos:position pos:line="3" pos:column="97"/></argument_list></call><operator pos:line="3" pos:column="97">.<pos:position pos:line="3" pos:column="98"/></operator><call><name pos:line="3" pos:column="98">front<pos:position pos:line="3" pos:column="103"/></name><argument_list pos:line="3" pos:column="103">()<pos:position pos:line="3" pos:column="105"/></argument_list></call></expr> <pos:position pos:line="3" pos:column="106"/></then><else pos:line="3" pos:column="106">: <expr><name pos:line="3" pos:column="108">src<pos:position pos:line="3" pos:column="111"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="112"/></decl_stmt>

  <switch pos:line="5" pos:column="3">switch <condition pos:line="5" pos:column="10">(<expr><call><name><name pos:line="5" pos:column="11">unpacked<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">type<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="27"/></condition> <block pos:line="5" pos:column="28">{
  <case pos:line="6" pos:column="3">case <expr><name><name pos:line="6" pos:column="8">torrent<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">::<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">Object<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">::<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">TYPE_VALUE<pos:position pos:line="6" pos:column="35"/></name></name></expr>:<pos:position pos:line="6" pos:column="36"/></case>
    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">value<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name><name pos:line="7" pos:column="14">unpacked<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">as_value<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
    <break pos:line="8" pos:column="5">break;<pos:position pos:line="8" pos:column="11"/></break>

  <case pos:line="10" pos:column="3">case <expr><name><name pos:line="10" pos:column="8">torrent<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">::<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">Object<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">::<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">TYPE_STRING<pos:position pos:line="10" pos:column="36"/></name></name></expr>:<pos:position pos:line="10" pos:column="37"/></case>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">parse_skip_wspace<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><call><name pos:line="11" pos:column="27">parse_value<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><call><name><name pos:line="11" pos:column="39">unpacked<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">as_string<pos:position pos:line="11" pos:column="57"/></name></name><argument_list pos:line="11" pos:column="57">()<pos:position pos:line="11" pos:column="59"/></argument_list></call><operator pos:line="11" pos:column="59">.<pos:position pos:line="11" pos:column="60"/></operator><call><name pos:line="11" pos:column="60">c_str<pos:position pos:line="11" pos:column="65"/></name><argument_list pos:line="11" pos:column="65">()<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">value<pos:position pos:line="11" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="76">base<pos:position pos:line="11" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="82">unit<pos:position pos:line="11" pos:column="86"/></name></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr></argument>,
                          <argument><expr><call><name><name pos:line="12" pos:column="27">unpacked<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">.<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">as_string<pos:position pos:line="12" pos:column="45"/></name></name><argument_list pos:line="12" pos:column="45">()<pos:position pos:line="12" pos:column="47"/></argument_list></call><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><call><name pos:line="12" pos:column="48">c_str<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">()<pos:position pos:line="12" pos:column="55"/></argument_list></call> <operator pos:line="12" pos:column="56">+<pos:position pos:line="12" pos:column="57"/></operator> <call><name><name pos:line="12" pos:column="58">unpacked<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">.<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="67">as_string<pos:position pos:line="12" pos:column="76"/></name></name><argument_list pos:line="12" pos:column="76">()<pos:position pos:line="12" pos:column="78"/></argument_list></call><operator pos:line="12" pos:column="78">.<pos:position pos:line="12" pos:column="79"/></operator><call><name pos:line="12" pos:column="79">size<pos:position pos:line="12" pos:column="83"/></name><argument_list pos:line="12" pos:column="83">()<pos:position pos:line="12" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="86"/></argument_list></call> <operator pos:line="12" pos:column="87">!=<pos:position pos:line="12" pos:column="89"/></operator> <call><name><name pos:line="12" pos:column="90">unpacked<pos:position pos:line="12" pos:column="98"/></name><operator pos:line="12" pos:column="98">.<pos:position pos:line="12" pos:column="99"/></operator><name pos:line="12" pos:column="99">as_string<pos:position pos:line="12" pos:column="108"/></name></name><argument_list pos:line="12" pos:column="108">()<pos:position pos:line="12" pos:column="110"/></argument_list></call><operator pos:line="12" pos:column="110">.<pos:position pos:line="12" pos:column="111"/></operator><call><name pos:line="12" pos:column="111">c_str<pos:position pos:line="12" pos:column="116"/></name><argument_list pos:line="12" pos:column="116">()<pos:position pos:line="12" pos:column="118"/></argument_list></call> <operator pos:line="12" pos:column="119">+<pos:position pos:line="12" pos:column="120"/></operator> <call><name><name pos:line="12" pos:column="121">unpacked<pos:position pos:line="12" pos:column="129"/></name><operator pos:line="12" pos:column="129">.<pos:position pos:line="12" pos:column="130"/></operator><name pos:line="12" pos:column="130">as_string<pos:position pos:line="12" pos:column="139"/></name></name><argument_list pos:line="12" pos:column="139">()<pos:position pos:line="12" pos:column="141"/></argument_list></call><operator pos:line="12" pos:column="141">.<pos:position pos:line="12" pos:column="142"/></operator><call><name pos:line="12" pos:column="142">size<pos:position pos:line="12" pos:column="146"/></name><argument_list pos:line="12" pos:column="146">()<pos:position pos:line="12" pos:column="148"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="149"/></condition><then pos:line="12" pos:column="149">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><literal type="boolean" pos:line="13" pos:column="14">false<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></return></block></then></if>

    <break pos:line="15" pos:column="5">break;<pos:position pos:line="15" pos:column="11"/></break>

  <case pos:line="17" pos:column="3">case <expr><name><name pos:line="17" pos:column="8">torrent<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">::<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">Object<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">::<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">TYPE_NONE<pos:position pos:line="17" pos:column="34"/></name></name></expr>:<pos:position pos:line="17" pos:column="35"/></case>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">value<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    <break pos:line="19" pos:column="5">break;<pos:position pos:line="19" pos:column="11"/></break>

  <default pos:line="21" pos:column="3">default:<pos:position pos:line="21" pos:column="11"/></default>
    <return pos:line="22" pos:column="5">return <expr><literal type="boolean" pos:line="22" pos:column="12">false<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></switch>
  
  <return pos:line="25" pos:column="3">return <expr><literal type="boolean" pos:line="25" pos:column="10">true<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_254.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">apply_close_low_diskspace<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">Control<pos:position pos:line="2" pos:column="34"/></name><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">m<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int64_t<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">arg<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <block pos:line="2" pos:column="52">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">core<pos:position pos:line="3" pos:column="7"/></name><operator pos:line="3" pos:column="7">::<pos:position pos:line="3" pos:column="9"/></operator><name pos:line="3" pos:column="9">Manager<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">DListItr<pos:position pos:line="3" pos:column="26"/></name></name></type> <name pos:line="3" pos:column="27">itr<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><call><name><name pos:line="3" pos:column="33">m<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">core<pos:position pos:line="3" pos:column="40"/></name></name><argument_list pos:line="3" pos:column="40">()<pos:position pos:line="3" pos:column="42"/></argument_list></call><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><call><name pos:line="3" pos:column="44">download_list<pos:position pos:line="3" pos:column="57"/></name><argument_list pos:line="3" pos:column="57">()<pos:position pos:line="3" pos:column="59"/></argument_list></call><operator pos:line="3" pos:column="59">-&gt;<pos:position pos:line="3" pos:column="64"/></operator><call><name pos:line="3" pos:column="61">begin<pos:position pos:line="3" pos:column="66"/></name><argument_list pos:line="3" pos:column="66">()<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="69"/></decl_stmt>

  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">itr<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <call><name><name pos:line="5" pos:column="17">std<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">::<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">find_if<pos:position pos:line="5" pos:column="29"/></name></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">itr<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="35">m<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">core<pos:position pos:line="5" pos:column="42"/></name></name><argument_list pos:line="5" pos:column="42">()<pos:position pos:line="5" pos:column="44"/></argument_list></call><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><call><name pos:line="5" pos:column="46">download_list<pos:position pos:line="5" pos:column="59"/></name><argument_list pos:line="5" pos:column="59">()<pos:position pos:line="5" pos:column="61"/></argument_list></call><operator pos:line="5" pos:column="61">-&gt;<pos:position pos:line="5" pos:column="66"/></operator><call><name pos:line="5" pos:column="63">end<pos:position pos:line="5" pos:column="66"/></name><argument_list pos:line="5" pos:column="66">()<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="70">std<pos:position pos:line="5" pos:column="73"/></name><operator pos:line="5" pos:column="73">::<pos:position pos:line="5" pos:column="75"/></operator><name pos:line="5" pos:column="75">mem_fun<pos:position pos:line="5" pos:column="82"/></name></name><argument_list pos:line="5" pos:column="82">(<argument><expr><operator pos:line="5" pos:column="83">&amp;<pos:position pos:line="5" pos:column="88"/></operator><name><name pos:line="5" pos:column="84">core<pos:position pos:line="5" pos:column="88"/></name><operator pos:line="5" pos:column="88">::<pos:position pos:line="5" pos:column="90"/></operator><name pos:line="5" pos:column="90">Download<pos:position pos:line="5" pos:column="98"/></name><operator pos:line="5" pos:column="98">::<pos:position pos:line="5" pos:column="100"/></operator><name pos:line="5" pos:column="100">is_downloading<pos:position pos:line="5" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="115"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="116"/></argument_list></call><operator pos:line="5" pos:column="116">)<pos:position pos:line="5" pos:column="117"/></operator> <operator pos:line="5" pos:column="118">!=<pos:position pos:line="5" pos:column="120"/></operator> <call><name><name pos:line="5" pos:column="121">m<pos:position pos:line="5" pos:column="122"/></name><operator pos:line="5" pos:column="122">-&gt;<pos:position pos:line="5" pos:column="127"/></operator><name pos:line="5" pos:column="124">core<pos:position pos:line="5" pos:column="128"/></name></name><argument_list pos:line="5" pos:column="128">()<pos:position pos:line="5" pos:column="130"/></argument_list></call><operator pos:line="5" pos:column="130">-&gt;<pos:position pos:line="5" pos:column="135"/></operator><call><name pos:line="5" pos:column="132">download_list<pos:position pos:line="5" pos:column="145"/></name><argument_list pos:line="5" pos:column="145">()<pos:position pos:line="5" pos:column="147"/></argument_list></call><operator pos:line="5" pos:column="147">-&gt;<pos:position pos:line="5" pos:column="152"/></operator><call><name pos:line="5" pos:column="149">end<pos:position pos:line="5" pos:column="152"/></name><argument_list pos:line="5" pos:column="152">()<pos:position pos:line="5" pos:column="154"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="155"/></condition> <block pos:line="5" pos:column="156">{
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">rak<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">::<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">fs_stat<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">stat<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">std<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">string<pos:position pos:line="7" pos:column="16"/></name></name></type> <name pos:line="7" pos:column="17">path<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><call><name><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">itr<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">)<pos:position pos:line="7" pos:column="30"/></operator><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">file_list<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call><operator pos:line="7" pos:column="43">-&gt;<pos:position pos:line="7" pos:column="48"/></operator><call><name pos:line="7" pos:column="45">root_dir<pos:position pos:line="7" pos:column="53"/></name><argument_list pos:line="7" pos:column="53">()<pos:position pos:line="7" pos:column="55"/></argument_list></call> <operator pos:line="7" pos:column="56">+<pos:position pos:line="7" pos:column="57"/></operator> <call><name><operator pos:line="7" pos:column="58">(<pos:position pos:line="7" pos:column="59"/></operator><operator pos:line="7" pos:column="59">*<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">itr<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">)<pos:position pos:line="7" pos:column="64"/></operator><operator pos:line="7" pos:column="64">-&gt;<pos:position pos:line="7" pos:column="69"/></operator><name pos:line="7" pos:column="66">file_list<pos:position pos:line="7" pos:column="75"/></name></name><argument_list pos:line="7" pos:column="75">()<pos:position pos:line="7" pos:column="77"/></argument_list></call><operator pos:line="7" pos:column="77">-&gt;<pos:position pos:line="7" pos:column="82"/></operator><call><name pos:line="7" pos:column="79">get<pos:position pos:line="7" pos:column="82"/></name><argument_list pos:line="7" pos:column="82">(<argument><expr><literal type="number" pos:line="7" pos:column="83">0<pos:position pos:line="7" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="85"/></argument_list></call><operator pos:line="7" pos:column="85">.<pos:position pos:line="7" pos:column="86"/></operator><call><name pos:line="7" pos:column="86">path<pos:position pos:line="7" pos:column="90"/></name><argument_list pos:line="7" pos:column="90">()<pos:position pos:line="7" pos:column="92"/></argument_list></call><operator pos:line="7" pos:column="92">-&gt;<pos:position pos:line="7" pos:column="97"/></operator><call><name pos:line="7" pos:column="94">as_string<pos:position pos:line="7" pos:column="103"/></name><argument_list pos:line="7" pos:column="103">()<pos:position pos:line="7" pos:column="105"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="106"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name><name pos:line="9" pos:column="10">stat<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">update<pos:position pos:line="9" pos:column="21"/></name></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">path<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28"> <block pos:line="9" pos:column="29">{
      <expr_stmt><expr><call><name><name pos:line="10" pos:column="7">m<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">core<pos:position pos:line="10" pos:column="14"/></name></name><argument_list pos:line="10" pos:column="14">()<pos:position pos:line="10" pos:column="16"/></argument_list></call><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><call><name pos:line="10" pos:column="18">push_log<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><call><name><name pos:line="10" pos:column="27">std<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">::<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">string<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">(<argument><expr><literal type="string" pos:line="10" pos:column="39">"Cannot read free diskspace: "<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call> <operator pos:line="10" pos:column="71">+<pos:position pos:line="10" pos:column="72"/></operator> <call><name pos:line="10" pos:column="73">strerror<pos:position pos:line="10" pos:column="81"/></name><argument_list pos:line="10" pos:column="81">(<argument><expr><name pos:line="10" pos:column="82">errno<pos:position pos:line="10" pos:column="87"/></name></expr></argument>)<pos:position pos:line="10" pos:column="88"/></argument_list></call> <operator pos:line="10" pos:column="89">+<pos:position pos:line="10" pos:column="90"/></operator> <literal type="string" pos:line="10" pos:column="91">" for "<pos:position pos:line="10" pos:column="98"/></literal> <operator pos:line="10" pos:column="99">+<pos:position pos:line="10" pos:column="100"/></operator> <name pos:line="10" pos:column="101">path<pos:position pos:line="10" pos:column="105"/></name></expr></argument>)<pos:position pos:line="10" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="107"/></expr_stmt>

    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><call><name><name pos:line="12" pos:column="16">stat<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">bytes_avail<pos:position pos:line="12" pos:column="32"/></name></name><argument_list pos:line="12" pos:column="32">()<pos:position pos:line="12" pos:column="34"/></argument_list></call> <operator pos:line="12" pos:column="35">&lt;<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="37">arg<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
      <expr_stmt><expr><call><name><name pos:line="13" pos:column="7">m<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">core<pos:position pos:line="13" pos:column="14"/></name></name><argument_list pos:line="13" pos:column="14">()<pos:position pos:line="13" pos:column="16"/></argument_list></call><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><call><name pos:line="13" pos:column="18">download_list<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">()<pos:position pos:line="13" pos:column="33"/></argument_list></call><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><call><name pos:line="13" pos:column="35">close<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">itr<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>

      <expr_stmt><expr><call><name><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">itr<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">)<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">set_hash_failed<pos:position pos:line="15" pos:column="30"/></name></name><argument_list pos:line="15" pos:column="30">(<argument><expr><literal type="boolean" pos:line="15" pos:column="31">true<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">itr<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">)<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">set_message<pos:position pos:line="16" pos:column="26"/></name></name><argument_list pos:line="16" pos:column="26">(<argument><expr><call><name><name pos:line="16" pos:column="27">std<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">::<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">string<pos:position pos:line="16" pos:column="38"/></name></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"Low diskspace"<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><operator pos:line="19" pos:column="5">++<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">itr<pos:position pos:line="19" pos:column="10"/></name></expr>;<pos:position pos:line="19" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></while>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

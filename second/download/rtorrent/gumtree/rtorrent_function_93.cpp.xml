<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_93.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowHttpQueue<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">redraw<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list> <block pos:line="2" pos:column="27">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">utils<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">displayScheduler<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">.<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">insert<pos:position pos:line="3" pos:column="33"/></name></name><argument_list pos:line="3" pos:column="33">(<argument><expr><operator pos:line="3" pos:column="34">&amp;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="35">m_taskUpdate<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="49">(<pos:position pos:line="3" pos:column="50"/></operator><call><name><name pos:line="3" pos:column="50">utils<pos:position pos:line="3" pos:column="55"/></name><operator pos:line="3" pos:column="55">::<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="57">Timer<pos:position pos:line="3" pos:column="62"/></name><operator pos:line="3" pos:column="62">::<pos:position pos:line="3" pos:column="64"/></operator><name pos:line="3" pos:column="64">cache<pos:position pos:line="3" pos:column="69"/></name></name><argument_list pos:line="3" pos:column="69">()<pos:position pos:line="3" pos:column="71"/></argument_list></call> <operator pos:line="3" pos:column="72">+<pos:position pos:line="3" pos:column="73"/></operator> <literal type="number" pos:line="3" pos:column="74">1000000<pos:position pos:line="3" pos:column="81"/></literal><operator pos:line="3" pos:column="81">)<pos:position pos:line="3" pos:column="82"/></operator><operator pos:line="3" pos:column="82">.<pos:position pos:line="3" pos:column="83"/></operator><call><name pos:line="3" pos:column="83">round_seconds<pos:position pos:line="3" pos:column="96"/></name><argument_list pos:line="3" pos:column="96">()<pos:position pos:line="3" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="100"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">cleanup_list<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">()<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name><name pos:line="7" pos:column="7">m_container<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">empty<pos:position pos:line="7" pos:column="24"/></name></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">set_active<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">m_slotAdjust<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">()<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>

    <return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if> 

  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">m_canvas<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">erase<pos:position pos:line="14" pos:column="18"/></name></name><argument_list pos:line="14" pos:column="18">()<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="15" pos:column="3">m_canvas<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">print<pos:position pos:line="15" pos:column="18"/></name></name><argument_list pos:line="15" pos:column="18">(<argument><expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"Http [%i]"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="38">m_queue<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">size<pos:position pos:line="15" pos:column="51"/></name></name><argument_list pos:line="15" pos:column="51">()<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">pos<pos:position pos:line="17" pos:column="10"/></name> <init pos:line="17" pos:column="11">= <expr><literal type="number" pos:line="17" pos:column="13">10<pos:position pos:line="17" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="18" pos:column="3">Container<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">::<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">iterator<pos:position pos:line="18" pos:column="22"/></name></name></type> <name pos:line="18" pos:column="23">itr<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><call><name><name pos:line="18" pos:column="29">m_container<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">begin<pos:position pos:line="18" pos:column="46"/></name></name><argument_list pos:line="18" pos:column="46">()<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="49"/></decl_stmt>

  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><name pos:line="20" pos:column="10">itr<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <call><name><name pos:line="20" pos:column="17">m_container<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">end<pos:position pos:line="20" pos:column="32"/></name></name><argument_list pos:line="20" pos:column="32">()<pos:position pos:line="20" pos:column="34"/></argument_list></call> <operator pos:line="20" pos:column="35">&amp;&amp;<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="38">pos<pos:position pos:line="20" pos:column="41"/></name> <operator pos:line="20" pos:column="42">+<pos:position pos:line="20" pos:column="43"/></operator> <literal type="number" pos:line="20" pos:column="44">20<pos:position pos:line="20" pos:column="46"/></literal> <operator pos:line="20" pos:column="47">&lt;<pos:position pos:line="20" pos:column="51"/></operator> <call><name><name pos:line="20" pos:column="49">m_canvas<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">-&gt;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="59">get_width<pos:position pos:line="20" pos:column="68"/></name></name><argument_list pos:line="20" pos:column="68">()<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="71"/></condition> <block pos:line="20" pos:column="72">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">itr<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">m_http<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="22" pos:column="7">m_canvas<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">print<pos:position pos:line="22" pos:column="22"/></name></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">pos<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="31">"%s done"<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="22" pos:column="42">itr<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">m_name<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">.<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="54">c_str<pos:position pos:line="22" pos:column="59"/></name></name><argument_list pos:line="22" pos:column="59">()<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt></block></then>

    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><call><name><name pos:line="24" pos:column="14">itr<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">m_http<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">get_size_total<pos:position pos:line="24" pos:column="41"/></name></name><argument_list pos:line="24" pos:column="41">()<pos:position pos:line="24" pos:column="43"/></argument_list></call> <operator pos:line="24" pos:column="44">==<pos:position pos:line="24" pos:column="46"/></operator> <literal type="number" pos:line="24" pos:column="47">0<pos:position pos:line="24" pos:column="48"/></literal></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="25" pos:column="7">m_canvas<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">print<pos:position pos:line="25" pos:column="22"/></name></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">pos<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"%s ---%%"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="43">itr<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">m_name<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">.<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="55">c_str<pos:position pos:line="25" pos:column="60"/></name></name><argument_list pos:line="25" pos:column="60">()<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt></block></then></if></elseif>

    <else pos:line="27" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="28" pos:column="7">m_canvas<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">print<pos:position pos:line="28" pos:column="22"/></name></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">pos<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="28">0<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">"%s %3i%%"<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>,
		      <argument><expr><call><name><name pos:line="29" pos:column="23">itr<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">m_name<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">.<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">c_str<pos:position pos:line="29" pos:column="40"/></name></name><argument_list pos:line="29" pos:column="40">()<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr></argument>,
		      <argument><expr><call pos:line="30" pos:column="23">(<name pos:line="30" pos:column="24">int<pos:position pos:line="30" pos:column="27"/></name>)<argument_list pos:line="30" pos:column="28">(<argument><expr><literal type="number" pos:line="30" pos:column="29">100.0<pos:position pos:line="30" pos:column="34"/></literal> <operator pos:line="30" pos:column="35">*<pos:position pos:line="30" pos:column="36"/></operator> <call><name><name pos:line="30" pos:column="37">itr<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">m_http<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">get_size_done<pos:position pos:line="30" pos:column="63"/></name></name><argument_list pos:line="30" pos:column="63">()<pos:position pos:line="30" pos:column="65"/></argument_list></call> <operator pos:line="30" pos:column="66">/<pos:position pos:line="30" pos:column="67"/></operator> <call><name><name pos:line="30" pos:column="68">itr<pos:position pos:line="30" pos:column="71"/></name><operator pos:line="30" pos:column="71">-&gt;<pos:position pos:line="30" pos:column="76"/></operator><name pos:line="30" pos:column="73">m_http<pos:position pos:line="30" pos:column="79"/></name><operator pos:line="30" pos:column="79">-&gt;<pos:position pos:line="30" pos:column="84"/></operator><name pos:line="30" pos:column="81">get_size_total<pos:position pos:line="30" pos:column="95"/></name></name><argument_list pos:line="30" pos:column="95">()<pos:position pos:line="30" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="100"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">pos<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">+=<pos:position pos:line="32" pos:column="11"/></operator> <call><name><name pos:line="32" pos:column="12">itr<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">m_name<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">size<pos:position pos:line="32" pos:column="28"/></name></name><argument_list pos:line="32" pos:column="28">()<pos:position pos:line="32" pos:column="30"/></argument_list></call> <operator pos:line="32" pos:column="31">+<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="33">6<pos:position pos:line="32" pos:column="34"/></literal></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">++<pos:position pos:line="33" pos:column="7"/></operator><name pos:line="33" pos:column="7">itr<pos:position pos:line="33" pos:column="10"/></name></expr>;<pos:position pos:line="33" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></while>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

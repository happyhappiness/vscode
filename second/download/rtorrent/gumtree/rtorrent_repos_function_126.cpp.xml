<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_126.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">string<pos:position pos:line="1" pos:column="12"/></name></name></type>
<name><name pos:line="2" pos:column="1">OptionParser<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">create_optstring<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list> <block pos:line="2" pos:column="34">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">std<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">::<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">string<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">s<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name><name pos:line="5" pos:column="8">Container<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">iterator<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">itr<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><call><name><name pos:line="5" pos:column="34">m_container<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">begin<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">()<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></init> <condition><expr><name pos:line="5" pos:column="55">itr<pos:position pos:line="5" pos:column="58"/></name> <operator pos:line="5" pos:column="59">!=<pos:position pos:line="5" pos:column="61"/></operator> <call><name><name pos:line="5" pos:column="62">m_container<pos:position pos:line="5" pos:column="73"/></name><operator pos:line="5" pos:column="73">.<pos:position pos:line="5" pos:column="74"/></operator><name pos:line="5" pos:column="74">end<pos:position pos:line="5" pos:column="77"/></name></name><argument_list pos:line="5" pos:column="77">()<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></condition> <incr><expr><operator pos:line="5" pos:column="81">++<pos:position pos:line="5" pos:column="83"/></operator><name pos:line="5" pos:column="83">itr<pos:position pos:line="5" pos:column="86"/></name></expr></incr>)<pos:position pos:line="5" pos:column="87"/></control> <block pos:line="5" pos:column="88">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">s<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">+=<pos:position pos:line="6" pos:column="9"/></operator> <name><name pos:line="6" pos:column="10">itr<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">first<pos:position pos:line="6" pos:column="20"/></name></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">itr<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">second<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">m_useOption<pos:position pos:line="8" pos:column="32"/></name></name></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="7">s<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">+=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="char" pos:line="9" pos:column="12">':'<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></for>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">s<pos:position pos:line="12" pos:column="11"/></name></expr>;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_217.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_command_execute<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">core<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">Download<pos:position pos:line="2" pos:column="37"/></name></name><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">download<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">torrent<pos:position pos:line="2" pos:column="56"/></name><operator pos:line="2" pos:column="56">::<pos:position pos:line="2" pos:column="58"/></operator><name pos:line="2" pos:column="58">Object<pos:position pos:line="2" pos:column="64"/></name></name><modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type> <name pos:line="2" pos:column="66">object<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list> <block pos:line="2" pos:column="74">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">object<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">is_list<pos:position pos:line="3" pos:column="22"/></name></name><argument_list pos:line="3" pos:column="22">()<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25"> <block pos:line="3" pos:column="26">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">torrent<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">::<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">Object<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">::<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">list_type<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">::<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">iterator<pos:position pos:line="4" pos:column="46"/></name></name></type> <name pos:line="4" pos:column="47">itr<pos:position pos:line="4" pos:column="50"/></name> <init pos:line="4" pos:column="51">= <expr><call><name><name pos:line="4" pos:column="53">object<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">-&gt;<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="61">as_list<pos:position pos:line="4" pos:column="68"/></name></name><argument_list pos:line="4" pos:column="68">()<pos:position pos:line="4" pos:column="70"/></argument_list></call><operator pos:line="4" pos:column="70">.<pos:position pos:line="4" pos:column="71"/></operator><call><name pos:line="4" pos:column="71">begin<pos:position pos:line="4" pos:column="76"/></name><argument_list pos:line="4" pos:column="76">()<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="80">last<pos:position pos:line="4" pos:column="84"/></name> <init pos:line="4" pos:column="85">= <expr><call><name><name pos:line="4" pos:column="87">object<pos:position pos:line="4" pos:column="93"/></name><operator pos:line="4" pos:column="93">-&gt;<pos:position pos:line="4" pos:column="98"/></operator><name pos:line="4" pos:column="95">as_list<pos:position pos:line="4" pos:column="102"/></name></name><argument_list pos:line="4" pos:column="102">()<pos:position pos:line="4" pos:column="104"/></argument_list></call><operator pos:line="4" pos:column="104">.<pos:position pos:line="4" pos:column="105"/></operator><call><name pos:line="4" pos:column="105">end<pos:position pos:line="4" pos:column="108"/></name><argument_list pos:line="4" pos:column="108">()<pos:position pos:line="4" pos:column="110"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="111"/></init> <condition><expr><name pos:line="4" pos:column="112">itr<pos:position pos:line="4" pos:column="115"/></name> <operator pos:line="4" pos:column="116">!=<pos:position pos:line="4" pos:column="118"/></operator> <name pos:line="4" pos:column="119">last<pos:position pos:line="4" pos:column="123"/></name></expr>;<pos:position pos:line="4" pos:column="124"/></condition> <incr><expr><name pos:line="4" pos:column="125">itr<pos:position pos:line="4" pos:column="128"/></name><operator pos:line="4" pos:column="128">++<pos:position pos:line="4" pos:column="130"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="131"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="7">parse_command_execute<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">download<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="41">itr<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt></block></for>

  }<pos:position pos:line="7" pos:column="4"/></block></then> <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><call><name><name pos:line="7" pos:column="15">object<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">as_string<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><call><name pos:line="7" pos:column="35">c_str<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">()<pos:position pos:line="7" pos:column="42"/></argument_list></call> <operator pos:line="7" pos:column="43">==<pos:position pos:line="7" pos:column="45"/></operator> <literal type="char" pos:line="7" pos:column="46">'$'<pos:position pos:line="7" pos:column="49"/></literal></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50"> <block pos:line="7" pos:column="51">{
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name><name pos:line="8" pos:column="11">std<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">::<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">string<pos:position pos:line="8" pos:column="22"/></name></name><modifier pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></modifier></type> <name pos:line="8" pos:column="24">str<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><call><name><name pos:line="8" pos:column="30">object<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">as_string<pos:position pos:line="8" pos:column="47"/></name></name><argument_list pos:line="8" pos:column="47">()<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">object<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">parse_command_d_single<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">download<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="48">str<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">.<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">c_str<pos:position pos:line="10" pos:column="57"/></name></name><argument_list pos:line="10" pos:column="57">()<pos:position pos:line="10" pos:column="59"/></argument_list></call> <operator pos:line="10" pos:column="60">+<pos:position pos:line="10" pos:column="61"/></operator> <literal type="number" pos:line="10" pos:column="62">1<pos:position pos:line="10" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="65">str<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">.<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="69">c_str<pos:position pos:line="10" pos:column="74"/></name></name><argument_list pos:line="10" pos:column="74">()<pos:position pos:line="10" pos:column="76"/></argument_list></call> <operator pos:line="10" pos:column="77">+<pos:position pos:line="10" pos:column="78"/></operator> <call><name><name pos:line="10" pos:column="79">str<pos:position pos:line="10" pos:column="82"/></name><operator pos:line="10" pos:column="82">.<pos:position pos:line="10" pos:column="83"/></operator><name pos:line="10" pos:column="83">size<pos:position pos:line="10" pos:column="87"/></name></name><argument_list pos:line="10" pos:column="87">()<pos:position pos:line="10" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="91"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if></elseif></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_227.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CommandScheduler<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">call_item<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">value_type<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">item<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">item<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">is_queued<pos:position pos:line="3" pos:column="22"/></name></name><argument_list pos:line="3" pos:column="22">()<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">internal_error<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><literal type="string" pos:line="4" pos:column="35">"CommandScheduler::call_item(...) called but item is still queued."<pos:position pos:line="4" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="104"/></throw></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name><name pos:line="6" pos:column="7">std<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">::<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">find<pos:position pos:line="6" pos:column="16"/></name></name><argument_list pos:line="6" pos:column="16">(<argument><expr><call><name pos:line="6" pos:column="17">begin<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="26">end<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">item<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call> <operator pos:line="6" pos:column="39">==<pos:position pos:line="6" pos:column="41"/></operator> <call><name pos:line="6" pos:column="42">end<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
    <block type="pseudo"><throw pos:line="7" pos:column="5">throw <expr><call><name><name pos:line="7" pos:column="11">torrent<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">::<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">internal_error<pos:position pos:line="7" pos:column="34"/></name></name><argument_list pos:line="7" pos:column="34">(<argument><expr><literal type="string" pos:line="7" pos:column="35">"CommandScheduler::call_item(...) called but the item isn't in the scheduler."<pos:position pos:line="7" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="115"/></throw></block></then></if>

  <comment type="line" pos:line="9" pos:column="3">// Remove the item before calling the command if it should be</comment>
  <comment type="line" pos:line="10" pos:column="3">// removed.</comment>

  <try pos:line="12" pos:column="3">try <block pos:line="12" pos:column="7">{
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">rpc<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">::<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">parse_command_multiple_std<pos:position pos:line="13" pos:column="36"/></name></name><argument_list pos:line="13" pos:column="36">(<argument><expr><call><name><name pos:line="13" pos:column="37">item<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">command<pos:position pos:line="13" pos:column="50"/></name></name><argument_list pos:line="13" pos:column="50">()<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>

  }<pos:position pos:line="15" pos:column="4"/></block> <catch pos:line="15" pos:column="5">catch <parameter_list pos:line="15" pos:column="11">(<parameter><decl><type><name><name pos:line="15" pos:column="12">torrent<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">::<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">input_error<pos:position pos:line="15" pos:column="32"/></name></name><modifier pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></modifier></type> <name pos:line="15" pos:column="34">e<pos:position pos:line="15" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="15" pos:column="36"/></parameter_list> <block pos:line="15" pos:column="37">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">m_slotErrorMessage<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">is_valid<pos:position pos:line="16" pos:column="36"/></name></name><argument_list pos:line="16" pos:column="36">()<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="7">m_slotErrorMessage<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"Scheduled command failed: "<pos:position pos:line="17" pos:column="54"/></literal> <operator pos:line="17" pos:column="55">+<pos:position pos:line="17" pos:column="56"/></operator> <call><name><name pos:line="17" pos:column="57">item<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">-&gt;<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="63">key<pos:position pos:line="17" pos:column="66"/></name></name><argument_list pos:line="17" pos:column="66">()<pos:position pos:line="17" pos:column="68"/></argument_list></call> <operator pos:line="17" pos:column="69">+<pos:position pos:line="17" pos:column="70"/></operator> <literal type="string" pos:line="17" pos:column="71">": "<pos:position pos:line="17" pos:column="75"/></literal> <operator pos:line="17" pos:column="76">+<pos:position pos:line="17" pos:column="77"/></operator> <call><name><name pos:line="17" pos:column="78">e<pos:position pos:line="17" pos:column="79"/></name><operator pos:line="17" pos:column="79">.<pos:position pos:line="17" pos:column="80"/></operator><name pos:line="17" pos:column="80">what<pos:position pos:line="17" pos:column="84"/></name></name><argument_list pos:line="17" pos:column="84">()<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="88"/></expr_stmt></block></then></if>
  }<pos:position pos:line="18" pos:column="4"/></block></catch></try>

  <comment type="line" pos:line="20" pos:column="3">// Still schedule if we caught a torrrent::input_error?</comment>
  <decl_stmt><decl><type><name><name pos:line="21" pos:column="3">rak<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">::<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">timer<pos:position pos:line="21" pos:column="13"/></name></name></type> <name pos:line="21" pos:column="14">next<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><call><name><name pos:line="21" pos:column="21">item<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">next_time_scheduled<pos:position pos:line="21" pos:column="46"/></name></name><argument_list pos:line="21" pos:column="46">()<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="49"/></decl_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">next<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">==<pos:position pos:line="23" pos:column="14"/></operator> <call><name><name pos:line="23" pos:column="15">rak<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">::<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">timer<pos:position pos:line="23" pos:column="25"/></name></name><argument_list pos:line="23" pos:column="25">()<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28"> <block pos:line="23" pos:column="29">{
    <comment type="line" pos:line="24" pos:column="5">// Remove from scheduler?</comment>
    <return pos:line="25" pos:column="5">return;<pos:position pos:line="25" pos:column="12"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">next<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">&lt;=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="15">cachedTime<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26">
    <block type="pseudo"><throw pos:line="29" pos:column="5">throw <expr><call><name><name pos:line="29" pos:column="11">torrent<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">::<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">internal_error<pos:position pos:line="29" pos:column="34"/></name></name><argument_list pos:line="29" pos:column="34">(<argument><expr><literal type="string" pos:line="29" pos:column="35">"CommandScheduler::call_item(...) tried to schedule a zero interval item."<pos:position pos:line="29" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="111"/></throw></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="31" pos:column="3">item<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">-&gt;<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="9">enable<pos:position pos:line="31" pos:column="15"/></name></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">next<pos:position pos:line="31" pos:column="20"/></name></expr></argument>)<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_591.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type>
<name><name pos:line="2" pos:column="1">TextElementStringBase<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">print<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">first<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">last<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="55">Canvas<pos:position pos:line="2" pos:column="61"/></name><operator pos:line="2" pos:column="61">::<pos:position pos:line="2" pos:column="63"/></operator><name pos:line="2" pos:column="63">attributes_list<pos:position pos:line="2" pos:column="78"/></name></name><modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type> <name pos:line="2" pos:column="80">attributes<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="92">void<pos:position pos:line="2" pos:column="96"/></name><modifier pos:line="2" pos:column="96">*<pos:position pos:line="2" pos:column="97"/></modifier></type> <name pos:line="2" pos:column="98">object<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="105"/></parameter_list> <block pos:line="2" pos:column="106">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Attributes<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">baseAttribute<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><call><name><name pos:line="3" pos:column="30">attributes<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">back<pos:position pos:line="3" pos:column="46"/></name></name><argument_list pos:line="3" pos:column="46">()<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">push_attribute<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">attributes<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="30">Attributes<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">first<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="48">m_attributes<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="62">Attributes<pos:position pos:line="4" pos:column="72"/></name><operator pos:line="4" pos:column="72">::<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="74">color_invalid<pos:position pos:line="4" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="90"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">first<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">last<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">first<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">m_flags<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="17">flag_escape_hex<pos:position pos:line="9" pos:column="32"/></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">buffer<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><name pos:line="10" pos:column="17">last<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">-<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">first<pos:position pos:line="10" pos:column="29"/></name></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name><modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type> <name pos:line="11" pos:column="11">bufferLast<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><call><name pos:line="11" pos:column="24">copy_string<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">buffer<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">buffer<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">+<pos:position pos:line="11" pos:column="52"/></operator> <operator pos:line="11" pos:column="53">(<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">last<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">-<pos:position pos:line="11" pos:column="60"/></operator> <name pos:line="11" pos:column="61">first<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">)<pos:position pos:line="11" pos:column="67"/></operator></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">object<pos:position pos:line="11" pos:column="75"/></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="77"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">first<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name><name pos:line="13" pos:column="13">rak<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">::<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">transform_hex<pos:position pos:line="13" pos:column="31"/></name></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">buffer<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">bufferLast<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">first<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">last<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>

  }<pos:position pos:line="15" pos:column="4"/></block></then> <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><name pos:line="15" pos:column="14">m_flags<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="24">flag_escape_html<pos:position pos:line="15" pos:column="40"/></name></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <block pos:line="15" pos:column="42">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">buffer<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><name pos:line="16" pos:column="17">last<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">-<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">first<pos:position pos:line="16" pos:column="29"/></name></expr>]<pos:position pos:line="16" pos:column="30"/></index></name></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name><modifier pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></modifier></type> <name pos:line="17" pos:column="11">bufferLast<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><call><name pos:line="17" pos:column="24">copy_string<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">buffer<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">buffer<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">+<pos:position pos:line="17" pos:column="52"/></operator> <operator pos:line="17" pos:column="53">(<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">last<pos:position pos:line="17" pos:column="58"/></name> <operator pos:line="17" pos:column="59">-<pos:position pos:line="17" pos:column="60"/></operator> <name pos:line="17" pos:column="61">first<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">)<pos:position pos:line="17" pos:column="67"/></operator></expr></argument>, <argument><expr><name pos:line="17" pos:column="69">object<pos:position pos:line="17" pos:column="75"/></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="77"/></decl_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">first<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name><name pos:line="19" pos:column="13">rak<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">::<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">copy_escape_html<pos:position pos:line="19" pos:column="34"/></name></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">buffer<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">bufferLast<pos:position pos:line="19" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">first<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="62">last<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>

  }<pos:position pos:line="21" pos:column="4"/></block></then></if></elseif> <else pos:line="21" pos:column="5">else <block pos:line="21" pos:column="10">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">first<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">copy_string<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">first<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">last<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">object<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></else></if>  

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">push_attribute<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">attributes<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="30">Attributes<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">first<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">baseAttribute<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>

  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">first<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_777.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Lockfile<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">is_stale<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list> <block pos:line="2" pos:column="22">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">process_type<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">process<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><call><name pos:line="3" pos:column="26">locked_by<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">()<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">256<pos:position pos:line="5" pos:column="15"/></literal></expr>]<pos:position pos:line="5" pos:column="16"/></index></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">process<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">second<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">&lt;=<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal> <operator pos:line="7" pos:column="27">||<pos:position pos:line="7" pos:column="29"/></operator>
      <call><name><operator pos:line="8" pos:column="7">::<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">gethostname<pos:position pos:line="8" pos:column="20"/></name></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">buf<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="26">255<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call> <operator pos:line="8" pos:column="31">!=<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal> <operator pos:line="8" pos:column="36">||<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">buf<pos:position pos:line="8" pos:column="42"/></name> <operator pos:line="8" pos:column="43">!=<pos:position pos:line="8" pos:column="45"/></operator> <name><name pos:line="8" pos:column="46">process<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">.<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="54">first<pos:position pos:line="8" pos:column="59"/></name></name></expr>)<pos:position pos:line="8" pos:column="60"/></condition><then pos:line="8" pos:column="60">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="boolean" pos:line="9" pos:column="12">false<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>
      
  <return pos:line="11" pos:column="3">return <expr><call><name><operator pos:line="11" pos:column="10">::<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">kill<pos:position pos:line="11" pos:column="16"/></name></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name><name pos:line="11" pos:column="17">process<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">second<pos:position pos:line="11" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call> <operator pos:line="11" pos:column="36">!=<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">0<pos:position pos:line="11" pos:column="40"/></literal> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="44">errno<pos:position pos:line="11" pos:column="49"/></name> <operator pos:line="11" pos:column="50">!=<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="53">EPERM<pos:position pos:line="11" pos:column="58"/></name></expr>;<pos:position pos:line="11" pos:column="59"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

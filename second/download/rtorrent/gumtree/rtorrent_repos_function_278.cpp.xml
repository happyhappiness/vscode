<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_278.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">rak<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">timer<pos:position pos:line="1" pos:column="11"/></name></name></type>
<name><name pos:line="2" pos:column="1">CommandSchedulerItem<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">next_time_scheduled<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">()<pos:position pos:line="2" pos:column="44"/></parameter_list> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <block pos:line="2" pos:column="51">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">m_interval<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">==<pos:position pos:line="3" pos:column="20"/></operator> <literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><call><name><name pos:line="4" pos:column="12">rak<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">timer<pos:position pos:line="4" pos:column="22"/></name></name><argument_list pos:line="4" pos:column="22">()<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">m_timeScheduled<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <call><name><name pos:line="6" pos:column="26">rak<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">::<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">timer<pos:position pos:line="6" pos:column="36"/></name></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
    <block type="pseudo"><throw pos:line="7" pos:column="5">throw <expr><call><name><name pos:line="7" pos:column="11">torrent<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">::<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">internal_error<pos:position pos:line="7" pos:column="34"/></name></name><argument_list pos:line="7" pos:column="34">(<argument><expr><literal type="string" pos:line="7" pos:column="35">"CommandSchedulerItem::next_time_scheduled() m_timeScheduled == rak::timer()."<pos:position pos:line="7" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="115"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">rak<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">::<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">timer<pos:position pos:line="9" pos:column="13"/></name></name></type> <name pos:line="9" pos:column="14">next<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">m_timeScheduled<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

  <comment type="line" pos:line="11" pos:column="3">// This should be done in a non-looping manner.</comment>
  <do pos:line="12" pos:column="3">do <block pos:line="12" pos:column="6">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">next<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">+=<pos:position pos:line="13" pos:column="12"/></operator> <call><name><name pos:line="13" pos:column="13">rak<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">::<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">timer<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">::<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">from_seconds<pos:position pos:line="13" pos:column="37"/></name></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">m_interval<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block> while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">next<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&lt;=<pos:position pos:line="14" pos:column="22"/></operator> <call><name><name pos:line="14" pos:column="20">cachedTime<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">round_seconds<pos:position pos:line="14" pos:column="44"/></name></name><argument_list pos:line="14" pos:column="44">()<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="47"/></condition>;<pos:position pos:line="14" pos:column="48"/></do>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">next<pos:position pos:line="16" pos:column="14"/></name></expr>;<pos:position pos:line="16" pos:column="15"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

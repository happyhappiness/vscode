<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_358.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementPeerList<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">receive_next<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list> <block pos:line="2" pos:column="33">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">m_listItr<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">!=<pos:position pos:line="3" pos:column="19"/></operator> <call><name><name pos:line="3" pos:column="20">m_list<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">.<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">end<pos:position pos:line="3" pos:column="30"/></name></name><argument_list pos:line="3" pos:column="30">()<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="33"/></condition><then pos:line="3" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">m_listItr<pos:position pos:line="4" pos:column="16"/></name></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="5" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">m_listItr<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <call><name><name pos:line="6" pos:column="17">m_list<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">begin<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">update_itr<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">()<pos:position pos:line="8" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

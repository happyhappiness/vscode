<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_243.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">XmlRpc<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">process<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name><modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">inBuffer<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">uint32_t<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">length<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">slot_write<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">slotWrite<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <block pos:line="2" pos:column="78">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">xmlrpc_env<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">localEnv<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">xmlrpc_env_init<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><operator pos:line="4" pos:column="19">&amp;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="20">localEnv<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">xmlrpc_mem_block<pos:position pos:line="6" pos:column="19"/></name><modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type> <name pos:line="6" pos:column="21">memblock<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><call><name pos:line="6" pos:column="32">xmlrpc_registry_process_call<pos:position pos:line="6" pos:column="60"/></name><argument_list pos:line="6" pos:column="60">(<argument><expr><operator pos:line="6" pos:column="61">&amp;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="62">localEnv<pos:position pos:line="6" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="72">(<pos:position pos:line="6" pos:column="73"/></operator><name pos:line="6" pos:column="73">xmlrpc_registry<pos:position pos:line="6" pos:column="88"/></name><operator pos:line="6" pos:column="88">*<pos:position pos:line="6" pos:column="89"/></operator><operator pos:line="6" pos:column="89">)<pos:position pos:line="6" pos:column="90"/></operator><name pos:line="6" pos:column="90">m_registry<pos:position pos:line="6" pos:column="100"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="102">NULL<pos:position pos:line="6" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="108">inBuffer<pos:position pos:line="6" pos:column="116"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="118">length<pos:position pos:line="6" pos:column="124"/></name></expr></argument>)<pos:position pos:line="6" pos:column="125"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="126"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">bool<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">result<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><call><name pos:line="8" pos:column="17">slotWrite<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><specifier pos:line="8" pos:column="28">const<pos:position pos:line="8" pos:column="33"/></specifier> <name pos:line="8" pos:column="34">char<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">*<pos:position pos:line="8" pos:column="39"/></operator><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator><call><name pos:line="8" pos:column="40">xmlrpc_mem_block_contents<pos:position pos:line="8" pos:column="65"/></name><argument_list pos:line="8" pos:column="65">(<argument><expr><name pos:line="8" pos:column="66">memblock<pos:position pos:line="8" pos:column="74"/></name></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr></argument>,
                          <argument><expr><call><name pos:line="9" pos:column="27">xmlrpc_mem_block_size<pos:position pos:line="9" pos:column="48"/></name><argument_list pos:line="9" pos:column="48">(<argument><expr><name pos:line="9" pos:column="49">memblock<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="60"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">xmlrpc_mem_block_free<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">memblock<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">xmlrpc_env_clean<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="21">localEnv<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">result<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

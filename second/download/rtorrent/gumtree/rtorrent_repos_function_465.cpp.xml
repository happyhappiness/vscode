<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_465.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DownloadList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">close_throw<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">Download<pos:position pos:line="2" pos:column="35"/></name><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">download<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list> <block pos:line="2" pos:column="47">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">check_contains<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">download<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="28"/></expr_stmt>

  <comment type="line" pos:line="5" pos:column="3">// When pause gets called it will clear the initial hash check state</comment>
  <comment type="line" pos:line="6" pos:column="3">// and set hash failed. This should ensure hashing doesn't restart</comment>
  <comment type="line" pos:line="7" pos:column="3">// until resume gets called.</comment>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">pause<pos:position pos:line="8" pos:column="8"/></name><argument_list pos:line="8" pos:column="8">(<argument><expr><name pos:line="8" pos:column="9">download<pos:position pos:line="8" pos:column="17"/></name></expr></argument>)<pos:position pos:line="8" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

  <comment type="line" pos:line="10" pos:column="3">// Check for is_open after pause due to hashing.</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><call><name><name pos:line="11" pos:column="8">download<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">is_open<pos:position pos:line="11" pos:column="25"/></name></name><argument_list pos:line="11" pos:column="25">()<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
    <block type="pseudo"><return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return></block></then></if>

  <comment type="line" pos:line="14" pos:column="3">// Save the torrent on close, this covers shutdown and if a torrent</comment>
  <comment type="line" pos:line="15" pos:column="3">// is manually closed which would clear the progress data. For</comment>
  <comment type="line" pos:line="16" pos:column="3">// better crash protection, save regulary in addition to this.</comment>
  <comment type="line" pos:line="17" pos:column="3">//</comment>
  <comment type="line" pos:line="18" pos:column="3">// Used to be in pause, but this was wrong for rehashing etc.</comment>
  <comment type="line" pos:line="19" pos:column="3">//</comment>
  <comment type="line" pos:line="20" pos:column="3">// Reconsider this save. Should be done explicitly when shutting down.</comment>
  <comment type="line" pos:line="21" pos:column="3">//control-&gt;core()-&gt;download_store()-&gt;save(download);</comment>

  <expr_stmt><expr><call><name><name pos:line="23" pos:column="3">download<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">download<pos:position pos:line="23" pos:column="21"/></name></name><argument_list pos:line="23" pos:column="21">()<pos:position pos:line="23" pos:column="23"/></argument_list></call><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><call><name pos:line="23" pos:column="25">close<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">()<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><call><name><name pos:line="25" pos:column="8">download<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">is_hash_failed<pos:position pos:line="25" pos:column="32"/></name></name><argument_list pos:line="25" pos:column="32">()<pos:position pos:line="25" pos:column="34"/></argument_list></call> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator> <call><name><name pos:line="25" pos:column="38">rpc<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">::<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">call_command_d_value<pos:position pos:line="25" pos:column="63"/></name></name><argument_list pos:line="25" pos:column="63">(<argument><expr><literal type="string" pos:line="25" pos:column="64">"d.get_hashing"<pos:position pos:line="25" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="81">download<pos:position pos:line="25" pos:column="89"/></name></expr></argument>)<pos:position pos:line="25" pos:column="90"/></argument_list></call> <operator pos:line="25" pos:column="91">!=<pos:position pos:line="25" pos:column="93"/></operator> <name><name pos:line="25" pos:column="94">Download<pos:position pos:line="25" pos:column="102"/></name><operator pos:line="25" pos:column="102">::<pos:position pos:line="25" pos:column="104"/></operator><name pos:line="25" pos:column="104">variable_hashing_stopped<pos:position pos:line="25" pos:column="128"/></name></name></expr>)<pos:position pos:line="25" pos:column="129"/></condition><then pos:line="25" pos:column="129">
    <block type="pseudo"><throw pos:line="26" pos:column="5">throw <expr><call><name><name pos:line="26" pos:column="11">torrent<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">::<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">internal_error<pos:position pos:line="26" pos:column="34"/></name></name><argument_list pos:line="26" pos:column="34">(<argument><expr><literal type="string" pos:line="26" pos:column="35">"DownloadList::close_throw(...) called but we're going into a hashing loop."<pos:position pos:line="26" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="113"/></throw></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="28" pos:column="3">std<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">::<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">for_each<pos:position pos:line="28" pos:column="16"/></name></name><argument_list pos:line="28" pos:column="16">(<argument><expr><call><name pos:line="28" pos:column="17">slot_map_hash_removed<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">()<pos:position pos:line="28" pos:column="40"/></argument_list></call><operator pos:line="28" pos:column="40">.<pos:position pos:line="28" pos:column="41"/></operator><call><name pos:line="28" pos:column="41">begin<pos:position pos:line="28" pos:column="46"/></name><argument_list pos:line="28" pos:column="46">()<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="50">slot_map_hash_removed<pos:position pos:line="28" pos:column="71"/></name><argument_list pos:line="28" pos:column="71">()<pos:position pos:line="28" pos:column="73"/></argument_list></call><operator pos:line="28" pos:column="73">.<pos:position pos:line="28" pos:column="74"/></operator><call><name pos:line="28" pos:column="74">end<pos:position pos:line="28" pos:column="77"/></name><argument_list pos:line="28" pos:column="77">()<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="81">download_list_call<pos:position pos:line="28" pos:column="99"/></name><argument_list pos:line="28" pos:column="99">(<argument><expr><name pos:line="28" pos:column="100">download<pos:position pos:line="28" pos:column="108"/></name></expr></argument>)<pos:position pos:line="28" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="111"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="29" pos:column="3">std<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">::<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">for_each<pos:position pos:line="29" pos:column="16"/></name></name><argument_list pos:line="29" pos:column="16">(<argument><expr><call><name pos:line="29" pos:column="17">slot_map_close<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">()<pos:position pos:line="29" pos:column="33"/></argument_list></call><operator pos:line="29" pos:column="33">.<pos:position pos:line="29" pos:column="34"/></operator><call><name pos:line="29" pos:column="34">begin<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">()<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="43">slot_map_close<pos:position pos:line="29" pos:column="57"/></name><argument_list pos:line="29" pos:column="57">()<pos:position pos:line="29" pos:column="59"/></argument_list></call><operator pos:line="29" pos:column="59">.<pos:position pos:line="29" pos:column="60"/></operator><call><name pos:line="29" pos:column="60">end<pos:position pos:line="29" pos:column="63"/></name><argument_list pos:line="29" pos:column="63">()<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="67">download_list_call<pos:position pos:line="29" pos:column="85"/></name><argument_list pos:line="29" pos:column="85">(<argument><expr><name pos:line="29" pos:column="86">download<pos:position pos:line="29" pos:column="94"/></name></expr></argument>)<pos:position pos:line="29" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="97"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

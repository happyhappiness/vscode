<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_28.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">push<pos:position pos:line="1" pos:column="10"/></name><parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><specifier pos:line="1" pos:column="11">const<pos:position pos:line="1" pos:column="16"/></specifier> <name pos:line="1" pos:column="17">value_type<pos:position pos:line="1" pos:column="27"/></name><modifier pos:line="1" pos:column="27">&amp;<pos:position pos:line="1" pos:column="32"/></modifier></type> <name pos:line="1" pos:column="29">value<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list> <block pos:line="1" pos:column="36">{
    <expr_stmt><expr><call><name><name pos:line="2" pos:column="5">base_type<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">push_back<pos:position pos:line="2" pos:column="25"/></name></name><argument_list pos:line="2" pos:column="25">(<argument><expr><name pos:line="2" pos:column="26">value<pos:position pos:line="2" pos:column="31"/></name></expr></argument>)<pos:position pos:line="2" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">std<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">push_heap<pos:position pos:line="3" pos:column="19"/></name></name><argument_list pos:line="3" pos:column="19">(<argument><expr><call><name pos:line="3" pos:column="20">begin<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">()<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="29">end<pos:position pos:line="3" pos:column="32"/></name><argument_list pos:line="3" pos:column="32">()<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="3" pos:column="36">m_compare<pos:position pos:line="3" pos:column="45"/></name></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="4" pos:column="4"/></block></function></unit>

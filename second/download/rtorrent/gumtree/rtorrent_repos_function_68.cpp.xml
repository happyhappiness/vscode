<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_68.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name pos:line="2" pos:column="1">apply_f_path<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">torrent<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">File<pos:position pos:line="2" pos:column="27"/></name></name><modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">file<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list> <block pos:line="2" pos:column="35">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">file<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">path<pos:position pos:line="3" pos:column="17"/></name></name><argument_list pos:line="3" pos:column="17">()<pos:position pos:line="3" pos:column="19"/></argument_list></call><operator pos:line="3" pos:column="19">-&gt;<pos:position pos:line="3" pos:column="24"/></operator><call><name pos:line="3" pos:column="21">empty<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">()<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><call><name><name pos:line="4" pos:column="12">std<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">string<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></return></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">torrent<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">::<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">Object<pos:position pos:line="6" pos:column="18"/></name></name></type> <name pos:line="6" pos:column="19">resultRaw<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><operator pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></operator><call><name><name pos:line="6" pos:column="30">file<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">path<pos:position pos:line="6" pos:column="40"/></name></name><argument_list pos:line="6" pos:column="40">()<pos:position pos:line="6" pos:column="42"/></argument_list></call><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><call><name pos:line="6" pos:column="44">begin<pos:position pos:line="6" pos:column="49"/></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">torrent<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">::<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">Object<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">::<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">string_type<pos:position pos:line="7" pos:column="31"/></name></name><modifier pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></modifier></type> <name pos:line="7" pos:column="33">result<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><call><name><name pos:line="7" pos:column="42">resultRaw<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">.<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">as_string<pos:position pos:line="7" pos:column="61"/></name></name><argument_list pos:line="7" pos:column="61">()<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="64"/></decl_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name><name pos:line="9" pos:column="8">torrent<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">::<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">Path<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">::<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">const_iterator<pos:position pos:line="9" pos:column="37"/></name></name></type> <name pos:line="9" pos:column="38">itr<pos:position pos:line="9" pos:column="41"/></name> <init pos:line="9" pos:column="42">= <expr><operator pos:line="9" pos:column="44">++<pos:position pos:line="9" pos:column="46"/></operator><call><name><name pos:line="9" pos:column="46">file<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">path<pos:position pos:line="9" pos:column="56"/></name></name><argument_list pos:line="9" pos:column="56">()<pos:position pos:line="9" pos:column="58"/></argument_list></call><operator pos:line="9" pos:column="58">-&gt;<pos:position pos:line="9" pos:column="63"/></operator><call><name pos:line="9" pos:column="60">begin<pos:position pos:line="9" pos:column="65"/></name><argument_list pos:line="9" pos:column="65">()<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="69">last<pos:position pos:line="9" pos:column="73"/></name> <init pos:line="9" pos:column="74">= <expr><call><name><name pos:line="9" pos:column="76">file<pos:position pos:line="9" pos:column="80"/></name><operator pos:line="9" pos:column="80">-&gt;<pos:position pos:line="9" pos:column="85"/></operator><name pos:line="9" pos:column="82">path<pos:position pos:line="9" pos:column="86"/></name></name><argument_list pos:line="9" pos:column="86">()<pos:position pos:line="9" pos:column="88"/></argument_list></call><operator pos:line="9" pos:column="88">-&gt;<pos:position pos:line="9" pos:column="93"/></operator><call><name pos:line="9" pos:column="90">end<pos:position pos:line="9" pos:column="93"/></name><argument_list pos:line="9" pos:column="93">()<pos:position pos:line="9" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="96"/></init> <condition><expr><name pos:line="9" pos:column="97">itr<pos:position pos:line="9" pos:column="100"/></name> <operator pos:line="9" pos:column="101">!=<pos:position pos:line="9" pos:column="103"/></operator> <name pos:line="9" pos:column="104">last<pos:position pos:line="9" pos:column="108"/></name></expr>;<pos:position pos:line="9" pos:column="109"/></condition> <incr><expr><name pos:line="9" pos:column="110">itr<pos:position pos:line="9" pos:column="113"/></name><operator pos:line="9" pos:column="113">++<pos:position pos:line="9" pos:column="115"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="116"/></control>
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">+=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="char" pos:line="10" pos:column="15">'/'<pos:position pos:line="10" pos:column="18"/></literal> <operator pos:line="10" pos:column="19">+<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">itr<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt></block></for>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">resultRaw<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_364.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementPeerList<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">update_itr<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list> <block pos:line="2" pos:column="31">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">m_windowList<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">mark_dirty<pos:position pos:line="3" pos:column="27"/></name></name><argument_list pos:line="3" pos:column="27">()<pos:position pos:line="3" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">m_elementInfo<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">set_object<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">(<argument><expr><ternary><condition><expr><name pos:line="4" pos:column="29">m_listItr<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">!=<pos:position pos:line="4" pos:column="41"/></operator> <call><name><name pos:line="4" pos:column="42">m_list<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">.<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">end<pos:position pos:line="4" pos:column="52"/></name></name><argument_list pos:line="4" pos:column="52">()<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="56"/></condition><then pos:line="4" pos:column="56"> <expr><operator pos:line="4" pos:column="57">&amp;<pos:position pos:line="4" pos:column="62"/></operator><operator pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="59">m_listItr<pos:position pos:line="4" pos:column="68"/></name></expr> <pos:position pos:line="4" pos:column="69"/></then><else pos:line="4" pos:column="69">: <expr><name pos:line="4" pos:column="71">NULL<pos:position pos:line="4" pos:column="75"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="77"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_665.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name><name pos:line="1" pos:column="6">pair<pos:position pos:line="1" pos:column="10"/></name><argument_list type="generic" pos:line="1" pos:column="10">&lt;<argument><expr><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="23"/></argument_list></name></name></type>
<name><name pos:line="2" pos:column="1">Canvas<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">term_size<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <block pos:line="2" pos:column="21">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">winsize<pos:position pos:line="3" pos:column="17"/></name></name></type> <name pos:line="3" pos:column="18">ws<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">ioctl<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">STDIN_FILENO<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">TIOCGWINSZ<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="40">ws<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call> <operator pos:line="5" pos:column="44">==<pos:position pos:line="5" pos:column="46"/></operator> <literal type="number" pos:line="5" pos:column="47">0<pos:position pos:line="5" pos:column="48"/></literal></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><call><name><name pos:line="6" pos:column="12">std<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">::<pos:position pos:line="6" pos:column="17"/></operator><name><name pos:line="6" pos:column="17">pair<pos:position pos:line="6" pos:column="21"/></name><argument_list type="generic" pos:line="6" pos:column="21">&lt;<argument><expr><name pos:line="6" pos:column="22">int<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">int<pos:position pos:line="6" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="34"/></argument_list></name></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name><name pos:line="6" pos:column="32">ws<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">.<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">ws_col<pos:position pos:line="6" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="43">ws<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">.<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">ws_row<pos:position pos:line="6" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></return></block></then>
  <else pos:line="7" pos:column="3">else
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><call><name><name pos:line="8" pos:column="12">std<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">::<pos:position pos:line="8" pos:column="17"/></operator><name><name pos:line="8" pos:column="17">pair<pos:position pos:line="8" pos:column="21"/></name><argument_list type="generic" pos:line="8" pos:column="21">&lt;<argument><expr><name pos:line="8" pos:column="22">int<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">int<pos:position pos:line="8" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="34"/></argument_list></name></name><argument_list pos:line="8" pos:column="31">(<argument><expr><literal type="number" pos:line="8" pos:column="32">80<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="36">24<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></return></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

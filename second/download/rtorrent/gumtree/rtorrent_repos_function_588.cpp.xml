<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_588.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Manager<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">try_create_download_expand<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name><name pos:line="2" pos:column="43">std<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">string<pos:position pos:line="2" pos:column="54"/></name></name><modifier pos:line="2" pos:column="54">&amp;<pos:position pos:line="2" pos:column="59"/></modifier></type> <name pos:line="2" pos:column="56">uri<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">flags<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">command_list_type<pos:position pos:line="2" pos:column="89"/></name></type> <name pos:line="2" pos:column="90">commands<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="99"/></parameter_list> <block pos:line="2" pos:column="100">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">std<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">::<pos:position pos:line="3" pos:column="8"/></operator><name><name pos:line="3" pos:column="8">vector<pos:position pos:line="3" pos:column="14"/></name><argument_list type="generic" pos:line="3" pos:column="14">&lt;<argument><expr><name><name pos:line="3" pos:column="15">std<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">::<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">string<pos:position pos:line="3" pos:column="26"/></name></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="30"/></argument_list></name></name></type> <name pos:line="3" pos:column="28">paths<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">paths<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">.<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">reserve<pos:position pos:line="4" pos:column="16"/></name></name><argument_list pos:line="4" pos:column="16">(<argument><expr><literal type="number" pos:line="4" pos:column="17">256<pos:position pos:line="4" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">path_expand<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><operator pos:line="6" pos:column="15">&amp;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="16">paths<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">uri<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">flags<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&amp;<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="15">create_tied<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
    <block type="pseudo"><for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><decl><type><name><name pos:line="9" pos:column="10">std<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">::<pos:position pos:line="9" pos:column="15"/></operator><name><name pos:line="9" pos:column="15">vector<pos:position pos:line="9" pos:column="21"/></name><argument_list type="generic" pos:line="9" pos:column="21">&lt;<argument><expr><name><name pos:line="9" pos:column="22">std<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">::<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">string<pos:position pos:line="9" pos:column="33"/></name></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="37"/></argument_list></name><operator pos:line="9" pos:column="34">::<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">iterator<pos:position pos:line="9" pos:column="44"/></name></name></type> <name pos:line="9" pos:column="45">itr<pos:position pos:line="9" pos:column="48"/></name> <init pos:line="9" pos:column="49">= <expr><call><name><name pos:line="9" pos:column="51">paths<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">.<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">begin<pos:position pos:line="9" pos:column="62"/></name></name><argument_list pos:line="9" pos:column="62">()<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></init> <condition><expr><name pos:line="9" pos:column="66">itr<pos:position pos:line="9" pos:column="69"/></name> <operator pos:line="9" pos:column="70">!=<pos:position pos:line="9" pos:column="72"/></operator> <call><name><name pos:line="9" pos:column="73">paths<pos:position pos:line="9" pos:column="78"/></name><operator pos:line="9" pos:column="78">.<pos:position pos:line="9" pos:column="79"/></operator><name pos:line="9" pos:column="79">end<pos:position pos:line="9" pos:column="82"/></name></name><argument_list pos:line="9" pos:column="82">()<pos:position pos:line="9" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="85"/></condition> <incr/>)<pos:position pos:line="9" pos:column="87"/></control>
      <block type="pseudo"><if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><call><name><name pos:line="10" pos:column="11">std<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">find_if<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">(<argument><expr><call><name><name pos:line="10" pos:column="24">m_downloadList<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">begin<pos:position pos:line="10" pos:column="45"/></name></name><argument_list pos:line="10" pos:column="45">()<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="49">m_downloadList<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">-&gt;<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="65">end<pos:position pos:line="10" pos:column="68"/></name></name><argument_list pos:line="10" pos:column="68">()<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="72">rak<pos:position pos:line="10" pos:column="75"/></name><operator pos:line="10" pos:column="75">::<pos:position pos:line="10" pos:column="77"/></operator><name pos:line="10" pos:column="77">bind1st<pos:position pos:line="10" pos:column="84"/></name></name><argument_list pos:line="10" pos:column="84">(<argument><expr><call><name><name pos:line="10" pos:column="85">std<pos:position pos:line="10" pos:column="88"/></name><operator pos:line="10" pos:column="88">::<pos:position pos:line="10" pos:column="90"/></operator><name pos:line="10" pos:column="90">ptr_fun<pos:position pos:line="10" pos:column="97"/></name></name><argument_list pos:line="10" pos:column="97">(<argument><expr><operator pos:line="10" pos:column="98">&amp;<pos:position pos:line="10" pos:column="103"/></operator><name pos:line="10" pos:column="99">manager_equal_tied<pos:position pos:line="10" pos:column="117"/></name></expr></argument>)<pos:position pos:line="10" pos:column="118"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="10" pos:column="120">*<pos:position pos:line="10" pos:column="121"/></operator><name pos:line="10" pos:column="121">itr<pos:position pos:line="10" pos:column="124"/></name></expr></argument>)<pos:position pos:line="10" pos:column="125"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="126"/></argument_list></call>
          <operator pos:line="11" pos:column="11">!=<pos:position pos:line="11" pos:column="13"/></operator> <call><name><name pos:line="11" pos:column="14">m_downloadList<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">end<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">()<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">itr<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name><name pos:line="12" pos:column="15">paths<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">erase<pos:position pos:line="12" pos:column="26"/></name></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">itr<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt></block></then>
      <else pos:line="13" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">itr<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">++<pos:position pos:line="14" pos:column="14"/></operator></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt></block></else></if></block></for></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><call><name><name pos:line="16" pos:column="8">paths<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">empty<pos:position pos:line="16" pos:column="19"/></name></name><argument_list pos:line="16" pos:column="19">()<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
    <block type="pseudo"><for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><decl><type><name><name pos:line="17" pos:column="10">std<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">::<pos:position pos:line="17" pos:column="15"/></operator><name><name pos:line="17" pos:column="15">vector<pos:position pos:line="17" pos:column="21"/></name><argument_list type="generic" pos:line="17" pos:column="21">&lt;<argument><expr><name><name pos:line="17" pos:column="22">std<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">::<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">string<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>&gt;<pos:position pos:line="17" pos:column="37"/></argument_list></name><operator pos:line="17" pos:column="34">::<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">iterator<pos:position pos:line="17" pos:column="44"/></name></name></type> <name pos:line="17" pos:column="45">itr<pos:position pos:line="17" pos:column="48"/></name> <init pos:line="17" pos:column="49">= <expr><call><name><name pos:line="17" pos:column="51">paths<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">begin<pos:position pos:line="17" pos:column="62"/></name></name><argument_list pos:line="17" pos:column="62">()<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="65"/></init> <condition><expr><name pos:line="17" pos:column="66">itr<pos:position pos:line="17" pos:column="69"/></name> <operator pos:line="17" pos:column="70">!=<pos:position pos:line="17" pos:column="72"/></operator> <call><name><name pos:line="17" pos:column="73">paths<pos:position pos:line="17" pos:column="78"/></name><operator pos:line="17" pos:column="78">.<pos:position pos:line="17" pos:column="79"/></operator><name pos:line="17" pos:column="79">end<pos:position pos:line="17" pos:column="82"/></name></name><argument_list pos:line="17" pos:column="82">()<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="85"/></condition> <incr><expr><operator pos:line="17" pos:column="86">++<pos:position pos:line="17" pos:column="88"/></operator><name pos:line="17" pos:column="88">itr<pos:position pos:line="17" pos:column="91"/></name></expr></incr>)<pos:position pos:line="17" pos:column="92"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">try_create_download<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><operator pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">itr<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">flags<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">commands<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt></block></for></block></then>

  <else pos:line="20" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">try_create_download<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">uri<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">flags<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">commands<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt></block></else></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_142.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SignalHandler<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">caught<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">signum<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list> <block pos:line="2" pos:column="35">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">(<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">unsigned<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">)<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">signum<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&gt;=<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="27">HIGHEST_SIGNAL<pos:position pos:line="3" pos:column="41"/></name></expr>)<pos:position pos:line="3" pos:column="42"/></condition><then pos:line="3" pos:column="42">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">std<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">::<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">logic_error<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">(<argument><expr><literal type="string" pos:line="4" pos:column="28">"SignalHandler::caught(...) received invalid signal from the kernel, bork bork bork"<pos:position pos:line="4" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="114"/></throw></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">m_handlers<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">signum<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name><operator pos:line="6" pos:column="25">.<pos:position pos:line="6" pos:column="26"/></operator><call><name pos:line="6" pos:column="26">empty<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
    <block type="pseudo"><throw pos:line="7" pos:column="5">throw <expr><call><name><name pos:line="7" pos:column="11">std<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">::<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">logic_error<pos:position pos:line="7" pos:column="27"/></name></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="string" pos:line="7" pos:column="28">"SignalHandler::caught(...) received a signal we don't have a handler for"<pos:position pos:line="7" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="104"/></throw></block></then></if>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">m_handlers<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">signum<pos:position pos:line="9" pos:column="20"/></name></expr>]<pos:position pos:line="9" pos:column="21"/></index></name><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

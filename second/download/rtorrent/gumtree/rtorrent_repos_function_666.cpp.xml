<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_666.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowDownloadTransferList<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">redraw<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list> <block pos:line="2" pos:column="38">{
  <comment type="line" pos:line="3" pos:column="3">// TODO: Make this depend on tracker signal.</comment>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">m_slotSchedule<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">this<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">cachedTime<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">+<pos:position pos:line="4" pos:column="37"/></operator> <call><name><name pos:line="4" pos:column="38">rak<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">::<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">timer<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">::<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="50">from_seconds<pos:position pos:line="4" pos:column="62"/></name></name><argument_list pos:line="4" pos:column="62">(<argument><expr><literal type="number" pos:line="4" pos:column="63">1<pos:position pos:line="4" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call><operator pos:line="4" pos:column="65">)<pos:position pos:line="4" pos:column="66"/></operator><operator pos:line="4" pos:column="66">.<pos:position pos:line="4" pos:column="67"/></operator><call><name pos:line="4" pos:column="67">round_seconds<pos:position pos:line="4" pos:column="80"/></name><argument_list pos:line="4" pos:column="80">()<pos:position pos:line="4" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="5" pos:column="3">m_canvas<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">erase<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name><name pos:line="7" pos:column="7">m_canvas<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">height<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="28">3<pos:position pos:line="7" pos:column="29"/></literal> <operator pos:line="7" pos:column="30">||<pos:position pos:line="7" pos:column="32"/></operator> <call><name><name pos:line="7" pos:column="33">m_canvas<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">width<pos:position pos:line="7" pos:column="48"/></name></name><argument_list pos:line="7" pos:column="48">()<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">&lt;<pos:position pos:line="7" pos:column="55"/></operator> <literal type="number" pos:line="7" pos:column="53">18<pos:position pos:line="7" pos:column="55"/></literal></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name><name pos:line="10" pos:column="9">torrent<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">::<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">TransferList<pos:position pos:line="10" pos:column="30"/></name></name><modifier pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></modifier></type> <name pos:line="10" pos:column="32">transfers<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><call><name><name pos:line="10" pos:column="44">m_download<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">download<pos:position pos:line="10" pos:column="64"/></name></name><argument_list pos:line="10" pos:column="64">()<pos:position pos:line="10" pos:column="66"/></argument_list></call><operator pos:line="10" pos:column="66">-&gt;<pos:position pos:line="10" pos:column="71"/></operator><call><name pos:line="10" pos:column="68">transfer_list<pos:position pos:line="10" pos:column="81"/></name><argument_list pos:line="10" pos:column="81">()<pos:position pos:line="10" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="84"/></decl_stmt>

  <expr_stmt><expr><call><name><name pos:line="12" pos:column="3">m_canvas<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">print<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="number" pos:line="12" pos:column="19">2<pos:position pos:line="12" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"Transfer list: [Size %i]"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="53">transfers<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">-&gt;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="64">size<pos:position pos:line="12" pos:column="68"/></name></name><argument_list pos:line="12" pos:column="68">()<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">torrent<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">::<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">TransferList<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">::<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">const_iterator<pos:position pos:line="14" pos:column="40"/></name></name></type> <name pos:line="14" pos:column="41">itr<pos:position pos:line="14" pos:column="44"/></name> <init pos:line="14" pos:column="45">= <expr><call><name><name pos:line="14" pos:column="47">transfers<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">begin<pos:position pos:line="14" pos:column="63"/></name></name><argument_list pos:line="14" pos:column="63">()<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="66"/></decl_stmt>

  <comment type="line" pos:line="16" pos:column="3">// This is just for testing and the layout and included information</comment>
  <comment type="line" pos:line="17" pos:column="3">// is just something i threw in there, someone really should</comment>
  <comment type="line" pos:line="18" pos:column="3">// prettify this. (This is a very subtle hint)</comment>

  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">unsigned<pos:position pos:line="20" pos:column="16"/></name> <name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">y<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="27"/></init> <condition><expr><name pos:line="20" pos:column="28">y<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">&lt;<pos:position pos:line="20" pos:column="34"/></operator> <call><name><name pos:line="20" pos:column="32">m_canvas<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">height<pos:position pos:line="20" pos:column="48"/></name></name><argument_list pos:line="20" pos:column="48">()<pos:position pos:line="20" pos:column="50"/></argument_list></call> <operator pos:line="20" pos:column="51">&amp;&amp;<pos:position pos:line="20" pos:column="61"/></operator> <name pos:line="20" pos:column="54">itr<pos:position pos:line="20" pos:column="57"/></name> <operator pos:line="20" pos:column="58">!=<pos:position pos:line="20" pos:column="60"/></operator> <call><name><name pos:line="20" pos:column="61">transfers<pos:position pos:line="20" pos:column="70"/></name><operator pos:line="20" pos:column="70">-&gt;<pos:position pos:line="20" pos:column="75"/></operator><name pos:line="20" pos:column="72">end<pos:position pos:line="20" pos:column="75"/></name></name><argument_list pos:line="20" pos:column="75">()<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></condition> <incr><expr><operator pos:line="20" pos:column="79">++<pos:position pos:line="20" pos:column="81"/></operator><name pos:line="20" pos:column="81">y<pos:position pos:line="20" pos:column="82"/></name></expr><operator pos:line="20" pos:column="82">,<pos:position pos:line="20" pos:column="83"/></operator> <expr><operator pos:line="20" pos:column="84">++<pos:position pos:line="20" pos:column="86"/></operator><name pos:line="20" pos:column="86">itr<pos:position pos:line="20" pos:column="89"/></name></expr></incr>)<pos:position pos:line="20" pos:column="90"/></control> <block pos:line="20" pos:column="91">{
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">m_canvas<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">print<pos:position pos:line="21" pos:column="20"/></name></name><argument_list pos:line="21" pos:column="20">(<argument><expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="24">y<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"%5u [P: %u F: %u]"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name><operator pos:line="21" pos:column="48">(<pos:position pos:line="21" pos:column="49"/></operator><operator pos:line="21" pos:column="49">*<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">itr<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">)<pos:position pos:line="21" pos:column="54"/></operator><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">index<pos:position pos:line="21" pos:column="61"/></name></name><argument_list pos:line="21" pos:column="61">()<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name><operator pos:line="21" pos:column="65">(<pos:position pos:line="21" pos:column="66"/></operator><operator pos:line="21" pos:column="66">*<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="67">itr<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">)<pos:position pos:line="21" pos:column="71"/></operator><operator pos:line="21" pos:column="71">-&gt;<pos:position pos:line="21" pos:column="76"/></operator><name pos:line="21" pos:column="73">priority<pos:position pos:line="21" pos:column="81"/></name></name><argument_list pos:line="21" pos:column="81">()<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><call><name><operator pos:line="21" pos:column="85">(<pos:position pos:line="21" pos:column="86"/></operator><operator pos:line="21" pos:column="86">*<pos:position pos:line="21" pos:column="87"/></operator><name pos:line="21" pos:column="87">itr<pos:position pos:line="21" pos:column="90"/></name><operator pos:line="21" pos:column="90">)<pos:position pos:line="21" pos:column="91"/></operator><operator pos:line="21" pos:column="91">-&gt;<pos:position pos:line="21" pos:column="96"/></operator><name pos:line="21" pos:column="93">failed<pos:position pos:line="21" pos:column="99"/></name></name><argument_list pos:line="21" pos:column="99">()<pos:position pos:line="21" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="103"/></expr_stmt>

    <comment type="line" pos:line="23" pos:column="5">// Handle window size.</comment>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><decl><type><name><name pos:line="24" pos:column="10">torrent<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">::<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">BlockList<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">::<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">const_iterator<pos:position pos:line="24" pos:column="44"/></name></name></type> <name pos:line="24" pos:column="45">bItr<pos:position pos:line="24" pos:column="49"/></name> <init pos:line="24" pos:column="50">= <expr><call><name><operator pos:line="24" pos:column="52">(<pos:position pos:line="24" pos:column="53"/></operator><operator pos:line="24" pos:column="53">*<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="54">itr<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">)<pos:position pos:line="24" pos:column="58"/></operator><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">begin<pos:position pos:line="24" pos:column="65"/></name></name><argument_list pos:line="24" pos:column="65">()<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="24" pos:column="69">bLast<pos:position pos:line="24" pos:column="74"/></name> <init pos:line="24" pos:column="75">= <expr><call><name><operator pos:line="24" pos:column="77">(<pos:position pos:line="24" pos:column="78"/></operator><operator pos:line="24" pos:column="78">*<pos:position pos:line="24" pos:column="79"/></operator><name pos:line="24" pos:column="79">itr<pos:position pos:line="24" pos:column="82"/></name><operator pos:line="24" pos:column="82">)<pos:position pos:line="24" pos:column="83"/></operator><operator pos:line="24" pos:column="83">-&gt;<pos:position pos:line="24" pos:column="88"/></operator><name pos:line="24" pos:column="85">end<pos:position pos:line="24" pos:column="88"/></name></name><argument_list pos:line="24" pos:column="88">()<pos:position pos:line="24" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="91"/></init> <condition><expr><name pos:line="24" pos:column="92">bItr<pos:position pos:line="24" pos:column="96"/></name> <operator pos:line="24" pos:column="97">!=<pos:position pos:line="24" pos:column="99"/></operator> <name pos:line="24" pos:column="100">bLast<pos:position pos:line="24" pos:column="105"/></name></expr>;<pos:position pos:line="24" pos:column="106"/></condition> <incr><expr><operator pos:line="24" pos:column="107">++<pos:position pos:line="24" pos:column="109"/></operator><name pos:line="24" pos:column="109">bItr<pos:position pos:line="24" pos:column="113"/></name></expr></incr>)<pos:position pos:line="24" pos:column="114"/></control> <block pos:line="24" pos:column="115">{
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><call><name><name pos:line="25" pos:column="11">m_canvas<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">get_x<pos:position pos:line="25" pos:column="26"/></name></name><argument_list pos:line="25" pos:column="26">()<pos:position pos:line="25" pos:column="28"/></argument_list></call> <operator pos:line="25" pos:column="29">&gt;=<pos:position pos:line="25" pos:column="34"/></operator> <call><name><name pos:line="25" pos:column="32">m_canvas<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">width<pos:position pos:line="25" pos:column="47"/></name></name><argument_list pos:line="25" pos:column="47">()<pos:position pos:line="25" pos:column="49"/></argument_list></call> <operator pos:line="25" pos:column="50">-<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">1<pos:position pos:line="25" pos:column="53"/></literal></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54"> <block pos:line="25" pos:column="55">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">++<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">y<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&gt;=<pos:position pos:line="26" pos:column="22"/></operator> <call><name><name pos:line="26" pos:column="20">m_canvas<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">height<pos:position pos:line="26" pos:column="36"/></name></name><argument_list pos:line="26" pos:column="36">()<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
          <block type="pseudo"><break pos:line="27" pos:column="11">break;<pos:position pos:line="27" pos:column="17"/></break></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="29" pos:column="9">m_canvas<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">move<pos:position pos:line="29" pos:column="23"/></name></name><argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="number" pos:line="29" pos:column="24">17<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">y<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>

      <decl_stmt><decl><type><name pos:line="32" pos:column="7">char<pos:position pos:line="32" pos:column="11"/></name></type> <name pos:line="32" pos:column="12">id<pos:position pos:line="32" pos:column="14"/></name></decl>;<pos:position pos:line="32" pos:column="15"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">chtype<pos:position pos:line="33" pos:column="13"/></name></type> <name pos:line="33" pos:column="14">attr<pos:position pos:line="33" pos:column="18"/></name> <init pos:line="33" pos:column="19">= <expr><name pos:line="33" pos:column="21">A_NORMAL<pos:position pos:line="33" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="30"/></decl_stmt>

      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><call><name><name pos:line="35" pos:column="11">bItr<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">is_finished<pos:position pos:line="35" pos:column="28"/></name></name><argument_list pos:line="35" pos:column="28">()<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31"> <block pos:line="35" pos:column="32">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">attr<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">A_REVERSE<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">id<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">key_id<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><call><name><name pos:line="37" pos:column="21">bItr<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">leader<pos:position pos:line="37" pos:column="33"/></name></name><argument_list pos:line="37" pos:column="33">()<pos:position pos:line="37" pos:column="35"/></argument_list></call><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><call><name pos:line="37" pos:column="37">const_peer_info<pos:position pos:line="37" pos:column="52"/></name><argument_list pos:line="37" pos:column="52">()<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
        
      }<pos:position pos:line="39" pos:column="8"/></block></then> <elseif pos:line="39" pos:column="9">else <if pos:line="39" pos:column="14">if <condition pos:line="39" pos:column="17">(<expr><call><name><name pos:line="39" pos:column="18">bItr<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">is_transfering<pos:position pos:line="39" pos:column="38"/></name></name><argument_list pos:line="39" pos:column="38">()<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41"> <block pos:line="39" pos:column="42">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">attr<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">A_BOLD<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">id<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">key_id<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><call><name><name pos:line="41" pos:column="21">bItr<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">-&gt;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="27">leader<pos:position pos:line="41" pos:column="33"/></name></name><argument_list pos:line="41" pos:column="33">()<pos:position pos:line="41" pos:column="35"/></argument_list></call><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><call><name pos:line="41" pos:column="37">const_peer_info<pos:position pos:line="41" pos:column="52"/></name><argument_list pos:line="41" pos:column="52">()<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>

      }<pos:position pos:line="43" pos:column="8"/></block></then></if></elseif> <elseif pos:line="43" pos:column="9">else <if pos:line="43" pos:column="14">if <condition pos:line="43" pos:column="17">(<expr><call><name><name pos:line="43" pos:column="18">bItr<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">queued<pos:position pos:line="43" pos:column="30"/></name></name><argument_list pos:line="43" pos:column="30">()<pos:position pos:line="43" pos:column="32"/></argument_list></call><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><call><name pos:line="43" pos:column="34">size<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">()<pos:position pos:line="43" pos:column="40"/></argument_list></call> <operator pos:line="43" pos:column="41">&gt;=<pos:position pos:line="43" pos:column="46"/></operator> <literal type="number" pos:line="43" pos:column="44">1<pos:position pos:line="43" pos:column="45"/></literal></expr>)<pos:position pos:line="43" pos:column="46"/></condition><then pos:line="43" pos:column="46"> <block pos:line="43" pos:column="47">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">id<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <call><name><name pos:line="44" pos:column="14">std<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">::<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">tolower<pos:position pos:line="44" pos:column="26"/></name></name><argument_list pos:line="44" pos:column="26">(<argument><expr><call><name pos:line="44" pos:column="27">key_id<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><call><name><name pos:line="44" pos:column="34">bItr<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">queued<pos:position pos:line="44" pos:column="46"/></name></name><argument_list pos:line="44" pos:column="46">()<pos:position pos:line="44" pos:column="48"/></argument_list></call><operator pos:line="44" pos:column="48">-&gt;<pos:position pos:line="44" pos:column="53"/></operator><call><name pos:line="44" pos:column="50">back<pos:position pos:line="44" pos:column="54"/></name><argument_list pos:line="44" pos:column="54">()<pos:position pos:line="44" pos:column="56"/></argument_list></call><operator pos:line="44" pos:column="56">-&gt;<pos:position pos:line="44" pos:column="61"/></operator><call><name pos:line="44" pos:column="58">const_peer_info<pos:position pos:line="44" pos:column="73"/></name><argument_list pos:line="44" pos:column="73">()<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="78"/></expr_stmt>

      }<pos:position pos:line="46" pos:column="8"/></block></then></if></elseif> <else pos:line="46" pos:column="9">else <block pos:line="46" pos:column="14">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">id<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="char" pos:line="47" pos:column="14">'.'<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="48" pos:column="8"/></block></else></if>

      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><call><name><name pos:line="50" pos:column="11">bItr<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">-&gt;<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="17">size_all<pos:position pos:line="50" pos:column="25"/></name></name><argument_list pos:line="50" pos:column="25">()<pos:position pos:line="50" pos:column="27"/></argument_list></call> <operator pos:line="50" pos:column="28">&gt;<pos:position pos:line="50" pos:column="32"/></operator> <literal type="number" pos:line="50" pos:column="30">1<pos:position pos:line="50" pos:column="31"/></literal></expr>)<pos:position pos:line="50" pos:column="32"/></condition><then pos:line="50" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">attr<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">|=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">A_UNDERLINE<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name><name pos:line="53" pos:column="7">m_canvas<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">print_char<pos:position pos:line="53" pos:column="27"/></name></name><argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">attr<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">|<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">id<pos:position pos:line="53" pos:column="37"/></name></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></for>
  }<pos:position pos:line="55" pos:column="4"/></block></for>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

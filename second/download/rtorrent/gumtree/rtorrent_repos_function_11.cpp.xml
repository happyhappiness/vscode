<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">path_expand<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">src<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">first<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">last<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <block pos:line="2" pos:column="55">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">src<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">==<pos:position pos:line="3" pos:column="14"/></operator> <literal type="char" pos:line="3" pos:column="15">'~'<pos:position pos:line="3" pos:column="18"/></literal></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19"> <block pos:line="3" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type> <name pos:line="4" pos:column="11">home<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><call><name><name pos:line="4" pos:column="18">std<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">::<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">getenv<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">(<argument><expr><literal type="string" pos:line="4" pos:column="30">"HOME"<pos:position pos:line="4" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">home<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
      <block type="pseudo"><return pos:line="7" pos:column="7">return <expr><name pos:line="7" pos:column="14">first<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">first<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">+=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">strlcpy<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">first<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">home<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="35">std<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">::<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">distance<pos:position pos:line="9" pos:column="48"/></name></name><argument_list pos:line="9" pos:column="48">(<argument><expr><name pos:line="9" pos:column="49">first<pos:position pos:line="9" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="56">last<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">first<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">&gt;<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="17">last<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><name pos:line="12" pos:column="14">last<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">src<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">++<pos:position pos:line="14" pos:column="10"/></operator></expr>;<pos:position pos:line="14" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <return pos:line="17" pos:column="3">return <expr><call><name><name pos:line="17" pos:column="10">std<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">::<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">min<pos:position pos:line="17" pos:column="18"/></name></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">first<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">+<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">strlcpy<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">first<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">src<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><call><name><name pos:line="17" pos:column="47">std<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">::<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">distance<pos:position pos:line="17" pos:column="60"/></name></name><argument_list pos:line="17" pos:column="60">(<argument><expr><name pos:line="17" pos:column="61">first<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="68">last<pos:position pos:line="17" pos:column="72"/></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="76">last<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="82"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_225.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">CommandScheduler<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">iterator<pos:position pos:line="1" pos:column="27"/></name></name></type>
<name><name pos:line="2" pos:column="1">CommandScheduler<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">insert<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">std<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">string<pos:position pos:line="2" pos:column="43"/></name></name><modifier pos:line="2" pos:column="43">&amp;<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="45">key<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">key<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">.<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">empty<pos:position pos:line="3" pos:column="16"/></name></name><argument_list pos:line="3" pos:column="16">()<pos:position pos:line="3" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">input_error<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">(<argument><expr><literal type="string" pos:line="4" pos:column="32">"Scheduler received an empty key."<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="68"/></throw></block></then></if>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">iterator<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">itr<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><call><name pos:line="6" pos:column="18">find<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">key<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">itr<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">end<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">()<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">itr<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name><name pos:line="9" pos:column="11">base_type<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">::<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">insert<pos:position pos:line="9" pos:column="28"/></name></name><argument_list pos:line="9" pos:column="28">(<argument><expr><call><name pos:line="9" pos:column="29">end<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">()<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">NULL<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then>
  <else pos:line="10" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="11" pos:column="5">delete<pos:position pos:line="11" pos:column="11"/></operator> <operator pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">itr<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt></block></else></if>

  <expr_stmt><expr><operator pos:line="13" pos:column="3">*<pos:position pos:line="13" pos:column="4"/></operator><name pos:line="13" pos:column="4">itr<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">new<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">CommandSchedulerItem<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">key<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name><operator pos:line="14" pos:column="3">(<pos:position pos:line="14" pos:column="4"/></operator><operator pos:line="14" pos:column="4">*<pos:position pos:line="14" pos:column="5"/></operator><name pos:line="14" pos:column="5">itr<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">)<pos:position pos:line="14" pos:column="9"/></operator><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">set_slot<pos:position pos:line="14" pos:column="19"/></name></name><argument_list pos:line="14" pos:column="19">(<argument><expr><call><name><name pos:line="14" pos:column="20">rak<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">::<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">bind_mem_fn<pos:position pos:line="14" pos:column="36"/></name></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">this<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="43">&amp;<pos:position pos:line="14" pos:column="48"/></operator><name><name pos:line="14" pos:column="44">CommandScheduler<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">::<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="62">call_item<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="73">*<pos:position pos:line="14" pos:column="74"/></operator><name pos:line="14" pos:column="74">itr<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">itr<pos:position pos:line="16" pos:column="13"/></name></expr>;<pos:position pos:line="16" pos:column="14"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

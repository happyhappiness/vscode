<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_485.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DownloadFactory<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">receive_load<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list> <block pos:line="2" pos:column="33">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">m_stream<pos:position pos:line="3" pos:column="15"/></name></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">internal_error<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><literal type="string" pos:line="4" pos:column="35">"DownloadFactory::load() called on an object with m_stream != NULL"<pos:position pos:line="4" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="104"/></throw></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name><name pos:line="6" pos:column="7">std<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">::<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">strncmp<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">(<argument><expr><call><name><name pos:line="6" pos:column="20">m_uri<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">.<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">c_str<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="35">"http://"<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="46">7<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call> <operator pos:line="6" pos:column="49">==<pos:position pos:line="6" pos:column="51"/></operator> <literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal> <operator pos:line="6" pos:column="54">||<pos:position pos:line="6" pos:column="56"/></operator>
      <call><name><name pos:line="7" pos:column="7">std<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">::<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">strncmp<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">(<argument><expr><call><name><name pos:line="7" pos:column="20">m_uri<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">c_str<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"https://"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="47">8<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call> <operator pos:line="7" pos:column="50">==<pos:position pos:line="7" pos:column="52"/></operator> <literal type="number" pos:line="7" pos:column="53">0<pos:position pos:line="7" pos:column="54"/></literal> <operator pos:line="7" pos:column="55">||<pos:position pos:line="7" pos:column="57"/></operator>
      <call><name><name pos:line="8" pos:column="7">std<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">::<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">strncmp<pos:position pos:line="8" pos:column="19"/></name></name><argument_list pos:line="8" pos:column="19">(<argument><expr><call><name><name pos:line="8" pos:column="20">m_uri<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">c_str<pos:position pos:line="8" pos:column="31"/></name></name><argument_list pos:line="8" pos:column="31">()<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"ftp://"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="45">6<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call> <operator pos:line="8" pos:column="48">==<pos:position pos:line="8" pos:column="50"/></operator> <literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53"> <block pos:line="8" pos:column="54">{
    <comment type="line" pos:line="9" pos:column="5">// Http handling here.</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">m_stream<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <operator pos:line="10" pos:column="16">new<pos:position pos:line="10" pos:column="19"/></operator> <name><name pos:line="10" pos:column="20">std<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">::<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">stringstream<pos:position pos:line="10" pos:column="37"/></name></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">HttpQueue<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">iterator<pos:position pos:line="11" pos:column="24"/></name></name></type> <name pos:line="11" pos:column="25">itr<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><call><name><name pos:line="11" pos:column="31">m_manager<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">http_queue<pos:position pos:line="11" pos:column="52"/></name></name><argument_list pos:line="11" pos:column="52">()<pos:position pos:line="11" pos:column="54"/></argument_list></call><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><call><name pos:line="11" pos:column="56">insert<pos:position pos:line="11" pos:column="62"/></name><argument_list pos:line="11" pos:column="62">(<argument><expr><name pos:line="11" pos:column="63">m_uri<pos:position pos:line="11" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="70">m_stream<pos:position pos:line="11" pos:column="78"/></name></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="80"/></decl_stmt>

    <expr_stmt><expr><call><name><operator pos:line="13" pos:column="5">(<pos:position pos:line="13" pos:column="6"/></operator><operator pos:line="13" pos:column="6">*<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">itr<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">)<pos:position pos:line="13" pos:column="11"/></operator><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">signal_done<pos:position pos:line="13" pos:column="24"/></name></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><call><name pos:line="13" pos:column="27">slots<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">()<pos:position pos:line="13" pos:column="34"/></argument_list></call><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><call><name pos:line="13" pos:column="35">push_front<pos:position pos:line="13" pos:column="45"/></name><argument_list pos:line="13" pos:column="45">(<argument><expr><call><name><name pos:line="13" pos:column="46">sigc<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">::<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">mem_fun<pos:position pos:line="13" pos:column="59"/></name></name><argument_list pos:line="13" pos:column="59">(<argument><expr><operator pos:line="13" pos:column="60">*<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="61">this<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="67">&amp;<pos:position pos:line="13" pos:column="72"/></operator><name><name pos:line="13" pos:column="68">DownloadFactory<pos:position pos:line="13" pos:column="83"/></name><operator pos:line="13" pos:column="83">::<pos:position pos:line="13" pos:column="85"/></operator><name pos:line="13" pos:column="85">receive_loaded<pos:position pos:line="13" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="102"/></expr_stmt>
    <expr_stmt><expr><call><name><operator pos:line="14" pos:column="5">(<pos:position pos:line="14" pos:column="6"/></operator><operator pos:line="14" pos:column="6">*<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">itr<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">)<pos:position pos:line="14" pos:column="11"/></operator><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">signal_failed<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><call><name pos:line="14" pos:column="29">slots<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><call><name pos:line="14" pos:column="37">push_front<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><call><name><name pos:line="14" pos:column="48">sigc<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">::<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">mem_fun<pos:position pos:line="14" pos:column="61"/></name></name><argument_list pos:line="14" pos:column="61">(<argument><expr><operator pos:line="14" pos:column="62">*<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">this<pos:position pos:line="14" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="69">&amp;<pos:position pos:line="14" pos:column="74"/></operator><name><name pos:line="14" pos:column="70">DownloadFactory<pos:position pos:line="14" pos:column="85"/></name><operator pos:line="14" pos:column="85">::<pos:position pos:line="14" pos:column="87"/></operator><name pos:line="14" pos:column="87">receive_failed<pos:position pos:line="14" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="104"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">m_variables<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><literal type="string" pos:line="16" pos:column="17">"tied_to_file"<pos:position pos:line="16" pos:column="31"/></literal></expr>]<pos:position pos:line="16" pos:column="32"/></index></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="35">(<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">int64_t<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator><literal type="boolean" pos:line="16" pos:column="44">false<pos:position pos:line="16" pos:column="49"/></literal></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>

  }<pos:position pos:line="18" pos:column="4"/></block></then> <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">std<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">::<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">fstream<pos:position pos:line="19" pos:column="17"/></name></name><modifier pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></modifier></type> <name pos:line="19" pos:column="19">stream<pos:position pos:line="19" pos:column="25"/></name> <init pos:line="19" pos:column="26">= <expr><operator pos:line="19" pos:column="28">new<pos:position pos:line="19" pos:column="31"/></operator> <call><name><name pos:line="19" pos:column="32">std<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">::<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">fstream<pos:position pos:line="19" pos:column="44"/></name></name><argument_list pos:line="19" pos:column="44">(<argument><expr><call><name><name pos:line="19" pos:column="45">rak<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">::<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">path_expand<pos:position pos:line="19" pos:column="61"/></name></name><argument_list pos:line="19" pos:column="61">(<argument><expr><name pos:line="19" pos:column="62">m_uri<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call><operator pos:line="19" pos:column="68">.<pos:position pos:line="19" pos:column="69"/></operator><call><name pos:line="19" pos:column="69">c_str<pos:position pos:line="19" pos:column="74"/></name><argument_list pos:line="19" pos:column="74">()<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="78">std<pos:position pos:line="19" pos:column="81"/></name><operator pos:line="19" pos:column="81">::<pos:position pos:line="19" pos:column="83"/></operator><name pos:line="19" pos:column="83">ios<pos:position pos:line="19" pos:column="86"/></name><operator pos:line="19" pos:column="86">::<pos:position pos:line="19" pos:column="88"/></operator><name pos:line="19" pos:column="88">in<pos:position pos:line="19" pos:column="90"/></name></name> <operator pos:line="19" pos:column="91">|<pos:position pos:line="19" pos:column="92"/></operator> <name><name pos:line="19" pos:column="93">std<pos:position pos:line="19" pos:column="96"/></name><operator pos:line="19" pos:column="96">::<pos:position pos:line="19" pos:column="98"/></operator><name pos:line="19" pos:column="98">ios<pos:position pos:line="19" pos:column="101"/></name><operator pos:line="19" pos:column="101">::<pos:position pos:line="19" pos:column="103"/></operator><name pos:line="19" pos:column="103">binary<pos:position pos:line="19" pos:column="109"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="110"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="111"/></decl_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">m_stream<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">stream<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name><name pos:line="22" pos:column="9">stream<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">is_open<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">receive_loaded<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">()<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt></block></then>
    <else pos:line="24" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="7">receive_failed<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><literal type="string" pos:line="25" pos:column="22">"Could not open file"<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt></block></else></if>
  }<pos:position pos:line="26" pos:column="4"/></block></else></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_341.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowDownloadChunksSeen<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">redraw<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list> <block pos:line="2" pos:column="36">{
  <comment type="line" pos:line="3" pos:column="3">// TODO: Make this depend on tracker signal.</comment>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">m_slotSchedule<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">this<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">cachedTime<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">+<pos:position pos:line="4" pos:column="37"/></operator> <call><name><name pos:line="4" pos:column="38">rak<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">::<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">timer<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">::<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="50">from_seconds<pos:position pos:line="4" pos:column="62"/></name></name><argument_list pos:line="4" pos:column="62">(<argument><expr><literal type="number" pos:line="4" pos:column="63">10<pos:position pos:line="4" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></call><operator pos:line="4" pos:column="66">)<pos:position pos:line="4" pos:column="67"/></operator><operator pos:line="4" pos:column="67">.<pos:position pos:line="4" pos:column="68"/></operator><call><name pos:line="4" pos:column="68">round_seconds<pos:position pos:line="4" pos:column="81"/></name><argument_list pos:line="4" pos:column="81">()<pos:position pos:line="4" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="5" pos:column="3">m_canvas<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">erase<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name><name pos:line="7" pos:column="7">m_canvas<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">height<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="28">3<pos:position pos:line="7" pos:column="29"/></literal> <operator pos:line="7" pos:column="30">||<pos:position pos:line="7" pos:column="32"/></operator> <call><name><name pos:line="7" pos:column="33">m_canvas<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">width<pos:position pos:line="7" pos:column="48"/></name></name><argument_list pos:line="7" pos:column="48">()<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">&lt;<pos:position pos:line="7" pos:column="55"/></operator> <literal type="number" pos:line="7" pos:column="53">18<pos:position pos:line="7" pos:column="55"/></literal></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="10" pos:column="3">m_canvas<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">print<pos:position pos:line="10" pos:column="18"/></name></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="number" pos:line="10" pos:column="19">2<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="25">"Chunks seen: [C/A/D %i/%i/%.2f]"<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>,
                  <argument><expr><operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">int<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator><call><name><name pos:line="11" pos:column="24">m_download<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">download<pos:position pos:line="11" pos:column="44"/></name></name><argument_list pos:line="11" pos:column="44">()<pos:position pos:line="11" pos:column="46"/></argument_list></call><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><call><name pos:line="11" pos:column="48">peers_complete<pos:position pos:line="11" pos:column="62"/></name><argument_list pos:line="11" pos:column="62">()<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></argument>,
                  <argument><expr><operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">int<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator><call><name><name pos:line="12" pos:column="24">m_download<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">download<pos:position pos:line="12" pos:column="44"/></name></name><argument_list pos:line="12" pos:column="44">()<pos:position pos:line="12" pos:column="46"/></argument_list></call><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><call><name pos:line="12" pos:column="48">peers_accounted<pos:position pos:line="12" pos:column="63"/></name><argument_list pos:line="12" pos:column="63">()<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name><name pos:line="13" pos:column="19">std<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">::<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">floor<pos:position pos:line="13" pos:column="29"/></name></name><argument_list pos:line="13" pos:column="29">(<argument><expr><call><name><name pos:line="13" pos:column="30">m_download<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">distributed_copies<pos:position pos:line="13" pos:column="60"/></name></name><argument_list pos:line="13" pos:column="60">()<pos:position pos:line="13" pos:column="62"/></argument_list></call> <operator pos:line="13" pos:column="63">*<pos:position pos:line="13" pos:column="64"/></operator> <literal type="number" pos:line="13" pos:column="65">100.0f<pos:position pos:line="13" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call> <operator pos:line="13" pos:column="73">/<pos:position pos:line="13" pos:column="74"/></operator> <literal type="number" pos:line="13" pos:column="75">100.0f<pos:position pos:line="13" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="83"/></expr_stmt>

  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">uint8_t<pos:position pos:line="15" pos:column="16"/></name><modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type> <name pos:line="15" pos:column="18">seen<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><call><name><name pos:line="15" pos:column="25">m_download<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">download<pos:position pos:line="15" pos:column="45"/></name></name><argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><call><name pos:line="15" pos:column="49">chunks_seen<pos:position pos:line="15" pos:column="60"/></name><argument_list pos:line="15" pos:column="60">()<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="63"/></decl_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">seen<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">||<pos:position pos:line="17" pos:column="22"/></operator> <call><name><name pos:line="17" pos:column="23">m_download<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">download<pos:position pos:line="17" pos:column="43"/></name></name><argument_list pos:line="17" pos:column="43">()<pos:position pos:line="17" pos:column="45"/></argument_list></call><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><call><name pos:line="17" pos:column="47">file_list<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">()<pos:position pos:line="17" pos:column="58"/></argument_list></call><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><call><name pos:line="17" pos:column="60">bitfield<pos:position pos:line="17" pos:column="68"/></name><argument_list pos:line="17" pos:column="68">()<pos:position pos:line="17" pos:column="70"/></argument_list></call><operator pos:line="17" pos:column="70">-&gt;<pos:position pos:line="17" pos:column="75"/></operator><call><name pos:line="17" pos:column="72">empty<pos:position pos:line="17" pos:column="77"/></name><argument_list pos:line="17" pos:column="77">()<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="80"/></condition><then pos:line="17" pos:column="80"> <block pos:line="17" pos:column="81">{
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">m_canvas<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">print<pos:position pos:line="18" pos:column="20"/></name></name><argument_list pos:line="18" pos:column="20">(<argument><expr><literal type="number" pos:line="18" pos:column="21">2<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="24">2<pos:position pos:line="18" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="27">"Not available."<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
    <return pos:line="19" pos:column="5">return;<pos:position pos:line="19" pos:column="12"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><call><name><name pos:line="22" pos:column="8">m_download<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">is_done<pos:position pos:line="22" pos:column="27"/></name></name><argument_list pos:line="22" pos:column="27">()<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{ 
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">m_canvas<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">print<pos:position pos:line="23" pos:column="20"/></name></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="number" pos:line="23" pos:column="21">36<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="28">"X downloaded    missing    queued    downloading"<pos:position pos:line="23" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">m_canvas<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">print_char<pos:position pos:line="24" pos:column="25"/></name></name><argument_list pos:line="24" pos:column="25">(<argument><expr><literal type="number" pos:line="24" pos:column="26">50<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="33">'X'<pos:position pos:line="24" pos:column="36"/></literal> <operator pos:line="24" pos:column="37">|<pos:position pos:line="24" pos:column="38"/></operator> <name pos:line="24" pos:column="39">A_BOLD<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">m_canvas<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">print_char<pos:position pos:line="25" pos:column="25"/></name></name><argument_list pos:line="25" pos:column="25">(<argument><expr><literal type="number" pos:line="25" pos:column="26">61<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="33">'X'<pos:position pos:line="25" pos:column="36"/></literal> <operator pos:line="25" pos:column="37">|<pos:position pos:line="25" pos:column="38"/></operator> <name pos:line="25" pos:column="39">A_BOLD<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">|<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="48">A_UNDERLINE<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">m_canvas<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">print_char<pos:position pos:line="26" pos:column="25"/></name></name><argument_list pos:line="26" pos:column="25">(<argument><expr><literal type="number" pos:line="26" pos:column="26">71<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="33">'X'<pos:position pos:line="26" pos:column="36"/></literal> <operator pos:line="26" pos:column="37">|<pos:position pos:line="26" pos:column="38"/></operator> <name pos:line="26" pos:column="39">A_REVERSE<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><operator pos:line="29" pos:column="3">*<pos:position pos:line="29" pos:column="4"/></operator><name pos:line="29" pos:column="4">m_focus<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name><name pos:line="29" pos:column="14">std<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">::<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">min<pos:position pos:line="29" pos:column="22"/></name></name><argument_list pos:line="29" pos:column="22">(<argument><expr><operator pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">m_focus<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="33">max_focus<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">()<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>

  <decl_stmt><decl><type><specifier pos:line="31" pos:column="3">const<pos:position pos:line="31" pos:column="8"/></specifier> <name pos:line="31" pos:column="9">uint8_t<pos:position pos:line="31" pos:column="16"/></name><modifier pos:line="31" pos:column="16">*<pos:position pos:line="31" pos:column="17"/></modifier></type> <name pos:line="31" pos:column="18">chunk<pos:position pos:line="31" pos:column="23"/></name> <init pos:line="31" pos:column="24">= <expr><name pos:line="31" pos:column="26">seen<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">+<pos:position pos:line="31" pos:column="32"/></operator> <operator pos:line="31" pos:column="33">*<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">m_focus<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">*<pos:position pos:line="31" pos:column="43"/></operator> <call><name pos:line="31" pos:column="44">chunks_per_row<pos:position pos:line="31" pos:column="58"/></name><argument_list pos:line="31" pos:column="58">()<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="61"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="32" pos:column="3">const<pos:position pos:line="32" pos:column="8"/></specifier> <name pos:line="32" pos:column="9">uint8_t<pos:position pos:line="32" pos:column="16"/></name><modifier pos:line="32" pos:column="16">*<pos:position pos:line="32" pos:column="17"/></modifier></type> <name pos:line="32" pos:column="18">last<pos:position pos:line="32" pos:column="22"/></name> <init pos:line="32" pos:column="23">= <expr><name pos:line="32" pos:column="25">seen<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">+<pos:position pos:line="32" pos:column="31"/></operator> <call><name><name pos:line="32" pos:column="32">m_download<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">download<pos:position pos:line="32" pos:column="52"/></name></name><argument_list pos:line="32" pos:column="52">()<pos:position pos:line="32" pos:column="54"/></argument_list></call><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><call><name pos:line="32" pos:column="56">file_list<pos:position pos:line="32" pos:column="65"/></name><argument_list pos:line="32" pos:column="65">()<pos:position pos:line="32" pos:column="67"/></argument_list></call><operator pos:line="32" pos:column="67">-&gt;<pos:position pos:line="32" pos:column="72"/></operator><call><name pos:line="32" pos:column="69">size_chunks<pos:position pos:line="32" pos:column="80"/></name><argument_list pos:line="32" pos:column="80">()<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="83"/></decl_stmt>

  <decl_stmt><decl><type><specifier pos:line="34" pos:column="3">const<pos:position pos:line="34" pos:column="8"/></specifier> <name><name pos:line="34" pos:column="9">torrent<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">::<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">Bitfield<pos:position pos:line="34" pos:column="26"/></name></name><modifier pos:line="34" pos:column="26">*<pos:position pos:line="34" pos:column="27"/></modifier></type> <name pos:line="34" pos:column="28">bitfield<pos:position pos:line="34" pos:column="36"/></name> <init pos:line="34" pos:column="37">= <expr><call><name><name pos:line="34" pos:column="39">m_download<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">download<pos:position pos:line="34" pos:column="59"/></name></name><argument_list pos:line="34" pos:column="59">()<pos:position pos:line="34" pos:column="61"/></argument_list></call><operator pos:line="34" pos:column="61">-&gt;<pos:position pos:line="34" pos:column="66"/></operator><call><name pos:line="34" pos:column="63">file_list<pos:position pos:line="34" pos:column="72"/></name><argument_list pos:line="34" pos:column="72">()<pos:position pos:line="34" pos:column="74"/></argument_list></call><operator pos:line="34" pos:column="74">-&gt;<pos:position pos:line="34" pos:column="79"/></operator><call><name pos:line="34" pos:column="76">bitfield<pos:position pos:line="34" pos:column="84"/></name><argument_list pos:line="34" pos:column="84">()<pos:position pos:line="34" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="87"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="35" pos:column="3">const<pos:position pos:line="35" pos:column="8"/></specifier> <name><name pos:line="35" pos:column="9">torrent<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">::<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">TransferList<pos:position pos:line="35" pos:column="30"/></name></name><modifier pos:line="35" pos:column="30">*<pos:position pos:line="35" pos:column="31"/></modifier></type> <name pos:line="35" pos:column="32">transfers<pos:position pos:line="35" pos:column="41"/></name> <init pos:line="35" pos:column="42">= <expr><call><name><name pos:line="35" pos:column="44">m_download<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">download<pos:position pos:line="35" pos:column="64"/></name></name><argument_list pos:line="35" pos:column="64">()<pos:position pos:line="35" pos:column="66"/></argument_list></call><operator pos:line="35" pos:column="66">-&gt;<pos:position pos:line="35" pos:column="71"/></operator><call><name pos:line="35" pos:column="68">transfer_list<pos:position pos:line="35" pos:column="81"/></name><argument_list pos:line="35" pos:column="81">()<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="84"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="36" pos:column="3">std<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">::<pos:position pos:line="36" pos:column="8"/></operator><name><name pos:line="36" pos:column="8">vector<pos:position pos:line="36" pos:column="14"/></name><argument_list type="generic" pos:line="36" pos:column="14">&lt;<argument><expr><name><name pos:line="36" pos:column="15">torrent<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">::<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">BlockList<pos:position pos:line="36" pos:column="33"/></name></name><operator pos:line="36" pos:column="33">*<pos:position pos:line="36" pos:column="34"/></operator></expr></argument>&gt;<pos:position pos:line="36" pos:column="38"/></argument_list></name></name></type> <name pos:line="36" pos:column="36">transferChunks<pos:position pos:line="36" pos:column="50"/></name><argument_list pos:line="36" pos:column="50">(<argument><expr><call><name><name pos:line="36" pos:column="51">transfers<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">-&gt;<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="62">size<pos:position pos:line="36" pos:column="66"/></name></name><argument_list pos:line="36" pos:column="66">()<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="70">0<pos:position pos:line="36" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></decl>;<pos:position pos:line="36" pos:column="73"/></decl_stmt>

  <expr_stmt><expr><call><name><name pos:line="38" pos:column="3">std<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">::<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">copy<pos:position pos:line="38" pos:column="12"/></name></name><argument_list pos:line="38" pos:column="12">(<argument><expr><call><name><name pos:line="38" pos:column="13">transfers<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">begin<pos:position pos:line="38" pos:column="29"/></name></name><argument_list pos:line="38" pos:column="29">()<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="33">transfers<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">end<pos:position pos:line="38" pos:column="47"/></name></name><argument_list pos:line="38" pos:column="47">()<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="51">transferChunks<pos:position pos:line="38" pos:column="65"/></name><operator pos:line="38" pos:column="65">.<pos:position pos:line="38" pos:column="66"/></operator><name pos:line="38" pos:column="66">begin<pos:position pos:line="38" pos:column="71"/></name></name><argument_list pos:line="38" pos:column="71">()<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="39" pos:column="3">std<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">::<pos:position pos:line="39" pos:column="8"/></operator><name pos:line="39" pos:column="8">sort<pos:position pos:line="39" pos:column="12"/></name></name><argument_list pos:line="39" pos:column="12">(<argument><expr><call><name><name pos:line="39" pos:column="13">transferChunks<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">begin<pos:position pos:line="39" pos:column="33"/></name></name><argument_list pos:line="39" pos:column="33">()<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="39" pos:column="37">transferChunks<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">.<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="52">end<pos:position pos:line="39" pos:column="55"/></name></name><argument_list pos:line="39" pos:column="55">()<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="39" pos:column="59">rak<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">::<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="64">less2<pos:position pos:line="39" pos:column="69"/></name></name><argument_list pos:line="39" pos:column="69">(<argument><expr><call><name><name pos:line="39" pos:column="70">std<pos:position pos:line="39" pos:column="73"/></name><operator pos:line="39" pos:column="73">::<pos:position pos:line="39" pos:column="75"/></operator><name pos:line="39" pos:column="75">mem_fun<pos:position pos:line="39" pos:column="82"/></name></name><argument_list pos:line="39" pos:column="82">(<argument><expr><operator pos:line="39" pos:column="83">&amp;<pos:position pos:line="39" pos:column="88"/></operator><name><name pos:line="39" pos:column="84">torrent<pos:position pos:line="39" pos:column="91"/></name><operator pos:line="39" pos:column="91">::<pos:position pos:line="39" pos:column="93"/></operator><name pos:line="39" pos:column="93">BlockList<pos:position pos:line="39" pos:column="102"/></name><operator pos:line="39" pos:column="102">::<pos:position pos:line="39" pos:column="104"/></operator><name pos:line="39" pos:column="104">index<pos:position pos:line="39" pos:column="109"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="110"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="39" pos:column="112">std<pos:position pos:line="39" pos:column="115"/></name><operator pos:line="39" pos:column="115">::<pos:position pos:line="39" pos:column="117"/></operator><name pos:line="39" pos:column="117">mem_fun<pos:position pos:line="39" pos:column="124"/></name></name><argument_list pos:line="39" pos:column="124">(<argument><expr><operator pos:line="39" pos:column="125">&amp;<pos:position pos:line="39" pos:column="130"/></operator><name><name pos:line="39" pos:column="126">torrent<pos:position pos:line="39" pos:column="133"/></name><operator pos:line="39" pos:column="133">::<pos:position pos:line="39" pos:column="135"/></operator><name pos:line="39" pos:column="135">BlockList<pos:position pos:line="39" pos:column="144"/></name><operator pos:line="39" pos:column="144">::<pos:position pos:line="39" pos:column="146"/></operator><name pos:line="39" pos:column="146">index<pos:position pos:line="39" pos:column="151"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="152"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="153"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="155"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="41" pos:column="3">std<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">::<pos:position pos:line="41" pos:column="8"/></operator><name><name pos:line="41" pos:column="8">vector<pos:position pos:line="41" pos:column="14"/></name><argument_list type="generic" pos:line="41" pos:column="14">&lt;<argument><expr><name><name pos:line="41" pos:column="15">torrent<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">::<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">BlockList<pos:position pos:line="41" pos:column="33"/></name></name><operator pos:line="41" pos:column="33">*<pos:position pos:line="41" pos:column="34"/></operator></expr></argument>&gt;<pos:position pos:line="41" pos:column="38"/></argument_list></name><operator pos:line="41" pos:column="35">::<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">const_iterator<pos:position pos:line="41" pos:column="51"/></name></name></type> <name pos:line="41" pos:column="52">itrTransfer<pos:position pos:line="41" pos:column="63"/></name> <init pos:line="41" pos:column="64">= <expr><call><name><name pos:line="41" pos:column="66">transferChunks<pos:position pos:line="41" pos:column="80"/></name><operator pos:line="41" pos:column="80">.<pos:position pos:line="41" pos:column="81"/></operator><name pos:line="41" pos:column="81">begin<pos:position pos:line="41" pos:column="86"/></name></name><argument_list pos:line="41" pos:column="86">()<pos:position pos:line="41" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="89"/></decl_stmt>

  <while pos:line="43" pos:column="3">while <condition pos:line="43" pos:column="9">(<expr><name pos:line="43" pos:column="10">itrTransfer<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">!=<pos:position pos:line="43" pos:column="24"/></operator> <call><name><name pos:line="43" pos:column="25">transferChunks<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">end<pos:position pos:line="43" pos:column="43"/></name></name><argument_list pos:line="43" pos:column="43">()<pos:position pos:line="43" pos:column="45"/></argument_list></call> <operator pos:line="43" pos:column="46">&amp;&amp;<pos:position pos:line="43" pos:column="56"/></operator> <call pos:line="43" pos:column="49">(<name pos:line="43" pos:column="50">uint32_t<pos:position pos:line="43" pos:column="58"/></name>)<argument_list pos:line="43" pos:column="59">(<argument><expr><name pos:line="43" pos:column="60">chunk<pos:position pos:line="43" pos:column="65"/></name> <operator pos:line="43" pos:column="66">-<pos:position pos:line="43" pos:column="67"/></operator> <name pos:line="43" pos:column="68">seen<pos:position pos:line="43" pos:column="72"/></name></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call> <operator pos:line="43" pos:column="74">&gt;<pos:position pos:line="43" pos:column="78"/></operator> <call><name><operator pos:line="43" pos:column="76">(<pos:position pos:line="43" pos:column="77"/></operator><operator pos:line="43" pos:column="77">*<pos:position pos:line="43" pos:column="78"/></operator><name pos:line="43" pos:column="78">itrTransfer<pos:position pos:line="43" pos:column="89"/></name><operator pos:line="43" pos:column="89">)<pos:position pos:line="43" pos:column="90"/></operator><operator pos:line="43" pos:column="90">-&gt;<pos:position pos:line="43" pos:column="95"/></operator><name pos:line="43" pos:column="92">index<pos:position pos:line="43" pos:column="97"/></name></name><argument_list pos:line="43" pos:column="97">()<pos:position pos:line="43" pos:column="99"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="100"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="5">itrTransfer<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">++<pos:position pos:line="44" pos:column="18"/></operator></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt></block></while>

  <for pos:line="46" pos:column="3">for <control pos:line="46" pos:column="7">(<init><decl><type><name pos:line="46" pos:column="8">unsigned<pos:position pos:line="46" pos:column="16"/></name> <name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">y<pos:position pos:line="46" pos:column="22"/></name> <init pos:line="46" pos:column="23">= <expr><literal type="number" pos:line="46" pos:column="25">1<pos:position pos:line="46" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="27"/></init> <condition><expr><name pos:line="46" pos:column="28">y<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">&lt;<pos:position pos:line="46" pos:column="34"/></operator> <call><name><name pos:line="46" pos:column="32">m_canvas<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">height<pos:position pos:line="46" pos:column="48"/></name></name><argument_list pos:line="46" pos:column="48">()<pos:position pos:line="46" pos:column="50"/></argument_list></call> <operator pos:line="46" pos:column="51">&amp;&amp;<pos:position pos:line="46" pos:column="61"/></operator> <name pos:line="46" pos:column="54">chunk<pos:position pos:line="46" pos:column="59"/></name> <operator pos:line="46" pos:column="60">&lt;<pos:position pos:line="46" pos:column="64"/></operator> <name pos:line="46" pos:column="62">last<pos:position pos:line="46" pos:column="66"/></name></expr>;<pos:position pos:line="46" pos:column="67"/></condition> <incr><expr><operator pos:line="46" pos:column="68">++<pos:position pos:line="46" pos:column="70"/></operator><name pos:line="46" pos:column="70">y<pos:position pos:line="46" pos:column="71"/></name></expr></incr>)<pos:position pos:line="46" pos:column="72"/></control> <block pos:line="46" pos:column="73">{
    <expr_stmt><expr><call><name><name pos:line="47" pos:column="5">m_canvas<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">print<pos:position pos:line="47" pos:column="20"/></name></name><argument_list pos:line="47" pos:column="20">(<argument><expr><literal type="number" pos:line="47" pos:column="21">0<pos:position pos:line="47" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="24">y<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="27">"%5u "<pos:position pos:line="47" pos:column="33"/></literal></expr></argument>, <argument><expr><call pos:line="47" pos:column="35">(<name pos:line="47" pos:column="36">int<pos:position pos:line="47" pos:column="39"/></name>)<argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">chunk<pos:position pos:line="47" pos:column="46"/></name> <operator pos:line="47" pos:column="47">-<pos:position pos:line="47" pos:column="48"/></operator> <name pos:line="47" pos:column="49">seen<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>

    <while pos:line="49" pos:column="5">while <condition pos:line="49" pos:column="11">(<expr><name pos:line="49" pos:column="12">chunk<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">&lt;<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="20">last<pos:position pos:line="49" pos:column="24"/></name></expr>)<pos:position pos:line="49" pos:column="25"/></condition> <block pos:line="49" pos:column="26">{
      <decl_stmt><decl><type><name pos:line="50" pos:column="7">chtype<pos:position pos:line="50" pos:column="13"/></name></type> <name pos:line="50" pos:column="14">attr<pos:position pos:line="50" pos:column="18"/></name></decl>;<pos:position pos:line="50" pos:column="19"/></decl_stmt>

      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><call><name><name pos:line="52" pos:column="11">bitfield<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">get<pos:position pos:line="52" pos:column="24"/></name></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">chunk<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">-<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">seen<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39"> <block pos:line="52" pos:column="40">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">attr<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <name pos:line="53" pos:column="16">A_NORMAL<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then> <elseif pos:line="54" pos:column="9">else <if pos:line="54" pos:column="14">if <condition pos:line="54" pos:column="17">(<expr><name pos:line="54" pos:column="18">itrTransfer<pos:position pos:line="54" pos:column="29"/></name> <operator pos:line="54" pos:column="30">!=<pos:position pos:line="54" pos:column="32"/></operator> <call><name><name pos:line="54" pos:column="33">transferChunks<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">.<pos:position pos:line="54" pos:column="48"/></operator><name pos:line="54" pos:column="48">end<pos:position pos:line="54" pos:column="51"/></name></name><argument_list pos:line="54" pos:column="51">()<pos:position pos:line="54" pos:column="53"/></argument_list></call> <operator pos:line="54" pos:column="54">&amp;&amp;<pos:position pos:line="54" pos:column="64"/></operator> <call pos:line="54" pos:column="57">(<name pos:line="54" pos:column="58">uint32_t<pos:position pos:line="54" pos:column="66"/></name>)<argument_list pos:line="54" pos:column="67">(<argument><expr><name pos:line="54" pos:column="68">chunk<pos:position pos:line="54" pos:column="73"/></name> <operator pos:line="54" pos:column="74">-<pos:position pos:line="54" pos:column="75"/></operator> <name pos:line="54" pos:column="76">seen<pos:position pos:line="54" pos:column="80"/></name></expr></argument>)<pos:position pos:line="54" pos:column="81"/></argument_list></call> <operator pos:line="54" pos:column="82">==<pos:position pos:line="54" pos:column="84"/></operator> <call><name><operator pos:line="54" pos:column="85">(<pos:position pos:line="54" pos:column="86"/></operator><operator pos:line="54" pos:column="86">*<pos:position pos:line="54" pos:column="87"/></operator><name pos:line="54" pos:column="87">itrTransfer<pos:position pos:line="54" pos:column="98"/></name><operator pos:line="54" pos:column="98">)<pos:position pos:line="54" pos:column="99"/></operator><operator pos:line="54" pos:column="99">-&gt;<pos:position pos:line="54" pos:column="104"/></operator><name pos:line="54" pos:column="101">index<pos:position pos:line="54" pos:column="106"/></name></name><argument_list pos:line="54" pos:column="106">()<pos:position pos:line="54" pos:column="108"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="109"/></condition><then pos:line="54" pos:column="109"> <block pos:line="54" pos:column="110">{
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name><name pos:line="55" pos:column="13">std<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">::<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">find_if<pos:position pos:line="55" pos:column="25"/></name></name><argument_list pos:line="55" pos:column="25">(<argument><expr><call><name><operator pos:line="55" pos:column="26">(<pos:position pos:line="55" pos:column="27"/></operator><operator pos:line="55" pos:column="27">*<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">itrTransfer<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">)<pos:position pos:line="55" pos:column="40"/></operator><operator pos:line="55" pos:column="40">-&gt;<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="42">begin<pos:position pos:line="55" pos:column="47"/></name></name><argument_list pos:line="55" pos:column="47">()<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name><operator pos:line="55" pos:column="51">(<pos:position pos:line="55" pos:column="52"/></operator><operator pos:line="55" pos:column="52">*<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="53">itrTransfer<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">)<pos:position pos:line="55" pos:column="65"/></operator><operator pos:line="55" pos:column="65">-&gt;<pos:position pos:line="55" pos:column="70"/></operator><name pos:line="55" pos:column="67">end<pos:position pos:line="55" pos:column="70"/></name></name><argument_list pos:line="55" pos:column="70">()<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="55" pos:column="74">std<pos:position pos:line="55" pos:column="77"/></name><operator pos:line="55" pos:column="77">::<pos:position pos:line="55" pos:column="79"/></operator><name pos:line="55" pos:column="79">mem_fun_ref<pos:position pos:line="55" pos:column="90"/></name></name><argument_list pos:line="55" pos:column="90">(<argument><expr><operator pos:line="55" pos:column="91">&amp;<pos:position pos:line="55" pos:column="96"/></operator><name><name pos:line="55" pos:column="92">torrent<pos:position pos:line="55" pos:column="99"/></name><operator pos:line="55" pos:column="99">::<pos:position pos:line="55" pos:column="101"/></operator><name pos:line="55" pos:column="101">Block<pos:position pos:line="55" pos:column="106"/></name><operator pos:line="55" pos:column="106">::<pos:position pos:line="55" pos:column="108"/></operator><name pos:line="55" pos:column="108">is_transfering<pos:position pos:line="55" pos:column="122"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="124"/></argument_list></call> <operator pos:line="55" pos:column="125">!=<pos:position pos:line="55" pos:column="127"/></operator> <call><name><operator pos:line="55" pos:column="128">(<pos:position pos:line="55" pos:column="129"/></operator><operator pos:line="55" pos:column="129">*<pos:position pos:line="55" pos:column="130"/></operator><name pos:line="55" pos:column="130">itrTransfer<pos:position pos:line="55" pos:column="141"/></name><operator pos:line="55" pos:column="141">)<pos:position pos:line="55" pos:column="142"/></operator><operator pos:line="55" pos:column="142">-&gt;<pos:position pos:line="55" pos:column="147"/></operator><name pos:line="55" pos:column="144">end<pos:position pos:line="55" pos:column="147"/></name></name><argument_list pos:line="55" pos:column="147">()<pos:position pos:line="55" pos:column="149"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="150"/></condition><then pos:line="55" pos:column="150">
          <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="11">attr<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">A_REVERSE<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt></block></then>
        <else pos:line="57" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="11">attr<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <name pos:line="58" pos:column="18">A_BOLD<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">|<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">A_UNDERLINE<pos:position pos:line="58" pos:column="38"/></name></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name pos:line="59" pos:column="9">itrTransfer<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">++<pos:position pos:line="59" pos:column="22"/></operator></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if></elseif> <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">attr<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">A_BOLD<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="62" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name><name pos:line="64" pos:column="7">m_canvas<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">print_char<pos:position pos:line="64" pos:column="27"/></name></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">attr<pos:position pos:line="64" pos:column="32"/></name> <operator pos:line="64" pos:column="33">|<pos:position pos:line="64" pos:column="34"/></operator> <call><name><name pos:line="64" pos:column="35">rak<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">::<pos:position pos:line="64" pos:column="40"/></operator><name><name pos:line="64" pos:column="40">value_to_hexchar<pos:position pos:line="64" pos:column="56"/></name><argument_list type="generic" pos:line="64" pos:column="56">&lt;<argument><expr><literal type="number" pos:line="64" pos:column="57">0<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>&gt;<pos:position pos:line="64" pos:column="62"/></argument_list></name></name><argument_list pos:line="64" pos:column="59">(<argument><expr><call><name><name pos:line="64" pos:column="60">std<pos:position pos:line="64" pos:column="63"/></name><operator pos:line="64" pos:column="63">::<pos:position pos:line="64" pos:column="65"/></operator><name><name pos:line="64" pos:column="65">min<pos:position pos:line="64" pos:column="68"/></name><argument_list type="generic" pos:line="64" pos:column="68">&lt;<argument><expr><name pos:line="64" pos:column="69">uint8_t<pos:position pos:line="64" pos:column="76"/></name></expr></argument>&gt;<pos:position pos:line="64" pos:column="80"/></argument_list></name></name><argument_list pos:line="64" pos:column="77">(<argument><expr><operator pos:line="64" pos:column="78">*<pos:position pos:line="64" pos:column="79"/></operator><name pos:line="64" pos:column="79">chunk<pos:position pos:line="64" pos:column="84"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="86">0xF<pos:position pos:line="64" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="93"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">chunk<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">++<pos:position pos:line="65" pos:column="14"/></operator></expr>;<pos:position pos:line="65" pos:column="15"/></expr_stmt>

      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><operator pos:line="67" pos:column="11">(<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">chunk<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">-<pos:position pos:line="67" pos:column="19"/></operator> <name pos:line="67" pos:column="20">seen<pos:position pos:line="67" pos:column="24"/></name><operator pos:line="67" pos:column="24">)<pos:position pos:line="67" pos:column="25"/></operator> <operator pos:line="67" pos:column="26">%<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="28">10<pos:position pos:line="67" pos:column="30"/></literal> <operator pos:line="67" pos:column="31">==<pos:position pos:line="67" pos:column="33"/></operator> <literal type="number" pos:line="67" pos:column="34">0<pos:position pos:line="67" pos:column="35"/></literal></expr>)<pos:position pos:line="67" pos:column="36"/></condition><then pos:line="67" pos:column="36"> <block pos:line="67" pos:column="37">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name><name pos:line="68" pos:column="13">m_canvas<pos:position pos:line="68" pos:column="21"/></name><operator pos:line="68" pos:column="21">-&gt;<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="23">get_x<pos:position pos:line="68" pos:column="28"/></name></name><argument_list pos:line="68" pos:column="28">()<pos:position pos:line="68" pos:column="30"/></argument_list></call> <operator pos:line="68" pos:column="31">+<pos:position pos:line="68" pos:column="32"/></operator> <literal type="number" pos:line="68" pos:column="33">12<pos:position pos:line="68" pos:column="35"/></literal> <operator pos:line="68" pos:column="36">&gt;<pos:position pos:line="68" pos:column="40"/></operator> <call><name><name pos:line="68" pos:column="38">m_canvas<pos:position pos:line="68" pos:column="46"/></name><operator pos:line="68" pos:column="46">-&gt;<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="48">width<pos:position pos:line="68" pos:column="53"/></name></name><argument_list pos:line="68" pos:column="53">()<pos:position pos:line="68" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="56"/></condition><then pos:line="68" pos:column="56">
          <block type="pseudo"><break pos:line="69" pos:column="11">break;<pos:position pos:line="69" pos:column="17"/></break></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">m_canvas<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">-&gt;<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="19">print_char<pos:position pos:line="71" pos:column="29"/></name></name><argument_list pos:line="71" pos:column="29">(<argument><expr><literal type="char" pos:line="71" pos:column="30">' '<pos:position pos:line="71" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block></while>
  }<pos:position pos:line="74" pos:column="4"/></block></for>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

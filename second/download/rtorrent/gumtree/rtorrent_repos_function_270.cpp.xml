<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_270.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SCgiTask<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">close<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">()<pos:position pos:line="2" pos:column="18"/></parameter_list> <block pos:line="2" pos:column="19">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><call><name pos:line="3" pos:column="8">get_fd<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">()<pos:position pos:line="3" pos:column="16"/></argument_list></call><operator pos:line="3" pos:column="16">.<pos:position pos:line="3" pos:column="17"/></operator><call><name pos:line="3" pos:column="17">is_valid<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">()<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="6" pos:column="3">control<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">poll<pos:position pos:line="6" pos:column="16"/></name></name><argument_list pos:line="6" pos:column="16">()<pos:position pos:line="6" pos:column="18"/></argument_list></call><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><call><name pos:line="6" pos:column="20">remove_read<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">this<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="7" pos:column="3">control<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">poll<pos:position pos:line="7" pos:column="16"/></name></name><argument_list pos:line="7" pos:column="16">()<pos:position pos:line="7" pos:column="18"/></argument_list></call><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><call><name pos:line="7" pos:column="20">remove_write<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">this<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="8" pos:column="3">control<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">poll<pos:position pos:line="8" pos:column="16"/></name></name><argument_list pos:line="8" pos:column="16">()<pos:position pos:line="8" pos:column="18"/></argument_list></call><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><call><name pos:line="8" pos:column="20">remove_error<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">this<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="9" pos:column="3">control<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">poll<pos:position pos:line="9" pos:column="16"/></name></name><argument_list pos:line="9" pos:column="16">()<pos:position pos:line="9" pos:column="18"/></argument_list></call><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><call><name pos:line="9" pos:column="20">close<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">this<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">get_fd<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">()<pos:position pos:line="11" pos:column="11"/></argument_list></call><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><call><name pos:line="11" pos:column="12">close<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">()<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">get_fd<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">()<pos:position pos:line="12" pos:column="11"/></argument_list></call><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><call><name pos:line="12" pos:column="12">clear<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">()<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="14" pos:column="3">delete<pos:position pos:line="14" pos:column="9"/></operator> <index pos:line="14" pos:column="10">[]<pos:position pos:line="14" pos:column="12"/></index> <name pos:line="14" pos:column="13">m_buffer<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">m_buffer<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>

  <comment type="line" pos:line="17" pos:column="3">// Test</comment>
<comment type="line" pos:line="18" pos:column="1">//   char buffer[512];</comment>
<comment type="line" pos:line="19" pos:column="1">//   sprintf(buffer, "SCgi system call processed: %i", (int)(rak::timer::current() - scgiTimer).usec());</comment>
<comment type="line" pos:line="20" pos:column="1">//   control-&gt;core()-&gt;push_log(std::string(buffer));</comment>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

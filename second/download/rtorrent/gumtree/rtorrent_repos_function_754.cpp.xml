<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_754.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">SocketFd<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">get_error<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list> <specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <block pos:line="2" pos:column="29">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">check_valid<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">()<pos:position pos:line="3" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="17"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">err<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">socklen_t<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">length<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><sizeof pos:line="6" pos:column="22">sizeof<argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">err<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">getsockopt<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">m_fd<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="24">SOL_SOCKET<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">SO_ERROR<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="46">&amp;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="47">err<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="52">&amp;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="53">length<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call> <operator pos:line="8" pos:column="61">==<pos:position pos:line="8" pos:column="63"/></operator> <operator pos:line="8" pos:column="64">-<pos:position pos:line="8" pos:column="65"/></operator><literal type="number" pos:line="8" pos:column="65">1<pos:position pos:line="8" pos:column="66"/></literal></expr>)<pos:position pos:line="8" pos:column="67"/></condition><then pos:line="8" pos:column="67">
    <block type="pseudo"><throw pos:line="9" pos:column="5">throw <expr><call><name><name pos:line="9" pos:column="11">torrent<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">::<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">internal_error<pos:position pos:line="9" pos:column="34"/></name></name><argument_list pos:line="9" pos:column="34">(<argument><expr><literal type="string" pos:line="9" pos:column="35">"SocketFd::get_error() could not get error"<pos:position pos:line="9" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></throw></block></then></if>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">err<pos:position pos:line="11" pos:column="13"/></name></expr>;<pos:position pos:line="11" pos:column="14"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

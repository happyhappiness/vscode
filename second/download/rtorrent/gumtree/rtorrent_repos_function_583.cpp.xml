<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_583.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Manager<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">set_proxy_address<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name><name pos:line="2" pos:column="34">std<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">string<pos:position pos:line="2" pos:column="45"/></name></name><modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="47">addr<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">port<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">rak<pos:position pos:line="4" pos:column="6"/></name><operator pos:line="4" pos:column="6">::<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">address_info<pos:position pos:line="4" pos:column="20"/></name></name><modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type> <name pos:line="4" pos:column="22">ai<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><call><name><name pos:line="6" pos:column="12">addr<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">length<pos:position pos:line="6" pos:column="23"/></name></name><argument_list pos:line="6" pos:column="23">()<pos:position pos:line="6" pos:column="25"/></argument_list></call> <operator pos:line="6" pos:column="26">+<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="28">1<pos:position pos:line="6" pos:column="29"/></literal></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">err<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><call><name><name pos:line="8" pos:column="13">std<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">sscanf<pos:position pos:line="8" pos:column="24"/></name></name><argument_list pos:line="8" pos:column="24">(<argument><expr><call><name><name pos:line="8" pos:column="25">addr<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">c_str<pos:position pos:line="8" pos:column="35"/></name></name><argument_list pos:line="8" pos:column="35">()<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="39">"%[^:]:%i"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">buf<pos:position pos:line="8" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="56">&amp;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="57">port<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">err<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&lt;=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
    <block type="pseudo"><throw pos:line="11" pos:column="5">throw <expr><call><name><name pos:line="11" pos:column="11">torrent<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">::<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">input_error<pos:position pos:line="11" pos:column="31"/></name></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"Could not parse proxy address."<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></throw></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">err<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">port<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">80<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">err<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name><name pos:line="16" pos:column="14">rak<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">::<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">address_info<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">::<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">get_address_info<pos:position pos:line="16" pos:column="49"/></name></name><argument_list pos:line="16" pos:column="49">(<argument><expr><name pos:line="16" pos:column="50">buf<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">PF_INET<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="64">SOCK_STREAM<pos:position pos:line="16" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="77">&amp;<pos:position pos:line="16" pos:column="82"/></operator><name pos:line="16" pos:column="78">ai<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call><operator pos:line="16" pos:column="81">)<pos:position pos:line="16" pos:column="82"/></operator> <operator pos:line="16" pos:column="83">!=<pos:position pos:line="16" pos:column="85"/></operator> <literal type="number" pos:line="16" pos:column="86">0<pos:position pos:line="16" pos:column="87"/></literal></expr>)<pos:position pos:line="16" pos:column="88"/></condition><then pos:line="16" pos:column="88">
    <block type="pseudo"><throw pos:line="17" pos:column="5">throw <expr><call><name><name pos:line="17" pos:column="11">torrent<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">::<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">input_error<pos:position pos:line="17" pos:column="31"/></name></name><argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"Could not set proxy address: "<pos:position pos:line="17" pos:column="63"/></literal> <operator pos:line="17" pos:column="64">+<pos:position pos:line="17" pos:column="65"/></operator> <call><name><name pos:line="17" pos:column="66">std<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">::<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="71">string<pos:position pos:line="17" pos:column="77"/></name></name><argument_list pos:line="17" pos:column="77">(<argument><expr><call><name><name pos:line="17" pos:column="78">rak<pos:position pos:line="17" pos:column="81"/></name><operator pos:line="17" pos:column="81">::<pos:position pos:line="17" pos:column="83"/></operator><name pos:line="17" pos:column="83">address_info<pos:position pos:line="17" pos:column="95"/></name><operator pos:line="17" pos:column="95">::<pos:position pos:line="17" pos:column="97"/></operator><name pos:line="17" pos:column="97">strerror<pos:position pos:line="17" pos:column="105"/></name></name><argument_list pos:line="17" pos:column="105">(<argument><expr><name pos:line="17" pos:column="106">err<pos:position pos:line="17" pos:column="109"/></name></expr></argument>)<pos:position pos:line="17" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="111"/></argument_list></call> <operator pos:line="17" pos:column="112">+<pos:position pos:line="17" pos:column="113"/></operator> <literal type="string" pos:line="17" pos:column="114">"."<pos:position pos:line="17" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="119"/></throw></block></then></if>
  
  <try pos:line="19" pos:column="3">try <block pos:line="19" pos:column="7">{

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">ai<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">address<pos:position pos:line="21" pos:column="16"/></name></name><argument_list pos:line="21" pos:column="16">()<pos:position pos:line="21" pos:column="18"/></argument_list></call><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><call><name pos:line="21" pos:column="20">set_port<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">port<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">torrent<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">::<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">connection_manager<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><call><name pos:line="22" pos:column="36">set_proxy_address<pos:position pos:line="22" pos:column="53"/></name><argument_list pos:line="22" pos:column="53">(<argument><expr><call><name><name pos:line="22" pos:column="54">ai<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">address<pos:position pos:line="22" pos:column="65"/></name></name><argument_list pos:line="22" pos:column="65">()<pos:position pos:line="22" pos:column="67"/></argument_list></call><operator pos:line="22" pos:column="67">-&gt;<pos:position pos:line="22" pos:column="72"/></operator><call><name pos:line="22" pos:column="69">c_sockaddr<pos:position pos:line="22" pos:column="79"/></name><argument_list pos:line="22" pos:column="79">()<pos:position pos:line="22" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="83"/></expr_stmt>
    
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">rak<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">::<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">address_info<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">::<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">free_address_info<pos:position pos:line="24" pos:column="41"/></name></name><argument_list pos:line="24" pos:column="41">(<argument><expr><name pos:line="24" pos:column="42">ai<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>

  }<pos:position pos:line="26" pos:column="4"/></block> <catch pos:line="26" pos:column="5">catch <parameter_list pos:line="26" pos:column="11">(<parameter><decl><type><name><name pos:line="26" pos:column="12">torrent<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">::<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">input_error<pos:position pos:line="26" pos:column="32"/></name></name><modifier pos:line="26" pos:column="32">&amp;<pos:position pos:line="26" pos:column="37"/></modifier></type> <name pos:line="26" pos:column="34">e<pos:position pos:line="26" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="26" pos:column="36"/></parameter_list> <block pos:line="26" pos:column="37">{
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">rak<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">::<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">address_info<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">::<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">free_address_info<pos:position pos:line="27" pos:column="41"/></name></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">ai<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
    <throw pos:line="28" pos:column="5">throw <expr><name pos:line="28" pos:column="11">e<pos:position pos:line="28" pos:column="12"/></name></expr>;<pos:position pos:line="28" pos:column="13"/></throw>
  }<pos:position pos:line="29" pos:column="4"/></block></catch></try>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

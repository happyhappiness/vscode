<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_239.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">xmlrpc_value<pos:position pos:line="1" pos:column="13"/></name><modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">xmlrpc_call_command_f<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">xmlrpc_env<pos:position pos:line="2" pos:column="33"/></name><modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">env<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">xmlrpc_value<pos:position pos:line="2" pos:column="52"/></name><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">args<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">void<pos:position pos:line="2" pos:column="64"/></name><modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type> <name pos:line="2" pos:column="66">voidServerInfo<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list> <block pos:line="2" pos:column="82">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">torrent<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">::<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="12">File<pos:position pos:line="3" pos:column="16"/></name></name><modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type>  <name pos:line="3" pos:column="19">file<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">torrent<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">::<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">Object<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">object<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">xmlrpc_to_object_target<pos:position pos:line="4" pos:column="51"/></name><argument_list pos:line="4" pos:column="51">(<argument><expr><name pos:line="4" pos:column="52">env<pos:position pos:line="4" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="57">args<pos:position pos:line="4" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="63">XmlRpc<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">::<pos:position pos:line="4" pos:column="71"/></operator><name pos:line="4" pos:column="71">call_file<pos:position pos:line="4" pos:column="80"/></name></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="82">(<pos:position pos:line="4" pos:column="83"/></operator><name pos:line="4" pos:column="83">void<pos:position pos:line="4" pos:column="87"/></name><operator pos:line="4" pos:column="87">*<pos:position pos:line="4" pos:column="88"/></operator><operator pos:line="4" pos:column="88">*<pos:position pos:line="4" pos:column="89"/></operator><operator pos:line="4" pos:column="89">)<pos:position pos:line="4" pos:column="90"/></operator><operator pos:line="4" pos:column="90">&amp;<pos:position pos:line="4" pos:column="95"/></operator><name pos:line="4" pos:column="91">file<pos:position pos:line="4" pos:column="95"/></name></expr></argument>)<pos:position pos:line="4" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="97"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">env<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">fault_occurred<pos:position pos:line="6" pos:column="26"/></name></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <try pos:line="9" pos:column="3">try <block pos:line="9" pos:column="7">{
    <return pos:line="10" pos:column="5">return <expr><call><name pos:line="10" pos:column="12">object_to_xmlrpc<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">env<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="34">rpc<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">::<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">commands<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">call_command_f<pos:position pos:line="10" pos:column="62"/></name></name><argument_list pos:line="10" pos:column="62">(<argument><expr><operator pos:line="10" pos:column="63">(<pos:position pos:line="10" pos:column="64"/></operator><specifier pos:line="10" pos:column="64">const<pos:position pos:line="10" pos:column="69"/></specifier> <name pos:line="10" pos:column="70">char<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">*<pos:position pos:line="10" pos:column="75"/></operator><operator pos:line="10" pos:column="75">)<pos:position pos:line="10" pos:column="76"/></operator><name pos:line="10" pos:column="76">voidServerInfo<pos:position pos:line="10" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="92">file<pos:position pos:line="10" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="98">object<pos:position pos:line="10" pos:column="104"/></name></expr></argument>)<pos:position pos:line="10" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="107"/></return>

  }<pos:position pos:line="12" pos:column="4"/></block> <catch pos:line="12" pos:column="5">catch <parameter_list pos:line="12" pos:column="11">(<parameter><decl><type><name><name pos:line="12" pos:column="12">torrent<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">::<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">local_error<pos:position pos:line="12" pos:column="32"/></name></name><modifier pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></modifier></type> <name pos:line="12" pos:column="34">e<pos:position pos:line="12" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="12" pos:column="36"/></parameter_list> <block pos:line="12" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">xmlrpc_env_set_fault<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">env<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">XMLRPC_PARSE_ERROR<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="51">e<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">what<pos:position pos:line="13" pos:column="57"/></name></name><argument_list pos:line="13" pos:column="57">()<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></catch></try>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_160.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowStatusbar<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">redraw<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list> <block pos:line="2" pos:column="27">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">m_slotSchedule<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">this<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">cachedTime<pos:position pos:line="3" pos:column="35"/></name> <operator pos:line="3" pos:column="36">+<pos:position pos:line="3" pos:column="37"/></operator> <literal type="number" pos:line="3" pos:column="38">1000000<pos:position pos:line="3" pos:column="45"/></literal><operator pos:line="3" pos:column="45">)<pos:position pos:line="3" pos:column="46"/></operator><operator pos:line="3" pos:column="46">.<pos:position pos:line="3" pos:column="47"/></operator><call><name pos:line="3" pos:column="47">round_seconds<pos:position pos:line="3" pos:column="60"/></name><argument_list pos:line="3" pos:column="60">()<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="5" pos:column="3">m_canvas<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">erase<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>

  <comment type="line" pos:line="7" pos:column="3">// TODO: Make a buffer with size = get_width?</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buffer<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><call><name><name pos:line="8" pos:column="15">m_canvas<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">get_width<pos:position pos:line="8" pos:column="34"/></name></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call> <operator pos:line="8" pos:column="37">+<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">1<pos:position pos:line="8" pos:column="40"/></literal></expr>]<pos:position pos:line="8" pos:column="41"/></index></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name><modifier pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></modifier></type> <name pos:line="9" pos:column="9">position<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name><modifier pos:line="10" pos:column="7">*<pos:position pos:line="10" pos:column="8"/></modifier></type> <name pos:line="10" pos:column="9">last<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><name pos:line="10" pos:column="16">buffer<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">+<pos:position pos:line="10" pos:column="24"/></operator> <call><name><name pos:line="10" pos:column="25">m_canvas<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">get_width<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>

<comment type="line" pos:line="12" pos:column="1">//   if (torrent::up_throttle() == 0)</comment>
<comment type="line" pos:line="13" pos:column="1">//     position = std::max(snprintf(buffer, 128, "off/"), 0);</comment>
<comment type="line" pos:line="14" pos:column="1">//   else</comment>
<comment type="line" pos:line="15" pos:column="1">//     position = std::max(snprintf(buffer, 128, "%3i/", torrent::up_throttle() / 1024), 0);</comment>

<comment type="line" pos:line="17" pos:column="1">//   if (torrent::down_throttle() == 0)</comment>
<comment type="line" pos:line="18" pos:column="1">//     pos = snprintf(buf + pos, 128 - pos, "off");</comment>
<comment type="line" pos:line="19" pos:column="1">//   else</comment>
<comment type="line" pos:line="20" pos:column="1">//     pos = snprintf(buf + pos, 128 - pos, "%-3i", torrent::down_throttle() / 1024);</comment>

<comment type="line" pos:line="22" pos:column="1">//   m_canvas-&gt;print(0, 0, "Throttle U/D: %s  Rate: %5.1f / %5.1f KB  Listen: %s:%i%s",</comment>
<comment type="line" pos:line="23" pos:column="1">// 		  buf,</comment>
<comment type="line" pos:line="24" pos:column="1">// 		  (double)torrent::up_rate()-&gt;rate() / 1024.0,</comment>
<comment type="line" pos:line="25" pos:column="1">// 		  (double)torrent::down_rate()-&gt;rate() / 1024.0,</comment>
<comment type="line" pos:line="26" pos:column="1">// 		  !torrent::local_address().empty() ? torrent::local_address().c_str() : "&lt;default&gt;",</comment>
<comment type="line" pos:line="27" pos:column="1">// 		  (int)torrent::listen_port(),</comment>
<comment type="line" pos:line="28" pos:column="1">// 		  !torrent::bind_address().empty() ? ("  Bind: " + torrent::bind_address()).c_str() : "");</comment>

<comment type="line" pos:line="30" pos:column="1">// #ifndef USE_EXTRA_DEBUG</comment>
<comment type="line" pos:line="31" pos:column="1">//   pos = snprintf(buf, 128, "[U %i/%i][S %i/%i/%i][F %i/%i]",</comment>
<comment type="line" pos:line="32" pos:column="1">// #else</comment>
<comment type="line" pos:line="33" pos:column="1">//   pos = snprintf(buf, 128, "%i [U %i/%i][S %i/%i/%i][F %i/%i]",</comment>
<comment type="line" pos:line="34" pos:column="1">// 		 (int)(m_control-&gt;tick() - m_lastTick),</comment>
<comment type="line" pos:line="35" pos:column="1">// #endif</comment>
<comment type="line" pos:line="36" pos:column="1">// 		 torrent::currently_unchoked(),</comment>
<comment type="line" pos:line="37" pos:column="1">// 		 torrent::max_unchoked(),</comment>
<comment type="line" pos:line="38" pos:column="1">// 		 torrent::total_handshakes(),</comment>
<comment type="line" pos:line="39" pos:column="1">// 		 torrent::open_sockets(),</comment>
<comment type="line" pos:line="40" pos:column="1">// 		 torrent::max_open_sockets(),</comment>
<comment type="line" pos:line="41" pos:column="1">// 		 torrent::open_files(),</comment>
<comment type="line" pos:line="42" pos:column="1">// 		 torrent::max_open_files());</comment>

  <expr_stmt><expr><name pos:line="44" pos:column="3">position<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <call><name pos:line="44" pos:column="14">print_status_info<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">buffer<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">last<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="45" pos:column="3">m_canvas<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">print<pos:position pos:line="45" pos:column="18"/></name></name><argument_list pos:line="45" pos:column="18">(<argument><expr><literal type="number" pos:line="45" pos:column="19">0<pos:position pos:line="45" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="25">"%s"<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">buffer<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><name pos:line="47" pos:column="3">last<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <name pos:line="47" pos:column="10">last<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">-<pos:position pos:line="47" pos:column="16"/></operator> <operator pos:line="47" pos:column="17">(<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">position<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">-<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="29">buffer<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">)<pos:position pos:line="47" pos:column="36"/></operator></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">last<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">&gt;<pos:position pos:line="49" pos:column="16"/></operator> <name pos:line="49" pos:column="14">buffer<pos:position pos:line="49" pos:column="20"/></name></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21"> <block pos:line="49" pos:column="22">{
    <expr_stmt><expr><name pos:line="50" pos:column="5">position<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">print_status_extra<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">buffer<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">last<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">m_control<pos:position pos:line="50" pos:column="58"/></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="51" pos:column="5">m_canvas<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">-&gt;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="15">print<pos:position pos:line="51" pos:column="20"/></name></name><argument_list pos:line="51" pos:column="20">(<argument><expr><call><name><name pos:line="51" pos:column="21">m_canvas<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">get_width<pos:position pos:line="51" pos:column="40"/></name></name><argument_list pos:line="51" pos:column="40">()<pos:position pos:line="51" pos:column="42"/></argument_list></call> <operator pos:line="51" pos:column="43">-<pos:position pos:line="51" pos:column="44"/></operator> <operator pos:line="51" pos:column="45">(<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">position<pos:position pos:line="51" pos:column="54"/></name> <operator pos:line="51" pos:column="55">-<pos:position pos:line="51" pos:column="56"/></operator> <name pos:line="51" pos:column="57">buffer<pos:position pos:line="51" pos:column="63"/></name><operator pos:line="51" pos:column="63">)<pos:position pos:line="51" pos:column="64"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="66">0<pos:position pos:line="51" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="69">"%s"<pos:position pos:line="51" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="75">buffer<pos:position pos:line="51" pos:column="81"/></name></expr></argument>)<pos:position pos:line="51" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="83"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>


  <expr_stmt><expr><name pos:line="55" pos:column="3">m_lastTick<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name><name pos:line="55" pos:column="16">m_control<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">tick<pos:position pos:line="55" pos:column="31"/></name></name><argument_list pos:line="55" pos:column="31">()<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

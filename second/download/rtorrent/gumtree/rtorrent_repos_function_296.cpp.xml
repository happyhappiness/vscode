<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_296.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementFileList<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">receive_prev<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list> <block pos:line="2" pos:column="33">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">torrent<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">::<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="12">FileList<pos:position pos:line="3" pos:column="20"/></name></name><modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type> <name pos:line="3" pos:column="22">fl<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name><name pos:line="3" pos:column="27">m_download<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">-&gt;<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="39">download<pos:position pos:line="3" pos:column="47"/></name></name><argument_list pos:line="3" pos:column="47">()<pos:position pos:line="3" pos:column="49"/></argument_list></call><operator pos:line="3" pos:column="49">-&gt;<pos:position pos:line="3" pos:column="54"/></operator><call><name pos:line="3" pos:column="51">file_list<pos:position pos:line="3" pos:column="60"/></name><argument_list pos:line="3" pos:column="60">()<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="63"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">m_selected<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">==<pos:position pos:line="5" pos:column="20"/></operator> <call><name pos:line="5" pos:column="21">iterator<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><call><name><name pos:line="5" pos:column="30">fl<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">begin<pos:position pos:line="5" pos:column="39"/></name></name><argument_list pos:line="5" pos:column="39">()<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">m_selected<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">iterator<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><call><name><name pos:line="6" pos:column="27">fl<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">end<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">()<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">is_collapsed<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="5">m_selected<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">backward_current_depth<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt></block></then>
  <else pos:line="10" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="5">m_selected<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">--<pos:position pos:line="11" pos:column="17"/></operator></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">update_itr<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">()<pos:position pos:line="13" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_647.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type>
<name pos:line="2" pos:column="1">print_address<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name><modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type> <name pos:line="2" pos:column="21">first<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name><modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">last<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name><name pos:line="2" pos:column="46">rak<pos:position pos:line="2" pos:column="49"/></name><operator pos:line="2" pos:column="49">::<pos:position pos:line="2" pos:column="51"/></operator><name pos:line="2" pos:column="51">socket_address<pos:position pos:line="2" pos:column="65"/></name></name><modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type> <name pos:line="2" pos:column="67">sa<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list> <block pos:line="2" pos:column="71">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><call><name><name pos:line="3" pos:column="8">sa<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">address_c_str<pos:position pos:line="3" pos:column="25"/></name></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">first<pos:position pos:line="3" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="33">last<pos:position pos:line="3" pos:column="37"/></name> <operator pos:line="3" pos:column="38">-<pos:position pos:line="3" pos:column="39"/></operator> <name pos:line="3" pos:column="40">first<pos:position pos:line="3" pos:column="45"/></name></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="47"/></condition><then pos:line="3" pos:column="47">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">first<pos:position pos:line="4" pos:column="17"/></name></expr>;<pos:position pos:line="4" pos:column="18"/></return></block></then></if>

  <return pos:line="6" pos:column="3">return <expr><call><name><name pos:line="6" pos:column="10">std<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">::<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">find<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">first<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">last<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="33">'\0'<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_729.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">PathInput<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">Range<pos:position pos:line="1" pos:column="17"/></name></name></type>
<name><name pos:line="2" pos:column="1">PathInput<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">find_incomplete<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name><name pos:line="2" pos:column="28">utils<pos:position pos:line="2" pos:column="33"/></name><operator pos:line="2" pos:column="33">::<pos:position pos:line="2" pos:column="35"/></operator><name pos:line="2" pos:column="35">Directory<pos:position pos:line="2" pos:column="44"/></name></name><modifier pos:line="2" pos:column="44">&amp;<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="46">d<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name><name pos:line="2" pos:column="55">std<pos:position pos:line="2" pos:column="58"/></name><operator pos:line="2" pos:column="58">::<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">string<pos:position pos:line="2" pos:column="66"/></name></name><modifier pos:line="2" pos:column="66">&amp;<pos:position pos:line="2" pos:column="71"/></modifier></type> <name pos:line="2" pos:column="68">f<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list> <block pos:line="2" pos:column="71">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Range<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">r<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">r<pos:position pos:line="5" pos:column="4"/></name><operator pos:line="5" pos:column="4">.<pos:position pos:line="5" pos:column="5"/></operator><name pos:line="5" pos:column="5">first<pos:position pos:line="5" pos:column="10"/></name></name>  <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <call><name><name pos:line="5" pos:column="14">std<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">find_if<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">(<argument><expr><call><name><name pos:line="5" pos:column="27">d<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">begin<pos:position pos:line="5" pos:column="34"/></name></name><argument_list pos:line="5" pos:column="34">()<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="38">d<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">end<pos:position pos:line="5" pos:column="43"/></name></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="47">std<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">::<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">bind2nd<pos:position pos:line="5" pos:column="59"/></name></name><argument_list pos:line="5" pos:column="59">(<argument><expr><call><name><name pos:line="5" pos:column="60">rak<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">::<pos:position pos:line="5" pos:column="65"/></operator><name><name pos:line="5" pos:column="65">compare_base<pos:position pos:line="5" pos:column="77"/></name><argument_list type="generic" pos:line="5" pos:column="77">&lt;<argument><expr><name><name pos:line="5" pos:column="78">std<pos:position pos:line="5" pos:column="81"/></name><operator pos:line="5" pos:column="81">::<pos:position pos:line="5" pos:column="83"/></operator><name pos:line="5" pos:column="83">string<pos:position pos:line="5" pos:column="89"/></name></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="93"/></argument_list></name></name><argument_list pos:line="5" pos:column="90">()<pos:position pos:line="5" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="94">f<pos:position pos:line="5" pos:column="95"/></name></expr></argument>)<pos:position pos:line="5" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="98"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">r<pos:position pos:line="6" pos:column="4"/></name><operator pos:line="6" pos:column="4">.<pos:position pos:line="6" pos:column="5"/></operator><name pos:line="6" pos:column="5">second<pos:position pos:line="6" pos:column="11"/></name></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name><name pos:line="6" pos:column="14">std<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">::<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">find_if<pos:position pos:line="6" pos:column="26"/></name></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">r<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">first<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="36">d<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">.<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">end<pos:position pos:line="6" pos:column="41"/></name></name><argument_list pos:line="6" pos:column="41">()<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="45">std<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">::<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">not1<pos:position pos:line="6" pos:column="54"/></name></name><argument_list pos:line="6" pos:column="54">(<argument><expr><call><name><name pos:line="6" pos:column="55">std<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">::<pos:position pos:line="6" pos:column="60"/></operator><name pos:line="6" pos:column="60">bind2nd<pos:position pos:line="6" pos:column="67"/></name></name><argument_list pos:line="6" pos:column="67">(<argument><expr><call><name><name pos:line="6" pos:column="68">rak<pos:position pos:line="6" pos:column="71"/></name><operator pos:line="6" pos:column="71">::<pos:position pos:line="6" pos:column="73"/></operator><name><name pos:line="6" pos:column="73">compare_base<pos:position pos:line="6" pos:column="85"/></name><argument_list type="generic" pos:line="6" pos:column="85">&lt;<argument><expr><name><name pos:line="6" pos:column="86">std<pos:position pos:line="6" pos:column="89"/></name><operator pos:line="6" pos:column="89">::<pos:position pos:line="6" pos:column="91"/></operator><name pos:line="6" pos:column="91">string<pos:position pos:line="6" pos:column="97"/></name></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="101"/></argument_list></name></name><argument_list pos:line="6" pos:column="98">()<pos:position pos:line="6" pos:column="100"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="102">f<pos:position pos:line="6" pos:column="103"/></name></expr></argument>)<pos:position pos:line="6" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="107"/></expr_stmt>

  <return pos:line="8" pos:column="3">return <expr><name pos:line="8" pos:column="10">r<pos:position pos:line="8" pos:column="11"/></name></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_175.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name><modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">parse_value_nothrow<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name><modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">src<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int64_t<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">value<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">base<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">unit<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list> <block pos:line="2" pos:column="74">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">unit<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">&lt;=<pos:position pos:line="3" pos:column="17"/></operator> <literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr>)<pos:position pos:line="3" pos:column="17"/></condition><then pos:line="3" pos:column="17">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">input_error<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">(<argument><expr><literal type="string" pos:line="4" pos:column="32">"Command::string_to_value_unit(...) received unit &lt;= 0."<pos:position pos:line="4" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="90"/></throw></block></then></if>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name><modifier pos:line="6" pos:column="7">*<pos:position pos:line="6" pos:column="8"/></modifier></type> <name pos:line="6" pos:column="9">last<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
  <expr_stmt><expr><operator pos:line="7" pos:column="3">*<pos:position pos:line="7" pos:column="4"/></operator><name pos:line="7" pos:column="4">value<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">strtoll<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">src<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="25">&amp;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="26">last<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">base<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">last<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">src<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strcasecmp<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">src<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="25">"no"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call> <operator pos:line="10" pos:column="31">==<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">0<pos:position pos:line="10" pos:column="35"/></literal></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{ <expr_stmt><expr><operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">value<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">=<pos:position pos:line="10" pos:column="47"/></operator> <literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt> <return pos:line="10" pos:column="51">return <expr><name pos:line="10" pos:column="58">src<pos:position pos:line="10" pos:column="61"/></name> <operator pos:line="10" pos:column="62">+<pos:position pos:line="10" pos:column="63"/></operator> <call><name pos:line="10" pos:column="64">strlen<pos:position pos:line="10" pos:column="70"/></name><argument_list pos:line="10" pos:column="70">(<argument><expr><literal type="string" pos:line="10" pos:column="71">"no"<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></return> }<pos:position pos:line="10" pos:column="79"/></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strcasecmp<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">src<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"yes"<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{ <expr_stmt><expr><operator pos:line="11" pos:column="40">*<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">value<pos:position pos:line="11" pos:column="46"/></name> <operator pos:line="11" pos:column="47">=<pos:position pos:line="11" pos:column="48"/></operator> <literal type="number" pos:line="11" pos:column="49">1<pos:position pos:line="11" pos:column="50"/></literal></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt> <return pos:line="11" pos:column="52">return <expr><name pos:line="11" pos:column="59">src<pos:position pos:line="11" pos:column="62"/></name> <operator pos:line="11" pos:column="63">+<pos:position pos:line="11" pos:column="64"/></operator> <call><name pos:line="11" pos:column="65">strlen<pos:position pos:line="11" pos:column="71"/></name><argument_list pos:line="11" pos:column="71">(<argument><expr><literal type="string" pos:line="11" pos:column="72">"yes"<pos:position pos:line="11" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="79"/></return> }<pos:position pos:line="11" pos:column="81"/></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">strcasecmp<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">src<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"true"<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{ <expr_stmt><expr><operator pos:line="12" pos:column="41">*<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">value<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">=<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">1<pos:position pos:line="12" pos:column="51"/></literal></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt> <return pos:line="12" pos:column="53">return <expr><name pos:line="12" pos:column="60">src<pos:position pos:line="12" pos:column="63"/></name> <operator pos:line="12" pos:column="64">+<pos:position pos:line="12" pos:column="65"/></operator> <call><name pos:line="12" pos:column="66">strlen<pos:position pos:line="12" pos:column="72"/></name><argument_list pos:line="12" pos:column="72">(<argument><expr><literal type="string" pos:line="12" pos:column="73">"true"<pos:position pos:line="12" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="81"/></return> }<pos:position pos:line="12" pos:column="83"/></block></then></if>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">strcasecmp<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">src<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"false"<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call> <operator pos:line="13" pos:column="34">==<pos:position pos:line="13" pos:column="36"/></operator> <literal type="number" pos:line="13" pos:column="37">0<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{ <expr_stmt><expr><operator pos:line="13" pos:column="42">*<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">value<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">=<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt> <return pos:line="13" pos:column="54">return <expr><name pos:line="13" pos:column="61">src<pos:position pos:line="13" pos:column="64"/></name> <operator pos:line="13" pos:column="65">+<pos:position pos:line="13" pos:column="66"/></operator> <call><name pos:line="13" pos:column="67">strlen<pos:position pos:line="13" pos:column="73"/></name><argument_list pos:line="13" pos:column="73">(<argument><expr><literal type="string" pos:line="13" pos:column="74">"false"<pos:position pos:line="13" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="83"/></return> }<pos:position pos:line="13" pos:column="85"/></block></then></if>

    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">src<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <switch pos:line="18" pos:column="3">switch <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">*<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">last<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition> <block pos:line="18" pos:column="18">{
  <case pos:line="19" pos:column="3">case <expr><literal type="char" pos:line="19" pos:column="8">'b'<pos:position pos:line="19" pos:column="11"/></literal></expr>:<pos:position pos:line="19" pos:column="12"/></case>
  <case pos:line="20" pos:column="3">case <expr><literal type="char" pos:line="20" pos:column="8">'B'<pos:position pos:line="20" pos:column="11"/></literal></expr>:<pos:position pos:line="20" pos:column="12"/></case> <expr_stmt><expr><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">last<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt> <break pos:line="20" pos:column="21">break;<pos:position pos:line="20" pos:column="27"/></break>
  <case pos:line="21" pos:column="3">case <expr><literal type="char" pos:line="21" pos:column="8">'k'<pos:position pos:line="21" pos:column="11"/></literal></expr>:<pos:position pos:line="21" pos:column="12"/></case>
  <case pos:line="22" pos:column="3">case <expr><literal type="char" pos:line="22" pos:column="8">'K'<pos:position pos:line="22" pos:column="11"/></literal></expr>:<pos:position pos:line="22" pos:column="12"/></case> <expr_stmt><expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">value<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">value<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">&lt;&lt;<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="32">10<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt> <expr_stmt><expr><operator pos:line="22" pos:column="36">++<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">last<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt> <break pos:line="22" pos:column="44">break;<pos:position pos:line="22" pos:column="50"/></break>
  <case pos:line="23" pos:column="3">case <expr><literal type="char" pos:line="23" pos:column="8">'m'<pos:position pos:line="23" pos:column="11"/></literal></expr>:<pos:position pos:line="23" pos:column="12"/></case>
  <case pos:line="24" pos:column="3">case <expr><literal type="char" pos:line="24" pos:column="8">'M'<pos:position pos:line="24" pos:column="11"/></literal></expr>:<pos:position pos:line="24" pos:column="12"/></case> <expr_stmt><expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">value<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <operator pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">value<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">&lt;&lt;<pos:position pos:line="24" pos:column="37"/></operator> <literal type="number" pos:line="24" pos:column="32">20<pos:position pos:line="24" pos:column="34"/></literal></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt> <expr_stmt><expr><operator pos:line="24" pos:column="36">++<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">last<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt> <break pos:line="24" pos:column="44">break;<pos:position pos:line="24" pos:column="50"/></break>
  <case pos:line="25" pos:column="3">case <expr><literal type="char" pos:line="25" pos:column="8">'g'<pos:position pos:line="25" pos:column="11"/></literal></expr>:<pos:position pos:line="25" pos:column="12"/></case>
  <case pos:line="26" pos:column="3">case <expr><literal type="char" pos:line="26" pos:column="8">'G'<pos:position pos:line="26" pos:column="11"/></literal></expr>:<pos:position pos:line="26" pos:column="12"/></case> <expr_stmt><expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">value<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <operator pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">value<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&lt;&lt;<pos:position pos:line="26" pos:column="37"/></operator> <literal type="number" pos:line="26" pos:column="32">30<pos:position pos:line="26" pos:column="34"/></literal></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt> <expr_stmt><expr><operator pos:line="26" pos:column="36">++<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">last<pos:position pos:line="26" pos:column="42"/></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt> <break pos:line="26" pos:column="44">break;<pos:position pos:line="26" pos:column="50"/></break>
<comment type="line" pos:line="27" pos:column="1">//   case ' ':</comment>
<comment type="line" pos:line="28" pos:column="1">//   case '\0': *value = *value * unit; break;</comment>
<comment type="line" pos:line="29" pos:column="1">//   default: throw torrent::input_error("Could not parse value.");</comment>
  <default pos:line="30" pos:column="3">default:<pos:position pos:line="30" pos:column="11"/></default> <expr_stmt><expr><operator pos:line="30" pos:column="12">*<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">value<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">value<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">unit<pos:position pos:line="30" pos:column="34"/></name></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt> <break pos:line="30" pos:column="36">break;<pos:position pos:line="30" pos:column="42"/></break>
  }<pos:position pos:line="31" pos:column="4"/></block></switch>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">last<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

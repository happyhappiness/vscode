<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_197.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DownloadList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">hash_done<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">Download<pos:position pos:line="2" pos:column="33"/></name><modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">download<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <block pos:line="2" pos:column="45">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">check_contains<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">download<pos:position pos:line="3" pos:column="26"/></name></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="28"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><call><name><name pos:line="5" pos:column="8">download<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">download<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><call><name pos:line="5" pos:column="30">is_hash_checked<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">()<pos:position pos:line="5" pos:column="47"/></argument_list></call> <operator pos:line="5" pos:column="48">||<pos:position pos:line="5" pos:column="50"/></operator>
      <call><name><name pos:line="6" pos:column="7">download<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">download<pos:position pos:line="6" pos:column="25"/></name></name><argument_list pos:line="6" pos:column="25">()<pos:position pos:line="6" pos:column="27"/></argument_list></call><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><call><name pos:line="6" pos:column="29">is_hash_checking<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call> <operator pos:line="6" pos:column="48">||<pos:position pos:line="6" pos:column="50"/></operator>
      <call><name><name pos:line="7" pos:column="7">download<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">download<pos:position pos:line="7" pos:column="25"/></name></name><argument_list pos:line="7" pos:column="25">()<pos:position pos:line="7" pos:column="27"/></argument_list></call><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><call><name pos:line="7" pos:column="29">is_active<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">()<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
    <block type="pseudo"><throw pos:line="8" pos:column="5">throw <expr><call><name><name pos:line="8" pos:column="11">torrent<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">::<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">internal_error<pos:position pos:line="8" pos:column="34"/></name></name><argument_list pos:line="8" pos:column="34">(<argument><expr><literal type="string" pos:line="8" pos:column="35">"DownloadList::hash_done(...) download in invalid state."<pos:position pos:line="8" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="94"/></throw></block></then></if>

  <comment type="line" pos:line="10" pos:column="3">// Need to find some sane conditional here. Can we check the total</comment>
  <comment type="line" pos:line="11" pos:column="3">// downloaded to ensure something was transferred, thus we didn't</comment>
  <comment type="line" pos:line="12" pos:column="3">// just hash an already completed torrent with lacking session data?</comment>
  <comment type="line" pos:line="13" pos:column="3">//</comment>
  <comment type="line" pos:line="14" pos:column="3">// Perhaps we should use a seperate variable or state, and check</comment>
  <comment type="line" pos:line="15" pos:column="3">// that. Thus we can bork the download if the hash check doesn't</comment>
  <comment type="line" pos:line="16" pos:column="3">// confirm all the data, avoiding large BW usage on f.ex. the</comment>
  <comment type="line" pos:line="17" pos:column="3">// ReiserFS bug with &gt;4GB files.</comment>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int64_t<pos:position pos:line="19" pos:column="10"/></name></type> <name pos:line="19" pos:column="11">hashing<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><call><name><name pos:line="19" pos:column="21">download<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">variable<pos:position pos:line="19" pos:column="39"/></name></name><argument_list pos:line="19" pos:column="39">()<pos:position pos:line="19" pos:column="41"/></argument_list></call><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><call><name pos:line="19" pos:column="43">get_value<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><literal type="string" pos:line="19" pos:column="53">"hashing"<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="64"/></decl_stmt>
  <expr_stmt><expr><call><name><name pos:line="20" pos:column="3">download<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">variable<pos:position pos:line="20" pos:column="21"/></name></name><argument_list pos:line="20" pos:column="21">()<pos:position pos:line="20" pos:column="23"/></argument_list></call><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><call><name pos:line="20" pos:column="25">set<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><literal type="string" pos:line="20" pos:column="29">"hashing"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="40">Download<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">::<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">variable_hashing_stopped<pos:position pos:line="20" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>

  <switch pos:line="22" pos:column="3">switch <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">hashing<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition> <block pos:line="22" pos:column="20">{
  <case pos:line="23" pos:column="3">case <expr><name><name pos:line="23" pos:column="8">Download<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">::<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">variable_hashing_started<pos:position pos:line="23" pos:column="42"/></name></name></expr>:<pos:position pos:line="23" pos:column="43"/></case>
    <comment type="line" pos:line="24" pos:column="5">// Normal re/hashing.</comment>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name><name pos:line="26" pos:column="9">download<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">is_done<pos:position pos:line="26" pos:column="26"/></name></name><argument_list pos:line="26" pos:column="26">()<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="27" pos:column="7">download<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">variable<pos:position pos:line="27" pos:column="25"/></name></name><argument_list pos:line="27" pos:column="25">()<pos:position pos:line="27" pos:column="27"/></argument_list></call><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><call><name pos:line="27" pos:column="29">set<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="string" pos:line="27" pos:column="33">"complete"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="45">(<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">int64_t<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">)<pos:position pos:line="27" pos:column="54"/></operator><literal type="number" pos:line="27" pos:column="54">1<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt></block></then></if>
    
    <comment type="line" pos:line="29" pos:column="5">// Save resume data so we update time-stamps and priorities if</comment>
    <comment type="line" pos:line="30" pos:column="5">// they were invalid/changed when loading.</comment>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">download<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">download<pos:position pos:line="31" pos:column="23"/></name></name><argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><call><name pos:line="31" pos:column="27">hash_resume_save<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">()<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name><name pos:line="33" pos:column="9">download<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">variable<pos:position pos:line="33" pos:column="27"/></name></name><argument_list pos:line="33" pos:column="27">()<pos:position pos:line="33" pos:column="29"/></argument_list></call><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><call><name pos:line="33" pos:column="31">get_value<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><literal type="string" pos:line="33" pos:column="41">"state"<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call> <operator pos:line="33" pos:column="50">==<pos:position pos:line="33" pos:column="52"/></operator> <literal type="number" pos:line="33" pos:column="53">1<pos:position pos:line="33" pos:column="54"/></literal></expr>)<pos:position pos:line="33" pos:column="55"/></condition><then pos:line="33" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">resume<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">download<pos:position pos:line="34" pos:column="22"/></name></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt></block></then></if>

    <return pos:line="36" pos:column="5">return;<pos:position pos:line="36" pos:column="12"/></return>

  <case pos:line="38" pos:column="3">case <expr><name><name pos:line="38" pos:column="8">Download<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">::<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">variable_hashing_last<pos:position pos:line="38" pos:column="39"/></name></name></expr>:<pos:position pos:line="38" pos:column="40"/></case>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name><name pos:line="40" pos:column="9">download<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">is_done<pos:position pos:line="40" pos:column="26"/></name></name><argument_list pos:line="40" pos:column="26">()<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{

      <expr_stmt><expr><call><name pos:line="42" pos:column="7">confirm_finished<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">download<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>

      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><call><name><name pos:line="44" pos:column="11">download<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">variable<pos:position pos:line="44" pos:column="29"/></name></name><argument_list pos:line="44" pos:column="29">()<pos:position pos:line="44" pos:column="31"/></argument_list></call><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><call><name pos:line="44" pos:column="33">get_value<pos:position pos:line="44" pos:column="42"/></name><argument_list pos:line="44" pos:column="42">(<argument><expr><literal type="string" pos:line="44" pos:column="43">"state"<pos:position pos:line="44" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call> <operator pos:line="44" pos:column="52">==<pos:position pos:line="44" pos:column="54"/></operator> <literal type="number" pos:line="44" pos:column="55">1<pos:position pos:line="44" pos:column="56"/></literal></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">resume<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">download<pos:position pos:line="45" pos:column="24"/></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt></block></then></if>

    }<pos:position pos:line="47" pos:column="6"/></block></then> <else pos:line="47" pos:column="7">else <block pos:line="47" pos:column="12">{
      <expr_stmt><expr><call><name><name pos:line="48" pos:column="7">download<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">set_message<pos:position pos:line="48" pos:column="28"/></name></name><argument_list pos:line="48" pos:column="28">(<argument><expr><literal type="string" pos:line="48" pos:column="29">"Hash check on download completion found bad chunks."<pos:position pos:line="48" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="84"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>
    
    <return pos:line="51" pos:column="5">return;<pos:position pos:line="51" pos:column="12"/></return>

  <case pos:line="53" pos:column="3">case <expr><name><name pos:line="53" pos:column="8">Download<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">::<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">variable_hashing_stopped<pos:position pos:line="53" pos:column="42"/></name></name></expr>:<pos:position pos:line="53" pos:column="43"/></case>
  <default pos:line="54" pos:column="3">default:<pos:position pos:line="54" pos:column="11"/></default>
    <comment type="line" pos:line="55" pos:column="5">// Either an error or someone wrote to the hashing variable...</comment>
    <expr_stmt><expr><call><name><name pos:line="56" pos:column="5">download<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">set_message<pos:position pos:line="56" pos:column="26"/></name></name><argument_list pos:line="56" pos:column="26">(<argument><expr><literal type="string" pos:line="56" pos:column="27">"Hash check completed but the \"hashing\" variable is in an invalid state."<pos:position pos:line="56" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="104"/></expr_stmt>
    <return pos:line="57" pos:column="5">return;<pos:position pos:line="57" pos:column="12"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></switch>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

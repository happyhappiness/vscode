<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_222.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_command_file<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">std<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">string<pos:position pos:line="2" pos:column="37"/></name></name><modifier pos:line="2" pos:column="37">&amp;<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="39">path<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <block pos:line="2" pos:column="45">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">std<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">::<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">fstream<pos:position pos:line="3" pos:column="15"/></name></name></type> <name pos:line="3" pos:column="16">file<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><call><name><name pos:line="3" pos:column="21">rak<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">::<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">path_expand<pos:position pos:line="3" pos:column="37"/></name></name><argument_list pos:line="3" pos:column="37">(<argument><expr><name pos:line="3" pos:column="38">path<pos:position pos:line="3" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3" pos:column="43"/></argument_list></call><operator pos:line="3" pos:column="43">.<pos:position pos:line="3" pos:column="44"/></operator><call><name pos:line="3" pos:column="44">c_str<pos:position pos:line="3" pos:column="49"/></name><argument_list pos:line="3" pos:column="49">()<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="53">std<pos:position pos:line="3" pos:column="56"/></name><operator pos:line="3" pos:column="56">::<pos:position pos:line="3" pos:column="58"/></operator><name pos:line="3" pos:column="58">ios<pos:position pos:line="3" pos:column="61"/></name><operator pos:line="3" pos:column="61">::<pos:position pos:line="3" pos:column="63"/></operator><name pos:line="3" pos:column="63">in<pos:position pos:line="3" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></decl>;<pos:position pos:line="3" pos:column="67"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><call><name><name pos:line="5" pos:column="8">file<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">.<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">is_open<pos:position pos:line="5" pos:column="20"/></name></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="boolean" pos:line="6" pos:column="12">false<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">lineNumber<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">buffer<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">4096<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <try pos:line="11" pos:column="3">try <block pos:line="11" pos:column="7">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name> <name pos:line="12" pos:column="14">int<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">getCount<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><call><name><name pos:line="14" pos:column="12">file<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">getline<pos:position pos:line="14" pos:column="24"/></name></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">buffer<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">+<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">getCount<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="44">4096<pos:position pos:line="14" pos:column="48"/></literal> <operator pos:line="14" pos:column="49">-<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">getCount<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call><operator pos:line="14" pos:column="60">.<pos:position pos:line="14" pos:column="61"/></operator><call><name pos:line="14" pos:column="61">good<pos:position pos:line="14" pos:column="65"/></name><argument_list pos:line="14" pos:column="65">()<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="68"/></condition> <block pos:line="14" pos:column="69">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><call><name><name pos:line="15" pos:column="11">file<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">gcount<pos:position pos:line="15" pos:column="22"/></name></name><argument_list pos:line="15" pos:column="22">()<pos:position pos:line="15" pos:column="24"/></argument_list></call> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
        <block type="pseudo"><throw pos:line="16" pos:column="9">throw <expr><call><name><name pos:line="16" pos:column="15">torrent<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">::<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">internal_error<pos:position pos:line="16" pos:column="38"/></name></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"parse_command_file(...) file.gcount() == 0."<pos:position pos:line="16" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="86"/></throw></block></then></if>

      <decl_stmt><decl><type><name pos:line="18" pos:column="7">int<pos:position pos:line="18" pos:column="10"/></name></type> <name pos:line="18" pos:column="11">escaped<pos:position pos:line="18" pos:column="18"/></name> <init pos:line="18" pos:column="19">= <expr><call><name pos:line="18" pos:column="21">parse_count_escaped<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">buffer<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">+<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="50">getCount<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">buffer<pos:position pos:line="18" pos:column="66"/></name> <operator pos:line="18" pos:column="67">+<pos:position pos:line="18" pos:column="68"/></operator> <name pos:line="18" pos:column="69">getCount<pos:position pos:line="18" pos:column="77"/></name> <operator pos:line="18" pos:column="78">+<pos:position pos:line="18" pos:column="79"/></operator> <call><name><name pos:line="18" pos:column="80">file<pos:position pos:line="18" pos:column="84"/></name><operator pos:line="18" pos:column="84">.<pos:position pos:line="18" pos:column="85"/></operator><name pos:line="18" pos:column="85">gcount<pos:position pos:line="18" pos:column="91"/></name></name><argument_list pos:line="18" pos:column="91">()<pos:position pos:line="18" pos:column="93"/></argument_list></call> <operator pos:line="18" pos:column="94">-<pos:position pos:line="18" pos:column="95"/></operator> <literal type="number" pos:line="18" pos:column="96">1<pos:position pos:line="18" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="99"/></decl_stmt>

      <expr_stmt><expr><name pos:line="20" pos:column="7">lineNumber<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">++<pos:position pos:line="20" pos:column="19"/></operator></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">getCount<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">+=<pos:position pos:line="21" pos:column="18"/></operator> <call><name><name pos:line="21" pos:column="19">file<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">gcount<pos:position pos:line="21" pos:column="30"/></name></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call> <operator pos:line="21" pos:column="33">-<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">1<pos:position pos:line="21" pos:column="36"/></literal></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>

      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">getCount<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">==<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">4096<pos:position pos:line="23" pos:column="27"/></literal> <operator pos:line="23" pos:column="28">-<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="30">1<pos:position pos:line="23" pos:column="31"/></literal></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32">
        <block type="pseudo"><throw pos:line="24" pos:column="9">throw <expr><call><name><name pos:line="24" pos:column="15">torrent<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">::<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">input_error<pos:position pos:line="24" pos:column="35"/></name></name><argument_list pos:line="24" pos:column="35">(<argument><expr><literal type="string" pos:line="24" pos:column="36">"Exceeded max line lenght."<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></throw></block></then></if>
      
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">escaped<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">&amp;<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="21">0x1<pos:position pos:line="26" pos:column="24"/></literal></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25"> <block pos:line="26" pos:column="26">{
        <comment type="line" pos:line="27" pos:column="9">// Remove the escape characters and continue reading.</comment>
        <expr_stmt><expr><name pos:line="28" pos:column="9">getCount<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">-=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">escaped<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
        <continue pos:line="29" pos:column="9">continue;<pos:position pos:line="29" pos:column="18"/></continue>
      }<pos:position pos:line="30" pos:column="8"/></block></then></if>

      <comment type="line" pos:line="32" pos:column="7">// Would be nice to make this zero-copy.</comment>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">parse_command<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">NULL<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">buffer<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">buffer<pos:position pos:line="33" pos:column="41"/></name> <operator pos:line="33" pos:column="42">+<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="44">getCount<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">getCount<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></while>

  }<pos:position pos:line="37" pos:column="4"/></block> <catch pos:line="37" pos:column="5">catch <parameter_list pos:line="37" pos:column="11">(<parameter><decl><type><name><name pos:line="37" pos:column="12">torrent<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">::<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">input_error<pos:position pos:line="37" pos:column="32"/></name></name><modifier pos:line="37" pos:column="32">&amp;<pos:position pos:line="37" pos:column="37"/></modifier></type> <name pos:line="37" pos:column="34">e<pos:position pos:line="37" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="37" pos:column="36"/></parameter_list> <block pos:line="37" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">snprintf<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">buffer<pos:position pos:line="38" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="22">2048<pos:position pos:line="38" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="28">"Error in option file: %s:%u: %s"<pos:position pos:line="38" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="63">path<pos:position pos:line="38" pos:column="67"/></name><operator pos:line="38" pos:column="67">.<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="68">c_str<pos:position pos:line="38" pos:column="73"/></name></name><argument_list pos:line="38" pos:column="73">()<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="77">lineNumber<pos:position pos:line="38" pos:column="87"/></name></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="89">e<pos:position pos:line="38" pos:column="90"/></name><operator pos:line="38" pos:column="90">.<pos:position pos:line="38" pos:column="91"/></operator><name pos:line="38" pos:column="91">what<pos:position pos:line="38" pos:column="95"/></name></name><argument_list pos:line="38" pos:column="95">()<pos:position pos:line="38" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="99"/></expr_stmt>

    <throw pos:line="40" pos:column="5">throw <expr><call><name><name pos:line="40" pos:column="11">torrent<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">::<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">input_error<pos:position pos:line="40" pos:column="31"/></name></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">buffer<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></throw>
  }<pos:position pos:line="41" pos:column="4"/></block></catch></try>

  <return pos:line="43" pos:column="3">return <expr><literal type="boolean" pos:line="43" pos:column="10">true<pos:position pos:line="43" pos:column="14"/></literal></expr>;<pos:position pos:line="43" pos:column="15"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

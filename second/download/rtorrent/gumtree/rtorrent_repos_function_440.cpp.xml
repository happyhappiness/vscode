<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_440.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CurlStack<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">remove_get<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">CurlGet<pos:position pos:line="2" pos:column="30"/></name><modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">get<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list> <block pos:line="2" pos:column="37">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">iterator<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">itr<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><call><name><name pos:line="3" pos:column="18">std<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">::<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">find<pos:position pos:line="3" pos:column="27"/></name></name><argument_list pos:line="3" pos:column="27">(<argument><expr><call><name pos:line="3" pos:column="28">begin<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">()<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="37">end<pos:position pos:line="3" pos:column="40"/></name><argument_list pos:line="3" pos:column="40">()<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="3" pos:column="44">get<pos:position pos:line="3" pos:column="47"/></name></expr></argument>)<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">itr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <call><name pos:line="5" pos:column="14">end<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">()<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">internal_error<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><literal type="string" pos:line="6" pos:column="35">"Could not find CurlGet when calling CurlStack::remove."<pos:position pos:line="6" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="93"/></throw></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="8" pos:column="3">base_type<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">erase<pos:position pos:line="8" pos:column="19"/></name></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">itr<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

  <comment type="line" pos:line="10" pos:column="3">// The CurlGet object was never activated, so we just skip this one.</comment>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><call><name><name pos:line="11" pos:column="8">get<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">is_active<pos:position pos:line="11" pos:column="22"/></name></name><argument_list pos:line="11" pos:column="22">()<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
    <block type="pseudo"><return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">get<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">set_active<pos:position pos:line="14" pos:column="18"/></name></name><argument_list pos:line="14" pos:column="18">(<argument><expr><literal type="boolean" pos:line="14" pos:column="19">false<pos:position pos:line="14" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">curl_multi_remove_handle<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">CURLM<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">m_handle<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><call><name><name pos:line="16" pos:column="50">get<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">handle<pos:position pos:line="16" pos:column="61"/></name></name><argument_list pos:line="16" pos:column="61">()<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call> <operator pos:line="16" pos:column="65">&gt;<pos:position pos:line="16" pos:column="69"/></operator> <literal type="number" pos:line="16" pos:column="67">0<pos:position pos:line="16" pos:column="68"/></literal></expr>)<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69">
    <block type="pseudo"><throw pos:line="17" pos:column="5">throw <expr><call><name><name pos:line="17" pos:column="11">torrent<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">::<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">internal_error<pos:position pos:line="17" pos:column="34"/></name></name><argument_list pos:line="17" pos:column="34">(<argument><expr><literal type="string" pos:line="17" pos:column="35">"Error calling curl_multi_remove_handle."<pos:position pos:line="17" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="78"/></throw></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">m_active<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">==<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">m_maxActive<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&amp;&amp;<pos:position pos:line="19" pos:column="41"/></operator>
      <operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">itr<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name><name pos:line="20" pos:column="14">std<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">::<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">find_if<pos:position pos:line="20" pos:column="26"/></name></name><argument_list pos:line="20" pos:column="26">(<argument><expr><call><name pos:line="20" pos:column="27">begin<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">()<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="36">end<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">()<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="43">std<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">::<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">not1<pos:position pos:line="20" pos:column="52"/></name></name><argument_list pos:line="20" pos:column="52">(<argument><expr><call><name><name pos:line="20" pos:column="53">std<pos:position pos:line="20" pos:column="56"/></name><operator pos:line="20" pos:column="56">::<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="58">mem_fun<pos:position pos:line="20" pos:column="65"/></name></name><argument_list pos:line="20" pos:column="65">(<argument><expr><operator pos:line="20" pos:column="66">&amp;<pos:position pos:line="20" pos:column="71"/></operator><name><name pos:line="20" pos:column="67">CurlGet<pos:position pos:line="20" pos:column="74"/></name><operator pos:line="20" pos:column="74">::<pos:position pos:line="20" pos:column="76"/></operator><name pos:line="20" pos:column="76">is_active<pos:position pos:line="20" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="88"/></argument_list></call><operator pos:line="20" pos:column="88">)<pos:position pos:line="20" pos:column="89"/></operator> <operator pos:line="20" pos:column="90">!=<pos:position pos:line="20" pos:column="92"/></operator> <call><name pos:line="20" pos:column="93">end<pos:position pos:line="20" pos:column="96"/></name><argument_list pos:line="20" pos:column="96">()<pos:position pos:line="20" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="99"/></condition><then pos:line="20" pos:column="99"> <block pos:line="20" pos:column="100">{
    <expr_stmt><expr><call><name><operator pos:line="21" pos:column="5">(<pos:position pos:line="21" pos:column="6"/></operator><operator pos:line="21" pos:column="6">*<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">itr<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">)<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">set_active<pos:position pos:line="21" pos:column="23"/></name></name><argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="boolean" pos:line="21" pos:column="24">true<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">curl_multi_add_handle<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><operator pos:line="23" pos:column="31">(<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">CURLM<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">*<pos:position pos:line="23" pos:column="38"/></operator><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">m_handle<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><call><name><operator pos:line="23" pos:column="49">(<pos:position pos:line="23" pos:column="50"/></operator><operator pos:line="23" pos:column="50">*<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="51">itr<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">handle<pos:position pos:line="23" pos:column="63"/></name></name><argument_list pos:line="23" pos:column="63">()<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call> <operator pos:line="23" pos:column="67">&gt;<pos:position pos:line="23" pos:column="71"/></operator> <literal type="number" pos:line="23" pos:column="69">0<pos:position pos:line="23" pos:column="70"/></literal></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71">
      <block type="pseudo"><throw pos:line="24" pos:column="7">throw <expr><call><name><name pos:line="24" pos:column="13">torrent<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">::<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">internal_error<pos:position pos:line="24" pos:column="36"/></name></name><argument_list pos:line="24" pos:column="36">(<argument><expr><literal type="string" pos:line="24" pos:column="37">"Error calling curl_multi_add_handle."<pos:position pos:line="24" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></throw></block></then></if>

  }<pos:position pos:line="26" pos:column="4"/></block></then> <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">m_active<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">--<pos:position pos:line="27" pos:column="15"/></operator></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></else></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

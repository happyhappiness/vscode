<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_177.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name><modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">parse_list<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">first<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">last<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">torrent<pos:position pos:line="2" pos:column="56"/></name><operator pos:line="2" pos:column="56">::<pos:position pos:line="2" pos:column="58"/></operator><name pos:line="2" pos:column="58">Object<pos:position pos:line="2" pos:column="64"/></name></name><modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type> <name pos:line="2" pos:column="66">dest<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="2" pos:column="72">bool<pos:position pos:line="2" pos:column="76"/></name></type> (<modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier><name pos:line="2" pos:column="79">delim<pos:position pos:line="2" pos:column="84"/></name>)<parameter_list pos:line="2" pos:column="85">(<parameter><decl><type><specifier pos:line="2" pos:column="86">const<pos:position pos:line="2" pos:column="91"/></specifier> <name pos:line="2" pos:column="92">char<pos:position pos:line="2" pos:column="96"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="97"/></parameter_list></function_decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list> <block pos:line="2" pos:column="99">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><call><name><name pos:line="3" pos:column="8">dest<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">is_list<pos:position pos:line="3" pos:column="21"/></name></name><argument_list pos:line="3" pos:column="21">()<pos:position pos:line="3" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">internal_error<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><literal type="string" pos:line="4" pos:column="35">"parse_list(...) !dest-&gt;is_list()."<pos:position pos:line="4" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="72"/></throw></block></then></if>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><literal type="boolean" pos:line="6" pos:column="10">true<pos:position pos:line="6" pos:column="14"/></literal></expr>)<pos:position pos:line="6" pos:column="15"/></condition> <block pos:line="6" pos:column="16">{
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">torrent<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">::<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">Object<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">tmp<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">first<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">parse_skip_wspace<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">first<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">last<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">first<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">parse_object<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">first<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">last<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="40">tmp<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">delim<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">first<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">parse_skip_wspace<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">first<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">last<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">dest<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">as_list<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">()<pos:position pos:line="13" pos:column="20"/></argument_list></call><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><call><name pos:line="13" pos:column="21">push_back<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">tmp<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
    
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">first<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">last<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">||<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="26">!<pos:position pos:line="15" pos:column="27"/></operator><call><name pos:line="15" pos:column="27">parse_is_seperator<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><operator pos:line="15" pos:column="46">*<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">first<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54">
      <block type="pseudo"><break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">first<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">++<pos:position pos:line="18" pos:column="12"/></operator></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></while>

  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">first<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_392.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementTrackerList<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">receive_cycle_group<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list> <block pos:line="2" pos:column="43">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">m_window<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">==<pos:position pos:line="3" pos:column="18"/></operator> <name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">internal_error<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><literal type="string" pos:line="4" pos:column="35">"ui::ElementTrackerList::receive_group_cycle(...) called on a disabled object"<pos:position pos:line="4" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="115"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">torrent<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">::<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">TrackerList<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">tl<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name><name pos:line="6" pos:column="29">m_download<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">download<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><call><name pos:line="6" pos:column="53">tracker_list<pos:position pos:line="6" pos:column="65"/></name><argument_list pos:line="6" pos:column="65">()<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="68"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">m_focus<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&gt;=<pos:position pos:line="8" pos:column="20"/></operator> <call><name><name pos:line="8" pos:column="18">tl<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">size<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">()<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
    <block type="pseudo"><throw pos:line="9" pos:column="5">throw <expr><call><name><name pos:line="9" pos:column="11">torrent<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">::<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">internal_error<pos:position pos:line="9" pos:column="34"/></name></name><argument_list pos:line="9" pos:column="34">(<argument><expr><literal type="string" pos:line="9" pos:column="35">"ui::ElementTrackerList::receive_group_cycle(...) called with an invalid focus"<pos:position pos:line="9" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="116"/></throw></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="11" pos:column="3">tl<pos:position pos:line="11" pos:column="5"/></name><operator pos:line="11" pos:column="5">.<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">cycle_group<pos:position pos:line="11" pos:column="17"/></name></name><argument_list pos:line="11" pos:column="17">(<argument><expr><call><name><name pos:line="11" pos:column="18">tl<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">get<pos:position pos:line="11" pos:column="24"/></name></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">m_focus<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><call><name pos:line="11" pos:column="34">group<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">()<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="13" pos:column="3">m_window<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">mark_dirty<pos:position pos:line="13" pos:column="23"/></name></name><argument_list pos:line="13" pos:column="23">()<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

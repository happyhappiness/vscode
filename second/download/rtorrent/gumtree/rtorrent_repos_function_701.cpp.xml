<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_701.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name><name pos:line="2" pos:column="1">Frame<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">balance_column<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">uint32_t<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">x<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">uint32_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">y<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">uint32_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">width<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">uint32_t<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">height<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list> <block pos:line="2" pos:column="80">{
  <comment type="line" pos:line="3" pos:column="3">// Find the size of the static frames. The dynamic frames are added</comment>
  <comment type="line" pos:line="4" pos:column="3">// to a temporary list for the second pass. Each frame uses the</comment>
  <comment type="line" pos:line="5" pos:column="3">// m_width and m_height as temporary storage for width and height in</comment>
  <comment type="line" pos:line="6" pos:column="3">// this algorithm.</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_type<pos:position pos:line="7" pos:column="12"/></name></type>    <name pos:line="7" pos:column="16">dynamicSize<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">dynamic_type<pos:position pos:line="8" pos:column="15"/></name></type> <name><name pos:line="8" pos:column="16">dynamicFrames<pos:position pos:line="8" pos:column="29"/></name><index pos:line="8" pos:column="29">[<expr><name pos:line="8" pos:column="30">max_size<pos:position pos:line="8" pos:column="38"/></name></expr>]<pos:position pos:line="8" pos:column="39"/></index></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">remaining<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name pos:line="10" pos:column="19">width<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
  
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><decl><type><name pos:line="12" pos:column="8">Frame<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier><modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">itr<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name pos:line="12" pos:column="22">m_container<pos:position pos:line="12" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="12" pos:column="35">*<pos:position pos:line="12" pos:column="36"/></modifier><modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="37">last<pos:position pos:line="12" pos:column="41"/></name> <init pos:line="12" pos:column="42">= <expr><name pos:line="12" pos:column="44">m_container<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">+<pos:position pos:line="12" pos:column="57"/></operator> <name pos:line="12" pos:column="58">m_containerSize<pos:position pos:line="12" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="74"/></init> <condition><expr><name pos:line="12" pos:column="75">itr<pos:position pos:line="12" pos:column="78"/></name> <operator pos:line="12" pos:column="79">!=<pos:position pos:line="12" pos:column="81"/></operator> <name pos:line="12" pos:column="82">last<pos:position pos:line="12" pos:column="86"/></name></expr>;<pos:position pos:line="12" pos:column="87"/></condition> <incr><expr><operator pos:line="12" pos:column="88">++<pos:position pos:line="12" pos:column="90"/></operator><name pos:line="12" pos:column="90">itr<pos:position pos:line="12" pos:column="93"/></name></expr></incr>)<pos:position pos:line="12" pos:column="94"/></control> <block pos:line="12" pos:column="95">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">bounds_type<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">bounds<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><call><name><operator pos:line="13" pos:column="26">(<pos:position pos:line="13" pos:column="27"/></operator><operator pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">itr<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">preferred_size<pos:position pos:line="13" pos:column="48"/></name></name><argument_list pos:line="13" pos:column="48">()<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="51"/></decl_stmt>
    
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">itr<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">is_width_dynamic<pos:position pos:line="15" pos:column="33"/></name></name><argument_list pos:line="15" pos:column="33">()<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <block pos:line="15" pos:column="37">{
      <expr_stmt><expr><name><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><operator pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">itr<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">)<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">m_width<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">dynamicFrames<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><name pos:line="17" pos:column="21">dynamicSize<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">++<pos:position pos:line="17" pos:column="34"/></operator></expr>]<pos:position pos:line="17" pos:column="35"/></index></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <call><name><name pos:line="17" pos:column="38">std<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">::<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">make_pair<pos:position pos:line="17" pos:column="52"/></name></name><argument_list pos:line="17" pos:column="52">(<argument><expr><operator pos:line="17" pos:column="53">*<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">itr<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">bounds<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>

    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
      <expr_stmt><expr><name><operator pos:line="20" pos:column="7">(<pos:position pos:line="20" pos:column="8"/></operator><operator pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">itr<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">)<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">m_width<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="25">bounds<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">.<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">minWidth<pos:position pos:line="20" pos:column="40"/></name></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">remaining<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">-=<pos:position pos:line="21" pos:column="19"/></operator> <name><name pos:line="21" pos:column="20">bounds<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">minWidth<pos:position pos:line="21" pos:column="35"/></name></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
  }<pos:position pos:line="23" pos:column="4"/></block></for>
  
  <comment type="line" pos:line="25" pos:column="3">// Sort the dynamic frames by the min size in the direction we are</comment>
  <comment type="line" pos:line="26" pos:column="3">// interested in. Then try to satisfy the largest first, and if we</comment>
  <comment type="line" pos:line="27" pos:column="3">// have any remaining space we can use that to extend it and any</comment>
  <comment type="line" pos:line="28" pos:column="3">// following frames.</comment>
  <comment type="line" pos:line="29" pos:column="3">//</comment>
  <comment type="line" pos:line="30" pos:column="3">// Else if we're short, only give each what they require.</comment>
  <expr_stmt><expr><call><name><name pos:line="31" pos:column="3">std<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">::<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">sort<pos:position pos:line="31" pos:column="12"/></name></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">dynamicFrames<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">dynamicFrames<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">+<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">dynamicSize<pos:position pos:line="31" pos:column="55"/></name></expr></argument>,
            <argument><expr><call><name><name pos:line="32" pos:column="13">rak<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">::<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">greater2<pos:position pos:line="32" pos:column="26"/></name></name><argument_list pos:line="32" pos:column="26">(<argument><expr><call><name><name pos:line="32" pos:column="27">rak<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">::<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">on<pos:position pos:line="32" pos:column="34"/></name></name><argument_list pos:line="32" pos:column="34">(<argument><expr><call><name><name pos:line="32" pos:column="35">rak<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">::<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">const_mem_ref<pos:position pos:line="32" pos:column="53"/></name></name><argument_list pos:line="32" pos:column="53">(<argument><expr><operator pos:line="32" pos:column="54">&amp;<pos:position pos:line="32" pos:column="59"/></operator><name><name pos:line="32" pos:column="55">dynamic_type<pos:position pos:line="32" pos:column="67"/></name><operator pos:line="32" pos:column="67">::<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="69">second<pos:position pos:line="32" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="32" pos:column="78">rak<pos:position pos:line="32" pos:column="81"/></name><operator pos:line="32" pos:column="81">::<pos:position pos:line="32" pos:column="83"/></operator><name pos:line="32" pos:column="83">const_mem_ref<pos:position pos:line="32" pos:column="96"/></name></name><argument_list pos:line="32" pos:column="96">(<argument><expr><operator pos:line="32" pos:column="97">&amp;<pos:position pos:line="32" pos:column="102"/></operator><name><name pos:line="32" pos:column="98">Frame<pos:position pos:line="32" pos:column="103"/></name><operator pos:line="32" pos:column="103">::<pos:position pos:line="32" pos:column="105"/></operator><name pos:line="32" pos:column="105">bounds_type<pos:position pos:line="32" pos:column="116"/></name><operator pos:line="32" pos:column="116">::<pos:position pos:line="32" pos:column="118"/></operator><name pos:line="32" pos:column="118">minWidth<pos:position pos:line="32" pos:column="126"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="127"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="128"/></argument_list></call></expr></argument>,
                          <argument><expr><call><name><name pos:line="33" pos:column="27">rak<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">::<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">on<pos:position pos:line="33" pos:column="34"/></name></name><argument_list pos:line="33" pos:column="34">(<argument><expr><call><name><name pos:line="33" pos:column="35">rak<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">::<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">const_mem_ref<pos:position pos:line="33" pos:column="53"/></name></name><argument_list pos:line="33" pos:column="53">(<argument><expr><operator pos:line="33" pos:column="54">&amp;<pos:position pos:line="33" pos:column="59"/></operator><name><name pos:line="33" pos:column="55">dynamic_type<pos:position pos:line="33" pos:column="67"/></name><operator pos:line="33" pos:column="67">::<pos:position pos:line="33" pos:column="69"/></operator><name pos:line="33" pos:column="69">second<pos:position pos:line="33" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="33" pos:column="78">rak<pos:position pos:line="33" pos:column="81"/></name><operator pos:line="33" pos:column="81">::<pos:position pos:line="33" pos:column="83"/></operator><name pos:line="33" pos:column="83">const_mem_ref<pos:position pos:line="33" pos:column="96"/></name></name><argument_list pos:line="33" pos:column="96">(<argument><expr><operator pos:line="33" pos:column="97">&amp;<pos:position pos:line="33" pos:column="102"/></operator><name><name pos:line="33" pos:column="98">Frame<pos:position pos:line="33" pos:column="103"/></name><operator pos:line="33" pos:column="103">::<pos:position pos:line="33" pos:column="105"/></operator><name pos:line="33" pos:column="105">bounds_type<pos:position pos:line="33" pos:column="116"/></name><operator pos:line="33" pos:column="116">::<pos:position pos:line="33" pos:column="118"/></operator><name pos:line="33" pos:column="118">minWidth<pos:position pos:line="33" pos:column="126"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="127"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="128"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="129"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="131"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="35" pos:column="3">bool<pos:position pos:line="35" pos:column="7"/></name></type> <name pos:line="35" pos:column="8">retry<pos:position pos:line="35" pos:column="13"/></name></decl>;<pos:position pos:line="35" pos:column="14"/></decl_stmt>

  <do pos:line="37" pos:column="3">do <block pos:line="37" pos:column="6">{
    <expr_stmt><expr><name pos:line="38" pos:column="5">retry<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <literal type="boolean" pos:line="38" pos:column="13">false<pos:position pos:line="38" pos:column="18"/></literal></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>

    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><decl><type><name pos:line="40" pos:column="10">dynamic_type<pos:position pos:line="40" pos:column="22"/></name> <modifier pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></modifier></type><name pos:line="40" pos:column="24">itr<pos:position pos:line="40" pos:column="27"/></name> <init pos:line="40" pos:column="28">= <expr><name pos:line="40" pos:column="30">dynamicFrames<pos:position pos:line="40" pos:column="43"/></name></expr></init></decl>, <modifier pos:line="40" pos:column="45">*<pos:position pos:line="40" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="40" pos:column="46">last<pos:position pos:line="40" pos:column="50"/></name> <init pos:line="40" pos:column="51">= <expr><name pos:line="40" pos:column="53">dynamicFrames<pos:position pos:line="40" pos:column="66"/></name> <operator pos:line="40" pos:column="67">+<pos:position pos:line="40" pos:column="68"/></operator> <name pos:line="40" pos:column="69">dynamicSize<pos:position pos:line="40" pos:column="80"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="81"/></init> <condition><expr><name pos:line="40" pos:column="82">itr<pos:position pos:line="40" pos:column="85"/></name> <operator pos:line="40" pos:column="86">!=<pos:position pos:line="40" pos:column="88"/></operator> <name pos:line="40" pos:column="89">last<pos:position pos:line="40" pos:column="93"/></name></expr>;<pos:position pos:line="40" pos:column="94"/></condition> <incr><expr><operator pos:line="40" pos:column="95">++<pos:position pos:line="40" pos:column="97"/></operator><name pos:line="40" pos:column="97">itr<pos:position pos:line="40" pos:column="100"/></name></expr></incr>)<pos:position pos:line="40" pos:column="101"/></control> <block pos:line="40" pos:column="102">{
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">uint32_t<pos:position pos:line="41" pos:column="15"/></name></type> <name pos:line="41" pos:column="16">adjust<pos:position pos:line="41" pos:column="22"/></name> <init pos:line="41" pos:column="23">= <expr><operator pos:line="41" pos:column="25">(<pos:position pos:line="41" pos:column="26"/></operator><call><name><name pos:line="41" pos:column="26">std<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">::<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">max<pos:position pos:line="41" pos:column="34"/></name></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">remaining<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call> <operator pos:line="41" pos:column="49">+<pos:position pos:line="41" pos:column="50"/></operator> <call><name><name pos:line="41" pos:column="51">std<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">::<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="56">distance<pos:position pos:line="41" pos:column="64"/></name></name><argument_list pos:line="41" pos:column="64">(<argument><expr><name pos:line="41" pos:column="65">itr<pos:position pos:line="41" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="70">last<pos:position pos:line="41" pos:column="74"/></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call> <operator pos:line="41" pos:column="76">-<pos:position pos:line="41" pos:column="77"/></operator> <literal type="number" pos:line="41" pos:column="78">1<pos:position pos:line="41" pos:column="79"/></literal><operator pos:line="41" pos:column="79">)<pos:position pos:line="41" pos:column="80"/></operator> <operator pos:line="41" pos:column="81">/<pos:position pos:line="41" pos:column="82"/></operator> <call><name><name pos:line="41" pos:column="83">std<pos:position pos:line="41" pos:column="86"/></name><operator pos:line="41" pos:column="86">::<pos:position pos:line="41" pos:column="88"/></operator><name pos:line="41" pos:column="88">distance<pos:position pos:line="41" pos:column="96"/></name></name><argument_list pos:line="41" pos:column="96">(<argument><expr><name pos:line="41" pos:column="97">itr<pos:position pos:line="41" pos:column="100"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="102">last<pos:position pos:line="41" pos:column="106"/></name></expr></argument>)<pos:position pos:line="41" pos:column="107"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="108"/></decl_stmt>
    
      <expr_stmt><expr><name pos:line="43" pos:column="7">adjust<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">+=<pos:position pos:line="43" pos:column="16"/></operator> <name><name pos:line="43" pos:column="17">itr<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">first<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">m_width<pos:position pos:line="43" pos:column="36"/></name></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">adjust<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name><name pos:line="44" pos:column="16">std<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">::<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">max<pos:position pos:line="44" pos:column="24"/></name></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">adjust<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="33">itr<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">-&gt;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="38">second<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">.<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="45">minWidth<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">adjust<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name><name pos:line="45" pos:column="16">std<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">::<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">min<pos:position pos:line="45" pos:column="24"/></name></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">adjust<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="33">itr<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">second<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">maxWidth<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
        
      <expr_stmt><expr><name pos:line="47" pos:column="7">remaining<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">-=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">adjust<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">-<pos:position pos:line="47" pos:column="28"/></operator> <name><name pos:line="47" pos:column="29">itr<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">first<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">m_width<pos:position pos:line="47" pos:column="48"/></name></name></expr>;<pos:position pos:line="47" pos:column="49"/></expr_stmt>

      <expr_stmt><expr><name pos:line="49" pos:column="7">retry<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">retry<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">||<pos:position pos:line="49" pos:column="23"/></operator> <name><name pos:line="49" pos:column="24">itr<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">first<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">m_width<pos:position pos:line="49" pos:column="43"/></name></name> <operator pos:line="49" pos:column="44">!=<pos:position pos:line="49" pos:column="46"/></operator> <name pos:line="49" pos:column="47">adjust<pos:position pos:line="49" pos:column="53"/></name></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="51" pos:column="7">itr<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">first<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">m_width<pos:position pos:line="51" pos:column="26"/></name></name> <operator pos:line="51" pos:column="27">=<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">adjust<pos:position pos:line="51" pos:column="35"/></name></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></for>

  }<pos:position pos:line="54" pos:column="4"/></block> while <condition pos:line="54" pos:column="11">(<expr><name pos:line="54" pos:column="12">retry<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">&amp;&amp;<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="21">remaining<pos:position pos:line="54" pos:column="30"/></name> <operator pos:line="54" pos:column="31">&gt;<pos:position pos:line="54" pos:column="35"/></operator> <literal type="number" pos:line="54" pos:column="33">0<pos:position pos:line="54" pos:column="34"/></literal></expr>)<pos:position pos:line="54" pos:column="35"/></condition>;<pos:position pos:line="54" pos:column="36"/></do>

  <comment type="line" pos:line="56" pos:column="3">// Use the pre-calculated frame sizes to balance the sub-frames. If</comment>
  <comment type="line" pos:line="57" pos:column="3">// the frame is too small, it will set the remaining windows to zero</comment>
  <comment type="line" pos:line="58" pos:column="3">// extent which will flag them as offscreen.</comment>

  <for pos:line="60" pos:column="3">for <control pos:line="60" pos:column="7">(<init><decl><type><name pos:line="60" pos:column="8">Frame<pos:position pos:line="60" pos:column="13"/></name> <modifier pos:line="60" pos:column="14">*<pos:position pos:line="60" pos:column="15"/></modifier><modifier pos:line="60" pos:column="15">*<pos:position pos:line="60" pos:column="16"/></modifier></type><name pos:line="60" pos:column="16">itr<pos:position pos:line="60" pos:column="19"/></name> <init pos:line="60" pos:column="20">= <expr><name pos:line="60" pos:column="22">m_container<pos:position pos:line="60" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="60" pos:column="35">*<pos:position pos:line="60" pos:column="36"/></modifier><modifier pos:line="60" pos:column="36">*<pos:position pos:line="60" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="60" pos:column="37">last<pos:position pos:line="60" pos:column="41"/></name> <init pos:line="60" pos:column="42">= <expr><name pos:line="60" pos:column="44">m_container<pos:position pos:line="60" pos:column="55"/></name> <operator pos:line="60" pos:column="56">+<pos:position pos:line="60" pos:column="57"/></operator> <name pos:line="60" pos:column="58">m_containerSize<pos:position pos:line="60" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="60" pos:column="74"/></init> <condition><expr><name pos:line="60" pos:column="75">itr<pos:position pos:line="60" pos:column="78"/></name> <operator pos:line="60" pos:column="79">!=<pos:position pos:line="60" pos:column="81"/></operator> <name pos:line="60" pos:column="82">last<pos:position pos:line="60" pos:column="86"/></name></expr>;<pos:position pos:line="60" pos:column="87"/></condition> <incr><expr><operator pos:line="60" pos:column="88">++<pos:position pos:line="60" pos:column="90"/></operator><name pos:line="60" pos:column="90">itr<pos:position pos:line="60" pos:column="93"/></name></expr></incr>)<pos:position pos:line="60" pos:column="94"/></control> <block pos:line="60" pos:column="95">{
    <comment type="line" pos:line="61" pos:column="5">// If there is any remaining space, check if we want to shift</comment>
    <comment type="line" pos:line="62" pos:column="5">// the subsequent frames to the other side of this frame.</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">remaining<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&gt;<pos:position pos:line="63" pos:column="23"/></operator> <literal type="number" pos:line="63" pos:column="21">0<pos:position pos:line="63" pos:column="22"/></literal> <operator pos:line="63" pos:column="23">&amp;&amp;<pos:position pos:line="63" pos:column="33"/></operator> <call><name><operator pos:line="63" pos:column="26">(<pos:position pos:line="63" pos:column="27"/></operator><operator pos:line="63" pos:column="27">*<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">itr<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">)<pos:position pos:line="63" pos:column="32"/></operator><operator pos:line="63" pos:column="32">-&gt;<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="34">has_left_frame<pos:position pos:line="63" pos:column="48"/></name></name><argument_list pos:line="63" pos:column="48">()<pos:position pos:line="63" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="51"/></condition><then pos:line="63" pos:column="51"> <block pos:line="63" pos:column="52">{
      <expr_stmt><expr><name><operator pos:line="64" pos:column="7">(<pos:position pos:line="64" pos:column="8"/></operator><operator pos:line="64" pos:column="8">*<pos:position pos:line="64" pos:column="9"/></operator><name pos:line="64" pos:column="9">itr<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">)<pos:position pos:line="64" pos:column="13"/></operator><operator pos:line="64" pos:column="13">-&gt;<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="15">m_width<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">+=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">remaining<pos:position pos:line="64" pos:column="35"/></name></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">remaining<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <literal type="number" pos:line="65" pos:column="19">0<pos:position pos:line="65" pos:column="20"/></literal></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><operator pos:line="68" pos:column="5">(<pos:position pos:line="68" pos:column="6"/></operator><operator pos:line="68" pos:column="6">*<pos:position pos:line="68" pos:column="7"/></operator><name pos:line="68" pos:column="7">itr<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">)<pos:position pos:line="68" pos:column="11"/></operator><operator pos:line="68" pos:column="11">-&gt;<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="13">balance<pos:position pos:line="68" pos:column="20"/></name></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">x<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="24">y<pos:position pos:line="68" pos:column="25"/></name></expr></argument>, <argument><expr><call><name><name pos:line="68" pos:column="27">std<pos:position pos:line="68" pos:column="30"/></name><operator pos:line="68" pos:column="30">::<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="32">min<pos:position pos:line="68" pos:column="35"/></name></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name><operator pos:line="68" pos:column="36">(<pos:position pos:line="68" pos:column="37"/></operator><operator pos:line="68" pos:column="37">*<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="38">itr<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">)<pos:position pos:line="68" pos:column="42"/></operator><operator pos:line="68" pos:column="42">-&gt;<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="44">m_width<pos:position pos:line="68" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="53">width<pos:position pos:line="68" pos:column="58"/></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="61">m_height<pos:position pos:line="68" pos:column="69"/></name></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><name pos:line="70" pos:column="5">x<pos:position pos:line="70" pos:column="6"/></name> <operator pos:line="70" pos:column="7">+=<pos:position pos:line="70" pos:column="9"/></operator> <name><operator pos:line="70" pos:column="10">(<pos:position pos:line="70" pos:column="11"/></operator><operator pos:line="70" pos:column="11">*<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">itr<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">)<pos:position pos:line="70" pos:column="16"/></operator><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">m_width<pos:position pos:line="70" pos:column="25"/></name></name></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="71" pos:column="5">width<pos:position pos:line="71" pos:column="10"/></name> <operator pos:line="71" pos:column="11">-=<pos:position pos:line="71" pos:column="13"/></operator> <name><operator pos:line="71" pos:column="14">(<pos:position pos:line="71" pos:column="15"/></operator><operator pos:line="71" pos:column="15">*<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">itr<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">)<pos:position pos:line="71" pos:column="20"/></operator><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">m_width<pos:position pos:line="71" pos:column="29"/></name></name></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="72" pos:column="4"/></block></for>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

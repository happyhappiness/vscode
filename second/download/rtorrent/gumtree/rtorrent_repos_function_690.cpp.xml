<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_690.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Frame<pos:position pos:line="1" pos:column="6"/></name><operator pos:line="1" pos:column="6">::<pos:position pos:line="1" pos:column="8"/></operator><name pos:line="1" pos:column="8">bounds_type<pos:position pos:line="1" pos:column="19"/></name></name></type>
<name><name pos:line="2" pos:column="1">Frame<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">preferred_size<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">()<pos:position pos:line="2" pos:column="24"/></parameter_list> <specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <block pos:line="2" pos:column="31">{
  <switch pos:line="3" pos:column="3">switch <condition pos:line="3" pos:column="10">(<expr><name pos:line="3" pos:column="11">m_type<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition> <block pos:line="3" pos:column="19">{
  <case pos:line="4" pos:column="3">case <expr><name pos:line="4" pos:column="8">TYPE_NONE<pos:position pos:line="4" pos:column="17"/></name></expr>:<pos:position pos:line="4" pos:column="18"/></case>
    <return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">bounds_type<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></return>

  <case pos:line="7" pos:column="3">case <expr><name pos:line="7" pos:column="8">TYPE_WINDOW<pos:position pos:line="7" pos:column="19"/></name></expr>:<pos:position pos:line="7" pos:column="20"/></case>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">m_window<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">is_active<pos:position pos:line="8" pos:column="28"/></name></name><argument_list pos:line="8" pos:column="28">()<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><call><name pos:line="9" pos:column="14">bounds_type<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><call><name><name pos:line="9" pos:column="26">m_window<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">min_width<pos:position pos:line="9" pos:column="45"/></name></name><argument_list pos:line="9" pos:column="45">()<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="49">m_window<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">-&gt;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="59">min_height<pos:position pos:line="9" pos:column="69"/></name></name><argument_list pos:line="9" pos:column="69">()<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr></argument>,
                         <argument><expr><call><name><name pos:line="10" pos:column="26">m_window<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">max_width<pos:position pos:line="10" pos:column="45"/></name></name><argument_list pos:line="10" pos:column="45">()<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="49">m_window<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">max_height<pos:position pos:line="10" pos:column="69"/></name></name><argument_list pos:line="10" pos:column="69">()<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></return></block></then>
    <else pos:line="11" pos:column="5">else
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><call><name pos:line="12" pos:column="14">bounds_type<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></return></block></else></if>

  <case pos:line="14" pos:column="3">case <expr><name pos:line="14" pos:column="8">TYPE_ROW<pos:position pos:line="14" pos:column="16"/></name></expr>:<pos:position pos:line="14" pos:column="17"/></case>
  <case pos:line="15" pos:column="3">case <expr><name pos:line="15" pos:column="8">TYPE_COLUMN<pos:position pos:line="15" pos:column="19"/></name></expr>:<pos:position pos:line="15" pos:column="20"/></case>
    <block pos:line="16" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="17" pos:column="7">bounds_type<pos:position pos:line="17" pos:column="18"/></name></type> <name pos:line="17" pos:column="19">accum<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="28">0<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="34">0<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>

      <for pos:line="19" pos:column="7">for <control pos:line="19" pos:column="11">(<init><decl><type><name pos:line="19" pos:column="12">size_type<pos:position pos:line="19" pos:column="21"/></name></type> <name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="28"/></init> <condition><expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&lt;<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="33">m_containerSize<pos:position pos:line="19" pos:column="48"/></name></expr>;<pos:position pos:line="19" pos:column="49"/></condition> <incr><expr><operator pos:line="19" pos:column="50">++<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">i<pos:position pos:line="19" pos:column="53"/></name></expr></incr>)<pos:position pos:line="19" pos:column="54"/></control> <block pos:line="19" pos:column="55">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">bounds_type<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">p<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><name><name pos:line="20" pos:column="25">m_container<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><name pos:line="20" pos:column="37">i<pos:position pos:line="20" pos:column="38"/></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><call><name pos:line="20" pos:column="41">preferred_size<pos:position pos:line="20" pos:column="55"/></name><argument_list pos:line="20" pos:column="55">()<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="58"/></decl_stmt>
 
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">accum<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">minWidth<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">+=<pos:position pos:line="22" pos:column="26"/></operator> <name><name pos:line="22" pos:column="27">p<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">minWidth<pos:position pos:line="22" pos:column="37"/></name></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">accum<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">minHeight<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">+=<pos:position pos:line="23" pos:column="27"/></operator> <name><name pos:line="23" pos:column="28">p<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">minHeight<pos:position pos:line="23" pos:column="39"/></name></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">p<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">maxWidth<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">==<pos:position pos:line="25" pos:column="26"/></operator> <name><name pos:line="25" pos:column="27">Window<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">::<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">extent_full<pos:position pos:line="25" pos:column="46"/></name></name> <operator pos:line="25" pos:column="47">||<pos:position pos:line="25" pos:column="49"/></operator> <name><name pos:line="25" pos:column="50">accum<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">.<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">maxWidth<pos:position pos:line="25" pos:column="64"/></name></name> <operator pos:line="25" pos:column="65">==<pos:position pos:line="25" pos:column="67"/></operator> <name><name pos:line="25" pos:column="68">Window<pos:position pos:line="25" pos:column="74"/></name><operator pos:line="25" pos:column="74">::<pos:position pos:line="25" pos:column="76"/></operator><name pos:line="25" pos:column="76">extent_full<pos:position pos:line="25" pos:column="87"/></name></name></expr>)<pos:position pos:line="25" pos:column="88"/></condition><then pos:line="25" pos:column="88">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="11">accum<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">.<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">maxWidth<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name><name pos:line="26" pos:column="28">Window<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">::<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">extent_full<pos:position pos:line="26" pos:column="47"/></name></name></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt></block></then>
        <else pos:line="27" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="11">accum<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">maxWidth<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">+=<pos:position pos:line="28" pos:column="28"/></operator> <name><name pos:line="28" pos:column="29">p<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">maxWidth<pos:position pos:line="28" pos:column="39"/></name></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt></block></else></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">p<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">.<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">maxHeight<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">==<pos:position pos:line="30" pos:column="27"/></operator> <name><name pos:line="30" pos:column="28">Window<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">::<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">extent_full<pos:position pos:line="30" pos:column="47"/></name></name> <operator pos:line="30" pos:column="48">||<pos:position pos:line="30" pos:column="50"/></operator> <name><name pos:line="30" pos:column="51">accum<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">.<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="57">maxHeight<pos:position pos:line="30" pos:column="66"/></name></name> <operator pos:line="30" pos:column="67">==<pos:position pos:line="30" pos:column="69"/></operator> <name><name pos:line="30" pos:column="70">Window<pos:position pos:line="30" pos:column="76"/></name><operator pos:line="30" pos:column="76">::<pos:position pos:line="30" pos:column="78"/></operator><name pos:line="30" pos:column="78">extent_full<pos:position pos:line="30" pos:column="89"/></name></name></expr>)<pos:position pos:line="30" pos:column="90"/></condition><then pos:line="30" pos:column="90">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="11">accum<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">.<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">maxHeight<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name><name pos:line="31" pos:column="29">Window<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">::<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">extent_full<pos:position pos:line="31" pos:column="48"/></name></name></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt></block></then>
        <else pos:line="32" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="11">accum<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">maxHeight<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">+=<pos:position pos:line="33" pos:column="29"/></operator> <name><name pos:line="33" pos:column="30">p<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">.<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">maxHeight<pos:position pos:line="33" pos:column="41"/></name></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt></block></else></if>
      }<pos:position pos:line="34" pos:column="8"/></block></for>

      <return pos:line="36" pos:column="7">return <expr><name pos:line="36" pos:column="14">accum<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block>
  }<pos:position pos:line="38" pos:column="4"/></block></switch>

  <return pos:line="40" pos:column="3">return <expr><call><name pos:line="40" pos:column="10">bounds_type<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="25">0<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="28">0<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="31">0<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

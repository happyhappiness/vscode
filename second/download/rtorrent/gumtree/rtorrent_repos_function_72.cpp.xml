<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_72.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name pos:line="2" pos:column="1">apply_on_state_change<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">core<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">DownloadList<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">slot_map<pos:position pos:line="2" pos:column="51"/></name></name><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">slotMap<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier> <name><name pos:line="2" pos:column="68">torrent<pos:position pos:line="2" pos:column="75"/></name><operator pos:line="2" pos:column="75">::<pos:position pos:line="2" pos:column="77"/></operator><name pos:line="2" pos:column="77">Object<pos:position pos:line="2" pos:column="83"/></name></name><modifier pos:line="2" pos:column="83">&amp;<pos:position pos:line="2" pos:column="88"/></modifier></type> <name pos:line="2" pos:column="85">rawArgs<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="93"/></parameter_list> <block pos:line="2" pos:column="94">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">torrent<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">Object<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">::<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">list_type<pos:position pos:line="3" pos:column="35"/></name></name><modifier pos:line="3" pos:column="35">&amp;<pos:position pos:line="3" pos:column="40"/></modifier></type> <name pos:line="3" pos:column="37">args<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><call><name><name pos:line="3" pos:column="44">rawArgs<pos:position pos:line="3" pos:column="51"/></name><operator pos:line="3" pos:column="51">.<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">as_list<pos:position pos:line="3" pos:column="59"/></name></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">args<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">size<pos:position pos:line="5" pos:column="16"/></name></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal> <operator pos:line="5" pos:column="24">||<pos:position pos:line="5" pos:column="26"/></operator> <call><name><name pos:line="5" pos:column="27">args<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">size<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">()<pos:position pos:line="5" pos:column="38"/></argument_list></call> <operator pos:line="5" pos:column="39">&gt;<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="41">2<pos:position pos:line="5" pos:column="42"/></literal></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">input_error<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">(<argument><expr><literal type="string" pos:line="6" pos:column="32">"Wrong number of arguments."<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></throw></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name><name pos:line="8" pos:column="7">args<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">front<pos:position pos:line="8" pos:column="17"/></name></name><argument_list pos:line="8" pos:column="17">()<pos:position pos:line="8" pos:column="19"/></argument_list></call><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><call><name pos:line="8" pos:column="20">as_string<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">()<pos:position pos:line="8" pos:column="31"/></argument_list></call><operator pos:line="8" pos:column="31">.<pos:position pos:line="8" pos:column="32"/></operator><call><name pos:line="8" pos:column="32">empty<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">()<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40">
    <block type="pseudo"><throw pos:line="9" pos:column="5">throw <expr><call><name><name pos:line="9" pos:column="11">torrent<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">::<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">input_error<pos:position pos:line="9" pos:column="31"/></name></name><argument_list pos:line="9" pos:column="31">(<argument><expr><literal type="string" pos:line="9" pos:column="32">"Empty key."<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">std<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">::<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">string<pos:position pos:line="11" pos:column="14"/></name></name></type> <name pos:line="11" pos:column="15">key<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><literal type="string" pos:line="11" pos:column="21">"1_state_"<pos:position pos:line="11" pos:column="31"/></literal> <operator pos:line="11" pos:column="32">+<pos:position pos:line="11" pos:column="33"/></operator> <call><name><name pos:line="11" pos:column="34">args<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">front<pos:position pos:line="11" pos:column="44"/></name></name><argument_list pos:line="11" pos:column="44">()<pos:position pos:line="11" pos:column="46"/></argument_list></call><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><call><name pos:line="11" pos:column="47">as_string<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">()<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="59"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name><name pos:line="13" pos:column="7">args<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">size<pos:position pos:line="13" pos:column="16"/></name></name><argument_list pos:line="13" pos:column="16">()<pos:position pos:line="13" pos:column="18"/></argument_list></call> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="22">1<pos:position pos:line="13" pos:column="23"/></literal></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="5">slotMap<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">erase<pos:position pos:line="14" pos:column="19"/></name></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">key<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt></block></then>
  <else pos:line="15" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="5">(<pos:position pos:line="16" pos:column="6"/></operator><operator pos:line="16" pos:column="6">*<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">slotMap<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator><index pos:line="16" pos:column="15">[<expr><name pos:line="16" pos:column="16">key<pos:position pos:line="16" pos:column="19"/></name></expr>]<pos:position pos:line="16" pos:column="20"/></index> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name><name pos:line="16" pos:column="23">sigc<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">::<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">bind<pos:position pos:line="16" pos:column="33"/></name></name><argument_list pos:line="16" pos:column="33">(<argument><expr><call><name><name pos:line="16" pos:column="34">sigc<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">::<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">ptr_fun<pos:position pos:line="16" pos:column="47"/></name></name><argument_list pos:line="16" pos:column="47">(<argument><expr><operator pos:line="16" pos:column="48">&amp;<pos:position pos:line="16" pos:column="53"/></operator><name><name pos:line="16" pos:column="49">rpc<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">::<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="54">parse_command_d_multiple_std<pos:position pos:line="16" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="16" pos:column="85">args<pos:position pos:line="16" pos:column="89"/></name><operator pos:line="16" pos:column="89">.<pos:position pos:line="16" pos:column="90"/></operator><name pos:line="16" pos:column="90">back<pos:position pos:line="16" pos:column="94"/></name></name><argument_list pos:line="16" pos:column="94">()<pos:position pos:line="16" pos:column="96"/></argument_list></call><operator pos:line="16" pos:column="96">.<pos:position pos:line="16" pos:column="97"/></operator><call><name pos:line="16" pos:column="97">as_string<pos:position pos:line="16" pos:column="106"/></name><argument_list pos:line="16" pos:column="106">()<pos:position pos:line="16" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="110"/></expr_stmt></block></else></if>

  <return pos:line="18" pos:column="3">return <expr><call><name><name pos:line="18" pos:column="10">torrent<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">::<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">Object<pos:position pos:line="18" pos:column="25"/></name></name><argument_list pos:line="18" pos:column="25">()<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

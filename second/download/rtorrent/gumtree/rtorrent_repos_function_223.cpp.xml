<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_223.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name><modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">parse_command_name<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name><modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">first<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">last<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="57">std<pos:position pos:line="2" pos:column="60"/></name><operator pos:line="2" pos:column="60">::<pos:position pos:line="2" pos:column="62"/></operator><name pos:line="2" pos:column="62">string<pos:position pos:line="2" pos:column="68"/></name></name><modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type> <name pos:line="2" pos:column="70">dest<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <block pos:line="2" pos:column="76">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">first<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">==<pos:position pos:line="3" pos:column="15"/></operator> <name pos:line="3" pos:column="16">last<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">||<pos:position pos:line="3" pos:column="23"/></operator> <operator pos:line="3" pos:column="24">!<pos:position pos:line="3" pos:column="25"/></operator><call><name><name pos:line="3" pos:column="25">std<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">::<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">isalpha<pos:position pos:line="3" pos:column="37"/></name></name><argument_list pos:line="3" pos:column="37">(<argument><expr><operator pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">first<pos:position pos:line="3" pos:column="44"/></name></expr></argument>)<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="46"/></condition><then pos:line="3" pos:column="46">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">input_error<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">(<argument><expr><literal type="string" pos:line="4" pos:column="32">"Invalid start of name."<pos:position pos:line="4" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></throw></block></then></if>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">( <init pos:line="6" pos:column="9">;<pos:position pos:line="6" pos:column="10"/></init> <condition><expr><name pos:line="6" pos:column="11">first<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">!=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">last<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&amp;&amp;<pos:position pos:line="6" pos:column="35"/></operator> <operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><call><name><name pos:line="6" pos:column="29">std<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">::<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">isalnum<pos:position pos:line="6" pos:column="41"/></name></name><argument_list pos:line="6" pos:column="41">(<argument><expr><operator pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">first<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call> <operator pos:line="6" pos:column="50">||<pos:position pos:line="6" pos:column="52"/></operator> <operator pos:line="6" pos:column="53">*<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">first<pos:position pos:line="6" pos:column="59"/></name> <operator pos:line="6" pos:column="60">==<pos:position pos:line="6" pos:column="62"/></operator> <literal type="char" pos:line="6" pos:column="63">'_'<pos:position pos:line="6" pos:column="66"/></literal> <operator pos:line="6" pos:column="67">||<pos:position pos:line="6" pos:column="69"/></operator> <operator pos:line="6" pos:column="70">*<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="71">first<pos:position pos:line="6" pos:column="76"/></name> <operator pos:line="6" pos:column="77">==<pos:position pos:line="6" pos:column="79"/></operator> <literal type="char" pos:line="6" pos:column="80">'.'<pos:position pos:line="6" pos:column="83"/></literal><operator pos:line="6" pos:column="83">)<pos:position pos:line="6" pos:column="84"/></operator></expr>;<pos:position pos:line="6" pos:column="85"/></condition> <incr><expr><operator pos:line="6" pos:column="86">++<pos:position pos:line="6" pos:column="88"/></operator><name pos:line="6" pos:column="88">first<pos:position pos:line="6" pos:column="93"/></name></expr></incr>)<pos:position pos:line="6" pos:column="94"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="5">dest<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">push_back<pos:position pos:line="7" pos:column="20"/></name></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">first<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></for>

  <return pos:line="9" pos:column="3">return <expr><name pos:line="9" pos:column="10">first<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

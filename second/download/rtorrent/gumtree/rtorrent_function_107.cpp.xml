<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_107.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowPeerList<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">redraw<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list> <block pos:line="2" pos:column="26">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">utils<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">displayScheduler<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">.<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">insert<pos:position pos:line="3" pos:column="33"/></name></name><argument_list pos:line="3" pos:column="33">(<argument><expr><operator pos:line="3" pos:column="34">&amp;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="35">m_taskUpdate<pos:position pos:line="3" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="49">(<pos:position pos:line="3" pos:column="50"/></operator><call><name><name pos:line="3" pos:column="50">utils<pos:position pos:line="3" pos:column="55"/></name><operator pos:line="3" pos:column="55">::<pos:position pos:line="3" pos:column="57"/></operator><name pos:line="3" pos:column="57">Timer<pos:position pos:line="3" pos:column="62"/></name><operator pos:line="3" pos:column="62">::<pos:position pos:line="3" pos:column="64"/></operator><name pos:line="3" pos:column="64">cache<pos:position pos:line="3" pos:column="69"/></name></name><argument_list pos:line="3" pos:column="69">()<pos:position pos:line="3" pos:column="71"/></argument_list></call> <operator pos:line="3" pos:column="72">+<pos:position pos:line="3" pos:column="73"/></operator> <literal type="number" pos:line="3" pos:column="74">1000000<pos:position pos:line="3" pos:column="81"/></literal><operator pos:line="3" pos:column="81">)<pos:position pos:line="3" pos:column="82"/></operator><operator pos:line="3" pos:column="82">.<pos:position pos:line="3" pos:column="83"/></operator><call><name pos:line="3" pos:column="83">round_seconds<pos:position pos:line="3" pos:column="96"/></name><argument_list pos:line="3" pos:column="96">()<pos:position pos:line="3" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="100"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">m_canvas<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">erase<pos:position pos:line="4" pos:column="18"/></name></name><argument_list pos:line="4" pos:column="18">()<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">x<pos:position pos:line="6" pos:column="8"/></name> <init pos:line="6" pos:column="9">= <expr><literal type="number" pos:line="6" pos:column="11">2<pos:position pos:line="6" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">y<pos:position pos:line="7" pos:column="8"/></name> <init pos:line="7" pos:column="9">= <expr><literal type="number" pos:line="7" pos:column="11">0<pos:position pos:line="7" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name><name pos:line="9" pos:column="3">m_canvas<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">print<pos:position pos:line="9" pos:column="18"/></name></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">x<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">y<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">"DNS"<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>     <expr_stmt><expr><name pos:line="9" pos:column="37">x<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">+=<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">16<pos:position pos:line="9" pos:column="44"/></literal></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="10" pos:column="3">m_canvas<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">print<pos:position pos:line="10" pos:column="18"/></name></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">x<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">y<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="25">"UP"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>      <expr_stmt><expr><name pos:line="10" pos:column="37">x<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">+=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">7<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="11" pos:column="3">m_canvas<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">print<pos:position pos:line="11" pos:column="18"/></name></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">x<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="22">y<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"DOWN"<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>    <expr_stmt><expr><name pos:line="11" pos:column="37">x<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">+=<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="42">7<pos:position pos:line="11" pos:column="43"/></literal></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="12" pos:column="3">m_canvas<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">print<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">x<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">y<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"PEER"<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>    <expr_stmt><expr><name pos:line="12" pos:column="37">x<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">+=<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">7<pos:position pos:line="12" pos:column="43"/></literal></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="13" pos:column="3">m_canvas<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">print<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">x<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">y<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"C/RE/LO"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt> <expr_stmt><expr><name pos:line="13" pos:column="37">x<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">+=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">9<pos:position pos:line="13" pos:column="43"/></literal></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">m_canvas<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">print<pos:position pos:line="14" pos:column="18"/></name></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">x<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">y<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"QS"<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>      <expr_stmt><expr><name pos:line="14" pos:column="37">x<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">+=<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">6<pos:position pos:line="14" pos:column="43"/></literal></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="15" pos:column="3">m_canvas<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">print<pos:position pos:line="15" pos:column="18"/></name></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">x<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="22">y<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"DONE"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>    <expr_stmt><expr><name pos:line="15" pos:column="37">x<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">+=<pos:position pos:line="15" pos:column="41"/></operator> <literal type="number" pos:line="15" pos:column="42">6<pos:position pos:line="15" pos:column="43"/></literal></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="16" pos:column="3">m_canvas<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">print<pos:position pos:line="16" pos:column="18"/></name></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">x<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">y<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="25">"REQ"<pos:position pos:line="16" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>     <expr_stmt><expr><name pos:line="16" pos:column="37">x<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">+=<pos:position pos:line="16" pos:column="41"/></operator> <literal type="number" pos:line="16" pos:column="42">6<pos:position pos:line="16" pos:column="43"/></literal></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="17" pos:column="3">m_canvas<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">print<pos:position pos:line="17" pos:column="18"/></name></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">x<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="22">y<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">"SNUB"<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="19" pos:column="3">++<pos:position pos:line="19" pos:column="5"/></operator><name pos:line="19" pos:column="5">y<pos:position pos:line="19" pos:column="6"/></name></expr>;<pos:position pos:line="19" pos:column="7"/></expr_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name><name pos:line="21" pos:column="7">m_list<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">empty<pos:position pos:line="21" pos:column="20"/></name></name><argument_list pos:line="21" pos:column="20">()<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23">
    <block type="pseudo"><return pos:line="22" pos:column="5">return;<pos:position pos:line="22" pos:column="12"/></return></block></then></if>

  <typedef pos:line="24" pos:column="3">typedef <type><name><name pos:line="24" pos:column="11">std<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">::<pos:position pos:line="24" pos:column="16"/></operator><name><name pos:line="24" pos:column="16">pair<pos:position pos:line="24" pos:column="20"/></name><argument_list type="generic" pos:line="24" pos:column="20">&lt;<argument><expr><name><name pos:line="24" pos:column="21">PList<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">::<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">iterator<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="38">PList<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">::<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">iterator<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>&gt;<pos:position pos:line="24" pos:column="57"/></argument_list></name></name></type> <name pos:line="24" pos:column="55">Range<pos:position pos:line="24" pos:column="60"/></name>;<pos:position pos:line="24" pos:column="61"/></typedef>

  <decl_stmt><decl><type><name pos:line="26" pos:column="3">Range<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">range<pos:position pos:line="26" pos:column="14"/></name> <init pos:line="26" pos:column="15">= <expr><call><name><name pos:line="26" pos:column="17">rak<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">::<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">advance_bidirectional<pos:position pos:line="26" pos:column="43"/></name></name><argument_list pos:line="26" pos:column="43">(<argument><expr><call><name><name pos:line="26" pos:column="44">m_list<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">begin<pos:position pos:line="26" pos:column="57"/></name></name><argument_list pos:line="26" pos:column="57">()<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr></argument>,
					   <argument><expr><ternary><condition><expr><operator pos:line="27" pos:column="44">*<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="45">m_focus<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">!=<pos:position pos:line="27" pos:column="55"/></operator> <call><name><name pos:line="27" pos:column="56">m_list<pos:position pos:line="27" pos:column="62"/></name><operator pos:line="27" pos:column="62">-&gt;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="64">end<pos:position pos:line="27" pos:column="67"/></name></name><argument_list pos:line="27" pos:column="67">()<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr> ?<pos:position pos:line="27" pos:column="71"/></condition><then pos:line="27" pos:column="71"> <expr><operator pos:line="27" pos:column="72">*<pos:position pos:line="27" pos:column="73"/></operator><name pos:line="27" pos:column="73">m_focus<pos:position pos:line="27" pos:column="80"/></name></expr> <pos:position pos:line="27" pos:column="81"/></then><else pos:line="27" pos:column="81">: <expr><call><name><name pos:line="27" pos:column="83">m_list<pos:position pos:line="27" pos:column="89"/></name><operator pos:line="27" pos:column="89">-&gt;<pos:position pos:line="27" pos:column="94"/></operator><name pos:line="27" pos:column="91">begin<pos:position pos:line="27" pos:column="96"/></name></name><argument_list pos:line="27" pos:column="96">()<pos:position pos:line="27" pos:column="98"/></argument_list></call></expr></else></ternary></expr></argument>,
					   <argument><expr><call><name><name pos:line="28" pos:column="44">m_list<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">-&gt;<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="52">end<pos:position pos:line="28" pos:column="55"/></name></name><argument_list pos:line="28" pos:column="55">()<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr></argument>,
					   <argument><expr><call><name><name pos:line="29" pos:column="44">m_canvas<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">get_height<pos:position pos:line="29" pos:column="64"/></name></name><argument_list pos:line="29" pos:column="64">()<pos:position pos:line="29" pos:column="66"/></argument_list></call> <operator pos:line="29" pos:column="67">-<pos:position pos:line="29" pos:column="68"/></operator> <name pos:line="29" pos:column="69">y<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="72"/></decl_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name><name pos:line="31" pos:column="7">m_download<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">get_download<pos:position pos:line="31" pos:column="31"/></name></name><argument_list pos:line="31" pos:column="31">()<pos:position pos:line="31" pos:column="33"/></argument_list></call><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><call><name pos:line="31" pos:column="34">get_chunks_total<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">()<pos:position pos:line="31" pos:column="52"/></argument_list></call> <operator pos:line="31" pos:column="53">&lt;=<pos:position pos:line="31" pos:column="58"/></operator> <literal type="number" pos:line="31" pos:column="56">0<pos:position pos:line="31" pos:column="57"/></literal></expr>)<pos:position pos:line="31" pos:column="58"/></condition><then pos:line="31" pos:column="58">
    <block type="pseudo"><throw pos:line="32" pos:column="5">throw <expr><call><name><name pos:line="32" pos:column="11">std<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">::<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">logic_error<pos:position pos:line="32" pos:column="27"/></name></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">"WindowPeerList::redraw() m_slotChunksTotal() returned invalid value"<pos:position pos:line="32" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="99"/></throw></block></then></if>

  <while pos:line="34" pos:column="3">while <condition pos:line="34" pos:column="9">(<expr><name><name pos:line="34" pos:column="10">range<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">.<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">first<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">!=<pos:position pos:line="34" pos:column="24"/></operator> <name><name pos:line="34" pos:column="25">range<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">.<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">second<pos:position pos:line="34" pos:column="37"/></name></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition> <block pos:line="34" pos:column="39">{
    <decl_stmt><decl><type><name><name pos:line="35" pos:column="5">torrent<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">::<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">Peer<pos:position pos:line="35" pos:column="18"/></name></name><modifier pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></modifier></type> <name pos:line="35" pos:column="20">p<pos:position pos:line="35" pos:column="21"/></name> <init pos:line="35" pos:column="22">= <expr><operator pos:line="35" pos:column="24">*<pos:position pos:line="35" pos:column="25"/></operator><name><name pos:line="35" pos:column="25">range<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">first<pos:position pos:line="35" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="35" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">x<pos:position pos:line="37" pos:column="6"/></name> <operator pos:line="37" pos:column="7">=<pos:position pos:line="37" pos:column="8"/></operator> <literal type="number" pos:line="37" pos:column="9">0<pos:position pos:line="37" pos:column="10"/></literal></expr>;<pos:position pos:line="37" pos:column="11"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">m_canvas<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">print<pos:position pos:line="39" pos:column="20"/></name></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">x<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">y<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="27">"%c %s"<pos:position pos:line="39" pos:column="34"/></literal></expr></argument>,
		    <argument><expr><ternary><condition><expr><name><name pos:line="40" pos:column="21">range<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">.<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">first<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">==<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">*<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="37">m_focus<pos:position pos:line="40" pos:column="44"/></name></expr> ?<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46"> <expr><literal type="char" pos:line="40" pos:column="47">'*'<pos:position pos:line="40" pos:column="50"/></literal></expr> <pos:position pos:line="40" pos:column="51"/></then><else pos:line="40" pos:column="51">: <expr><literal type="char" pos:line="40" pos:column="53">' '<pos:position pos:line="40" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
		    <argument><expr><call><name><name pos:line="41" pos:column="21">p<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">get_dns<pos:position pos:line="41" pos:column="30"/></name></name><argument_list pos:line="41" pos:column="30">()<pos:position pos:line="41" pos:column="32"/></argument_list></call><operator pos:line="41" pos:column="32">.<pos:position pos:line="41" pos:column="33"/></operator><call><name pos:line="41" pos:column="33">c_str<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">()<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">x<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">+=<pos:position pos:line="42" pos:column="9"/></operator> <literal type="number" pos:line="42" pos:column="10">18<pos:position pos:line="42" pos:column="12"/></literal></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">m_canvas<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">print<pos:position pos:line="44" pos:column="20"/></name></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">x<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="24">y<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"%.1f"<pos:position pos:line="44" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">(<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">double<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">)<pos:position pos:line="44" pos:column="43"/></operator><call><name><name pos:line="44" pos:column="43">p<pos:position pos:line="44" pos:column="44"/></name><operator pos:line="44" pos:column="44">.<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="45">get_up_rate<pos:position pos:line="44" pos:column="56"/></name></name><argument_list pos:line="44" pos:column="56">()<pos:position pos:line="44" pos:column="58"/></argument_list></call><operator pos:line="44" pos:column="58">.<pos:position pos:line="44" pos:column="59"/></operator><call><name pos:line="44" pos:column="59">rate<pos:position pos:line="44" pos:column="63"/></name><argument_list pos:line="44" pos:column="63">()<pos:position pos:line="44" pos:column="65"/></argument_list></call> <operator pos:line="44" pos:column="66">/<pos:position pos:line="44" pos:column="67"/></operator> <literal type="number" pos:line="44" pos:column="68">1024<pos:position pos:line="44" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="74"/></expr_stmt> <expr_stmt><expr><name pos:line="44" pos:column="75">x<pos:position pos:line="44" pos:column="76"/></name> <operator pos:line="44" pos:column="77">+=<pos:position pos:line="44" pos:column="79"/></operator> <literal type="number" pos:line="44" pos:column="80">7<pos:position pos:line="44" pos:column="81"/></literal></expr>;<pos:position pos:line="44" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="45" pos:column="5">m_canvas<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">print<pos:position pos:line="45" pos:column="20"/></name></name><argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">x<pos:position pos:line="45" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="24">y<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"%.1f"<pos:position pos:line="45" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="35">(<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="36">double<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">)<pos:position pos:line="45" pos:column="43"/></operator><call><name><name pos:line="45" pos:column="43">p<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">get_down_rate<pos:position pos:line="45" pos:column="58"/></name></name><argument_list pos:line="45" pos:column="58">()<pos:position pos:line="45" pos:column="60"/></argument_list></call><operator pos:line="45" pos:column="60">.<pos:position pos:line="45" pos:column="61"/></operator><call><name pos:line="45" pos:column="61">rate<pos:position pos:line="45" pos:column="65"/></name><argument_list pos:line="45" pos:column="65">()<pos:position pos:line="45" pos:column="67"/></argument_list></call> <operator pos:line="45" pos:column="68">/<pos:position pos:line="45" pos:column="69"/></operator> <literal type="number" pos:line="45" pos:column="70">1024<pos:position pos:line="45" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="76"/></expr_stmt> <expr_stmt><expr><name pos:line="45" pos:column="77">x<pos:position pos:line="45" pos:column="78"/></name> <operator pos:line="45" pos:column="79">+=<pos:position pos:line="45" pos:column="81"/></operator> <literal type="number" pos:line="45" pos:column="82">7<pos:position pos:line="45" pos:column="83"/></literal></expr>;<pos:position pos:line="45" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">m_canvas<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">print<pos:position pos:line="46" pos:column="20"/></name></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">x<pos:position pos:line="46" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="24">y<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="27">"%.1f"<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="35">(<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">double<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">)<pos:position pos:line="46" pos:column="43"/></operator><call><name><name pos:line="46" pos:column="43">p<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">.<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">get_peer_rate<pos:position pos:line="46" pos:column="58"/></name></name><argument_list pos:line="46" pos:column="58">()<pos:position pos:line="46" pos:column="60"/></argument_list></call><operator pos:line="46" pos:column="60">.<pos:position pos:line="46" pos:column="61"/></operator><call><name pos:line="46" pos:column="61">rate<pos:position pos:line="46" pos:column="65"/></name><argument_list pos:line="46" pos:column="65">()<pos:position pos:line="46" pos:column="67"/></argument_list></call> <operator pos:line="46" pos:column="68">/<pos:position pos:line="46" pos:column="69"/></operator> <literal type="number" pos:line="46" pos:column="70">1024<pos:position pos:line="46" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt> <expr_stmt><expr><name pos:line="46" pos:column="77">x<pos:position pos:line="46" pos:column="78"/></name> <operator pos:line="46" pos:column="79">+=<pos:position pos:line="46" pos:column="81"/></operator> <literal type="number" pos:line="46" pos:column="82">7<pos:position pos:line="46" pos:column="83"/></literal></expr>;<pos:position pos:line="46" pos:column="84"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="48" pos:column="5">m_canvas<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">print<pos:position pos:line="48" pos:column="20"/></name></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">x<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="24">y<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"%c/%c%c/%c%c"<pos:position pos:line="48" pos:column="41"/></literal></expr></argument>,
		    <argument><expr><ternary><condition><expr><call><name><name pos:line="49" pos:column="21">p<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">.<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="23">is_incoming<pos:position pos:line="49" pos:column="34"/></name></name><argument_list pos:line="49" pos:column="34">()<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr> ?<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38"> <expr><literal type="char" pos:line="49" pos:column="39">'r'<pos:position pos:line="49" pos:column="42"/></literal></expr> <pos:position pos:line="49" pos:column="43"/></then><else pos:line="49" pos:column="43">: <expr><literal type="char" pos:line="49" pos:column="45">'l'<pos:position pos:line="49" pos:column="48"/></literal></expr></else></ternary></expr></argument>,
		    <argument><expr><ternary><condition><expr><call><name><name pos:line="50" pos:column="21">p<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">.<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">get_remote_choked<pos:position pos:line="50" pos:column="40"/></name></name><argument_list pos:line="50" pos:column="40">()<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="50" pos:column="44"/></condition><then pos:line="50" pos:column="44"> <expr><literal type="char" pos:line="50" pos:column="45">'c'<pos:position pos:line="50" pos:column="48"/></literal></expr> <pos:position pos:line="50" pos:column="49"/></then><else pos:line="50" pos:column="49">: <expr><literal type="char" pos:line="50" pos:column="51">'u'<pos:position pos:line="50" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
		    <argument><expr><ternary><condition><expr><call><name><name pos:line="51" pos:column="21">p<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">.<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">get_remote_interested<pos:position pos:line="51" pos:column="44"/></name></name><argument_list pos:line="51" pos:column="44">()<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48"> <expr><literal type="char" pos:line="51" pos:column="49">'i'<pos:position pos:line="51" pos:column="52"/></literal></expr> <pos:position pos:line="51" pos:column="53"/></then><else pos:line="51" pos:column="53">: <expr><literal type="char" pos:line="51" pos:column="55">'n'<pos:position pos:line="51" pos:column="58"/></literal></expr></else></ternary></expr></argument>,
		    <argument><expr><ternary><condition><expr><call><name><name pos:line="52" pos:column="21">p<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">get_local_choked<pos:position pos:line="52" pos:column="39"/></name></name><argument_list pos:line="52" pos:column="39">()<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43"> <expr><literal type="char" pos:line="52" pos:column="44">'c'<pos:position pos:line="52" pos:column="47"/></literal></expr> <pos:position pos:line="52" pos:column="48"/></then><else pos:line="52" pos:column="48">: <expr><literal type="char" pos:line="52" pos:column="50">'u'<pos:position pos:line="52" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
		    <argument><expr><ternary><condition><expr><call><name><name pos:line="53" pos:column="21">p<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">.<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">get_local_interested<pos:position pos:line="53" pos:column="43"/></name></name><argument_list pos:line="53" pos:column="43">()<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr> ?<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47"> <expr><literal type="char" pos:line="53" pos:column="48">'i'<pos:position pos:line="53" pos:column="51"/></literal></expr> <pos:position pos:line="53" pos:column="52"/></then><else pos:line="53" pos:column="52">: <expr><literal type="char" pos:line="53" pos:column="54">'n'<pos:position pos:line="53" pos:column="57"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">x<pos:position pos:line="54" pos:column="6"/></name> <operator pos:line="54" pos:column="7">+=<pos:position pos:line="54" pos:column="9"/></operator> <literal type="number" pos:line="54" pos:column="10">9<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="56" pos:column="5">m_canvas<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">print<pos:position pos:line="56" pos:column="20"/></name></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">x<pos:position pos:line="56" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="24">y<pos:position pos:line="56" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="27">"%i/%i"<pos:position pos:line="56" pos:column="34"/></literal></expr></argument>,
		    <argument><expr><call><name><name pos:line="57" pos:column="21">p<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">.<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">get_outgoing_queue_size<pos:position pos:line="57" pos:column="46"/></name></name><argument_list pos:line="57" pos:column="46">()<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name><name pos:line="58" pos:column="21">p<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">.<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">get_incoming_queue_size<pos:position pos:line="58" pos:column="46"/></name></name><argument_list pos:line="58" pos:column="46">()<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="59" pos:column="5">x<pos:position pos:line="59" pos:column="6"/></name> <operator pos:line="59" pos:column="7">+=<pos:position pos:line="59" pos:column="9"/></operator> <literal type="number" pos:line="59" pos:column="10">6<pos:position pos:line="59" pos:column="11"/></literal></expr>;<pos:position pos:line="59" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="61" pos:column="5">m_canvas<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">-&gt;<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="15">print<pos:position pos:line="61" pos:column="20"/></name></name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">x<pos:position pos:line="61" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="24">y<pos:position pos:line="61" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="27">"%3i"<pos:position pos:line="61" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="34">done_percentage<pos:position pos:line="61" pos:column="49"/></name><argument_list pos:line="61" pos:column="49">(<argument><expr><operator pos:line="61" pos:column="50">*<pos:position pos:line="61" pos:column="51"/></operator><name><name pos:line="61" pos:column="51">range<pos:position pos:line="61" pos:column="56"/></name><operator pos:line="61" pos:column="56">.<pos:position pos:line="61" pos:column="57"/></operator><name pos:line="61" pos:column="57">first<pos:position pos:line="61" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">x<pos:position pos:line="62" pos:column="6"/></name> <operator pos:line="62" pos:column="7">+=<pos:position pos:line="62" pos:column="9"/></operator> <literal type="number" pos:line="62" pos:column="10">6<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></expr_stmt>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><call><name><name pos:line="64" pos:column="9">p<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">.<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">get_incoming_queue_size<pos:position pos:line="64" pos:column="34"/></name></name><argument_list pos:line="64" pos:column="34">()<pos:position pos:line="64" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="37"/></condition><then pos:line="64" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="65" pos:column="7">m_canvas<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">print<pos:position pos:line="65" pos:column="22"/></name></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">x<pos:position pos:line="65" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="26">y<pos:position pos:line="65" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="29">"%i"<pos:position pos:line="65" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="35">p<pos:position pos:line="65" pos:column="36"/></name><operator pos:line="65" pos:column="36">.<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">get_incoming_index<pos:position pos:line="65" pos:column="55"/></name></name><argument_list pos:line="65" pos:column="55">(<argument><expr><literal type="number" pos:line="65" pos:column="56">0<pos:position pos:line="65" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="67" pos:column="5">x<pos:position pos:line="67" pos:column="6"/></name> <operator pos:line="67" pos:column="7">+=<pos:position pos:line="67" pos:column="9"/></operator> <literal type="number" pos:line="67" pos:column="10">6<pos:position pos:line="67" pos:column="11"/></literal></expr>;<pos:position pos:line="67" pos:column="12"/></expr_stmt>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name><name pos:line="69" pos:column="9">p<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">.<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">get_snubbed<pos:position pos:line="69" pos:column="22"/></name></name><argument_list pos:line="69" pos:column="22">()<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="70" pos:column="7">m_canvas<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">-&gt;<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="17">print<pos:position pos:line="70" pos:column="22"/></name></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">x<pos:position pos:line="70" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="26">y<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">"*"<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="72" pos:column="5">++<pos:position pos:line="72" pos:column="7"/></operator><name pos:line="72" pos:column="7">y<pos:position pos:line="72" pos:column="8"/></name></expr>;<pos:position pos:line="72" pos:column="9"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="73" pos:column="5">++<pos:position pos:line="73" pos:column="7"/></operator><name><name pos:line="73" pos:column="7">range<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">.<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="13">first<pos:position pos:line="73" pos:column="18"/></name></name></expr>;<pos:position pos:line="73" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></while>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

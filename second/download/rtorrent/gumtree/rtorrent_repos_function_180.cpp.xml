<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_180.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">string<pos:position pos:line="1" pos:column="12"/></name></name></type>
<name pos:line="2" pos:column="1">convert_list_to_string<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">torrent<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">Object<pos:position pos:line="2" pos:column="39"/></name><operator pos:line="2" pos:column="39">::<pos:position pos:line="2" pos:column="41"/></operator><name pos:line="2" pos:column="41">list_type<pos:position pos:line="2" pos:column="50"/></name><operator pos:line="2" pos:column="50">::<pos:position pos:line="2" pos:column="52"/></operator><name pos:line="2" pos:column="52">const_iterator<pos:position pos:line="2" pos:column="66"/></name></name></type> <name pos:line="2" pos:column="67">first<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                       <parameter><decl><type><name><name pos:line="3" pos:column="24">torrent<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">::<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">Object<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">::<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">list_type<pos:position pos:line="3" pos:column="50"/></name><operator pos:line="3" pos:column="50">::<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">const_iterator<pos:position pos:line="3" pos:column="66"/></name></name></type> <name pos:line="3" pos:column="67">last<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="72"/></parameter_list> <block pos:line="3" pos:column="73">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">std<pos:position pos:line="4" pos:column="6"/></name><operator pos:line="4" pos:column="6">::<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">string<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">dest<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><name pos:line="6" pos:column="10">first<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">last<pos:position pos:line="6" pos:column="23"/></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition> <block pos:line="6" pos:column="25">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">first<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">is_string<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">()<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
      <block type="pseudo"><throw pos:line="8" pos:column="7">throw <expr><call><name><name pos:line="8" pos:column="13">torrent<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">::<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">input_error<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">(<argument><expr><literal type="string" pos:line="8" pos:column="34">"Could not convert non-string list element to string."<pos:position pos:line="8" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="90"/></throw></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// Meh.</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name><name pos:line="11" pos:column="10">dest<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">empty<pos:position pos:line="11" pos:column="20"/></name></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">dest<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">+=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="string" pos:line="12" pos:column="15">",\""<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="7">dest<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">+=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="char" pos:line="14" pos:column="15">'"'<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt></block></else></if>

    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">std<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">::<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">string<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">::<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">size_type<pos:position pos:line="16" pos:column="27"/></name></name></type> <name pos:line="16" pos:column="28">quoteItr<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><call><name><name pos:line="16" pos:column="39">dest<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">.<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">size<pos:position pos:line="16" pos:column="48"/></name></name><argument_list pos:line="16" pos:column="48">()<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">dest<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">+=<pos:position pos:line="17" pos:column="12"/></operator> <call><name><name pos:line="17" pos:column="13">first<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">as_string<pos:position pos:line="17" pos:column="29"/></name></name><argument_list pos:line="17" pos:column="29">()<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>

    <comment type="line" pos:line="19" pos:column="5">// Finding a quote inside the string should be relatively rare, so</comment>
    <comment type="line" pos:line="20" pos:column="5">// use something that is fast in the general case and ignore the</comment>
    <comment type="line" pos:line="21" pos:column="5">// cost of the unusual one.</comment>
    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><name pos:line="22" pos:column="12">quoteItr<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">!=<pos:position pos:line="22" pos:column="23"/></operator> <call><name><name pos:line="22" pos:column="24">dest<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">size<pos:position pos:line="22" pos:column="33"/></name></name><argument_list pos:line="22" pos:column="33">()<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="36"/></condition> <block pos:line="22" pos:column="37">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name><name pos:line="23" pos:column="11">dest<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><name pos:line="23" pos:column="16">quoteItr<pos:position pos:line="23" pos:column="24"/></name></expr>]<pos:position pos:line="23" pos:column="25"/></index></name> <operator pos:line="23" pos:column="26">==<pos:position pos:line="23" pos:column="28"/></operator> <literal type="char" pos:line="23" pos:column="29">'"'<pos:position pos:line="23" pos:column="32"/></literal> <operator pos:line="23" pos:column="33">||<pos:position pos:line="23" pos:column="35"/></operator> <name><name pos:line="23" pos:column="36">dest<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><name pos:line="23" pos:column="41">quoteItr<pos:position pos:line="23" pos:column="49"/></name></expr>]<pos:position pos:line="23" pos:column="50"/></index></name> <operator pos:line="23" pos:column="51">==<pos:position pos:line="23" pos:column="53"/></operator> <literal type="char" pos:line="23" pos:column="54">'\\'<pos:position pos:line="23" pos:column="58"/></literal></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="9">dest<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">insert<pos:position pos:line="24" pos:column="20"/></name></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">quoteItr<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">++<pos:position pos:line="24" pos:column="31"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="33">1<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="36">'\\'<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="26" pos:column="7">quoteItr<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">++<pos:position pos:line="26" pos:column="17"/></operator></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="29" pos:column="5">dest<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">+=<pos:position pos:line="29" pos:column="12"/></operator> <literal type="char" pos:line="29" pos:column="13">'"'<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">first<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">++<pos:position pos:line="30" pos:column="12"/></operator></expr>;<pos:position pos:line="30" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></while>

  <return pos:line="33" pos:column="3">return <expr><name pos:line="33" pos:column="10">dest<pos:position pos:line="33" pos:column="14"/></name></expr>;<pos:position pos:line="33" pos:column="15"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_510.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">View<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">prev_focus<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list> <block pos:line="2" pos:column="20">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">empty<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">()<pos:position pos:line="3" pos:column="14"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="15"/></condition><then pos:line="3" pos:column="15">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="6" pos:column="3">m_focus<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">m_focus<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">-<pos:position pos:line="6" pos:column="23"/></operator> <literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal> <operator pos:line="6" pos:column="26">+<pos:position pos:line="6" pos:column="27"/></operator> <call><name pos:line="6" pos:column="28">size<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call> <operator pos:line="6" pos:column="35">+<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="37">1<pos:position pos:line="6" pos:column="38"/></literal><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator> <operator pos:line="6" pos:column="40">%<pos:position pos:line="6" pos:column="41"/></operator> <operator pos:line="6" pos:column="42">(<pos:position pos:line="6" pos:column="43"/></operator><call><name pos:line="6" pos:column="43">size<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call> <operator pos:line="6" pos:column="50">+<pos:position pos:line="6" pos:column="51"/></operator> <literal type="number" pos:line="6" pos:column="52">1<pos:position pos:line="6" pos:column="53"/></literal><operator pos:line="6" pos:column="53">)<pos:position pos:line="6" pos:column="54"/></operator></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">m_signalChanged<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator></name></expr></expr_stmt><emit pos:line="8" pos:column="19">emit<expr><operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator></expr>;<pos:position pos:line="8" pos:column="26"/></emit>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

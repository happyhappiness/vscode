<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_780.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Lockfile<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">process_type<pos:position pos:line="1" pos:column="23"/></name></name></type>
<name><name pos:line="2" pos:column="1">Lockfile<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">locked_by<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list> <specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <block pos:line="2" pos:column="29">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name> <init pos:line="3" pos:column="10">= <expr><call><name><operator pos:line="3" pos:column="12">::<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">open<pos:position pos:line="3" pos:column="18"/></name></name><argument_list pos:line="3" pos:column="18">(<argument><expr><call><name><name pos:line="3" pos:column="19">m_path<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">.<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">c_str<pos:position pos:line="3" pos:column="31"/></name></name><argument_list pos:line="3" pos:column="31">()<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="3" pos:column="35">O_RDONLY<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">fd<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">&lt;<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">process_type<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><call><name><name pos:line="6" pos:column="25">std<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">::<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">string<pos:position pos:line="6" pos:column="36"/></name></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">first<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><literal type="number" pos:line="8" pos:column="14">256<pos:position pos:line="8" pos:column="17"/></literal></expr>]<pos:position pos:line="8" pos:column="18"/></index></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name><modifier pos:line="9" pos:column="7">*<pos:position pos:line="9" pos:column="8"/></modifier></type> <name pos:line="9" pos:column="9">last<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">first<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">+<pos:position pos:line="9" pos:column="23"/></operator> <call><name><name pos:line="9" pos:column="24">std<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name><name pos:line="9" pos:column="29">max<pos:position pos:line="9" pos:column="32"/></name><argument_list type="generic" pos:line="9" pos:column="32">&lt;<argument><expr><name pos:line="9" pos:column="33">ssize_t<pos:position pos:line="9" pos:column="40"/></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="44"/></argument_list></name></name><argument_list pos:line="9" pos:column="41">(<argument><expr><call><name pos:line="9" pos:column="42">read<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">fd<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">first<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="58">255<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="64">0<pos:position pos:line="9" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="67"/></decl_stmt>

  <expr_stmt><expr><operator pos:line="11" pos:column="3">*<pos:position pos:line="11" pos:column="4"/></operator><name pos:line="11" pos:column="4">last<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <literal type="char" pos:line="11" pos:column="11">'\0'<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name><operator pos:line="12" pos:column="3">::<pos:position pos:line="12" pos:column="5"/></operator><name pos:line="12" pos:column="5">close<pos:position pos:line="12" pos:column="10"/></name></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">fd<pos:position pos:line="12" pos:column="13"/></name></expr></argument>)<pos:position pos:line="12" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name><modifier pos:line="14" pos:column="7">*<pos:position pos:line="14" pos:column="8"/></modifier></type> <name pos:line="14" pos:column="9">endHostname<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><call><name><name pos:line="14" pos:column="23">std<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">::<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">find_if<pos:position pos:line="14" pos:column="35"/></name></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">first<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">last<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="49">lockfile_valid_hostname<pos:position pos:line="14" pos:column="72"/></name><argument_list pos:line="14" pos:column="72">()<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="76"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name><modifier pos:line="15" pos:column="7">*<pos:position pos:line="15" pos:column="8"/></modifier></type> <name pos:line="15" pos:column="9">beginPid<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><name pos:line="15" pos:column="20">endHostname<pos:position pos:line="15" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name><modifier pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></modifier></type> <name pos:line="16" pos:column="9">endPid<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">long<pos:position pos:line="18" pos:column="7"/></name> <name pos:line="18" pos:column="8">long<pos:position pos:line="18" pos:column="12"/></name> <name pos:line="18" pos:column="13">int<pos:position pos:line="18" pos:column="16"/></name></type> <name pos:line="18" pos:column="17">pid<pos:position pos:line="18" pos:column="20"/></name></decl>;<pos:position pos:line="18" pos:column="21"/></decl_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">beginPid<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">+<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">2<pos:position pos:line="20" pos:column="19"/></literal> <operator pos:line="20" pos:column="20">&gt;=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="23">last<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">||<pos:position pos:line="20" pos:column="30"/></operator>
      <operator pos:line="21" pos:column="7">*<pos:position pos:line="21" pos:column="8"/></operator><operator pos:line="21" pos:column="8">(<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">beginPid<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">++<pos:position pos:line="21" pos:column="19"/></operator><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">!=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="char" pos:line="21" pos:column="24">':'<pos:position pos:line="21" pos:column="27"/></literal> <operator pos:line="21" pos:column="28">||<pos:position pos:line="21" pos:column="30"/></operator>
      <operator pos:line="22" pos:column="7">*<pos:position pos:line="22" pos:column="8"/></operator><operator pos:line="22" pos:column="8">(<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">beginPid<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">++<pos:position pos:line="22" pos:column="19"/></operator><operator pos:line="22" pos:column="19">)<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="21">!=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="char" pos:line="22" pos:column="24">'+'<pos:position pos:line="22" pos:column="27"/></literal> <operator pos:line="22" pos:column="28">||<pos:position pos:line="22" pos:column="30"/></operator>
      <operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">pid<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">strtoll<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">beginPid<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="33">endPid<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="41">10<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call><operator pos:line="23" pos:column="44">)<pos:position pos:line="23" pos:column="45"/></operator> <operator pos:line="23" pos:column="46">==<pos:position pos:line="23" pos:column="48"/></operator> <literal type="number" pos:line="23" pos:column="49">0<pos:position pos:line="23" pos:column="50"/></literal> <operator pos:line="23" pos:column="51">||<pos:position pos:line="23" pos:column="53"/></operator>
      <name pos:line="24" pos:column="7">endPid<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">==<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><call><name pos:line="25" pos:column="12">process_type<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><call><name><name pos:line="25" pos:column="25">std<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">::<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">string<pos:position pos:line="25" pos:column="36"/></name></name><argument_list pos:line="25" pos:column="36">()<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="40">0<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></return></block></then></if>
    
  <return pos:line="27" pos:column="3">return <expr><call><name pos:line="27" pos:column="10">process_type<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><call><name><name pos:line="27" pos:column="23">std<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">::<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">string<pos:position pos:line="27" pos:column="34"/></name></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">first<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">endHostname<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">pid<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

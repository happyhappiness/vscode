<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_134.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name pos:line="2" pos:column="1">apply_view_filter<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">view_filter_slot<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">viewFilterSlot<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name><name pos:line="2" pos:column="58">torrent<pos:position pos:line="2" pos:column="65"/></name><operator pos:line="2" pos:column="65">::<pos:position pos:line="2" pos:column="67"/></operator><name pos:line="2" pos:column="67">Object<pos:position pos:line="2" pos:column="73"/></name></name><modifier pos:line="2" pos:column="73">&amp;<pos:position pos:line="2" pos:column="78"/></modifier></type> <name pos:line="2" pos:column="75">rawArgs<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list> <block pos:line="2" pos:column="84">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">torrent<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">Object<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">::<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">list_type<pos:position pos:line="3" pos:column="35"/></name></name><modifier pos:line="3" pos:column="35">&amp;<pos:position pos:line="3" pos:column="40"/></modifier></type> <name pos:line="3" pos:column="37">args<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><call><name><name pos:line="3" pos:column="44">rawArgs<pos:position pos:line="3" pos:column="51"/></name><operator pos:line="3" pos:column="51">.<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">as_list<pos:position pos:line="3" pos:column="59"/></name></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">args<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">size<pos:position pos:line="5" pos:column="16"/></name></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call> <operator pos:line="5" pos:column="19">&lt;<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="21">1<pos:position pos:line="5" pos:column="22"/></literal></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">input_error<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">(<argument><expr><literal type="string" pos:line="6" pos:column="32">"Too few arguments."<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></throw></block></then></if>

  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name><name pos:line="8" pos:column="9">std<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">string<pos:position pos:line="8" pos:column="20"/></name></name><modifier pos:line="8" pos:column="20">&amp;<pos:position pos:line="8" pos:column="25"/></modifier></type> <name pos:line="8" pos:column="22">name<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name><name pos:line="8" pos:column="29">args<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">front<pos:position pos:line="8" pos:column="39"/></name></name><argument_list pos:line="8" pos:column="39">()<pos:position pos:line="8" pos:column="41"/></argument_list></call><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><call><name pos:line="8" pos:column="42">as_string<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">()<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
  
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name><name pos:line="10" pos:column="7">name<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">empty<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20">
    <block type="pseudo"><throw pos:line="11" pos:column="5">throw <expr><call><name><name pos:line="11" pos:column="11">torrent<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">::<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">input_error<pos:position pos:line="11" pos:column="31"/></name></name><argument_list pos:line="11" pos:column="31">(<argument><expr><literal type="string" pos:line="11" pos:column="32">"First argument must be a string."<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">core<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">::<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">ViewManager<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">::<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">filter_args<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">filterArgs<pos:position pos:line="13" pos:column="44"/></name></decl>;<pos:position pos:line="13" pos:column="45"/></decl_stmt>

  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name><name pos:line="15" pos:column="8">torrent<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">::<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">Object<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">::<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">list_type<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">::<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">const_iterator<pos:position pos:line="15" pos:column="50"/></name></name></type> <name pos:line="15" pos:column="51">itr<pos:position pos:line="15" pos:column="54"/></name> <init pos:line="15" pos:column="55">= <expr><operator pos:line="15" pos:column="57">++<pos:position pos:line="15" pos:column="59"/></operator><call><name><name pos:line="15" pos:column="59">args<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">.<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="64">begin<pos:position pos:line="15" pos:column="69"/></name></name><argument_list pos:line="15" pos:column="69">()<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="73">last<pos:position pos:line="15" pos:column="77"/></name> <init pos:line="15" pos:column="78">= <expr><call><name><name pos:line="15" pos:column="80">args<pos:position pos:line="15" pos:column="84"/></name><operator pos:line="15" pos:column="84">.<pos:position pos:line="15" pos:column="85"/></operator><name pos:line="15" pos:column="85">end<pos:position pos:line="15" pos:column="88"/></name></name><argument_list pos:line="15" pos:column="88">()<pos:position pos:line="15" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="91"/></init> <condition><expr><name pos:line="15" pos:column="92">itr<pos:position pos:line="15" pos:column="95"/></name> <operator pos:line="15" pos:column="96">!=<pos:position pos:line="15" pos:column="98"/></operator> <name pos:line="15" pos:column="99">last<pos:position pos:line="15" pos:column="103"/></name></expr>;<pos:position pos:line="15" pos:column="104"/></condition> <incr><expr><name pos:line="15" pos:column="105">itr<pos:position pos:line="15" pos:column="108"/></name><operator pos:line="15" pos:column="108">++<pos:position pos:line="15" pos:column="110"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="111"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="16" pos:column="5">filterArgs<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">push_back<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">(<argument><expr><call><name><name pos:line="16" pos:column="26">itr<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">as_string<pos:position pos:line="16" pos:column="40"/></name></name><argument_list pos:line="16" pos:column="40">()<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt></block></for>

  <expr_stmt><expr><operator pos:line="18" pos:column="3">(<pos:position pos:line="18" pos:column="4"/></operator><call><name><name pos:line="18" pos:column="4">control<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">view_manager<pos:position pos:line="18" pos:column="25"/></name></name><argument_list pos:line="18" pos:column="25">()<pos:position pos:line="18" pos:column="27"/></argument_list></call><operator pos:line="18" pos:column="27">-&gt;*<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">viewFilterSlot<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator><operator pos:line="18" pos:column="45">(<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">name<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">,<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="52">filterArgs<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>

  <return pos:line="20" pos:column="3">return <expr><call><name><name pos:line="20" pos:column="10">torrent<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">::<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">Object<pos:position pos:line="20" pos:column="25"/></name></name><argument_list pos:line="20" pos:column="25">()<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

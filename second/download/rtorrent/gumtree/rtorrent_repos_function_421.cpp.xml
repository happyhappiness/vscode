<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_421.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">ViewManager<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">sort_list<pos:position pos:line="1" pos:column="30"/></name></name></type>
<name><name pos:line="2" pos:column="1">ViewManager<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">build_sort_list<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">sort_args<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="47">args<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">View<pos:position pos:line="3" pos:column="7"/></name><operator pos:line="3" pos:column="7">::<pos:position pos:line="3" pos:column="9"/></operator><name pos:line="3" pos:column="9">sort_list<pos:position pos:line="3" pos:column="18"/></name></name></type> <name pos:line="3" pos:column="19">sortList<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <expr_stmt><expr><call><name><name pos:line="4" pos:column="3">sortList<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">.<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">reserve<pos:position pos:line="4" pos:column="19"/></name></name><argument_list pos:line="4" pos:column="19">(<argument><expr><call><name><name pos:line="4" pos:column="20">args<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">.<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">size<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name><name pos:line="6" pos:column="8">sort_args<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">::<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">const_iterator<pos:position pos:line="6" pos:column="33"/></name></name></type> <name pos:line="6" pos:column="34">itr<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><call><name><name pos:line="6" pos:column="40">args<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">.<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">begin<pos:position pos:line="6" pos:column="50"/></name></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="54">last<pos:position pos:line="6" pos:column="58"/></name> <init pos:line="6" pos:column="59">= <expr><call><name><name pos:line="6" pos:column="61">args<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">.<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="66">end<pos:position pos:line="6" pos:column="69"/></name></name><argument_list pos:line="6" pos:column="69">()<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="72"/></init> <condition><expr><name pos:line="6" pos:column="73">itr<pos:position pos:line="6" pos:column="76"/></name> <operator pos:line="6" pos:column="77">!=<pos:position pos:line="6" pos:column="79"/></operator> <name pos:line="6" pos:column="80">last<pos:position pos:line="6" pos:column="84"/></name></expr>;<pos:position pos:line="6" pos:column="85"/></condition> <incr><expr><operator pos:line="6" pos:column="86">++<pos:position pos:line="6" pos:column="88"/></operator><name pos:line="6" pos:column="88">itr<pos:position pos:line="6" pos:column="91"/></name></expr></incr>)<pos:position pos:line="6" pos:column="92"/></control> <block pos:line="6" pos:column="93">{
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">sort_map<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">::<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">const_iterator<pos:position pos:line="7" pos:column="29"/></name></name></type> <name pos:line="7" pos:column="30">sortItr<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><call><name><name pos:line="7" pos:column="40">m_sort<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">.<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">find<pos:position pos:line="7" pos:column="51"/></name></name><argument_list pos:line="7" pos:column="51">(<argument><expr><call><name><name pos:line="7" pos:column="52">itr<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">c_str<pos:position pos:line="7" pos:column="62"/></name></name><argument_list pos:line="7" pos:column="62">()<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">sortItr<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <call><name><name pos:line="9" pos:column="20">m_sort<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">end<pos:position pos:line="9" pos:column="30"/></name></name><argument_list pos:line="9" pos:column="30">()<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
      <block type="pseudo"><throw pos:line="10" pos:column="7">throw <expr><call><name><name pos:line="10" pos:column="13">torrent<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">input_error<pos:position pos:line="10" pos:column="33"/></name></name><argument_list pos:line="10" pos:column="33">(<argument><expr><literal type="string" pos:line="10" pos:column="34">"Invalid sorting identifier."<pos:position pos:line="10" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></throw></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">sortList<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">push_back<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">sortItr<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">second<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></for>

  <return pos:line="15" pos:column="3">return <expr><name pos:line="15" pos:column="10">sortList<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

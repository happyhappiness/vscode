<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_433.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">float<pos:position pos:line="1" pos:column="6"/></name></type>
<name><name pos:line="2" pos:column="1">Download<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">distributed_copies<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <block pos:line="2" pos:column="38">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">uint8_t<pos:position pos:line="3" pos:column="16"/></name><modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type> <name pos:line="3" pos:column="18">avail<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><call><name><name pos:line="3" pos:column="26">m_download<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">.<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="37">chunks_seen<pos:position pos:line="3" pos:column="48"/></name></name><argument_list pos:line="3" pos:column="48">()<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">uint8_t<pos:position pos:line="4" pos:column="16"/></name><modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type> <name pos:line="4" pos:column="18">end<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">avail<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">+<pos:position pos:line="4" pos:column="31"/></operator> <call><name><name pos:line="4" pos:column="32">m_download<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">.<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">file_list<pos:position pos:line="4" pos:column="52"/></name></name><argument_list pos:line="4" pos:column="52">()<pos:position pos:line="4" pos:column="54"/></argument_list></call><operator pos:line="4" pos:column="54">-&gt;<pos:position pos:line="4" pos:column="59"/></operator><call><name pos:line="4" pos:column="56">size_chunks<pos:position pos:line="4" pos:column="67"/></name><argument_list pos:line="4" pos:column="67">()<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">avail<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">minAvail<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><call><name><name pos:line="9" pos:column="18">std<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">::<pos:position pos:line="9" pos:column="23"/></operator><name><name pos:line="9" pos:column="23">numeric_limits<pos:position pos:line="9" pos:column="37"/></name><argument_list type="generic" pos:line="9" pos:column="37">&lt;<argument><expr><name pos:line="9" pos:column="38">uint8_t<pos:position pos:line="9" pos:column="45"/></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="49"/></argument_list></name><operator pos:line="9" pos:column="46">::<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">max<pos:position pos:line="9" pos:column="51"/></name></name><argument_list pos:line="9" pos:column="51">()<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">num<pos:position pos:line="10" pos:column="10"/></name> <init pos:line="10" pos:column="11">= <expr><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init pos:line="12" pos:column="8">;<pos:position pos:line="12" pos:column="9"/></init> <condition><expr><name pos:line="12" pos:column="10">avail<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&lt;<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="18">end<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></condition> <incr><expr><operator pos:line="12" pos:column="23">++<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">avail<pos:position pos:line="12" pos:column="30"/></name></expr></incr>)<pos:position pos:line="12" pos:column="31"/></control>
    <block type="pseudo"><if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">avail<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">minAvail<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
      <expr_stmt><expr><name pos:line="14" pos:column="7">num<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">++<pos:position pos:line="14" pos:column="12"/></operator></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">avail<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="25">minAvail<pos:position pos:line="15" pos:column="33"/></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">minAvail<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">avail<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="17" pos:column="7">num<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr>;<pos:position pos:line="17" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif></if></block></for>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">minAvail<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">+<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal> <operator pos:line="20" pos:column="23">-<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">float<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">num<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">/<pos:position pos:line="20" pos:column="37"/></operator> <call><name><name pos:line="20" pos:column="38">m_download<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">file_list<pos:position pos:line="20" pos:column="58"/></name></name><argument_list pos:line="20" pos:column="58">()<pos:position pos:line="20" pos:column="60"/></argument_list></call><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><call><name pos:line="20" pos:column="62">size_chunks<pos:position pos:line="20" pos:column="73"/></name><argument_list pos:line="20" pos:column="73">()<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_772.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Directory<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">is_valid<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list> <specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <block pos:line="2" pos:column="29">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">m_path<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">.<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">empty<pos:position pos:line="3" pos:column="19"/></name></name><argument_list pos:line="3" pos:column="19">()<pos:position pos:line="3" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><literal type="boolean" pos:line="4" pos:column="12">false<pos:position pos:line="4" pos:column="17"/></literal></expr>;<pos:position pos:line="4" pos:column="18"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">DIR<pos:position pos:line="6" pos:column="6"/></name><modifier pos:line="6" pos:column="6">*<pos:position pos:line="6" pos:column="7"/></modifier></type> <name pos:line="6" pos:column="8">d<pos:position pos:line="6" pos:column="9"/></name> <init pos:line="6" pos:column="10">= <expr><call><name pos:line="6" pos:column="12">opendir<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><call><name><name pos:line="6" pos:column="20">rak<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">::<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">path_expand<pos:position pos:line="6" pos:column="36"/></name></name><argument_list pos:line="6" pos:column="36">(<argument><expr><name pos:line="6" pos:column="37">m_path<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call><operator pos:line="6" pos:column="44">.<pos:position pos:line="6" pos:column="45"/></operator><call><name pos:line="6" pos:column="45">c_str<pos:position pos:line="6" pos:column="50"/></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">closedir<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">d<pos:position pos:line="7" pos:column="13"/></name></expr></argument>)<pos:position pos:line="7" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>

  <return pos:line="9" pos:column="3">return <expr><name pos:line="9" pos:column="10">d<pos:position pos:line="9" pos:column="11"/></name></expr>;<pos:position pos:line="9" pos:column="12"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_73.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name pos:line="2" pos:column="1">apply_stop_on_ratio<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name><name pos:line="2" pos:column="27">torrent<pos:position pos:line="2" pos:column="34"/></name><operator pos:line="2" pos:column="34">::<pos:position pos:line="2" pos:column="36"/></operator><name pos:line="2" pos:column="36">Object<pos:position pos:line="2" pos:column="42"/></name></name><modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="44">rawArgs<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">torrent<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">Object<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">::<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">list_type<pos:position pos:line="3" pos:column="35"/></name></name><modifier pos:line="3" pos:column="35">&amp;<pos:position pos:line="3" pos:column="40"/></modifier></type> <name pos:line="3" pos:column="37">args<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><call><name><name pos:line="3" pos:column="44">rawArgs<pos:position pos:line="3" pos:column="51"/></name><operator pos:line="3" pos:column="51">.<pos:position pos:line="3" pos:column="52"/></operator><name pos:line="3" pos:column="52">as_list<pos:position pos:line="3" pos:column="59"/></name></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">args<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">empty<pos:position pos:line="5" pos:column="17"/></name></name><argument_list pos:line="5" pos:column="17">()<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">input_error<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">(<argument><expr><literal type="string" pos:line="6" pos:column="32">"Too few arguments."<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></throw></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">torrent<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">::<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">Object<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">::<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">list_type<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">::<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">const_iterator<pos:position pos:line="8" pos:column="45"/></name></name></type> <name pos:line="8" pos:column="46">argItr<pos:position pos:line="8" pos:column="52"/></name> <init pos:line="8" pos:column="53">= <expr><call><name><name pos:line="8" pos:column="55">args<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">begin<pos:position pos:line="8" pos:column="65"/></name></name><argument_list pos:line="8" pos:column="65">()<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="68"/></decl_stmt>

  <comment type="line" pos:line="10" pos:column="3">// first argument:  minimum ratio to reach</comment>
  <comment type="line" pos:line="11" pos:column="3">// second argument: minimum upload amount to reach [optional]</comment>
  <comment type="line" pos:line="12" pos:column="3">// third argument:  maximum ratio to reach [optional]</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int64_t<pos:position pos:line="13" pos:column="10"/></name></type> <name pos:line="13" pos:column="11">minRatio<pos:position pos:line="13" pos:column="19"/></name>  <init pos:line="13" pos:column="21">= <expr><call><name><name pos:line="13" pos:column="23">rpc<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">::<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">convert_to_value<pos:position pos:line="13" pos:column="44"/></name></name><argument_list pos:line="13" pos:column="44">(<argument><expr><operator pos:line="13" pos:column="45">*<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">argItr<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">++<pos:position pos:line="13" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int64_t<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">minUpload<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><ternary><condition><expr><name pos:line="14" pos:column="23">argItr<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">!=<pos:position pos:line="14" pos:column="32"/></operator> <call><name><name pos:line="14" pos:column="33">args<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">end<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">()<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr> ?<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <expr><call><name><name pos:line="14" pos:column="46">rpc<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">::<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="51">convert_to_value<pos:position pos:line="14" pos:column="67"/></name></name><argument_list pos:line="14" pos:column="67">(<argument><expr><operator pos:line="14" pos:column="68">*<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="69">argItr<pos:position pos:line="14" pos:column="75"/></name><operator pos:line="14" pos:column="75">++<pos:position pos:line="14" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="14" pos:column="79"/></then><else pos:line="14" pos:column="79">: <expr><literal type="number" pos:line="14" pos:column="81">0<pos:position pos:line="14" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="14" pos:column="83"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int64_t<pos:position pos:line="15" pos:column="10"/></name></type> <name pos:line="15" pos:column="11">maxRatio<pos:position pos:line="15" pos:column="19"/></name>  <init pos:line="15" pos:column="21">= <expr><ternary><condition><expr><name pos:line="15" pos:column="23">argItr<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">!=<pos:position pos:line="15" pos:column="32"/></operator> <call><name><name pos:line="15" pos:column="33">args<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">end<pos:position pos:line="15" pos:column="41"/></name></name><argument_list pos:line="15" pos:column="41">()<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr> ?<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <expr><call><name><name pos:line="15" pos:column="46">rpc<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">::<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">convert_to_value<pos:position pos:line="15" pos:column="67"/></name></name><argument_list pos:line="15" pos:column="67">(<argument><expr><operator pos:line="15" pos:column="68">*<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="69">argItr<pos:position pos:line="15" pos:column="75"/></name><operator pos:line="15" pos:column="75">++<pos:position pos:line="15" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="15" pos:column="79"/></then><else pos:line="15" pos:column="79">: <expr><literal type="number" pos:line="15" pos:column="81">0<pos:position pos:line="15" pos:column="82"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="15" pos:column="83"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="17" pos:column="3">core<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">::<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">DownloadList<pos:position pos:line="17" pos:column="21"/></name></name><modifier pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></modifier></type> <name pos:line="17" pos:column="23">downloadList<pos:position pos:line="17" pos:column="35"/></name> <init pos:line="17" pos:column="36">= <expr><call><name><name pos:line="17" pos:column="38">control<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">core<pos:position pos:line="17" pos:column="51"/></name></name><argument_list pos:line="17" pos:column="51">()<pos:position pos:line="17" pos:column="53"/></argument_list></call><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><call><name pos:line="17" pos:column="55">download_list<pos:position pos:line="17" pos:column="68"/></name><argument_list pos:line="17" pos:column="68">()<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="71"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="18" pos:column="3">core<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">::<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">Manager<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">::<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">DListItr<pos:position pos:line="18" pos:column="26"/></name></name></type> <name pos:line="18" pos:column="27">itr<pos:position pos:line="18" pos:column="30"/></name> <init pos:line="18" pos:column="31">= <expr><call><name><name pos:line="18" pos:column="33">downloadList<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">begin<pos:position pos:line="18" pos:column="52"/></name></name><argument_list pos:line="18" pos:column="52">()<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="55"/></decl_stmt>

  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">itr<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name><name pos:line="20" pos:column="17">std<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">::<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">find_if<pos:position pos:line="20" pos:column="29"/></name></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">itr<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="35">downloadList<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">end<pos:position pos:line="20" pos:column="52"/></name></name><argument_list pos:line="20" pos:column="52">()<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="56">std<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">::<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">mem_fun<pos:position pos:line="20" pos:column="68"/></name></name><argument_list pos:line="20" pos:column="68">(<argument><expr><operator pos:line="20" pos:column="69">&amp;<pos:position pos:line="20" pos:column="74"/></operator><name><name pos:line="20" pos:column="70">core<pos:position pos:line="20" pos:column="74"/></name><operator pos:line="20" pos:column="74">::<pos:position pos:line="20" pos:column="76"/></operator><name pos:line="20" pos:column="76">Download<pos:position pos:line="20" pos:column="84"/></name><operator pos:line="20" pos:column="84">::<pos:position pos:line="20" pos:column="86"/></operator><name pos:line="20" pos:column="86">is_seeding<pos:position pos:line="20" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="98"/></argument_list></call><operator pos:line="20" pos:column="98">)<pos:position pos:line="20" pos:column="99"/></operator>
         <operator pos:line="21" pos:column="10">!=<pos:position pos:line="21" pos:column="12"/></operator> <call><name><name pos:line="21" pos:column="13">downloadList<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">end<pos:position pos:line="21" pos:column="30"/></name></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="33"/></condition> <block pos:line="21" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int64_t<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">totalDone<pos:position pos:line="22" pos:column="22"/></name>   <init pos:line="22" pos:column="25">= <expr><call><name><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><operator pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">itr<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">download<pos:position pos:line="22" pos:column="43"/></name></name><argument_list pos:line="22" pos:column="43">()<pos:position pos:line="22" pos:column="45"/></argument_list></call><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><call><name pos:line="22" pos:column="47">bytes_done<pos:position pos:line="22" pos:column="57"/></name><argument_list pos:line="22" pos:column="57">()<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int64_t<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">totalUpload<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><call><name><operator pos:line="23" pos:column="27">(<pos:position pos:line="23" pos:column="28"/></operator><operator pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">itr<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">)<pos:position pos:line="23" pos:column="33"/></operator><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">download<pos:position pos:line="23" pos:column="43"/></name></name><argument_list pos:line="23" pos:column="43">()<pos:position pos:line="23" pos:column="45"/></argument_list></call><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><call><name pos:line="23" pos:column="47">up_rate<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">()<pos:position pos:line="23" pos:column="56"/></argument_list></call><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><call><name pos:line="23" pos:column="58">total<pos:position pos:line="23" pos:column="63"/></name><argument_list pos:line="23" pos:column="63">()<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="66"/></decl_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">totalUpload<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&gt;=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="25">minUpload<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="38">totalUpload<pos:position pos:line="25" pos:column="49"/></name> <operator pos:line="25" pos:column="50">*<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">100<pos:position pos:line="25" pos:column="55"/></literal> <operator pos:line="25" pos:column="56">&gt;=<pos:position pos:line="25" pos:column="61"/></operator> <name pos:line="25" pos:column="59">totalDone<pos:position pos:line="25" pos:column="68"/></name> <operator pos:line="25" pos:column="69">*<pos:position pos:line="25" pos:column="70"/></operator> <name pos:line="25" pos:column="71">minRatio<pos:position pos:line="25" pos:column="79"/></name><operator pos:line="25" pos:column="79">)<pos:position pos:line="25" pos:column="80"/></operator> <operator pos:line="25" pos:column="81">||<pos:position pos:line="25" pos:column="83"/></operator>
        <operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">maxRatio<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">&gt;<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal> <operator pos:line="26" pos:column="23">&amp;&amp;<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="26">totalUpload<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">*<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="40">100<pos:position pos:line="26" pos:column="43"/></literal> <operator pos:line="26" pos:column="44">&gt;<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="46">totalDone<pos:position pos:line="26" pos:column="55"/></name> <operator pos:line="26" pos:column="56">*<pos:position pos:line="26" pos:column="57"/></operator> <name pos:line="26" pos:column="58">maxRatio<pos:position pos:line="26" pos:column="66"/></name><operator pos:line="26" pos:column="66">)<pos:position pos:line="26" pos:column="67"/></operator></expr>)<pos:position pos:line="26" pos:column="68"/></condition><then pos:line="26" pos:column="68"> <block pos:line="26" pos:column="69">{
      <expr_stmt><expr><call><name><name pos:line="27" pos:column="7">downloadList<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">stop_try<pos:position pos:line="27" pos:column="29"/></name></name><argument_list pos:line="27" pos:column="29">(<argument><expr><operator pos:line="27" pos:column="30">*<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">itr<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="28" pos:column="7">rpc<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">::<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">call_command_d<pos:position pos:line="28" pos:column="26"/></name></name><argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"d.set_ignore_commands"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="52">*<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">itr<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="58">(<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">int64_t<pos:position pos:line="28" pos:column="66"/></name><operator pos:line="28" pos:column="66">)<pos:position pos:line="28" pos:column="67"/></operator><literal type="number" pos:line="28" pos:column="67">1<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="31" pos:column="5">++<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">itr<pos:position pos:line="31" pos:column="10"/></name></expr>;<pos:position pos:line="31" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></while>

  <return pos:line="34" pos:column="3">return <expr><call><name><name pos:line="34" pos:column="10">torrent<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">::<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">Object<pos:position pos:line="34" pos:column="25"/></name></name><argument_list pos:line="34" pos:column="25">()<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

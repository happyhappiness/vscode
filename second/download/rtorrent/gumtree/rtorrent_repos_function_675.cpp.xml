<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_675.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowHttpQueue<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">receive_erase<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name><name pos:line="2" pos:column="32">core<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">CurlGet<pos:position pos:line="2" pos:column="45"/></name></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">h<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">Container<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">::<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">iterator<pos:position pos:line="3" pos:column="22"/></name></name></type> <name pos:line="3" pos:column="23">itr<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name><name pos:line="3" pos:column="29">std<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">::<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="34">find_if<pos:position pos:line="3" pos:column="41"/></name></name><argument_list pos:line="3" pos:column="41">(<argument><expr><call><name><name pos:line="3" pos:column="42">m_container<pos:position pos:line="3" pos:column="53"/></name><operator pos:line="3" pos:column="53">.<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="54">begin<pos:position pos:line="3" pos:column="59"/></name></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3" pos:column="63">m_container<pos:position pos:line="3" pos:column="74"/></name><operator pos:line="3" pos:column="74">.<pos:position pos:line="3" pos:column="75"/></operator><name pos:line="3" pos:column="75">end<pos:position pos:line="3" pos:column="78"/></name></name><argument_list pos:line="3" pos:column="78">()<pos:position pos:line="3" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3" pos:column="82">rak<pos:position pos:line="3" pos:column="85"/></name><operator pos:line="3" pos:column="85">::<pos:position pos:line="3" pos:column="87"/></operator><name pos:line="3" pos:column="87">equal<pos:position pos:line="3" pos:column="92"/></name></name><argument_list pos:line="3" pos:column="92">(<argument><expr><name pos:line="3" pos:column="93">h<pos:position pos:line="3" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="3" pos:column="96">std<pos:position pos:line="3" pos:column="99"/></name><operator pos:line="3" pos:column="99">::<pos:position pos:line="3" pos:column="101"/></operator><name pos:line="3" pos:column="101">mem_fun_ref<pos:position pos:line="3" pos:column="112"/></name></name><argument_list pos:line="3" pos:column="112">(<argument><expr><operator pos:line="3" pos:column="113">&amp;<pos:position pos:line="3" pos:column="118"/></operator><name><name pos:line="3" pos:column="114">Node<pos:position pos:line="3" pos:column="118"/></name><operator pos:line="3" pos:column="118">::<pos:position pos:line="3" pos:column="120"/></operator><name pos:line="3" pos:column="120">get_http<pos:position pos:line="3" pos:column="128"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="129"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="130"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="131"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="132"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">itr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <call><name><name pos:line="5" pos:column="14">m_container<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">end<pos:position pos:line="5" pos:column="29"/></name></name><argument_list pos:line="5" pos:column="29">()<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">std<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">logic_error<pos:position pos:line="6" pos:column="27"/></name></name><argument_list pos:line="6" pos:column="27">(<argument><expr><literal type="string" pos:line="6" pos:column="28">"WindowHttpQueue::receive_erase(...) tried to remove an object we don't have"<pos:position pos:line="6" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="107"/></throw></block></then></if>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">itr<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">m_http<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">itr<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">m_timer<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">cachedTime<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">+<pos:position pos:line="9" pos:column="30"/></operator> <call><name><name pos:line="9" pos:column="31">rak<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">::<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">timer<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">::<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">from_seconds<pos:position pos:line="9" pos:column="55"/></name></name><argument_list pos:line="9" pos:column="55">(<argument><expr><literal type="number" pos:line="9" pos:column="56">1<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mark_dirty<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">()<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

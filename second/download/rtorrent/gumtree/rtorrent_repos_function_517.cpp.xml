<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_517.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name><name pos:line="2" pos:column="1">View<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">insert_visible<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">Download<pos:position pos:line="2" pos:column="30"/></name><modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">d<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list> <block pos:line="2" pos:column="35">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">iterator<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">itr<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><call><name><name pos:line="3" pos:column="18">std<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">::<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">find_if<pos:position pos:line="3" pos:column="30"/></name></name><argument_list pos:line="3" pos:column="30">(<argument><expr><call><name pos:line="3" pos:column="31">begin_visible<pos:position pos:line="3" pos:column="44"/></name><argument_list pos:line="3" pos:column="44">()<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="48">end_visible<pos:position pos:line="3" pos:column="59"/></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3" pos:column="63">std<pos:position pos:line="3" pos:column="66"/></name><operator pos:line="3" pos:column="66">::<pos:position pos:line="3" pos:column="68"/></operator><name pos:line="3" pos:column="68">bind1st<pos:position pos:line="3" pos:column="75"/></name></name><argument_list pos:line="3" pos:column="75">(<argument><expr><call><name pos:line="3" pos:column="76">view_downloads_compare<pos:position pos:line="3" pos:column="98"/></name><argument_list pos:line="3" pos:column="98">(<argument><expr><name pos:line="3" pos:column="99">m_sortNew<pos:position pos:line="3" pos:column="108"/></name></expr></argument>)<pos:position pos:line="3" pos:column="109"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="3" pos:column="111">d<pos:position pos:line="3" pos:column="112"/></name></expr></argument>)<pos:position pos:line="3" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="114"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="115"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">m_size<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">++<pos:position pos:line="5" pos:column="11"/></operator></expr>;<pos:position pos:line="5" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">m_focus<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">+=<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">m_focus<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&gt;=<pos:position pos:line="6" pos:column="28"/></operator> <call><name pos:line="6" pos:column="26">position<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">itr<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="8" pos:column="3">base_type<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">insert<pos:position pos:line="8" pos:column="20"/></name></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">itr<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">d<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

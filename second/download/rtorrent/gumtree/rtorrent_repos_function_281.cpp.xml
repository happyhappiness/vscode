<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_281.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementStringList<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">next_screen<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list> <block pos:line="2" pos:column="34">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">m_window<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">get_draw_end<pos:position pos:line="3" pos:column="29"/></name></name><argument_list pos:line="3" pos:column="29">()<pos:position pos:line="3" pos:column="31"/></argument_list></call> <operator pos:line="3" pos:column="32">!=<pos:position pos:line="3" pos:column="34"/></operator> <call><name><name pos:line="3" pos:column="35">m_list<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">.<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">end<pos:position pos:line="3" pos:column="45"/></name></name><argument_list pos:line="3" pos:column="45">()<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="4" pos:column="5">m_window<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">set_range<pos:position pos:line="4" pos:column="24"/></name></name><argument_list pos:line="4" pos:column="24">(<argument><expr><call><name><name pos:line="4" pos:column="25">m_window<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">get_draw_end<pos:position pos:line="4" pos:column="47"/></name></name><argument_list pos:line="4" pos:column="47">()<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="51">m_list<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">.<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">end<pos:position pos:line="4" pos:column="61"/></name></name><argument_list pos:line="4" pos:column="61">()<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt></block></then>
  <else pos:line="5" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="5">m_window<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">set_range<pos:position pos:line="6" pos:column="24"/></name></name><argument_list pos:line="6" pos:column="24">(<argument><expr><call><name><name pos:line="6" pos:column="25">m_list<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">.<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">begin<pos:position pos:line="6" pos:column="37"/></name></name><argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="41">m_list<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">.<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">end<pos:position pos:line="6" pos:column="51"/></name></name><argument_list pos:line="6" pos:column="51">()<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name><name pos:line="8" pos:column="3">m_window<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">mark_dirty<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">()<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

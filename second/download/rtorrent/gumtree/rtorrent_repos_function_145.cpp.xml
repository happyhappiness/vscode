<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_145.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">string<pos:position pos:line="1" pos:column="12"/></name></name></type>
<name pos:line="2" pos:column="1">retrieve_d_base_filename<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name><name pos:line="2" pos:column="26">core<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">Download<pos:position pos:line="2" pos:column="40"/></name></name><modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">download<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <block pos:line="2" pos:column="52">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">std<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">::<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">string<pos:position pos:line="3" pos:column="20"/></name></name><modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type> <name pos:line="3" pos:column="22">base<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">download<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">file_list<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><call><name pos:line="5" pos:column="30">is_multi_file<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">base<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <operator pos:line="6" pos:column="12">&amp;<pos:position pos:line="6" pos:column="17"/></operator><call><name><name pos:line="6" pos:column="13">download<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">file_list<pos:position pos:line="6" pos:column="32"/></name></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><call><name pos:line="6" pos:column="36">root_dir<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">()<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt></block></then>
  <else pos:line="7" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">base<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <operator pos:line="8" pos:column="12">&amp;<pos:position pos:line="8" pos:column="17"/></operator><call><name><name pos:line="8" pos:column="13">download<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">file_list<pos:position pos:line="8" pos:column="32"/></name></name><argument_list pos:line="8" pos:column="32">()<pos:position pos:line="8" pos:column="34"/></argument_list></call><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><call><name pos:line="8" pos:column="36">at<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="number" pos:line="8" pos:column="39">0<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><call><name pos:line="8" pos:column="43">frozen_path<pos:position pos:line="8" pos:column="54"/></name><argument_list pos:line="8" pos:column="54">()<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt></block></else></if>

  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">std<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">::<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">string<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">size_type<pos:position pos:line="10" pos:column="25"/></name></name></type> <name pos:line="10" pos:column="26">split<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><call><name><name pos:line="10" pos:column="34">base<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">rfind<pos:position pos:line="10" pos:column="45"/></name></name><argument_list pos:line="10" pos:column="45">(<argument><expr><literal type="char" pos:line="10" pos:column="46">'/'<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">split<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <name><name pos:line="12" pos:column="16">std<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">::<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">string<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">::<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">npos<pos:position pos:line="12" pos:column="33"/></name></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">base<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></return></block></then>
  <else pos:line="14" pos:column="3">else
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><call><name><name pos:line="15" pos:column="12">base<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">substr<pos:position pos:line="15" pos:column="24"/></name></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">split<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">+<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">1<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></return></block></else></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_518.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name><name pos:line="2" pos:column="1">View<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">erase<pos:position pos:line="2" pos:column="12"/></name></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">iterator<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">itr<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list> <block pos:line="2" pos:column="27">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">itr<pos:position pos:line="3" pos:column="10"/></name> <operator pos:line="3" pos:column="11">==<pos:position pos:line="3" pos:column="13"/></operator> <call><name pos:line="3" pos:column="14">end_filtered<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">()<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">internal_error<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">(<argument><expr><literal type="string" pos:line="4" pos:column="35">"View::erase_visible(...) iterator out of range."<pos:position pos:line="4" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="86"/></throw></block></then></if>

  <expr_stmt><expr><name pos:line="6" pos:column="3">m_size<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">-=<pos:position pos:line="6" pos:column="12"/></operator> <operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">itr<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&lt;<pos:position pos:line="6" pos:column="22"/></operator> <call><name pos:line="6" pos:column="20">end_visible<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">m_focus<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">-=<pos:position pos:line="7" pos:column="13"/></operator> <operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">m_focus<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&gt;<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="25">position<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">itr<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call><operator pos:line="7" pos:column="38">)<pos:position pos:line="7" pos:column="39"/></operator></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="9" pos:column="3">base_type<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">::<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">erase<pos:position pos:line="9" pos:column="19"/></name></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">itr<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

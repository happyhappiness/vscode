<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_713.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">virtual<pos:position pos:line="1" pos:column="8"/></specifier> <type><name pos:line="1" pos:column="9">int64_t<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">value<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type> <name pos:line="1" pos:column="29">object<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
    <if pos:line="2" pos:column="5">if <condition pos:line="2" pos:column="8">(<expr><name pos:line="2" pos:column="9">object<pos:position pos:line="2" pos:column="15"/></name> <operator pos:line="2" pos:column="16">==<pos:position pos:line="2" pos:column="18"/></operator> <name pos:line="2" pos:column="19">NULL<pos:position pos:line="2" pos:column="23"/></name></expr>)<pos:position pos:line="2" pos:column="24"/></condition><then pos:line="2" pos:column="24">
      <block type="pseudo"><return pos:line="3" pos:column="7">return <expr><literal type="number" pos:line="3" pos:column="14">0<pos:position pos:line="3" pos:column="15"/></literal></expr>;<pos:position pos:line="3" pos:column="16"/></return></block></then></if>

    <return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">m_slot<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><cast type="reinterpret" pos:line="5" pos:column="19">reinterpret_cast<argument_list type="generic" pos:line="5" pos:column="35">&lt;<argument><expr><name pos:line="5" pos:column="36">arg1_type<pos:position pos:line="5" pos:column="45"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="49"/></argument_list><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">object<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></cast></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="56"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></function></unit>

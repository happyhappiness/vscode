<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_602.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type>
<name><name pos:line="2" pos:column="1">TextElementValueBase<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">print<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name><modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">first<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">last<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="54">Canvas<pos:position pos:line="2" pos:column="60"/></name><operator pos:line="2" pos:column="60">::<pos:position pos:line="2" pos:column="62"/></operator><name pos:line="2" pos:column="62">attributes_list<pos:position pos:line="2" pos:column="77"/></name></name><modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type> <name pos:line="2" pos:column="79">attributes<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">void<pos:position pos:line="2" pos:column="95"/></name><modifier pos:line="2" pos:column="95">*<pos:position pos:line="2" pos:column="96"/></modifier></type> <name pos:line="2" pos:column="97">object<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="104"/></parameter_list> <block pos:line="2" pos:column="105">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">Attributes<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">baseAttribute<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><call><name><name pos:line="3" pos:column="30">attributes<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">back<pos:position pos:line="3" pos:column="46"/></name></name><argument_list pos:line="3" pos:column="46">()<pos:position pos:line="3" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">push_attribute<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">attributes<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="30">Attributes<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">first<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="48">m_attributes<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="62">Attributes<pos:position pos:line="4" pos:column="72"/></name><operator pos:line="4" pos:column="72">::<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="74">color_invalid<pos:position pos:line="4" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="90"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int64_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">val<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><call><name pos:line="6" pos:column="17">value<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">object<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <comment type="line" pos:line="8" pos:column="3">// Transform the value if needed.</comment>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">m_flags<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="17">flag_elapsed<pos:position pos:line="9" pos:column="29"/></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">val<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name><name pos:line="10" pos:column="11">cachedTime<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">seconds<pos:position pos:line="10" pos:column="29"/></name></name><argument_list pos:line="10" pos:column="29">()<pos:position pos:line="10" pos:column="31"/></argument_list></call> <operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="34">val<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt></block></then>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">m_flags<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="22">flag_remaining<pos:position pos:line="11" pos:column="36"/></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">val<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">val<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">-<pos:position pos:line="12" pos:column="16"/></operator> <call><name><name pos:line="12" pos:column="17">cachedTime<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">seconds<pos:position pos:line="12" pos:column="35"/></name></name><argument_list pos:line="12" pos:column="35">()<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt></block></then></if></elseif></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">m_flags<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&amp;<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="17">flag_usec<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">val<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name><name pos:line="15" pos:column="11">rak<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">::<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">timer<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">val<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><call><name pos:line="15" pos:column="27">seconds<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt></block></then></if>

  <comment type="line" pos:line="17" pos:column="3">// Print the value.</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">first<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">==<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">last<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
    <comment type="line" pos:line="19" pos:column="5">// Do nothing, but ensure that the last attributes are set.</comment>

  }<pos:position pos:line="21" pos:column="4"/></block></then> <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><name pos:line="21" pos:column="14">m_flags<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">&amp;<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="24">flag_kb<pos:position pos:line="21" pos:column="31"/></name></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> <block pos:line="21" pos:column="33">{
    <comment type="line" pos:line="22" pos:column="5">// Just use a default width of 5 for now.</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">first<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">+=<pos:position pos:line="23" pos:column="13"/></operator> <call><name><name pos:line="23" pos:column="14">std<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">::<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">max<pos:position pos:line="23" pos:column="22"/></name></name><argument_list pos:line="23" pos:column="22">(<argument><expr><call><name pos:line="23" pos:column="23">snprintf<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">first<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">last<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">-<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">first<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">+<pos:position pos:line="23" pos:column="53"/></operator> <literal type="number" pos:line="23" pos:column="54">1<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="57">"%5.1f"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="66">(<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="67">double<pos:position pos:line="23" pos:column="73"/></name><operator pos:line="23" pos:column="73">)<pos:position pos:line="23" pos:column="74"/></operator><name pos:line="23" pos:column="74">val<pos:position pos:line="23" pos:column="77"/></name> <operator pos:line="23" pos:column="78">/<pos:position pos:line="23" pos:column="79"/></operator> <operator pos:line="23" pos:column="80">(<pos:position pos:line="23" pos:column="81"/></operator><literal type="number" pos:line="23" pos:column="81">1<pos:position pos:line="23" pos:column="82"/></literal> <operator pos:line="23" pos:column="83">&lt;&lt;<pos:position pos:line="23" pos:column="91"/></operator> <literal type="number" pos:line="23" pos:column="86">10<pos:position pos:line="23" pos:column="88"/></literal><operator pos:line="23" pos:column="88">)<pos:position pos:line="23" pos:column="89"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="92">0<pos:position pos:line="23" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="95"/></expr_stmt>

  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif> <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><name pos:line="25" pos:column="14">m_flags<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="24">flag_mb<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32"> <block pos:line="25" pos:column="33">{
    <comment type="line" pos:line="26" pos:column="5">// Just use a default width of 8 for now.</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">first<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">+=<pos:position pos:line="27" pos:column="13"/></operator> <call><name><name pos:line="27" pos:column="14">std<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">::<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">max<pos:position pos:line="27" pos:column="22"/></name></name><argument_list pos:line="27" pos:column="22">(<argument><expr><call><name pos:line="27" pos:column="23">snprintf<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">first<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">last<pos:position pos:line="27" pos:column="43"/></name> <operator pos:line="27" pos:column="44">-<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">first<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">+<pos:position pos:line="27" pos:column="53"/></operator> <literal type="number" pos:line="27" pos:column="54">1<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="57">"%8.1f"<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="66">(<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="67">double<pos:position pos:line="27" pos:column="73"/></name><operator pos:line="27" pos:column="73">)<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="74">val<pos:position pos:line="27" pos:column="77"/></name> <operator pos:line="27" pos:column="78">/<pos:position pos:line="27" pos:column="79"/></operator> <operator pos:line="27" pos:column="80">(<pos:position pos:line="27" pos:column="81"/></operator><literal type="number" pos:line="27" pos:column="81">1<pos:position pos:line="27" pos:column="82"/></literal> <operator pos:line="27" pos:column="83">&lt;&lt;<pos:position pos:line="27" pos:column="91"/></operator> <literal type="number" pos:line="27" pos:column="86">20<pos:position pos:line="27" pos:column="88"/></literal><operator pos:line="27" pos:column="88">)<pos:position pos:line="27" pos:column="89"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="90"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="92">0<pos:position pos:line="27" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="95"/></expr_stmt>

  }<pos:position pos:line="29" pos:column="4"/></block></then></if></elseif> <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">m_flags<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&amp;<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="24">flag_xb<pos:position pos:line="29" pos:column="31"/></name></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <block pos:line="29" pos:column="33">{

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">val<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">&lt;<pos:position pos:line="31" pos:column="17"/></operator> <operator pos:line="31" pos:column="15">(<pos:position pos:line="31" pos:column="16"/></operator><call><name pos:line="31" pos:column="16">int64_t<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="number" pos:line="31" pos:column="24">1000<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call> <operator pos:line="31" pos:column="30">&lt;&lt;<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="33">10<pos:position pos:line="31" pos:column="35"/></literal><operator pos:line="31" pos:column="35">)<pos:position pos:line="31" pos:column="36"/></operator></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="7">first<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">+=<pos:position pos:line="32" pos:column="15"/></operator> <call><name><name pos:line="32" pos:column="16">std<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">::<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">max<pos:position pos:line="32" pos:column="24"/></name></name><argument_list pos:line="32" pos:column="24">(<argument><expr><call><name pos:line="32" pos:column="25">snprintf<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">first<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">last<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">-<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">first<pos:position pos:line="32" pos:column="53"/></name> <operator pos:line="32" pos:column="54">+<pos:position pos:line="32" pos:column="55"/></operator> <literal type="number" pos:line="32" pos:column="56">1<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="59">"%5.1f KB"<pos:position pos:line="32" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="71">(<pos:position pos:line="32" pos:column="72"/></operator><name pos:line="32" pos:column="72">double<pos:position pos:line="32" pos:column="78"/></name><operator pos:line="32" pos:column="78">)<pos:position pos:line="32" pos:column="79"/></operator><name pos:line="32" pos:column="79">val<pos:position pos:line="32" pos:column="82"/></name> <operator pos:line="32" pos:column="83">/<pos:position pos:line="32" pos:column="84"/></operator> <operator pos:line="32" pos:column="85">(<pos:position pos:line="32" pos:column="86"/></operator><call><name pos:line="32" pos:column="86">int64_t<pos:position pos:line="32" pos:column="93"/></name><argument_list pos:line="32" pos:column="93">(<argument><expr><literal type="number" pos:line="32" pos:column="94">1<pos:position pos:line="32" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="96"/></argument_list></call> <operator pos:line="32" pos:column="97">&lt;&lt;<pos:position pos:line="32" pos:column="105"/></operator> <literal type="number" pos:line="32" pos:column="100">10<pos:position pos:line="32" pos:column="102"/></literal><operator pos:line="32" pos:column="102">)<pos:position pos:line="32" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="104"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="106">0<pos:position pos:line="32" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="109"/></expr_stmt></block></then>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><name pos:line="33" pos:column="14">val<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&lt;<pos:position pos:line="33" pos:column="22"/></operator> <operator pos:line="33" pos:column="20">(<pos:position pos:line="33" pos:column="21"/></operator><call><name pos:line="33" pos:column="21">int64_t<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="number" pos:line="33" pos:column="29">1000<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call> <operator pos:line="33" pos:column="35">&lt;&lt;<pos:position pos:line="33" pos:column="43"/></operator> <literal type="number" pos:line="33" pos:column="38">20<pos:position pos:line="33" pos:column="40"/></literal><operator pos:line="33" pos:column="40">)<pos:position pos:line="33" pos:column="41"/></operator></expr>)<pos:position pos:line="33" pos:column="42"/></condition><then pos:line="33" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">first<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">+=<pos:position pos:line="34" pos:column="15"/></operator> <call><name><name pos:line="34" pos:column="16">std<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">::<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">max<pos:position pos:line="34" pos:column="24"/></name></name><argument_list pos:line="34" pos:column="24">(<argument><expr><call><name pos:line="34" pos:column="25">snprintf<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">first<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">last<pos:position pos:line="34" pos:column="45"/></name> <operator pos:line="34" pos:column="46">-<pos:position pos:line="34" pos:column="47"/></operator> <name pos:line="34" pos:column="48">first<pos:position pos:line="34" pos:column="53"/></name> <operator pos:line="34" pos:column="54">+<pos:position pos:line="34" pos:column="55"/></operator> <literal type="number" pos:line="34" pos:column="56">1<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="59">"%5.1f MB"<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="71">(<pos:position pos:line="34" pos:column="72"/></operator><name pos:line="34" pos:column="72">double<pos:position pos:line="34" pos:column="78"/></name><operator pos:line="34" pos:column="78">)<pos:position pos:line="34" pos:column="79"/></operator><name pos:line="34" pos:column="79">val<pos:position pos:line="34" pos:column="82"/></name> <operator pos:line="34" pos:column="83">/<pos:position pos:line="34" pos:column="84"/></operator> <operator pos:line="34" pos:column="85">(<pos:position pos:line="34" pos:column="86"/></operator><call><name pos:line="34" pos:column="86">int64_t<pos:position pos:line="34" pos:column="93"/></name><argument_list pos:line="34" pos:column="93">(<argument><expr><literal type="number" pos:line="34" pos:column="94">1<pos:position pos:line="34" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="96"/></argument_list></call> <operator pos:line="34" pos:column="97">&lt;&lt;<pos:position pos:line="34" pos:column="105"/></operator> <literal type="number" pos:line="34" pos:column="100">20<pos:position pos:line="34" pos:column="102"/></literal><operator pos:line="34" pos:column="102">)<pos:position pos:line="34" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="104"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="106">0<pos:position pos:line="34" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="109"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><name pos:line="35" pos:column="14">val<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">&lt;<pos:position pos:line="35" pos:column="22"/></operator> <operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><call><name pos:line="35" pos:column="21">int64_t<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="number" pos:line="35" pos:column="29">1000<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call> <operator pos:line="35" pos:column="35">&lt;&lt;<pos:position pos:line="35" pos:column="43"/></operator> <literal type="number" pos:line="35" pos:column="38">30<pos:position pos:line="35" pos:column="40"/></literal><operator pos:line="35" pos:column="40">)<pos:position pos:line="35" pos:column="41"/></operator></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">first<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">+=<pos:position pos:line="36" pos:column="15"/></operator> <call><name><name pos:line="36" pos:column="16">std<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">::<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">max<pos:position pos:line="36" pos:column="24"/></name></name><argument_list pos:line="36" pos:column="24">(<argument><expr><call><name pos:line="36" pos:column="25">snprintf<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">first<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="41">last<pos:position pos:line="36" pos:column="45"/></name> <operator pos:line="36" pos:column="46">-<pos:position pos:line="36" pos:column="47"/></operator> <name pos:line="36" pos:column="48">first<pos:position pos:line="36" pos:column="53"/></name> <operator pos:line="36" pos:column="54">+<pos:position pos:line="36" pos:column="55"/></operator> <literal type="number" pos:line="36" pos:column="56">1<pos:position pos:line="36" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="59">"%5.1f GB"<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="71">(<pos:position pos:line="36" pos:column="72"/></operator><name pos:line="36" pos:column="72">double<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">)<pos:position pos:line="36" pos:column="79"/></operator><name pos:line="36" pos:column="79">val<pos:position pos:line="36" pos:column="82"/></name> <operator pos:line="36" pos:column="83">/<pos:position pos:line="36" pos:column="84"/></operator> <operator pos:line="36" pos:column="85">(<pos:position pos:line="36" pos:column="86"/></operator><call><name pos:line="36" pos:column="86">int64_t<pos:position pos:line="36" pos:column="93"/></name><argument_list pos:line="36" pos:column="93">(<argument><expr><literal type="number" pos:line="36" pos:column="94">1<pos:position pos:line="36" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="96"/></argument_list></call> <operator pos:line="36" pos:column="97">&lt;&lt;<pos:position pos:line="36" pos:column="105"/></operator> <literal type="number" pos:line="36" pos:column="100">30<pos:position pos:line="36" pos:column="102"/></literal><operator pos:line="36" pos:column="102">)<pos:position pos:line="36" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="104"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="106">0<pos:position pos:line="36" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="109"/></expr_stmt></block></then></if></elseif>
    <else pos:line="37" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">first<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">+=<pos:position pos:line="38" pos:column="15"/></operator> <call><name><name pos:line="38" pos:column="16">std<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">::<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">max<pos:position pos:line="38" pos:column="24"/></name></name><argument_list pos:line="38" pos:column="24">(<argument><expr><call><name pos:line="38" pos:column="25">snprintf<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">first<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">last<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">-<pos:position pos:line="38" pos:column="47"/></operator> <name pos:line="38" pos:column="48">first<pos:position pos:line="38" pos:column="53"/></name> <operator pos:line="38" pos:column="54">+<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="56">1<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="59">"%5.1f TB"<pos:position pos:line="38" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="71">(<pos:position pos:line="38" pos:column="72"/></operator><name pos:line="38" pos:column="72">double<pos:position pos:line="38" pos:column="78"/></name><operator pos:line="38" pos:column="78">)<pos:position pos:line="38" pos:column="79"/></operator><name pos:line="38" pos:column="79">val<pos:position pos:line="38" pos:column="82"/></name> <operator pos:line="38" pos:column="83">/<pos:position pos:line="38" pos:column="84"/></operator> <operator pos:line="38" pos:column="85">(<pos:position pos:line="38" pos:column="86"/></operator><call><name pos:line="38" pos:column="86">int64_t<pos:position pos:line="38" pos:column="93"/></name><argument_list pos:line="38" pos:column="93">(<argument><expr><literal type="number" pos:line="38" pos:column="94">1<pos:position pos:line="38" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="96"/></argument_list></call> <operator pos:line="38" pos:column="97">&lt;&lt;<pos:position pos:line="38" pos:column="105"/></operator> <literal type="number" pos:line="38" pos:column="100">40<pos:position pos:line="38" pos:column="102"/></literal><operator pos:line="38" pos:column="102">)<pos:position pos:line="38" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="104"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="106">0<pos:position pos:line="38" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="109"/></expr_stmt></block></else></if>

  }<pos:position pos:line="40" pos:column="4"/></block></then></if></elseif> <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><name pos:line="40" pos:column="14">m_flags<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">&amp;<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="24">flag_timer<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block pos:line="40" pos:column="36">{
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">val<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">==<pos:position pos:line="41" pos:column="15"/></operator> <literal type="number" pos:line="41" pos:column="16">0<pos:position pos:line="41" pos:column="17"/></literal></expr>)<pos:position pos:line="41" pos:column="18"/></condition><then pos:line="41" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">first<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">+=<pos:position pos:line="42" pos:column="15"/></operator> <call><name><name pos:line="42" pos:column="16">std<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">::<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">max<pos:position pos:line="42" pos:column="24"/></name></name><argument_list pos:line="42" pos:column="24">(<argument><expr><call><name pos:line="42" pos:column="25">snprintf<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">first<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">last<pos:position pos:line="42" pos:column="45"/></name> <operator pos:line="42" pos:column="46">-<pos:position pos:line="42" pos:column="47"/></operator> <name pos:line="42" pos:column="48">first<pos:position pos:line="42" pos:column="53"/></name> <operator pos:line="42" pos:column="54">+<pos:position pos:line="42" pos:column="55"/></operator> <literal type="number" pos:line="42" pos:column="56">1<pos:position pos:line="42" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="59">"--:--:--"<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="72">0<pos:position pos:line="42" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="75"/></expr_stmt></block></then>
    <else pos:line="43" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">first<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">+=<pos:position pos:line="44" pos:column="15"/></operator> <call><name><name pos:line="44" pos:column="16">std<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">::<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">max<pos:position pos:line="44" pos:column="24"/></name></name><argument_list pos:line="44" pos:column="24">(<argument><expr><call><name pos:line="44" pos:column="25">snprintf<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">first<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="41">last<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">-<pos:position pos:line="44" pos:column="47"/></operator> <name pos:line="44" pos:column="48">first<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">+<pos:position pos:line="44" pos:column="55"/></operator> <literal type="number" pos:line="44" pos:column="56">1<pos:position pos:line="44" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="59">"%2d:%02d:%02d"<pos:position pos:line="44" pos:column="74"/></literal></expr></argument>, <argument><expr><call pos:line="44" pos:column="76">(<name pos:line="44" pos:column="77">int<pos:position pos:line="44" pos:column="80"/></name>)<argument_list pos:line="44" pos:column="81">(<argument><expr><name pos:line="44" pos:column="82">val<pos:position pos:line="44" pos:column="85"/></name> <operator pos:line="44" pos:column="86">/<pos:position pos:line="44" pos:column="87"/></operator> <literal type="number" pos:line="44" pos:column="88">3600<pos:position pos:line="44" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><call pos:line="44" pos:column="95">(<name pos:line="44" pos:column="96">int<pos:position pos:line="44" pos:column="99"/></name>)<argument_list pos:line="44" pos:column="100">(<argument><expr><operator pos:line="44" pos:column="101">(<pos:position pos:line="44" pos:column="102"/></operator><name pos:line="44" pos:column="102">val<pos:position pos:line="44" pos:column="105"/></name> <operator pos:line="44" pos:column="106">/<pos:position pos:line="44" pos:column="107"/></operator> <literal type="number" pos:line="44" pos:column="108">60<pos:position pos:line="44" pos:column="110"/></literal><operator pos:line="44" pos:column="110">)<pos:position pos:line="44" pos:column="111"/></operator> <operator pos:line="44" pos:column="112">%<pos:position pos:line="44" pos:column="113"/></operator> <literal type="number" pos:line="44" pos:column="114">60<pos:position pos:line="44" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="117"/></argument_list></call></expr></argument>, <argument><expr><call pos:line="44" pos:column="119">(<name pos:line="44" pos:column="120">int<pos:position pos:line="44" pos:column="123"/></name>)<argument_list pos:line="44" pos:column="124">(<argument><expr><name pos:line="44" pos:column="125">val<pos:position pos:line="44" pos:column="128"/></name> <operator pos:line="44" pos:column="129">%<pos:position pos:line="44" pos:column="130"/></operator> <literal type="number" pos:line="44" pos:column="131">60<pos:position pos:line="44" pos:column="133"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="134"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="135"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="137">0<pos:position pos:line="44" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="140"/></expr_stmt></block></else></if>

  }<pos:position pos:line="46" pos:column="4"/></block></then></if></elseif> <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name pos:line="46" pos:column="14">m_flags<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">&amp;<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="24">flag_date<pos:position pos:line="46" pos:column="33"/></name></expr>)<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <block pos:line="46" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">time_t<pos:position pos:line="47" pos:column="11"/></name></type> <name pos:line="47" pos:column="12">t<pos:position pos:line="47" pos:column="13"/></name> <init pos:line="47" pos:column="14">= <expr><name pos:line="47" pos:column="16">val<pos:position pos:line="47" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="48" pos:column="5">std<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">::<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">tm<pos:position pos:line="48" pos:column="12"/></name></name> <modifier pos:line="48" pos:column="13">*<pos:position pos:line="48" pos:column="14"/></modifier></type><name pos:line="48" pos:column="14">u<pos:position pos:line="48" pos:column="15"/></name> <init pos:line="48" pos:column="16">= <expr><call><name><name pos:line="48" pos:column="18">std<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">::<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">gmtime<pos:position pos:line="48" pos:column="29"/></name></name><argument_list pos:line="48" pos:column="29">(<argument><expr><operator pos:line="48" pos:column="30">&amp;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="31">t<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="48" pos:column="34"/></decl_stmt>
  
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">u<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">==<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">NULL<pos:position pos:line="50" pos:column="18"/></name></expr>)<pos:position pos:line="50" pos:column="19"/></condition><then pos:line="50" pos:column="19">
      <block type="pseudo"><return pos:line="51" pos:column="7">return <expr><name pos:line="51" pos:column="14">first<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="53" pos:column="5">first<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">+=<pos:position pos:line="53" pos:column="13"/></operator> <call><name><name pos:line="53" pos:column="14">std<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">::<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">max<pos:position pos:line="53" pos:column="22"/></name></name><argument_list pos:line="53" pos:column="22">(<argument><expr><call><name pos:line="53" pos:column="23">snprintf<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">first<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">last<pos:position pos:line="53" pos:column="43"/></name> <operator pos:line="53" pos:column="44">-<pos:position pos:line="53" pos:column="45"/></operator> <name pos:line="53" pos:column="46">first<pos:position pos:line="53" pos:column="51"/></name> <operator pos:line="53" pos:column="52">+<pos:position pos:line="53" pos:column="53"/></operator> <literal type="number" pos:line="53" pos:column="54">1<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="57">"%02u/%02u/%04u"<pos:position pos:line="53" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="75">u<pos:position pos:line="53" pos:column="76"/></name><operator pos:line="53" pos:column="76">-&gt;<pos:position pos:line="53" pos:column="81"/></operator><name pos:line="53" pos:column="78">tm_mday<pos:position pos:line="53" pos:column="85"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="87">(<pos:position pos:line="53" pos:column="88"/></operator><name><name pos:line="53" pos:column="88">u<pos:position pos:line="53" pos:column="89"/></name><operator pos:line="53" pos:column="89">-&gt;<pos:position pos:line="53" pos:column="94"/></operator><name pos:line="53" pos:column="91">tm_mon<pos:position pos:line="53" pos:column="97"/></name></name> <operator pos:line="53" pos:column="98">+<pos:position pos:line="53" pos:column="99"/></operator> <literal type="number" pos:line="53" pos:column="100">1<pos:position pos:line="53" pos:column="101"/></literal><operator pos:line="53" pos:column="101">)<pos:position pos:line="53" pos:column="102"/></operator></expr></argument>, <argument><expr><operator pos:line="53" pos:column="104">(<pos:position pos:line="53" pos:column="105"/></operator><literal type="number" pos:line="53" pos:column="105">1900<pos:position pos:line="53" pos:column="109"/></literal> <operator pos:line="53" pos:column="110">+<pos:position pos:line="53" pos:column="111"/></operator> <name><name pos:line="53" pos:column="112">u<pos:position pos:line="53" pos:column="113"/></name><operator pos:line="53" pos:column="113">-&gt;<pos:position pos:line="53" pos:column="118"/></operator><name pos:line="53" pos:column="115">tm_year<pos:position pos:line="53" pos:column="122"/></name></name><operator pos:line="53" pos:column="122">)<pos:position pos:line="53" pos:column="123"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="124"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="126">0<pos:position pos:line="53" pos:column="127"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="129"/></expr_stmt>

  }<pos:position pos:line="55" pos:column="4"/></block></then></if></elseif> <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><name pos:line="55" pos:column="14">m_flags<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">&amp;<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="24">flag_time<pos:position pos:line="55" pos:column="33"/></name></expr>)<pos:position pos:line="55" pos:column="34"/></condition><then pos:line="55" pos:column="34"> <block pos:line="55" pos:column="35">{
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">time_t<pos:position pos:line="56" pos:column="11"/></name></type> <name pos:line="56" pos:column="12">t<pos:position pos:line="56" pos:column="13"/></name> <init pos:line="56" pos:column="14">= <expr><name pos:line="56" pos:column="16">val<pos:position pos:line="56" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="56" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="57" pos:column="5">std<pos:position pos:line="57" pos:column="8"/></name><operator pos:line="57" pos:column="8">::<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">tm<pos:position pos:line="57" pos:column="12"/></name></name> <modifier pos:line="57" pos:column="13">*<pos:position pos:line="57" pos:column="14"/></modifier></type><name pos:line="57" pos:column="14">u<pos:position pos:line="57" pos:column="15"/></name> <init pos:line="57" pos:column="16">= <expr><call><name><name pos:line="57" pos:column="18">std<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">::<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">gmtime<pos:position pos:line="57" pos:column="29"/></name></name><argument_list pos:line="57" pos:column="29">(<argument><expr><operator pos:line="57" pos:column="30">&amp;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="31">t<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="34"/></decl_stmt>
  
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">u<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">==<pos:position pos:line="59" pos:column="13"/></operator> <name pos:line="59" pos:column="14">NULL<pos:position pos:line="59" pos:column="18"/></name></expr>)<pos:position pos:line="59" pos:column="19"/></condition><then pos:line="59" pos:column="19">
      <block type="pseudo"><return pos:line="60" pos:column="7">return <expr><name pos:line="60" pos:column="14">first<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="62" pos:column="5">first<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">+=<pos:position pos:line="62" pos:column="13"/></operator> <call><name><name pos:line="62" pos:column="14">std<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">::<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">max<pos:position pos:line="62" pos:column="22"/></name></name><argument_list pos:line="62" pos:column="22">(<argument><expr><call><name pos:line="62" pos:column="23">snprintf<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">first<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">last<pos:position pos:line="62" pos:column="43"/></name> <operator pos:line="62" pos:column="44">-<pos:position pos:line="62" pos:column="45"/></operator> <name pos:line="62" pos:column="46">first<pos:position pos:line="62" pos:column="51"/></name> <operator pos:line="62" pos:column="52">+<pos:position pos:line="62" pos:column="53"/></operator> <literal type="number" pos:line="62" pos:column="54">1<pos:position pos:line="62" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="57">"%2d:%02d:%02d"<pos:position pos:line="62" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="74">u<pos:position pos:line="62" pos:column="75"/></name><operator pos:line="62" pos:column="75">-&gt;<pos:position pos:line="62" pos:column="80"/></operator><name pos:line="62" pos:column="77">tm_hour<pos:position pos:line="62" pos:column="84"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="86">u<pos:position pos:line="62" pos:column="87"/></name><operator pos:line="62" pos:column="87">-&gt;<pos:position pos:line="62" pos:column="92"/></operator><name pos:line="62" pos:column="89">tm_min<pos:position pos:line="62" pos:column="95"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="97">u<pos:position pos:line="62" pos:column="98"/></name><operator pos:line="62" pos:column="98">-&gt;<pos:position pos:line="62" pos:column="103"/></operator><name pos:line="62" pos:column="100">tm_sec<pos:position pos:line="62" pos:column="106"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="107"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="109">0<pos:position pos:line="62" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="112"/></expr_stmt>

  }<pos:position pos:line="64" pos:column="4"/></block></then></if></elseif> <else pos:line="64" pos:column="5">else <block pos:line="64" pos:column="10">{
    <expr_stmt><expr><name pos:line="65" pos:column="5">first<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">+=<pos:position pos:line="65" pos:column="13"/></operator> <call><name><name pos:line="65" pos:column="14">std<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">::<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="19">max<pos:position pos:line="65" pos:column="22"/></name></name><argument_list pos:line="65" pos:column="22">(<argument><expr><call><name pos:line="65" pos:column="23">snprintf<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">first<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">last<pos:position pos:line="65" pos:column="43"/></name> <operator pos:line="65" pos:column="44">-<pos:position pos:line="65" pos:column="45"/></operator> <name pos:line="65" pos:column="46">first<pos:position pos:line="65" pos:column="51"/></name> <operator pos:line="65" pos:column="52">+<pos:position pos:line="65" pos:column="53"/></operator> <literal type="number" pos:line="65" pos:column="54">1<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="57">"%lld"<pos:position pos:line="65" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="65">val<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="71">0<pos:position pos:line="65" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="68" pos:column="3">push_attribute<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><name pos:line="68" pos:column="18">attributes<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="30">Attributes<pos:position pos:line="68" pos:column="40"/></name><argument_list pos:line="68" pos:column="40">(<argument><expr><name pos:line="68" pos:column="41">first<pos:position pos:line="68" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="48">baseAttribute<pos:position pos:line="68" pos:column="61"/></name></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="64"/></expr_stmt>

  <return pos:line="70" pos:column="3">return <expr><name pos:line="70" pos:column="10">first<pos:position pos:line="70" pos:column="15"/></name></expr>;<pos:position pos:line="70" pos:column="16"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

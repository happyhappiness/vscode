<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_308.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowText<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">redraw<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list> <block pos:line="2" pos:column="22">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">m_interval<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">!=<pos:position pos:line="3" pos:column="20"/></operator> <literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="5">m_slotSchedule<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">this<pos:position pos:line="4" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">cachedTime<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">+<pos:position pos:line="4" pos:column="39"/></operator> <call><name><name pos:line="4" pos:column="40">rak<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">::<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">timer<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">::<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">from_seconds<pos:position pos:line="4" pos:column="64"/></name></name><argument_list pos:line="4" pos:column="64">(<argument><expr><name pos:line="4" pos:column="65">m_interval<pos:position pos:line="4" pos:column="75"/></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call><operator pos:line="4" pos:column="76">)<pos:position pos:line="4" pos:column="77"/></operator><operator pos:line="4" pos:column="77">.<pos:position pos:line="4" pos:column="78"/></operator><call><name pos:line="4" pos:column="78">round_seconds<pos:position pos:line="4" pos:column="91"/></name><argument_list pos:line="4" pos:column="91">()<pos:position pos:line="4" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="95"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="6" pos:column="3">m_canvas<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">erase<pos:position pos:line="6" pos:column="18"/></name></name><argument_list pos:line="6" pos:column="18">()<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">unsigned<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">int<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">position<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name><name pos:line="10" pos:column="7">m_canvas<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">height<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call> <operator pos:line="10" pos:column="26">==<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
    <block type="pseudo"><return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">m_errorHandler<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">!=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">&amp;&amp;<pos:position pos:line="13" pos:column="40"/></operator> <name><name pos:line="13" pos:column="33">m_target<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">second<pos:position pos:line="13" pos:column="48"/></name></name> <operator pos:line="13" pos:column="49">==<pos:position pos:line="13" pos:column="51"/></operator> <name pos:line="13" pos:column="52">NULL<pos:position pos:line="13" pos:column="56"/></name></expr>)<pos:position pos:line="13" pos:column="57"/></condition><then pos:line="13" pos:column="57"> <block pos:line="13" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">buffer<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><call><name><name pos:line="14" pos:column="17">m_canvas<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">width<pos:position pos:line="14" pos:column="32"/></name></name><argument_list pos:line="14" pos:column="32">()<pos:position pos:line="14" pos:column="34"/></argument_list></call> <operator pos:line="14" pos:column="35">+<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="37">1<pos:position pos:line="14" pos:column="38"/></literal></expr>]<pos:position pos:line="14" pos:column="39"/></index></name></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">Canvas<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">::<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">attributes_list<pos:position pos:line="16" pos:column="28"/></name></name></type> <name pos:line="16" pos:column="29">attributes<pos:position pos:line="16" pos:column="39"/></name></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">attributes<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">push_back<pos:position pos:line="17" pos:column="25"/></name></name><argument_list pos:line="17" pos:column="25">(<argument><expr><call><name pos:line="17" pos:column="26">Attributes<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">buffer<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="45">Attributes<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">::<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">a_normal<pos:position pos:line="17" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="67">Attributes<pos:position pos:line="17" pos:column="77"/></name><operator pos:line="17" pos:column="77">::<pos:position pos:line="17" pos:column="79"/></operator><name pos:line="17" pos:column="79">color_default<pos:position pos:line="17" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="95"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name><modifier pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></modifier></type> <name pos:line="19" pos:column="11">last<pos:position pos:line="19" pos:column="15"/></name> <init pos:line="19" pos:column="16">= <expr><call><name><name pos:line="19" pos:column="18">m_errorHandler<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">print<pos:position pos:line="19" pos:column="39"/></name></name><argument_list pos:line="19" pos:column="39">(<argument><expr><name pos:line="19" pos:column="40">buffer<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">buffer<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">+<pos:position pos:line="19" pos:column="56"/></operator> <call><name><name pos:line="19" pos:column="57">m_canvas<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">-&gt;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="67">width<pos:position pos:line="19" pos:column="72"/></name></name><argument_list pos:line="19" pos:column="72">()<pos:position pos:line="19" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="19" pos:column="76">&amp;<pos:position pos:line="19" pos:column="81"/></operator><name pos:line="19" pos:column="77">attributes<pos:position pos:line="19" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="89">m_target<pos:position pos:line="19" pos:column="97"/></name></expr></argument>)<pos:position pos:line="19" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="99"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">m_canvas<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">print_attributes<pos:position pos:line="21" pos:column="31"/></name></name><argument_list pos:line="21" pos:column="31">(<argument><expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">position<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">buffer<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">last<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="59">&amp;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="60">attributes<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
    <return pos:line="22" pos:column="5">return;<pos:position pos:line="22" pos:column="12"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <for pos:line="25" pos:column="3">for <control pos:line="25" pos:column="7">(<init><decl><type><name pos:line="25" pos:column="8">iterator<pos:position pos:line="25" pos:column="16"/></name></type> <name pos:line="25" pos:column="17">itr<pos:position pos:line="25" pos:column="20"/></name> <init pos:line="25" pos:column="21">= <expr><call><name pos:line="25" pos:column="23">begin<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">()<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="31"/></init> <condition><expr><name pos:line="25" pos:column="32">itr<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">!=<pos:position pos:line="25" pos:column="38"/></operator> <call><name pos:line="25" pos:column="39">end<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">()<pos:position pos:line="25" pos:column="44"/></argument_list></call> <operator pos:line="25" pos:column="45">&amp;&amp;<pos:position pos:line="25" pos:column="55"/></operator> <name pos:line="25" pos:column="48">position<pos:position pos:line="25" pos:column="56"/></name> <operator pos:line="25" pos:column="57">&lt;<pos:position pos:line="25" pos:column="61"/></operator> <call><name><name pos:line="25" pos:column="59">m_canvas<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">-&gt;<pos:position pos:line="25" pos:column="72"/></operator><name pos:line="25" pos:column="69">height<pos:position pos:line="25" pos:column="75"/></name></name><argument_list pos:line="25" pos:column="75">()<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></condition> <incr><expr><operator pos:line="25" pos:column="79">++<pos:position pos:line="25" pos:column="81"/></operator><name pos:line="25" pos:column="81">itr<pos:position pos:line="25" pos:column="84"/></name></expr><operator pos:line="25" pos:column="84">,<pos:position pos:line="25" pos:column="85"/></operator> <expr><operator pos:line="25" pos:column="86">++<pos:position pos:line="25" pos:column="88"/></operator><name pos:line="25" pos:column="88">position<pos:position pos:line="25" pos:column="96"/></name></expr></incr>)<pos:position pos:line="25" pos:column="97"/></control> <block pos:line="25" pos:column="98">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">itr<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">==<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">NULL<pos:position pos:line="26" pos:column="21"/></name></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22">
      <block type="pseudo"><continue pos:line="27" pos:column="7">continue;<pos:position pos:line="27" pos:column="16"/></continue></block></then></if>

    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name></type> <name><name pos:line="29" pos:column="10">buffer<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><call><name><name pos:line="29" pos:column="17">m_canvas<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">width<pos:position pos:line="29" pos:column="32"/></name></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call> <operator pos:line="29" pos:column="35">+<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">1<pos:position pos:line="29" pos:column="38"/></literal></expr>]<pos:position pos:line="29" pos:column="39"/></index></name></decl>;<pos:position pos:line="29" pos:column="40"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">Canvas<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">::<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">attributes_list<pos:position pos:line="31" pos:column="28"/></name></name></type> <name pos:line="31" pos:column="29">attributes<pos:position pos:line="31" pos:column="39"/></name></decl>;<pos:position pos:line="31" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">attributes<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">push_back<pos:position pos:line="32" pos:column="25"/></name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><call><name pos:line="32" pos:column="26">Attributes<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">buffer<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="45">Attributes<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">::<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="57">a_normal<pos:position pos:line="32" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="67">Attributes<pos:position pos:line="32" pos:column="77"/></name><operator pos:line="32" pos:column="77">::<pos:position pos:line="32" pos:column="79"/></operator><name pos:line="32" pos:column="79">color_default<pos:position pos:line="32" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="95"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name><modifier pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></modifier></type> <name pos:line="34" pos:column="11">last<pos:position pos:line="34" pos:column="15"/></name> <init pos:line="34" pos:column="16">= <expr><call><name><operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><operator pos:line="34" pos:column="19">*<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">itr<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">)<pos:position pos:line="34" pos:column="24"/></operator><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">print<pos:position pos:line="34" pos:column="31"/></name></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">buffer<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">buffer<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">+<pos:position pos:line="34" pos:column="48"/></operator> <call><name><name pos:line="34" pos:column="49">m_canvas<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">-&gt;<pos:position pos:line="34" pos:column="62"/></operator><name pos:line="34" pos:column="59">width<pos:position pos:line="34" pos:column="64"/></name></name><argument_list pos:line="34" pos:column="64">()<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="34" pos:column="68">&amp;<pos:position pos:line="34" pos:column="73"/></operator><name pos:line="34" pos:column="69">attributes<pos:position pos:line="34" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="81">m_target<pos:position pos:line="34" pos:column="89"/></name></expr></argument>)<pos:position pos:line="34" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="91"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">m_canvas<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">print_attributes<pos:position pos:line="36" pos:column="31"/></name></name><argument_list pos:line="36" pos:column="31">(<argument><expr><literal type="number" pos:line="36" pos:column="32">0<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">position<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">buffer<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">last<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="59">&amp;<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="60">attributes<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></for>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

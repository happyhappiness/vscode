<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_668.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowDownloadTransferList<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">key_id<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name><name pos:line="2" pos:column="36">torrent<pos:position pos:line="2" pos:column="43"/></name><operator pos:line="2" pos:column="43">::<pos:position pos:line="2" pos:column="45"/></operator><name pos:line="2" pos:column="45">BlockTransfer<pos:position pos:line="2" pos:column="58"/></name><operator pos:line="2" pos:column="58">::<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">key_type<pos:position pos:line="2" pos:column="68"/></name></name></type> <name pos:line="2" pos:column="69">key<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list> <block pos:line="2" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">uint32_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">oldestTime<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name><name pos:line="3" pos:column="25">cachedTime<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">.<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">seconds<pos:position pos:line="3" pos:column="43"/></name></name><argument_list pos:line="3" pos:column="43">()<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">assigned_vector<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">iterator<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">oldestItr<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><call><name><name pos:line="4" pos:column="41">m_assigned<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">.<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">begin<pos:position pos:line="4" pos:column="57"/></name></name><argument_list pos:line="4" pos:column="57">()<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><decl><type><name><name pos:line="6" pos:column="8">assigned_vector<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">::<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">iterator<pos:position pos:line="6" pos:column="33"/></name></name></type> <name pos:line="6" pos:column="34">itr<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><call><name><name pos:line="6" pos:column="40">m_assigned<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">.<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">begin<pos:position pos:line="6" pos:column="56"/></name></name><argument_list pos:line="6" pos:column="56">()<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="60">last<pos:position pos:line="6" pos:column="64"/></name> <init pos:line="6" pos:column="65">= <expr><call><name><name pos:line="6" pos:column="67">m_assigned<pos:position pos:line="6" pos:column="77"/></name><operator pos:line="6" pos:column="77">.<pos:position pos:line="6" pos:column="78"/></operator><name pos:line="6" pos:column="78">end<pos:position pos:line="6" pos:column="81"/></name></name><argument_list pos:line="6" pos:column="81">()<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="84"/></init> <condition><expr><name pos:line="6" pos:column="85">itr<pos:position pos:line="6" pos:column="88"/></name> <operator pos:line="6" pos:column="89">!=<pos:position pos:line="6" pos:column="91"/></operator> <name pos:line="6" pos:column="92">last<pos:position pos:line="6" pos:column="96"/></name></expr>;<pos:position pos:line="6" pos:column="97"/></condition> <incr><expr><operator pos:line="6" pos:column="98">++<pos:position pos:line="6" pos:column="100"/></operator><name pos:line="6" pos:column="100">itr<pos:position pos:line="6" pos:column="103"/></name></expr></incr>)<pos:position pos:line="6" pos:column="104"/></control> <block pos:line="6" pos:column="105">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">itr<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">m_key<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">key<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
      <expr_stmt><expr><name><name pos:line="8" pos:column="7">itr<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">m_last<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name><name pos:line="8" pos:column="21">cachedTime<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">.<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">seconds<pos:position pos:line="8" pos:column="39"/></name></name><argument_list pos:line="8" pos:column="39">()<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
      <return pos:line="9" pos:column="7">return <expr><name><name pos:line="9" pos:column="14">itr<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">m_id<pos:position pos:line="9" pos:column="23"/></name></name></expr>;<pos:position pos:line="9" pos:column="24"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">itr<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">m_last<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">&lt;<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="23">oldestTime<pos:position pos:line="12" pos:column="33"/></name></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">oldestTime<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name><name pos:line="13" pos:column="20">itr<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">m_last<pos:position pos:line="13" pos:column="31"/></name></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">oldestItr<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">itr<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></for>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">oldestItr<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <call><name><name pos:line="18" pos:column="20">m_assigned<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">end<pos:position pos:line="18" pos:column="34"/></name></name><argument_list pos:line="18" pos:column="34">()<pos:position pos:line="18" pos:column="36"/></argument_list></call> <operator pos:line="18" pos:column="37">||<pos:position pos:line="18" pos:column="39"/></operator> <call><name><name pos:line="18" pos:column="40">cachedTime<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">seconds<pos:position pos:line="18" pos:column="58"/></name></name><argument_list pos:line="18" pos:column="58">()<pos:position pos:line="18" pos:column="60"/></argument_list></call> <operator pos:line="18" pos:column="61">-<pos:position pos:line="18" pos:column="62"/></operator> <name pos:line="18" pos:column="63">oldestTime<pos:position pos:line="18" pos:column="73"/></name> <operator pos:line="18" pos:column="74">&lt;=<pos:position pos:line="18" pos:column="79"/></operator> <literal type="number" pos:line="18" pos:column="77">60<pos:position pos:line="18" pos:column="79"/></literal></expr>)<pos:position pos:line="18" pos:column="80"/></condition><then pos:line="18" pos:column="80"> <block pos:line="18" pos:column="81">{
    <comment type="line" pos:line="19" pos:column="5">// We didn't find any previously used id's to take over.</comment>

    <comment type="line" pos:line="21" pos:column="5">// Return 'f' when we run out of characters.</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name><name pos:line="22" pos:column="9">m_assigned<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">size<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">&gt;=<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="30">(<pos:position pos:line="22" pos:column="31"/></operator><literal type="char" pos:line="22" pos:column="31">'Z'<pos:position pos:line="22" pos:column="34"/></literal> <operator pos:line="22" pos:column="35">-<pos:position pos:line="22" pos:column="36"/></operator> <literal type="char" pos:line="22" pos:column="37">'A'<pos:position pos:line="22" pos:column="40"/></literal><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><literal type="char" pos:line="23" pos:column="14">'Z'<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name pos:line="25" pos:column="10">id<pos:position pos:line="25" pos:column="12"/></name> <init pos:line="25" pos:column="13">= <expr><literal type="char" pos:line="25" pos:column="15">'A'<pos:position pos:line="25" pos:column="18"/></literal> <operator pos:line="25" pos:column="19">+<pos:position pos:line="25" pos:column="20"/></operator> <call><name><name pos:line="25" pos:column="21">m_assigned<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">.<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">size<pos:position pos:line="25" pos:column="36"/></name></name><argument_list pos:line="25" pos:column="36">()<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">m_assigned<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">.<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">push_back<pos:position pos:line="27" pos:column="25"/></name></name><argument_list pos:line="27" pos:column="25">(<argument><expr><call><name pos:line="27" pos:column="26">assigned_type<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">key<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><call><name><name pos:line="27" pos:column="45">cachedTime<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">.<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="56">seconds<pos:position pos:line="27" pos:column="63"/></name></name><argument_list pos:line="27" pos:column="63">()<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="67">id<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">id<pos:position pos:line="28" pos:column="14"/></name></expr>;<pos:position pos:line="28" pos:column="15"/></return>

  }<pos:position pos:line="30" pos:column="4"/></block></then> <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
    <return pos:line="31" pos:column="5">return <expr><name><name pos:line="31" pos:column="12">oldestItr<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">m_id<pos:position pos:line="31" pos:column="27"/></name></name></expr>;<pos:position pos:line="31" pos:column="28"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

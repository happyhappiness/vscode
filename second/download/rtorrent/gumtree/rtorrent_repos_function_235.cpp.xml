<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_235.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">torrent<pos:position pos:line="1" pos:column="8"/></name><operator pos:line="1" pos:column="8">::<pos:position pos:line="1" pos:column="10"/></operator><name pos:line="1" pos:column="10">Object<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name pos:line="2" pos:column="1">xmlrpc_to_object_target<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">xmlrpc_env<pos:position pos:line="2" pos:column="35"/></name><modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">env<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">xmlrpc_value<pos:position pos:line="2" pos:column="54"/></name><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="56">value<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">int<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">callType<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">void<pos:position pos:line="2" pos:column="81"/></name><modifier pos:line="2" pos:column="81">*<pos:position pos:line="2" pos:column="82"/></modifier><modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type> <name pos:line="2" pos:column="84">target<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="91"/></parameter_list> <block pos:line="2" pos:column="92">{
  <switch pos:line="3" pos:column="3">switch <condition pos:line="3" pos:column="10">(<expr><call><name pos:line="3" pos:column="11">xmlrpc_value_type<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">value<pos:position pos:line="3" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="36"/></condition> <block pos:line="3" pos:column="37">{
  <case pos:line="4" pos:column="3">case <expr><name pos:line="4" pos:column="8">XMLRPC_TYPE_STRING<pos:position pos:line="4" pos:column="26"/></name></expr>:<pos:position pos:line="4" pos:column="27"/></case>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">callType<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name><name pos:line="5" pos:column="21">XmlRpc<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">::<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">call_download<pos:position pos:line="5" pos:column="42"/></name></name></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <block pos:line="5" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="6" pos:column="7">xmlrpc_env_set_fault<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">env<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">XMLRPC_TYPE_ERROR<pos:position pos:line="6" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="52">"Unsupported type found."<pos:position pos:line="6" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></expr_stmt>
      <break pos:line="7" pos:column="7">break;<pos:position pos:line="7" pos:column="13"/></break>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">target<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">xmlrpc_to_download<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">env<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">value<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
    <break pos:line="11" pos:column="5">break;<pos:position pos:line="11" pos:column="11"/></break>

  <case pos:line="13" pos:column="3">case <expr><name pos:line="13" pos:column="8">XMLRPC_TYPE_ARRAY<pos:position pos:line="13" pos:column="25"/></name></expr>:<pos:position pos:line="13" pos:column="26"/></case>
  <block pos:line="14" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">unsigned<pos:position pos:line="15" pos:column="13"/></name> <name pos:line="15" pos:column="14">int<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">current<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">int<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">last<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><call><name pos:line="16" pos:column="25">xmlrpc_array_size<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">env<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">value<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="55"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">env<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">fault_occurred<pos:position pos:line="18" pos:column="28"/></name></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
      <block type="pseudo"><break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">last<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">&lt;<pos:position pos:line="21" pos:column="18"/></operator> <literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18"> <block pos:line="21" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">xmlrpc_env_set_fault<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">env<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">XMLRPC_TYPE_ERROR<pos:position pos:line="22" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="52">"Too few arguments."<pos:position pos:line="22" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt>
      <break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <block pos:line="26" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="27" pos:column="7">xmlrpc_value<pos:position pos:line="27" pos:column="19"/></name><modifier pos:line="27" pos:column="19">*<pos:position pos:line="27" pos:column="20"/></modifier></type> <name pos:line="27" pos:column="21">tmp<pos:position pos:line="27" pos:column="24"/></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="28" pos:column="7">xmlrpc_array_read_item<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">env<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">value<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">current<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">++<pos:position pos:line="28" pos:column="51"/></operator></expr></argument>, <argument><expr><operator pos:line="28" pos:column="53">&amp;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="54">tmp<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>

      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">env<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">fault_occurred<pos:position pos:line="30" pos:column="30"/></name></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31">
        <block type="pseudo"><break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><operator pos:line="33" pos:column="7">*<pos:position pos:line="33" pos:column="8"/></operator><name pos:line="33" pos:column="8">target<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <call><name pos:line="33" pos:column="17">xmlrpc_to_download<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">env<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">tmp<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">xmlrpc_DECREF<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">tmp<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>

      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><name><name pos:line="36" pos:column="11">env<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">fault_occurred<pos:position pos:line="36" pos:column="30"/></name></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
        <block type="pseudo"><break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">callType<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">==<pos:position pos:line="40" pos:column="20"/></operator> <name><name pos:line="40" pos:column="21">XmlRpc<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">::<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="29">call_file<pos:position pos:line="40" pos:column="38"/></name></name> <operator pos:line="40" pos:column="39">||<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">callType<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">==<pos:position pos:line="40" pos:column="53"/></operator> <name><name pos:line="40" pos:column="54">XmlRpc<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">::<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="62">call_tracker<pos:position pos:line="40" pos:column="74"/></name></name></expr>)<pos:position pos:line="40" pos:column="75"/></condition><then pos:line="40" pos:column="75"> <block pos:line="40" pos:column="76">{
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">current<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">==<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">last<pos:position pos:line="41" pos:column="26"/></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27"> <block pos:line="41" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">xmlrpc_env_set_fault<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">env<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">XMLRPC_TYPE_ERROR<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="54">"Too few arguments."<pos:position pos:line="42" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt>
        <break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>

      <decl_stmt><decl><type><name pos:line="46" pos:column="7">xmlrpc_value<pos:position pos:line="46" pos:column="19"/></name><modifier pos:line="46" pos:column="19">*<pos:position pos:line="46" pos:column="20"/></modifier></type> <name pos:line="46" pos:column="21">tmp<pos:position pos:line="46" pos:column="24"/></name></decl>;<pos:position pos:line="46" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">xmlrpc_array_read_item<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">env<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">value<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">current<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">++<pos:position pos:line="47" pos:column="51"/></operator></expr></argument>, <argument><expr><operator pos:line="47" pos:column="53">&amp;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="54">tmp<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt>

      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name><name pos:line="49" pos:column="11">env<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">fault_occurred<pos:position pos:line="49" pos:column="30"/></name></name></expr>)<pos:position pos:line="49" pos:column="31"/></condition><then pos:line="49" pos:column="31">
        <block type="pseudo"><break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><operator pos:line="52" pos:column="7">*<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">target<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <call><name pos:line="52" pos:column="17">xmlrpc_to_index_type<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">env<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">tmp<pos:position pos:line="52" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">callType<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="58">(<pos:position pos:line="52" pos:column="59"/></operator><name><name pos:line="52" pos:column="59">core<pos:position pos:line="52" pos:column="63"/></name><operator pos:line="52" pos:column="63">::<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="65">Download<pos:position pos:line="52" pos:column="73"/></name></name><operator pos:line="52" pos:column="73">*<pos:position pos:line="52" pos:column="74"/></operator><operator pos:line="52" pos:column="74">)<pos:position pos:line="52" pos:column="75"/></operator><operator pos:line="52" pos:column="75">*<pos:position pos:line="52" pos:column="76"/></operator><name pos:line="52" pos:column="76">target<pos:position pos:line="52" pos:column="82"/></name></expr></argument>)<pos:position pos:line="52" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="84"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">xmlrpc_DECREF<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">tmp<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>

      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name><name pos:line="55" pos:column="11">env<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">fault_occurred<pos:position pos:line="55" pos:column="30"/></name></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31">
        <block type="pseudo"><break pos:line="56" pos:column="9">break;<pos:position pos:line="56" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="59" pos:column="5">torrent<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">::<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">Object<pos:position pos:line="59" pos:column="20"/></name></name></type> <name pos:line="59" pos:column="21">result<pos:position pos:line="59" pos:column="27"/></name></decl>;<pos:position pos:line="59" pos:column="28"/></decl_stmt>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">current<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">+<pos:position pos:line="61" pos:column="18"/></operator> <literal type="number" pos:line="61" pos:column="19">1<pos:position pos:line="61" pos:column="20"/></literal> <operator pos:line="61" pos:column="21">&gt;<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="23">last<pos:position pos:line="61" pos:column="27"/></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
      <expr_stmt><expr><name pos:line="62" pos:column="7">result<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <call><name><name pos:line="62" pos:column="16">torrent<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">::<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">Object<pos:position pos:line="62" pos:column="31"/></name></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name><name pos:line="62" pos:column="32">torrent<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">::<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">Object<pos:position pos:line="62" pos:column="47"/></name><operator pos:line="62" pos:column="47">::<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="49">TYPE_LIST<pos:position pos:line="62" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>
      <decl_stmt><decl><type><name><name pos:line="63" pos:column="7">torrent<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">::<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="16">Object<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">::<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">list_type<pos:position pos:line="63" pos:column="33"/></name></name><modifier pos:line="63" pos:column="33">&amp;<pos:position pos:line="63" pos:column="38"/></modifier></type> <name pos:line="63" pos:column="35">listRef<pos:position pos:line="63" pos:column="42"/></name> <init pos:line="63" pos:column="43">= <expr><call><name><name pos:line="63" pos:column="45">result<pos:position pos:line="63" pos:column="51"/></name><operator pos:line="63" pos:column="51">.<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="52">as_list<pos:position pos:line="63" pos:column="59"/></name></name><argument_list pos:line="63" pos:column="59">()<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="62"/></decl_stmt>

      <comment type="line" pos:line="65" pos:column="7">// Move this into a helper function?</comment>
      <while pos:line="66" pos:column="7">while <condition pos:line="66" pos:column="13">(<expr><name pos:line="66" pos:column="14">current<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">!=<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">last<pos:position pos:line="66" pos:column="29"/></name></expr>)<pos:position pos:line="66" pos:column="30"/></condition> <block pos:line="66" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">xmlrpc_value<pos:position pos:line="67" pos:column="21"/></name><modifier pos:line="67" pos:column="21">*<pos:position pos:line="67" pos:column="22"/></modifier></type> <name pos:line="67" pos:column="23">tmp<pos:position pos:line="67" pos:column="26"/></name></decl>;<pos:position pos:line="67" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">xmlrpc_array_read_item<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">env<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">value<pos:position pos:line="68" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">current<pos:position pos:line="68" pos:column="51"/></name><operator pos:line="68" pos:column="51">++<pos:position pos:line="68" pos:column="53"/></operator></expr></argument>, <argument><expr><operator pos:line="68" pos:column="55">&amp;<pos:position pos:line="68" pos:column="60"/></operator><name pos:line="68" pos:column="56">tmp<pos:position pos:line="68" pos:column="59"/></name></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">env<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">fault_occurred<pos:position pos:line="70" pos:column="32"/></name></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33">
          <block type="pseudo"><break pos:line="71" pos:column="11">break;<pos:position pos:line="71" pos:column="17"/></break></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="73" pos:column="9">listRef<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">.<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="17">push_back<pos:position pos:line="73" pos:column="26"/></name></name><argument_list pos:line="73" pos:column="26">(<argument><expr><call><name pos:line="73" pos:column="27">xmlrpc_to_object<pos:position pos:line="73" pos:column="43"/></name><argument_list pos:line="73" pos:column="43">(<argument><expr><name pos:line="73" pos:column="44">env<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="49">tmp<pos:position pos:line="73" pos:column="52"/></name></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">xmlrpc_DECREF<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">tmp<pos:position pos:line="74" pos:column="26"/></name></expr></argument>)<pos:position pos:line="74" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></while>

      <return pos:line="77" pos:column="7">return <expr><name pos:line="77" pos:column="14">result<pos:position pos:line="77" pos:column="20"/></name></expr>;<pos:position pos:line="77" pos:column="21"/></return>

    }<pos:position pos:line="79" pos:column="6"/></block></then> <elseif pos:line="79" pos:column="7">else <if pos:line="79" pos:column="12">if <condition pos:line="79" pos:column="15">(<expr><name pos:line="79" pos:column="16">current<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">+<pos:position pos:line="79" pos:column="25"/></operator> <literal type="number" pos:line="79" pos:column="26">1<pos:position pos:line="79" pos:column="27"/></literal> <operator pos:line="79" pos:column="28">==<pos:position pos:line="79" pos:column="30"/></operator> <name pos:line="79" pos:column="31">last<pos:position pos:line="79" pos:column="35"/></name></expr>)<pos:position pos:line="79" pos:column="36"/></condition><then pos:line="79" pos:column="36"> <block pos:line="79" pos:column="37">{
      <comment type="line" pos:line="80" pos:column="7">// Need to decref.</comment>
      <decl_stmt><decl><type><name pos:line="81" pos:column="7">xmlrpc_value<pos:position pos:line="81" pos:column="19"/></name><modifier pos:line="81" pos:column="19">*<pos:position pos:line="81" pos:column="20"/></modifier></type> <name pos:line="81" pos:column="21">tmp<pos:position pos:line="81" pos:column="24"/></name></decl>;<pos:position pos:line="81" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">xmlrpc_array_read_item<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">env<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="35">value<pos:position pos:line="82" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="42">current<pos:position pos:line="82" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="51">&amp;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="52">tmp<pos:position pos:line="82" pos:column="55"/></name></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="57"/></expr_stmt>

      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><name><name pos:line="84" pos:column="11">env<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">-&gt;<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="16">fault_occurred<pos:position pos:line="84" pos:column="30"/></name></name></expr>)<pos:position pos:line="84" pos:column="31"/></condition><then pos:line="84" pos:column="31">
        <block type="pseudo"><break pos:line="85" pos:column="9">break;<pos:position pos:line="85" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="87" pos:column="7">result<pos:position pos:line="87" pos:column="13"/></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <call><name pos:line="87" pos:column="16">xmlrpc_to_object<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">env<pos:position pos:line="87" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="38">tmp<pos:position pos:line="87" pos:column="41"/></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">xmlrpc_DECREF<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">tmp<pos:position pos:line="88" pos:column="24"/></name></expr></argument>)<pos:position pos:line="88" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">result<pos:position pos:line="91" pos:column="18"/></name></expr>;<pos:position pos:line="91" pos:column="19"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block>

  <default pos:line="94" pos:column="3">default:<pos:position pos:line="94" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">xmlrpc_env_set_fault<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><name pos:line="95" pos:column="26">env<pos:position pos:line="95" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="31">XMLRPC_TYPE_ERROR<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="50">"Unsupported type found."<pos:position pos:line="95" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></switch>

  <return pos:line="98" pos:column="3">return <expr><call><name><name pos:line="98" pos:column="10">torrent<pos:position pos:line="98" pos:column="17"/></name><operator pos:line="98" pos:column="17">::<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="19">Object<pos:position pos:line="98" pos:column="25"/></name></name><argument_list pos:line="98" pos:column="25">()<pos:position pos:line="98" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="28"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

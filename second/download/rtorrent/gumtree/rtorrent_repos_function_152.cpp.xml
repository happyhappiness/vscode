<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_152.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">add_copy_to_download<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name><modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">src<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">dest<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <block pos:line="2" pos:column="57">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">rpc<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">::<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">CommandMap<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">::<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">iterator<pos:position pos:line="3" pos:column="28"/></name></name></type> <name pos:line="3" pos:column="29">itr<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><call><name><name pos:line="3" pos:column="35">rpc<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">::<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">commands<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">.<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">find<pos:position pos:line="3" pos:column="53"/></name></name><argument_list pos:line="3" pos:column="53">(<argument><expr><name pos:line="3" pos:column="54">src<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">itr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <call><name><name pos:line="5" pos:column="14">rpc<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">commands<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">end<pos:position pos:line="5" pos:column="31"/></name></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34">
    <block type="pseudo"><throw pos:line="6" pos:column="5">throw <expr><call><name><name pos:line="6" pos:column="11">torrent<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">internal_error<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><literal type="string" pos:line="6" pos:column="35">"add_copy_to_download(...) key not found."<pos:position pos:line="6" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></throw></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="8" pos:column="3">rpc<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">::<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">commands<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">insert<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">dest<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="30">itr<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">second<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

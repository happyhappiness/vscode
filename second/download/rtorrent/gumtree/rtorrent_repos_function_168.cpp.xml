<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_168.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name><modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">parse_skip_wspace<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name><modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">first<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">last<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <block pos:line="2" pos:column="56">{
  <while pos:line="3" pos:column="3">while <condition pos:line="3" pos:column="9">(<expr><name pos:line="3" pos:column="10">first<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">!=<pos:position pos:line="3" pos:column="18"/></operator> <name pos:line="3" pos:column="19">last<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&amp;&amp;<pos:position pos:line="3" pos:column="34"/></operator> <call><name pos:line="3" pos:column="27">parse_is_space<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><operator pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="43">first<pos:position pos:line="3" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="50"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="5">first<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">++<pos:position pos:line="4" pos:column="12"/></operator></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt></block></while>

  <return pos:line="6" pos:column="3">return <expr><name pos:line="6" pos:column="10">first<pos:position pos:line="6" pos:column="15"/></name></expr>;<pos:position pos:line="6" pos:column="16"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

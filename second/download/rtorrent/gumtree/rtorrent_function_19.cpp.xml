<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_19.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowPeerList<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">redraw<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list> <block pos:line="2" pos:column="26">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">utils<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">::<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">Timer<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">::<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">cache<pos:position pos:line="3" pos:column="26"/></name></name><argument_list pos:line="3" pos:column="26">()<pos:position pos:line="3" pos:column="28"/></argument_list></call> <operator pos:line="3" pos:column="29">-<pos:position pos:line="3" pos:column="30"/></operator> <name pos:line="3" pos:column="31">m_lastDraw<pos:position pos:line="3" pos:column="41"/></name> <operator pos:line="3" pos:column="42">&lt;<pos:position pos:line="3" pos:column="46"/></operator> <literal type="number" pos:line="3" pos:column="44">1000000<pos:position pos:line="3" pos:column="51"/></literal></expr>)<pos:position pos:line="3" pos:column="52"/></condition><then pos:line="3" pos:column="52">
    <block type="pseudo"><return pos:line="4" pos:column="5">return;<pos:position pos:line="4" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="6" pos:column="3">m_lastDraw<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <call><name><name pos:line="6" pos:column="16">utils<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">::<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">Timer<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">::<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">cache<pos:position pos:line="6" pos:column="35"/></name></name><argument_list pos:line="6" pos:column="35">()<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="7" pos:column="3">m_canvas<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">erase<pos:position pos:line="7" pos:column="18"/></name></name><argument_list pos:line="7" pos:column="18">()<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">x<pos:position pos:line="9" pos:column="8"/></name> <init pos:line="9" pos:column="9">= <expr><literal type="number" pos:line="9" pos:column="11">2<pos:position pos:line="9" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">y<pos:position pos:line="10" pos:column="8"/></name> <init pos:line="10" pos:column="9">= <expr><literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name><name pos:line="12" pos:column="3">m_canvas<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">print<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">x<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">y<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"DNS"<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>   <expr_stmt><expr><name pos:line="12" pos:column="35">x<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">+=<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">16<pos:position pos:line="12" pos:column="42"/></literal></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="13" pos:column="3">m_canvas<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">print<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">x<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">y<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="25">"UP"<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>    <expr_stmt><expr><name pos:line="13" pos:column="35">x<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">+=<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="40">7<pos:position pos:line="13" pos:column="41"/></literal></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="14" pos:column="3">m_canvas<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">print<pos:position pos:line="14" pos:column="18"/></name></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">x<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">y<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"DOWN"<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>  <expr_stmt><expr><name pos:line="14" pos:column="35">x<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">+=<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">7<pos:position pos:line="14" pos:column="41"/></literal></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="15" pos:column="3">m_canvas<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">print<pos:position pos:line="15" pos:column="18"/></name></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">x<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="22">y<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"PEER"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>  <expr_stmt><expr><name pos:line="15" pos:column="35">x<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">+=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">7<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="16" pos:column="3">m_canvas<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">print<pos:position pos:line="16" pos:column="18"/></name></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">x<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">y<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="25">"RE/LO"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt> <expr_stmt><expr><name pos:line="16" pos:column="35">x<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">+=<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">7<pos:position pos:line="16" pos:column="41"/></literal></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="17" pos:column="3">m_canvas<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">print<pos:position pos:line="17" pos:column="18"/></name></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">x<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="22">y<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">"QS"<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>    <expr_stmt><expr><name pos:line="17" pos:column="35">x<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">+=<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="40">6<pos:position pos:line="17" pos:column="41"/></literal></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="18" pos:column="3">m_canvas<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">print<pos:position pos:line="18" pos:column="18"/></name></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">x<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">y<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"DONE"<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>  <expr_stmt><expr><name pos:line="18" pos:column="35">x<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">+=<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">6<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="19" pos:column="3">m_canvas<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">print<pos:position pos:line="19" pos:column="18"/></name></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">x<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">y<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="25">"REQ"<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>   <expr_stmt><expr><name pos:line="19" pos:column="35">x<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">+=<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">6<pos:position pos:line="19" pos:column="41"/></literal></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="20" pos:column="3">m_canvas<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">print<pos:position pos:line="20" pos:column="18"/></name></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">x<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="22">y<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="25">"SNUB"<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="22" pos:column="3">++<pos:position pos:line="22" pos:column="5"/></operator><name pos:line="22" pos:column="5">y<pos:position pos:line="22" pos:column="6"/></name></expr>;<pos:position pos:line="22" pos:column="7"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name><name pos:line="24" pos:column="7">m_list<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">empty<pos:position pos:line="24" pos:column="20"/></name></name><argument_list pos:line="24" pos:column="20">()<pos:position pos:line="24" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23">
    <block type="pseudo"><return pos:line="25" pos:column="5">return;<pos:position pos:line="25" pos:column="12"/></return></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="27" pos:column="3">PList<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">::<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">iterator<pos:position pos:line="27" pos:column="18"/></name></name></type> <name pos:line="27" pos:column="19">itr<pos:position pos:line="27" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="27" pos:column="24">last<pos:position pos:line="27" pos:column="28"/></name></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
  
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">*<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">m_focus<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">!=<pos:position pos:line="29" pos:column="18"/></operator> <call><name><name pos:line="29" pos:column="19">m_list<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">end<pos:position pos:line="29" pos:column="30"/></name></name><argument_list pos:line="29" pos:column="30">()<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33"> <block pos:line="29" pos:column="34">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name> <init pos:line="30" pos:column="11">= <expr><literal type="number" pos:line="30" pos:column="13">0<pos:position pos:line="30" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">itr<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <name pos:line="31" pos:column="11">last<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <operator pos:line="31" pos:column="18">*<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">m_focus<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
    
    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><name pos:line="33" pos:column="12">i<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">&lt;<pos:position pos:line="33" pos:column="18"/></operator> <call><name><name pos:line="33" pos:column="16">m_canvas<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">get_height<pos:position pos:line="33" pos:column="36"/></name></name><argument_list pos:line="33" pos:column="36">()<pos:position pos:line="33" pos:column="38"/></argument_list></call> <operator pos:line="33" pos:column="39">-<pos:position pos:line="33" pos:column="40"/></operator> <name pos:line="33" pos:column="41">y<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">&amp;&amp;<pos:position pos:line="33" pos:column="53"/></operator> <operator pos:line="33" pos:column="46">!<pos:position pos:line="33" pos:column="47"/></operator><operator pos:line="33" pos:column="47">(<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="48">itr<pos:position pos:line="33" pos:column="51"/></name> <operator pos:line="33" pos:column="52">==<pos:position pos:line="33" pos:column="54"/></operator> <call><name><name pos:line="33" pos:column="55">m_list<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">begin<pos:position pos:line="33" pos:column="68"/></name></name><argument_list pos:line="33" pos:column="68">()<pos:position pos:line="33" pos:column="70"/></argument_list></call> <operator pos:line="33" pos:column="71">&amp;&amp;<pos:position pos:line="33" pos:column="81"/></operator> <name pos:line="33" pos:column="74">last<pos:position pos:line="33" pos:column="78"/></name> <operator pos:line="33" pos:column="79">==<pos:position pos:line="33" pos:column="81"/></operator> <call><name><name pos:line="33" pos:column="82">m_list<pos:position pos:line="33" pos:column="88"/></name><operator pos:line="33" pos:column="88">-&gt;<pos:position pos:line="33" pos:column="93"/></operator><name pos:line="33" pos:column="90">end<pos:position pos:line="33" pos:column="93"/></name></name><argument_list pos:line="33" pos:column="93">()<pos:position pos:line="33" pos:column="95"/></argument_list></call><operator pos:line="33" pos:column="95">)<pos:position pos:line="33" pos:column="96"/></operator></expr>)<pos:position pos:line="33" pos:column="97"/></condition> <block pos:line="33" pos:column="98">{
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">itr<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">!=<pos:position pos:line="34" pos:column="17"/></operator> <call><name><name pos:line="34" pos:column="18">m_list<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">begin<pos:position pos:line="34" pos:column="31"/></name></name><argument_list pos:line="34" pos:column="31">()<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <block pos:line="34" pos:column="35">{
	<expr_stmt><expr><operator pos:line="35" pos:column="9">--<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">itr<pos:position pos:line="35" pos:column="14"/></name></expr>;<pos:position pos:line="35" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">++<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">i<pos:position pos:line="36" pos:column="12"/></name></expr>;<pos:position pos:line="36" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
      
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><name pos:line="39" pos:column="11">last<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <call><name><name pos:line="39" pos:column="19">m_list<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">end<pos:position pos:line="39" pos:column="30"/></name></name><argument_list pos:line="39" pos:column="30">()<pos:position pos:line="39" pos:column="32"/></argument_list></call> <operator pos:line="39" pos:column="33">&amp;&amp;<pos:position pos:line="39" pos:column="43"/></operator> <name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name> <operator pos:line="39" pos:column="38">&lt;<pos:position pos:line="39" pos:column="42"/></operator> <call><name><name pos:line="39" pos:column="40">m_canvas<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">get_height<pos:position pos:line="39" pos:column="60"/></name></name><argument_list pos:line="39" pos:column="60">()<pos:position pos:line="39" pos:column="62"/></argument_list></call> <operator pos:line="39" pos:column="63">-<pos:position pos:line="39" pos:column="64"/></operator> <name pos:line="39" pos:column="65">y<pos:position pos:line="39" pos:column="66"/></name></expr>)<pos:position pos:line="39" pos:column="67"/></condition><then pos:line="39" pos:column="67"> <block pos:line="39" pos:column="68">{
	<expr_stmt><expr><operator pos:line="40" pos:column="9">++<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">last<pos:position pos:line="40" pos:column="15"/></name></expr>;<pos:position pos:line="40" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="41" pos:column="9">++<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">i<pos:position pos:line="41" pos:column="12"/></name></expr>;<pos:position pos:line="41" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></while>

  }<pos:position pos:line="45" pos:column="4"/></block></then> <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">itr<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call><name><name pos:line="46" pos:column="11">m_list<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">begin<pos:position pos:line="46" pos:column="24"/></name></name><argument_list pos:line="46" pos:column="24">()<pos:position pos:line="46" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">last<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name><name pos:line="47" pos:column="12">m_list<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">end<pos:position pos:line="47" pos:column="23"/></name></name><argument_list pos:line="47" pos:column="23">()<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>    

  <decl_stmt><decl><type><name pos:line="50" pos:column="3">uint32_t<pos:position pos:line="50" pos:column="11"/></name></type> <name pos:line="50" pos:column="12">chunksTotal<pos:position pos:line="50" pos:column="23"/></name> <init pos:line="50" pos:column="24">= <expr><call><name pos:line="50" pos:column="26">m_slotChunksTotal<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">()<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="46"/></decl_stmt>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">chunksTotal<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">&lt;=<pos:position pos:line="52" pos:column="24"/></operator> <literal type="number" pos:line="52" pos:column="22">0<pos:position pos:line="52" pos:column="23"/></literal></expr>)<pos:position pos:line="52" pos:column="24"/></condition><then pos:line="52" pos:column="24">
    <block type="pseudo"><throw pos:line="53" pos:column="5">throw <expr><call><name><name pos:line="53" pos:column="11">std<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">::<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">logic_error<pos:position pos:line="53" pos:column="27"/></name></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="string" pos:line="53" pos:column="28">"WindowPeerList::redraw() m_slotChunksTotal() returned invalid value"<pos:position pos:line="53" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="99"/></throw></block></then></if>

  <while pos:line="55" pos:column="3">while <condition pos:line="55" pos:column="9">(<expr><name pos:line="55" pos:column="10">itr<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">!=<pos:position pos:line="55" pos:column="16"/></operator> <call><name><name pos:line="55" pos:column="17">m_list<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">-&gt;<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="25">end<pos:position pos:line="55" pos:column="28"/></name></name><argument_list pos:line="55" pos:column="28">()<pos:position pos:line="55" pos:column="30"/></argument_list></call> <operator pos:line="55" pos:column="31">&amp;&amp;<pos:position pos:line="55" pos:column="41"/></operator> <name pos:line="55" pos:column="34">y<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">&lt;<pos:position pos:line="55" pos:column="40"/></operator> <call><name><name pos:line="55" pos:column="38">m_canvas<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">-&gt;<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="48">get_height<pos:position pos:line="55" pos:column="58"/></name></name><argument_list pos:line="55" pos:column="58">()<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="61"/></condition> <block pos:line="55" pos:column="62">{
    <expr_stmt><expr><name pos:line="56" pos:column="5">x<pos:position pos:line="56" pos:column="6"/></name> <operator pos:line="56" pos:column="7">=<pos:position pos:line="56" pos:column="8"/></operator> <literal type="number" pos:line="56" pos:column="9">0<pos:position pos:line="56" pos:column="10"/></literal></expr>;<pos:position pos:line="56" pos:column="11"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="58" pos:column="5">m_canvas<pos:position pos:line="58" pos:column="13"/></name><operator pos:line="58" pos:column="13">-&gt;<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="15">print<pos:position pos:line="58" pos:column="20"/></name></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">x<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="24">y<pos:position pos:line="58" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="27">"%c %s"<pos:position pos:line="58" pos:column="34"/></literal></expr></argument>,
	     <argument><expr><ternary><condition><expr><name pos:line="59" pos:column="14">itr<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">==<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">*<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">m_focus<pos:position pos:line="59" pos:column="29"/></name></expr> ?<pos:position pos:line="59" pos:column="31"/></condition><then pos:line="59" pos:column="31"> <expr><literal type="char" pos:line="59" pos:column="32">'*'<pos:position pos:line="59" pos:column="35"/></literal></expr> <pos:position pos:line="59" pos:column="36"/></then><else pos:line="59" pos:column="36">: <expr><literal type="char" pos:line="59" pos:column="38">' '<pos:position pos:line="59" pos:column="41"/></literal></expr></else></ternary></expr></argument>,
	     <argument><expr><call><name><name pos:line="60" pos:column="14">itr<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">get_dns<pos:position pos:line="60" pos:column="26"/></name></name><argument_list pos:line="60" pos:column="26">()<pos:position pos:line="60" pos:column="28"/></argument_list></call><operator pos:line="60" pos:column="28">.<pos:position pos:line="60" pos:column="29"/></operator><call><name pos:line="60" pos:column="29">c_str<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">()<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="61" pos:column="5">x<pos:position pos:line="61" pos:column="6"/></name> <operator pos:line="61" pos:column="7">+=<pos:position pos:line="61" pos:column="9"/></operator> <literal type="number" pos:line="61" pos:column="10">18<pos:position pos:line="61" pos:column="12"/></literal></expr>;<pos:position pos:line="61" pos:column="13"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="63" pos:column="5">m_canvas<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">-&gt;<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="15">print<pos:position pos:line="63" pos:column="20"/></name></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">x<pos:position pos:line="63" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="24">y<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"%.1f"<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>,
	     <argument><expr><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">double<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">)<pos:position pos:line="64" pos:column="22"/></operator><call><name><name pos:line="64" pos:column="22">itr<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">get_rate_up<pos:position pos:line="64" pos:column="38"/></name></name><argument_list pos:line="64" pos:column="38">()<pos:position pos:line="64" pos:column="40"/></argument_list></call> <operator pos:line="64" pos:column="41">/<pos:position pos:line="64" pos:column="42"/></operator> <literal type="number" pos:line="64" pos:column="43">1024<pos:position pos:line="64" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="65" pos:column="5">x<pos:position pos:line="65" pos:column="6"/></name> <operator pos:line="65" pos:column="7">+=<pos:position pos:line="65" pos:column="9"/></operator> <literal type="number" pos:line="65" pos:column="10">7<pos:position pos:line="65" pos:column="11"/></literal></expr>;<pos:position pos:line="65" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="67" pos:column="5">m_canvas<pos:position pos:line="67" pos:column="13"/></name><operator pos:line="67" pos:column="13">-&gt;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="15">print<pos:position pos:line="67" pos:column="20"/></name></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">x<pos:position pos:line="67" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="24">y<pos:position pos:line="67" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="27">"%.1f"<pos:position pos:line="67" pos:column="33"/></literal></expr></argument>,
	     <argument><expr><operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="15">double<pos:position pos:line="68" pos:column="21"/></name><operator pos:line="68" pos:column="21">)<pos:position pos:line="68" pos:column="22"/></operator><call><name><name pos:line="68" pos:column="22">itr<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">get_rate_down<pos:position pos:line="68" pos:column="40"/></name></name><argument_list pos:line="68" pos:column="40">()<pos:position pos:line="68" pos:column="42"/></argument_list></call> <operator pos:line="68" pos:column="43">/<pos:position pos:line="68" pos:column="44"/></operator> <literal type="number" pos:line="68" pos:column="45">1024<pos:position pos:line="68" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="69" pos:column="5">x<pos:position pos:line="69" pos:column="6"/></name> <operator pos:line="69" pos:column="7">+=<pos:position pos:line="69" pos:column="9"/></operator> <literal type="number" pos:line="69" pos:column="10">7<pos:position pos:line="69" pos:column="11"/></literal></expr>;<pos:position pos:line="69" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="71" pos:column="5">m_canvas<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">print<pos:position pos:line="71" pos:column="20"/></name></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name pos:line="71" pos:column="21">x<pos:position pos:line="71" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="24">y<pos:position pos:line="71" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="27">"%.1f"<pos:position pos:line="71" pos:column="33"/></literal></expr></argument>,
	     <argument><expr><operator pos:line="72" pos:column="14">(<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">double<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">)<pos:position pos:line="72" pos:column="22"/></operator><call><name><name pos:line="72" pos:column="22">itr<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">-&gt;<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="27">get_rate_peer<pos:position pos:line="72" pos:column="40"/></name></name><argument_list pos:line="72" pos:column="40">()<pos:position pos:line="72" pos:column="42"/></argument_list></call> <operator pos:line="72" pos:column="43">/<pos:position pos:line="72" pos:column="44"/></operator> <literal type="number" pos:line="72" pos:column="45">1024<pos:position pos:line="72" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="73" pos:column="5">x<pos:position pos:line="73" pos:column="6"/></name> <operator pos:line="73" pos:column="7">+=<pos:position pos:line="73" pos:column="9"/></operator> <literal type="number" pos:line="73" pos:column="10">7<pos:position pos:line="73" pos:column="11"/></literal></expr>;<pos:position pos:line="73" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="75" pos:column="5">m_canvas<pos:position pos:line="75" pos:column="13"/></name><operator pos:line="75" pos:column="13">-&gt;<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="15">print<pos:position pos:line="75" pos:column="20"/></name></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">x<pos:position pos:line="75" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="24">y<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="27">"%c%c/%c%c%c"<pos:position pos:line="75" pos:column="40"/></literal></expr></argument>,
	     <argument><expr><ternary><condition><expr><call><name><name pos:line="76" pos:column="14">itr<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="19">get_remote_choked<pos:position pos:line="76" pos:column="36"/></name></name><argument_list pos:line="76" pos:column="36">()<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="76" pos:column="40"/></condition><then pos:line="76" pos:column="40"> <expr><literal type="char" pos:line="76" pos:column="41">'c'<pos:position pos:line="76" pos:column="44"/></literal></expr> <pos:position pos:line="76" pos:column="45"/></then><else pos:line="76" pos:column="45">: <expr><literal type="char" pos:line="76" pos:column="47">'u'<pos:position pos:line="76" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
	     <argument><expr><ternary><condition><expr><call><name><name pos:line="77" pos:column="14">itr<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="19">get_remote_interested<pos:position pos:line="77" pos:column="40"/></name></name><argument_list pos:line="77" pos:column="40">()<pos:position pos:line="77" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="77" pos:column="44"/></condition><then pos:line="77" pos:column="44"> <expr><literal type="char" pos:line="77" pos:column="45">'i'<pos:position pos:line="77" pos:column="48"/></literal></expr> <pos:position pos:line="77" pos:column="49"/></then><else pos:line="77" pos:column="49">: <expr><literal type="char" pos:line="77" pos:column="51">'n'<pos:position pos:line="77" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
	     <argument><expr><ternary><condition><expr><call><name><name pos:line="78" pos:column="14">itr<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">-&gt;<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="19">get_local_choked<pos:position pos:line="78" pos:column="35"/></name></name><argument_list pos:line="78" pos:column="35">()<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr> ?<pos:position pos:line="78" pos:column="39"/></condition><then pos:line="78" pos:column="39"> <expr><literal type="char" pos:line="78" pos:column="40">'c'<pos:position pos:line="78" pos:column="43"/></literal></expr> <pos:position pos:line="78" pos:column="44"/></then><else pos:line="78" pos:column="44">: <expr><literal type="char" pos:line="78" pos:column="46">'u'<pos:position pos:line="78" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
	     <argument><expr><ternary><condition><expr><call><name><name pos:line="79" pos:column="14">itr<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">get_local_interested<pos:position pos:line="79" pos:column="39"/></name></name><argument_list pos:line="79" pos:column="39">()<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="79" pos:column="43"/></condition><then pos:line="79" pos:column="43"> <expr><literal type="char" pos:line="79" pos:column="44">'i'<pos:position pos:line="79" pos:column="47"/></literal></expr> <pos:position pos:line="79" pos:column="48"/></then><else pos:line="79" pos:column="48">: <expr><literal type="char" pos:line="79" pos:column="50">'n'<pos:position pos:line="79" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
	     <argument><expr><ternary><condition><expr><call><name><name pos:line="80" pos:column="14">itr<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-&gt;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="19">get_choke_delayed<pos:position pos:line="80" pos:column="36"/></name></name><argument_list pos:line="80" pos:column="36">()<pos:position pos:line="80" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="80" pos:column="40"/></condition><then pos:line="80" pos:column="40"> <expr><literal type="char" pos:line="80" pos:column="41">'d'<pos:position pos:line="80" pos:column="44"/></literal></expr> <pos:position pos:line="80" pos:column="45"/></then><else pos:line="80" pos:column="45">: <expr><literal type="char" pos:line="80" pos:column="47">' '<pos:position pos:line="80" pos:column="50"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="81" pos:column="5">x<pos:position pos:line="81" pos:column="6"/></name> <operator pos:line="81" pos:column="7">+=<pos:position pos:line="81" pos:column="9"/></operator> <literal type="number" pos:line="81" pos:column="10">7<pos:position pos:line="81" pos:column="11"/></literal></expr>;<pos:position pos:line="81" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="83" pos:column="5">m_canvas<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">print<pos:position pos:line="83" pos:column="20"/></name></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">x<pos:position pos:line="83" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="24">y<pos:position pos:line="83" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="27">"%i/%i"<pos:position pos:line="83" pos:column="34"/></literal></expr></argument>,
	     <argument><expr><call><name><name pos:line="84" pos:column="14">itr<pos:position pos:line="84" pos:column="17"/></name><operator pos:line="84" pos:column="17">-&gt;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="19">get_outgoing_queue_size<pos:position pos:line="84" pos:column="42"/></name></name><argument_list pos:line="84" pos:column="42">()<pos:position pos:line="84" pos:column="44"/></argument_list></call></expr></argument>,
	     <argument><expr><call><name><name pos:line="85" pos:column="14">itr<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">get_incoming_queue_size<pos:position pos:line="85" pos:column="42"/></name></name><argument_list pos:line="85" pos:column="42">()<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="86" pos:column="5">x<pos:position pos:line="86" pos:column="6"/></name> <operator pos:line="86" pos:column="7">+=<pos:position pos:line="86" pos:column="9"/></operator> <literal type="number" pos:line="86" pos:column="10">6<pos:position pos:line="86" pos:column="11"/></literal></expr>;<pos:position pos:line="86" pos:column="12"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="88" pos:column="5">m_canvas<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">print<pos:position pos:line="88" pos:column="20"/></name></name><argument_list pos:line="88" pos:column="20">(<argument><expr><name pos:line="88" pos:column="21">x<pos:position pos:line="88" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="24">y<pos:position pos:line="88" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="27">"%3i"<pos:position pos:line="88" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="34">(<pos:position pos:line="88" pos:column="35"/></operator><call><name><name pos:line="88" pos:column="35">itr<pos:position pos:line="88" pos:column="38"/></name><operator pos:line="88" pos:column="38">-&gt;<pos:position pos:line="88" pos:column="43"/></operator><name pos:line="88" pos:column="40">get_chunks_done<pos:position pos:line="88" pos:column="55"/></name></name><argument_list pos:line="88" pos:column="55">()<pos:position pos:line="88" pos:column="57"/></argument_list></call> <operator pos:line="88" pos:column="58">*<pos:position pos:line="88" pos:column="59"/></operator> <literal type="number" pos:line="88" pos:column="60">100<pos:position pos:line="88" pos:column="63"/></literal><operator pos:line="88" pos:column="63">)<pos:position pos:line="88" pos:column="64"/></operator> <operator pos:line="88" pos:column="65">/<pos:position pos:line="88" pos:column="66"/></operator> <name pos:line="88" pos:column="67">chunksTotal<pos:position pos:line="88" pos:column="78"/></name></expr></argument>)<pos:position pos:line="88" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name pos:line="89" pos:column="5">x<pos:position pos:line="89" pos:column="6"/></name> <operator pos:line="89" pos:column="7">+=<pos:position pos:line="89" pos:column="9"/></operator> <literal type="number" pos:line="89" pos:column="10">6<pos:position pos:line="89" pos:column="11"/></literal></expr>;<pos:position pos:line="89" pos:column="12"/></expr_stmt>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><call><name><name pos:line="91" pos:column="9">itr<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">get_incoming_queue_size<pos:position pos:line="91" pos:column="37"/></name></name><argument_list pos:line="91" pos:column="37">()<pos:position pos:line="91" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="40"/></condition><then pos:line="91" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="92" pos:column="7">m_canvas<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">print<pos:position pos:line="92" pos:column="22"/></name></name><argument_list pos:line="92" pos:column="22">(<argument><expr><name pos:line="92" pos:column="23">x<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="26">y<pos:position pos:line="92" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="29">"%i"<pos:position pos:line="92" pos:column="33"/></literal></expr></argument>,
	       <argument><expr><call><name><name pos:line="93" pos:column="16">itr<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">get_incoming_index<pos:position pos:line="93" pos:column="39"/></name></name><argument_list pos:line="93" pos:column="39">(<argument><expr><literal type="number" pos:line="93" pos:column="40">0<pos:position pos:line="93" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="95" pos:column="5">x<pos:position pos:line="95" pos:column="6"/></name> <operator pos:line="95" pos:column="7">+=<pos:position pos:line="95" pos:column="9"/></operator> <literal type="number" pos:line="95" pos:column="10">6<pos:position pos:line="95" pos:column="11"/></literal></expr>;<pos:position pos:line="95" pos:column="12"/></expr_stmt>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><call><name><name pos:line="97" pos:column="9">itr<pos:position pos:line="97" pos:column="12"/></name><operator pos:line="97" pos:column="12">-&gt;<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="14">get_snubbed<pos:position pos:line="97" pos:column="25"/></name></name><argument_list pos:line="97" pos:column="25">()<pos:position pos:line="97" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="28"/></condition><then pos:line="97" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="98" pos:column="7">m_canvas<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">-&gt;<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="17">print<pos:position pos:line="98" pos:column="22"/></name></name><argument_list pos:line="98" pos:column="22">(<argument><expr><name pos:line="98" pos:column="23">x<pos:position pos:line="98" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="26">y<pos:position pos:line="98" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="29">"*"<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="100" pos:column="5">++<pos:position pos:line="100" pos:column="7"/></operator><name pos:line="100" pos:column="7">y<pos:position pos:line="100" pos:column="8"/></name></expr>;<pos:position pos:line="100" pos:column="9"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="101" pos:column="5">++<pos:position pos:line="101" pos:column="7"/></operator><name pos:line="101" pos:column="7">itr<pos:position pos:line="101" pos:column="10"/></name></expr>;<pos:position pos:line="101" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="102" pos:column="4"/></block></while>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

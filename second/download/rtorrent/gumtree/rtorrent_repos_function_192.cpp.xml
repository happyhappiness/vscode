<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_192.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_is_delim_list<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">c<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>    <block pos:line="1" pos:column="50">{ <return pos:line="1" pos:column="52">return <expr><call><name pos:line="1" pos:column="59">parse_is_seperator<pos:position pos:line="1" pos:column="77"/></name><argument_list pos:line="1" pos:column="77">(<argument><expr><name pos:line="1" pos:column="78">c<pos:position pos:line="1" pos:column="79"/></name></expr></argument>)<pos:position pos:line="1" pos:column="80"/></argument_list></call> <operator pos:line="1" pos:column="81">||<pos:position pos:line="1" pos:column="83"/></operator> <name pos:line="1" pos:column="84">c<pos:position pos:line="1" pos:column="85"/></name> <operator pos:line="1" pos:column="86">==<pos:position pos:line="1" pos:column="88"/></operator> <literal type="char" pos:line="1" pos:column="89">'}'<pos:position pos:line="1" pos:column="92"/></literal> <operator pos:line="1" pos:column="93">||<pos:position pos:line="1" pos:column="95"/></operator> <call><name><name pos:line="1" pos:column="96">std<pos:position pos:line="1" pos:column="99"/></name><operator pos:line="1" pos:column="99">::<pos:position pos:line="1" pos:column="101"/></operator><name pos:line="1" pos:column="101">isspace<pos:position pos:line="1" pos:column="108"/></name></name><argument_list pos:line="1" pos:column="108">(<argument><expr><name pos:line="1" pos:column="109">c<pos:position pos:line="1" pos:column="110"/></name></expr></argument>)<pos:position pos:line="1" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="1" pos:column="112"/></return> }<pos:position pos:line="1" pos:column="114"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_416.cpp" pos:tabs="8"><function type="operator"><specifier pos:line="1" pos:column="1">virtual<pos:position pos:line="1" pos:column="8"/></specifier> <type><name pos:line="1" pos:column="9">bool<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">operator <name pos:line="1" pos:column="23">()<pos:position pos:line="1" pos:column="25"/></name></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">Download<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">d1<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <block pos:line="1" pos:column="47">{
    <return pos:line="2" pos:column="5">return <expr><operator pos:line="2" pos:column="12">(<pos:position pos:line="2" pos:column="13"/></operator><call><name><name pos:line="2" pos:column="13">rpc<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">call_command_d_value<pos:position pos:line="2" pos:column="38"/></name></name><argument_list pos:line="2" pos:column="38">(<argument><expr><name pos:line="2" pos:column="39">m_name<pos:position pos:line="2" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="47">d1<pos:position pos:line="2" pos:column="49"/></name></expr></argument>)<pos:position pos:line="2" pos:column="50"/></argument_list></call> <operator pos:line="2" pos:column="51">==<pos:position pos:line="2" pos:column="53"/></operator> <name pos:line="2" pos:column="54">m_value<pos:position pos:line="2" pos:column="61"/></name><operator pos:line="2" pos:column="61">)<pos:position pos:line="2" pos:column="62"/></operator> <operator pos:line="2" pos:column="63">!=<pos:position pos:line="2" pos:column="65"/></operator> <name pos:line="2" pos:column="66">m_inverse<pos:position pos:line="2" pos:column="75"/></name></expr>;<pos:position pos:line="2" pos:column="76"/></return>
  }<pos:position pos:line="3" pos:column="4"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_457.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">Download<pos:position pos:line="1" pos:column="9"/></name><modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name><name pos:line="2" pos:column="1">DownloadList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">create<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">std<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">istream<pos:position pos:line="2" pos:column="34"/></name></name><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">str<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">bool<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">printLog<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <block pos:line="2" pos:column="56">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">torrent<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">::<pos:position pos:line="3" pos:column="12"/></operator><name pos:line="3" pos:column="12">Object<pos:position pos:line="3" pos:column="18"/></name></name><modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type> <name pos:line="3" pos:column="20">object<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><operator pos:line="3" pos:column="29">new<pos:position pos:line="3" pos:column="32"/></operator> <name><name pos:line="3" pos:column="33">torrent<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">::<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">Object<pos:position pos:line="3" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">torrent<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">::<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">Download<pos:position pos:line="4" pos:column="20"/></name></name></type> <name pos:line="4" pos:column="21">download<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

  <try pos:line="6" pos:column="3">try <block pos:line="6" pos:column="7">{
    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">str<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">&gt;&gt;<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">object<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
    
    <comment type="line" pos:line="9" pos:column="5">// Don't throw input_error from here as gcc-3.3.5 produces bad</comment>
    <comment type="line" pos:line="10" pos:column="5">// code.</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name><name pos:line="11" pos:column="9">str<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">fail<pos:position pos:line="11" pos:column="18"/></name></name><argument_list pos:line="11" pos:column="18">()<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
      <expr_stmt><expr><operator pos:line="12" pos:column="7">delete<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">object<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>

      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">printLog<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="15" pos:column="9">control<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">core<pos:position pos:line="15" pos:column="22"/></name></name><argument_list pos:line="15" pos:column="22">()<pos:position pos:line="15" pos:column="24"/></argument_list></call><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><call><name pos:line="15" pos:column="26">push_log<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><literal type="string" pos:line="15" pos:column="35">"Could not create download, the input is not a valid torrent."<pos:position pos:line="15" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="99"/></expr_stmt></block></then></if>

      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">download<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name><name pos:line="20" pos:column="16">torrent<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">::<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">download_add<pos:position pos:line="20" pos:column="37"/></name></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">object<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>

  }<pos:position pos:line="22" pos:column="4"/></block> <catch pos:line="22" pos:column="5">catch <parameter_list pos:line="22" pos:column="11">(<parameter><decl><type><name><name pos:line="22" pos:column="12">torrent<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">::<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">local_error<pos:position pos:line="22" pos:column="32"/></name></name><modifier pos:line="22" pos:column="32">&amp;<pos:position pos:line="22" pos:column="37"/></modifier></type> <name pos:line="22" pos:column="34">e<pos:position pos:line="22" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="22" pos:column="36"/></parameter_list> <block pos:line="22" pos:column="37">{
    <expr_stmt><expr><operator pos:line="23" pos:column="5">delete<pos:position pos:line="23" pos:column="11"/></operator> <name pos:line="23" pos:column="12">object<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">printLog<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="26" pos:column="7">control<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">core<pos:position pos:line="26" pos:column="20"/></name></name><argument_list pos:line="26" pos:column="20">()<pos:position pos:line="26" pos:column="22"/></argument_list></call><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><call><name pos:line="26" pos:column="24">push_log<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><call><name><name pos:line="26" pos:column="33">e<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">what<pos:position pos:line="26" pos:column="39"/></name></name><argument_list pos:line="26" pos:column="39">()<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt></block></then></if>

    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">NULL<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></catch></try>

  <comment type="line" pos:line="31" pos:column="3">// There's no non-critical exceptions that should be throwable by</comment>
  <comment type="line" pos:line="32" pos:column="3">// the ctor, so don't catch.</comment>
  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">new<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">Download<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">download<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_456.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">Download<pos:position pos:line="1" pos:column="9"/></name><modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name><name pos:line="2" pos:column="1">DownloadList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">find_hex_ptr<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">hash<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">iterator<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">itr<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><call><name pos:line="3" pos:column="18">find_hex<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">hash<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>

  <return pos:line="5" pos:column="3">return <expr><ternary><condition><expr><name pos:line="5" pos:column="10">itr<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">!=<pos:position pos:line="5" pos:column="16"/></operator> <call><name pos:line="5" pos:column="17">end<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr> ?<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <expr><operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">itr<pos:position pos:line="5" pos:column="29"/></name></expr> <pos:position pos:line="5" pos:column="30"/></then><else pos:line="5" pos:column="30">: <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="37"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

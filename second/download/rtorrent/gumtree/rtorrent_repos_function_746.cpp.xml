<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_746.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TextInput<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">pressed<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">key<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list> <block pos:line="2" pos:column="29">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">m_bindings<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">.<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">pressed<pos:position pos:line="3" pos:column="25"/></name></name><argument_list pos:line="3" pos:column="25">(<argument><expr><name pos:line="3" pos:column="26">key<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{
    <return pos:line="4" pos:column="5">return <expr><literal type="boolean" pos:line="4" pos:column="12">true<pos:position pos:line="4" pos:column="16"/></literal></expr>;<pos:position pos:line="4" pos:column="17"/></return>

  }<pos:position pos:line="6" pos:column="4"/></block></then> <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><name pos:line="6" pos:column="14">m_alt<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">m_alt<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <literal type="boolean" pos:line="7" pos:column="13">false<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">key<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition> <block pos:line="9" pos:column="18">{
<comment type="line" pos:line="10" pos:column="1">//     case 'b':</comment>
<comment type="line" pos:line="11" pos:column="1">//       Base::insert(m_pos, "M^b");</comment>
<comment type="line" pos:line="12" pos:column="1">//       break;</comment>

<comment type="line" pos:line="14" pos:column="1">//     case 'f':</comment>
<comment type="line" pos:line="15" pos:column="1">//       Base::insert(m_pos, "M^f");</comment>
<comment type="line" pos:line="16" pos:column="1">//       break;</comment>

    <default pos:line="18" pos:column="5">default:<pos:position pos:line="18" pos:column="13"/></default>
      <return pos:line="19" pos:column="7">return <expr><literal type="boolean" pos:line="19" pos:column="14">false<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></switch>

  }<pos:position pos:line="22" pos:column="4"/></block></then></if></elseif> <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><name pos:line="22" pos:column="14">key<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">&gt;=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="21">0x20<pos:position pos:line="22" pos:column="25"/></literal> <operator pos:line="22" pos:column="26">&amp;&amp;<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="29">key<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">&lt;<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="35">0x7F<pos:position pos:line="22" pos:column="39"/></literal></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">Base<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">::<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">insert<pos:position pos:line="23" pos:column="17"/></name></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">m_pos<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">++<pos:position pos:line="23" pos:column="25"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">key<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>

  }<pos:position pos:line="25" pos:column="4"/></block></then></if></elseif> <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
    <switch pos:line="26" pos:column="5">switch <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">key<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition> <block pos:line="26" pos:column="18">{
    <case pos:line="27" pos:column="5">case <expr><literal type="number" pos:line="27" pos:column="10">0x7F<pos:position pos:line="27" pos:column="14"/></literal></expr>:<pos:position pos:line="27" pos:column="15"/></case>
    <case pos:line="28" pos:column="5">case <expr><literal type="char" pos:line="28" pos:column="10">'h'<pos:position pos:line="28" pos:column="13"/></literal> <operator pos:line="28" pos:column="14">-<pos:position pos:line="28" pos:column="15"/></operator> <literal type="char" pos:line="28" pos:column="16">'a'<pos:position pos:line="28" pos:column="19"/></literal> <operator pos:line="28" pos:column="20">+<pos:position pos:line="28" pos:column="21"/></operator> <literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr>:<pos:position pos:line="28" pos:column="24"/></case> <comment type="line" pos:line="28" pos:column="25">// ^H</comment>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">KEY_BACKSPACE<pos:position pos:line="29" pos:column="23"/></name></expr>:<pos:position pos:line="29" pos:column="24"/></case>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">m_pos<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">!=<pos:position pos:line="30" pos:column="19"/></operator> <literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="31" pos:column="9">Base<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">::<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">erase<pos:position pos:line="31" pos:column="20"/></name></name><argument_list pos:line="31" pos:column="20">(<argument><expr><operator pos:line="31" pos:column="21">--<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">m_pos<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="30">1<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></then></if>

      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>

    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">KEY_DC<pos:position pos:line="35" pos:column="16"/></name></expr>:<pos:position pos:line="35" pos:column="17"/></case>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">m_pos<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">!=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">size<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">()<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="37" pos:column="9">Base<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">::<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">erase<pos:position pos:line="37" pos:column="20"/></name></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">m_pos<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="28">1<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt></block></then></if>

      <break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break>

    <case pos:line="41" pos:column="5">case <expr><literal type="number" pos:line="41" pos:column="10">0x02<pos:position pos:line="41" pos:column="14"/></literal></expr>:<pos:position pos:line="41" pos:column="15"/></case>
    <case pos:line="42" pos:column="5">case <expr><name pos:line="42" pos:column="10">KEY_LEFT<pos:position pos:line="42" pos:column="18"/></name></expr>:<pos:position pos:line="42" pos:column="19"/></case>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">m_pos<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">!=<pos:position pos:line="43" pos:column="19"/></operator> <literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr>)<pos:position pos:line="43" pos:column="22"/></condition><then pos:line="43" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="9">--<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">m_pos<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt></block></then></if>

      <break pos:line="46" pos:column="7">break;<pos:position pos:line="46" pos:column="13"/></break>

    <case pos:line="48" pos:column="5">case <expr><literal type="number" pos:line="48" pos:column="10">0x06<pos:position pos:line="48" pos:column="14"/></literal></expr>:<pos:position pos:line="48" pos:column="15"/></case>
    <case pos:line="49" pos:column="5">case <expr><name pos:line="49" pos:column="10">KEY_RIGHT<pos:position pos:line="49" pos:column="19"/></name></expr>:<pos:position pos:line="49" pos:column="20"/></case>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">m_pos<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">!=<pos:position pos:line="50" pos:column="19"/></operator> <call><name pos:line="50" pos:column="20">size<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">()<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="9">++<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">m_pos<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt></block></then></if>

      <break pos:line="53" pos:column="7">break;<pos:position pos:line="53" pos:column="13"/></break>

    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">KEY_HOME<pos:position pos:line="55" pos:column="18"/></name></expr>:<pos:position pos:line="55" pos:column="19"/></case>
      <expr_stmt><expr><name pos:line="56" pos:column="7">m_pos<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <literal type="number" pos:line="56" pos:column="15">0<pos:position pos:line="56" pos:column="16"/></literal></expr>;<pos:position pos:line="56" pos:column="17"/></expr_stmt>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>

    <case pos:line="59" pos:column="5">case <expr><name pos:line="59" pos:column="10">KEY_END<pos:position pos:line="59" pos:column="17"/></name></expr>:<pos:position pos:line="59" pos:column="18"/></case>
      <expr_stmt><expr><name pos:line="60" pos:column="7">m_pos<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">size<pos:position pos:line="60" pos:column="19"/></name><argument_list pos:line="60" pos:column="19">()<pos:position pos:line="60" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
      <break pos:line="61" pos:column="7">break;<pos:position pos:line="61" pos:column="13"/></break>

    <case pos:line="63" pos:column="5">case <expr><literal type="char" pos:line="63" pos:column="10">'u'<pos:position pos:line="63" pos:column="13"/></literal> <operator pos:line="63" pos:column="14">-<pos:position pos:line="63" pos:column="15"/></operator> <literal type="char" pos:line="63" pos:column="16">'a'<pos:position pos:line="63" pos:column="19"/></literal> <operator pos:line="63" pos:column="20">+<pos:position pos:line="63" pos:column="21"/></operator> <literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal></expr>:<pos:position pos:line="63" pos:column="24"/></case> <comment type="line" pos:line="63" pos:column="25">// ^U</comment>
      <expr_stmt><expr><call><name><name pos:line="64" pos:column="7">Base<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">::<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">erase<pos:position pos:line="64" pos:column="18"/></name></name><argument_list pos:line="64" pos:column="18">(<argument><expr><literal type="number" pos:line="64" pos:column="19">0<pos:position pos:line="64" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="22">m_pos<pos:position pos:line="64" pos:column="27"/></name></expr></argument>)<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">m_pos<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <literal type="number" pos:line="65" pos:column="15">0<pos:position pos:line="65" pos:column="16"/></literal></expr>;<pos:position pos:line="65" pos:column="17"/></expr_stmt>
      <break pos:line="66" pos:column="7">break;<pos:position pos:line="66" pos:column="13"/></break>

    <case pos:line="68" pos:column="5">case <expr><literal type="char" pos:line="68" pos:column="10">'k'<pos:position pos:line="68" pos:column="13"/></literal> <operator pos:line="68" pos:column="14">-<pos:position pos:line="68" pos:column="15"/></operator> <literal type="char" pos:line="68" pos:column="16">'a'<pos:position pos:line="68" pos:column="19"/></literal> <operator pos:line="68" pos:column="20">+<pos:position pos:line="68" pos:column="21"/></operator> <literal type="number" pos:line="68" pos:column="22">1<pos:position pos:line="68" pos:column="23"/></literal></expr>:<pos:position pos:line="68" pos:column="24"/></case> <comment type="line" pos:line="68" pos:column="25">// ^K</comment>
      <expr_stmt><expr><call><name><name pos:line="69" pos:column="7">Base<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">::<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">erase<pos:position pos:line="69" pos:column="18"/></name></name><argument_list pos:line="69" pos:column="18">(<argument><expr><name pos:line="69" pos:column="19">m_pos<pos:position pos:line="69" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="26">size<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">()<pos:position pos:line="69" pos:column="32"/></argument_list></call><operator pos:line="69" pos:column="32">-<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="33">m_pos<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
      <break pos:line="70" pos:column="7">break;<pos:position pos:line="70" pos:column="13"/></break>

    <case pos:line="72" pos:column="5">case <expr><literal type="number" pos:line="72" pos:column="10">0x1B<pos:position pos:line="72" pos:column="14"/></literal></expr>:<pos:position pos:line="72" pos:column="15"/></case>
      <expr_stmt><expr><name pos:line="73" pos:column="7">m_alt<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <literal type="boolean" pos:line="73" pos:column="15">true<pos:position pos:line="73" pos:column="19"/></literal></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>

      <break pos:line="75" pos:column="7">break;<pos:position pos:line="75" pos:column="13"/></break>

    <default pos:line="77" pos:column="5">default:<pos:position pos:line="77" pos:column="13"/></default>
      <return pos:line="78" pos:column="7">return <expr><literal type="boolean" pos:line="78" pos:column="14">false<pos:position pos:line="78" pos:column="19"/></literal></expr>;<pos:position pos:line="78" pos:column="20"/></return>
    }<pos:position pos:line="79" pos:column="6"/></block></switch>
  }<pos:position pos:line="80" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="82" pos:column="3">m_slotDirty<pos:position pos:line="82" pos:column="14"/></name><argument_list pos:line="82" pos:column="14">()<pos:position pos:line="82" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="17"/></expr_stmt>

  <return pos:line="84" pos:column="3">return <expr><literal type="boolean" pos:line="84" pos:column="10">true<pos:position pos:line="84" pos:column="14"/></literal></expr>;<pos:position pos:line="84" pos:column="15"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

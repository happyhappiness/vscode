<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_437.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CurlStack<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">perform<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list> <block pos:line="2" pos:column="22">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CURLMcode<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">code<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <do pos:line="5" pos:column="3">do <block pos:line="5" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">count<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">code<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">curl_multi_perform<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">CURLM<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator><operator pos:line="7" pos:column="38">)<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">m_handle<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="49">&amp;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="50">count<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">code<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&gt;<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
      <block type="pseudo"><throw pos:line="10" pos:column="7">throw <expr><call><name><name pos:line="10" pos:column="13">torrent<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">internal_error<pos:position pos:line="10" pos:column="36"/></name></name><argument_list pos:line="10" pos:column="36">(<argument><expr><literal type="string" pos:line="10" pos:column="37">"Error calling curl_multi_perform."<pos:position pos:line="10" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></throw></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">unsigned<pos:position pos:line="12" pos:column="18"/></name> <name pos:line="12" pos:column="19">int<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">count<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">!=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">size<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">()<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
      <comment type="line" pos:line="13" pos:column="7">// Done with some handles.</comment>
      <decl_stmt><decl><type><name pos:line="14" pos:column="7">int<pos:position pos:line="14" pos:column="10"/></name></type> <name pos:line="14" pos:column="11">t<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">CURLMsg<pos:position pos:line="15" pos:column="14"/></name><modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type> <name pos:line="15" pos:column="16">msg<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>

      <while pos:line="17" pos:column="7">while <condition pos:line="17" pos:column="13">(<expr><operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">msg<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">curl_multi_info_read<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><operator pos:line="17" pos:column="42">(<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">CURLM<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">*<pos:position pos:line="17" pos:column="49"/></operator><operator pos:line="17" pos:column="49">)<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">m_handle<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="60">&amp;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="61">t<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call><operator pos:line="17" pos:column="63">)<pos:position pos:line="17" pos:column="64"/></operator> <operator pos:line="17" pos:column="65">!=<pos:position pos:line="17" pos:column="67"/></operator> <name pos:line="17" pos:column="68">NULL<pos:position pos:line="17" pos:column="72"/></name></expr>)<pos:position pos:line="17" pos:column="73"/></condition> <block pos:line="17" pos:column="74">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">msg<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">msg<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">!=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">CURLMSG_DONE<pos:position pos:line="18" pos:column="37"/></name></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38">
          <block type="pseudo"><throw pos:line="19" pos:column="11">throw <expr><call><name><name pos:line="19" pos:column="17">torrent<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">::<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">internal_error<pos:position pos:line="19" pos:column="40"/></name></name><argument_list pos:line="19" pos:column="40">(<argument><expr><literal type="string" pos:line="19" pos:column="41">"CurlStack::perform() msg-&gt;msg != CURLMSG_DONE."<pos:position pos:line="19" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="91"/></throw></block></then></if>

        <decl_stmt><decl><type><name pos:line="21" pos:column="9">iterator<pos:position pos:line="21" pos:column="17"/></name></type> <name pos:line="21" pos:column="18">itr<pos:position pos:line="21" pos:column="21"/></name> <init pos:line="21" pos:column="22">= <expr><call><name><name pos:line="21" pos:column="24">std<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">::<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">find_if<pos:position pos:line="21" pos:column="36"/></name></name><argument_list pos:line="21" pos:column="36">(<argument><expr><call><name pos:line="21" pos:column="37">begin<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">()<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="46">end<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">()<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="53">rak<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">::<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">equal<pos:position pos:line="21" pos:column="63"/></name></name><argument_list pos:line="21" pos:column="63">(<argument><expr><name><name pos:line="21" pos:column="64">msg<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">-&gt;<pos:position pos:line="21" pos:column="72"/></operator><name pos:line="21" pos:column="69">easy_handle<pos:position pos:line="21" pos:column="80"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="82">std<pos:position pos:line="21" pos:column="85"/></name><operator pos:line="21" pos:column="85">::<pos:position pos:line="21" pos:column="87"/></operator><name pos:line="21" pos:column="87">mem_fun<pos:position pos:line="21" pos:column="94"/></name></name><argument_list pos:line="21" pos:column="94">(<argument><expr><operator pos:line="21" pos:column="95">&amp;<pos:position pos:line="21" pos:column="100"/></operator><name><name pos:line="21" pos:column="96">CurlGet<pos:position pos:line="21" pos:column="103"/></name><operator pos:line="21" pos:column="103">::<pos:position pos:line="21" pos:column="105"/></operator><name pos:line="21" pos:column="105">handle<pos:position pos:line="21" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="114"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="115"/></decl_stmt>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">itr<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">==<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">end<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">()<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26">
          <block type="pseudo"><throw pos:line="24" pos:column="11">throw <expr><call><name><name pos:line="24" pos:column="17">torrent<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">::<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">internal_error<pos:position pos:line="24" pos:column="40"/></name></name><argument_list pos:line="24" pos:column="40">(<argument><expr><literal type="string" pos:line="24" pos:column="41">"Could not find CurlGet with the right easy_handle."<pos:position pos:line="24" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="95"/></throw></block></then></if>
        
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">msg<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">data<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">result<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">==<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">CURLE_OK<pos:position pos:line="26" pos:column="41"/></name></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42">
          <block type="pseudo"><expr_stmt><expr><call><name><operator pos:line="27" pos:column="11">(<pos:position pos:line="27" pos:column="12"/></operator><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">itr<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">)<pos:position pos:line="27" pos:column="17"/></operator><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">signal_done<pos:position pos:line="27" pos:column="30"/></name></name><argument_list pos:line="27" pos:column="30">()<pos:position pos:line="27" pos:column="32"/></argument_list></call><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator></expr></expr_stmt></block></then></if><emit pos:line="27" pos:column="33">emit<expr><operator pos:line="27" pos:column="37">(<pos:position pos:line="27" pos:column="38"/></operator><operator pos:line="27" pos:column="38">)<pos:position pos:line="27" pos:column="39"/></operator></expr>;<pos:position pos:line="27" pos:column="40"/></emit>
        <else pos:line="28" pos:column="9">else
          <block type="pseudo"><expr_stmt><expr><call><name><operator pos:line="29" pos:column="11">(<pos:position pos:line="29" pos:column="12"/></operator><operator pos:line="29" pos:column="12">*<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">itr<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">)<pos:position pos:line="29" pos:column="17"/></operator><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">signal_failed<pos:position pos:line="29" pos:column="32"/></name></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call><operator pos:line="29" pos:column="34">.<pos:position pos:line="29" pos:column="35"/></operator></expr></expr_stmt></block></else><emit pos:line="29" pos:column="35">emit<expr><operator pos:line="29" pos:column="39">(<pos:position pos:line="29" pos:column="40"/></operator><call><name pos:line="29" pos:column="40">curl_easy_strerror<pos:position pos:line="29" pos:column="58"/></name><argument_list pos:line="29" pos:column="58">(<argument><expr><name><name pos:line="29" pos:column="59">msg<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">-&gt;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="64">data<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">.<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="69">result<pos:position pos:line="29" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call><operator pos:line="29" pos:column="76">)<pos:position pos:line="29" pos:column="77"/></operator></expr>;<pos:position pos:line="29" pos:column="78"/></emit>
      }<pos:position pos:line="30" pos:column="8"/></block></while>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

  }<pos:position pos:line="33" pos:column="4"/></block> while <condition pos:line="33" pos:column="11">(<expr><name pos:line="33" pos:column="12">code<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">CURLM_CALL_MULTI_PERFORM<pos:position pos:line="33" pos:column="44"/></name></expr>)<pos:position pos:line="33" pos:column="45"/></condition>;<pos:position pos:line="33" pos:column="46"/></do>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

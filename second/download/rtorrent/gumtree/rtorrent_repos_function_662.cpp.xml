<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_662.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Canvas<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">print_attributes<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">unsigned<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">x<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">unsigned<pos:position pos:line="2" pos:column="50"/></name> <name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">y<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <name pos:line="2" pos:column="64">char<pos:position pos:line="2" pos:column="68"/></name><modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type> <name pos:line="2" pos:column="70">first<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="77">const<pos:position pos:line="2" pos:column="82"/></specifier> <name pos:line="2" pos:column="83">char<pos:position pos:line="2" pos:column="87"/></name><modifier pos:line="2" pos:column="87">*<pos:position pos:line="2" pos:column="88"/></modifier></type> <name pos:line="2" pos:column="89">last<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="95">const<pos:position pos:line="2" pos:column="100"/></specifier> <name pos:line="2" pos:column="101">attributes_list<pos:position pos:line="2" pos:column="116"/></name><modifier pos:line="2" pos:column="116">*<pos:position pos:line="2" pos:column="117"/></modifier></type> <name pos:line="2" pos:column="118">attributes<pos:position pos:line="2" pos:column="128"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="129"/></parameter_list> <block pos:line="2" pos:column="130">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">move<pos:position pos:line="3" pos:column="7"/></name><argument_list pos:line="3" pos:column="7">(<argument><expr><name pos:line="3" pos:column="8">x<pos:position pos:line="3" pos:column="9"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="11">y<pos:position pos:line="3" pos:column="12"/></name></expr></argument>)<pos:position pos:line="3" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="14"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">attributes_list<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">::<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">const_iterator<pos:position pos:line="5" pos:column="34"/></name></name></type> <name pos:line="5" pos:column="35">attrItr<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><call><name><name pos:line="5" pos:column="45">attributes<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">-&gt;<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="57">begin<pos:position pos:line="5" pos:column="62"/></name></name><argument_list pos:line="5" pos:column="62">()<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">Attributes<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">current<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">Attributes<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">first<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="42">Attributes<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">::<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">a_normal<pos:position pos:line="6" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="64">Attributes<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">::<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="76">color_default<pos:position pos:line="6" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="91"/></decl_stmt>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">first<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">!=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">last<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition> <block pos:line="8" pos:column="25">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">attrItr<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">!=<pos:position pos:line="9" pos:column="19"/></operator> <call><name><name pos:line="9" pos:column="20">attributes<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">end<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">()<pos:position pos:line="9" pos:column="37"/></argument_list></call> <operator pos:line="9" pos:column="38">&amp;&amp;<pos:position pos:line="9" pos:column="48"/></operator> <name pos:line="9" pos:column="41">first<pos:position pos:line="9" pos:column="46"/></name> <operator pos:line="9" pos:column="47">&gt;=<pos:position pos:line="9" pos:column="52"/></operator> <call><name><name pos:line="9" pos:column="50">attrItr<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">-&gt;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="59">position<pos:position pos:line="9" pos:column="67"/></name></name><argument_list pos:line="9" pos:column="67">()<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="70"/></condition><then pos:line="9" pos:column="70">
      <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="7">current<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">attrItr<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">++<pos:position pos:line="10" pos:column="27"/></operator></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">waddch<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">m_window<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">first<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">++<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="31">|<pos:position pos:line="12" pos:column="32"/></operator> <call><name><name pos:line="12" pos:column="33">current<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">.<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">attributes<pos:position pos:line="12" pos:column="51"/></name></name><argument_list pos:line="12" pos:column="51">()<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></while>

  <comment type="line" pos:line="15" pos:column="3">// Reset the color.</comment>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

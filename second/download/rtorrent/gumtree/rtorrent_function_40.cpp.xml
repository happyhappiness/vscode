<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_40.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowLog<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">redraw<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <block pos:line="2" pos:column="21">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">m_nextDraw<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">=<pos:position pos:line="3" pos:column="15"/></operator> <call><name><name pos:line="3" pos:column="16">utils<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">::<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">Timer<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">::<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">max<pos:position pos:line="3" pos:column="33"/></name></name><argument_list pos:line="3" pos:column="33">()<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="5" pos:column="3">m_canvas<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">erase<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">pos<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <comment type="line" pos:line="9" pos:column="3">//m_canvas-&gt;print(std::max(0, (int)m_canvas-&gt;get_width() / 2 - 5), pos++, "*** Log ***");</comment>
  <expr_stmt><expr><call><name><name pos:line="10" pos:column="3">m_canvas<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">print<pos:position pos:line="10" pos:column="18"/></name></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="25">"___"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><decl><type><name><name pos:line="12" pos:column="8">core<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">::<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">Log<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">::<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">iterator<pos:position pos:line="12" pos:column="27"/></name></name></type> <name pos:line="12" pos:column="28">itr<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><call><name><name pos:line="12" pos:column="34">m_log<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">begin<pos:position pos:line="12" pos:column="46"/></name></name><argument_list pos:line="12" pos:column="46">()<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="50">end<pos:position pos:line="12" pos:column="53"/></name> <init pos:line="12" pos:column="54">= <expr><call><name pos:line="12" pos:column="56">find_older<pos:position pos:line="12" pos:column="66"/></name><argument_list pos:line="12" pos:column="66">()<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="69"/></init> <condition><expr><name pos:line="12" pos:column="70">itr<pos:position pos:line="12" pos:column="73"/></name> <operator pos:line="12" pos:column="74">!=<pos:position pos:line="12" pos:column="76"/></operator> <name pos:line="12" pos:column="77">end<pos:position pos:line="12" pos:column="80"/></name> <operator pos:line="12" pos:column="81">&amp;&amp;<pos:position pos:line="12" pos:column="91"/></operator> <name pos:line="12" pos:column="84">pos<pos:position pos:line="12" pos:column="87"/></name> <operator pos:line="12" pos:column="88">&lt;<pos:position pos:line="12" pos:column="92"/></operator> <call><name><name pos:line="12" pos:column="90">m_canvas<pos:position pos:line="12" pos:column="98"/></name><operator pos:line="12" pos:column="98">-&gt;<pos:position pos:line="12" pos:column="103"/></operator><name pos:line="12" pos:column="100">get_height<pos:position pos:line="12" pos:column="110"/></name></name><argument_list pos:line="12" pos:column="110">()<pos:position pos:line="12" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="113"/></condition> <incr><expr><operator pos:line="12" pos:column="114">++<pos:position pos:line="12" pos:column="116"/></operator><name pos:line="12" pos:column="116">itr<pos:position pos:line="12" pos:column="119"/></name></expr></incr>)<pos:position pos:line="12" pos:column="120"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="5">m_canvas<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">print<pos:position pos:line="13" pos:column="20"/></name></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">pos<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">++<pos:position pos:line="13" pos:column="29"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"(%s) %s"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="14" pos:column="21">print_hhmmss<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name><name pos:line="14" pos:column="34">itr<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">first<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call><operator pos:line="14" pos:column="45">.<pos:position pos:line="14" pos:column="46"/></operator><call><name pos:line="14" pos:column="46">c_str<pos:position pos:line="14" pos:column="51"/></name><argument_list pos:line="14" pos:column="51">()<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr></argument>,
		    <argument><expr><call><name><name pos:line="15" pos:column="21">itr<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">second<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">.<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">c_str<pos:position pos:line="15" pos:column="38"/></name></name><argument_list pos:line="15" pos:column="38">()<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt></block></for>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_589.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Manager<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">receive_hashing_changed<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list> <block pos:line="2" pos:column="36">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">bool<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">foundHashing<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name><name pos:line="3" pos:column="23">std<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">::<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">find_if<pos:position pos:line="3" pos:column="35"/></name></name><argument_list pos:line="3" pos:column="35">(<argument><expr><call><name><name pos:line="3" pos:column="36">m_hashingView<pos:position pos:line="3" pos:column="49"/></name><operator pos:line="3" pos:column="49">-&gt;<pos:position pos:line="3" pos:column="54"/></operator><name pos:line="3" pos:column="51">begin_visible<pos:position pos:line="3" pos:column="64"/></name></name><argument_list pos:line="3" pos:column="64">()<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3" pos:column="68">m_hashingView<pos:position pos:line="3" pos:column="81"/></name><operator pos:line="3" pos:column="81">-&gt;<pos:position pos:line="3" pos:column="86"/></operator><name pos:line="3" pos:column="83">end_visible<pos:position pos:line="3" pos:column="94"/></name></name><argument_list pos:line="3" pos:column="94">()<pos:position pos:line="3" pos:column="96"/></argument_list></call></expr></argument>,
                                   <argument><expr><call><name><name pos:line="4" pos:column="36">std<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">::<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">mem_fun<pos:position pos:line="4" pos:column="48"/></name></name><argument_list pos:line="4" pos:column="48">(<argument><expr><operator pos:line="4" pos:column="49">&amp;<pos:position pos:line="4" pos:column="54"/></operator><name><name pos:line="4" pos:column="50">Download<pos:position pos:line="4" pos:column="58"/></name><operator pos:line="4" pos:column="58">::<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="60">is_hash_checking<pos:position pos:line="4" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="78"/></argument_list></call> <operator pos:line="4" pos:column="79">!=<pos:position pos:line="4" pos:column="81"/></operator> <call><name><name pos:line="4" pos:column="82">m_hashingView<pos:position pos:line="4" pos:column="95"/></name><operator pos:line="4" pos:column="95">-&gt;<pos:position pos:line="4" pos:column="100"/></operator><name pos:line="4" pos:column="97">end_visible<pos:position pos:line="4" pos:column="108"/></name></name><argument_list pos:line="4" pos:column="108">()<pos:position pos:line="4" pos:column="110"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="111"/></decl_stmt>
  
  <comment type="line" pos:line="6" pos:column="3">// Try quick hashing all those with hashing == initial, set them to</comment>
  <comment type="line" pos:line="7" pos:column="3">// something else when failed.</comment>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><decl><type><name><name pos:line="8" pos:column="8">View<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">iterator<pos:position pos:line="8" pos:column="22"/></name></name></type> <name pos:line="8" pos:column="23">itr<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name><name pos:line="8" pos:column="29">m_hashingView<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">begin_visible<pos:position pos:line="8" pos:column="57"/></name></name><argument_list pos:line="8" pos:column="57">()<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="61">last<pos:position pos:line="8" pos:column="65"/></name> <init pos:line="8" pos:column="66">= <expr><call><name><name pos:line="8" pos:column="68">m_hashingView<pos:position pos:line="8" pos:column="81"/></name><operator pos:line="8" pos:column="81">-&gt;<pos:position pos:line="8" pos:column="86"/></operator><name pos:line="8" pos:column="83">end_visible<pos:position pos:line="8" pos:column="94"/></name></name><argument_list pos:line="8" pos:column="94">()<pos:position pos:line="8" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="97"/></init> <condition><expr><name pos:line="8" pos:column="98">itr<pos:position pos:line="8" pos:column="101"/></name> <operator pos:line="8" pos:column="102">!=<pos:position pos:line="8" pos:column="104"/></operator> <name pos:line="8" pos:column="105">last<pos:position pos:line="8" pos:column="109"/></name></expr>;<pos:position pos:line="8" pos:column="110"/></condition> <incr><expr><operator pos:line="8" pos:column="111">++<pos:position pos:line="8" pos:column="113"/></operator><name pos:line="8" pos:column="113">itr<pos:position pos:line="8" pos:column="116"/></name></expr></incr>)<pos:position pos:line="8" pos:column="117"/></control> <block pos:line="8" pos:column="118">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">itr<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">)<pos:position pos:line="9" pos:column="15"/></operator><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">is_hash_checked<pos:position pos:line="9" pos:column="32"/></name></name><argument_list pos:line="9" pos:column="32">()<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">
      <block type="pseudo"><throw pos:line="10" pos:column="7">throw <expr><call><name><name pos:line="10" pos:column="13">torrent<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">internal_error<pos:position pos:line="10" pos:column="36"/></name></name><argument_list pos:line="10" pos:column="36">(<argument><expr><literal type="string" pos:line="10" pos:column="37">"core::Manager::receive_hashing_changed() (*itr)-&gt;is_hash_checked()."<pos:position pos:line="10" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="108"/></throw></block></then></if>
  
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">itr<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">is_hash_checking<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">()<pos:position pos:line="12" pos:column="35"/></argument_list></call> <operator pos:line="12" pos:column="36">||<pos:position pos:line="12" pos:column="38"/></operator> <call><name><operator pos:line="12" pos:column="39">(<pos:position pos:line="12" pos:column="40"/></operator><operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">itr<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">is_hash_failed<pos:position pos:line="12" pos:column="61"/></name></name><argument_list pos:line="12" pos:column="61">()<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64">
      <block type="pseudo"><continue pos:line="13" pos:column="7">continue;<pos:position pos:line="13" pos:column="16"/></continue></block></then></if>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">bool<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">tryQuick<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">=
      <expr><call><name><name pos:line="16" pos:column="7">rpc<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">::<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">call_command_d_value<pos:position pos:line="16" pos:column="32"/></name></name><argument_list pos:line="16" pos:column="32">(<argument><expr><literal type="string" pos:line="16" pos:column="33">"d.get_hashing"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">*<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">itr<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call> <operator pos:line="16" pos:column="56">==<pos:position pos:line="16" pos:column="58"/></operator> <name><name pos:line="16" pos:column="59">Download<pos:position pos:line="16" pos:column="67"/></name><operator pos:line="16" pos:column="67">::<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="69">variable_hashing_initial<pos:position pos:line="16" pos:column="93"/></name></name> <operator pos:line="16" pos:column="94">&amp;&amp;<pos:position pos:line="16" pos:column="104"/></operator>
      <call><name><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><operator pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">itr<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">)<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">download<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">()<pos:position pos:line="17" pos:column="25"/></argument_list></call><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><call><name pos:line="17" pos:column="27">file_list<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">()<pos:position pos:line="17" pos:column="38"/></argument_list></call><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><call><name pos:line="17" pos:column="40">bitfield<pos:position pos:line="17" pos:column="48"/></name><argument_list pos:line="17" pos:column="48">()<pos:position pos:line="17" pos:column="50"/></argument_list></call><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><call><name pos:line="17" pos:column="52">empty<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">()<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="60"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">tryQuick<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&amp;&amp;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="22">foundHashing<pos:position pos:line="19" pos:column="34"/></name></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35">
      <block type="pseudo"><continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue></block></then></if>

    <try pos:line="22" pos:column="5">try <block pos:line="22" pos:column="9">{
      <expr_stmt><expr><call><name><name pos:line="23" pos:column="7">m_downloadList<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">open_throw<pos:position pos:line="23" pos:column="33"/></name></name><argument_list pos:line="23" pos:column="33">(<argument><expr><operator pos:line="23" pos:column="34">*<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">itr<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>

      <comment type="line" pos:line="25" pos:column="7">// Since the bitfield is allocated on loading of resume load or</comment>
      <comment type="line" pos:line="26" pos:column="7">// hash start, and unallocated on close, we know that if it it</comment>
      <comment type="line" pos:line="27" pos:column="7">// not empty then we have already loaded any existing resume</comment>
      <comment type="line" pos:line="28" pos:column="7">// data.</comment>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><call><name><operator pos:line="29" pos:column="11">(<pos:position pos:line="29" pos:column="12"/></operator><operator pos:line="29" pos:column="12">*<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">itr<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">)<pos:position pos:line="29" pos:column="17"/></operator><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">download<pos:position pos:line="29" pos:column="27"/></name></name><argument_list pos:line="29" pos:column="27">()<pos:position pos:line="29" pos:column="29"/></argument_list></call><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><call><name pos:line="29" pos:column="31">file_list<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">()<pos:position pos:line="29" pos:column="42"/></argument_list></call><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><call><name pos:line="29" pos:column="44">bitfield<pos:position pos:line="29" pos:column="52"/></name><argument_list pos:line="29" pos:column="52">()<pos:position pos:line="29" pos:column="54"/></argument_list></call><operator pos:line="29" pos:column="54">-&gt;<pos:position pos:line="29" pos:column="59"/></operator><call><name pos:line="29" pos:column="56">empty<pos:position pos:line="29" pos:column="61"/></name><argument_list pos:line="29" pos:column="61">()<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="9">torrent<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">::<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">resume_load_progress<pos:position pos:line="30" pos:column="38"/></name></name><argument_list pos:line="30" pos:column="38">(<argument><expr><operator pos:line="30" pos:column="39">*<pos:position pos:line="30" pos:column="40"/></operator><call><name><operator pos:line="30" pos:column="40">(<pos:position pos:line="30" pos:column="41"/></operator><operator pos:line="30" pos:column="41">*<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">itr<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">)<pos:position pos:line="30" pos:column="46"/></operator><operator pos:line="30" pos:column="46">-&gt;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="48">download<pos:position pos:line="30" pos:column="56"/></name></name><argument_list pos:line="30" pos:column="56">()<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name><operator pos:line="30" pos:column="60">(<pos:position pos:line="30" pos:column="61"/></operator><operator pos:line="30" pos:column="61">*<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="62">itr<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">)<pos:position pos:line="30" pos:column="66"/></operator><operator pos:line="30" pos:column="66">-&gt;<pos:position pos:line="30" pos:column="71"/></operator><name pos:line="30" pos:column="68">download<pos:position pos:line="30" pos:column="76"/></name></name><argument_list pos:line="30" pos:column="76">()<pos:position pos:line="30" pos:column="78"/></argument_list></call><operator pos:line="30" pos:column="78">-&gt;<pos:position pos:line="30" pos:column="83"/></operator><call><name pos:line="30" pos:column="80">bencode<pos:position pos:line="30" pos:column="87"/></name><argument_list pos:line="30" pos:column="87">()<pos:position pos:line="30" pos:column="89"/></argument_list></call><operator pos:line="30" pos:column="89">-&gt;<pos:position pos:line="30" pos:column="94"/></operator><call><name pos:line="30" pos:column="91">get_key<pos:position pos:line="30" pos:column="98"/></name><argument_list pos:line="30" pos:column="98">(<argument><expr><literal type="string" pos:line="30" pos:column="99">"libtorrent_resume"<pos:position pos:line="30" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="121"/></expr_stmt></block></then></if>

      <if pos:line="32" pos:column="7">if <condition pos:line="32" pos:column="10">(<expr><name pos:line="32" pos:column="11">tryQuick<pos:position pos:line="32" pos:column="19"/></name></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20"> <block pos:line="32" pos:column="21">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><operator pos:line="33" pos:column="14">*<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">itr<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">)<pos:position pos:line="33" pos:column="19"/></operator><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">download<pos:position pos:line="33" pos:column="29"/></name></name><argument_list pos:line="33" pos:column="29">()<pos:position pos:line="33" pos:column="31"/></argument_list></call><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><call><name pos:line="33" pos:column="33">hash_check<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><literal type="boolean" pos:line="33" pos:column="44">true<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="50"/></condition><then pos:line="33" pos:column="50">
          <block type="pseudo"><continue pos:line="34" pos:column="11">continue;<pos:position pos:line="34" pos:column="20"/></continue></block></then></if>

        <expr_stmt><expr><call><name><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">itr<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">)<pos:position pos:line="36" pos:column="15"/></operator><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">download<pos:position pos:line="36" pos:column="25"/></name></name><argument_list pos:line="36" pos:column="25">()<pos:position pos:line="36" pos:column="27"/></argument_list></call><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><call><name pos:line="36" pos:column="29">hash_stop<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">()<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">foundHashing<pos:position pos:line="38" pos:column="25"/></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26"> <block pos:line="38" pos:column="27">{
          <expr_stmt><expr><call><name><name pos:line="39" pos:column="11">rpc<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">::<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">call_command_d_set_value<pos:position pos:line="39" pos:column="40"/></name></name><argument_list pos:line="39" pos:column="40">(<argument><expr><literal type="string" pos:line="39" pos:column="41">"d.set_hashing"<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="58">*<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">itr<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="64">Download<pos:position pos:line="39" pos:column="72"/></name><operator pos:line="39" pos:column="72">::<pos:position pos:line="39" pos:column="74"/></operator><name pos:line="39" pos:column="74">variable_hashing_rehash<pos:position pos:line="39" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="99"/></expr_stmt>
          <continue pos:line="40" pos:column="11">continue;<pos:position pos:line="40" pos:column="20"/></continue>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name><operator pos:line="44" pos:column="7">(<pos:position pos:line="44" pos:column="8"/></operator><operator pos:line="44" pos:column="8">*<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">itr<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">)<pos:position pos:line="44" pos:column="13"/></operator><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">download<pos:position pos:line="44" pos:column="23"/></name></name><argument_list pos:line="44" pos:column="23">()<pos:position pos:line="44" pos:column="25"/></argument_list></call><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><call><name pos:line="44" pos:column="27">hash_check<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><literal type="boolean" pos:line="44" pos:column="38">false<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">foundHashing<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <literal type="boolean" pos:line="45" pos:column="22">true<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

    }<pos:position pos:line="47" pos:column="6"/></block> <catch pos:line="47" pos:column="7">catch <parameter_list pos:line="47" pos:column="13">(<parameter><decl><type><name><name pos:line="47" pos:column="14">torrent<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">::<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">local_error<pos:position pos:line="47" pos:column="34"/></name></name><modifier pos:line="47" pos:column="34">&amp;<pos:position pos:line="47" pos:column="39"/></modifier></type> <name pos:line="47" pos:column="36">e<pos:position pos:line="47" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="47" pos:column="38"/></parameter_list> <block pos:line="47" pos:column="39">{
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">tryQuick<pos:position pos:line="48" pos:column="19"/></name></expr>)<pos:position pos:line="48" pos:column="20"/></condition><then pos:line="48" pos:column="20"> <block pos:line="48" pos:column="21">{
        <comment type="line" pos:line="49" pos:column="9">// Make sure we don't repeat the quick hashing.</comment>
        <expr_stmt><expr><call><name><name pos:line="50" pos:column="9">rpc<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">::<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">call_command_d_set_value<pos:position pos:line="50" pos:column="38"/></name></name><argument_list pos:line="50" pos:column="38">(<argument><expr><literal type="string" pos:line="50" pos:column="39">"d.set_hashing"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="56">*<pos:position pos:line="50" pos:column="57"/></operator><name pos:line="50" pos:column="57">itr<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="62">Download<pos:position pos:line="50" pos:column="70"/></name><operator pos:line="50" pos:column="70">::<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="72">variable_hashing_rehash<pos:position pos:line="50" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="97"/></expr_stmt>

      }<pos:position pos:line="52" pos:column="8"/></block></then> <else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
        <expr_stmt><expr><call><name><operator pos:line="53" pos:column="9">(<pos:position pos:line="53" pos:column="10"/></operator><operator pos:line="53" pos:column="10">*<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">itr<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">)<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">set_hash_failed<pos:position pos:line="53" pos:column="32"/></name></name><argument_list pos:line="53" pos:column="32">(<argument><expr><literal type="boolean" pos:line="53" pos:column="33">true<pos:position pos:line="53" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">push_log<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><call><name><name pos:line="54" pos:column="18">e<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">what<pos:position pos:line="54" pos:column="24"/></name></name><argument_list pos:line="54" pos:column="24">()<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></else></if>
    }<pos:position pos:line="56" pos:column="6"/></block></catch></try>
  }<pos:position pos:line="57" pos:column="4"/></block></for>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

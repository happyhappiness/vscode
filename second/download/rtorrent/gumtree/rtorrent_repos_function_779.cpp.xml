<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_779.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Lockfile<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">unlock<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list> <block pos:line="2" pos:column="20">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">m_locked<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">=<pos:position pos:line="3" pos:column="13"/></operator> <literal type="boolean" pos:line="3" pos:column="14">false<pos:position pos:line="3" pos:column="19"/></literal></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name><name pos:line="5" pos:column="7">m_path<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">.<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">empty<pos:position pos:line="5" pos:column="19"/></name></name><argument_list pos:line="5" pos:column="19">()<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><literal type="boolean" pos:line="6" pos:column="12">true<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then>
  <else pos:line="7" pos:column="3">else
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><call><name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">unlink<pos:position pos:line="8" pos:column="20"/></name></name><argument_list pos:line="8" pos:column="20">(<argument><expr><call><name><name pos:line="8" pos:column="21">m_path<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">c_str<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">()<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call> <operator pos:line="8" pos:column="37">!=<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="40">-<pos:position pos:line="8" pos:column="41"/></operator><literal type="number" pos:line="8" pos:column="41">1<pos:position pos:line="8" pos:column="42"/></literal></expr>;<pos:position pos:line="8" pos:column="43"/></return></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_240.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">*<pos:position pos:line="1" pos:column="6"/></modifier></type>
<name><name pos:line="2" pos:column="1">TextElementList<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">print<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name><modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">first<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name><modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">last<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">Canvas<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name pos:line="2" pos:column="57">attributes_list<pos:position pos:line="2" pos:column="72"/></name></name><modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type> <name pos:line="2" pos:column="74">attributes<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="86">void<pos:position pos:line="2" pos:column="90"/></name><modifier pos:line="2" pos:column="90">*<pos:position pos:line="2" pos:column="91"/></modifier></type> <name pos:line="2" pos:column="92">object<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="99"/></parameter_list> <block pos:line="2" pos:column="100">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">column<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><ternary><condition><expr><name pos:line="3" pos:column="16">m_columnWidth<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">!=<pos:position pos:line="3" pos:column="32"/></operator> <name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr> ?<pos:position pos:line="3" pos:column="39"/></condition><then pos:line="3" pos:column="39"> <expr><name pos:line="3" pos:column="40">m_column<pos:position pos:line="3" pos:column="48"/></name></expr> <pos:position pos:line="3" pos:column="49"/></then><else pos:line="3" pos:column="49">: <expr><literal type="number" pos:line="3" pos:column="51">0<pos:position pos:line="3" pos:column="52"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>

  <comment type="line" pos:line="5" pos:column="3">// Call print for each element even if first == last so that any</comment>
  <comment type="line" pos:line="6" pos:column="3">// attributes gets added to the list.</comment>
  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init><decl><type><name pos:line="7" pos:column="8">iterator<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">itr<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><call><name pos:line="7" pos:column="23">begin<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">()<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></init> <condition><expr><name pos:line="7" pos:column="32">itr<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">!=<pos:position pos:line="7" pos:column="38"/></operator> <call><name pos:line="7" pos:column="39">end<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">()<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></condition> <incr><expr><operator pos:line="7" pos:column="46">++<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">itr<pos:position pos:line="7" pos:column="51"/></name></expr></incr>)<pos:position pos:line="7" pos:column="52"/></control>
    <block type="pseudo"><if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">column<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">--<pos:position pos:line="8" pos:column="17"/></operator> <operator pos:line="8" pos:column="18">&gt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">char<pos:position pos:line="9" pos:column="11"/></name><modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type> <name pos:line="9" pos:column="13">columnEnd<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><call><name><name pos:line="9" pos:column="25">std<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">::<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">min<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">last<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">first<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">+<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">*<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">m_columnWidth<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="64"/></decl_stmt>

      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name><name pos:line="11" pos:column="11">columnEnd<pos:position pos:line="11" pos:column="20"/></name> <argument_list type="generic" pos:line="11" pos:column="21">&lt; <argument><expr><name pos:line="11" pos:column="23">first<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">||<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">columnEnd<pos:position pos:line="11" pos:column="41"/></name></expr></argument> &gt;<pos:position pos:line="11" pos:column="46"/></argument_list></name> <name pos:line="11" pos:column="44">last<pos:position pos:line="11" pos:column="48"/></name></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49">
        <block type="pseudo"><throw pos:line="12" pos:column="9">throw <expr><call><name><name pos:line="12" pos:column="15">torrent<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">::<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">client_error<pos:position pos:line="12" pos:column="36"/></name></name><argument_list pos:line="12" pos:column="36">(<argument><expr><literal type="string" pos:line="12" pos:column="37">"TextElementList::print(...) columnEnd &lt; first || columnEnd &gt; last."<pos:position pos:line="12" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="107"/></throw></block></then></if>

      <expr_stmt><expr><name pos:line="14" pos:column="7">first<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name><operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><operator pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">itr<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">print<pos:position pos:line="14" pos:column="28"/></name></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">first<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">columnEnd<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">attributes<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">object<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>

      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">first<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&gt;<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="19">columnEnd<pos:position pos:line="16" pos:column="28"/></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
        <block type="pseudo"><throw pos:line="17" pos:column="9">throw <expr><call><name><name pos:line="17" pos:column="15">torrent<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">::<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">client_error<pos:position pos:line="17" pos:column="36"/></name></name><argument_list pos:line="17" pos:column="36">(<argument><expr><literal type="string" pos:line="17" pos:column="37">"TextElementList::print(...) first &gt; columnEnd."<pos:position pos:line="17" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="87"/></throw></block></then></if>

      <expr_stmt><expr><call><name><name pos:line="19" pos:column="7">std<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">::<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">memset<pos:position pos:line="19" pos:column="18"/></name></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">first<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="26">' '<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">columnEnd<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">-<pos:position pos:line="19" pos:column="42"/></operator> <name pos:line="19" pos:column="43">first<pos:position pos:line="19" pos:column="48"/></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name pos:line="20" pos:column="7">first<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">columnEnd<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>

    }<pos:position pos:line="22" pos:column="6"/></block></then> <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{
      <expr_stmt><expr><name pos:line="23" pos:column="7">first<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name><operator pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></operator><operator pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">itr<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">print<pos:position pos:line="23" pos:column="28"/></name></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">first<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">last<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">attributes<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">object<pos:position pos:line="23" pos:column="60"/></name></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if></block></for>

  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">first<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

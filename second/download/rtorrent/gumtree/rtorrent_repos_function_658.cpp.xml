<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_658.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">extent_type<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">max_length<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">()<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
    <return pos:line="2" pos:column="5">return <expr><call><name><name pos:line="2" pos:column="12">std<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">max<pos:position pos:line="2" pos:column="20"/></name></name><argument_list pos:line="2" pos:column="20">(<argument><expr><ternary><condition><expr><name pos:line="2" pos:column="21">m_branch1<pos:position pos:line="2" pos:column="30"/></name> <operator pos:line="2" pos:column="31">!=<pos:position pos:line="2" pos:column="33"/></operator> <name pos:line="2" pos:column="34">NULL<pos:position pos:line="2" pos:column="38"/></name></expr> ?<pos:position pos:line="2" pos:column="40"/></condition><then pos:line="2" pos:column="40"> <expr><call><name><name pos:line="2" pos:column="41">m_branch1<pos:position pos:line="2" pos:column="50"/></name><operator pos:line="2" pos:column="50">-&gt;<pos:position pos:line="2" pos:column="55"/></operator><name pos:line="2" pos:column="52">max_length<pos:position pos:line="2" pos:column="62"/></name></name><argument_list pos:line="2" pos:column="62">()<pos:position pos:line="2" pos:column="64"/></argument_list></call></expr> <pos:position pos:line="2" pos:column="65"/></then><else pos:line="2" pos:column="65">: <expr><literal type="number" pos:line="2" pos:column="67">0<pos:position pos:line="2" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
                    <argument><expr><ternary><condition><expr><name pos:line="3" pos:column="21">m_branch2<pos:position pos:line="3" pos:column="30"/></name> <operator pos:line="3" pos:column="31">!=<pos:position pos:line="3" pos:column="33"/></operator> <name pos:line="3" pos:column="34">NULL<pos:position pos:line="3" pos:column="38"/></name></expr> ?<pos:position pos:line="3" pos:column="40"/></condition><then pos:line="3" pos:column="40"> <expr><call><name><name pos:line="3" pos:column="41">m_branch2<pos:position pos:line="3" pos:column="50"/></name><operator pos:line="3" pos:column="50">-&gt;<pos:position pos:line="3" pos:column="55"/></operator><name pos:line="3" pos:column="52">max_length<pos:position pos:line="3" pos:column="62"/></name></name><argument_list pos:line="3" pos:column="62">()<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr> <pos:position pos:line="3" pos:column="65"/></then><else pos:line="3" pos:column="65">: <expr><literal type="number" pos:line="3" pos:column="67">0<pos:position pos:line="3" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="3" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="70"/></return>
  }<pos:position pos:line="4" pos:column="4"/></block></function></unit>

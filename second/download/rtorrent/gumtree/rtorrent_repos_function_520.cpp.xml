<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_520.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">HttpQueue<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">iterator<pos:position pos:line="1" pos:column="20"/></name></name></type>
<name><name pos:line="2" pos:column="1">HttpQueue<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">insert<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">std<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">string<pos:position pos:line="2" pos:column="36"/></name></name><modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="38">url<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">std<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">iostream<pos:position pos:line="2" pos:column="56"/></name></name><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name pos:line="2" pos:column="58">s<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list> <block pos:line="2" pos:column="61">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">std<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">::<pos:position pos:line="3" pos:column="8"/></operator><name><name pos:line="3" pos:column="8">auto_ptr<pos:position pos:line="3" pos:column="16"/></name><argument_list type="generic" pos:line="3" pos:column="16">&lt;<argument><expr><name pos:line="3" pos:column="17">CurlGet<pos:position pos:line="3" pos:column="24"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="28"/></argument_list></name></name></type> <name pos:line="3" pos:column="26">h<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><call><name pos:line="3" pos:column="28">m_slotFactory<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">()<pos:position pos:line="3" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
  
  <expr_stmt><expr><call><name><name pos:line="5" pos:column="3">h<pos:position pos:line="5" pos:column="4"/></name><operator pos:line="5" pos:column="4">-&gt;<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="6">set_url<pos:position pos:line="5" pos:column="13"/></name></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">url<pos:position pos:line="5" pos:column="17"/></name></expr></argument>)<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="6" pos:column="3">h<pos:position pos:line="6" pos:column="4"/></name><operator pos:line="6" pos:column="4">-&gt;<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="6">set_stream<pos:position pos:line="6" pos:column="16"/></name></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name></expr></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">iterator<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">itr<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><call><name><name pos:line="8" pos:column="18">Base<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">::<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">insert<pos:position pos:line="8" pos:column="30"/></name></name><argument_list pos:line="8" pos:column="30">(<argument><expr><call><name pos:line="8" pos:column="31">end<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="38">h<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">.<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="40">get<pos:position pos:line="8" pos:column="43"/></name></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>

  <expr_stmt><expr><call><name><name pos:line="10" pos:column="3">h<pos:position pos:line="10" pos:column="4"/></name><operator pos:line="10" pos:column="4">-&gt;<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="6">signal_done<pos:position pos:line="10" pos:column="17"/></name></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><call><name pos:line="10" pos:column="20">connect<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><call><name><name pos:line="10" pos:column="28">sigc<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">::<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">bind<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">(<argument><expr><call><name><name pos:line="10" pos:column="39">sigc<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">::<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">mem_fun<pos:position pos:line="10" pos:column="52"/></name></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">this<pos:position pos:line="10" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="59">&amp;<pos:position pos:line="10" pos:column="64"/></operator><name><name pos:line="10" pos:column="60">HttpQueue<pos:position pos:line="10" pos:column="69"/></name><operator pos:line="10" pos:column="69">::<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">erase<pos:position pos:line="10" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="79">itr<pos:position pos:line="10" pos:column="82"/></name></expr></argument>)<pos:position pos:line="10" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name><name pos:line="11" pos:column="3">h<pos:position pos:line="11" pos:column="4"/></name><operator pos:line="11" pos:column="4">-&gt;<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="6">signal_failed<pos:position pos:line="11" pos:column="19"/></name></name><argument_list pos:line="11" pos:column="19">()<pos:position pos:line="11" pos:column="21"/></argument_list></call><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">connect<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><call><name><name pos:line="11" pos:column="30">sigc<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">::<pos:position pos:line="11" pos:column="36"/></operator><name><name pos:line="11" pos:column="36">bind<pos:position pos:line="11" pos:column="40"/></name><argument_list type="generic" pos:line="11" pos:column="40">&lt;<argument><expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>&gt;<pos:position pos:line="11" pos:column="46"/></argument_list></name></name><argument_list pos:line="11" pos:column="43">(<argument><expr><call><name><name pos:line="11" pos:column="44">sigc<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">::<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">hide<pos:position pos:line="11" pos:column="54"/></name></name><argument_list pos:line="11" pos:column="54">(<argument><expr><call><name><name pos:line="11" pos:column="55">sigc<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">::<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">mem_fun<pos:position pos:line="11" pos:column="68"/></name></name><argument_list pos:line="11" pos:column="68">(<argument><expr><name pos:line="11" pos:column="69">this<pos:position pos:line="11" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="75">&amp;<pos:position pos:line="11" pos:column="80"/></operator><name><name pos:line="11" pos:column="76">HttpQueue<pos:position pos:line="11" pos:column="85"/></name><operator pos:line="11" pos:column="85">::<pos:position pos:line="11" pos:column="87"/></operator><name pos:line="11" pos:column="87">erase<pos:position pos:line="11" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="96">itr<pos:position pos:line="11" pos:column="99"/></name></expr></argument>)<pos:position pos:line="11" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="102"/></expr_stmt>

  <expr_stmt><expr><call><name><operator pos:line="13" pos:column="3">(<pos:position pos:line="13" pos:column="4"/></operator><operator pos:line="13" pos:column="4">*<pos:position pos:line="13" pos:column="5"/></operator><name pos:line="13" pos:column="5">itr<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">)<pos:position pos:line="13" pos:column="9"/></operator><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">start<pos:position pos:line="13" pos:column="16"/></name></name><argument_list pos:line="13" pos:column="16">()<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="15" pos:column="3">h<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">.<pos:position pos:line="15" pos:column="5"/></operator><name pos:line="15" pos:column="5">release<pos:position pos:line="15" pos:column="12"/></name></name><argument_list pos:line="15" pos:column="12">()<pos:position pos:line="15" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">m_signalInsert<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator></name></expr></expr_stmt><emit pos:line="16" pos:column="18">emit<expr><operator pos:line="16" pos:column="22">(<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">itr<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></emit>

  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">itr<pos:position pos:line="18" pos:column="13"/></name></expr>;<pos:position pos:line="18" pos:column="14"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

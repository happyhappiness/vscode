<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_96.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">apply_scgi<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name><name pos:line="2" pos:column="18">std<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">string<pos:position pos:line="2" pos:column="29"/></name></name><modifier pos:line="2" pos:column="29">&amp;<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="31">arg<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">type<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list> <block pos:line="2" pos:column="46">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name><name pos:line="3" pos:column="7">control<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">-&gt;<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="16">scgi<pos:position pos:line="3" pos:column="20"/></name></name><argument_list pos:line="3" pos:column="20">()<pos:position pos:line="3" pos:column="22"/></argument_list></call> <operator pos:line="3" pos:column="23">!=<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31">
    <block type="pseudo"><throw pos:line="4" pos:column="5">throw <expr><call><name><name pos:line="4" pos:column="11">torrent<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">input_error<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">(<argument><expr><literal type="string" pos:line="4" pos:column="32">"SCGI already enabled."<pos:position pos:line="4" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></throw></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><call><name><name pos:line="6" pos:column="8">rpc<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">::<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">xmlrpc<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">is_valid<pos:position pos:line="6" pos:column="28"/></name></name><argument_list pos:line="6" pos:column="28">()<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">initialize_xmlrpc<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt></block></then></if>

  <comment type="line" pos:line="9" pos:column="3">// Fix this...</comment>
  <expr_stmt><expr><call><name><name pos:line="10" pos:column="3">control<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">set_scgi<pos:position pos:line="10" pos:column="20"/></name></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">new<pos:position pos:line="10" pos:column="24"/></operator> <name><name pos:line="10" pos:column="25">rpc<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">::<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">SCgi<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>

  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">rak<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">::<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">address_info<pos:position pos:line="12" pos:column="20"/></name></name><modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type> <name pos:line="12" pos:column="22">ai<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="13" pos:column="3">rak<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">::<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">socket_address<pos:position pos:line="13" pos:column="22"/></name></name></type> <name pos:line="13" pos:column="23">sa<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="14" pos:column="3">rak<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">::<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">socket_address<pos:position pos:line="14" pos:column="22"/></name></name><modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type> <name pos:line="14" pos:column="24">saPtr<pos:position pos:line="14" pos:column="29"/></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>

  <try pos:line="16" pos:column="3">try <block pos:line="16" pos:column="7">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">port<pos:position pos:line="17" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="15">err<pos:position pos:line="17" pos:column="18"/></name></decl>;<pos:position pos:line="17" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">dummy<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name></type> <name><name pos:line="19" pos:column="10">address<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><literal type="number" pos:line="19" pos:column="18">1024<pos:position pos:line="19" pos:column="22"/></literal></expr>]<pos:position pos:line="19" pos:column="23"/></index></name></decl>;<pos:position pos:line="19" pos:column="24"/></decl_stmt>

    <switch pos:line="21" pos:column="5">switch <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">type<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition> <block pos:line="21" pos:column="19">{
    <case pos:line="22" pos:column="5">case <expr><literal type="number" pos:line="22" pos:column="10">1<pos:position pos:line="22" pos:column="11"/></literal></expr>:<pos:position pos:line="22" pos:column="12"/></case>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><call><name><name pos:line="23" pos:column="11">std<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">::<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">sscanf<pos:position pos:line="23" pos:column="22"/></name></name><argument_list pos:line="23" pos:column="22">(<argument><expr><call><name><name pos:line="23" pos:column="23">arg<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">c_str<pos:position pos:line="23" pos:column="32"/></name></name><argument_list pos:line="23" pos:column="32">()<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="36">":%i%c"<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="45">&amp;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="46">port<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="52">&amp;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="53">dummy<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call> <operator pos:line="23" pos:column="60">==<pos:position pos:line="23" pos:column="62"/></operator> <literal type="number" pos:line="23" pos:column="63">1<pos:position pos:line="23" pos:column="64"/></literal></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65"> <block pos:line="23" pos:column="66">{
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">sa<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">sa_inet<pos:position pos:line="24" pos:column="19"/></name></name><argument_list pos:line="24" pos:column="19">()<pos:position pos:line="24" pos:column="21"/></argument_list></call><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><call><name pos:line="24" pos:column="23">clear<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">()<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">saPtr<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="18">sa<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>

      }<pos:position pos:line="27" pos:column="8"/></block></then> <elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><call><name><name pos:line="27" pos:column="18">std<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">::<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">sscanf<pos:position pos:line="27" pos:column="29"/></name></name><argument_list pos:line="27" pos:column="29">(<argument><expr><call><name><name pos:line="27" pos:column="30">arg<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">c_str<pos:position pos:line="27" pos:column="39"/></name></name><argument_list pos:line="27" pos:column="39">()<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="43">"%1023[^:]:%i%c"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="61">address<pos:position pos:line="27" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="70">&amp;<pos:position pos:line="27" pos:column="75"/></operator><name pos:line="27" pos:column="71">port<pos:position pos:line="27" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="77">&amp;<pos:position pos:line="27" pos:column="82"/></operator><name pos:line="27" pos:column="78">dummy<pos:position pos:line="27" pos:column="83"/></name></expr></argument>)<pos:position pos:line="27" pos:column="84"/></argument_list></call> <operator pos:line="27" pos:column="85">==<pos:position pos:line="27" pos:column="87"/></operator> <literal type="number" pos:line="27" pos:column="88">2<pos:position pos:line="27" pos:column="89"/></literal></expr>)<pos:position pos:line="27" pos:column="90"/></condition><then pos:line="27" pos:column="90"> <block pos:line="27" pos:column="91">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">err<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name><name pos:line="28" pos:column="20">rak<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">::<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">address_info<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">::<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">get_address_info<pos:position pos:line="28" pos:column="55"/></name></name><argument_list pos:line="28" pos:column="55">(<argument><expr><name pos:line="28" pos:column="56">address<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">PF_INET<pos:position pos:line="28" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="74">SOCK_STREAM<pos:position pos:line="28" pos:column="85"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="87">&amp;<pos:position pos:line="28" pos:column="92"/></operator><name pos:line="28" pos:column="88">ai<pos:position pos:line="28" pos:column="90"/></name></expr></argument>)<pos:position pos:line="28" pos:column="91"/></argument_list></call><operator pos:line="28" pos:column="91">)<pos:position pos:line="28" pos:column="92"/></operator> <operator pos:line="28" pos:column="93">!=<pos:position pos:line="28" pos:column="95"/></operator> <literal type="number" pos:line="28" pos:column="96">0<pos:position pos:line="28" pos:column="97"/></literal></expr>)<pos:position pos:line="28" pos:column="98"/></condition><then pos:line="28" pos:column="98">
          <block type="pseudo"><throw pos:line="29" pos:column="11">throw <expr><call><name><name pos:line="29" pos:column="17">torrent<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">::<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">input_error<pos:position pos:line="29" pos:column="37"/></name></name><argument_list pos:line="29" pos:column="37">(<argument><expr><literal type="string" pos:line="29" pos:column="38">"Could not bind address: "<pos:position pos:line="29" pos:column="64"/></literal> <operator pos:line="29" pos:column="65">+<pos:position pos:line="29" pos:column="66"/></operator> <call><name><name pos:line="29" pos:column="67">std<pos:position pos:line="29" pos:column="70"/></name><operator pos:line="29" pos:column="70">::<pos:position pos:line="29" pos:column="72"/></operator><name pos:line="29" pos:column="72">string<pos:position pos:line="29" pos:column="78"/></name></name><argument_list pos:line="29" pos:column="78">(<argument><expr><call><name><name pos:line="29" pos:column="79">rak<pos:position pos:line="29" pos:column="82"/></name><operator pos:line="29" pos:column="82">::<pos:position pos:line="29" pos:column="84"/></operator><name pos:line="29" pos:column="84">address_info<pos:position pos:line="29" pos:column="96"/></name><operator pos:line="29" pos:column="96">::<pos:position pos:line="29" pos:column="98"/></operator><name pos:line="29" pos:column="98">strerror<pos:position pos:line="29" pos:column="106"/></name></name><argument_list pos:line="29" pos:column="106">(<argument><expr><name pos:line="29" pos:column="107">err<pos:position pos:line="29" pos:column="110"/></name></expr></argument>)<pos:position pos:line="29" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="112"/></argument_list></call> <operator pos:line="29" pos:column="113">+<pos:position pos:line="29" pos:column="114"/></operator> <literal type="string" pos:line="29" pos:column="115">"."<pos:position pos:line="29" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="120"/></throw></block></then></if>

        <expr_stmt><expr><name pos:line="31" pos:column="9">saPtr<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <call><name><name pos:line="31" pos:column="17">ai<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">address<pos:position pos:line="31" pos:column="28"/></name></name><argument_list pos:line="31" pos:column="28">()<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>

      }<pos:position pos:line="33" pos:column="8"/></block></then></if></elseif> <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
        <throw pos:line="34" pos:column="9">throw <expr><call><name><name pos:line="34" pos:column="15">torrent<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">::<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">input_error<pos:position pos:line="34" pos:column="35"/></name></name><argument_list pos:line="34" pos:column="35">(<argument><expr><literal type="string" pos:line="34" pos:column="36">"Could not parse address."<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></throw>
      }<pos:position pos:line="35" pos:column="8"/></block></else></if>

      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">port<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">&lt;=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal> <operator pos:line="37" pos:column="21">||<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">port<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">&gt;=<pos:position pos:line="37" pos:column="34"/></operator> <operator pos:line="37" pos:column="32">(<pos:position pos:line="37" pos:column="33"/></operator><literal type="number" pos:line="37" pos:column="33">1<pos:position pos:line="37" pos:column="34"/></literal> <operator pos:line="37" pos:column="35">&lt;&lt;<pos:position pos:line="37" pos:column="43"/></operator> <literal type="number" pos:line="37" pos:column="38">16<pos:position pos:line="37" pos:column="40"/></literal><operator pos:line="37" pos:column="40">)<pos:position pos:line="37" pos:column="41"/></operator></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42">
        <block type="pseudo"><throw pos:line="38" pos:column="9">throw <expr><call><name><name pos:line="38" pos:column="15">torrent<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">::<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">input_error<pos:position pos:line="38" pos:column="35"/></name></name><argument_list pos:line="38" pos:column="35">(<argument><expr><literal type="string" pos:line="38" pos:column="36">"Invalid port number."<pos:position pos:line="38" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="60"/></throw></block></then></if>

      <expr_stmt><expr><call><name><name pos:line="40" pos:column="7">saPtr<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">set_port<pos:position pos:line="40" pos:column="22"/></name></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">port<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="41" pos:column="7">control<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">scgi<pos:position pos:line="41" pos:column="20"/></name></name><argument_list pos:line="41" pos:column="20">()<pos:position pos:line="41" pos:column="22"/></argument_list></call><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><call><name pos:line="41" pos:column="24">open_port<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><name pos:line="41" pos:column="34">saPtr<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><call><name><name pos:line="41" pos:column="41">saPtr<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">length<pos:position pos:line="41" pos:column="54"/></name></name><argument_list pos:line="41" pos:column="54">()<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="41" pos:column="58">rpc<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">::<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">call_command_value<pos:position pos:line="41" pos:column="81"/></name></name><argument_list pos:line="41" pos:column="81">(<argument><expr><literal type="string" pos:line="41" pos:column="82">"get_scgi_dont_route"<pos:position pos:line="41" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="106"/></expr_stmt>

      <break pos:line="43" pos:column="7">break;<pos:position pos:line="43" pos:column="13"/></break>

    <case pos:line="45" pos:column="5">case <expr><literal type="number" pos:line="45" pos:column="10">2<pos:position pos:line="45" pos:column="11"/></literal></expr>:<pos:position pos:line="45" pos:column="12"/></case>
    <default pos:line="46" pos:column="5">default:<pos:position pos:line="46" pos:column="13"/></default>
      <expr_stmt><expr><call><name><name pos:line="47" pos:column="7">control<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">scgi<pos:position pos:line="47" pos:column="20"/></name></name><argument_list pos:line="47" pos:column="20">()<pos:position pos:line="47" pos:column="22"/></argument_list></call><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><call><name pos:line="47" pos:column="24">open_named<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><call><name><name pos:line="47" pos:column="35">rak<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">::<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">path_expand<pos:position pos:line="47" pos:column="51"/></name></name><argument_list pos:line="47" pos:column="51">(<argument><expr><name pos:line="47" pos:column="52">arg<pos:position pos:line="47" pos:column="55"/></name></expr></argument>)<pos:position pos:line="47" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>
    }<pos:position pos:line="49" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name><name pos:line="51" pos:column="5">rak<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">::<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">address_info<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">::<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">free_address_info<pos:position pos:line="51" pos:column="41"/></name></name><argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">ai<pos:position pos:line="51" pos:column="44"/></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="46"/></expr_stmt>

  }<pos:position pos:line="53" pos:column="4"/></block> <catch pos:line="53" pos:column="5">catch <parameter_list pos:line="53" pos:column="11">(<parameter><decl><type><name><name pos:line="53" pos:column="12">torrent<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">::<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">local_error<pos:position pos:line="53" pos:column="32"/></name></name><modifier pos:line="53" pos:column="32">&amp;<pos:position pos:line="53" pos:column="37"/></modifier></type> <name pos:line="53" pos:column="34">e<pos:position pos:line="53" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="53" pos:column="36"/></parameter_list> <block pos:line="53" pos:column="37">{
    <expr_stmt><expr><call><name><name pos:line="54" pos:column="5">rak<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">::<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">address_info<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">::<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">free_address_info<pos:position pos:line="54" pos:column="41"/></name></name><argument_list pos:line="54" pos:column="41">(<argument><expr><name pos:line="54" pos:column="42">ai<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>

    <throw pos:line="56" pos:column="5">throw <expr><call><name><name pos:line="56" pos:column="11">torrent<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">::<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">input_error<pos:position pos:line="56" pos:column="31"/></name></name><argument_list pos:line="56" pos:column="31">(<argument><expr><call><name><name pos:line="56" pos:column="32">e<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">.<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">what<pos:position pos:line="56" pos:column="38"/></name></name><argument_list pos:line="56" pos:column="38">()<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></throw>
  }<pos:position pos:line="57" pos:column="4"/></block></catch></try>

  <expr_stmt><expr><call><name><name pos:line="59" pos:column="3">control<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">scgi<pos:position pos:line="59" pos:column="16"/></name></name><argument_list pos:line="59" pos:column="16">()<pos:position pos:line="59" pos:column="18"/></argument_list></call><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><call><name pos:line="59" pos:column="20">set_slot_process<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><call><name><name pos:line="59" pos:column="37">rak<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">::<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="42">mem_fn<pos:position pos:line="59" pos:column="48"/></name></name><argument_list pos:line="59" pos:column="48">(<argument><expr><operator pos:line="59" pos:column="49">&amp;<pos:position pos:line="59" pos:column="54"/></operator><name><name pos:line="59" pos:column="50">rpc<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">::<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="55">xmlrpc<pos:position pos:line="59" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="63">&amp;<pos:position pos:line="59" pos:column="68"/></operator><name><name pos:line="59" pos:column="64">rpc<pos:position pos:line="59" pos:column="67"/></name><operator pos:line="59" pos:column="67">::<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="69">XmlRpc<pos:position pos:line="59" pos:column="75"/></name><operator pos:line="59" pos:column="75">::<pos:position pos:line="59" pos:column="77"/></operator><name pos:line="59" pos:column="77">process<pos:position pos:line="59" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="87"/></expr_stmt>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

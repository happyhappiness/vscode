<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_function_232.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">WindowLogComplete<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">redraw<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list> <block pos:line="2" pos:column="29">{
  <expr_stmt><expr><call><name><name pos:line="3" pos:column="3">m_canvas<pos:position pos:line="3" pos:column="11"/></name><operator pos:line="3" pos:column="11">-&gt;<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="13">erase<pos:position pos:line="3" pos:column="18"/></name></name><argument_list pos:line="3" pos:column="18">()<pos:position pos:line="3" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">pos<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name><name pos:line="7" pos:column="3">m_canvas<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">print<pos:position pos:line="7" pos:column="18"/></name></name><argument_list pos:line="7" pos:column="18">(<argument><expr><call><name><name pos:line="7" pos:column="19">std<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">::<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">max<pos:position pos:line="7" pos:column="27"/></name></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">int<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator><call><name><name pos:line="7" pos:column="36">m_canvas<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">get_width<pos:position pos:line="7" pos:column="55"/></name></name><argument_list pos:line="7" pos:column="55">()<pos:position pos:line="7" pos:column="57"/></argument_list></call> <operator pos:line="7" pos:column="58">/<pos:position pos:line="7" pos:column="59"/></operator> <literal type="number" pos:line="7" pos:column="60">2<pos:position pos:line="7" pos:column="61"/></literal> <operator pos:line="7" pos:column="62">-<pos:position pos:line="7" pos:column="63"/></operator> <literal type="number" pos:line="7" pos:column="64">5<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="68">pos<pos:position pos:line="7" pos:column="71"/></name><operator pos:line="7" pos:column="71">++<pos:position pos:line="7" pos:column="73"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="75">"*** Log ***"<pos:position pos:line="7" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="90"/></expr_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name><name pos:line="9" pos:column="8">core<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">::<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">Log<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">::<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">iterator<pos:position pos:line="9" pos:column="27"/></name></name></type> <name pos:line="9" pos:column="28">itr<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><call><name><name pos:line="9" pos:column="34">m_log<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">begin<pos:position pos:line="9" pos:column="46"/></name></name><argument_list pos:line="9" pos:column="46">()<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="50">e<pos:position pos:line="9" pos:column="51"/></name> <init pos:line="9" pos:column="52">= <expr><call><name><name pos:line="9" pos:column="54">m_log<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">-&gt;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="61">end<pos:position pos:line="9" pos:column="64"/></name></name><argument_list pos:line="9" pos:column="64">()<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="67"/></init> <condition><expr><name pos:line="9" pos:column="68">itr<pos:position pos:line="9" pos:column="71"/></name> <operator pos:line="9" pos:column="72">!=<pos:position pos:line="9" pos:column="74"/></operator> <name pos:line="9" pos:column="75">e<pos:position pos:line="9" pos:column="76"/></name> <operator pos:line="9" pos:column="77">&amp;&amp;<pos:position pos:line="9" pos:column="87"/></operator> <name pos:line="9" pos:column="80">pos<pos:position pos:line="9" pos:column="83"/></name> <operator pos:line="9" pos:column="84">&lt;<pos:position pos:line="9" pos:column="88"/></operator> <call><name><name pos:line="9" pos:column="86">m_canvas<pos:position pos:line="9" pos:column="94"/></name><operator pos:line="9" pos:column="94">-&gt;<pos:position pos:line="9" pos:column="99"/></operator><name pos:line="9" pos:column="96">get_height<pos:position pos:line="9" pos:column="106"/></name></name><argument_list pos:line="9" pos:column="106">()<pos:position pos:line="9" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="109"/></condition> <incr><expr><operator pos:line="9" pos:column="110">++<pos:position pos:line="9" pos:column="112"/></operator><name pos:line="9" pos:column="112">itr<pos:position pos:line="9" pos:column="115"/></name></expr></incr>)<pos:position pos:line="9" pos:column="116"/></control> <block pos:line="9" pos:column="117">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">buffer<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><literal type="number" pos:line="10" pos:column="17">16<pos:position pos:line="10" pos:column="19"/></literal></expr>]<pos:position pos:line="10" pos:column="20"/></index></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">print_hhmmss_local<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">buffer<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">buffer<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">+<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="41">16<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>, <argument><expr><cast type="static" pos:line="11" pos:column="45">static_cast<argument_list type="generic" pos:line="11" pos:column="56">&lt;<argument><expr><name pos:line="11" pos:column="57">time_t<pos:position pos:line="11" pos:column="63"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="67"/></argument_list><argument_list pos:line="11" pos:column="64">(<argument><expr><call><name><name pos:line="11" pos:column="65">itr<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">-&gt;<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="70">first<pos:position pos:line="11" pos:column="75"/></name><operator pos:line="11" pos:column="75">.<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="76">seconds<pos:position pos:line="11" pos:column="83"/></name></name><argument_list pos:line="11" pos:column="83">()<pos:position pos:line="11" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="86"/></argument_list></cast></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="88"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">m_canvas<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">print<pos:position pos:line="13" pos:column="20"/></name></name><argument_list pos:line="13" pos:column="20">(<argument><expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">pos<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">++<pos:position pos:line="13" pos:column="29"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"(%s) %s"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">buffer<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="50">itr<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">second<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">.<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="62">c_str<pos:position pos:line="13" pos:column="67"/></name></name><argument_list pos:line="13" pos:column="67">()<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></for>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

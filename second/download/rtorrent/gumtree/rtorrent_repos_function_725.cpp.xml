<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_725.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">PathInput<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">pressed<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">key<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list> <block pos:line="2" pos:column="29">{
  <comment type="line" pos:line="3" pos:column="3">// Consider binding tab in m_bindings instead.</comment>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">key<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">!=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="char" pos:line="5" pos:column="14">'\t'<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <block pos:line="5" pos:column="20">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">m_showNext<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="boolean" pos:line="6" pos:column="18">false<pos:position pos:line="6" pos:column="23"/></literal></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><call><name><name pos:line="7" pos:column="12">TextInput<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">::<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">pressed<pos:position pos:line="7" pos:column="30"/></name></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">key<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></return>

  }<pos:position pos:line="9" pos:column="4"/></block></then> <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name pos:line="9" pos:column="14">m_showNext<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25"> <block pos:line="9" pos:column="26">{
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">m_signalShowNext<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator></name></expr></expr_stmt><emit pos:line="10" pos:column="22">emit<expr><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></emit>

  }<pos:position pos:line="12" pos:column="4"/></block></then></if></elseif> <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">receive_do_complete<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></else></if>

  <return pos:line="16" pos:column="3">return <expr><literal type="boolean" pos:line="16" pos:column="10">true<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

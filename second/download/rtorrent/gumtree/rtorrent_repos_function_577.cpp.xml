<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_577.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Manager<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">listen_open<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list> <block pos:line="2" pos:column="24">{
  <comment type="line" pos:line="3" pos:column="3">// This stuff really should be moved outside of manager, make it</comment>
  <comment type="line" pos:line="4" pos:column="3">// part of the init script.</comment>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><call><name><name pos:line="5" pos:column="8">rpc<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">::<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">call_command_value<pos:position pos:line="5" pos:column="31"/></name></name><argument_list pos:line="5" pos:column="31">(<argument><expr><literal type="string" pos:line="5" pos:column="32">"get_port_open"<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49">
    <block type="pseudo"><return pos:line="6" pos:column="5">return;<pos:position pos:line="6" pos:column="12"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">portFirst<pos:position pos:line="8" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="18">portLast<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">torrent<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">::<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">Object<pos:position pos:line="9" pos:column="18"/></name></name></type> <name pos:line="9" pos:column="19">portRange<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><call><name><name pos:line="9" pos:column="31">rpc<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">::<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">call_command_void<pos:position pos:line="9" pos:column="53"/></name></name><argument_list pos:line="9" pos:column="53">(<argument><expr><literal type="string" pos:line="9" pos:column="54">"get_port_range"<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="72"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name><name pos:line="11" pos:column="7">portRange<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">is_string<pos:position pos:line="11" pos:column="26"/></name></name><argument_list pos:line="11" pos:column="26">()<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">std<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">::<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">sscanf<pos:position pos:line="12" pos:column="20"/></name></name><argument_list pos:line="12" pos:column="20">(<argument><expr><call><name><name pos:line="12" pos:column="21">portRange<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">as_string<pos:position pos:line="12" pos:column="40"/></name></name><argument_list pos:line="12" pos:column="40">()<pos:position pos:line="12" pos:column="42"/></argument_list></call><operator pos:line="12" pos:column="42">.<pos:position pos:line="12" pos:column="43"/></operator><call><name pos:line="12" pos:column="43">c_str<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">()<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="52">"%i-%i"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="61">&amp;<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="62">portFirst<pos:position pos:line="12" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="73">&amp;<pos:position pos:line="12" pos:column="78"/></operator><name pos:line="12" pos:column="74">portLast<pos:position pos:line="12" pos:column="82"/></name></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call> <operator pos:line="12" pos:column="84">!=<pos:position pos:line="12" pos:column="86"/></operator> <literal type="number" pos:line="12" pos:column="87">2<pos:position pos:line="12" pos:column="88"/></literal></expr>)<pos:position pos:line="12" pos:column="89"/></condition><then pos:line="12" pos:column="89">
      <block type="pseudo"><throw pos:line="13" pos:column="7">throw <expr><call><name><name pos:line="13" pos:column="13">torrent<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">::<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">input_error<pos:position pos:line="13" pos:column="33"/></name></name><argument_list pos:line="13" pos:column="33">(<argument><expr><literal type="string" pos:line="13" pos:column="34">"Invalid port_range argument."<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></throw></block></then></if>
    
<comment type="line" pos:line="15" pos:column="1">//   } else if (portRange.is_list()) {</comment>

  }<pos:position pos:line="17" pos:column="4"/></block></then> <else pos:line="17" pos:column="5">else <block pos:line="17" pos:column="10">{
    <throw pos:line="18" pos:column="5">throw <expr><call><name><name pos:line="18" pos:column="11">torrent<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">::<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">input_error<pos:position pos:line="18" pos:column="31"/></name></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="string" pos:line="18" pos:column="32">"Invalid port_range argument."<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></throw>
  }<pos:position pos:line="19" pos:column="4"/></block></else></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">portFirst<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&gt;<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="19">portLast<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">||<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">portLast<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">&gt;=<pos:position pos:line="21" pos:column="45"/></operator> <operator pos:line="21" pos:column="43">(<pos:position pos:line="21" pos:column="44"/></operator><literal type="number" pos:line="21" pos:column="44">1<pos:position pos:line="21" pos:column="45"/></literal> <operator pos:line="21" pos:column="46">&lt;&lt;<pos:position pos:line="21" pos:column="54"/></operator> <literal type="number" pos:line="21" pos:column="49">16<pos:position pos:line="21" pos:column="51"/></literal><operator pos:line="21" pos:column="51">)<pos:position pos:line="21" pos:column="52"/></operator></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
    <block type="pseudo"><throw pos:line="22" pos:column="5">throw <expr><call><name><name pos:line="22" pos:column="11">torrent<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">::<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">input_error<pos:position pos:line="22" pos:column="31"/></name></name><argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"Invalid port range."<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></throw></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name><name pos:line="24" pos:column="7">rpc<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">::<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">call_command_value<pos:position pos:line="24" pos:column="30"/></name></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="string" pos:line="24" pos:column="31">"get_port_random"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">boundary<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><name pos:line="25" pos:column="20">portFirst<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">+<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">random<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">()<pos:position pos:line="25" pos:column="40"/></argument_list></call> <operator pos:line="25" pos:column="41">%<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="43">(<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">portLast<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">-<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="55">portFirst<pos:position pos:line="25" pos:column="64"/></name> <operator pos:line="25" pos:column="65">+<pos:position pos:line="25" pos:column="66"/></operator> <literal type="number" pos:line="25" pos:column="67">1<pos:position pos:line="25" pos:column="68"/></literal><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator></expr></init></decl>;<pos:position pos:line="25" pos:column="70"/></decl_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name><name pos:line="27" pos:column="9">torrent<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">::<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">connection_manager<pos:position pos:line="27" pos:column="36"/></name></name><argument_list pos:line="27" pos:column="36">()<pos:position pos:line="27" pos:column="38"/></argument_list></call><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><call><name pos:line="27" pos:column="40">listen_open<pos:position pos:line="27" pos:column="51"/></name><argument_list pos:line="27" pos:column="51">(<argument><expr><name pos:line="27" pos:column="52">boundary<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">portLast<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call> <operator pos:line="27" pos:column="72">||<pos:position pos:line="27" pos:column="74"/></operator>
        <call><name><name pos:line="28" pos:column="9">torrent<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">::<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">connection_manager<pos:position pos:line="28" pos:column="36"/></name></name><argument_list pos:line="28" pos:column="36">()<pos:position pos:line="28" pos:column="38"/></argument_list></call><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><call><name pos:line="28" pos:column="40">listen_open<pos:position pos:line="28" pos:column="51"/></name><argument_list pos:line="28" pos:column="51">(<argument><expr><name pos:line="28" pos:column="52">portFirst<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">boundary<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="73"/></condition><then pos:line="28" pos:column="73">
      <block type="pseudo"><return pos:line="29" pos:column="7">return;<pos:position pos:line="29" pos:column="14"/></return></block></then></if>

  }<pos:position pos:line="31" pos:column="4"/></block></then> <else pos:line="31" pos:column="5">else <block pos:line="31" pos:column="10">{
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name><name pos:line="32" pos:column="9">torrent<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">::<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">connection_manager<pos:position pos:line="32" pos:column="36"/></name></name><argument_list pos:line="32" pos:column="36">()<pos:position pos:line="32" pos:column="38"/></argument_list></call><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><call><name pos:line="32" pos:column="40">listen_open<pos:position pos:line="32" pos:column="51"/></name><argument_list pos:line="32" pos:column="51">(<argument><expr><name pos:line="32" pos:column="52">portFirst<pos:position pos:line="32" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="63">portLast<pos:position pos:line="32" pos:column="71"/></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="73"/></condition><then pos:line="32" pos:column="73">
      <block type="pseudo"><return pos:line="33" pos:column="7">return;<pos:position pos:line="33" pos:column="14"/></return></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></else></if>

  <throw pos:line="36" pos:column="3">throw <expr><call><name><name pos:line="36" pos:column="9">torrent<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">::<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">input_error<pos:position pos:line="36" pos:column="29"/></name></name><argument_list pos:line="36" pos:column="29">(<argument><expr><literal type="string" pos:line="36" pos:column="30">"Could not open/bind port for listening: "<pos:position pos:line="36" pos:column="72"/></literal> <operator pos:line="36" pos:column="73">+<pos:position pos:line="36" pos:column="74"/></operator> <call><name><name pos:line="36" pos:column="75">std<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">::<pos:position pos:line="36" pos:column="80"/></operator><name pos:line="36" pos:column="80">string<pos:position pos:line="36" pos:column="86"/></name></name><argument_list pos:line="36" pos:column="86">(<argument><expr><call><name><name pos:line="36" pos:column="87">rak<pos:position pos:line="36" pos:column="90"/></name><operator pos:line="36" pos:column="90">::<pos:position pos:line="36" pos:column="92"/></operator><name pos:line="36" pos:column="92">error_number<pos:position pos:line="36" pos:column="104"/></name><operator pos:line="36" pos:column="104">::<pos:position pos:line="36" pos:column="106"/></operator><name pos:line="36" pos:column="106">current<pos:position pos:line="36" pos:column="113"/></name></name><argument_list pos:line="36" pos:column="113">()<pos:position pos:line="36" pos:column="115"/></argument_list></call><operator pos:line="36" pos:column="115">.<pos:position pos:line="36" pos:column="116"/></operator><call><name pos:line="36" pos:column="116">c_str<pos:position pos:line="36" pos:column="121"/></name><argument_list pos:line="36" pos:column="121">()<pos:position pos:line="36" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="126"/></throw>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/gumtree/rtorrent_repos_function_727.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">PathInput<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">receive_do_complete<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list> <block pos:line="2" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_type<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">dirEnd<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><call><name pos:line="3" pos:column="22">find_last_delim<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">()<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">utils<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">Directory<pos:position pos:line="5" pos:column="19"/></name></name></type> <name pos:line="5" pos:column="20">dir<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><ternary><condition><expr><name pos:line="5" pos:column="24">dirEnd<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">!=<pos:position pos:line="5" pos:column="33"/></operator> <literal type="number" pos:line="5" pos:column="34">0<pos:position pos:line="5" pos:column="35"/></literal></expr> ?<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <expr><call><name pos:line="5" pos:column="38">str<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">()<pos:position pos:line="5" pos:column="43"/></argument_list></call><operator pos:line="5" pos:column="43">.<pos:position pos:line="5" pos:column="44"/></operator><call><name pos:line="5" pos:column="44">substr<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><literal type="number" pos:line="5" pos:column="51">0<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="54">dirEnd<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="62"/></then><else pos:line="5" pos:column="62">: <expr><literal type="string" pos:line="5" pos:column="64">"./"<pos:position pos:line="5" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>
  
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><call><name><name pos:line="7" pos:column="8">dir<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">update<pos:position pos:line="7" pos:column="18"/></name></name><argument_list pos:line="7" pos:column="18">()<pos:position pos:line="7" pos:column="20"/></argument_list></call> <operator pos:line="7" pos:column="21">||<pos:position pos:line="7" pos:column="23"/></operator> <call><name><name pos:line="7" pos:column="24">dir<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">.<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">empty<pos:position pos:line="7" pos:column="33"/></name></name><argument_list pos:line="7" pos:column="33">()<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">mark_dirty<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">()<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>

    <return pos:line="10" pos:column="5">return;<pos:position pos:line="10" pos:column="12"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="13" pos:column="3">std<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">::<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">for_each<pos:position pos:line="13" pos:column="16"/></name></name><argument_list pos:line="13" pos:column="16">(<argument><expr><call><name><name pos:line="13" pos:column="17">dir<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">begin<pos:position pos:line="13" pos:column="26"/></name></name><argument_list pos:line="13" pos:column="26">()<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="30">dir<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">end<pos:position pos:line="13" pos:column="37"/></name></name><argument_list pos:line="13" pos:column="37">()<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="41">_transform_filename<pos:position pos:line="13" pos:column="60"/></name><argument_list pos:line="13" pos:column="60">(<argument><expr><call><name pos:line="13" pos:column="61">str<pos:position pos:line="13" pos:column="64"/></name><argument_list pos:line="13" pos:column="64">()<pos:position pos:line="13" pos:column="66"/></argument_list></call><operator pos:line="13" pos:column="66">.<pos:position pos:line="13" pos:column="67"/></operator><call><name pos:line="13" pos:column="67">substr<pos:position pos:line="13" pos:column="73"/></name><argument_list pos:line="13" pos:column="73">(<argument><expr><literal type="number" pos:line="13" pos:column="74">0<pos:position pos:line="13" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="77">dirEnd<pos:position pos:line="13" pos:column="83"/></name></expr></argument>)<pos:position pos:line="13" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="87"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">Range<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">r<pos:position pos:line="15" pos:column="10"/></name> <init pos:line="15" pos:column="11">= <expr><call><name pos:line="15" pos:column="13">find_incomplete<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">dir<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="34">str<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">()<pos:position pos:line="15" pos:column="39"/></argument_list></call><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><call><name pos:line="15" pos:column="40">substr<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">dirEnd<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="55">get_pos<pos:position pos:line="15" pos:column="62"/></name><argument_list pos:line="15" pos:column="62">()<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="67"/></decl_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">r<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">first<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">r<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">.<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">second<pos:position pos:line="17" pos:column="26"/></name></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
    <block type="pseudo"><return pos:line="18" pos:column="5">return;<pos:position pos:line="18" pos:column="12"/></return></block></then></if> <comment type="line" pos:line="18" pos:column="13">// Show some nice colors here.</comment>

  <decl_stmt><decl><type><name><name pos:line="20" pos:column="3">std<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">::<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">string<pos:position pos:line="20" pos:column="14"/></name></name></type> <name pos:line="20" pos:column="15">base<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><call><name><name pos:line="20" pos:column="22">rak<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">::<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">make_base<pos:position pos:line="20" pos:column="36"/></name></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">r<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">first<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="46">r<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">.<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">second<pos:position pos:line="20" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="56"/></decl_stmt>

  <comment type="line" pos:line="22" pos:column="3">// Clear the path after the cursor to make this code cleaner. It's</comment>
  <comment type="line" pos:line="23" pos:column="3">// not really nessesary to add the complexity just because someone</comment>
  <comment type="line" pos:line="24" pos:column="3">// might start tab-completeing in the middle of a path.</comment>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">str<pos:position pos:line="25" pos:column="6"/></name><argument_list pos:line="25" pos:column="6">()<pos:position pos:line="25" pos:column="8"/></argument_list></call><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><call><name pos:line="25" pos:column="9">resize<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">dirEnd<pos:position pos:line="25" pos:column="22"/></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">str<pos:position pos:line="26" pos:column="6"/></name><argument_list pos:line="26" pos:column="6">()<pos:position pos:line="26" pos:column="8"/></argument_list></call><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><call><name pos:line="26" pos:column="9">insert<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">dirEnd<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">base<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">set_pos<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">dirEnd<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">+<pos:position pos:line="28" pos:column="19"/></operator> <call><name><name pos:line="28" pos:column="20">base<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">.<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">size<pos:position pos:line="28" pos:column="29"/></name></name><argument_list pos:line="28" pos:column="29">()<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">mark_dirty<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">()<pos:position pos:line="30" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>

  <comment type="line" pos:line="32" pos:column="3">// Only emit if there are more than one option.</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">m_showNext<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <operator pos:line="33" pos:column="16">++<pos:position pos:line="33" pos:column="18"/></operator><call><name><name pos:line="33" pos:column="18">utils<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">::<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">Directory<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">::<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">iterator<pos:position pos:line="33" pos:column="44"/></name></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name><name pos:line="33" pos:column="45">r<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">.<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">first<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call> <operator pos:line="33" pos:column="54">!=<pos:position pos:line="33" pos:column="56"/></operator> <name><name pos:line="33" pos:column="57">r<pos:position pos:line="33" pos:column="58"/></name><operator pos:line="33" pos:column="58">.<pos:position pos:line="33" pos:column="59"/></operator><name pos:line="33" pos:column="59">second<pos:position pos:line="33" pos:column="65"/></name></name></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">m_showNext<pos:position pos:line="35" pos:column="17"/></name></expr>)<pos:position pos:line="35" pos:column="18"/></condition><then pos:line="35" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="5">m_signalShowRange<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator></name></expr></expr_stmt></block></then></if><emit pos:line="36" pos:column="23">emit<expr><operator pos:line="36" pos:column="27">(<pos:position pos:line="36" pos:column="28"/></operator><name><name pos:line="36" pos:column="28">r<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">.<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">first<pos:position pos:line="36" pos:column="35"/></name></name><operator pos:line="36" pos:column="35">,<pos:position pos:line="36" pos:column="36"/></operator> <name><name pos:line="36" pos:column="37">r<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">.<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">second<pos:position pos:line="36" pos:column="45"/></name></name><operator pos:line="36" pos:column="45">)<pos:position pos:line="36" pos:column="46"/></operator></expr>;<pos:position pos:line="36" pos:column="47"/></emit>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

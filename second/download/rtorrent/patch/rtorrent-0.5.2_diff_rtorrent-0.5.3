diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/configure	2006-05-19 23:31:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/configure	2006-05-23 14:51:28.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.59 for rtorrent 0.5.2.
+# Generated by GNU Autoconf 2.59 for rtorrent 0.5.3.
 #
 # Report bugs to <jaris@ifi.uio.no>.
 #
 # Copyright (C) 2003 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
@@ -420,14 +420,14 @@
 # only ac_max_sed_lines should be used.
 : ${ac_max_here_lines=38}
 
 # Identity of this package.
 PACKAGE_NAME='rtorrent'
 PACKAGE_TARNAME='rtorrent'
-PACKAGE_VERSION='0.5.2'
-PACKAGE_STRING='rtorrent 0.5.2'
+PACKAGE_VERSION='0.5.3'
+PACKAGE_STRING='rtorrent 0.5.3'
 PACKAGE_BUGREPORT='jaris@ifi.uio.no'
 
 # Factoring default headers for most tests.
 ac_includes_default="\
 #include <stdio.h>
 #if HAVE_SYS_TYPES_H
@@ -950,13 +950,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures rtorrent 0.5.2 to adapt to many kinds of systems.
+\`configure' configures rtorrent 0.5.3 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1016,13 +1016,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of rtorrent 0.5.2:";;
+     short | recursive ) echo "Configuration of rtorrent 0.5.3:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -1162,13 +1162,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit 0
 if $ac_init_version; then
   cat <<\_ACEOF
-rtorrent configure 0.5.2
+rtorrent configure 0.5.3
 generated by GNU Autoconf 2.59
 
 Copyright (C) 2003 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -1176,13 +1176,13 @@
 fi
 exec 5>config.log
 cat >&5 <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by rtorrent $as_me 0.5.2, which was
+It was created by rtorrent $as_me 0.5.3, which was
 generated by GNU Autoconf 2.59.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 {
@@ -1820,13 +1820,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='rtorrent'
- VERSION='0.5.2'
+ VERSION='0.5.3'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -20981,13 +20981,13 @@
   sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
 ## Running $as_me. ##
 _ASBOX
 } >&5
 cat >&5 <<_CSEOF
 
-This file was extended by rtorrent $as_me 0.5.2, which was
+This file was extended by rtorrent $as_me 0.5.3, which was
 generated by GNU Autoconf 2.59.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -21044,13 +21044,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 _ACEOF
 
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-rtorrent config.status 0.5.2
+rtorrent config.status 0.5.3
 configured by $0, generated by GNU Autoconf 2.59,
   with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2003 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/configure.ac	2006-05-19 23:15:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/configure.ac	2006-05-23 03:33:03.000000000 +0800
@@ -1,7 +1,7 @@
-AC_INIT(rtorrent, 0.5.2, jaris@ifi.uio.no)
+AC_INIT(rtorrent, 0.5.3, jaris@ifi.uio.no)
 
 AM_INIT_AUTOMAKE
 AM_CONFIG_HEADER(config.h)
 
 TORRENT_CHECK_CXXFLAGS()
 TORRENT_ENABLE_DEBUG()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/doc/rtorrent.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/doc/rtorrent.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/doc/rtorrent.1	2006-05-19 23:43:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/doc/rtorrent.1	2006-05-23 14:51:07.000000000 +0800
@@ -1,12 +1,12 @@
 .\" This manpage has been automatically generated by docbook2man 
 .\" from a DocBook document.  This tool can be found at:
 .\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
 .\" Please send any bug reports, improvements, comments, patches, 
 .\" etc. to Steve Cheng <steve@ggi-project.org>.
-.TH "RTORRENT" "1" "19 May 2006" "BitTorrent client for ncurses" ""
+.TH "RTORRENT" "1" "23 May 2006" "BitTorrent client for ncurses" ""
 
 .SH NAME
 rtorrent \- a BitTorrent client for ncurses
 .SH SYNOPSIS
 
 \fBrtorrent\fR [ \fB-h\fR ] [ \fB-n\fR ] [ \fB-o key1=opt1,...\fR ] [ \fB-O key=opt\fR ] [ \fBURL | FILE\fR\fI ...\fR ]
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/core/download_factory.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/core/download_factory.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/core/download_factory.cc	2006-05-04 22:12:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/core/download_factory.cc	2006-05-21 20:14:11.000000000 +0800
@@ -137,13 +137,13 @@
     receive_success();
 }
 
 void
 DownloadFactory::receive_success() {
   if (m_stream == NULL)
-    throw torrent::client_error("DownloadFactory::receive_success() called on an object with m_stream == NULL");
+    throw torrent::client_error("DownloadFactory::receive_success() called on an object with m_stream == NULL.");
 
   Download* download = m_manager->download_list()->create(m_stream, m_printLog);
 
   if (download == NULL) {
     // core::Manager should already have added the error message to
     // the log.
@@ -164,48 +164,50 @@
     root->insert_key("rtorrent", torrent::Object(torrent::Object::TYPE_MAP));
     
   torrent::Object* rtorrent = &root->get_key("rtorrent");
 
   initialize_rtorrent(download, rtorrent);
 
-  if (m_manager->download_list()->insert(download) == m_manager->download_list()->end()) {
-    // ATM doesn't really ever get here.
-    delete download;
-
-    m_slotFinished();
-    return;
-  }
-
   // Move to 'rtorrent'.
   download->variable()->set("connection_leech", m_variables.get("connection_leech"));
   download->variable()->set("connection_seed",  m_variables.get("connection_seed"));
   download->variable()->set("min_peers",        control->variable()->get("min_peers"));
   download->variable()->set("max_peers",        control->variable()->get("max_peers"));
   download->variable()->set("max_uploads",      control->variable()->get("max_uploads"));
 
   if (!control->variable()->get_value("use_udp_trackers"))
     download->enable_udp_trackers(false);
 
-  if (m_session) {
-    if (!rtorrent->has_key_string("directory"))
-      download->variable()->set("directory", m_variables.get("directory"));
-    else
-      download->variable()->set("directory", rtorrent->get_key("directory"));
+  if (!rtorrent->has_key_string("directory"))
+    download->variable()->set("directory", m_variables.get("directory"));
+  else
+    download->variable()->set("directory", rtorrent->get_key("directory"));
+
+  if (!m_session && m_variables.get("tied_to_file").as_value())
+    download->variable()->set("tied_to_file", m_uri);
 
+  // The action of inserting might cause the torrent to be
+  // opened/started or such. Figure out a nicer way of handling this.
+  if (m_manager->download_list()->insert(download) == m_manager->download_list()->end()) {
+    // ATM doesn't really ever get here.
+    delete download;
+
+    m_slotFinished();
+    return;
+  }
+
+  // When a download scheduler is implemented, this is handled by the
+  // above insertion into download list.
+  if (m_session) {
     // This torrent was queued for hashing or hashing when the session
     // file was saved. Or it was in a started state.
     if (download->variable()->get_value("hashing") != Download::variable_hashing_stopped ||
 	download->variable()->get_value("state") != 0)
       m_manager->download_list()->resume(download);
 
   } else {
-    download->variable()->set("directory", m_variables.get("directory"));
-
-    if (m_variables.get("tied_to_file").as_value())
-      download->variable()->set("tied_to_file", m_uri);
-
     // Use the state thingie here, move below.
     if (m_start)
       m_manager->download_list()->start(download);
 
     m_manager->download_store()->save(download);
   }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/core/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/core/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/core/download_list.cc	2006-05-19 03:30:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/core/download_list.cc	2006-05-21 04:11:09.000000000 +0800
@@ -368,12 +368,15 @@
 }
 
 void
 DownloadList::hash_done(Download* download) {
   check_contains(download);
 
+  if (!download->is_open())
+    throw torrent::client_error("DownloadList::hash_done(...) !download->is_open().");
+
   if (!download->is_hash_checked() || download->is_hash_checking() || download->is_active())
     throw torrent::client_error("DownloadList::hash_done(...) download in invalid state.");
 
   // Need to find some sane conditional here. Can we check the total
   // downloaded to ensure something was transferred, thus we didn't
   // just hash an already completed torrent with lacking session data?
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/core/view_manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/core/view_manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/core/view_manager.cc	2006-05-13 07:57:50.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/core/view_manager.cc	2006-05-21 03:14:47.000000000 +0800
@@ -80,13 +80,13 @@
   std::string m_value;
 };
 
 class ViewSortVariableValue : public ViewSort {
 public:
   ViewSortVariableValue(const std::string& name, bool reverse = false) :
-    m_name(name) {}
+    m_name(name), m_reverse(reverse) {}
 
   virtual bool operator () (Download* d1, Download* d2) const {
     if (m_reverse)
       return d2->variable()->get_value(m_name) < d1->variable()->get_value(m_name);
     else
       return d1->variable()->get_value(m_name) < d2->variable()->get_value(m_name);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/option_parser.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/option_parser.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.2/src/option_parser.cc	2006-05-10 03:50:25.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.5.3/src/option_parser.cc	2006-05-21 06:16:46.000000000 +0800
@@ -33,13 +33,16 @@
 //
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
+#include <algorithm>
+#include <cstring>
 #include <cstdio>
+#include <functional>
 #include <getopt.h>
 #include <stdexcept>
 #include <unistd.h>
 #include <sigc++/bind.h>
 #include <sigc++/hide.h>
 
@@ -85,23 +88,15 @@
 
   return optind;
 }
 
 bool
 OptionParser::has_flag(char flag, int argc, char** argv) {
-  int result;
-  char options[2] = { flag, '\0' };
+  char options[3] = { '-', flag, '\0' };
 
-  optind = 0;
-  opterr = 0;
-
-  while ((result = getopt(argc, argv, options)) != -1)
-    if (result == flag)
-      return true;
-
-  return false;
+  return std::find_if(argv, argv + argc, std::not1(std::bind1st(std::ptr_fun(&std::strcmp), options))) != argv + argc;
 }
 
 std::string
 OptionParser::create_optstring() {
   std::string s;
 

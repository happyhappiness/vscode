diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/configure	2005-09-24 00:55:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/configure	2005-10-15 00:37:15.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.59 for rtorrent 0.3.5.
+# Generated by GNU Autoconf 2.59 for rtorrent 0.3.6.
 #
 # Report bugs to <jaris@ifi.uio.no>.
 #
 # Copyright (C) 2003 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
@@ -266,14 +266,14 @@
 # only ac_max_sed_lines should be used.
 : ${ac_max_here_lines=38}
 
 # Identity of this package.
 PACKAGE_NAME='rtorrent'
 PACKAGE_TARNAME='rtorrent'
-PACKAGE_VERSION='0.3.5'
-PACKAGE_STRING='rtorrent 0.3.5'
+PACKAGE_VERSION='0.3.6'
+PACKAGE_STRING='rtorrent 0.3.6'
 PACKAGE_BUGREPORT='jaris@ifi.uio.no'
 
 ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CXX CXXFLAGS LDFLAGS CPPFLAGS ac_ct_CXX EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE RANLIB ac_ct_RANLIB CC CFLAGS ac_ct_CC CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE PKG_CONFIG STUFF_CFLAGS STUFF_LIBS LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -743,13 +743,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures rtorrent 0.3.5 to adapt to many kinds of systems.
+\`configure' configures rtorrent 0.3.6 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -805,13 +805,13 @@
   --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of rtorrent 0.3.5:";;
+     short | recursive ) echo "Configuration of rtorrent 0.3.6:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -932,13 +932,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit 0
 if $ac_init_version; then
   cat <<\_ACEOF
-rtorrent configure 0.3.5
+rtorrent configure 0.3.6
 generated by GNU Autoconf 2.59
 
 Copyright (C) 2003 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -946,13 +946,13 @@
 fi
 exec 5>config.log
 cat >&5 <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by rtorrent $as_me 0.3.5, which was
+It was created by rtorrent $as_me 0.3.6, which was
 generated by GNU Autoconf 2.59.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 {
@@ -1590,13 +1590,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='rtorrent'
- VERSION='0.3.5'
+ VERSION='0.3.6'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -4200,37 +4200,37 @@
      echo "*** in your path, or set the PKG_CONFIG environment variable"
      echo "*** to the full path to pkg-config."
      echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
   else
      PKG_CONFIG_MIN_VERSION=0.9.0
      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for sigc++-2.0 libtorrent >= 0.7.5" >&5
-echo $ECHO_N "checking for sigc++-2.0 libtorrent >= 0.7.5... $ECHO_C" >&6
+        echo "$as_me:$LINENO: checking for sigc++-2.0 libtorrent >= 0.7.6" >&5
+echo $ECHO_N "checking for sigc++-2.0 libtorrent >= 0.7.6... $ECHO_C" >&6
 
-        if $PKG_CONFIG --exists "sigc++-2.0 libtorrent >= 0.7.5" ; then
+        if $PKG_CONFIG --exists "sigc++-2.0 libtorrent >= 0.7.6" ; then
             echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
             succeeded=yes
 
             echo "$as_me:$LINENO: checking STUFF_CFLAGS" >&5
 echo $ECHO_N "checking STUFF_CFLAGS... $ECHO_C" >&6
-            STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libtorrent >= 0.7.5"`
+            STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libtorrent >= 0.7.6"`
             echo "$as_me:$LINENO: result: $STUFF_CFLAGS" >&5
 echo "${ECHO_T}$STUFF_CFLAGS" >&6
 
             echo "$as_me:$LINENO: checking STUFF_LIBS" >&5
 echo $ECHO_N "checking STUFF_LIBS... $ECHO_C" >&6
-            STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libtorrent >= 0.7.5"`
+            STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libtorrent >= 0.7.6"`
             echo "$as_me:$LINENO: result: $STUFF_LIBS" >&5
 echo "${ECHO_T}$STUFF_LIBS" >&6
         else
             STUFF_CFLAGS=""
             STUFF_LIBS=""
             ## If we have a custom action on failure, don't print errors, but
             ## do set a variable so people can do so.
-            STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.7.5"`
+            STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.7.6"`
             echo $STUFF_PKG_ERRORS
         fi
 
 
 
      else
@@ -4240,14 +4240,14 @@
   fi
 
   if test $succeeded = yes; then
      CXXFLAGS="$CXXFLAGS $STUFF_CFLAGS $CURL_CFLAGS";
 		  LIBS="$LIBS $STUFF_LIBS $CURL_LIBS"
   else
-     { { echo "$as_me:$LINENO: error: Library requirements (sigc++-2.0 libtorrent >= 0.7.5) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
-echo "$as_me: error: Library requirements (sigc++-2.0 libtorrent >= 0.7.5) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
+     { { echo "$as_me:$LINENO: error: Library requirements (sigc++-2.0 libtorrent >= 0.7.6) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
+echo "$as_me: error: Library requirements (sigc++-2.0 libtorrent >= 0.7.6) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
    { (exit 1); exit 1; }; }
   fi
 
 
 
 cat >>confdefs.h <<\_ACEOF
@@ -4636,13 +4636,13 @@
   sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
 ## Running $as_me. ##
 _ASBOX
 } >&5
 cat >&5 <<_CSEOF
 
-This file was extended by rtorrent $as_me 0.3.5, which was
+This file was extended by rtorrent $as_me 0.3.6, which was
 generated by GNU Autoconf 2.59.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -4699,13 +4699,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 _ACEOF
 
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-rtorrent config.status 0.3.5
+rtorrent config.status 0.3.6
 configured by $0, generated by GNU Autoconf 2.59,
   with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2003 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/configure.ac	2005-09-24 00:30:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/configure.ac	2005-10-15 00:31:49.000000000 +0800
@@ -1,7 +1,7 @@
-AC_INIT(rtorrent, 0.3.5, jaris@ifi.uio.no)
+AC_INIT(rtorrent, 0.3.6, jaris@ifi.uio.no)
 
 AM_INIT_AUTOMAKE
 AM_CONFIG_HEADER(config.h)
 
 sinclude(scripts/checks.m4)
 sinclude(scripts/common.m4)
@@ -19,13 +19,13 @@
 TORRENT_CHECK_EXECINFO()
 TORRENT_CHECK_CURL()
 TORRENT_OTFD()
 
 TORRENT_WITHOUT_VARIABLE_FDSET()
 
-PKG_CHECK_MODULES(STUFF, sigc++-2.0 libtorrent >= 0.7.5,
+PKG_CHECK_MODULES(STUFF, sigc++-2.0 libtorrent >= 0.7.6,
 	          CXXFLAGS="$CXXFLAGS $STUFF_CFLAGS $CURL_CFLAGS";
 		  LIBS="$LIBS $STUFF_LIBS $CURL_LIBS")
 
 AC_DEFINE(HAVE_CONFIG_H, 1, true if config.h was included)
 
 AC_OUTPUT([
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/Makefile.am	2005-09-20 21:02:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/Makefile.am	2005-10-15 00:31:07.000000000 +0800
@@ -4,9 +4,10 @@
 
 EXTRA_DIST= \
 	autogen.sh \
 	rak/algorithm.h \
 	rak/error_number.h \
 	rak/functional.h \
+	rak/string_manip.h \
 	rak/unordered_vector.h \
 	scripts/checks.m4 \
 	scripts/common.m4
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/Makefile.in	2005-09-24 00:55:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/Makefile.in	2005-10-15 00:37:14.000000000 +0800
@@ -159,12 +159,13 @@
 
 EXTRA_DIST = \
 	autogen.sh \
 	rak/algorithm.h \
 	rak/error_number.h \
 	rak/functional.h \
+	rak/string_manip.h \
 	rak/unordered_vector.h \
 	scripts/checks.m4 \
 	scripts/common.m4
 
 all: config.h
 	$(MAKE) $(AM_MAKEFLAGS) all-recursive
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/rak/functional.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/rak/functional.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/rak/functional.h	2005-09-22 20:08:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/rak/functional.h	2005-10-15 05:51:04.000000000 +0800
@@ -340,31 +340,146 @@
 
 // Lightweight callback function including pointer to object. Should
 // be replaced by TR1 stuff later. Requires an object to bind, instead
 // of using a seperate functor for that.
 
 template <typename Object, typename Ret>
-class mem_fn {
+class mem_fn0 {
 public:
   typedef Ret (Object::*Function)();
 
-  mem_fn() : m_object(NULL) {}
-  mem_fn(Object* o, Function f) : m_object(o), m_function(f) {}
+  mem_fn0() : m_object(NULL) {}
+  mem_fn0(Object* o, Function f) : m_object(o), m_function(f) {}
 
   bool is_valid() const { return m_object; }
 
   Ret operator () () { return (m_object->*m_function)(); }
   
 private:
   Object* m_object;
   Function m_function;
 };
 
 template <typename Object, typename Ret>
-inline mem_fn<Object, Ret>
+class const_mem_fn0 {
+public:
+  typedef Ret (Object::*Function)() const;
+
+  const_mem_fn0() : m_object(NULL) {}
+  const_mem_fn0(Object* o, Function f) : m_object(o), m_function(f) {}
+
+  bool is_valid() const { return m_object; }
+
+  Ret operator () () { return (m_object->*m_function)(); }
+  
+private:
+  Object* m_object;
+  Function m_function;
+};
+
+template <typename Object, typename Ret, typename Arg1>
+class mem_fn1 {
+public:
+  typedef Ret (Object::*Function)(Arg1);
+
+  mem_fn1() : m_object(NULL) {}
+  mem_fn1(Object* o, Function f) : m_object(o), m_function(f) {}
+
+  bool is_valid() const { return m_object; }
+
+  Ret operator () (Arg1 a1) { return (m_object->*m_function)(a1); }
+  
+private:
+  Object* m_object;
+  Function m_function;
+};
+
+template <typename Object, typename Ret, typename Arg1>
+class const_mem_fn1 {
+public:
+  typedef Ret (Object::*Function)(Arg1) const;
+
+  const_mem_fn1() : m_object(NULL) {}
+  const_mem_fn1(Object* o, Function f) : m_object(o), m_function(f) {}
+
+  bool is_valid() const { return m_object; }
+
+  Ret operator () (Arg1 a1) { return (m_object->*m_function)(a1); }
+  
+private:
+  Object* m_object;
+  Function m_function;
+};
+
+template <typename Object, typename Ret, typename Arg1, typename Arg2>
+class mem_fn2 {
+public:
+  typedef Ret (Object::*Function)(Arg1, Arg2);
+
+  mem_fn2() : m_object(NULL) {}
+  mem_fn2(Object* o, Function f) : m_object(o), m_function(f) {}
+
+  bool is_valid() const { return m_object; }
+
+  Ret operator () (Arg1 a1, Arg2 a2) { return (m_object->*m_function)(a1, a2); }
+  
+private:
+  Object* m_object;
+  Function m_function;
+};
+
+template <typename Object, typename Ret, typename Arg1, typename Arg2, typename Arg3>
+class mem_fn3 {
+public:
+  typedef Ret (Object::*Function)(Arg1, Arg2, Arg3);
+
+  mem_fn3() : m_object(NULL) {}
+  mem_fn3(Object* o, Function f) : m_object(o), m_function(f) {}
+
+  bool is_valid() const { return m_object; }
+
+  Ret operator () (Arg1 a1, Arg2 a2, Arg3 a3) { return (m_object->*m_function)(a1, a2, a3); }
+  
+private:
+  Object* m_object;
+  Function m_function;
+};
+
+template <typename Object, typename Ret>
+inline mem_fn0<Object, Ret>
 make_mem_fn(Object* o, Ret (Object::*f)()) {
- return mem_fn<Object, Ret>(o, f);
+ return mem_fn0<Object, Ret>(o, f);
+}
+
+template <typename Object, typename Ret>
+inline const_mem_fn0<Object, Ret>
+make_mem_fn(Object* o, Ret (Object::*f)() const) {
+ return const_mem_fn0<Object, Ret>(o, f);
+}
+
+template <typename Object, typename Ret, typename Arg1>
+inline mem_fn1<Object, Ret, Arg1>
+make_mem_fn(Object* o, Ret (Object::*f)(Arg1)) {
+ return mem_fn1<Object, Ret, Arg1>(o, f);
+}
+
+template <typename Object, typename Ret, typename Arg1>
+inline const_mem_fn1<Object, Ret, Arg1>
+make_mem_fn(Object* o, Ret (Object::*f)(Arg1) const) {
+ return const_mem_fn1<Object, Ret, Arg1>(o, f);
+}
+
+template <typename Object, typename Ret, typename Arg1, typename Arg2>
+inline mem_fn2<Object, Ret, Arg1, Arg2>
+make_mem_fn(Object* o, Ret (Object::*f)(Arg1, Arg2)) {
+ return mem_fn2<Object, Ret, Arg1, Arg2>(o, f);
+}
+
+template <typename Object, typename Ret, typename Arg1, typename Arg2, typename Arg3>
+inline mem_fn3<Object, Ret, Arg1, Arg2, Arg3>
+make_mem_fn(Object* o, Ret (Object::*f)(Arg1, Arg2, Arg3)) {
+ return mem_fn3<Object, Ret, Arg1, Arg2, Arg3>(o, f);
 }
 
 }
 
 #endif
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/rak: string_manip.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src: control.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src: control.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/download.cc	2005-08-31 23:13:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/download.cc	2005-10-11 03:03:28.000000000 +0800
@@ -63,13 +63,13 @@
 void
 Download::set_download(torrent::Download d) {
   m_download = d;
 
   m_connTrackerSucceded = m_download.signal_tracker_succeded(sigc::bind(sigc::mem_fun(*this, &Download::receive_tracker_msg), ""));
   m_connTrackerFailed = m_download.signal_tracker_failed(sigc::mem_fun(*this, &Download::receive_tracker_msg));
-  m_connStorageError = m_download.signal_storage_error(sigc::mem_fun(*this, &Download::receive_tracker_msg));
+  m_connStorageError = m_download.signal_storage_error(sigc::mem_fun(*this, &Download::receive_storage_error));
 }
 
 void
 Download::set_root_directory(const std::string& d) {
   m_download.set_root_dir(d +
 			  (!d.empty() && *d.rbegin() != '/' ? "/" : "") +
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/download_factory.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/download_factory.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/download_factory.cc	2005-08-28 01:10:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/download_factory.cc	2005-10-18 00:26:39.000000000 +0800
@@ -157,11 +157,13 @@
 void
 DownloadFactory::receive_failed(const std::string& msg) {
   if (m_stream == NULL)
     throw std::logic_error("DownloadFactory::receive_success() called on an object with m_stream == NULL");
 
   // Add message to log.
+  m_manager->get_log_important().push_front(msg + ": \"" + m_uri + "\"");
+  m_manager->get_log_complete().push_front(msg + ": \"" + m_uri + "\"");
 
   m_slotFinished();
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/download_list.cc	2005-08-28 01:10:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/download_list.cc	2005-10-11 01:42:09.000000000 +0800
@@ -87,13 +87,14 @@
   stop(d);
   m_slotMapClose.for_each(d);
 }
 
 void
 DownloadList::start(Download* d) {
-  if (d->get_download().is_active())
+  if (d->get_download().is_active() ||
+      !d->get_download().is_hash_checked())
     return;
 
   open(d);
   m_slotMapStart.for_each(d);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/manager.cc	2005-08-28 01:10:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/manager.cc	2005-10-18 00:41:54.000000000 +0800
@@ -58,15 +58,20 @@
 
 static void
 connect_signal_network_log(Download* d, torrent::Download::SlotString s) {
   d->get_download().signal_network_log(s);
 }
 
+// static void
+// connect_signal_tracker_log(Download* d, torrent::Download::SlotString s) {
+//   d->get_download().signal_tracker_failed(s);
+// }
+
 static void
-connect_signal_tracker_log(Download* d, torrent::Download::SlotString s) {
-  d->get_download().signal_tracker_failed(s);
+connect_signal_storage_log(Download* d, torrent::Download::SlotString s) {
+  d->get_download().signal_storage_error(s);
 }
 
 Manager::Manager() :
   m_pollManager(NULL),
   m_portRandom(false),
   m_portFirst(6890),
@@ -96,13 +101,14 @@
   listen_open();
 
   // Register slots to be called when a download is inserted/erased,
   // opened or closed.
   m_downloadList.slot_map_insert()["0_initialize_bencode"]  = sigc::mem_fun(*this, &Manager::initialize_bencode);
   m_downloadList.slot_map_insert()["1_connect_network_log"] = sigc::bind(sigc::ptr_fun(&connect_signal_network_log), sigc::mem_fun(m_logComplete, &Log::push_front));
-  m_downloadList.slot_map_insert()["1_connect_tracker_log"] = sigc::bind(sigc::ptr_fun(&connect_signal_tracker_log), sigc::mem_fun(m_logComplete, &Log::push_front));
+//   m_downloadList.slot_map_insert()["1_connect_tracker_log"] = sigc::bind(sigc::ptr_fun(&connect_signal_tracker_log), sigc::mem_fun(m_logComplete, &Log::push_front));
+  m_downloadList.slot_map_insert()["1_connect_storage_log"] = sigc::bind(sigc::ptr_fun(&connect_signal_storage_log), sigc::mem_fun(m_logComplete, &Log::push_front));
   //m_downloadList.slot_map_insert()["1_enable_udp_trackers"] = sigc::bind(sigc::mem_fun(&core::Download::enable_udp_trackers), true);
 
   m_downloadList.slot_map_erase()["1_hash_queue_remove"]    = sigc::mem_fun(m_hashQueue, &HashQueue::remove);
   m_downloadList.slot_map_erase()["1_store_remove"]         = sigc::mem_fun(m_downloadStore, &DownloadStore::remove);
 
   m_downloadList.slot_map_open()["1_download_open"]         = sigc::mem_fun(&Download::call<void, &torrent::Download::open>);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/poll_manager_epoll.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/poll_manager_epoll.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/core/poll_manager_epoll.cc	2005-08-28 01:10:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/core/poll_manager_epoll.cc	2005-10-07 04:06:44.000000000 +0800
@@ -85,14 +85,18 @@
 
     if (select(maxFd + 1, m_readSet, m_writeSet, m_errorSet, &t) == -1)
       return check_error();
 
     m_httpStack.perform();
 
-    if (!FD_ISSET(static_cast<torrent::PollEPoll*>(m_poll)->get_fd(), m_readSet))
+    if (!FD_ISSET(static_cast<torrent::PollEPoll*>(m_poll)->get_fd(), m_readSet)) {
+      // Need to call perform here so that scheduled task get done
+      // even if there's no socket events outside of the http stuff.
+      torrent::perform();
       return;
+    }
 
     // Clear the timeout since we've already used it in the select call.
     timeout = utils::Timer();
   }
 
   // Yes, below is how much code really *should* have been in this
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/utils.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/utils.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/utils.cc	2005-08-28 06:40:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/utils.cc	2005-10-18 03:14:49.000000000 +0800
@@ -33,12 +33,13 @@
 //
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
+#include <cstring>
 #include <sstream>
 #include <iomanip>
 #include <torrent/rate.h>
 #include <torrent/tracker.h>
 
 #include "core/download.h"
@@ -46,12 +47,22 @@
 
 #include "utils.h"
 
 namespace display {
 
 char*
+print_string(char* buf, unsigned int length, char* str) {
+  // We don't have any nice simple functions for copying strings that
+  // return the end address.
+  while (length-- != 0 && *str != '\0')
+    *(buf++) = *(str++);
+
+  return buf;
+}
+
+char*
 print_download_title(char* buf, unsigned int length, core::Download* d) {
   return buf + std::max(0, snprintf(buf, length, "%s",
 				    d->get_download().get_name().c_str()));
 }
 
 char*
@@ -77,62 +88,53 @@
 
   return buf;
 }
 
 char*
 print_download_status(char* buf, unsigned int length, core::Download* d) {
+  if (!d->get_download().is_active())
+    buf += std::max(0, snprintf(buf, length, "Inactive: "));
+
   if (d->get_download().is_hash_checking())
     buf += std::max(0, snprintf(buf, length, "Checking hash"));
 
   else if (d->get_download().is_tracker_busy() &&
 	   d->get_download().get_tracker_focus() < d->get_download().get_tracker_size())
     buf += std::max(0, snprintf(buf, length, "Tracker[%i:%i]: Connecting to %s",
 				d->get_download().get_tracker(d->get_download().get_tracker_focus()).get_group(),
 				d->get_download().get_tracker_focus(),
 				d->get_download().get_tracker(d->get_download().get_tracker_focus()).get_url().c_str()));
 
-  else if (!d->get_download().is_active())
-    buf += std::max(0, snprintf(buf, length, "Inactive"));
-
   else if (!d->get_message().empty())
     buf += std::max(0, snprintf(buf, length, "%s", d->get_message().c_str()));
 
   else
     buf[0] = '\0';
 
   return buf;
 }
 
-std::string
-print_hhmmss(utils::Timer t) {
-  time_t tv_sec = static_cast<time_t>(t.tval().tv_sec);
-  std::tm *u = std::localtime(&tv_sec);
+char*
+print_hhmmss(char* buf, unsigned int length, time_t t) {
+  std::tm *u = std::localtime(&t);
   
   if (u == NULL)
     return "inv_time";
 
-  std::stringstream str;
-  str.fill('0');
-  
-  str << std::setw(2) << u->tm_hour << ':' << std::setw(2) << u->tm_min << ':' << std::setw(2) << u->tm_sec;
+  unsigned int s = snprintf(buf, length, "%02u:%02u:%02u", u->tm_hour, u->tm_min, u->tm_sec);
 
-  return str.str();
+  return buf + std::min(s, length);
 }
 
-std::string
-print_ddmmyyyy(time_t t) {
+char*
+print_ddmmyyyy(char* buf, unsigned int length, time_t t) {
   std::tm *u = std::gmtime(&t);
   
   if (u == NULL)
     return "inv_time";
 
-  std::stringstream str;
-  str.fill('0');
-  
-  str << std::setw(2) << u->tm_mday << '/'
-      << std::setw(2) << u->tm_mon << '/'
-      << std::setw(4) << (1900 + u->tm_year);
+  unsigned int s = snprintf(buf, length, "%02u/%02u/%04u", u->tm_mday, (u->tm_mon + 1), (1900 + u->tm_year));
 
-  return str.str();
+  return buf + std::min(s, length);
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/utils.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/utils.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/utils.h	2005-08-28 01:10:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/utils.h	2005-10-18 02:54:57.000000000 +0800
@@ -47,16 +47,18 @@
 namespace utils {
   class Timer;
 }
 
 namespace display {
 
+char*       print_string(char* buf, unsigned int length, char* str);
+
 char*       print_download_title(char* buf, unsigned int length, core::Download* d);
 char*       print_download_info(char* buf, unsigned int length, core::Download* d);
 char*       print_download_status(char* buf, unsigned int length, core::Download* d);
 
-std::string print_hhmmss(utils::Timer t);
-std::string print_ddmmyyyy(time_t t);
+char*       print_hhmmss(char* buf, unsigned int length, time_t t);
+char*       print_ddmmyyyy(char* buf, unsigned int length, time_t t);
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/window_log.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/window_log.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/window_log.cc	2005-08-28 01:10:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/window_log.cc	2005-10-18 02:54:29.000000000 +0800
@@ -66,16 +66,18 @@
 void
 WindowLog::redraw() {
   m_canvas->erase();
 
   int pos = 0;
 
-  for (core::Log::iterator itr = m_log->begin(), end = find_older(); itr != end && pos < m_canvas->get_height(); ++itr)
-    m_canvas->print(0, pos++, "(%s) %s",
-		    print_hhmmss(itr->first).c_str(),
-		    itr->second.c_str());
+  for (core::Log::iterator itr = m_log->begin(), end = find_older(); itr != end && pos < m_canvas->get_height(); ++itr) {
+    char buffer[16];
+    print_hhmmss(buffer, 16, static_cast<time_t>(itr->first.seconds()));
+
+    m_canvas->print(0, pos++, "(%s) %s", buffer, itr->second.c_str());
+  }
 }
 
 void
 WindowLog::receive_update() {
   iterator itr = find_older();
   int h = std::min(std::distance(m_log->begin(), itr), (std::iterator_traits<iterator>::difference_type)10);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/window_log_complete.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/window_log_complete.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/window_log_complete.cc	2005-08-28 01:10:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/window_log_complete.cc	2005-10-18 02:54:26.000000000 +0800
@@ -66,16 +66,18 @@
   m_canvas->erase();
 
   int pos = 0;
 
   m_canvas->print(std::max(0, (int)m_canvas->get_width() / 2 - 5), pos++, "*** Log ***");
 
-  for (core::Log::iterator itr = m_log->begin(), e = m_log->end(); itr != e && pos < m_canvas->get_height(); ++itr)
-    m_canvas->print(0, pos++, "(%s) %s",
-		    print_hhmmss(itr->first).c_str(),
-		    itr->second.c_str());
+  for (core::Log::iterator itr = m_log->begin(), e = m_log->end(); itr != e && pos < m_canvas->get_height(); ++itr) {
+    char buffer[16];
+    print_hhmmss(buffer, 16, static_cast<time_t>(itr->first.seconds()));
+
+    m_canvas->print(0, pos++, "(%s) %s", buffer, itr->second.c_str());
+  }
 }
 
 void
 WindowLogComplete::receive_update() {
   mark_dirty();
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/window_peer_info.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/window_peer_info.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/display/window_peer_info.cc	2005-08-31 23:14:42.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/display/window_peer_info.cc	2005-10-18 02:50:58.000000000 +0800
@@ -66,14 +66,19 @@
   m_canvas->print(0, y++, "Hash:    %s", utils::string_to_hex(d.get_hash()).c_str());
   m_canvas->print(0, y++, "Id:      %s", utils::escape_string(d.get_id()).c_str());
   m_canvas->print(0, y++, "Chunks:  %u / %u * %u",
 		  d.get_chunks_done(),
 		  d.get_chunks_total(),
 		  d.get_chunks_size());
-  m_canvas->print(0, y++, "Created: %s",
-		  print_ddmmyyyy(static_cast<time_t>(d.get_creation_date())).c_str());
+
+  char buffer[32], *position;
+  position = print_ddmmyyyy(buffer, 32, static_cast<time_t>(d.get_creation_date()));
+  position = print_string(position, buffer + 32 - position, " ");
+  position = print_hhmmss(position, buffer + 32 - position, static_cast<time_t>(d.get_creation_date()));
+
+  m_canvas->print(0, y++, "Created: %s", buffer);
 
   y++;
 
   m_canvas->print(0, y++, "Connection Type: %s ( %s / %s )",
 		  core::Download::connection_type_to_string(m_download->get_connection_current()),
 		  core::Download::connection_type_to_string(m_download->get_connection_leech()),
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/main.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/main.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/main.cc	2005-09-17 07:47:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/main.cc	2005-10-08 01:01:09.000000000 +0800
@@ -53,21 +53,23 @@
 #ifdef USE_EXECINFO
 #include <execinfo.h>
 #endif
 
 #include "core/download.h"
 #include "core/download_factory.h"
+#include "core/manager.h"
 #include "display/canvas.h"
 #include "display/window.h"
-#include "ui/control.h"
+#include "display/manager.h"
 #include "input/bindings.h"
 
 #include "utils/task.h"
 #include "utils/timer.h"
 #include "utils/directory.h"
 
+#include "control.h"
 #include "signal_handler.h"
 #include "option_file.h"
 #include "option_handler.h"
 #include "option_handler_rules.h"
 #include "option_parser.h"
 
@@ -92,13 +94,13 @@
   y = display::Canvas::get_screen_height();
 
   return r;
 }
 
 int
-parse_options(ui::Control* c, OptionHandler* optionHandler, int argc, char** argv) {
+parse_options(Control* c, OptionHandler* optionHandler, int argc, char** argv) {
   OptionParser optionParser;
 
   // Converted.
   optionParser.insert_flag('h', sigc::ptr_fun(&print_help));
 
   optionParser.insert_option('b', sigc::bind<0>(sigc::mem_fun(*optionHandler, &OptionHandler::process), "bind"));
@@ -110,13 +112,13 @@
   optionParser.insert_option_list('o', sigc::mem_fun(*optionHandler, &OptionHandler::process));
 
   return optionParser.process(argc, argv);
 }
 
 void
-initialize_option_handler(ui::Control* c, OptionHandler* optionHandler) {
+initialize_option_handler(Control* c, OptionHandler* optionHandler) {
   optionHandler->insert("max_peers",           new OptionHandlerInt(c, &apply_download_max_peers, &validate_download_peers));
   optionHandler->insert("min_peers",           new OptionHandlerInt(c, &apply_download_min_peers, &validate_download_peers));
   optionHandler->insert("max_uploads",         new OptionHandlerInt(c, &apply_download_max_uploads, &validate_download_peers));
 
   optionHandler->insert("download_rate",       new OptionHandlerInt(c, &apply_global_download_rate, &validate_rate));
   optionHandler->insert("upload_rate",         new OptionHandlerInt(c, &apply_global_upload_rate, &validate_rate));
@@ -157,32 +159,32 @@
 
   optionFile.slot_option(sigc::mem_fun(*optionHandler, &OptionHandler::process));
   optionFile.process(&f);
 }
 
 void
-load_session_torrents(ui::Control* c) {
+load_session_torrents(Control* c) {
   // Load session torrents.
-  std::list<std::string> l = c->get_core().get_download_store().get_formated_entries().make_list();
+  std::list<std::string> l = c->core()->get_download_store().get_formated_entries().make_list();
 
   for (std::list<std::string>::iterator first = l.begin(), last = l.end(); first != last; ++first) {
-    core::DownloadFactory* f = new core::DownloadFactory(*first, &c->get_core());
+    core::DownloadFactory* f = new core::DownloadFactory(*first, c->core());
 
     // Replace with session torrent flag.
     f->set_session(true);
     f->slot_finished(sigc::bind(sigc::ptr_fun(&rak::call_delete_func<core::DownloadFactory>), f));
     f->load();
     f->commit();
   }
 }
 
 void
-load_arg_torrents(ui::Control* c, char** first, char** last) {
+load_arg_torrents(Control* c, char** first, char** last) {
   //std::for_each(begin, end, std::bind1st(std::mem_fun(&core::Manager::insert), &c->get_core()));
   for (; first != last; ++first) {
-    core::DownloadFactory* f = new core::DownloadFactory(*first, &c->get_core());
+    core::DownloadFactory* f = new core::DownloadFactory(*first, c->core());
 
     // Replace with session torrent flag.
     f->set_start(true);
     f->slot_finished(sigc::bind(sigc::ptr_fun(&rak::call_delete_func<core::DownloadFactory>), f));
     f->load();
     f->commit();
@@ -191,53 +193,53 @@
 
 int
 main(int argc, char** argv) {
   utils::Timer::update();
 
   OptionHandler optionHandler;
-  ui::Control   uiControl;
+  Control   uiControl;
 
   srandom(utils::Timer::cache().usec());
   srand48(utils::Timer::cache().usec());
 
   initialize_option_handler(&uiControl, &optionHandler);
 
   try {
 
     SignalHandler::set_ignore(SIGPIPE);
-    SignalHandler::set_handler(SIGINT,  sigc::mem_fun(uiControl, &ui::Control::receive_shutdown));
+    SignalHandler::set_handler(SIGINT,  sigc::mem_fun(uiControl, &Control::receive_shutdown));
     SignalHandler::set_handler(SIGSEGV, sigc::bind(sigc::ptr_fun(&do_panic), SIGSEGV));
     SignalHandler::set_handler(SIGBUS,  sigc::bind(sigc::ptr_fun(&do_panic), SIGBUS));
     SignalHandler::set_handler(SIGFPE,  sigc::bind(sigc::ptr_fun(&do_panic), SIGFPE));
 
-    uiControl.get_core().initialize_first();
+    uiControl.core()->initialize_first();
 
     if (getenv("HOME"))
       load_option_file(getenv("HOME") + std::string("/.rtorrent.rc"), &optionHandler);
 
     int firstArg = parse_options(&uiControl, &optionHandler, argc, argv);
 
     uiControl.initialize();
 
     load_session_torrents(&uiControl);
     load_arg_torrents(&uiControl, argv + firstArg, argv + argc);
 
-    uiControl.get_display().adjust_layout();
+    uiControl.display()->adjust_layout();
 
     while (!uiControl.is_shutdown_completed()) {
       utils::Timer::update();
       utils::taskScheduler.execute(utils::Timer::cache());
 
       // This needs to be called every second or so. Currently done by
       // the throttle task in libtorrent.
       if (!utils::displayScheduler.empty() &&
 	  utils::displayScheduler.get_next_timeout() <= utils::Timer::cache())
-	uiControl.get_display().do_update();
+	uiControl.display()->do_update();
 
       // Do shutdown check before poll, not after.
-      uiControl.get_core().get_poll_manager()->poll(!utils::taskScheduler.empty() ?
+      uiControl.core()->get_poll_manager()->poll(!utils::taskScheduler.empty() ?
 						    utils::taskScheduler.get_next_timeout() - utils::Timer::cache() :
 						    60 * 1000000);
     }
 
     uiControl.cleanup();
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/Makefile.am	2005-08-28 01:11:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/Makefile.am	2005-10-03 20:11:31.000000000 +0800
@@ -12,12 +12,14 @@
 	$(top_srcdir)/src/core/libsub_core.a \
 	$(top_srcdir)/src/display/libsub_display.a \
 	$(top_srcdir)/src/input/libsub_input.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
 
 rtorrent_SOURCES = \
+	control.cc \
+	control.h \
 	main.cc \
 	option_file.cc \
 	option_file.h \
 	option_handler.cc \
 	option_handler.h \
 	option_handler_rules.cc \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/Makefile.in	2005-09-24 00:55:09.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/Makefile.in	2005-10-15 00:37:12.000000000 +0800
@@ -49,15 +49,16 @@
 mkinstalldirs = $(install_sh) -d
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 am__installdirs = "$(DESTDIR)$(bindir)"
 binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
 PROGRAMS = $(bin_PROGRAMS)
-am_rtorrent_OBJECTS = main.$(OBJEXT) option_file.$(OBJEXT) \
-	option_handler.$(OBJEXT) option_handler_rules.$(OBJEXT) \
-	option_parser.$(OBJEXT) signal_handler.$(OBJEXT)
+am_rtorrent_OBJECTS = control.$(OBJEXT) main.$(OBJEXT) \
+	option_file.$(OBJEXT) option_handler.$(OBJEXT) \
+	option_handler_rules.$(OBJEXT) option_parser.$(OBJEXT) \
+	signal_handler.$(OBJEXT)
 rtorrent_OBJECTS = $(am_rtorrent_OBJECTS)
 rtorrent_DEPENDENCIES = $(top_srcdir)/src/ui/libsub_ui.a \
 	$(top_srcdir)/src/core/libsub_core.a \
 	$(top_srcdir)/src/display/libsub_display.a \
 	$(top_srcdir)/src/input/libsub_input.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
@@ -177,12 +178,14 @@
 	$(top_srcdir)/src/core/libsub_core.a \
 	$(top_srcdir)/src/display/libsub_display.a \
 	$(top_srcdir)/src/input/libsub_input.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
 
 rtorrent_SOURCES = \
+	control.cc \
+	control.h \
 	main.cc \
 	option_file.cc \
 	option_file.h \
 	option_handler.cc \
 	option_handler.h \
 	option_handler_rules.cc \
@@ -255,12 +258,13 @@
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
 
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/control.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_file.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_handler.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_handler_rules.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_parser.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal_handler.Po@am__quote@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/option_handler_rules.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/option_handler_rules.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/option_handler_rules.cc	2005-08-28 06:43:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/option_handler_rules.cc	2005-10-08 01:04:32.000000000 +0800
@@ -37,14 +37,16 @@
 #include "config.h"
 
 #include <arpa/inet.h>
 #include <torrent/torrent.h>
 #include <netinet/in.h>
 
+#include "core/manager.h"
 #include "utils/directory.h"
-#include "ui/control.h"
+
+#include "control.h"
 #include "option_handler_rules.h"
 
 void receive_tracker_dump(std::istream* s);
 
 bool
 validate_ip(const std::string& arg) {
@@ -112,132 +114,132 @@
 bool
 validate_throttle_interval(int arg) {
   return arg > 0 && arg < 5000;
 }
 
 void
-apply_download_min_peers(ui::Control* m, int arg) {
-  m->get_core().get_download_list().slot_map_insert()["1_min_peers"] = sigc::bind(sigc::mem_fun(&core::Download::call<void, uint32_t, &torrent::Download::set_peers_min>), arg);
+apply_download_min_peers(Control* m, int arg) {
+  m->core()->get_download_list().slot_map_insert()["1_min_peers"] = sigc::bind(sigc::mem_fun(&core::Download::call<void, uint32_t, &torrent::Download::set_peers_min>), arg);
 }
 
 void
-apply_download_max_peers(ui::Control* m, int arg) {
-  m->get_core().get_download_list().slot_map_insert()["1_max_peers"] = sigc::bind(sigc::mem_fun(&core::Download::call<void, uint32_t, &torrent::Download::set_peers_max>), arg);
+apply_download_max_peers(Control* m, int arg) {
+  m->core()->get_download_list().slot_map_insert()["1_max_peers"] = sigc::bind(sigc::mem_fun(&core::Download::call<void, uint32_t, &torrent::Download::set_peers_max>), arg);
 }
 
 void
-apply_download_max_uploads(ui::Control* m, int arg) {
-  m->get_core().get_download_list().slot_map_insert()["1_max_uploads"] = sigc::bind(sigc::mem_fun(&core::Download::call<void, uint32_t, &torrent::Download::set_uploads_max>), arg);
+apply_download_max_uploads(Control* m, int arg) {
+  m->core()->get_download_list().slot_map_insert()["1_max_uploads"] = sigc::bind(sigc::mem_fun(&core::Download::call<void, uint32_t, &torrent::Download::set_uploads_max>), arg);
 }
 
 void
-apply_download_directory(ui::Control* m, const std::string& arg) {
+apply_download_directory(Control* m, const std::string& arg) {
   if (!arg.empty())
-    m->get_core().get_download_list().slot_map_insert()["1_directory"] = sigc::bind(sigc::mem_fun(&core::Download::set_root_directory), arg);
+    m->core()->get_download_list().slot_map_insert()["1_directory"] = sigc::bind(sigc::mem_fun(&core::Download::set_root_directory), arg);
   else
-    m->get_core().get_download_list().slot_map_insert().erase("1_directory");
+    m->core()->get_download_list().slot_map_insert().erase("1_directory");
 }
 
 void
-apply_connection_leech(ui::Control* m, const std::string& arg) {
-  m->get_core().get_download_list().slot_map_insert()["1_connection_leech"] = sigc::bind(sigc::mem_fun(&core::Download::set_connection_leech), arg);
+apply_connection_leech(Control* m, const std::string& arg) {
+  m->core()->get_download_list().slot_map_insert()["1_connection_leech"] = sigc::bind(sigc::mem_fun(&core::Download::set_connection_leech), arg);
 }
 
 void
-apply_connection_seed(ui::Control* m, const std::string& arg) {
-  m->get_core().get_download_list().slot_map_insert()["1_connection_seed"] = sigc::bind(sigc::mem_fun(&core::Download::set_connection_seed), arg);
+apply_connection_seed(Control* m, const std::string& arg) {
+  m->core()->get_download_list().slot_map_insert()["1_connection_seed"] = sigc::bind(sigc::mem_fun(&core::Download::set_connection_seed), arg);
 }
 
 void
-apply_global_download_rate(ui::Control* m, int arg) {
+apply_global_download_rate(Control* m, int arg) {
   torrent::set_down_throttle(arg * 1024);
 }
 
 void
-apply_global_upload_rate(ui::Control* m, int arg) {
+apply_global_upload_rate(Control* m, int arg) {
   torrent::set_up_throttle(arg * 1024);
 }
 
 void
-apply_hash_read_ahead(ui::Control* m, int arg) {
+apply_hash_read_ahead(Control* m, int arg) {
   torrent::set_hash_read_ahead(arg << 20);
 }
 
 void
-apply_hash_interval(ui::Control* m, int arg) {
+apply_hash_interval(Control* m, int arg) {
   torrent::set_hash_interval(arg * 1000);
 }
 
 void
-apply_hash_max_tries(ui::Control* m, int arg) {
+apply_hash_max_tries(Control* m, int arg) {
   torrent::set_hash_max_tries(arg);
 }
 
 void
-apply_max_open_files(ui::Control* m, int arg) {
+apply_max_open_files(Control* m, int arg) {
   torrent::set_max_open_files(arg);
 }
 
 void
-apply_max_open_sockets(ui::Control* m, int arg) {
+apply_max_open_sockets(Control* m, int arg) {
   torrent::set_max_open_sockets(arg);
 }
 
 void
-apply_throttle_interval(ui::Control* m, int arg) {
+apply_throttle_interval(Control* m, int arg) {
   torrent::set_throttle_interval(arg * 1000);
 }
 
 void
-apply_bind(ui::Control* m, const std::string& arg) {
+apply_bind(Control* m, const std::string& arg) {
   torrent::set_bind_address(arg);
 }
 
 void
-apply_ip(ui::Control* m, const std::string& arg) {
+apply_ip(Control* m, const std::string& arg) {
   torrent::set_local_address(arg);
 }
 
 // The arg string *must* have been checked with validate_port_range
 // first.
 void
-apply_port_range(ui::Control* m, const std::string& arg) {
+apply_port_range(Control* m, const std::string& arg) {
   int a = 0, b = 0;
     
   std::sscanf(arg.c_str(), "%i-%i", &a, &b);
 
-  m->get_core().set_port_range(a, b);
+  m->core()->set_port_range(a, b);
 }
 
 void
-apply_port_random(ui::Control* m, const std::string& arg) {
-  m->get_core().set_port_random(arg == "yes");
+apply_port_random(Control* m, const std::string& arg) {
+  m->core()->set_port_random(arg == "yes");
 }
 
 void
-apply_tracker_dump(ui::Control* m, const std::string& arg) {
+apply_tracker_dump(Control* m, const std::string& arg) {
   if (arg == "yes")
-    m->get_core().get_download_list().slot_map_insert()["1_tracker_dump"] = sigc::bind(sigc::mem_fun(&core::Download::call<sigc::connection, torrent::Download::SlotIStream, &torrent::Download::signal_tracker_dump>), sigc::ptr_fun(&receive_tracker_dump));
+    m->core()->get_download_list().slot_map_insert()["1_tracker_dump"] = sigc::bind(sigc::mem_fun(&core::Download::call<sigc::connection, torrent::Download::SlotIStream, &torrent::Download::signal_tracker_dump>), sigc::ptr_fun(&receive_tracker_dump));
   else
-    m->get_core().get_download_list().slot_map_insert().erase("1_tracker_dump");
+    m->core()->get_download_list().slot_map_insert().erase("1_tracker_dump");
 }
 
 void
-apply_use_udp_trackers(ui::Control* m, const std::string& arg) {
+apply_use_udp_trackers(Control* m, const std::string& arg) {
   if (arg == "yes")
-    m->get_core().get_download_list().slot_map_insert().erase("1_use_udp_trackers");
+    m->core()->get_download_list().slot_map_insert().erase("1_use_udp_trackers");
   else
-    m->get_core().get_download_list().slot_map_insert()["1_use_udp_trackers"] = sigc::bind(sigc::mem_fun(&core::Download::enable_udp_trackers), false);
+    m->core()->get_download_list().slot_map_insert()["1_use_udp_trackers"] = sigc::bind(sigc::mem_fun(&core::Download::enable_udp_trackers), false);
 }
 
 void
-apply_check_hash(ui::Control* m, const std::string& arg) {
+apply_check_hash(Control* m, const std::string& arg) {
   if (arg == "yes")
-    m->get_core().set_check_hash(true);
+    m->core()->set_check_hash(true);
   else
-    m->get_core().set_check_hash(false);
+    m->core()->set_check_hash(false);
 }
 
 void
-apply_session_directory(ui::Control* m, const std::string& arg) {
-  m->get_core().get_download_store().use(arg);
+apply_session_directory(Control* m, const std::string& arg) {
+  m->core()->get_download_store().use(arg);
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/option_handler_rules.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/option_handler_rules.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/option_handler_rules.h	2005-08-28 01:11:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/option_handler_rules.h	2005-10-03 20:43:31.000000000 +0800
@@ -41,15 +41,13 @@
 #include <stdexcept>
 #include <sigc++/bind.h>
 
 #include "option_handler.h"
 #include "core/download_slot_map.h"
 
-namespace ui {
-  class Control;
-}
+class Control;
 
 // Not pretty, but it is simple and easy to modify.
 
 bool validate_ip(const std::string& arg);
 bool validate_directory(const std::string& arg);
 bool validate_port_range(const std::string& arg);
@@ -62,46 +60,46 @@
 bool validate_hash_interval(int arg);
 bool validate_hash_max_tries(int arg);
 bool validate_fd(int arg);
 
 bool validate_throttle_interval(int arg);
 
-void apply_download_min_peers(ui::Control* m, int arg);
-void apply_download_max_peers(ui::Control* m, int arg);
-void apply_download_max_uploads(ui::Control* m, int arg);
-void apply_download_directory(ui::Control* m, const std::string& arg);
-
-void apply_connection_leech(ui::Control* m, const std::string& arg);
-void apply_connection_seed(ui::Control* m, const std::string& arg);
-
-void apply_global_download_rate(ui::Control* m, int arg);
-void apply_global_upload_rate(ui::Control* m, int arg);
-
-void apply_hash_read_ahead(ui::Control* m, int arg);
-void apply_hash_interval(ui::Control* m, int arg);
-void apply_hash_max_tries(ui::Control* m, int arg);
-void apply_max_open_files(ui::Control* m, int arg);
-void apply_max_open_sockets(ui::Control* m, int arg);
-void apply_throttle_interval(ui::Control* m, int arg);
-
-void apply_ip(ui::Control* m, const std::string& arg);
-void apply_bind(ui::Control* m, const std::string& arg);
-void apply_port_range(ui::Control* m, const std::string& arg);
-void apply_port_random(ui::Control* m, const std::string& arg);
-void apply_tracker_dump(ui::Control* m, const std::string& arg);
-void apply_use_udp_trackers(ui::Control* m, const std::string& arg);
-void apply_check_hash(ui::Control* m, const std::string& arg);
+void apply_download_min_peers(Control* m, int arg);
+void apply_download_max_peers(Control* m, int arg);
+void apply_download_max_uploads(Control* m, int arg);
+void apply_download_directory(Control* m, const std::string& arg);
+
+void apply_connection_leech(Control* m, const std::string& arg);
+void apply_connection_seed(Control* m, const std::string& arg);
+
+void apply_global_download_rate(Control* m, int arg);
+void apply_global_upload_rate(Control* m, int arg);
+
+void apply_hash_read_ahead(Control* m, int arg);
+void apply_hash_interval(Control* m, int arg);
+void apply_hash_max_tries(Control* m, int arg);
+void apply_max_open_files(Control* m, int arg);
+void apply_max_open_sockets(Control* m, int arg);
+void apply_throttle_interval(Control* m, int arg);
+
+void apply_ip(Control* m, const std::string& arg);
+void apply_bind(Control* m, const std::string& arg);
+void apply_port_range(Control* m, const std::string& arg);
+void apply_port_random(Control* m, const std::string& arg);
+void apply_tracker_dump(Control* m, const std::string& arg);
+void apply_use_udp_trackers(Control* m, const std::string& arg);
+void apply_check_hash(Control* m, const std::string& arg);
 
-void apply_session_directory(ui::Control* m, const std::string& arg);
+void apply_session_directory(Control* m, const std::string& arg);
 
 class OptionHandlerInt : public OptionHandlerBase {
 public:
   typedef bool (*Validate)(int);
-  typedef void (*Apply)(ui::Control*, int);
+  typedef void (*Apply)(Control*, int);
 
-  OptionHandlerInt(ui::Control* c, Apply a, Validate v) :
+  OptionHandlerInt(Control* c, Apply a, Validate v) :
     m_control(c), m_apply(a), m_validate(v) {}
 
   virtual void process(const std::string& key, const std::string& arg) {
     int a;
     
     if (std::sscanf(arg.c_str(), "%i", &a) != 1 ||
@@ -109,33 +107,33 @@
       throw std::runtime_error("Invalid argument for \"" + key + "\": \"" + arg + "\"");
     
     m_apply(m_control, a);
   }
 
 private:
-  ui::Control* m_control;
+  Control* m_control;
   Apply        m_apply;
   Validate     m_validate;
 };
 
 class OptionHandlerString : public OptionHandlerBase {
 public:
   typedef bool (*Validate)(const std::string&);
-  typedef void (*Apply)(ui::Control*, const std::string&);
+  typedef void (*Apply)(Control*, const std::string&);
 
-  OptionHandlerString(ui::Control* c, Apply a, Validate v) :
+  OptionHandlerString(Control* c, Apply a, Validate v) :
     m_control(c), m_apply(a), m_validate(v) {}
 
   virtual void process(const std::string& key, const std::string& arg) {
     if (!m_validate(arg))
       throw std::runtime_error("Invalid argument for \"" + key + "\": \"" + arg + "\"");
     
     m_apply(m_control, arg);
   }
 
 private:
-  ui::Control* m_control;
+  Control*     m_control;
   Apply        m_apply;
   Validate     m_validate;
 };
 
 #endif
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui: control.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui: control.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download.cc	2005-10-08 00:47:54.000000000 +0800
@@ -40,12 +40,13 @@
 #include <sigc++/bind.h>
 #include <torrent/torrent.h>
 #include <rak/functional.h>
 
 #include "core/download.h"
 #include "input/bindings.h"
+#include "input/manager.h"
 #include "display/window_title.h"
 #include "display/window_download_statusbar.h"
 
 #include "control.h"
 #include "download.h"
 #include "element_file_list.h"
@@ -59,13 +60,13 @@
   m_download(d),
   m_state(DISPLAY_MAX_SIZE),
 
   m_windowTitle(new WTitle(d->get_download().get_name())),
   m_windowDownloadStatus(new WDownloadStatus(d)),
 
-  m_window(c->get_display().end()),
+  m_window(c->display()->end()),
 
   m_control(c),
   m_bindings(new input::Bindings) {
 
   m_focus = m_peers.end();
 
@@ -80,13 +81,13 @@
 
   m_connPeerConnected    = m_download->get_download().signal_peer_connected(sigc::mem_fun(*this, &Download::receive_peer_connected));
   m_connPeerDisconnected = m_download->get_download().signal_peer_disconnected(sigc::mem_fun(*this, &Download::receive_peer_disconnected));
 }
 
 Download::~Download() {
-  if (m_window != m_control->get_display().end())
+  if (m_window != m_control->display()->end())
     throw std::logic_error("ui::Download::~Download() called on an active object");
 
   m_connPeerConnected.disconnect();
   m_connPeerDisconnected.disconnect();
 
   delete m_bindings;
@@ -96,52 +97,52 @@
   delete m_windowTitle;
   delete m_windowDownloadStatus;
 }
 
 void
 Download::activate() {
-  if (m_window != m_control->get_display().end())
+  if (m_window != m_control->display()->end())
     throw std::logic_error("ui::Download::activate() called on an already activated object");
 
-  m_control->get_display().push_front(m_windowDownloadStatus);
-  m_window = m_control->get_display().insert(m_control->get_display().begin(), NULL);
-  m_control->get_display().push_front(m_windowTitle);
+  m_control->display()->push_front(m_windowDownloadStatus);
+  m_window = m_control->display()->insert(m_control->display()->begin(), NULL);
+  m_control->display()->push_front(m_windowTitle);
 
-  m_control->get_input().push_front(m_bindings);
+  m_control->input()->push_front(m_bindings);
 
   activate_display(DISPLAY_PEER_LIST);
 }
 
 void
 Download::disable() {
-  if (m_window == m_control->get_display().end())
+  if (m_window == m_control->display()->end())
     throw std::logic_error("ui::Download::disable() called on an already disabled object");
 
   disable_display();
 
-  m_control->get_display().erase(m_window);
-  m_control->get_display().erase(m_windowTitle);
-  m_control->get_display().erase(m_windowDownloadStatus);
+  m_control->display()->erase(m_window);
+  m_control->display()->erase(m_windowTitle);
+  m_control->display()->erase(m_windowDownloadStatus);
 
-  m_window = m_control->get_display().end();
+  m_window = m_control->display()->end();
 
-  m_control->get_input().erase(m_bindings);
+  m_control->input()->erase(m_bindings);
 }
 
 void
 Download::activate_display(Display d) {
-  if (m_window == m_control->get_display().end())
+  if (m_window == m_control->display()->end())
     throw std::logic_error("ui::Download::activate_display(...) could not find previous display iterator");
 
   if (d >= DISPLAY_MAX_SIZE)
     throw std::logic_error("ui::Download::activate_display(...) out of bounds");
 
   m_state = d;
   m_uiArray[d]->activate(m_control, m_window);
 
-  m_control->get_display().adjust_layout();
+  m_control->display()->adjust_layout();
 }
 
 // Does not delete disabled window.
 void
 Download::disable_display() {
   m_uiArray[m_state]->disable(m_control);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download.h	2005-10-08 00:47:34.000000000 +0800
@@ -38,27 +38,29 @@
 #define RTORRENT_UI_DOWNLOAD_H
 
 #include <list>
 #include <torrent/peer.h>
 #include <sigc++/connection.h>
 
+#include "display/manager.h"
 #include "utils/list_focus.h"
 
+class Control;
+
 namespace display {
   class WindowTitle;
   class WindowStatusbar;
   class WindowDownloadStatusbar;
 }
 
 namespace core {
   class Download;
 }
 
 namespace ui {
 
-class Control;
 class ElementBase;
 
 class Download {
 public:
   typedef display::WindowTitle             WTitle;
   typedef display::WindowDownloadStatusbar WDownloadStatus;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download_list.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download_list.cc	2005-10-08 00:49:38.000000000 +0800
@@ -41,14 +41,16 @@
 #include <sigc++/bind.h>
 #include <sigc++/hide.h>
 #include <torrent/torrent.h>
 
 #include "core/download.h"
 #include "core/download_factory.h"
+#include "core/manager.h"
 
 #include "input/bindings.h"
+#include "input/manager.h"
 #include "input/path_input.h"
 
 #include "display/window_http_queue.h"
 #include "display/window_input.h"
 #include "display/window_log.h"
 #include "display/window_title.h"
@@ -57,33 +59,34 @@
 #include "control.h"
 #include "download.h"
 #include "download_list.h"
 #include "element_download_list.h"
 #include "element_log_complete.h"
 #include "element_string_list.h"
+#include "root.h"
 
 namespace ui {
 
 DownloadList::DownloadList(Control* c) :
   m_state(DISPLAY_MAX_SIZE),
 
-  m_window(c->get_display().end()),
+  m_window(c->display()->end()),
 
   m_windowTitle(new WTitle("rTorrent " VERSION " - libTorrent " + std::string(torrent::get_version()))),
-  m_windowHttpQueue(new WHttp(&c->get_core().get_http_queue())),
+  m_windowHttpQueue(new WHttp(&c->core()->get_http_queue())),
 
   m_uiDownload(NULL),
 
-  m_downloadList(&c->get_core().get_download_list()),
+  m_downloadList(&c->core()->get_download_list()),
 
   m_control(c),
   m_bindings(new input::Bindings)
 {
   m_uiArray[DISPLAY_DOWNLOAD_LIST] = new ElementDownloadList(&m_downloadList);
-  m_uiArray[DISPLAY_LOG]           = new ElementLogComplete(&m_control->get_core().get_log_complete());
-  m_windowLog                      = new WLog(&m_control->get_core().get_log_important());
+  m_uiArray[DISPLAY_LOG]           = new ElementLogComplete(&m_control->core()->get_log_complete());
+  m_windowLog                      = new WLog(&m_control->core()->get_log_important());
 
   m_taskUpdate.set_iterator(utils::taskScheduler.end());
   m_taskUpdate.set_slot(sigc::mem_fun(*this, &DownloadList::task_update)),
 
   setup_keys();
   setup_input();
@@ -110,19 +113,19 @@
     throw std::logic_error("ui::Download::activate() called on an already activated object");
 
   utils::taskScheduler.insert(&m_taskUpdate, utils::Timer::cache() + 1000000);
 
   m_windowTextInput->set_active(false);
 
-  m_control->get_display().push_front(m_windowTextInput);
-  m_control->get_display().push_front(m_windowHttpQueue);
-  m_control->get_display().push_front(m_windowLog);
-  m_window = m_control->get_display().insert(m_control->get_display().begin(), NULL);
-  m_control->get_display().push_front(m_windowTitle);
+  m_control->display()->push_front(m_windowTextInput);
+  m_control->display()->push_front(m_windowHttpQueue);
+  m_control->display()->push_front(m_windowLog);
+  m_window = m_control->display()->insert(m_control->display()->begin(), NULL);
+  m_control->display()->push_front(m_windowTitle);
 
-  m_control->get_input().push_front(m_bindings);
+  m_control->input()->push_front(m_bindings);
 
   activate_display(DISPLAY_DOWNLOAD_LIST);
 }
 
 void
 DownloadList::disable() {
@@ -135,21 +138,21 @@
   }
 
   disable_display();
 
   utils::taskScheduler.erase(&m_taskUpdate);
 
-  m_control->get_display().erase(m_window);
-  m_control->get_display().erase(m_windowTitle);
-  m_control->get_display().erase(m_windowTextInput);
-  m_control->get_display().erase(m_windowLog);
-  m_control->get_display().erase(m_windowHttpQueue);
+  m_control->display()->erase(m_window);
+  m_control->display()->erase(m_windowTitle);
+  m_control->display()->erase(m_windowTextInput);
+  m_control->display()->erase(m_windowLog);
+  m_control->display()->erase(m_windowHttpQueue);
 
-  m_window = m_control->get_display().end();
+  m_window = m_control->display()->end();
 
-  m_control->get_input().erase(m_bindings);
+  m_control->input()->erase(m_bindings);
 }
 
 void
 DownloadList::activate_display(Display d) {
   if (!is_active())
     throw std::logic_error("ui::DownloadList::activate_display(...) could not find previous display iterator");
@@ -157,13 +160,13 @@
   if (d >= DISPLAY_MAX_SIZE)
     throw std::logic_error("ui::DownloadList::activate_display(...) out of bounds");
 
   m_state = d;
   m_uiArray[d]->activate(m_control, m_window);
 
-  m_control->get_display().adjust_layout();
+  m_control->display()->adjust_layout();
 }
 
 // Does not delete disabled window.
 void
 DownloadList::disable_display() {
   m_uiArray[m_state]->disable(m_control);
@@ -184,24 +187,24 @@
 
 void
 DownloadList::receive_start_download() {
   if (m_downloadList.get_focus() == m_downloadList.end())
     return;
 
-  m_control->get_core().start(*m_downloadList.get_focus());
+  m_control->core()->start(*m_downloadList.get_focus());
 }
 
 void
 DownloadList::receive_stop_download() {
   if (m_downloadList.get_focus() == m_downloadList.end())
     return;
 
   if ((*m_downloadList.get_focus())->get_download().is_active())
-    m_control->get_core().stop(*m_downloadList.get_focus());
+    m_control->core()->stop(*m_downloadList.get_focus());
   else
-    m_downloadList.set_focus(m_control->get_core().erase(m_downloadList.get_focus()));
+    m_downloadList.set_focus(m_control->core()->erase(m_downloadList.get_focus()));
 }
 
 void
 DownloadList::receive_view_download() {
   if (m_downloadList.get_focus() == m_downloadList.end())
     return;
@@ -225,52 +228,52 @@
   m_uiDownload->disable();
   delete m_uiDownload;
   m_uiDownload = NULL;
 
   activate();
 
-  m_control->get_display().adjust_layout();
+  m_control->display()->adjust_layout();
 }
 
 void
 DownloadList::receive_check_hash() {
   if (m_downloadList.get_focus() == m_downloadList.end())
     return;
 
-  m_control->get_core().check_hash(*m_downloadList.get_focus());
+  m_control->core()->check_hash(*m_downloadList.get_focus());
 }
 
 void
 DownloadList::receive_view_input(bool useDefault) {
   if (m_windowTextInput->get_active())
     return;
 
-  m_control->get_ui().window_statusbar()->set_active(false);
+  m_control->ui()->window_statusbar()->set_active(false);
   m_windowTextInput->set_active(true);
-  m_control->get_display().adjust_layout();
+  m_control->display()->adjust_layout();
 
-  m_control->get_input().set_text_input(m_windowTextInput->get_input());
+  m_control->input()->set_text_input(m_windowTextInput->get_input());
 
   m_windowTextInput->set_focus(true);
 
   (*m_bindings)['\n'] = sigc::bind(sigc::mem_fun(*this, &DownloadList::receive_exit_input), useDefault);
   (*m_bindings)[KEY_ENTER] = sigc::bind(sigc::mem_fun(*this, &DownloadList::receive_exit_input), useDefault);
 }
 
 void
 DownloadList::receive_exit_input(bool useDefault) {
   if (!m_windowTextInput->get_active())
     return;
 
-  m_control->get_ui().window_statusbar()->set_active(true);
+  m_control->ui()->window_statusbar()->set_active(true);
   m_windowTextInput->set_active(false);
 
-  m_control->get_input().set_text_input();
+  m_control->input()->set_text_input();
 
   // Adding download.
-  core::DownloadFactory* f = new core::DownloadFactory(m_windowTextInput->get_input()->str(), &m_control->get_core());
+  core::DownloadFactory* f = new core::DownloadFactory(m_windowTextInput->get_input()->str(), m_control->core());
 
   f->set_start(useDefault);
   f->slot_finished(sigc::bind(sigc::ptr_fun(&rak::call_delete_func<core::DownloadFactory>), f));
   f->load();
   f->commit();
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/download_list.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/download_list.h	2005-10-08 00:56:53.000000000 +0800
@@ -37,15 +37,18 @@
 #ifndef RTORRENT_UI_DOWNLOAD_LIST_H
 #define RTORRENT_UI_DOWNLOAD_LIST_H
 
 #include <sigc++/slot.h>
 
 #include "core/download_list.h"
+#include "display/manager.h"
 #include "utils/task.h"
 #include "utils/list_focus.h"
 
+class Control;
+
 namespace input {
   class Bindings;
 }
 
 namespace display {
   class WindowDownloadList;
@@ -55,13 +58,12 @@
   class WindowLogComplete;
   class WindowTitle;
 }
 
 namespace ui {
 
-class Control;
 class Download;
 class ElementBase;
 
 class DownloadList {
 public:
   typedef display::WindowDownloadList              WList;
@@ -86,13 +88,13 @@
 
   DownloadList(Control* c);
   ~DownloadList();
 
   input::Bindings&    get_bindings()               { return *m_bindings; }
 
-  bool                is_active() const            { return m_window != m_control->get_display().end(); }
+  bool                is_active() const            { return m_window != m_control->display()->end(); }
 
   void                activate();
   void                disable();
 
   void                activate_display(Display d);
   void                disable_display();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_download_list.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_download_list.cc	2005-10-08 00:51:35.000000000 +0800
@@ -36,12 +36,13 @@
 
 #include "config.h"
 
 #include <stdexcept>
 
 #include "display/window_download_list.h"
+#include "input/manager.h"
 
 #include "control.h"
 #include "element_download_list.h"
 
 namespace ui {
 
@@ -52,23 +53,23 @@
 
 void
 ElementDownloadList::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementDownloadList::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WDownloadList(m_list);
 }
 
 void
 ElementDownloadList::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementDownloadList::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_download_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_download_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_download_list.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_download_list.h	2005-10-03 20:43:30.000000000 +0800
@@ -39,20 +39,20 @@
 
 #include "core/download_list.h"
 #include "utils/list_focus.h"
 
 #include "element_base.h"
 
+class Control;
+
 namespace display {
   class WindowDownloadList;
 }
 
 namespace ui {
 
-class Control;
-
 class ElementDownloadList : public ElementBase {
 public:
   typedef display::WindowDownloadList          WDownloadList;
   typedef utils::ListFocus<core::DownloadList> DList;
 
   ElementDownloadList(DList* l);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_file_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_file_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_file_list.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_file_list.cc	2005-10-08 00:51:59.000000000 +0800
@@ -36,12 +36,13 @@
 
 #include "config.h"
 
 #include <stdexcept>
 
 #include "display/window_file_list.h"
+#include "input/manager.h"
 
 #include "control.h"
 #include "element_file_list.h"
 
 namespace ui {
 
@@ -58,23 +59,23 @@
 
 void
 ElementFileList::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementFileList::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WFileList(m_download, &m_focus);
 }
 
 void
 ElementFileList::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementFileList::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 void
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_file_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_file_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_file_list.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_file_list.h	2005-10-03 20:43:30.000000000 +0800
@@ -38,20 +38,20 @@
 #define RTORRENT_UI_ELEMENT_FILE_LIST_H
 
 #include "core/download.h"
 
 #include "element_base.h"
 
+class Control;
+
 namespace display {
   class WindowFileList;
 }
 
 namespace ui {
 
-class Control;
-
 class ElementFileList : public ElementBase {
 public:
   typedef torrent::Entry::Priority Priority;
   typedef display::WindowFileList  WFileList;
 
   ElementFileList(core::Download* d);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_log_complete.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_log_complete.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_log_complete.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_log_complete.cc	2005-10-08 00:52:19.000000000 +0800
@@ -36,12 +36,13 @@
 
 #include "config.h"
 
 #include <stdexcept>
 
 #include "display/window_log_complete.h"
+#include "input/manager.h"
 
 #include "control.h"
 #include "element_log_complete.h"
 
 namespace ui {
 
@@ -52,23 +53,23 @@
 
 void
 ElementLogComplete::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementLogComplete::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WLogComplete(m_log);
 }
 
 void
 ElementLogComplete::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementLogComplete::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_log_complete.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_log_complete.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_log_complete.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_log_complete.h	2005-10-03 20:43:30.000000000 +0800
@@ -38,20 +38,20 @@
 #define RTORRENT_UI_ELEMENT_LOG_COMPLETE_H
 
 #include "core/log.h"
 
 #include "element_base.h"
 
+class Control;
+
 namespace display {
   class WindowLogComplete;
 }
 
 namespace ui {
 
-class Control;
-
 class ElementLogComplete : public ElementBase {
 public:
   typedef display::WindowLogComplete    WLogComplete;
 
   ElementLogComplete(core::Log* l);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_info.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_info.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_info.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_info.cc	2005-10-08 00:53:17.000000000 +0800
@@ -36,12 +36,13 @@
 
 #include "config.h"
 
 #include <stdexcept>
 
 #include "display/window_peer_info.h"
+#include "input/manager.h"
 
 #include "control.h"
 #include "element_peer_info.h"
 
 namespace ui {
 
@@ -55,23 +56,23 @@
 
 void
 ElementPeerInfo::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementPeerInfo::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WPeerInfo(m_download, m_list, m_focus);
 }
 
 void
 ElementPeerInfo::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementPeerInfo::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_info.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_info.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_info.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_info.h	2005-10-03 20:43:30.000000000 +0800
@@ -38,20 +38,20 @@
 #define RTORRENT_UI_ELEMENT_PEER_INFO_H
 
 #include "core/download.h"
 
 #include "element_base.h"
 
+class Control;
+
 namespace display {
   class WindowPeerInfo;
 }
 
 namespace ui {
 
-class Control;
-
 class ElementPeerInfo : public ElementBase {
 public:
   typedef display::WindowPeerInfo       WPeerInfo;
   typedef std::list<torrent::Peer>      PList;
 
   ElementPeerInfo(core::Download* d, PList* l, PList::iterator* f);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_list.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_list.cc	2005-10-08 00:53:49.000000000 +0800
@@ -36,12 +36,13 @@
 
 #include "config.h"
 
 #include <stdexcept>
 
 #include "display/window_peer_list.h"
+#include "input/manager.h"
 
 #include "control.h"
 #include "element_peer_list.h"
 
 namespace ui {
 
@@ -55,23 +56,23 @@
 
 void
 ElementPeerList::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementPeerList::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WPeerList(m_download, m_list, m_focus);
 }
 
 void
 ElementPeerList::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementPeerList::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_peer_list.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_peer_list.h	2005-10-03 20:43:30.000000000 +0800
@@ -38,20 +38,20 @@
 #define RTORRENT_UI_ELEMENT_PEER_LIST_H
 
 #include "core/download.h"
 
 #include "element_base.h"
 
+class Control;
+
 namespace display {
   class WindowPeerList;
 }
 
 namespace ui {
 
-class Control;
-
 class ElementPeerList : public ElementBase {
 public:
   typedef display::WindowPeerList       WPeerList;
   typedef std::list<torrent::Peer>      PList;
 
   ElementPeerList(core::Download* d, PList* l, PList::iterator* f);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_string_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_string_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_string_list.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_string_list.cc	2005-10-08 00:54:34.000000000 +0800
@@ -35,12 +35,14 @@
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
 #include <stdexcept>
 
+#include "input/manager.h"
+
 #include "control.h"
 #include "element_string_list.h"
 
 namespace ui {
 
 ElementStringList::ElementStringList() :
@@ -49,25 +51,25 @@
 
 void
 ElementStringList::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementStringList::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WStringList();
 
   m_window->set_range(m_list.begin(), m_list.end());
 }
 
 void
 ElementStringList::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementStringList::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 void
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_string_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_string_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_string_list.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_string_list.h	2005-10-03 20:43:30.000000000 +0800
@@ -43,16 +43,16 @@
 #include <functional>
 
 #include "element_base.h"
 
 #include "display/window_string_list.h"
 
-namespace ui {
-
 class Control;
 
+namespace ui {
+
 class ElementStringList : public ElementBase {
 public:
   typedef display::WindowStringList     WStringList;
   typedef std::list<std::string>        List;
 
   ElementStringList();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_tracker_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_tracker_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_tracker_list.cc	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_tracker_list.cc	2005-10-08 00:55:29.000000000 +0800
@@ -36,12 +36,13 @@
 
 #include "config.h"
 
 #include <stdexcept>
 
 #include "display/window_tracker_list.h"
+#include "input/manager.h"
 
 #include "control.h"
 #include "element_tracker_list.h"
 
 namespace ui {
 
@@ -57,23 +58,23 @@
 
 void
 ElementTrackerList::activate(Control* c, MItr mItr) {
   if (m_window != NULL)
     throw std::logic_error("ui::ElementTrackerList::activate(...) called on an object in the wrong state");
 
-  c->get_input().push_front(&m_bindings);
+  c->input()->push_front(&m_bindings);
 
   *mItr = m_window = new WTrackerList(m_download, &m_focus);
 }
 
 void
 ElementTrackerList::disable(Control* c) {
   if (m_window == NULL)
     throw std::logic_error("ui::ElementTrackerList::disable(...) called on an object in the wrong state");
 
-  c->get_input().erase(&m_bindings);
+  c->input()->erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
 void
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_tracker_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_tracker_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/element_tracker_list.h	2005-08-28 01:11:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/element_tracker_list.h	2005-10-03 20:43:30.000000000 +0800
@@ -38,20 +38,20 @@
 #define RTORRENT_UI_ELEMENT_TRACKER_LIST_H
 
 #include "core/download.h"
 
 #include "element_base.h"
 
+class Control;
+
 namespace display {
   class WindowTrackerList;
 }
 
 namespace ui {
 
-class Control;
-
 class ElementTrackerList : public ElementBase {
 public:
   typedef display::WindowTrackerList    WTrackerList;
 
   ElementTrackerList(core::Download* d);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/Makefile.am	2005-08-28 01:11:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/Makefile.am	2005-10-03 20:11:20.000000000 +0800
@@ -1,11 +1,9 @@
 noinst_LIBRARIES = libsub_ui.a
 
 libsub_ui_a_SOURCES = \
-	control.cc \
-	control.h \
 	download.cc \
 	download.h \
 	download_list.cc \
 	download_list.h \
 	element_base.h \
 	element_download_list.cc \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/Makefile.in	2005-09-24 00:55:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/Makefile.in	2005-10-15 00:37:13.000000000 +0800
@@ -50,18 +50,17 @@
 CONFIG_CLEAN_FILES =
 LIBRARIES = $(noinst_LIBRARIES)
 AR = ar
 ARFLAGS = cru
 libsub_ui_a_AR = $(AR) $(ARFLAGS)
 libsub_ui_a_LIBADD =
-am_libsub_ui_a_OBJECTS = control.$(OBJEXT) download.$(OBJEXT) \
-	download_list.$(OBJEXT) element_download_list.$(OBJEXT) \
-	element_file_list.$(OBJEXT) element_log_complete.$(OBJEXT) \
-	element_peer_info.$(OBJEXT) element_peer_list.$(OBJEXT) \
-	element_string_list.$(OBJEXT) element_tracker_list.$(OBJEXT) \
-	root.$(OBJEXT)
+am_libsub_ui_a_OBJECTS = download.$(OBJEXT) download_list.$(OBJEXT) \
+	element_download_list.$(OBJEXT) element_file_list.$(OBJEXT) \
+	element_log_complete.$(OBJEXT) element_peer_info.$(OBJEXT) \
+	element_peer_list.$(OBJEXT) element_string_list.$(OBJEXT) \
+	element_tracker_list.$(OBJEXT) root.$(OBJEXT)
 libsub_ui_a_OBJECTS = $(am_libsub_ui_a_OBJECTS)
 DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
@@ -156,14 +155,12 @@
 sbindir = @sbindir@
 sharedstatedir = @sharedstatedir@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 noinst_LIBRARIES = libsub_ui.a
 libsub_ui_a_SOURCES = \
-	control.cc \
-	control.h \
 	download.cc \
 	download.h \
 	download_list.cc \
 	download_list.h \
 	element_base.h \
 	element_download_list.cc \
@@ -228,13 +225,12 @@
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
 
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/control.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/download.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/download_list.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/element_download_list.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/element_file_list.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/element_log_complete.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/element_peer_info.Po@am__quote@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/root.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/root.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/root.cc	2005-08-28 06:43:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/root.cc	2005-10-08 00:58:39.000000000 +0800
@@ -37,15 +37,17 @@
 #include "config.h"
 
 #include <stdexcept>
 #include <sigc++/bind.h>
 #include <torrent/torrent.h>
 
+#include "display/window_statusbar.h"
+#include "input/manager.h"
+
 #include "control.h"
 #include "download_list.h"
-#include "display/window_statusbar.h"
 
 #include "root.h"
 
 namespace ui {
 
 Root::Root() :
@@ -59,16 +61,16 @@
   if (m_control != NULL)
     throw std::logic_error("Root::init() called twice on the same object");
 
   m_control = c;
   setup_keys();
 
-  m_windowStatusbar = new WStatusbar(&m_control->get_core());
+  m_windowStatusbar = new WStatusbar(m_control->core());
   m_downloadList =    new DownloadList(m_control);
 
-  m_control->get_display().push_back(m_windowStatusbar);
+  m_control->display()->push_back(m_windowStatusbar);
 
   m_downloadList->activate();
   //  m_downloadList->slot_open_uri(sigc::mem_fun(m_control->get_core(), &core::Manager::insert));
 }
 
 void
@@ -76,24 +78,24 @@
   if (m_control == NULL)
     throw std::logic_error("Root::cleanup() called twice on the same object");
 
   if (m_downloadList->is_active())
     m_downloadList->disable();
 
-  m_control->get_display().erase(m_windowStatusbar);
+  m_control->display()->erase(m_windowStatusbar);
 
   delete m_downloadList;
   delete m_windowStatusbar;
 
-  m_control->get_input().erase(&m_bindings);
+  m_control->input()->erase(&m_bindings);
   m_control = NULL;
 }
 
 void
 Root::setup_keys() {
-  m_control->get_input().push_back(&m_bindings);
+  m_control->input()->push_back(&m_bindings);
 
   m_bindings['a']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_up_throttle), 1);
   m_bindings['z']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_up_throttle), -1);
   m_bindings['s']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_up_throttle), 5);
   m_bindings['x']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_up_throttle), -5);
   m_bindings['d']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_up_throttle), 50);
@@ -103,13 +105,13 @@
   m_bindings['Z']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_down_throttle), -1);
   m_bindings['S']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_down_throttle), 5);
   m_bindings['X']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_down_throttle), -5);
   m_bindings['D']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_down_throttle), 50);
   m_bindings['C']           = sigc::bind(sigc::mem_fun(*this, &Root::receive_down_throttle), -50);
 
-  m_bindings[KEY_RESIZE]    = sigc::mem_fun(m_control->get_display(), &display::Manager::adjust_layout);
+  m_bindings[KEY_RESIZE]    = sigc::mem_fun(*m_control->display(), &display::Manager::adjust_layout);
   m_bindings['\x11']        = sigc::mem_fun(*m_control, &Control::receive_shutdown);
 }
 
 void
 Root::receive_down_throttle(int t) {
   m_windowStatusbar->mark_dirty();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/root.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/root.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.5/src/ui/root.h	2005-08-28 06:43:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.3.6/src/ui/root.h	2005-10-03 20:42:10.000000000 +0800
@@ -36,20 +36,21 @@
 
 #ifndef RTORRENT_UI_ROOT_H
 #define RTORRENT_UI_ROOT_H
 
 #include "input/bindings.h"
 
+class Control;
+
 namespace display {
   class WindowStatusbar;
 }
 
 namespace ui {
 
 class DownloadList;
-class Control;
 
 class Root {
 public:
   typedef display::WindowStatusbar WStatusbar;
 
   Root();

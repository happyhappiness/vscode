diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/configure	2005-05-31 03:22:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/configure	2005-06-01 21:44:21.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.57 for rtorrent 0.2.3.
+# Generated by GNU Autoconf 2.57 for rtorrent 0.2.4.
 #
 # Report bugs to <jaris@ifi.uio.no>.
 #
 # Copyright 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002
 # Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
@@ -265,14 +265,14 @@
 # only ac_max_sed_lines should be used.
 : ${ac_max_here_lines=38}
 
 # Identity of this package.
 PACKAGE_NAME='rtorrent'
 PACKAGE_TARNAME='rtorrent'
-PACKAGE_VERSION='0.2.3'
-PACKAGE_STRING='rtorrent 0.2.3'
+PACKAGE_VERSION='0.2.4'
+PACKAGE_STRING='rtorrent 0.2.4'
 PACKAGE_BUGREPORT='jaris@ifi.uio.no'
 
 ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE CXX CXXFLAGS LDFLAGS CPPFLAGS ac_ct_CXX EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CXXDEPMODE RANLIB ac_ct_RANLIB CC CFLAGS ac_ct_CC CCDEPMODE PKG_CONFIG STUFF_CFLAGS STUFF_LIBS LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -742,13 +742,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures rtorrent 0.2.3 to adapt to many kinds of systems.
+\`configure' configures rtorrent 0.2.4 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -804,13 +804,13 @@
   --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of rtorrent 0.2.3:";;
+     short | recursive ) echo "Configuration of rtorrent 0.2.4:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -893,13 +893,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit 0
 if $ac_init_version; then
   cat <<\_ACEOF
-rtorrent configure 0.2.3
+rtorrent configure 0.2.4
 generated by GNU Autoconf 2.57
 
 Copyright 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002
 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
@@ -908,13 +908,13 @@
 fi
 exec 5>config.log
 cat >&5 <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by rtorrent $as_me 0.2.3, which was
+It was created by rtorrent $as_me 0.2.4, which was
 generated by GNU Autoconf 2.57.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 {
@@ -1499,13 +1499,13 @@
 echo "$as_me: error: source directory already configured; run \"make distclean\" there first" >&2;}
    { (exit 1); exit 1; }; }
 fi
 
 # Define the identity of the package.
  PACKAGE=rtorrent
- VERSION=0.2.3
+ VERSION=0.2.4
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -3793,37 +3793,37 @@
      echo "*** in your path, or set the PKG_CONFIG environment variable"
      echo "*** to the full path to pkg-config."
      echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
   else
      PKG_CONFIG_MIN_VERSION=0.9.0
      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for sigc++-2.0 libtorrent >= 0.6.3" >&5
-echo $ECHO_N "checking for sigc++-2.0 libtorrent >= 0.6.3... $ECHO_C" >&6
+        echo "$as_me:$LINENO: checking for sigc++-2.0 libtorrent >= 0.6.4" >&5
+echo $ECHO_N "checking for sigc++-2.0 libtorrent >= 0.6.4... $ECHO_C" >&6
 
-        if $PKG_CONFIG --exists "sigc++-2.0 libtorrent >= 0.6.3" ; then
+        if $PKG_CONFIG --exists "sigc++-2.0 libtorrent >= 0.6.4" ; then
             echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
             succeeded=yes
 
             echo "$as_me:$LINENO: checking STUFF_CFLAGS" >&5
 echo $ECHO_N "checking STUFF_CFLAGS... $ECHO_C" >&6
-            STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libtorrent >= 0.6.3"`
+            STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libtorrent >= 0.6.4"`
             echo "$as_me:$LINENO: result: $STUFF_CFLAGS" >&5
 echo "${ECHO_T}$STUFF_CFLAGS" >&6
 
             echo "$as_me:$LINENO: checking STUFF_LIBS" >&5
 echo $ECHO_N "checking STUFF_LIBS... $ECHO_C" >&6
-            STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libtorrent >= 0.6.3"`
+            STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libtorrent >= 0.6.4"`
             echo "$as_me:$LINENO: result: $STUFF_LIBS" >&5
 echo "${ECHO_T}$STUFF_LIBS" >&6
         else
             STUFF_CFLAGS=""
             STUFF_LIBS=""
             ## If we have a custom action on failure, don't print errors, but
             ## do set a variable so people can do so.
-            STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.6.3"`
+            STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.6.4"`
             echo $STUFF_PKG_ERRORS
         fi
 
 
 
      else
@@ -3833,14 +3833,14 @@
   fi
 
   if test $succeeded = yes; then
      CXXFLAGS="$CXXFLAGS $STUFF_CFLAGS $CURL_CFLAGS";
 		  LIBS="$LIBS $STUFF_LIBS $CURL_LIBS"
   else
-     { { echo "$as_me:$LINENO: error: Library requirements (sigc++-2.0 libtorrent >= 0.6.3) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
-echo "$as_me: error: Library requirements (sigc++-2.0 libtorrent >= 0.6.3) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
+     { { echo "$as_me:$LINENO: error: Library requirements (sigc++-2.0 libtorrent >= 0.6.4) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
+echo "$as_me: error: Library requirements (sigc++-2.0 libtorrent >= 0.6.4) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
    { (exit 1); exit 1; }; }
   fi
 
 
 
 cat >>confdefs.h <<\_ACEOF
@@ -4213,13 +4213,13 @@
   sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
 ## Running $as_me. ##
 _ASBOX
 } >&5
 cat >&5 <<_CSEOF
 
-This file was extended by rtorrent $as_me 0.2.3, which was
+This file was extended by rtorrent $as_me 0.2.4, which was
 generated by GNU Autoconf 2.57.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -4276,13 +4276,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 _ACEOF
 
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-rtorrent config.status 0.2.3
+rtorrent config.status 0.2.4
 configured by $0, generated by GNU Autoconf 2.57,
   with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001
 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/configure.ac	2005-05-31 03:21:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/configure.ac	2005-05-30 23:55:55.000000000 +0800
@@ -1,7 +1,7 @@
-AC_INIT(rtorrent, 0.2.3, jaris@ifi.uio.no)
+AC_INIT(rtorrent, 0.2.4, jaris@ifi.uio.no)
 
 AM_INIT_AUTOMAKE
 AM_CONFIG_HEADER(config.h)
 
 sinclude(scripts/checks.m4)
 sinclude(scripts/common.m4)
@@ -17,13 +17,13 @@
 AC_SEARCH_LIBS(wbkgdset, ncurses curses,,echo "*** The ncurses library is required!";exit 1)
 
 TORRENT_CHECK_EXECINFO()
 TORRENT_CHECK_CURL()
 TORRENT_OTFD()
 
-PKG_CHECK_MODULES(STUFF, sigc++-2.0 libtorrent >= 0.6.3,
+PKG_CHECK_MODULES(STUFF, sigc++-2.0 libtorrent >= 0.6.4,
 	          CXXFLAGS="$CXXFLAGS $STUFF_CFLAGS $CURL_CFLAGS";
 		  LIBS="$LIBS $STUFF_LIBS $CURL_LIBS")
 
 AC_DEFINE(HAVE_CONFIG_H, 1, true if config.h was included)
 
 AC_OUTPUT([
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/doc: rtorrent.rc
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/Makefile.am	2005-05-31 03:22:23.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/Makefile.am	2005-06-08 06:19:17.000000000 +0800
@@ -1,9 +1,10 @@
 SUBDIRS = src
 
 EXTRA_DIST= \
 	autogen.sh \
 	doc/rtorrent.1.txt \
+	doc/rtorrent.rc \
 	rak/algorithm.h \
 	rak/functional.h \
 	scripts/checks.m4 \
 	scripts/common.m4
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/Makefile.in	2005-05-31 03:22:31.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/Makefile.in	2005-06-08 06:21:32.000000000 +0800
@@ -78,12 +78,13 @@
 install_sh = @install_sh@
 SUBDIRS = src
 
 EXTRA_DIST = \
 	autogen.sh \
 	doc/rtorrent.1.txt \
+	doc/rtorrent.rc \
 	rak/algorithm.h \
 	rak/functional.h \
 	scripts/checks.m4 \
 	scripts/common.m4
 
 subdir = .
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/rak/functional.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/rak/functional.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/rak/functional.h	2005-05-31 03:21:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/rak/functional.h	2005-06-06 09:10:32.000000000 +0800
@@ -24,12 +24,22 @@
 #define RTORRENT_UTILS_FUNCTIONAL_H
 
 #include <functional>
 
 namespace rak {
 
+template <typename Type>
+struct reference_fix {
+  typedef Type type;
+};
+
+template <typename Type>
+struct reference_fix<Type&> {
+  typedef Type type;
+};
+
 template <typename Type, typename Ftor>
 struct _accumulate {
   _accumulate(Type& t, Ftor f) : m_t(t), m_f(f) {}
 
   template <typename Arg>
   void operator () (Arg& a) { m_t += m_f(a); }
@@ -41,12 +51,14 @@
 template <typename Type, typename Ftor>
 inline _accumulate<Type, Ftor>
 accumulate(Type& t, Ftor f) {
   return _accumulate<Type, Ftor>(t, f);
 }
 
+// Operators:
+
 template <typename Type, typename Ftor>
 struct _equal {
   _equal(Type t, Ftor f) : m_t(t), m_f(f) {}
 
   template <typename Arg>
   bool operator () (Arg& a) {
@@ -60,17 +72,93 @@
 template <typename Type, typename Ftor>
 inline _equal<Type, Ftor>
 equal(Type t, Ftor f) {
   return _equal<Type, Ftor>(t, f);
 }
 
+template <typename Type, typename Ftor>
+struct _less {
+  _less(Type t, Ftor f) : m_t(t), m_f(f) {}
+
+  template <typename Arg>
+  bool operator () (Arg& a) {
+    return m_t < m_f(a);
+  }
+
+  Type m_t;
+  Ftor m_f;
+};
+
+template <typename Type, typename Ftor>
+inline _less<Type, Ftor>
+less(Type t, Ftor f) {
+  return _less<Type, Ftor>(t, f);
+}
+
+template <typename Type, typename Ftor>
+struct _greater {
+  _greater(Type t, Ftor f) : m_t(t), m_f(f) {}
+
+  template <typename Arg>
+  bool operator () (Arg& a) {
+    return m_t > m_f(a);
+  }
+
+  Type m_t;
+  Ftor m_f;
+};
+
+template <typename Type, typename Ftor>
+inline _greater<Type, Ftor>
+greater(Type t, Ftor f) {
+  return _greater<Type, Ftor>(t, f);
+}
+
+template <typename Type, typename Ftor>
+struct _less_equal {
+  _less_equal(Type t, Ftor f) : m_t(t), m_f(f) {}
+
+  template <typename Arg>
+  bool operator () (Arg& a) {
+    return m_t <= m_f(a);
+  }
+
+  Type m_t;
+  Ftor m_f;
+};
+
+template <typename Type, typename Ftor>
+inline _less_equal<Type, Ftor>
+less_equal(Type t, Ftor f) {
+  return _less_equal<Type, Ftor>(t, f);
+}
+
+template <typename Type, typename Ftor>
+struct _greater_equal {
+  _greater_equal(Type t, Ftor f) : m_t(t), m_f(f) {}
+
+  template <typename Arg>
+  bool operator () (Arg& a) {
+    return m_t >= m_f(a);
+  }
+
+  Type m_t;
+  Ftor m_f;
+};
+
+template <typename Type, typename Ftor>
+inline _greater_equal<Type, Ftor>
+greater_equal(Type t, Ftor f) {
+  return _greater_equal<Type, Ftor>(t, f);
+}
+
 template <typename Src, typename Dest>
 struct _on : public std::unary_function<typename Src::argument_type, typename Dest::result_type>  {
   _on(Src s, Dest d) : m_dest(d), m_src(s) {}
 
-  typename Dest::result_type operator () (typename Src::argument_type arg) {
+  typename Dest::result_type operator () (typename reference_fix<typename Src::argument_type>::type arg) {
     return m_dest(m_src(arg));
   }
 
   Dest m_dest;
   Src m_src;
 };
@@ -123,9 +211,35 @@
 struct call_delete : public std::unary_function<T*, void> {
   void operator () (T* t) {
     delete t;
   }
 };
 
+template <typename Operation>
+class bind1st_t : public std::unary_function<typename Operation::second_argument_type,
+					     typename Operation::result_type> {
+protected:
+  typedef typename reference_fix<typename Operation::first_argument_type>::type value_type;
+  typedef typename reference_fix<typename Operation::second_argument_type>::type argument_type;
+
+  Operation  m_op;
+  value_type m_value;
+
+public:
+  bind1st_t(const Operation& op, const value_type v) :
+    m_op(op), m_value(v) {}
+
+  typename Operation::result_type
+  operator () (const argument_type arg) {
+    return m_op(m_value, arg);
+  }
+};	    
+
+template <typename Operation, typename Type>
+inline bind1st_t<Operation>
+bind1st(const Operation& op, const Type& val) {
+  return bind1st_t<Operation>(op, val);
+}
+
 }
 
 #endif
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core: download_slot_map.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/Makefile.am	2005-05-31 03:21:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/Makefile.am	2005-05-31 22:37:47.000000000 +0800
@@ -6,12 +6,13 @@
 	curl_stack.cc \
 	curl_stack.h \
 	download.cc \
 	download.h \
 	download_list.cc \
 	download_list.h \
+	download_slot_map.h \
 	download_store.cc \
 	download_store.h \
 	hash_queue.cc \
 	hash_queue.h \
 	http_queue.cc \
 	http_queue.h \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/Makefile.in	2005-05-31 03:22:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/Makefile.in	2005-06-01 21:44:20.000000000 +0800
@@ -84,12 +84,13 @@
 	curl_stack.cc \
 	curl_stack.h \
 	download.cc \
 	download.h \
 	download_list.cc \
 	download_list.h \
+	download_slot_map.h \
 	download_store.cc \
 	download_store.h \
 	hash_queue.cc \
 	hash_queue.h \
 	http_queue.cc \
 	http_queue.h \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/manager.cc	2005-05-31 03:21:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/manager.cc	2005-06-07 08:41:45.000000000 +0800
@@ -44,15 +44,15 @@
 Manager::initialize() {
   torrent::Http::set_factory(m_poll.get_http_factory());
   m_httpQueue.slot_factory(m_poll.get_http_factory());
 
   CurlStack::init();
 
-  torrent::initialize();
+  //torrent::initialize();
 
-  if (!torrent::listen_open(m_portFirst, m_portLast, m_listenIp))
+  if (!torrent::listen_open(m_portFirst, m_portLast))
     throw std::runtime_error("Could not open port for listening.");
 
   // Register log signals.
 }
 
 void
@@ -122,27 +122,12 @@
     m_logImportant.push_front(e.what());
     m_logComplete.push_front(e.what());
   }
 }
 
 void
-Manager::set_dns(const std::string& dns) {
-  // TODO: Switch with the inet version of this thingie.
-  unsigned int a, b, c, d;
-
-  if (std::sscanf(dns.c_str(), "%i.%i.%i.%i", &a, &b, &c, &d) != 4 ||
-      (a >= 256 || b >= 256 || c >= 256 || d >= 256))
-    throw std::runtime_error("Tried to set invalid ip address.");
-
-  std::stringstream str;
-  str << a << '.' << b << '.' << c << '.' << d;
-
-  m_dns = str.str();
-}
-
-void
 Manager::receive_http_failed(std::string msg) {
   m_logImportant.push_front("Http download error: \"" + msg + "\"");
   m_logComplete.push_front("Http download error: \"" + msg + "\"");
 }
 
 void
@@ -177,19 +162,13 @@
     m_logComplete.push_front(e.what());
   }
 }
 
 void
 Manager::setup_download(Download* d) {
-  d->get_download().set_ip(m_dns);
-
-  if (!m_defaultRoot.empty())
-    d->get_download().set_root_dir(m_defaultRoot +
-				   (d->get_download().get_entry_size() > 1 ?
-				    d->get_download().get_name() :
-				    ""));
+  m_defaultSettings.for_each(d);
 
   if (m_debugTracker >= 0)
     d->get_download().signal_tracker_dump(sigc::mem_fun(*this, &Manager::receive_debug_tracker));
 
   // If we want to monitor network stuff.
   d->get_download().signal_network_log(sigc::mem_fun(m_logComplete, &Log::push_front));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/manager.h	2005-05-31 03:21:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/manager.h	2005-06-07 08:41:32.000000000 +0800
@@ -23,12 +23,13 @@
 #ifndef RTORRENT_CORE_MANAGER_H
 #define RTORRENT_CORE_MANAGER_H
 
 #include <iosfwd>
 
 #include "download_list.h"
+#include "download_slot_map.h"
 #include "download_store.h"
 #include "hash_queue.h"
 #include "http_queue.h"
 #include "poll.h"
 #include "log.h"
 
@@ -48,12 +49,14 @@
 
   DownloadList&       get_download_list()                 { return m_downloadList; }
   DownloadStore&      get_download_store()                { return m_downloadStore; }
   HashQueue&          get_hash_queue()                    { return m_hashQueue; }
   HttpQueue&          get_http_queue()                    { return m_httpQueue; }
 
+  DownloadSlotMap&    get_default_settings()              { return m_defaultSettings; }
+
   Poll&               get_poll()                          { return m_poll; }
   Log&                get_log_important()                 { return m_logImportant; }
   Log&                get_log_complete()                  { return m_logComplete; }
 
   void                initialize();
   void                cleanup();
@@ -61,19 +64,13 @@
   void                insert(std::string uri);
   iterator            erase(DownloadList::iterator itr);
 
   void                start(Download* d);
   void                stop(Download* d);
 
-  const std::string&  get_dns()                               { return m_dns; }
-  void                set_dns(const std::string& dns);
-
   void                set_port_range(int a, int b)            { m_portFirst = a; m_portLast = b; }
-  void                set_listen_ip(const std::string& ip)    { m_listenIp = ip; }
-
-  void                set_default_root(const std::string& path);
 
   void                debug_tracker()                         { m_debugTracker = 0; }
 
 private:
   void                receive_http_failed(std::string msg);
 
@@ -88,31 +85,21 @@
 
   DownloadList        m_downloadList;
   DownloadStore       m_downloadStore;
   HashQueue           m_hashQueue;
   HttpQueue           m_httpQueue;
 
+  DownloadSlotMap     m_defaultSettings;
+
   Poll                m_poll;
   Log                 m_logImportant;
   Log                 m_logComplete;
 
-  std::string         m_dns;
   int                 m_portFirst;
   int                 m_portLast;
-  std::string         m_listenIp;
-
-  std::string         m_defaultRoot;
 
   int                 m_debugTracker;
 };
 
-inline void
-Manager::set_default_root(const std::string& path) {
-  m_defaultRoot = path;
-
-  if (!m_defaultRoot.empty() && *m_defaultRoot.rbegin() != '/')
-    m_defaultRoot.push_back('/');
-}
-
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/poll.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/poll.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/core/poll.cc	2005-05-31 03:21:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/core/poll.cc	2005-06-08 03:53:02.000000000 +0800
@@ -52,13 +52,13 @@
     int n = 0;
 
     m_curlStack.fdset(m_readSet, m_writeSet, m_exceptSet, &n);
     m_maxFd = std::max(m_maxFd, n);
   }
 
-  timeval t = std::min(timeout, utils::Timer(torrent::get(torrent::TIME_SELECT))).tval();
+  timeval t = std::min(timeout, utils::Timer(torrent::get_next_timeout())).tval();
 
   errno = 0;
   m_maxFd = select(m_maxFd + 1, m_readSet, m_writeSet, m_exceptSet, &t);
 
   if (m_maxFd >= 0) {
     work();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/display/window_statusbar.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/display/window_statusbar.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/display/window_statusbar.cc	2005-05-31 03:21:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/display/window_statusbar.cc	2005-06-08 03:58:18.000000000 +0800
@@ -43,24 +43,25 @@
 
   m_canvas->erase();
 
   int pos = 0;
   char buf[128];
 
-  if (torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) == 0)
+  if (torrent::get_write_throttle() == 0)
     pos = snprintf(buf, 128, "off/");
   else
-    pos = snprintf(buf, 128, "%3i/", (int)torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) / 1024);
+    pos = snprintf(buf, 128, "%3i/", torrent::get_write_throttle() / 1024);
 
-  if (torrent::get(torrent::THROTTLE_READ_CONST_RATE) == 0)
+  if (torrent::get_read_throttle() == 0)
     pos = snprintf(buf + pos, 128 - pos, "off");
   else
-    pos = snprintf(buf + pos, 128 - pos, "%-3i", (int)torrent::get(torrent::THROTTLE_READ_CONST_RATE) / 1024);
+    pos = snprintf(buf + pos, 128 - pos, "%-3i", torrent::get_read_throttle() / 1024);
 
-  m_canvas->print(0, 0, "Throttle U/D: %s Listen: %s:%i Handshakes: %i",
+  m_canvas->print(0, 0, "Throttle U/D: %s  Listen: %s:%i%s  Handshakes: %i",
 		  buf,
-		  m_core->get_dns().empty() ? "<default>" : m_core->get_dns().c_str(),
-		  (int)torrent::get(torrent::LISTEN_PORT),
-		  (int)torrent::get(torrent::HANDSHAKES_TOTAL));
+		  !torrent::get_ip().empty() ? torrent::get_ip().c_str() : "<default>",
+		  (int)torrent::get_listen_port(),
+		  !torrent::get_bind().empty() ? ("  Bind: " + torrent::get_bind()).c_str() : "",
+		  torrent::get_total_handshakes());
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/main.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/main.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/main.cc	2005-05-31 03:21:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/main.cc	2005-06-08 04:55:04.000000000 +0800
@@ -45,12 +45,15 @@
 
 #include "utils/timer.h"
 #include "utils/directory.h"
 #include "utils/task_schedule.h"
 
 #include "signal_handler.h"
+#include "option_file.h"
+#include "option_handler.h"
+#include "option_handler_rules.h"
 #include "option_parser.h"
 
 int64_t utils::Timer::m_cache;
 
 bool is_shutting_down = false;
 
@@ -86,30 +89,65 @@
     std::for_each(c->get_core().get_download_list().begin(), c->get_core().get_download_list().end(),
 		  std::mem_fun(&core::Download::close));
   }
 }
 
 int
-parse_options(ui::Control* c, int argc, char** argv) {
+parse_options(ui::Control* c, OptionHandler* optionHandler, int argc, char** argv) {
   OptionParser optionParser;
-  optionParser.insert_flag('h', sigc::ptr_fun(&print_help));
 
-  optionParser.insert_option('b', sigc::mem_fun(c->get_core(), &core::Manager::set_listen_ip));
-  optionParser.insert_option('d', sigc::mem_fun(c->get_core(), &core::Manager::set_default_root));
-  optionParser.insert_option('i', sigc::mem_fun(c->get_core(), &core::Manager::set_dns));
+  // Converted.
+  optionParser.insert_flag('h', sigc::ptr_fun(&print_help));
+  optionParser.insert_flag('t', sigc::mem_fun(c->get_core(), &core::Manager::debug_tracker));
 
-  optionParser.insert_option('p', sigc::bind(sigc::ptr_fun(OptionParser::call_int_pair),
-					     sigc::mem_fun(c->get_core(), &core::Manager::set_port_range)));
+  optionParser.insert_option('b', sigc::bind<0>(sigc::mem_fun(*optionHandler, &OptionHandler::process), "bind"));
+  optionParser.insert_option('d', sigc::bind<0>(sigc::mem_fun(*optionHandler, &OptionHandler::process), "directory"));
+  optionParser.insert_option('i', sigc::bind<0>(sigc::mem_fun(*optionHandler, &OptionHandler::process), "ip"));
+  optionParser.insert_option('p', sigc::bind<0>(sigc::mem_fun(*optionHandler, &OptionHandler::process), "port"));
   optionParser.insert_option('s', sigc::mem_fun(c->get_core().get_download_store(), &core::DownloadStore::activate));
 
-  optionParser.insert_flag('t', sigc::mem_fun(c->get_core(), &core::Manager::debug_tracker));
+  optionParser.insert_option_list('o', sigc::mem_fun(*optionHandler, &OptionHandler::process));
 
   return optionParser.process(argc, argv);
 }
 
 void
+initialize_option_handler(ui::Control* c, OptionHandler* optionHandler) {
+  core::DownloadSlotMap* dsm = &c->get_core().get_default_settings();
+
+  optionHandler->insert("min_peers",   new OptionHandlerDownloadInt(dsm, &apply_download_min_peers, &validate_download_peers));
+  optionHandler->insert("max_peers",   new OptionHandlerDownloadInt(dsm, &apply_download_max_peers, &validate_download_peers));
+  optionHandler->insert("max_uploads", new OptionHandlerDownloadInt(dsm, &apply_download_max_uploads, &validate_download_peers));
+
+  optionHandler->insert("download_rate",   new OptionHandlerInt(c, &apply_global_download_rate, &validate_rate));
+  optionHandler->insert("upload_rate",     new OptionHandlerInt(c, &apply_global_upload_rate, &validate_rate));
+  optionHandler->insert("hash_read_ahead", new OptionHandlerInt(c, &apply_hash_read_ahead, &validate_read_ahead));
+
+  optionHandler->insert("directory", new OptionHandlerDownloadString(dsm, &apply_download_directory, &validate_directory));
+
+  optionHandler->insert("ip",   new OptionHandlerString(c, &apply_ip, &validate_ip));
+  optionHandler->insert("bind", new OptionHandlerString(c, &apply_bind, &validate_ip));
+  optionHandler->insert("port", new OptionHandlerString(c, &apply_port_range, &validate_port_range));
+}
+
+void
+load_option_file(const std::string& filename, OptionHandler* optionHandler, bool require = false) {
+  std::fstream f(filename.c_str(), std::ios::in);
+
+  if (!f.is_open()) {
+    std::cout << "Could not open option file \"" << filename << "\"" << std::endl;
+    return;
+  }
+
+  OptionFile optionFile;
+
+  optionFile.slot_option(sigc::mem_fun(*optionHandler, &OptionHandler::process));
+  optionFile.process(&f);
+}
+
+void
 load_session_torrents(ui::Control* c) {
   // Load session torrents.
   std::list<std::string> l = c->get_core().get_download_store().get_formated_entries().make_list();
 
   std::for_each(l.begin(), l.end(), std::bind1st(std::mem_fun(&core::Manager::insert), &c->get_core()));
 }
@@ -132,68 +170,77 @@
 
   c->get_core().initialize();
 }
 
 int
 main(int argc, char** argv) {
-  ui::Control uiControl;
-  ui::Root    uiRoot(&uiControl);
+  OptionHandler optionHandler;
+  ui::Control   uiControl;
+  ui::Root      uiRoot(&uiControl);
 
   utils::Timer::update();
 
   srandom(utils::Timer::cache().usec());
   srand48(utils::Timer::cache().usec());
 
+  initialize_option_handler(&uiControl, &optionHandler);
+
   try {
 
-  SignalHandler::set_ignore(SIGPIPE);
-  SignalHandler::set_handler(SIGINT, sigc::bind(sigc::mem_fun(uiRoot, &ui::Root::set_shutdown_received), true));
-  SignalHandler::set_handler(SIGSEGV, sigc::bind(sigc::ptr_fun(&do_panic), SIGSEGV));
-  SignalHandler::set_handler(SIGBUS, sigc::bind(sigc::ptr_fun(&do_panic), SIGBUS));
+    SignalHandler::set_ignore(SIGPIPE);
+    SignalHandler::set_handler(SIGINT, sigc::bind(sigc::mem_fun(uiRoot, &ui::Root::set_shutdown_received), true));
+    SignalHandler::set_handler(SIGSEGV, sigc::bind(sigc::ptr_fun(&do_panic), SIGSEGV));
+    SignalHandler::set_handler(SIGBUS, sigc::bind(sigc::ptr_fun(&do_panic), SIGBUS));
 
-  int firstArg = parse_options(&uiControl, argc, argv);
+    // Need to initialize this before parseing options.
+    torrent::initialize();
 
-  initialize_display(&uiControl);
-  initialize_core(&uiControl);
+    if (getenv("HOME"))
+      load_option_file(getenv("HOME") + std::string("/.rtorrent.rc"), &optionHandler);
 
-  uiRoot.init();
+    int firstArg = parse_options(&uiControl, &optionHandler, argc, argv);
 
-  load_session_torrents(&uiControl);
-  load_arg_torrents(&uiControl, argv + firstArg, argv + argc);
+    initialize_display(&uiControl);
+    initialize_core(&uiControl);
 
-  uiControl.get_display().adjust_layout();
+    uiRoot.init();
 
-  while (!is_shutting_down || !torrent::get(torrent::SHUTDOWN_DONE)) {
+    load_session_torrents(&uiControl);
+    load_arg_torrents(&uiControl, argv + firstArg, argv + argc);
 
-    if (uiRoot.get_shutdown_received()) {
-      do_shutdown(&uiControl);
-      uiRoot.set_shutdown_received(false);
-    }
+    uiControl.get_display().adjust_layout();
+
+    while (!is_shutting_down || !torrent::is_inactive()) {
 
-    utils::Timer::update();
-    utils::TaskSchedule::perform(utils::Timer::cache());
+      if (uiRoot.get_shutdown_received()) {
+	do_shutdown(&uiControl);
+	uiRoot.set_shutdown_received(false);
+      }
+
+      utils::Timer::update();
+      utils::TaskSchedule::perform(utils::Timer::cache());
     
-    // This needs to be called every second or so. Currently done by
-    // the throttle task in libtorrent.
-    uiControl.get_display().do_update();
+      // This needs to be called every second or so. Currently done by
+      // the throttle task in libtorrent.
+      uiControl.get_display().do_update();
 
-    uiControl.get_core().get_poll().poll(utils::TaskSchedule::get_timeout());
-  }
+      uiControl.get_core().get_poll().poll(utils::TaskSchedule::get_timeout());
+    }
 
-  uiRoot.cleanup();
-  display::Canvas::cleanup();
+    uiRoot.cleanup();
+    display::Canvas::cleanup();
+
+    uiControl.get_core().cleanup();
 
   } catch (std::exception& e) {
     display::Canvas::cleanup();
 
     std::cout << "Caught exception: \"" << e.what() << '"' << std::endl;
     return -1;
   }
 
-  uiControl.get_core().cleanup();
-
   return 0;
 }
 
 void
 do_panic(int signum) {
   display::Canvas::cleanup();
@@ -231,12 +278,13 @@
   std::cout << "  -h                Display this very helpful text" << std::endl;
   std::cout << "  -b <a.b.c.d>      Bind the listening socket to this IP" << std::endl;
   std::cout << "  -i <a.b.c.d>      Change the IP that is sent to the tracker" << std::endl;
   std::cout << "  -p <int>-<int>    Set port range for incoming connections" << std::endl;
   std::cout << "  -d <directory>    Save torrents to this directory by default" << std::endl;
   std::cout << "  -s <directory>    Set the session directory" << std::endl;
+  std::cout << "  -o key=opt,...    Set options, see 'rtorrent.rc' file" << std::endl;
   std::cout << std::endl;
   std::cout << "Main view keys:" << std::endl;
   std::cout << "  backspace         Add a torrent url or path" << std::endl;
   std::cout << "  ^s                Start torrent" << std::endl;
   std::cout << "  ^d                Stop torrent or delete a stopped torrent" << std::endl;
   std::cout << "  ^q                Initiate shutdown or skip shutdown process" << std::endl;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/Makefile.am	2005-05-31 03:21:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/Makefile.am	2005-06-01 21:43:48.000000000 +0800
@@ -13,10 +13,16 @@
 	$(top_srcdir)/src/display/libsub_display.a \
 	$(top_srcdir)/src/input/libsub_input.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
 
 rtorrent_SOURCES = \
 	main.cc \
+	option_file.cc \
+	option_file.h \
+	option_handler.cc \
+	option_handler.h \
+	option_handler_rules.cc \
+	option_handler_rules.h \
 	option_parser.cc \
 	option_parser.h \
 	signal_handler.cc \
 	signal_handler.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/Makefile.in	2005-05-31 03:22:31.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/Makefile.in	2005-06-01 21:44:20.000000000 +0800
@@ -93,26 +93,33 @@
 	$(top_srcdir)/src/input/libsub_input.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
 
 
 rtorrent_SOURCES = \
 	main.cc \
+	option_file.cc \
+	option_file.h \
+	option_handler.cc \
+	option_handler.h \
+	option_handler_rules.cc \
+	option_handler_rules.h \
 	option_parser.cc \
 	option_parser.h \
 	signal_handler.cc \
 	signal_handler.h
 
 subdir = src
 mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 bin_PROGRAMS = rtorrent$(EXEEXT)
 PROGRAMS = $(bin_PROGRAMS)
 
-am_rtorrent_OBJECTS = main.$(OBJEXT) option_parser.$(OBJEXT) \
-	signal_handler.$(OBJEXT)
+am_rtorrent_OBJECTS = main.$(OBJEXT) option_file.$(OBJEXT) \
+	option_handler.$(OBJEXT) option_handler_rules.$(OBJEXT) \
+	option_parser.$(OBJEXT) signal_handler.$(OBJEXT)
 rtorrent_OBJECTS = $(am_rtorrent_OBJECTS)
 rtorrent_DEPENDENCIES = $(top_srcdir)/src/ui/libsub_ui.a \
 	$(top_srcdir)/src/core/libsub_core.a \
 	$(top_srcdir)/src/display/libsub_display.a \
 	$(top_srcdir)/src/input/libsub_input.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
@@ -122,13 +129,16 @@
 DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
 CPPFLAGS = @CPPFLAGS@
 LDFLAGS = @LDFLAGS@
 LIBS = @LIBS@
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
-@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/main.Po ./$(DEPDIR)/option_parser.Po \
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/main.Po ./$(DEPDIR)/option_file.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/option_handler.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/option_handler_rules.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/option_parser.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/signal_handler.Po
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
 CXXLD = $(CXX)
 CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
 	-o $@
@@ -189,12 +199,15 @@
 	-rm -f *.$(OBJEXT) core *.core
 
 distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_file.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_handler.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_handler_rules.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_parser.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal_handler.Po@am__quote@
 
 distclean-depend:
 	-rm -rf ./$(DEPDIR)
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src: option_file.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src: option_file.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src: option_handler.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src: option_handler.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src: option_handler_rules.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src: option_handler_rules.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/option_parser.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/option_parser.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/option_parser.cc	2005-05-31 03:21:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/option_parser.cc	2005-05-31 04:27:49.000000000 +0800
@@ -20,63 +20,59 @@
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
 #include <cstdio>
-#include <sstream>
 #include <stdexcept>
 #include <unistd.h>
+#include <sigc++/bind.h>
 #include <sigc++/hide.h>
 
 #include "option_parser.h"
 
 void
-OptionParser::insert_flag(char c, SlotFlag s) {
+OptionParser::insert_flag(char c, Slot s) {
   m_container[c].m_slot = sigc::hide(s);
   m_container[c].m_useOption = false;
 }
 
 void
-OptionParser::insert_option(char c, SlotOption s) {
+OptionParser::insert_option(char c, SlotString s) {
   m_container[c].m_slot = s;
   m_container[c].m_useOption = true;
 }
 
+void
+OptionParser::insert_option_list(char c, SlotStringPair s) {
+  m_container[c].m_slot = sigc::bind<0>(sigc::ptr_fun(&OptionParser::call_option_list), s);
+  m_container[c].m_useOption = true;
+}
+
+void
+OptionParser::insert_int_pair(char c, SlotIntPair s) {
+  m_container[c].m_slot = sigc::bind<0>(sigc::ptr_fun(&OptionParser::call_int_pair), s);
+  m_container[c].m_useOption = true;
+}
+
 int
 OptionParser::process(int argc, char** argv) {
   int c;
   std::string optString = create_optstring();
 
   opterr = 0;
 
-  while ((c = getopt(argc, argv, optString.c_str())) != -1) {
-    if (c == '?') {
-      std::stringstream s;
-      s << "Invalid use of option flag -" << (char)optopt << ". Try rtorrent -h for more information.";
-      
-      throw std::runtime_error(s.str());
-
-    } else {
-      call_flag(c, optarg ? optarg : "");
-    }
-  }
+  while ((c = getopt(argc, argv, optString.c_str())) != -1)
+    if (c == '?')
+      throw std::runtime_error("Invalid/unknown option flag \"-" + std::string(1, (char)optopt) + "\". See rtorrent -h for more information.");
+    else
+      call(c, optarg ? optarg : "");
 
   return optind;
 }
 
-void
-OptionParser::call_int_pair(const std::string& str, SlotIntPair slot) {
-  int a, b;
-
-  if (sscanf(str.c_str(), "%u-%u", &a, &b) != 2)
-    throw std::runtime_error("Invalid argument \"" + str + "\" should be <a-b>");
-
-  slot(a, b);
-}
-
 std::string
 OptionParser::create_optstring() {
   std::string s;
 
   for (Container::iterator itr = m_container.begin(); itr != m_container.end(); ++itr) {
     s += itr->first;
@@ -86,14 +82,44 @@
   }
 
   return s;
 }
 
 void
-OptionParser::call_flag(char c, const std::string& arg) {
+OptionParser::call(char c, const std::string& arg) {
   Container::iterator itr = m_container.find(c);
 
   if (itr == m_container.end())
     throw std::logic_error("OptionParser::call_flag(...) could not find the flag");
 
   itr->second.m_slot(arg);
 }
+
+void
+OptionParser::call_option_list(SlotStringPair slot, const std::string& arg) {
+  std::string::const_iterator itr = arg.begin();
+
+  while (itr != arg.end()) {
+    std::string::const_iterator last = std::find(itr, arg.end(), ',');
+    std::string::const_iterator opt = std::find(itr, last, '=');
+
+    if (opt == itr || opt == last)
+      throw std::logic_error("Invalid argument, \"" + arg + "\" should be \"key1=opt1,key2=opt2,...\"");
+
+    slot(std::string(itr, opt), std::string(opt + 1, last));
+
+    if (last == arg.end())
+      break;
+
+    itr = ++last;
+  }
+}
+
+void
+OptionParser::call_int_pair(SlotIntPair slot, const std::string& arg) {
+  int a, b;
+
+  if (std::sscanf(arg.c_str(), "%u-%u", &a, &b) != 2)
+    throw std::runtime_error("Invalid argument, \"" + arg + "\" should be \"a-b\"");
+
+  slot(a, b);
+}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/option_parser.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/option_parser.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/option_parser.h	2005-05-31 03:21:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/option_parser.h	2005-05-31 04:14:27.000000000 +0800
@@ -28,34 +28,38 @@
 #include <sigc++/slot.h>
 
 // Throws std::runtime_error upon receiving bad input.
 
 class OptionParser {
 public:
-  typedef sigc::slot0<void>                     SlotFlag;
-  typedef sigc::slot1<void, const std::string&> SlotOption;
-  typedef sigc::slot2<void, int, int>           SlotIntPair;
-
-  struct Node {
-    SlotOption m_slot;
-    bool       m_useOption;
-  };
-
-  typedef std::map<char, Node>                  Container;
-
-  void        insert_flag(char c, SlotFlag s);
-  void        insert_option(char c, SlotOption s);
+  typedef sigc::slot0<void>                                         Slot;
+  typedef sigc::slot1<void, const std::string&>                     SlotString;
+  typedef sigc::slot2<void, const std::string&, const std::string&> SlotStringPair;
+  typedef sigc::slot2<void, int, int>                               SlotIntPair;
+
+  void                insert_flag(char c, Slot s);
+  void                insert_option(char c, SlotString s);
+  void                insert_option_list(char c, SlotStringPair s);
+  void                insert_int_pair(char c, SlotIntPair s);
 
   // Returns the index of the first non-option argument.
-  int         process(int argc, char** argv);
-
-  static void call_int_pair(const std::string& str, SlotIntPair slot);
+  int                 process(int argc, char** argv);
 
 private:
-  std::string create_optstring();
+  std::string         create_optstring();
+
+  void                call(char c, const std::string& arg);
+  static void         call_option_list(SlotStringPair slot, const std::string& arg);
+  static void         call_int_pair(SlotIntPair slot, const std::string& arg);
+
+  // Use pair instead?
+  struct Node {
+    SlotString          m_slot;
+    bool                m_useOption;
+  };
 
-  void        call_flag(char c, const std::string& arg);
+  typedef std::map<char, Node> Container;
 
-  Container   m_container;
+  Container           m_container;
 };
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/ui/download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/ui/download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/ui/download.cc	2005-05-31 03:21:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/ui/download.cc	2005-06-08 04:02:52.000000000 +0800
@@ -181,20 +181,20 @@
 }
 
 void
 Download::receive_read_throttle(int t) {
   m_windowMainStatus->mark_dirty();
 
-  torrent::set(torrent::THROTTLE_READ_CONST_RATE, torrent::get(torrent::THROTTLE_READ_CONST_RATE) + t * 1024);
+  torrent::set_read_throttle(torrent::get_read_throttle() + t * 1024);
 }
 
 void
 Download::receive_write_throttle(int t) {
   m_windowMainStatus->mark_dirty();
 
-  torrent::set(torrent::THROTTLE_ROOT_CONST_RATE, torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) + t * 1024);
+  torrent::set_write_throttle(torrent::get_write_throttle() + t * 1024);
 }
 
 void
 Download::receive_max_uploads(int t) {
   m_windowDownloadStatus->mark_dirty();
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/ui/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/ui/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/src/ui/download_list.cc	2005-05-31 03:21:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/src/ui/download_list.cc	2005-06-08 04:06:13.000000000 +0800
@@ -50,13 +50,13 @@
 
 DownloadList::DownloadList(Control* c) :
   m_state(DISPLAY_MAX_SIZE),
 
   m_window(c->get_display().end()),
 
-  m_windowTitle(new WTitle("rtorrent " VERSION " - " + torrent::get(torrent::LIBRARY_NAME))),
+  m_windowTitle(new WTitle("rTorrent " VERSION " - libTorrent " + torrent::get_version())),
   m_windowStatus(new WStatus(&c->get_core())),
   m_windowHttpQueue(new WHttp(&c->get_core().get_http_queue())),
 
   m_taskUpdate(sigc::mem_fun(*this, &DownloadList::task_update)),
   m_uiDownload(NULL),
 
@@ -169,20 +169,20 @@
 }
 
 void
 DownloadList::receive_read_throttle(int t) {
   m_windowStatus->mark_dirty();
 
-  torrent::set(torrent::THROTTLE_READ_CONST_RATE, torrent::get(torrent::THROTTLE_READ_CONST_RATE) + t * 1024);
+  torrent::set_read_throttle(torrent::get_read_throttle() + t * 1024);
 }
 
 void
 DownloadList::receive_write_throttle(int t) {
   m_windowStatus->mark_dirty();
 
-  torrent::set(torrent::THROTTLE_ROOT_CONST_RATE, torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) + t * 1024);
+  torrent::set_write_throttle(torrent::get_write_throttle() + t * 1024);
 }
 
 void
 DownloadList::receive_start_download() {
   if (m_downloadList.get_focus() == m_downloadList.end())
     return;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.3/TODO	2005-05-31 03:21:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.2.4/TODO	2005-06-01 23:52:27.000000000 +0800
@@ -1,9 +1,6 @@
-core::Manager::stop() should make sure ongoing hash checks get cleaned
-up.
-
 Polling during last phase of shutdown should be very quick, don't use
 normal timeout.
 
 Make clear distinction of upload/download throttle.
 
 Consider basing WindowPeer* on a common base class.
@@ -31,7 +28,11 @@
 Bug: Using ^s on a bad torrent does not catch the exception.
 
 Show torrent creation date?
 
 Recheck hash key.
 
-BUG: Doesn't show the last file in the file list.
+Seperate download management from core::management.
+
+Allow switching/cycling of tracker.
+
+Remember to add virtual dtor to OptionHandlerBase
\ No newline at end of file

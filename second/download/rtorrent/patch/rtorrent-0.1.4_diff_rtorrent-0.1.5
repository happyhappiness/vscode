diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/configure	2005-03-19 09:15:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/configure	2005-04-10 00:42:12.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.57 for rtorrent 0.1.4.
+# Generated by GNU Autoconf 2.57 for rtorrent 0.1.5.
 #
 # Report bugs to <jaris@ifi.uio.no>.
 #
 # Copyright 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002
 # Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
@@ -265,14 +265,14 @@
 # only ac_max_sed_lines should be used.
 : ${ac_max_here_lines=38}
 
 # Identity of this package.
 PACKAGE_NAME='rtorrent'
 PACKAGE_TARNAME='rtorrent'
-PACKAGE_VERSION='0.1.4'
-PACKAGE_STRING='rtorrent 0.1.4'
+PACKAGE_VERSION='0.1.5'
+PACKAGE_STRING='rtorrent 0.1.5'
 PACKAGE_BUGREPORT='jaris@ifi.uio.no'
 
 ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE CXX CXXFLAGS LDFLAGS CPPFLAGS ac_ct_CXX EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CXXDEPMODE RANLIB ac_ct_RANLIB CC CFLAGS ac_ct_CC CCDEPMODE PKG_CONFIG STUFF_CFLAGS STUFF_LIBS LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -742,13 +742,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures rtorrent 0.1.4 to adapt to many kinds of systems.
+\`configure' configures rtorrent 0.1.5 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -804,13 +804,13 @@
   --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of rtorrent 0.1.4:";;
+     short | recursive ) echo "Configuration of rtorrent 0.1.5:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -893,13 +893,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit 0
 if $ac_init_version; then
   cat <<\_ACEOF
-rtorrent configure 0.1.4
+rtorrent configure 0.1.5
 generated by GNU Autoconf 2.57
 
 Copyright 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001, 2002
 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
@@ -908,13 +908,13 @@
 fi
 exec 5>config.log
 cat >&5 <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by rtorrent $as_me 0.1.4, which was
+It was created by rtorrent $as_me 0.1.5, which was
 generated by GNU Autoconf 2.57.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 {
@@ -1499,13 +1499,13 @@
 echo "$as_me: error: source directory already configured; run \"make distclean\" there first" >&2;}
    { (exit 1); exit 1; }; }
 fi
 
 # Define the identity of the package.
  PACKAGE=rtorrent
- VERSION=0.1.4
+ VERSION=0.1.5
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -4191,13 +4191,13 @@
   sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
 ## Running $as_me. ##
 _ASBOX
 } >&5
 cat >&5 <<_CSEOF
 
-This file was extended by rtorrent $as_me 0.1.4, which was
+This file was extended by rtorrent $as_me 0.1.5, which was
 generated by GNU Autoconf 2.57.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -4254,13 +4254,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 _ACEOF
 
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-rtorrent config.status 0.1.4
+rtorrent config.status 0.1.5
 configured by $0, generated by GNU Autoconf 2.57,
   with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001
 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/configure.ac	2005-03-19 08:10:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/configure.ac	2005-04-04 00:30:44.000000000 +0800
@@ -1,7 +1,7 @@
-AC_INIT(rtorrent, 0.1.4, jaris@ifi.uio.no)
+AC_INIT(rtorrent, 0.1.5, jaris@ifi.uio.no)
 
 AM_INIT_AUTOMAKE
 AM_CONFIG_HEADER(config.h)
 
 sinclude(scripts/checks.m4)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/README /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/README
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/README	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/README	2005-04-10 02:18:15.000000000 +0800
@@ -1,12 +1,17 @@
+LICENSE
+
+ GNU GPL, see COPYING.
+
+
 Options and flags:
 
+  -b <a.b.c.d>      Bind the listening socket to this IP.
   -i <a.b.c.d>      Set the IP address sent to the tracker.
 
   -p <a-b>          Open a port in the range a to b.
-
   -s <dir>          Use <dir> as the session directory. The torrents will be
                     saved with the info-hash in hex as the filename.
 
 All:
 
   Ctrl-Q    - Quit
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/download.cc	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/download.cc	2005-04-10 05:29:22.000000000 +0800
@@ -33,20 +33,30 @@
 void
 Download::set_download(torrent::Download d) {
   m_download = d;
 
   m_connTrackerSucceded = m_download.signal_tracker_succeded(sigc::bind(sigc::mem_fun(*this, &Download::receive_tracker_msg), ""));
   m_connTrackerFailed = m_download.signal_tracker_failed(sigc::mem_fun(*this, &Download::receive_tracker_msg));
+  m_connStorageError = m_download.signal_storage_error(sigc::mem_fun(*this, &Download::receive_tracker_msg));
 }
 
 void
 Download::release_download() {
   m_connTrackerSucceded.disconnect();
   m_connTrackerFailed.disconnect();
+  m_connStorageError.disconnect();
 }
 
 void
 Download::receive_tracker_msg(std::string msg) {
-  m_trackerMsg = msg;
+  if (msg.empty())
+    m_message = "";
+  else
+    m_message = "Tracker: [" + msg + "]";
+}
+
+void
+Download::receive_storage_error(std::string msg) {
+  m_message = "Storage error: [" + msg + "]";
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/download.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/download.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/download.h	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/download.h	2005-04-10 05:20:05.000000000 +0800
@@ -36,30 +36,32 @@
   void               set_download(torrent::Download d);
   void               release_download();
 
   torrent::Download& get_download()                  { return m_download; }
   std::string        get_hash()                      { return m_download.get_hash(); }
   
-  const std::string& get_tracker_msg()               { return m_trackerMsg; }
+  const std::string& get_message()                   { return m_message; }
 
   void               start()                         { m_download.start(); }
   void               stop()                          { m_download.stop(); }
 
   void               open()                          { m_download.open(); }
   void               close()                         { m_download.close(); }
 
   bool operator == (const std::string& str)          { return str == m_download.get_hash(); }
 
 private:
   void               receive_tracker_msg(std::string msg);
+  void               receive_storage_error(std::string msg);
 
   torrent::Download  m_download;
 
-  std::string        m_trackerMsg;
+  std::string        m_message;
 
   sigc::connection   m_connTrackerSucceded;
   sigc::connection   m_connTrackerFailed;
+  sigc::connection   m_connStorageError;
 };
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/manager.cc	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/manager.cc	2005-04-10 05:09:32.000000000 +0800
@@ -45,13 +45,15 @@
   torrent::Http::set_factory(m_poll.get_http_factory());
   m_httpQueue.slot_factory(m_poll.get_http_factory());
 
   CurlStack::init();
 
   torrent::initialize();
-  torrent::listen_open(m_portFirst, m_portLast);
+
+  if (!torrent::listen_open(m_portFirst, m_portLast, m_listenIp))
+    throw std::runtime_error("Could not open port for listening.");
 
   // Register log signals.
 }
 
 void
 Manager::cleanup() {
@@ -91,12 +93,13 @@
   if (!d->get_download().is_open())
     d->open();
 
   if (d->get_download().is_hash_checked())
     d->start();
   else
+    // This can cause infinit loops.
     m_hashQueue.insert(d, sigc::mem_fun(d, &Download::start));
 }
 
 void
 Manager::stop(Download* d) {
   m_hashQueue.remove(d);
@@ -164,12 +167,15 @@
 Manager::iterator
 Manager::create_final(std::istream* s) {
   iterator itr = m_downloadList.insert(s);
   
   (*itr)->get_download().set_ip(m_dns);
 
+  if (!m_defaultRoot.empty())
+    (*itr)->get_download().set_root_dir(m_defaultRoot + ((*itr)->get_download().get_entry_size() ? (*itr)->get_download().get_name() : ""));
+
   start(*itr);
   m_downloadStore.save(*itr);
 
   if (m_debugTracker >= 0)
     (*itr)->get_download().signal_tracker_dump(sigc::mem_fun(*this, &Manager::receive_debug_tracker));
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/core/manager.h	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/core/manager.h	2005-04-10 05:15:46.000000000 +0800
@@ -59,18 +59,21 @@
   void                insert(std::string uri);
   iterator            erase(DownloadList::iterator itr);
 
   void                start(Download* d);
   void                stop(Download* d);
 
-  const std::string&  get_dns()                           { return m_dns; }
+  const std::string&  get_dns()                               { return m_dns; }
   void                set_dns(const std::string& dns);
 
-  void                set_port_range(int a, int b)        { m_portFirst = a; m_portLast = b; }
+  void                set_port_range(int a, int b)            { m_portFirst = a; m_portLast = b; }
+  void                set_listen_ip(const std::string& ip)    { m_listenIp = ip; }
 
-  void                debug_tracker()                     { m_debugTracker = 0; }
+  void                set_default_root(const std::string& path);
+
+  void                debug_tracker()                         { m_debugTracker = 0; }
 
 private:
   void                receive_http_done(CurlGet* http);
   void                receive_http_failed(std::string msg);
 
   void                create_file(const std::string& uri);
@@ -89,13 +92,24 @@
   Log                 m_logImportant;
   Log                 m_logComplete;
 
   std::string         m_dns;
   int                 m_portFirst;
   int                 m_portLast;
+  std::string         m_listenIp;
+
+  std::string         m_defaultRoot;
 
   int                 m_debugTracker;
 };
 
+inline void
+Manager::set_default_root(const std::string& path) {
+  m_defaultRoot = path;
+
+  if (!m_defaultRoot.empty() && *m_defaultRoot.rbegin() != '/')
+    m_defaultRoot.push_back('/');
+}
+
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/utils.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/utils.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/utils.cc	2005-03-19 08:06:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/utils.cc	2005-04-10 05:27:37.000000000 +0800
@@ -32,36 +32,32 @@
 #include "utils.h"
 
 namespace display {
 
 std::string
 print_download_status(core::Download* d) {
-  std::stringstream str;
-
   if (d->get_download().is_hash_checking()) {
-    str << "Checking hash";
+    return "Checking hash";
 
   } else if (d->get_download().is_tracker_busy()) {
-    str << "Tracker: Connecting";
+    return "Tracker: Connecting";
 
   } else if (!d->get_download().is_active()) {
-    str << "Inactive";
+    return "Inactive";
 
-  } else if (!d->get_tracker_msg().empty()) {
-    str << "Tracker: [" << d->get_tracker_msg() << ']';
+  } else if (!d->get_message().empty()) {
+    return d->get_message();
 
   } else {
-    //str << "---";
+    return "";
   }
-
-  return str.str();
 }
 
 std::string
 print_hhmmss(utils::Timer t) {
-  std::tm *u = std::localtime(&t.tval().tv_sec);
+  std::tm *u = std::localtime(&(time_t)t.tval().tv_sec);
   
   if (u == NULL)
     return "inv_time";
 
   std::stringstream str;
   str.fill('0');
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_log.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_log.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_log.cc	2005-03-19 08:06:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_log.cc	2005-04-04 00:34:22.000000000 +0800
@@ -54,25 +54,22 @@
   m_nextDraw = utils::Timer::max();
 
   m_canvas->erase();
 
   int pos = 0;
 
-  //m_canvas->print(std::max(0, (int)m_canvas->get_width() / 2 - 5), pos++, "*** Log ***");
-  m_canvas->print(0, 0, "___");
-
   for (core::Log::iterator itr = m_log->begin(), end = find_older(); itr != end && pos < m_canvas->get_height(); ++itr)
     m_canvas->print(0, pos++, "(%s) %s",
 		    print_hhmmss(itr->first).c_str(),
 		    itr->second.c_str());
 }
 
 void
 WindowLog::receive_update() {
   iterator itr = find_older();
-  int h = std::min(std::distance(m_log->begin(), itr), 10);
+  int h = std::min(std::distance(m_log->begin(), itr), (std::iterator_traits<iterator>::difference_type)10);
 
   if (h != m_minHeight) {
     set_active(h != 0);
 
     m_minHeight = h;
     m_slotAdjust();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_statusbar.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_statusbar.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_statusbar.cc	2005-03-19 08:06:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_statusbar.cc	2005-04-10 01:17:23.000000000 +0800
@@ -39,14 +39,21 @@
 
 void
 WindowStatusbar::redraw() {
   m_nextDraw = utils::Timer::cache().round_seconds() + 1000000;
 
   m_canvas->erase();
-  m_canvas->print(0, 0, "Throttle: %i Listen: %s:%i Handshakes: %i",
-		  (int)torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) / 1024,
-		  m_core->get_dns().empty() ? "<default>" : m_core->get_dns().c_str(),
-		  (int)torrent::get(torrent::LISTEN_PORT),
-		  (int)torrent::get(torrent::HANDSHAKES_TOTAL));
+
+  if (torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) == 0)
+    m_canvas->print(0, 0, "Throttle: off Listen: %s:%i Handshakes: %i",
+		    m_core->get_dns().empty() ? "<default>" : m_core->get_dns().c_str(),
+		    (int)torrent::get(torrent::LISTEN_PORT),
+		    (int)torrent::get(torrent::HANDSHAKES_TOTAL));
+  else
+    m_canvas->print(0, 0, "Throttle: %i Listen: %s:%i Handshakes: %i",
+		    (int)torrent::get(torrent::THROTTLE_ROOT_CONST_RATE) / 1024,
+		    m_core->get_dns().empty() ? "<default>" : m_core->get_dns().c_str(),
+		    (int)torrent::get(torrent::LISTEN_PORT),
+		    (int)torrent::get(torrent::HANDSHAKES_TOTAL));
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_string_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_string_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_string_list.cc	2005-03-19 08:06:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_string_list.cc	2005-03-30 05:31:24.000000000 +0800
@@ -42,26 +42,34 @@
   m_canvas->erase();
 
   size_t ypos = 0;
   size_t xpos = 1;
   size_t width = 0;
 
-  for (iterator itr = m_first; itr != m_last; ++itr) {
+  iterator itr = m_first;
+
+  while (itr != m_last) {
 
     if (ypos == (size_t)m_canvas->get_height()) {
       ypos = 0;
       xpos += width + 2;
       
-      if (xpos >= (size_t)m_canvas->get_width())
+      if (xpos + 20 >= (size_t)m_canvas->get_width())
 	break;
+
+      width = 0;
     }
 
     width = std::max(itr->size(), width);
 
     if (xpos + itr->size() <= (size_t)m_canvas->get_width())
       m_canvas->print(xpos, ypos++, "%s", itr->c_str());
     else
       m_canvas->print(xpos, ypos++, "%s", itr->substr(0, m_canvas->get_width() - xpos).c_str());
+
+    ++itr;
   }
+
+  m_drawEnd = itr;
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_string_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_string_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/display/window_string_list.h	2005-03-19 08:06:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/display/window_string_list.h	2005-03-30 05:31:46.000000000 +0800
@@ -34,18 +34,22 @@
 public:
   typedef std::list<std::string>::iterator iterator;
 
   WindowStringList();
   ~WindowStringList();
 
-  void             set_range(iterator first, iterator last) { m_first = first; m_last = last; }
+  iterator         get_draw_end()                           { return m_drawEnd; }
+
+  void             set_range(iterator first, iterator last) { m_first = m_drawEnd = first; m_last = last; }
 
   virtual void     redraw();
 
 private:
   iterator         m_first;
   iterator         m_last;
+  
+  iterator         m_drawEnd;
 };
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/input/path_input.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/input/path_input.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/input/path_input.cc	2005-03-19 08:06:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/input/path_input.cc	2005-03-30 05:48:49.000000000 +0800
@@ -23,41 +23,68 @@
 #include "config.h"
 
 #include <functional>
 #include <rak/algorithm.h>
 
 #include "path_input.h"
+#include "utils/file_stat.h"
 
 namespace input {
 
-PathInput::PathInput() {
+PathInput::PathInput() :
+  m_showNext(false) {
 }
 
 bool
 PathInput::pressed(int key) {
-  if (key == '\t')
-    receive_do_complete();
-  else
+  if (key != '\t') {
+    m_showNext = false;
     return TextInput::pressed(key);
 
+  } else if (m_showNext) {
+    m_signalShowNext.emit();
+
+  } else {
+    receive_do_complete();
+  
+    m_showNext = true;
+  }
+
   return true;
 }
 
+struct _transform_filename {
+  _transform_filename(const std::string& base) : m_base(base) {}
+
+  void operator () (std::string& filename) {
+    utils::FileStat fs;
+
+    if (fs.update((m_base + filename).c_str()))
+      return;
+
+    else if (fs.is_directory())
+      filename += '/';
+  }
+
+  const std::string& m_base;
+};
+
 void
 PathInput::receive_do_complete() {
   size_type dirEnd = find_last_delim();
 
   utils::Directory dir(dirEnd != 0 ? str().substr(0, dirEnd) : "./");
   
   if (!dir.update() || dir.empty()) {
-    str() += "!";
     mark_dirty();
 
     return;
   }
 
+  std::for_each(dir.begin(), dir.end(), _transform_filename(str().substr(0, dirEnd)));
+
   Range r = find_incomplete(dir, str().substr(dirEnd, get_pos()));
 
   if (r.first == r.second)
     return; // Show some nice colors here.
 
   std::string base = rak::make_base(r.first, r.second);
@@ -68,13 +95,16 @@
   str().resize(dirEnd);
   str().insert(dirEnd, base);
 
   set_pos(dirEnd + base.size());
 
   mark_dirty();
-  m_signalShowRange.emit(r.first, r.second);
+
+  // Only emit if there are more than one option.
+  if (++utils::Directory::iterator(r.first) != r.second)
+    m_signalShowRange.emit(r.first, r.second);
 }
 
 PathInput::size_type
 PathInput::find_last_delim() {
   size_type r = str().rfind('/', get_pos());
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/input/path_input.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/input/path_input.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/input/path_input.h	2005-03-19 08:06:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/input/path_input.h	2005-03-30 05:48:15.000000000 +0800
@@ -31,27 +31,32 @@
 
 namespace input {
 
 class PathInput : public TextInput {
 public:
   typedef std::pair<utils::Directory::iterator, utils::Directory::iterator>           Range;
+  typedef sigc::signal0<void>                                                         Signal;
   typedef sigc::signal2<void, utils::Directory::iterator, utils::Directory::iterator> SignalShowRange;
 
   PathInput();
   virtual ~PathInput() {}
 
-  SignalShowRange&    signal_show_range()           { return m_signalShowRange; }
+  Signal&             signal_show_next()          { return m_signalShowNext; }
+  SignalShowRange&    signal_show_range()         { return m_signalShowRange; }
 
   virtual bool        pressed(int key);
 
 private:
   void                receive_do_complete();
 
   size_type           find_last_delim();
   Range               find_incomplete(utils::Directory& d, const std::string& f);
 
+  bool                m_showNext;
+
+  Signal              m_signalShowNext;
   SignalShowRange     m_signalShowRange;
 };
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/main.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/main.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/main.cc	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/main.cc	2005-04-10 05:11:58.000000000 +0800
@@ -89,13 +89,17 @@
 }
 
 int
 parse_options(ui::Control* c, int argc, char** argv) {
   OptionParser optionParser;
   optionParser.insert_flag('h', sigc::ptr_fun(&print_help));
+
+  optionParser.insert_option('b', sigc::mem_fun(c->get_core(), &core::Manager::set_listen_ip));
+  optionParser.insert_option('d', sigc::mem_fun(c->get_core(), &core::Manager::set_default_root));
   optionParser.insert_option('i', sigc::mem_fun(c->get_core(), &core::Manager::set_dns));
+
   optionParser.insert_option('p', sigc::bind(sigc::ptr_fun(OptionParser::call_int_pair),
 					     sigc::mem_fun(c->get_core(), &core::Manager::set_port_range)));
   optionParser.insert_option('s', sigc::mem_fun(c->get_core().get_download_store(), &core::DownloadStore::activate));
 
   optionParser.insert_flag('t', sigc::mem_fun(c->get_core(), &core::Manager::debug_tracker));
 
@@ -221,14 +225,16 @@
   std::cout << std::endl;
   std::cout << "All value pairs (f.ex rate and queue size) will be in the UP/DOWN" << std::endl;
   std::cout << "order. Use the up/down/left/right arrow keys to move between screens." << std::endl;
   std::cout << std::endl;
   std::cout << "Usage: rtorrent [OPTIONS]... [FILE]... [URL]..." << std::endl;
   std::cout << "  -h                Display this very helpful text" << std::endl;
-  std::cout << "  -i <a.b.c.d>      Set the IP address that is sent to the tracker" << std::endl;
+  std::cout << "  -b <a.b.c.d>      Bind the listening socket to this IP" << std::endl;
+  std::cout << "  -i <a.b.c.d>      Change the IP that is sent to the tracker" << std::endl;
   std::cout << "  -p <int>-<int>    Set port range for incoming connections" << std::endl;
+  std::cout << "  -d <directory>    Save torrents to this directory by default" << std::endl;
   std::cout << "  -s <directory>    Set the session directory" << std::endl;
   std::cout << std::endl;
   std::cout << "Main view keys:" << std::endl;
   std::cout << "  backspace         Add a torrent url or path" << std::endl;
   std::cout << "  ^s                Start torrent" << std::endl;
   std::cout << "  ^d                Stop torrent or delete a stopped torrent" << std::endl;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/ui/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/ui/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/ui/download_list.cc	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/ui/download_list.cc	2005-03-30 05:49:25.000000000 +0800
@@ -299,12 +299,16 @@
 DownloadList::setup_input() {
   input::PathInput* p    = new input::PathInput;
   ElementStringList* esl = new ElementStringList();
   m_windowTextInput      = new WInput(p);
 
   p->slot_dirty(sigc::mem_fun(*m_windowTextInput, &WInput::mark_dirty));
+
+  p->signal_show_next().connect(sigc::bind(sigc::mem_fun(*this, &DownloadList::receive_change), DISPLAY_STRING_LIST));
+  p->signal_show_next().connect(sigc::mem_fun(*esl, &ElementStringList::next_screen));
+
   p->signal_show_range().connect(sigc::hide(sigc::hide(sigc::bind(sigc::mem_fun(*this, &DownloadList::receive_change), DISPLAY_STRING_LIST))));
   p->signal_show_range().connect(sigc::mem_fun(*esl, &ElementStringList::set_range<utils::Directory::iterator>));
 
   m_uiArray[DISPLAY_STRING_LIST] = esl;
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/ui/element_string_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/ui/element_string_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/ui/element_string_list.cc	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/ui/element_string_list.cc	2005-03-30 05:57:37.000000000 +0800
@@ -54,7 +54,17 @@
   c->get_input().erase(&m_bindings);
 
   delete m_window;
   m_window = NULL;
 }
 
+void
+ElementStringList::next_screen() {
+  if (m_window->get_draw_end() != m_list.end())
+    m_window->set_range(m_window->get_draw_end(), m_list.end());
+  else
+    m_window->set_range(m_list.begin(), m_list.end());
+
+  m_window->mark_dirty();
+}
+
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/ui/element_string_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/ui/element_string_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/ui/element_string_list.h	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/ui/element_string_list.h	2005-03-30 05:36:07.000000000 +0800
@@ -54,12 +54,14 @@
       m_list.push_back(*(first++));
 
     m_window->set_range(m_list.begin(), m_list.end());
     m_window->mark_dirty();
   }
 
+  void                next_screen();
+
 private:
   WStringList*        m_window;
   List                m_list;
 };
 
 }
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/utils: file_stat.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/utils: file_stat.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/utils/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/utils/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/utils/Makefile.am	2005-03-19 08:06:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/utils/Makefile.am	2005-03-30 02:36:57.000000000 +0800
@@ -1,11 +1,13 @@
 noinst_LIBRARIES = libsub_utils.a
 
 libsub_utils_a_SOURCES = \
 	directory.cc \
 	directory.h \
+	file_stat.cc \
+	file_stat.h \
 	list_focus.h \
 	parse.cc \
 	parse.h \
 	task.h \
 	task_schedule.cc \
 	task_schedule.h \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/utils/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/utils/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/src/utils/Makefile.in	2005-03-19 09:15:04.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/src/utils/Makefile.in	2005-04-10 00:42:11.000000000 +0800
@@ -78,12 +78,14 @@
 install_sh = @install_sh@
 noinst_LIBRARIES = libsub_utils.a
 
 libsub_utils_a_SOURCES = \
 	directory.cc \
 	directory.h \
+	file_stat.cc \
+	file_stat.h \
 	list_focus.h \
 	parse.cc \
 	parse.h \
 	task.h \
 	task_schedule.cc \
 	task_schedule.h \
@@ -96,24 +98,25 @@
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 LIBRARIES = $(noinst_LIBRARIES)
 
 libsub_utils_a_AR = $(AR) cru
 libsub_utils_a_LIBADD =
-am_libsub_utils_a_OBJECTS = directory.$(OBJEXT) parse.$(OBJEXT) \
-	task_schedule.$(OBJEXT)
+am_libsub_utils_a_OBJECTS = directory.$(OBJEXT) file_stat.$(OBJEXT) \
+	parse.$(OBJEXT) task_schedule.$(OBJEXT)
 libsub_utils_a_OBJECTS = $(am_libsub_utils_a_OBJECTS)
 
 DEFS = @DEFS@
 DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
 CPPFLAGS = @CPPFLAGS@
 LDFLAGS = @LDFLAGS@
 LIBS = @LIBS@
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
-@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/directory.Po ./$(DEPDIR)/parse.Po \
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/directory.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/file_stat.Po ./$(DEPDIR)/parse.Po \
 @AMDEP_TRUE@	./$(DEPDIR)/task_schedule.Po
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
 CXXLD = $(CXX)
 CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
 	-o $@
@@ -150,12 +153,13 @@
 	-rm -f *.$(OBJEXT) core *.core
 
 distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/directory.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_stat.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_schedule.Po@am__quote@
 
 distclean-depend:
 	-rm -rf ./$(DEPDIR)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.4/TODO	2005-03-19 08:06:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.1.5/TODO	2005-04-10 05:47:44.000000000 +0800
@@ -19,6 +19,15 @@
 >   - seeing the number of seeds / leechers of a torrent on the main
 >     screen (and the level of distribution between leechers);
 
 >   - being able to delete not just the torrent file, but the files it
 >     created from rtorrent.  Like when you start a torrent, but it is too
 >     slow or broken or for various reasons you don't want to download it.
+
+
+Make sure it gracefully handles torrents that fail to open files.
+
+Bug: Add the same torrent while it is hash checking.
+
+
+RELEASE:
+

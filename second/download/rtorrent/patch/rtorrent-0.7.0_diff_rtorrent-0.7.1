diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/configure	2006-11-17 20:06:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/configure	2006-12-21 23:22:22.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.59 for rtorrent 0.7.0.
+# Generated by GNU Autoconf 2.59 for rtorrent 0.7.1.
 #
 # Report bugs to <jaris@ifi.uio.no>.
 #
 # Copyright (C) 2003 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
@@ -416,14 +416,14 @@
 # only ac_max_sed_lines should be used.
 : ${ac_max_here_lines=38}
 
 # Identity of this package.
 PACKAGE_NAME='rtorrent'
 PACKAGE_TARNAME='rtorrent'
-PACKAGE_VERSION='0.7.0'
-PACKAGE_STRING='rtorrent 0.7.0'
+PACKAGE_VERSION='0.7.1'
+PACKAGE_STRING='rtorrent 0.7.1'
 PACKAGE_BUGREPORT='jaris@ifi.uio.no'
 
 # Factoring default headers for most tests.
 ac_includes_default="\
 #include <stdio.h>
 #if HAVE_SYS_TYPES_H
@@ -950,13 +950,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures rtorrent 0.7.0 to adapt to many kinds of systems.
+\`configure' configures rtorrent 0.7.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1016,13 +1016,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of rtorrent 0.7.0:";;
+     short | recursive ) echo "Configuration of rtorrent 0.7.1:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -1165,13 +1165,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit 0
 if $ac_init_version; then
   cat <<\_ACEOF
-rtorrent configure 0.7.0
+rtorrent configure 0.7.1
 generated by GNU Autoconf 2.59
 
 Copyright (C) 2003 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 _ACEOF
@@ -1179,13 +1179,13 @@
 fi
 exec 5>config.log
 cat >&5 <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by rtorrent $as_me 0.7.0, which was
+It was created by rtorrent $as_me 0.7.1, which was
 generated by GNU Autoconf 2.59.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 {
@@ -1823,13 +1823,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='rtorrent'
- VERSION='0.7.0'
+ VERSION='0.7.1'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -15059,36 +15059,36 @@
 
 if test -n "$PKG_CONFIG"; then
     if test -n "$STUFF_CFLAGS"; then
         pkg_cv_STUFF_CFLAGS="$STUFF_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libtorrent >= 0.11.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libtorrent >= 0.11.0") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libtorrent >= 0.11.1\"") >&5
+  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libtorrent >= 0.11.1") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libtorrent >= 0.11.0" 2>/dev/null`
+  pkg_cv_STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libtorrent >= 0.11.1" 2>/dev/null`
 else
   pkg_failed=yes
 fi
     fi
 else
 	pkg_failed=untried
 fi
 if test -n "$PKG_CONFIG"; then
     if test -n "$STUFF_LIBS"; then
         pkg_cv_STUFF_LIBS="$STUFF_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libtorrent >= 0.11.0\"") >&5
-  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libtorrent >= 0.11.0") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libtorrent >= 0.11.1\"") >&5
+  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libtorrent >= 0.11.1") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libtorrent >= 0.11.0" 2>/dev/null`
+  pkg_cv_STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libtorrent >= 0.11.1" 2>/dev/null`
 else
   pkg_failed=yes
 fi
     fi
 else
 	pkg_failed=untried
@@ -15101,31 +15101,31 @@
 if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
         _pkg_short_errors_supported=yes
 else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        STUFF_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.11.0"`
+	        STUFF_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.11.1"`
         else
-	        STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.11.0"`
+	        STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libtorrent >= 0.11.1"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$STUFF_PKG_ERRORS" >&5
 
-	{ { echo "$as_me:$LINENO: error: Package requirements (sigc++-2.0 libtorrent >= 0.11.0) were not met:
+	{ { echo "$as_me:$LINENO: error: Package requirements (sigc++-2.0 libtorrent >= 0.11.1) were not met:
 
 $STUFF_PKG_ERRORS
 
 Consider adjusting the PKG_CONFIG_PATH environment variable if you
 installed software in a non-standard prefix.
 
 Alternatively, you may set the environment variables STUFF_CFLAGS
 and STUFF_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 " >&5
-echo "$as_me: error: Package requirements (sigc++-2.0 libtorrent >= 0.11.0) were not met:
+echo "$as_me: error: Package requirements (sigc++-2.0 libtorrent >= 0.11.1) were not met:
 
 $STUFF_PKG_ERRORS
 
 Consider adjusting the PKG_CONFIG_PATH environment variable if you
 installed software in a non-standard prefix.
 
@@ -15632,13 +15632,13 @@
   sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
 ## Running $as_me. ##
 _ASBOX
 } >&5
 cat >&5 <<_CSEOF
 
-This file was extended by rtorrent $as_me 0.7.0, which was
+This file was extended by rtorrent $as_me 0.7.1, which was
 generated by GNU Autoconf 2.59.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -15695,13 +15695,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 _ACEOF
 
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-rtorrent config.status 0.7.0
+rtorrent config.status 0.7.1
 configured by $0, generated by GNU Autoconf 2.59,
   with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2003 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/configure.ac	2006-10-16 13:33:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/configure.ac	2006-12-21 22:52:02.000000000 +0800
@@ -1,7 +1,7 @@
-AC_INIT(rtorrent, 0.7.0, jaris@ifi.uio.no)
+AC_INIT(rtorrent, 0.7.1, jaris@ifi.uio.no)
 
 AM_INIT_AUTOMAKE
 AM_CONFIG_HEADER(config.h)
 
 TORRENT_CHECK_CXXFLAGS()
 TORRENT_ENABLE_DEBUG()
@@ -20,13 +20,13 @@
 
 TORRENT_WITHOUT_VARIABLE_FDSET()
 TORRENT_WITHOUT_NCURSESW()
 TORRENT_WITHOUT_STATVFS()
 TORRENT_WITHOUT_STATFS()
 
-PKG_CHECK_MODULES(STUFF, sigc++-2.0 libtorrent >= 0.11.0,
+PKG_CHECK_MODULES(STUFF, sigc++-2.0 libtorrent >= 0.11.1,
 	          CXXFLAGS="$CXXFLAGS $STUFF_CFLAGS $CURL_CFLAGS";
 		  LIBS="$LIBS $STUFF_LIBS $CURL_LIBS")
 
 AC_DEFINE(HAVE_CONFIG_H, 1, true if config.h was included)
 AC_DEFINE(USER_AGENT, [std::string(PACKAGE "/" VERSION "/") + torrent::version()], Http user agent)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/rak/algorithm.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/rak/algorithm.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/rak/algorithm.h	2006-10-16 13:33:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/rak/algorithm.h	2006-12-26 02:22:24.000000000 +0800
@@ -88,12 +88,34 @@
 
   } while (true);
 
   return std::make_pair(__middle1, __middle2);
 }
 
+template <typename _InputIter, typename _Distance>
+_InputIter
+advance_forward(_InputIter __first, _InputIter __last, _Distance __distance) {
+  while (__first != __last && __distance != 0) {
+    __first++;
+    __distance--;
+  }
+
+  return __first;
+}
+
+template <typename _InputIter, typename _Distance>
+_InputIter
+advance_backward(_InputIter __first, _InputIter __last, _Distance __distance) {
+  while (__first != __last && __distance != 0) {
+    __first--;
+    __distance--;
+  }
+
+  return __first;
+}
+
 template <typename _Value>
 struct compare_base : public std::binary_function<_Value, _Value, bool> {
   bool operator () (const _Value& complete, const _Value& base) const {
     return !complete.compare(0, base.size(), base);
   }
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/rak/functional_fun.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/rak/functional_fun.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/rak/functional_fun.h	2006-10-16 13:33:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/rak/functional_fun.h	2006-12-18 16:22:37.000000000 +0800
@@ -207,12 +207,28 @@
 private:
   Object*    m_object;
   Func       m_func;
   const Arg1 m_arg1;
 };
 
+template <typename Object, typename Result, typename Arg1, typename Arg2>
+class mem_fn1_b2_t : public function_base1<Result, Arg1> {
+public:
+  typedef Result (Object::*Func)(Arg1, Arg2);
+
+  mem_fn1_b2_t(Object* object, Func func, const Arg2 arg2) : m_object(object), m_func(func), m_arg2(arg2) {}
+  virtual ~mem_fn1_b2_t() {}
+  
+  virtual Result operator () (const Arg1 arg1) { return (m_object->*m_func)(arg1, m_arg2); }
+
+private:
+  Object*    m_object;
+  Func       m_func;
+  const Arg2 m_arg2;
+};
+
 template <typename Result, typename Arg1>
 class ptr_fn0_b1_t : public function_base0<Result> {
 public:
   typedef Result (*Func)(Arg1);
 
   ptr_fn0_b1_t(Func func, const Arg1 arg1) : m_func(func), m_arg1(arg1) {}
@@ -322,12 +338,18 @@
 template <typename Arg1, typename Result, typename Object>
 inline function_base0<Result>*
 bind_mem_fn(Object* object, Result (Object::*func)(Arg1), const Arg1 arg1) {
   return new mem_fn0_b1_t<Object, Result, Arg1>(object, func, arg1);
 }
 
+template <typename Arg1, typename Arg2, typename Result, typename Object>
+inline function_base1<Result, Arg1>*
+bind2_mem_fn(Object* object, Result (Object::*func)(Arg1, Arg2), const Arg2 arg2) {
+  return new mem_fn1_b2_t<Object, Result, Arg1, Arg2>(object, func, arg2);
+}
+
 template <typename Arg1, typename Result>
 inline function_base0<Result>*
 bind_ptr_fn(Result (*func)(Arg1), const Arg1 arg1) {
   return new ptr_fn0_b1_t<Result, Arg1>(func, arg1);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/rak/ranges.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/rak/ranges.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/rak/ranges.h	2006-10-16 13:33:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/rak/ranges.h	2006-12-18 16:22:45.000000000 +0800
@@ -43,41 +43,41 @@
 
 namespace rak {
 
 template <typename Type>
 class ranges : private std::vector<std::pair<Type, Type> > {
 public:
-  typedef std::vector<std::pair<Type, Type> > Base;
-  typedef typename Base::value_type           value_type;
-  typedef typename Base::reference            reference;
-  typedef typename Base::iterator             iterator;
-  typedef typename Base::const_iterator       const_iterator;
-  typedef typename Base::reverse_iterator     reverse_iterator;
-
-  using Base::clear;
-  using Base::size;
-  using Base::begin;
-  using Base::end;
-  using Base::rbegin;
-  using Base::rend;
+  typedef std::vector<std::pair<Type, Type> >  base_type;
+  typedef typename base_type::value_type       value_type;
+  typedef typename base_type::reference        reference;
+  typedef typename base_type::iterator         iterator;
+  typedef typename base_type::const_iterator   const_iterator;
+  typedef typename base_type::reverse_iterator reverse_iterator;
+
+  using base_type::clear;
+  using base_type::size;
+  using base_type::begin;
+  using base_type::end;
+  using base_type::rbegin;
+  using base_type::rend;
+
+  using base_type::front;
+  using base_type::back;
 
   void                insert(Type first, Type last) { insert(std::make_pair(first, last)); }
-//   void                erase(Type first, Type last)  { erase(std::make_pair(first, last)); }
+  void                erase(Type first, Type last)  { erase(std::make_pair(first, last)); }
 
   void                insert(value_type r);
-//   void                erase(value_type r);
+  void                erase(value_type r);
 
   // Find the first ranges that has an end greater than index.
   iterator            find(Type index);
   const_iterator      find(Type index) const;
 
   // Use find with no closest match.
   bool                has(Type index) const;
-
-private:
-  void                unify(iterator itr);
 };
 
 template <typename Type>
 void
 ranges<Type>::insert(value_type r) {
   if (r.first >= r.second)
@@ -85,26 +85,60 @@
 
   iterator first = std::find_if(begin(), end(), rak::less_equal(r.first, rak::const_mem_ref(&value_type::second)));
 
   if (first == end() || r.second < first->first) {
     // The new range is before the first, after the last or between
     // two ranges.
-    Base::insert(first, r);
-    return;
-  }
-  
-  first->first = std::min(r.first, first->first);
-  first->second = std::max(r.second, first->second);
+    base_type::insert(first, r);
+
+  } else {
+    first->first = std::min(r.first, first->first);
+    first->second = std::max(r.second, first->second);
+
+    iterator last = std::find_if(first, end(), rak::less(first->second, rak::const_mem_ref(&value_type::second)));
+
+    if (last != end() && first->second >= last->first)
+      first->second = (last++)->second;
 
-  unify(first);
+    base_type::erase(first + 1, last);
+  }
 }
 
-// template <typename Type>
-// void
-// ranges<Type>::erase(value_type r) {
-// }
+template <typename Type>
+void
+ranges<Type>::erase(value_type r) {
+  if (r.first >= r.second)
+    return;
+
+  iterator first = std::find_if(begin(), end(), rak::less(r.first, rak::const_mem_ref(&value_type::second)));
+  iterator last  = std::find_if(first, end(), rak::less(r.second, rak::const_mem_ref(&value_type::second)));
+
+  if (first == end())
+    return;
+
+  if (first == last) {
+
+    if (r.first > first->first) {
+      std::swap(first->first, r.second);
+      base_type::insert(first, value_type(r.second, r.first));
+
+    } else if (r.second > first->first) {
+      first->first = r.second;
+    }
+
+  } else {
+
+    if (r.first > first->first)
+      (first++)->second = r.first;
+    
+    if (last != end() && r.second > last->first)
+      last->first = r.second;
+
+    base_type::erase(first, last);
+  }
+}
 
 // Find the first ranges that has an end greater than index.
 template <typename Type>
 inline typename ranges<Type>::iterator
 ranges<Type>::find(Type index) {
   return std::find_if(begin(), end(), rak::less(index, rak::const_mem_ref(&value_type::second)));
@@ -115,25 +149,16 @@
 ranges<Type>::find(Type index) const {
   return std::find_if(begin(), end(), rak::less(index, rak::const_mem_ref(&value_type::second)));
 }
 
 // Use find with no closest match.
 template <typename Type>
-inline bool
+bool
 ranges<Type>::has(Type index) const {
   const_iterator itr = find(index);
 
   return itr != end() && index >= itr->first;
 }
 
-template <typename Type>
-inline void
-ranges<Type>::unify(iterator first) {
-  iterator last = std::find_if((first + 1), end(), rak::less(first->second, rak::const_mem_ref(&value_type::first)));
-
-  first->second = std::max(first->second, (last - 1)->second);
-  Base::erase((first + 1), last);
-}
-
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/core/download.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/core/download.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/core/download.h	2006-12-02 16:21:52.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/core/download.h	2006-12-20 23:38:33.000000000 +0800
@@ -34,22 +34,24 @@
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #ifndef RTORRENT_CORE_DOWNLOAD_H
 #define RTORRENT_CORE_DOWNLOAD_H
 
-#include <rak/string_manip.h>
 #include <sigc++/connection.h>
 #include <torrent/download.h>
 #include <torrent/hash_string.h>
 #include <torrent/tracker_list.h>
-#include <torrent/torrent.h>
 #include <torrent/data/file_list.h>
 
 #include "utils/variable_map.h"
 
+namespace torrent {
+  class TrackerList;
+}
+
 namespace core {
 
 class Download {
 public:
   typedef torrent::Download             download_type;
   typedef torrent::FileList             file_list_type;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/core/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/core/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/core/download_list.cc	2006-12-11 16:29:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/core/download_list.cc	2006-12-18 23:26:16.000000000 +0800
@@ -92,15 +92,22 @@
   torrent::Object* object = new torrent::Object;
   torrent::Download download;
 
   try {
     *str >> *object;
     
-    // Catch, delete.
-    if (str->fail())
-      throw torrent::input_error("Could not create download, the input is not a valid torrent.");
+    // Don't throw input_error from here as gcc-3.3.5 produces bad
+    // code.
+    if (str->fail()) {
+      delete object;
+
+      if (printLog)
+        control->core()->push_log("Could not create download, the input is not a valid torrent.");
+
+      return NULL;
+    }
 
     download = torrent::download_add(object);
 
   } catch (torrent::local_error& e) {
     delete object;
 
@@ -387,15 +394,12 @@
 }
 
 void
 DownloadList::hash_done(Download* download) {
   check_contains(download);
 
-  if (!download->is_open())
-    throw torrent::internal_error("DownloadList::hash_done(...) !download->is_open().");
-
   if (download->is_hash_checking() || download->is_active())
     throw torrent::internal_error("DownloadList::hash_done(...) download in invalid state.");
 
   if (!download->is_hash_checked()) {
     download->set_hash_failed(true);
     
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/core/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/core/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/core/manager.cc	2006-12-12 21:39:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/core/manager.cc	2006-12-18 16:18:12.000000000 +0800
@@ -500,13 +500,15 @@
         continue;
       }
 
       if ((*itr)->is_hash_checked())
         throw torrent::internal_error("core::Manager::receive_hashing_changed() hash already checked or checking.");
   
-      if ((*itr)->is_hash_failed() || (*itr)->variable()->get_value("hashing") != Download::variable_hashing_initial)
+      if ((*itr)->is_hash_failed() ||
+          (*itr)->variable()->get_value("hashing") != Download::variable_hashing_initial ||
+          (*itr)->download()->chunks_hashed() != 0)
         continue;
 
       m_downloadList->open_throw(*itr);
       torrent::resume_load_progress(*(*itr)->download(), (*itr)->download()->bencode()->get_key("libtorrent_resume"));
 
       if ((*itr)->download()->hash_check(true)) {
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/text_element_helpers.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/text_element_helpers.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/text_element_helpers.h	2006-11-22 20:47:27.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/text_element_helpers.h	2006-12-26 14:23:19.000000000 +0800
@@ -37,12 +37,14 @@
 #ifndef RTORRENT_DISPLAY_TEXT_ELEMENT_HELPERS_H
 #define RTORRENT_DISPLAY_TEXT_ELEMENT_HELPERS_H
 
 #include <rak/functional.h>
 #include <rak/socket_address.h>
 #include <torrent/bitfield.h>
+#include <torrent/torrent.h>
+#include <torrent/data/file_list_iterator.h>
 
 #include "core/download.h"
 
 #include "text_element_string.h"
 #include "text_element_value.h"
 
@@ -98,12 +100,18 @@
 template <typename Return>
 inline TextElementValueBase*
 te_value(Return (torrent::FileList::*fptr)() const, int flags = TextElementValueBase::flag_normal, int attributes = Attributes::a_invalid) {
   return display::text_element_value_slot(rak::on(std::mem_fun(&core::Download::c_file_list), std::mem_fun(fptr)), flags, attributes);
 }
 
+template <typename Return>
+inline TextElementValueBase*
+te_value(Return (torrent::File::*fptr)() const, int flags = TextElementValueBase::flag_normal, int attributes = Attributes::a_invalid) {
+  return display::text_element_value_slot(rak::on(std::mem_fun(&torrent::FileListIterator::file), std::mem_fun(fptr)), flags, attributes);
+}
+
 inline TextElementValueBase*
 te_variable_value(const std::string& variable, int flags = TextElementValueBase::flag_normal, int attributes = Attributes::a_invalid) {
   return display::text_element_value_slot(rak::bind2nd(std::mem_fun(&core::Download::variable_value), variable), flags, attributes);
 }
 
 template <typename Return>
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/text_element_value.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/text_element_value.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/text_element_value.cc	2006-10-16 13:33:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/text_element_value.cc	2006-12-27 21:51:26.000000000 +0800
@@ -79,15 +79,17 @@
   } else if (m_flags & flag_mb) {
     // Just use a default width of 8 for now.
     first += std::max(snprintf(first, last - first + 1, "%8.1f", (double)val / (1 << 20)), 0);
 
   } else if (m_flags & flag_xb) {
 
-    if (val < (int64_t(1) << 30))
+    if (val < (int64_t(1000) << 10))
+      first += std::max(snprintf(first, last - first + 1, "%5.1f KB", (double)val / (int64_t(1) << 10)), 0);
+    else if (val < (int64_t(1000) << 20))
       first += std::max(snprintf(first, last - first + 1, "%5.1f MB", (double)val / (int64_t(1) << 20)), 0);
-    else if (val < (int64_t(1) << 40))
+    else if (val < (int64_t(1000) << 30))
       first += std::max(snprintf(first, last - first + 1, "%5.1f GB", (double)val / (int64_t(1) << 30)), 0);
     else
       first += std::max(snprintf(first, last - first + 1, "%5.1f TB", (double)val / (int64_t(1) << 40)), 0);
 
   } else if (m_flags & flag_timer) {
     if (val == 0)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/utils.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/utils.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/utils.cc	2006-12-11 16:29:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/utils.cc	2006-12-20 23:40:21.000000000 +0800
@@ -41,12 +41,13 @@
 #include <iomanip>
 #include <rak/socket_address.h>
 #include <rak/timer.h>
 #include <torrent/exceptions.h>
 #include <torrent/connection_manager.h>
 #include <torrent/rate.h>
+#include <torrent/torrent.h>
 #include <torrent/tracker.h>
 #include <torrent/tracker_list.h>
 #include <torrent/data/file_list.h>
 #include <torrent/peer/client_info.h>
 
 #include "core/download.h"
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window_download_chunks_seen.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window_download_chunks_seen.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window_download_chunks_seen.h	2006-10-16 13:33:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window_download_chunks_seen.h	2006-12-22 14:25:11.000000000 +0800
@@ -53,13 +53,13 @@
 
   virtual void     redraw();
 
   unsigned int     rows() const;
   unsigned int     chunks_per_row() const   { return (width() - 6) / 11 * 10; }
 
-  unsigned int     max_focus() const        { return std::max<int>(rows() - height() + 1, 0); }
+  unsigned int     max_focus() const        { return std::max<int>(rows() - height() / 2 + 1, 0); }
 
 private:
   core::Download*  m_download;
 
   unsigned int*    m_focus;
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window_file_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window_file_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window_file_list.cc	2006-12-02 17:04:19.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window_file_list.cc	2006-12-27 21:52:25.000000000 +0800
@@ -38,23 +38,24 @@
 
 #include <stdexcept>
 #include <rak/algorithm.h>
 #include <torrent/path.h>
 #include <torrent/data/file.h>
 #include <torrent/data/file_list.h>
+#include <torrent/data/file_list_iterator.h>
 
 #include "core/download.h"
 
 #include "window_file_list.h"
 
 namespace display {
 
-WindowFileList::WindowFileList(core::Download* d, unsigned int* focus) :
+WindowFileList::WindowFileList(core::Download* d, iterator* selected) :
   Window(new Canvas, 0, 0, 0, extent_full, extent_full),
   m_download(d),
-  m_focus(focus) {
+  m_selected(selected) {
 }
 
 /*
 std::wstring
 hack_wstring(const std::string& src) {
   size_t length = ::mbstowcs(NULL, src.c_str(), src.size());
@@ -78,76 +79,72 @@
 
   torrent::FileList* fl = m_download->download()->file_list();
 
   if (fl->size_files() == 0 || m_canvas->height() < 2)
     return;
 
-  int pos = 0;
+  unsigned int pos = 0;
+  iterator itr = rak::advance_bidirectional<iterator>(iterator(fl->begin()), *m_selected, iterator(fl->end()), m_canvas->height() - 1).first;
 
-  m_canvas->print( 2, pos, "File");
-  m_canvas->print(55, pos, "Size");
-  m_canvas->print(63, pos, "Pri");
-  m_canvas->print(68, pos, "Cmpl");
-  m_canvas->print(74, pos, "Encoding");
-  m_canvas->print(84, pos, "Chunks");
-
-  ++pos;
-
-  if (*m_focus >= fl->size_files())
-    throw std::logic_error("WindowFileList::redraw() called on an object with a bad focus value");
-
-  Range range = rak::advance_bidirectional<unsigned int>(0, *m_focus, fl->size_files(), m_canvas->height() - pos);
-
-  while (range.first != range.second) {
-    torrent::File* e = *(fl->begin() + range.first);
-
-    std::string path = e->path()->as_string();
-
-    if (path.length() <= 50)
-      path = path + std::string(50 - path.length(), ' ');
-    else
-      path = path.substr(0, 50);
-
-    std::string priority;
-
-    switch (e->priority()) {
-    case torrent::PRIORITY_OFF:
-      priority = "off";
-      break;
-
-    case torrent::PRIORITY_NORMAL:
-      priority = "   ";
-      break;
-
-    case torrent::PRIORITY_HIGH:
-      priority = "hig";
-      break;
-
-    default:
-      priority = "BUG";
-      break;
-    };
-
-    m_canvas->print(0, pos, "%c %s  %6.1f   %s   %3d  %9s",
-                    range.first == *m_focus ? '*' : ' ',
-                    path.c_str(),
-                    (double)e->size_bytes() / (double)(1 << 20),
-                    priority.c_str(),
-                    done_percentage(e),
-                    e->path()->encoding().c_str());
-
-    m_canvas->print(84, pos, "%i - %i %c%c",
-                    e->range().first,
-                    e->range().first != e->range().second ? (e->range().second - 1) : e->range().second,
-                    e->is_created() ? 'E' : 'M',
-                    e->is_correct_size() ? 'C' : 'W');
+  m_canvas->print(0, pos++, "Cmp Pri  Size   Filename");
 
-    ++range.first;
+  while (pos != m_canvas->height() && itr != iterator(fl->end())) {
+    if (itr.is_empty()) {
+      m_canvas->print(16, pos, "EMPTY");
+
+    } else if (itr.is_entering()) {
+      m_canvas->print(16 + itr.depth(), pos, "\\ %s", 
+                      itr.depth() < (*itr)->path()->size() ? (*itr)->path()->at(itr.depth()).c_str() : "UNKNOWN");
+
+    } else if (itr.is_leaving()) {
+      m_canvas->print(16 + itr.depth() - 1, pos, "/");
+
+    } else if (itr.is_file()) {
+      torrent::File* e = *itr;
+
+      const char* priority;
+
+      switch (e->priority()) {
+      case torrent::PRIORITY_OFF:    priority = "off"; break;
+      case torrent::PRIORITY_NORMAL: priority = "   "; break;
+      case torrent::PRIORITY_HIGH:   priority = "hig"; break;
+      default: priority = "BUG"; break;
+      };
+
+      m_canvas->print(0, pos, "%3d %s", done_percentage(e), priority);
+
+      int64_t val = e->size_bytes();
+
+      if (val < (int64_t(1000) << 20))
+        m_canvas->print(8, pos, "%5.1f M", (double)val / (int64_t(1) << 20));
+      else if (val < (int64_t(1000) << 30))
+        m_canvas->print(8, pos, "%5.1f G", (double)val / (int64_t(1) << 30));
+      else
+        m_canvas->print(8, pos, "%5.1f T", (double)val / (int64_t(1) << 40));
+
+      m_canvas->print(16 + itr.depth(), pos, "| %s",
+                      itr.depth() < (*itr)->path()->size() ? (*itr)->path()->at(itr.depth()).c_str() : "UNKNOWN");
+
+//       m_canvas->print(104, pos, "%i - %i %c%c %u %u",
+//                       e->range().first,
+//                       e->range().first != e->range().second ? (e->range().second - 1) : e->range().second,
+//                       e->is_created() ? 'E' : 'M',
+//                       e->is_correct_size() ? 'C' : 'W',
+//                       e->match_depth_prev(),
+//                       e->match_depth_next());
+
+    } else {
+      m_canvas->print(0, pos, "BORK BORK");
+    }
+
+    if (itr == *m_selected)
+      m_canvas->set_attr(0, pos, m_canvas->width(), is_focused() ? A_REVERSE : A_BOLD, COLOR_PAIR(0));
+
+    ++itr;
     ++pos;
   }
-
 }
 
 int
 WindowFileList::done_percentage(torrent::File* e) {
   int chunks = e->range().second - e->range().first;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window_file_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window_file_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window_file_list.h	2006-11-21 21:38:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window_file_list.h	2006-12-25 21:12:21.000000000 +0800
@@ -40,33 +40,33 @@
 #include <list>
 
 #include "window.h"
 
 namespace torrent {
   class File;
+  class FileListIterator;
 }
 
 namespace core {
   class Download;
 }
 
 namespace display {
 
 class WindowFileList : public Window {
 public:
-  typedef std::pair<unsigned int, unsigned int> Range;
+  typedef torrent::FileListIterator iterator;
 
-  WindowFileList(core::Download* d, unsigned int* focus);
+  WindowFileList(core::Download* d, iterator* selected);
 
-  virtual void     redraw();
+  virtual void        redraw();
 
 private:
-  int              done_percentage(torrent::File* e);
+  int                 done_percentage(torrent::File* e);
 
-  core::Download*  m_download;
-
-  unsigned int*    m_focus;
+  core::Download*     m_download;
+  iterator*           m_selected;
 };
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/display/window.h	2006-10-16 13:33:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/display/window.h	2006-12-25 21:17:02.000000000 +0800
@@ -55,14 +55,15 @@
   typedef rak::mem_fun0<Manager, void>                      Slot;
   typedef rak::mem_fun1<Manager, void, Window*>             SlotWindow;
   typedef rak::mem_fun2<Manager, void, Window*, rak::timer> SlotTimer;
 
   static const int flag_active    = (1 << 0);
   static const int flag_offscreen = (1 << 1);
-  static const int flag_left      = (1 << 2);
-  static const int flag_bottom    = (1 << 3);
+  static const int flag_focused   = (1 << 2);
+  static const int flag_left      = (1 << 3);
+  static const int flag_bottom    = (1 << 4);
 
   static const extent_type extent_static = extent_type();
   static const extent_type extent_full   = ~extent_type();
 
   Window(Canvas* canvas, int flags,
          extent_type minWidth, extent_type minHeight,
@@ -73,12 +74,15 @@
   bool                is_active() const                    { return m_flags & flag_active; }
   void                set_active(bool state);
 
   bool                is_offscreen() const                 { return m_flags & flag_offscreen; }
   void                set_offscreen(bool state)            { if (state) m_flags |= flag_offscreen; else m_flags &= ~flag_offscreen; }
 
+  bool                is_focused() const                   { return m_flags & flag_focused; }
+  void                set_focused(bool state)              { if (state) m_flags |= flag_focused; else m_flags &= ~flag_focused; }
+
   bool                is_left() const                      { return m_flags & flag_left; }
   void                set_left(bool state)                 { if (state) m_flags |= flag_left; else m_flags &= ~flag_left; }
 
   bool                is_bottom() const                    { return m_flags & flag_bottom; }
   void                set_bottom(bool state)               { if (state) m_flags |= flag_bottom; else m_flags &= ~flag_bottom; }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/main.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/main.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/main.cc	2006-10-16 13:33:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/main.cc	2006-12-18 23:43:28.000000000 +0800
@@ -33,12 +33,13 @@
 //
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
+#include <cstdlib>
 #include <iostream>
 #include <string>
 #include <sigc++/bind.h>
 #include <torrent/http.h>
 #include <torrent/torrent.h>
 #include <torrent/exceptions.h>
@@ -295,13 +296,13 @@
   std::cout << "Stack dump not enabled." << std::endl;
 #endif
   
   if (signum == SIGBUS)
     std::cout << "A bus error propably means you ran out of diskspace." << std::endl;
 
-  exit(-1);
+  std::abort();
 }
 
 void
 print_help() {
   std::cout << "Rakshasa's BitTorrent client version " VERSION "." << std::endl;
   std::cout << std::endl;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_chunks_seen.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_chunks_seen.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_chunks_seen.cc	2006-12-11 16:29:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_chunks_seen.cc	2006-12-22 14:25:11.000000000 +0800
@@ -51,14 +51,14 @@
   m_download(d),
   m_window(NULL),
   m_focus(0) {
 
   m_bindings[KEY_LEFT] = m_bindings['B' - '@'] = sigc::mem_fun(&m_slotExit, &slot_type::operator());
 
-  m_bindings[KEY_DOWN]  = sigc::mem_fun(*this, &ElementChunksSeen::receive_next);
-  m_bindings[KEY_UP]    = sigc::mem_fun(*this, &ElementChunksSeen::receive_prev);
+  m_bindings[KEY_DOWN]  = m_bindings['N' - '@'] = sigc::mem_fun(*this, &ElementChunksSeen::receive_next);
+  m_bindings[KEY_UP]    = m_bindings['P' - '@'] = sigc::mem_fun(*this, &ElementChunksSeen::receive_prev);
   m_bindings[KEY_NPAGE] = sigc::mem_fun(*this, &ElementChunksSeen::receive_pagenext);
   m_bindings[KEY_PPAGE] = sigc::mem_fun(*this, &ElementChunksSeen::receive_pageprev);
 }
 
 void
 ElementChunksSeen::activate(display::Frame* frame, bool focus) {
@@ -134,36 +134,36 @@
 void
 ElementChunksSeen::receive_pagenext() {
   if (m_window == NULL)
     throw torrent::internal_error("ui::ElementChunksSeen::receive_pagenext(...) called on a disabled object");
 
   unsigned int visible = m_window->height() - 1;
-  unsigned int scrollable = std::max<int>(m_window->rows() - visible, 0);
+  unsigned int maxFocus = m_window->max_focus();
 
-  if (scrollable == 0 || m_focus == scrollable)
+  if (maxFocus == 0 || m_focus == maxFocus)
     m_focus = 0;
-  else if (m_focus + visible / 2 < scrollable)
+  else if (m_focus + visible / 2 < maxFocus)
     m_focus += visible / 2;
   else 
-    m_focus = scrollable;
+    m_focus = maxFocus;
 
   m_window->mark_dirty();
 }
 
 void
 ElementChunksSeen::receive_pageprev() {
   if (m_window == NULL)
     throw torrent::internal_error("ui::ElementChunksSeen::receive_pageprev(...) called on a disabled object");
 
   unsigned int visible = m_window->height() - 1;
-  unsigned int scrollable = std::max<int>(m_window->rows() - visible, 0);
+  unsigned int maxFocus = m_window->max_focus();
 
   if (m_focus > visible / 2)
     m_focus -= visible / 2;
-  else if (scrollable > 0 && m_focus == 0)
-    m_focus = scrollable;
+  else if (maxFocus > 0 && m_focus == 0)
+    m_focus = maxFocus;
   else
     m_focus = 0;
 
   m_window->mark_dirty();
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_file_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_file_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_file_list.cc	2006-12-11 16:29:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_file_list.cc	2006-12-26 22:47:31.000000000 +0800
@@ -33,182 +33,271 @@
 //
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
+#include <sigc++/bind.h>
+#include <rak/algorithm.h>
 #include <torrent/exceptions.h>
 #include <torrent/data/file.h>
 #include <torrent/data/file_list.h>
 
 #include "display/frame.h"
 #include "display/manager.h"
+#include "display/text_element_helpers.h"
+#include "display/text_element_lambda.h"
 #include "display/window_file_list.h"
 #include "input/manager.h"
 
 #include "control.h"
 #include "element_file_list.h"
+#include "element_text.h"
 
 namespace ui {
 
 ElementFileList::ElementFileList(core::Download* d) :
   m_download(d),
+
+  m_state(DISPLAY_MAX_SIZE),
   m_window(NULL),
-  m_focus(0) {
+  m_elementInfo(NULL),
+
+  m_selected(iterator(d->download()->file_list()->begin())) {
 
-  m_bindings[KEY_LEFT] = m_bindings['B' - '@'] = sigc::mem_fun(&m_slotExit, &slot_type::operator());
+  m_bindings[KEY_LEFT] = m_bindings['B' - '@']  = sigc::mem_fun(&m_slotExit, &slot_type::operator());
+  m_bindings[KEY_RIGHT] = m_bindings['F' - '@'] = sigc::bind(sigc::mem_fun(this, &ElementFileList::activate_display), DISPLAY_INFO);
 
   m_bindings[' '] = sigc::mem_fun(*this, &ElementFileList::receive_priority);
   m_bindings['*'] = sigc::mem_fun(*this, &ElementFileList::receive_change_all);
   m_bindings[KEY_NPAGE] = sigc::mem_fun(*this, &ElementFileList::receive_pagenext);
   m_bindings[KEY_PPAGE] = sigc::mem_fun(*this, &ElementFileList::receive_pageprev);
 
   m_bindings[KEY_DOWN] = m_bindings['N' - '@'] = sigc::mem_fun(*this, &ElementFileList::receive_next);
   m_bindings[KEY_UP]   = m_bindings['P' - '@'] = sigc::mem_fun(*this, &ElementFileList::receive_prev);
 }
 
+const char*
+element_file_list_filename(const torrent::FileListIterator* itr) {
+  if ((**itr)->path()->empty())
+    return "EMPTY";
+
+  if (itr->depth() >= (**itr)->path()->size())
+    return "ERROR";
+
+  return (**itr)->path()->at(itr->depth()).c_str();
+}
+
+inline ElementText*
+element_file_list_create_info() {
+  using namespace display::helpers;
+
+  ElementText* element = new ElementText(NULL);
+
+  element->set_column(1);
+  element->set_interval(1);
+
+  element->push_back("File info:");
+  element->push_back("");
+  
+  element->push_column("Filename:", display::text_element_string_slot(std::ptr_fun(&element_file_list_filename)));
+  element->push_back("");
+  
+  element->push_column("Size:",   te_value(&torrent::File::size_bytes, value_base::flag_xb));
+  element->push_column("Chunks:", te_value(&torrent::File::completed_chunks), " / ", te_value(&torrent::File::size_chunks));
+  element->push_column("Range:",  te_value(&torrent::File::range_first), " - ", te_value(&torrent::File::range_second));
+
+  element->set_column_width(element->column_width() + 1);
+
+  return element;
+}
+
 void
 ElementFileList::activate(display::Frame* frame, bool focus) {
   if (m_window != NULL)
     throw torrent::internal_error("ui::ElementFileList::activate(...) is_active().");
 
   if (focus)
     control->input()->push_back(&m_bindings);
 
-  m_window = new WFileList(m_download, &m_focus);
+  m_window = new WFileList(m_download, &m_selected);
   m_window->set_active(true);
+  m_window->set_focused(focus);
+
+  m_elementInfo = element_file_list_create_info();
+  m_elementInfo->slot_exit(sigc::bind(sigc::mem_fun(this, &ElementFileList::activate_display), DISPLAY_LIST));
+  m_elementInfo->set_object(&m_selected);
 
   m_frame = frame;
-  m_frame->initialize_window(m_window);
 
-//   control->display()->adjust_layout();
+  activate_display(DISPLAY_LIST);
 }
 
 void
 ElementFileList::disable() {
   if (m_window == NULL)
     throw torrent::internal_error("ui::ElementFileList::disable(...) !is_active().");
 
   control->input()->erase(&m_bindings);
 
+  activate_display(DISPLAY_MAX_SIZE);
+
   m_frame->clear();
   m_frame = NULL;
 
   delete m_window;
   m_window = NULL;
+
+  delete m_elementInfo;
+  m_elementInfo = NULL;
 }
 
-display::Window*
-ElementFileList::window() {
-  return m_window;
+void
+ElementFileList::activate_display(Display display) {
+  if (display == m_state)
+    return;
+
+  switch (m_state) {
+  case DISPLAY_INFO:
+    m_elementInfo->disable();
+    break;
+
+  case DISPLAY_LIST:
+    m_window->set_active(false);
+    m_frame->clear();
+    break;
+
+  case DISPLAY_MAX_SIZE:
+    break;
+  }
+
+  m_state = display;
+
+  switch (m_state) {
+  case DISPLAY_INFO:
+    m_elementInfo->activate(m_frame, true);
+    break;
+
+  case DISPLAY_LIST:
+    m_window->set_active(true);
+    m_frame->initialize_window(m_window);
+    break;
+
+  case DISPLAY_MAX_SIZE:
+    break;
+  }
+
+  control->display()->adjust_layout();
 }
 
 void
 ElementFileList::receive_next() {
-  if (m_window == NULL)
-    throw torrent::internal_error("ui::ElementFileList::receive_next(...) called on a disabled object");
+  torrent::FileList* fl = m_download->download()->file_list();
 
-  if (++m_focus >= m_download->download()->file_list()->size_files())
-    m_focus = 0;
+  if (m_selected == iterator(fl->end()) || ++m_selected == iterator(fl->end()))
+    m_selected = iterator(fl->begin());
 
-  m_window->mark_dirty();
+  update_itr();
 }
 
 void
 ElementFileList::receive_prev() {
-  if (m_window == NULL)
-    throw torrent::internal_error("ui::ElementFileList::receive_prev(...) called on a disabled object");
-
   torrent::FileList* fl = m_download->download()->file_list();
 
-  if (fl->size_files() == 0)
-    return;
+  if (m_selected == iterator(fl->begin()))
+    m_selected = iterator(fl->end());
 
-  if (m_focus != 0)
-    --m_focus;
-  else 
-    m_focus = fl->size_files() - 1;
-
-  m_window->mark_dirty();
+  m_selected--;
+  update_itr();
 }
 
 void
 ElementFileList::receive_pagenext() {
-  if (m_window == NULL)
-    throw torrent::internal_error("ui::ElementFileList::receive_pagenext(...) called on a disabled object");
-
-  unsigned int count = (m_window->height() - 1) / 2;
   torrent::FileList* fl = m_download->download()->file_list();
 
-  if (m_focus + count < fl->size_files())
-    m_focus += count;
-  else if (m_focus == fl->size_files() - 1)
-    m_focus = 0;
-  else 
-    m_focus = fl->size_files() - 1;
+  if (m_selected == --iterator(fl->end())) {
+    m_selected = iterator(fl->begin());
 
-  m_window->mark_dirty();
+  } else {
+    m_selected = rak::advance_forward(m_selected, iterator(fl->end()), (m_window->height() - 1) / 2);
+
+    if (m_selected == iterator(fl->end()))
+      m_selected = --iterator(fl->end());
+  }
+
+  update_itr();
 }
 
 void
 ElementFileList::receive_pageprev() {
   if (m_window == NULL)
     throw torrent::internal_error("ui::ElementFileList::receive_pageprev(...) called on a disabled object");
 
   torrent::FileList* fl = m_download->download()->file_list();
 
-  if (fl->size_files() == 0)
-    return;
+  if (m_selected == iterator(fl->begin()))
+    m_selected = --iterator(fl->end());
+  else
+    m_selected = rak::advance_backward(m_selected, iterator(fl->begin()), (m_window->height() - 1) / 2);
+
+  update_itr();
+}
 
-  unsigned int count = (m_window->height() - 1) / 2;
+// Take a range as input and return the next entry at the same
+// directory depth as first. If the returned iterator equals 'last' or
+// is_leaving() == true then the search failed. UHM... wrong...
 
-  if (m_focus > count)
-    m_focus -= count;
-  else if (m_focus == 0)
-    m_focus = fl->size_files() - 1;
-  else
-    m_focus = 0;
+torrent::FileListIterator
+next_current_depth(torrent::FileListIterator first, torrent::FileListIterator last) {
+  if (first == last)
+    return first;
 
-  m_window->mark_dirty();
+  uint32_t depth = (first++).depth();
+
+  while (first != last && (first.depth() > depth || first.is_leaving()))
+    ++first;
+
+  return first;
 }
 
 void
 ElementFileList::receive_priority() {
   if (m_window == NULL)
     throw torrent::internal_error("ui::ElementFileList::receive_prev(...) called on a disabled object");
 
   torrent::FileList* fl = m_download->download()->file_list();
 
-  if (m_focus >= fl->size_files())
-    return;
+  iterator first = m_selected; 
+  iterator last = next_current_depth(m_selected, iterator(fl->end()));
+
+  Priority priority = next_priority(m_selected.file()->priority());
 
-  torrent::File* file = *(fl->begin() + m_focus);
+  while (first != last) {
+    if (first.is_file())
+      first.file()->set_priority(priority);
 
-  file->set_priority(next_priority(file->priority()));
+    first++;
+  }
 
   m_download->download()->update_priorities();
-  m_window->mark_dirty();
+  update_itr();
 }
 
 void
 ElementFileList::receive_change_all() {
   if (m_window == NULL)
     throw torrent::internal_error("ui::ElementFileList::receive_prev(...) called on a disabled object");
 
+  Priority p = next_priority(m_selected.file()->priority());
   torrent::FileList* fl = m_download->download()->file_list();
 
-  if (m_focus >= fl->size_files())
-    return;
-
-  Priority p = next_priority((*(fl->begin() + m_focus))->priority());
-
   for (torrent::FileList::iterator itr = fl->begin(), last = fl->end(); itr != last; ++itr)
     (*itr)->set_priority(p);
 
   m_download->download()->update_priorities();
-  m_window->mark_dirty();
+  update_itr();
 }
 
 ElementFileList::Priority
 ElementFileList::next_priority(Priority p) {
   // Ahh... do +1 modulo.
 
@@ -224,7 +313,13 @@
     
   default:
     return torrent::PRIORITY_NORMAL;
   };
 }
 
+void
+ElementFileList::update_itr() {
+  m_window->mark_dirty();
+  m_elementInfo->mark_dirty();
+}
+
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_file_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_file_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_file_list.h	2006-11-23 19:46:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_file_list.h	2006-12-26 01:29:50.000000000 +0800
@@ -35,12 +35,13 @@
 //           3185 Skoppum, NORWAY
 
 #ifndef RTORRENT_UI_ELEMENT_FILE_LIST_H
 #define RTORRENT_UI_ELEMENT_FILE_LIST_H
 
 #include <torrent/common.h>
+#include <torrent/data/file_list_iterator.h>
 
 #include "core/download.h"
 
 #include "element_base.h"
 
 class Control;
@@ -48,39 +49,54 @@
 namespace display {
   class WindowFileList;
 }
 
 namespace ui {
 
+class ElementText;
+
 class ElementFileList : public ElementBase {
 public:
   typedef torrent::priority_t Priority;
   typedef display::WindowFileList  WFileList;
 
+  typedef torrent::FileListIterator iterator;
+
+  typedef enum {
+    DISPLAY_LIST,
+    DISPLAY_INFO,
+    DISPLAY_MAX_SIZE
+  } Display;
+
   ElementFileList(core::Download* d);
 
   void                activate(display::Frame* frame, bool focus = true);
   void                disable();
 
-  display::Window*    window();
+  void                activate_display(Display display);
 
 private:
   void                receive_next();
   void                receive_prev();
   void                receive_pagenext();
   void                receive_pageprev();
 
   void                receive_priority();
   void                receive_change_all();
 
   Priority            next_priority(Priority p);
 
+  void                update_itr();
+
   core::Download*     m_download;
+
+  Display             m_state;
   WFileList*          m_window;
+  ElementText*        m_elementInfo;
   
   // Change to unsigned, please.
-  unsigned int        m_focus;
+  iterator            m_selected;
 };
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_peer_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_peer_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_peer_list.cc	2006-12-11 16:29:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_peer_list.cc	2006-12-26 01:30:18.000000000 +0800
@@ -206,23 +206,23 @@
 ElementPeerList::receive_next() {
   if (m_listItr != m_list.end())
     ++m_listItr;
   else
     m_listItr = m_list.begin();
 
-  updated_itr();
+  update_itr();
 }
 
 void
 ElementPeerList::receive_prev() {
   if (m_listItr != m_list.begin())
     --m_listItr;
   else
     m_listItr = m_list.end();
 
-  updated_itr();
+  update_itr();
 }
 
 void
 ElementPeerList::receive_disconnect_peer() {
   if (m_listItr == m_list.end())
     return;
@@ -244,26 +244,26 @@
 
   if (itr == m_listItr)
     m_listItr = m_list.erase(itr);
   else
     m_list.erase(itr);
 
-  updated_itr();
+  update_itr();
 }
 
 void
 ElementPeerList::receive_snub_peer() {
   if (m_listItr == m_list.end())
     return;
 
   m_listItr->set_snubbed(!m_listItr->is_snubbed());
 
-  updated_itr();
+  update_itr();
 }
 
 void
-ElementPeerList::updated_itr() {
+ElementPeerList::update_itr() {
   m_windowList->mark_dirty();
   m_elementInfo->set_object(m_listItr != m_list.end() ? &*m_listItr : NULL);
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_peer_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_peer_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_peer_list.h	2006-10-30 20:15:04.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_peer_list.h	2006-12-26 01:30:01.000000000 +0800
@@ -73,13 +73,13 @@
 
   void                receive_peer_connected(torrent::Peer p);
   void                receive_peer_disconnected(torrent::Peer p);
 
   void                receive_snub_peer();
 
-  void                updated_itr();
+  void                update_itr();
 
   core::Download*     m_download;
   
   Display             m_state;
   display::Window*    m_windowList;
   
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_text.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_text.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.0/src/ui/element_text.h	2006-10-16 13:33:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.1/src/ui/element_text.h	2006-12-26 14:54:39.000000000 +0800
@@ -69,12 +69,14 @@
   uint32_t            interval() const         { return m_window->interval(); }
   void                set_interval(uint32_t i) { m_window->set_interval(i); m_window->mark_dirty(); }
 
   void                activate(display::Frame* frame, bool focus = false);
   void                disable();
 
+  void                mark_dirty()             { m_window->mark_dirty(); }
+
   // Consider returning a pointer that can be used to manipulate
   // entries, f.ex disabling them.
 
   void                push_back(text_element_wrapper entry);
 
   void                push_column(text_element_wrapper entry1, text_element_wrapper entry2);

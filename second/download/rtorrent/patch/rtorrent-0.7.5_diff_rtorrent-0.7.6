diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/config.h.in	2007-05-27 06:01:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/config.h.in	2007-08-02 05:53:21.000000000 +0800
@@ -21,15 +21,12 @@
 /* true if config.h was included */
 #undef HAVE_CONFIG_H
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
 #undef HAVE_DLFCN_H
 
-/* Support for FastCGI. */
-#undef HAVE_FASTCGI
-
 /* Define to 1 if you have the <inttypes.h> header file. */
 #undef HAVE_INTTYPES_H
 
 /* Define to 1 if you have the <memory.h> header file. */
 #undef HAVE_MEMORY_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/configure	2007-05-27 05:58:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/configure	2007-08-02 05:50:50.000000000 +0800
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.60 for rtorrent 0.7.5.
+# Generated by GNU Autoconf 2.60 for rtorrent 0.7.6.
 #
 # Report bugs to <jaris@ifi.uio.no>.
 #
 # Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 # 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
@@ -710,14 +710,14 @@
 MAKEFLAGS=
 SHELL=${CONFIG_SHELL-/bin/sh}
 
 # Identity of this package.
 PACKAGE_NAME='rtorrent'
 PACKAGE_TARNAME='rtorrent'
-PACKAGE_VERSION='0.7.5'
-PACKAGE_STRING='rtorrent 0.7.5'
+PACKAGE_VERSION='0.7.6'
+PACKAGE_STRING='rtorrent 0.7.6'
 PACKAGE_BUGREPORT='jaris@ifi.uio.no'
 
 # Factoring default headers for most tests.
 ac_includes_default="\
 #include <stdio.h>
 #if HAVE_SYS_TYPES_H
@@ -1375,13 +1375,13 @@
 # Report the --help message.
 #
 if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures rtorrent 0.7.5 to adapt to many kinds of systems.
+\`configure' configures rtorrent 0.7.6 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
 To assign environment variables (e.g., CC, CFLAGS...), specify them as
 VAR=VALUE.  See below for descriptions of some of the useful variables.
 
@@ -1445,13 +1445,13 @@
   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
 _ACEOF
 fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of rtorrent 0.7.5:";;
+     short | recursive ) echo "Configuration of rtorrent 0.7.6:";;
    esac
   cat <<\_ACEOF
 
 Optional Features:
   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
@@ -1478,13 +1478,12 @@
   --with-tags[=TAGS]      include additional configurations [automatic]
   --with-sysroot=PATH     compile and link with a specific sysroot.
   --without-variable-fdset       do not use non-portable variable sized fd_set's.
   --without-ncursesw      Don't try to use wide char ncurses.
   --without-statvfs       Don't try to use statvfs to find free diskspace.
   --without-statfs        Don't try to use statfs to find free diskspace.
-  --with-fastcgi=PATH      Enable FastCGI RPC support. (DO NOT USE)
   --with-xmlrpc-c=PATH     Enable XMLRPC-C support.
 
 Some influential environment variables:
   CXX         C++ compiler command
   CXXFLAGS    C++ compiler flags
   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
@@ -1563,13 +1562,13 @@
   done
 fi
 
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-rtorrent configure 0.7.5
+rtorrent configure 0.7.6
 generated by GNU Autoconf 2.60
 
 Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
@@ -1577,13 +1576,13 @@
   exit
 fi
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by rtorrent $as_me 0.7.5, which was
+It was created by rtorrent $as_me 0.7.6, which was
 generated by GNU Autoconf 2.60.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
 exec 5>>config.log
@@ -2248,13 +2247,13 @@
   fi
 fi
 
 
 # Define the identity of the package.
  PACKAGE='rtorrent'
- VERSION='0.7.5'
+ VERSION='0.7.6'
 
 
 cat >>confdefs.h <<_ACEOF
 #define PACKAGE "$PACKAGE"
 _ACEOF
 
@@ -4982,13 +4981,13 @@
     esac
   fi
   rm -rf conftest*
   ;;
 *-*-irix6*)
   # Find out which ABI we are using.
-  echo '#line 4988 "configure"' > conftest.$ac_ext
+  echo '#line 4987 "configure"' > conftest.$ac_ext
   if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
    if test "$lt_cv_prog_gnu_ld" = yes; then
@@ -7405,17 +7404,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:7411: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:7410: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:7415: \$? = $ac_status" >&5
+   echo "$as_me:7414: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -7673,17 +7672,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:7679: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:7678: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:7683: \$? = $ac_status" >&5
+   echo "$as_me:7682: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -7777,17 +7776,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:7783: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:7782: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:7787: \$? = $ac_status" >&5
+   echo "$as_me:7786: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -10229,13 +10228,13 @@
   	  if test "$cross_compiling" = yes; then :
   lt_cv_dlopen_self=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 10235 "configure"
+#line 10234 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
 
@@ -10329,13 +10328,13 @@
   	  if test "$cross_compiling" = yes; then :
   lt_cv_dlopen_self_static=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 10335 "configure"
+#line 10334 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
 #include <dlfcn.h>
 #endif
 
@@ -12697,17 +12696,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:12703: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:12702: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:12707: \$? = $ac_status" >&5
+   echo "$as_me:12706: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -12801,17 +12800,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:12807: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:12806: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:12811: \$? = $ac_status" >&5
+   echo "$as_me:12810: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -14371,17 +14370,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:14377: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:14376: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:14381: \$? = $ac_status" >&5
+   echo "$as_me:14380: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -14475,17 +14474,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:14481: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:14480: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:14485: \$? = $ac_status" >&5
+   echo "$as_me:14484: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -16705,17 +16704,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16711: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16710: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:16715: \$? = $ac_status" >&5
+   echo "$as_me:16714: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -16973,17 +16972,17 @@
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    # The option is referenced via a variable to avoid confusing sed.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:16979: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:16978: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "$as_me:16983: \$? = $ac_status" >&5
+   echo "$as_me:16982: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
      $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
      if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
@@ -17077,17 +17076,17 @@
    # Note that $ac_compile itself does not contain backslashes and begins
    # with a dollar sign (not a hyphen), so the echo should work correctly.
    lt_compile=`echo "$ac_compile" | $SED \
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"\$as_me:17083: $lt_compile\"" >&5)
+   (eval echo "\"\$as_me:17082: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "$as_me:17087: \$? = $ac_status" >&5
+   echo "$as_me:17086: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings
      $echo "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
      $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
@@ -22356,36 +22355,36 @@
 
 if test -n "$PKG_CONFIG"; then
     if test -n "$STUFF_CFLAGS"; then
         pkg_cv_STUFF_CFLAGS="$STUFF_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5\"") >&5
-  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6\"") >&5
+  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5" 2>/dev/null`
+  pkg_cv_STUFF_CFLAGS=`$PKG_CONFIG --cflags "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6" 2>/dev/null`
 else
   pkg_failed=yes
 fi
     fi
 else
 	pkg_failed=untried
 fi
 if test -n "$PKG_CONFIG"; then
     if test -n "$STUFF_LIBS"; then
         pkg_cv_STUFF_LIBS="$STUFF_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5\"") >&5
-  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6\"") >&5
+  ($PKG_CONFIG --exists --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5" 2>/dev/null`
+  pkg_cv_STUFF_LIBS=`$PKG_CONFIG --libs "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6" 2>/dev/null`
 else
   pkg_failed=yes
 fi
     fi
 else
 	pkg_failed=untried
@@ -22398,31 +22397,31 @@
 if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
         _pkg_short_errors_supported=yes
 else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        STUFF_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5"`
+	        STUFF_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6"`
         else
-	        STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5"`
+	        STUFF_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$STUFF_PKG_ERRORS" >&5
 
-	{ { echo "$as_me:$LINENO: error: Package requirements (sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5) were not met:
+	{ { echo "$as_me:$LINENO: error: Package requirements (sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6) were not met:
 
 $STUFF_PKG_ERRORS
 
 Consider adjusting the PKG_CONFIG_PATH environment variable if you
 installed software in a non-standard prefix.
 
 Alternatively, you may set the environment variables STUFF_CFLAGS
 and STUFF_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 " >&5
-echo "$as_me: error: Package requirements (sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5) were not met:
+echo "$as_me: error: Package requirements (sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6) were not met:
 
 $STUFF_PKG_ERRORS
 
 Consider adjusting the PKG_CONFIG_PATH environment variable if you
 installed software in a non-standard prefix.
 
@@ -22466,188 +22465,12 @@
 ac_cpp='$CXXCPP $CPPFLAGS'
 ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
 ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
 ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
 
 
-
-# Check whether --with-fastcgi was given.
-if test "${with_fastcgi+set}" = set; then
-  withval=$with_fastcgi;
-      { echo "$as_me:$LINENO: checking for FastCGI (DO NOT USE)" >&5
-echo $ECHO_N "checking for FastCGI (DO NOT USE)... $ECHO_C" >&6; }
-
-      if test "$withval" = "no"; then
-        { echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6; }
-
-      elif test "$withval" = "yes"; then
-        CXXFLAGS="$CXXFLAGS"
-	LIBS="$LIBS -lfcgi"
-
-        cat >conftest.$ac_ext <<_ACEOF
-/* confdefs.h.  */
-_ACEOF
-cat confdefs.h >>conftest.$ac_ext
-cat >>conftest.$ac_ext <<_ACEOF
-/* end confdefs.h.  */
- #include <fcgiapp.h>
-
-int
-main ()
-{
- FCGX_Init();
-  ;
-  return 0;
-}
-_ACEOF
-rm -f conftest.$ac_objext conftest$ac_exeext
-if { (ac_try="$ac_link"
-case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
-  (eval "$ac_link") 2>conftest.er1
-  ac_status=$?
-  grep -v '^ *+' conftest.er1 >conftest.err
-  rm -f conftest.er1
-  cat conftest.err >&5
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag" || test ! -s conftest.err'
-  { (case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
-  (eval "$ac_try") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest$ac_exeext'
-  { (case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
-  (eval "$ac_try") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-
-          { echo "$as_me:$LINENO: result: ok" >&5
-echo "${ECHO_T}ok" >&6; }
-
-else
-  echo "$as_me: failed program was:" >&5
-sed 's/^/| /' conftest.$ac_ext >&5
-
-
-          { echo "$as_me:$LINENO: result: not found" >&5
-echo "${ECHO_T}not found" >&6; }
-          { { echo "$as_me:$LINENO: error: Could not compile FastCGI test." >&5
-echo "$as_me: error: Could not compile FastCGI test." >&2;}
-   { (exit 1); exit 1; }; }
-
-fi
-
-rm -f core conftest.err conftest.$ac_objext \
-      conftest$ac_exeext conftest.$ac_ext
-
-
-cat >>confdefs.h <<\_ACEOF
-#define HAVE_FASTCGI 1
-_ACEOF
-
-
-      else
-        CXXFLAGS="$CXXFLAGS -I$withval/include"
-	LIBS="$LIBS -lfcgi -L$withval/lib"
-
-        cat >conftest.$ac_ext <<_ACEOF
-/* confdefs.h.  */
-_ACEOF
-cat confdefs.h >>conftest.$ac_ext
-cat >>conftest.$ac_ext <<_ACEOF
-/* end confdefs.h.  */
- #include <fcgiapp.h>
-
-int
-main ()
-{
- FCGX_Init();
-  ;
-  return 0;
-}
-_ACEOF
-rm -f conftest.$ac_objext conftest$ac_exeext
-if { (ac_try="$ac_link"
-case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
-  (eval "$ac_link") 2>conftest.er1
-  ac_status=$?
-  grep -v '^ *+' conftest.er1 >conftest.err
-  rm -f conftest.er1
-  cat conftest.err >&5
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_cxx_werror_flag" || test ! -s conftest.err'
-  { (case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
-  (eval "$ac_try") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest$ac_exeext'
-  { (case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
-  (eval "$ac_try") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-
-          { echo "$as_me:$LINENO: result: ok" >&5
-echo "${ECHO_T}ok" >&6; }
-
-else
-  echo "$as_me: failed program was:" >&5
-sed 's/^/| /' conftest.$ac_ext >&5
-
-
-          { echo "$as_me:$LINENO: result: not found" >&5
-echo "${ECHO_T}not found" >&6; }
-          { { echo "$as_me:$LINENO: error: Could not compile FastCGI test." >&5
-echo "$as_me: error: Could not compile FastCGI test." >&2;}
-   { (exit 1); exit 1; }; }
-
-fi
-
-rm -f core conftest.err conftest.$ac_objext \
-      conftest$ac_exeext conftest.$ac_ext
-
-
-cat >>confdefs.h <<\_ACEOF
-#define HAVE_FASTCGI 1
-_ACEOF
-
-      fi
-
-fi
-
-
-
   { echo "$as_me:$LINENO: checking for XMLRPC-C" >&5
 echo $ECHO_N "checking for XMLRPC-C... $ECHO_C" >&6; }
 
 
 # Check whether --with-xmlrpc-c was given.
 if test "${with_xmlrpc_c+set}" = set; then
@@ -23257,13 +23080,13 @@
 exec 6>&1
 
 # Save the log message, to keep $[0] and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by rtorrent $as_me 0.7.5, which was
+This file was extended by rtorrent $as_me 0.7.6, which was
 generated by GNU Autoconf 2.60.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
   CONFIG_LINKS    = $CONFIG_LINKS
   CONFIG_COMMANDS = $CONFIG_COMMANDS
@@ -23310,13 +23133,13 @@
 
 Report bugs to <bug-autoconf@gnu.org>."
 
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
-rtorrent config.status 0.7.5
+rtorrent config.status 0.7.6
 configured by $0, generated by GNU Autoconf 2.60,
   with options \\"`echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
 Copyright (C) 2006 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/configure.ac /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/configure.ac
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/configure.ac	2007-04-11 05:15:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/configure.ac	2007-08-02 05:46:25.000000000 +0800
@@ -1,7 +1,7 @@
-AC_INIT(rtorrent, 0.7.5, jaris@ifi.uio.no)
+AC_INIT(rtorrent, 0.7.6, jaris@ifi.uio.no)
 
 AM_INIT_AUTOMAKE
 AM_CONFIG_HEADER(config.h)
 
 TORRENT_CHECK_CXXFLAGS()
 TORRENT_ENABLE_DEBUG()
@@ -22,18 +22,17 @@
 
 TORRENT_WITHOUT_VARIABLE_FDSET()
 TORRENT_WITHOUT_NCURSESW()
 TORRENT_WITHOUT_STATVFS()
 TORRENT_WITHOUT_STATFS()
 
-PKG_CHECK_MODULES(STUFF, sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.5,
+PKG_CHECK_MODULES(STUFF, sigc++-2.0 libcurl >= 7.12.0 libtorrent >= 0.11.6,
 	          CXXFLAGS="$CXXFLAGS $STUFF_CFLAGS";
 		  LIBS="$LIBS $STUFF_LIBS")
 
 AC_LANG_PUSH(C++)
-TORRENT_WITH_FASTCGI
 TORRENT_WITH_XMLRPC_C
 AC_LANG_POP(C++)
 
 AC_DEFINE(HAVE_CONFIG_H, 1, true if config.h was included)
 AC_DEFINE(USER_AGENT, [std::string(PACKAGE "/" VERSION "/") + torrent::version()], Http user agent)
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/address_info.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/address_info.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/address_info.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/address_info.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/algorithm.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/algorithm.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/algorithm.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/algorithm.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/error_number.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/error_number.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/error_number.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/error_number.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/file_stat.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/file_stat.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/file_stat.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/file_stat.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/fs_stat.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/fs_stat.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/fs_stat.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/fs_stat.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/functional_fun.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/functional_fun.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/functional_fun.h	2007-04-20 01:45:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/functional_fun.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -348,12 +348,27 @@
 
 private:
   Func    m_func;
   Arg1    m_arg1;
 };
 
+template <typename Result, typename Arg1, typename Arg2, typename Arg3>
+class ptr_fn2_b1_t : public function_base2<Result, Arg2, Arg3> {
+public:
+  typedef Result (*Func)(Arg1, Arg2, Arg3);
+
+  ptr_fn2_b1_t(Func func, const Arg1 arg1) : m_func(func), m_arg1(arg1) {}
+  virtual ~ptr_fn2_b1_t() {}
+  
+  virtual Result operator () (Arg2 arg2, Arg3 arg3) { return m_func(m_arg1, arg2, arg3); }
+
+private:
+  Func    m_func;
+  Arg1    m_arg1;
+};
+
 template <typename Ftor>
 class ftor_fn1_t : public function_base1<typename Ftor::result_type, typename Ftor::argument_type> {
 public:
   typedef typename Ftor::result_type result_type;
   typedef typename Ftor::argument_type argument_type;
 
@@ -516,12 +531,18 @@
 template <typename Arg1, typename Arg2, typename Result>
 inline function_base1<Result, Arg2>*
 bind_ptr_fn(Result (*func)(Arg1, Arg2), const Arg1 arg1) {
   return new ptr_fn1_b1_t<Result, Arg1, Arg2>(func, arg1);
 }
 
+template <typename Arg1, typename Arg2, typename Arg3, typename Result>
+inline function_base2<Result, Arg2, Arg3>*
+bind_ptr_fn(Result (*func)(Arg1, Arg2, Arg3), const Arg1 arg1) {
+  return new ptr_fn2_b1_t<Result, Arg1, Arg2, Arg3>(func, arg1);
+}
+
 template <typename Ftor>
 inline function_base1<typename Ftor::result_type, typename Ftor::argument_type>*
 ftor_fn1(Ftor ftor) {
   return new ftor_fn1_t<Ftor>(ftor);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/functional.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/functional.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/functional.h	2007-05-02 02:54:38.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/functional.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/partial_queue.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/partial_queue.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/partial_queue.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/partial_queue.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/path.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/path.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/path.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/path.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/priority_queue_default.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/priority_queue_default.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/priority_queue_default.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/priority_queue_default.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/priority_queue.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/priority_queue.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/priority_queue.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/priority_queue.h	2007-07-20 05:23:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/ranges.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/ranges.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/ranges.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/ranges.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/regex.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/regex.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/regex.h	2007-02-23 00:24:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/regex.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/socket_address.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/socket_address.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/socket_address.h	2007-03-21 11:50:44.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/socket_address.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/string_manip.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/string_manip.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/string_manip.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/string_manip.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/timer.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/timer.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/timer.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/timer.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // libTorrent - BitTorrent library
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/unordered_vector.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/unordered_vector.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/rak/unordered_vector.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/rak/unordered_vector.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rak - Rakshasa's toolbox
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_download.cc	2007-06-19 23:15:24.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_download.cc	2007-08-02 05:36:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -34,12 +34,13 @@
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
 #include <functional>
+#include <unistd.h>
 #include <rak/file_stat.h>
 #include <rak/error_number.h>
 #include <rak/path.h>
 #include <torrent/rate.h>
 #include <torrent/data/file.h>
 #include <torrent/data/file_list.h>
@@ -61,29 +62,29 @@
   else
     return download->file_list()->at(0)->frozen_path();
 }
 
 std::string
 retrieve_d_base_filename(core::Download* download) {
-  std::string base;
+  const std::string* base;
 
   if (download->file_list()->is_multi_file())
-    base = download->file_list()->root_dir();
+    base = &download->file_list()->root_dir();
   else
-    base = download->file_list()->at(0)->frozen_path();
+    base = &download->file_list()->at(0)->frozen_path();
 
-  std::string::size_type split = base.rfind('/');
+  std::string::size_type split = base->rfind('/');
 
   if (split == std::string::npos)
-    return base;
+    return *base;
   else
-    return base.substr(split + 1);
+    return base->substr(split + 1);
 }
 
 torrent::Object
-apply_d_create_link(core::Download* download, const torrent::Object& rawArgs) {
+apply_d_change_link(int changeType, core::Download* download, const torrent::Object& rawArgs) {
   const torrent::Object::list_type& args = rawArgs.as_list();
 
   if (args.size() != 3)
     throw torrent::input_error("Wrong argument count.");
 
   torrent::Object::list_type::const_iterator itr = args.begin();
@@ -116,101 +117,152 @@
     target = rpc::call_command_d_string("get_d_base_path", download);
 
   } else {
     throw torrent::input_error("Unknown type argument.");
   }
 
-  if (symlink(target.c_str(), link.c_str()) == -1)
-//     control->core()->push_log("create_link failed: " + std::string(rak::error_number::current().c_str()));
-//     control->core()->push_log("create_link failed: " + std::string(rak::error_number::current().c_str()) + " to " + target);
-    ; // Disabled.
+  switch (changeType) {
+  case 0:
+    if (symlink(target.c_str(), link.c_str()) == -1)
+      //     control->core()->push_log("create_link failed: " + std::string(rak::error_number::current().c_str()));
+      //     control->core()->push_log("create_link failed: " + std::string(rak::error_number::current().c_str()) + " to " + target);
+      ; // Disabled.
+    break;
+
+  case 1:
+  {
+    rak::file_stat fileStat;
+    rak::error_number::clear_global();
+
+    if (!fileStat.update_link(link) || !fileStat.is_link() ||
+        unlink(link.c_str()) == -1)
+      ; //     control->core()->push_log("delete_link failed: " + std::string(rak::error_number::current().c_str()));
+
+    break;
+  }
+  default:
+    break;
+  }
 
   return torrent::Object();
 }
 
-torrent::Object
-apply_d_delete_link(core::Download* download, const torrent::Object& rawArgs) {
-  const torrent::Object::list_type& args = rawArgs.as_list();
-
-  if (args.size() != 3)
-    throw torrent::input_error("Wrong argument count.");
-
-  torrent::Object::list_type::const_iterator itr = args.begin();
-
-  const std::string& type    = (itr++)->as_string();
-  const std::string& prefix  = (itr++)->as_string();
-  const std::string& postfix = (itr++)->as_string();
-  
-  if (type.empty())
-    throw torrent::input_error("Invalid arguments.");
+void
+apply_d_delete_tied(core::Download* download) {
+  const std::string& tie = rpc::call_command_d_string("get_d_tied_to_file", download);
 
-  std::string link;
+  if (tie.empty())
+    return;
 
-  if (type == "base_path") {
-    link = rak::path_expand(prefix + rpc::call_command_d_string("get_d_base_path", download) + postfix);
+  if (::unlink(rak::path_expand(tie).c_str()) == -1)
+    control->core()->push_log_std("Could not unlink tied file: " + std::string(rak::error_number::current().c_str()));
 
-  } else if (type == "base_filename") {
-    link = rak::path_expand(prefix + rpc::call_command_d_string("get_d_base_filename", download) + postfix);
+  rpc::call_command_d("set_d_tied_to_file", download, std::string());
+}
 
-  } else if (type == "tied") {
-    link = rak::path_expand(rpc::call_command_d_string("get_d_tied_to_file", download));
+void
+apply_d_connection_type(core::Download* download, const std::string& name) {
+  torrent::Download::ConnectionType connType;
 
-    if (link.empty())
-      return torrent::Object();
+  if (name == "leech")
+    connType = torrent::Download::CONNECTION_LEECH;
+  else if (name == "seed")
+    connType = torrent::Download::CONNECTION_SEED;
+  else
+    throw torrent::input_error("Unknown peer connection type selected.");
 
-    link = rak::path_expand(prefix + link + postfix);
+  download->download()->set_connection_type(connType);
+}
 
-  } else {
-    throw torrent::input_error("Unknown type argument.");
+const char*
+retrieve_d_connection_type(core::Download* download) {
+  switch (download->download()->connection_type()) {
+  case torrent::Download::CONNECTION_LEECH:
+    return "leech";
+  case torrent::Download::CONNECTION_SEED:
+    return "seed";
+  default:
+    return "unknown";
   }
+}
 
-  rak::file_stat fileStat;
-  rak::error_number::clear_global();
+const char*
+retrieve_d_priority_str(core::Download* download) {
+  switch (download->priority()) {
+  case 0:
+    return "off";
+  case 1:
+    return "low";
+  case 2:
+    return "normal";
+  case 3:
+    return "high";
+  default:
+    throw torrent::input_error("Priority out of range.");
+  }
+}
 
-  if (!fileStat.update_link(link) || !fileStat.is_link() ||
-      unlink(link.c_str()) == -1)
-    ; //     control->core()->push_log("delete_link failed: " + std::string(rak::error_number::current().c_str()));
+torrent::Object
+apply_d_ratio(core::Download* download) {
+  int64_t bytesDone = download->download()->bytes_done();
+  int64_t upTotal   = download->download()->up_rate()->total();
 
-  return torrent::Object();
+  return bytesDone > 0 ? (1000 * upTotal) / bytesDone : 0;
 }
 
-#define ADD_COMMAND_DOWNLOAD_SLOT(key, function, slot, parm, doc)    \
+#define ADD_CD_SLOT(key, function, slot, parm, doc)    \
   commandDownloadSlotsItr->set_slot(slot); \
-  rpc::commands.insert(key, commandDownloadSlotsItr++, NULL, &rpc::CommandDownloadSlot::function, rpc::CommandMap::flag_dont_delete, parm, doc);
+  rpc::commands.insert_download(key, commandDownloadSlotsItr++, &rpc::CommandDownloadSlot::function, rpc::CommandMap::flag_dont_delete, parm, doc);
 
-#define ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC(key, function, slot, parm, doc)    \
+#define ADD_CD_SLOT_PUBLIC(key, function, slot, parm, doc)    \
   commandDownloadSlotsItr->set_slot(slot); \
-  rpc::commands.insert(key, commandDownloadSlotsItr++, NULL, &rpc::CommandDownloadSlot::function, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, parm, doc);
+  rpc::commands.insert_download(key, commandDownloadSlotsItr++, &rpc::CommandDownloadSlot::function, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, parm, doc);
+
+#define ADD_CD_VOID(key, slot) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_d_fn(slot), "i:", "")
+
+#define ADD_CD_V_VOID(key, slot) \
+  ADD_CD_SLOT_PUBLIC("d_" key, call_unknown, rpc::object_d_fn(slot), "i:", "")
+
+#define ADD_CD_F_VOID(key, slot) \
+  ADD_CD_SLOT_PUBLIC("d_" key, call_unknown, rpc::object_void_d_fn(slot), "i:", "")
 
-#define ADD_COMMAND_DOWNLOAD_VOID(key, slot) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_d_fn(slot), "i:", "")
+#define ADD_CD_LIST(key, slot) \
+  ADD_CD_SLOT_PUBLIC(key, call_list, slot, "i:", "")
 
-#define ADD_COMMAND_DOWNLOAD_LIST(key, slot) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC(key, call_list, slot, "i:", "")
+#define ADD_CD_VARIABLE_VALUE(key, firstKey, secondKey) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::get_variable_d_fn(firstKey, secondKey), "i:", ""); \
+  ADD_CD_SLOT("set_d_" key, call_value,   rpc::set_variable_d_fn(firstKey, secondKey), "i:i", "");
 
-#define ADD_COMMAND_DOWNLOAD_VARIABLE_VALUE(key, firstKey, secondKey) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::get_variable_d_fn(firstKey, secondKey), "i:", ""); \
-  ADD_COMMAND_DOWNLOAD_SLOT("set_d_" key, call_value,   rpc::set_variable_d_fn(firstKey, secondKey), "i:i", "");
+#define ADD_CD_VARIABLE_VALUE_PUBLIC(key, firstKey, secondKey) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::get_variable_d_fn(firstKey, secondKey), "i:", ""); \
+  ADD_CD_SLOT_PUBLIC("set_d_" key, call_value,   rpc::set_variable_d_fn(firstKey, secondKey), "i:i", "");
 
-#define ADD_COMMAND_DOWNLOAD_VARIABLE_STRING(key, firstKey, secondKey) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::get_variable_d_fn(firstKey, secondKey), "i:", ""); \
-  ADD_COMMAND_DOWNLOAD_SLOT("set_d_" key, call_string,  rpc::set_variable_d_fn(firstKey, secondKey), "i:s", "");
+#define ADD_CD_VARIABLE_STRING(key, firstKey, secondKey) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::get_variable_d_fn(firstKey, secondKey), "i:", ""); \
+  ADD_CD_SLOT("set_d_" key, call_string,  rpc::set_variable_d_fn(firstKey, secondKey), "i:s", "");
 
-#define ADD_COMMAND_DOWNLOAD_VALUE_BI(key, set, get) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("set_d_" key, call_value, rpc::object_value_d_fn(set), "i:i", "") \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(get), "i:", "")
+#define ADD_CD_VALUE_UNI(key, get) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(get), "i:", "")
 
-#define ADD_COMMAND_DOWNLOAD_VALUE_MEM_BI(key, target, set, get) \
-  ADD_COMMAND_DOWNLOAD_VALUE_BI(key, rak::on2(std::mem_fun(target), std::mem_fun(set)), rak::on(std::mem_fun(target), std::mem_fun(get)));
+#define ADD_CD_VALUE_BI(key, set, get) \
+  ADD_CD_SLOT_PUBLIC("set_d_" key, call_value, rpc::object_value_d_fn(set), "i:i", "") \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(get), "i:", "")
 
-#define ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI(key, target, get) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(rak::on(rak::on(std::mem_fun(&core::Download::download), std::mem_fun(target)), std::mem_fun(get))), "i:", "");
+#define ADD_CD_VALUE_MEM_BI(key, target, set, get) \
+  ADD_CD_VALUE_BI(key, rak::on2(std::mem_fun(target), std::mem_fun(set)), rak::on(std::mem_fun(target), std::mem_fun(get)));
 
-#define ADD_COMMAND_DOWNLOAD_STRING_BI(key, set, get) \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("set_d_" key, call_string, rpc::object_string_d_fn(set), "i:s", "") \
-  ADD_COMMAND_DOWNLOAD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(get), "s:", "")
+#define ADD_CD_VALUE_MEM_UNI(key, target, get) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(rak::on(rak::on(std::mem_fun(&core::Download::download), std::mem_fun(target)), std::mem_fun(get))), "i:", "");
+
+#define ADD_CD_STRING_UNI(key, get) \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(get), "s:", "")
+
+#define ADD_CD_STRING_BI(key, set, get) \
+  ADD_CD_SLOT_PUBLIC("set_d_" key, call_string, rpc::object_string_d_fn(set), "i:s", "") \
+  ADD_CD_SLOT_PUBLIC("get_d_" key, call_unknown, rpc::object_void_d_fn(get), "s:", "")
 
 void
 add_copy_to_download(const char* src, const char* dest) {
   rpc::CommandMap::iterator itr = rpc::commands.find(src);
 
   if (itr == rpc::commands.end())
@@ -218,59 +270,104 @@
 
   rpc::commands.insert(dest, itr->second);
 }
 
 void
 initialize_command_download() {
-  ADD_COMMAND_DOWNLOAD_VOID("base_path", &retrieve_d_base_path);
-  ADD_COMMAND_DOWNLOAD_VOID("base_filename", &retrieve_d_base_filename);
-
-  ADD_COMMAND_DOWNLOAD_LIST("create_link", rak::ptr_fn(&apply_d_create_link));
-  ADD_COMMAND_DOWNLOAD_LIST("delete_link", rak::ptr_fn(&apply_d_delete_link));
+  ADD_CD_VOID("base_path",     &retrieve_d_base_path);
+  ADD_CD_VOID("base_filename", &retrieve_d_base_filename);
+  ADD_CD_STRING_UNI("name",    rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::name)));
+
+  ADD_CD_LIST("create_link",   rak::bind_ptr_fn(&apply_d_change_link, 0));
+  ADD_CD_LIST("delete_link",   rak::bind_ptr_fn(&apply_d_change_link, 1));
+  ADD_CD_V_VOID("delete_tied", &apply_d_delete_tied);
+
+  ADD_CD_F_VOID("start",      rak::make_mem_fun(control->core()->download_list(), &core::DownloadList::start_normal));
+  ADD_CD_F_VOID("stop",       rak::make_mem_fun(control->core()->download_list(), &core::DownloadList::stop_normal));
+  ADD_CD_F_VOID("open",       rak::make_mem_fun(control->core()->download_list(), &core::DownloadList::open_throw));
+  ADD_CD_F_VOID("close",      rak::make_mem_fun(control->core()->download_list(), &core::DownloadList::close_throw));
+  ADD_CD_F_VOID("erase",      rak::make_mem_fun(control->core()->download_list(), &core::DownloadList::erase_ptr));
+  ADD_CD_F_VOID("check_hash", rak::make_mem_fun(control->core()->download_list(), &core::DownloadList::check_hash));
+
+  ADD_CD_F_VOID("update_priorities", rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::update_priorities)));
+
+  ADD_CD_VALUE_UNI("is_open",          rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::is_open)));
+  ADD_CD_VALUE_UNI("is_active",        rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::is_active)));
+  ADD_CD_VALUE_UNI("is_hash_checked",  rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::is_hash_checked)));
+  ADD_CD_VALUE_UNI("is_hash_checking", rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::is_hash_checking)));
+  ADD_CD_VALUE_UNI("is_multi_file",    rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::is_multi_file)));
 
   // 0 - stopped
   // 1 - started
-  ADD_COMMAND_DOWNLOAD_VARIABLE_VALUE("state", "rtorrent", "state");
-  ADD_COMMAND_DOWNLOAD_VARIABLE_VALUE("complete", "rtorrent", "complete");
+  ADD_CD_VARIABLE_VALUE("state", "rtorrent", "state");
+  ADD_CD_VARIABLE_VALUE("complete", "rtorrent", "complete");
+
+  // 0 off
+  // 1 scheduled, being controlled by a download scheduler. Includes a priority.
+  // 3 forced off
+  // 2 forced on
+  ADD_CD_VARIABLE_VALUE("mode", "rtorrent", "mode");
 
   // 0 - Not hashing
   // 1 - Normal hashing
   // 2 - Download finished, hashing
-  ADD_COMMAND_DOWNLOAD_VARIABLE_VALUE("hashing", "rtorrent", "hashing");
-  ADD_COMMAND_DOWNLOAD_VARIABLE_STRING("tied_to_file", "rtorrent", "tied_to_file");
+  ADD_CD_VARIABLE_VALUE("hashing", "rtorrent", "hashing");
+  ADD_CD_VARIABLE_STRING("tied_to_file", "rtorrent", "tied_to_file");
 
   // The "state_changed" variable is required to be a valid unix time
   // value, it indicates the last time the torrent changed its state,
   // resume/pause.
-  ADD_COMMAND_DOWNLOAD_VARIABLE_VALUE("state_changed", "rtorrent", "state_changed");
-  ADD_COMMAND_DOWNLOAD_VARIABLE_VALUE("ignore_commands", "rtorrent", "ignore_commands");
+  ADD_CD_VARIABLE_VALUE("state_changed", "rtorrent", "state_changed");
+  ADD_CD_VARIABLE_VALUE_PUBLIC("ignore_commands", "rtorrent", "ignore_commands");
 
-  ADD_COMMAND_DOWNLOAD_STRING_BI("connection_current", std::mem_fun(&core::Download::set_connection_current), std::mem_fun(&core::Download::connection_current));
+  ADD_CD_STRING_BI("connection_current", std::ptr_fun(&apply_d_connection_type), std::ptr_fun(&retrieve_d_connection_type));
 
   add_copy_to_download("get_connection_leech", "get_d_connection_leech");
   add_copy_to_download("set_connection_leech", "set_d_connection_leech");
   add_copy_to_download("get_connection_seed", "get_d_connection_seed");
   add_copy_to_download("set_connection_seed", "set_d_connection_seed");
 
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_BI("max_file_size", &core::Download::file_list, &torrent::FileList::set_max_file_size, &torrent::FileList::max_file_size);
-
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_BI("min_peers",     &core::Download::download, &torrent::Download::set_peers_min, &torrent::Download::peers_min);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_BI("max_peers",     &core::Download::download, &torrent::Download::set_peers_max, &torrent::Download::peers_max);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_BI("max_uploads",   &core::Download::download, &torrent::Download::set_uploads_max, &torrent::Download::uploads_max);
-
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI("up_rate",    &torrent::Download::mutable_up_rate, &torrent::Rate::rate);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI("up_total",   &torrent::Download::mutable_up_rate, &torrent::Rate::total);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI("down_rate",  &torrent::Download::mutable_down_rate, &torrent::Rate::rate);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI("down_total", &torrent::Download::mutable_down_rate, &torrent::Rate::total);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI("skip_rate",  &torrent::Download::mutable_skip_rate, &torrent::Rate::rate);
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_UNI("skip_total", &torrent::Download::mutable_skip_rate, &torrent::Rate::total);
-
-  //   rpc::commands.insert("split_file_size",    new rpc::VariableValueSlot(rak::mem_fn(file_list(), &torrent::FileList::split_file_size),
-  //                                                                         rak::mem_fn(file_list(), &torrent::FileList::set_split_file_size)));
-  //   rpc::commands.insert("split_suffix",       new rpc::VariableStringSlot(rak::mem_fn(file_list(), &torrent::FileList::split_suffix),
-  //                                                                          rak::mem_fn(file_list(), &torrent::FileList::set_split_suffix)));
-
-  ADD_COMMAND_DOWNLOAD_VALUE_MEM_BI("tracker_numwant", &core::Download::tracker_list, &torrent::TrackerList::set_numwant, &torrent::TrackerList::numwant);
+  ADD_CD_VALUE_MEM_BI("max_file_size", &core::Download::file_list, &torrent::FileList::set_max_file_size, &torrent::FileList::max_file_size);
 
-  ADD_COMMAND_DOWNLOAD_STRING_BI("directory", std::mem_fun(&core::Download::set_root_directory), rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::root_dir)));
-  ADD_COMMAND_DOWNLOAD_VALUE_BI("priority", std::mem_fun(&core::Download::set_priority), std::mem_fun(&core::Download::priority));
+  // Deprecated.
+  ADD_CD_VALUE_MEM_BI("min_peers",     &core::Download::download, &torrent::Download::set_peers_min, &torrent::Download::peers_min);
+  ADD_CD_VALUE_MEM_BI("max_peers",     &core::Download::download, &torrent::Download::set_peers_max, &torrent::Download::peers_max);
+  ADD_CD_VALUE_MEM_BI("max_uploads",   &core::Download::download, &torrent::Download::set_uploads_max, &torrent::Download::uploads_max);
+
+  ADD_CD_VALUE_MEM_BI("peers_min",        &core::Download::download, &torrent::Download::set_peers_min, &torrent::Download::peers_min);
+  ADD_CD_VALUE_MEM_BI("peers_max",        &core::Download::download, &torrent::Download::set_peers_max, &torrent::Download::peers_max);
+  ADD_CD_VALUE_MEM_BI("uploads_max",      &core::Download::download, &torrent::Download::set_uploads_max, &torrent::Download::uploads_max);
+  ADD_CD_VALUE_UNI("peers_connected",     rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::peers_connected)));
+  ADD_CD_VALUE_UNI("peers_not_connected", rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::peers_not_connected)));
+  ADD_CD_VALUE_UNI("peers_complete",      rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::peers_complete)));
+  ADD_CD_VALUE_UNI("peers_accounted",     rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::peers_accounted)));
+
+  ADD_CD_VALUE_MEM_UNI("up_rate",      &torrent::Download::mutable_up_rate, &torrent::Rate::rate);
+  ADD_CD_VALUE_MEM_UNI("up_total",     &torrent::Download::mutable_up_rate, &torrent::Rate::total);
+  ADD_CD_VALUE_MEM_UNI("down_rate",    &torrent::Download::mutable_down_rate, &torrent::Rate::rate);
+  ADD_CD_VALUE_MEM_UNI("down_total",   &torrent::Download::mutable_down_rate, &torrent::Rate::total);
+  ADD_CD_VALUE_MEM_UNI("skip_rate",    &torrent::Download::mutable_skip_rate, &torrent::Rate::rate);
+  ADD_CD_VALUE_MEM_UNI("skip_total",   &torrent::Download::mutable_skip_rate, &torrent::Rate::total);
+
+  ADD_CD_VALUE_UNI("bytes_done",       rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::bytes_done)));
+  ADD_CD_VALUE_UNI("ratio",            std::ptr_fun(&apply_d_ratio));
+  ADD_CD_VALUE_UNI("chunks_hashed",    rak::on(std::mem_fun(&core::Download::download), std::mem_fun(&torrent::Download::chunks_hashed)));
+  ADD_CD_VALUE_UNI("free_diskspace",   rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::free_diskspace)));
+
+  ADD_CD_VALUE_UNI("size_files",       rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::size_files)));
+  ADD_CD_VALUE_UNI("size_bytes",       rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::size_bytes)));
+  ADD_CD_VALUE_UNI("size_chunks",      rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::size_chunks)));
+
+  ADD_CD_VALUE_UNI("completed_bytes",  rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::completed_bytes)));
+  ADD_CD_VALUE_UNI("completed_chunks", rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::completed_chunks)));
+  ADD_CD_VALUE_UNI("left_bytes",       rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::left_bytes)));
+
+  ADD_CD_VALUE_UNI("chunk_size",       rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::chunk_size)));
+
+  ADD_CD_VALUE_MEM_BI("tracker_numwant", &core::Download::tracker_list, &torrent::TrackerList::set_numwant, &torrent::TrackerList::numwant);
+  ADD_CD_VALUE_UNI("tracker_focus",      rak::on(std::mem_fun(&core::Download::tracker_list), std::mem_fun(&torrent::TrackerList::focus)));
+  ADD_CD_VALUE_UNI("tracker_size",       rak::on(std::mem_fun(&core::Download::tracker_list), std::mem_fun(&torrent::TrackerList::size)));
+
+  ADD_CD_STRING_BI("directory",        std::mem_fun(&core::Download::set_root_directory), rak::on(std::mem_fun(&core::Download::file_list), std::mem_fun(&torrent::FileList::root_dir)));
+  ADD_CD_VALUE_BI("priority",          std::mem_fun(&core::Download::set_priority), std::mem_fun(&core::Download::priority));
+  ADD_CD_STRING_UNI("priority_str",    std::ptr_fun(&retrieve_d_priority_str));
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_events.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_events.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_events.cc	2007-06-21 04:37:26.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_events.cc	2007-07-25 23:45:46.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -45,21 +45,21 @@
 #include <torrent/hash_string.h>
 
 #include "core/download.h"
 #include "core/download_list.h"
 #include "core/manager.h"
 #include "core/view_manager.h"
+#include "rpc/command_scheduler.h"
 #include "rpc/command_slot.h"
 #include "rpc/command_variable.h"
 #include "rpc/parse.h"
 #include "rpc/parse_commands.h"
 
 #include "globals.h"
 #include "control.h"
 #include "command_helpers.h"
-#include "command_scheduler.h"
 
 torrent::Object
 apply_on_state_change(core::DownloadList::slot_map* slotMap, const torrent::Object& rawArgs) {
   const torrent::Object::list_type& args = rawArgs.as_list();
 
   if (args.size() < 2)
@@ -70,13 +70,13 @@
 
   std::string key = "1_state_" + args.front().as_string();
 
   if (args.back().as_string().empty())
     slotMap->erase(key);
   else
-    (*slotMap)[key] = sigc::bind(sigc::ptr_fun(&rpc::parse_command_d_single_std), rpc::convert_list_to_command(++args.begin(), args.end()));
+    (*slotMap)[key] = sigc::bind(sigc::ptr_fun(&rpc::parse_command_d_multiple_std), rpc::convert_list_to_command(++args.begin(), args.end()));
 
   return torrent::Object();
 }
 
 torrent::Object
 apply_stop_on_ratio(const torrent::Object& rawArgs) {
@@ -194,48 +194,65 @@
 
   control->command_scheduler()->parse(arg1, arg2, arg3, rpc::convert_list_to_command(itr, args.end()));
 
   return torrent::Object();
 }
 
-void apply_load(const std::string& arg)               { control->core()->try_create_download_expand(arg, false, false, true); }
-void apply_load_verbose(const std::string& arg)       { control->core()->try_create_download_expand(arg, false, true, true); }
-void apply_load_start(const std::string& arg)         { control->core()->try_create_download_expand(arg, true, false, true); }
-void apply_load_start_verbose(const std::string& arg) { control->core()->try_create_download_expand(arg, true, true, true); }
+torrent::Object
+apply_load(int flags, const torrent::Object& rawArgs) {
+  const torrent::Object::list_type&          args    = rawArgs.as_list();
+  torrent::Object::list_type::const_iterator argsItr = args.begin();
+
+  if (argsItr == args.end())
+    throw torrent::input_error("Too few arguments.");
+
+  const std::string& filename = argsItr->as_string();
+  core::Manager::command_list_type commands;
+
+  while (++argsItr != args.end())
+    commands.push_back(argsItr->as_string());
+
+  control->core()->try_create_download_expand(filename, flags, commands);
+
+  return torrent::Object();
+}
 
 void apply_import(const std::string& path)     { if (!rpc::parse_command_file(path)) throw torrent::input_error("Could not open option file: " + path); }
-void apply_try_import(const std::string& path) { if (!rpc::parse_command_file(path)) control->core()->push_log("Could not read resource file: " + path); }
+void apply_try_import(const std::string& path) { if (!rpc::parse_command_file(path)) control->core()->push_log_std("Could not read resource file: " + path); }
 
 void
 apply_close_low_diskspace(int64_t arg) {
-  core::Manager::DListItr itr = control->core()->download_list()->begin();
+  core::DownloadList* downloadList = control->core()->download_list();
+
+  core::Manager::DListItr itr = downloadList->begin();
 
-  while ((itr = std::find_if(itr, control->core()->download_list()->end(), std::mem_fun(&core::Download::is_downloading))) != control->core()->download_list()->end()) {
+  while ((itr = std::find_if(itr, downloadList->end(), std::mem_fun(&core::Download::is_downloading)))
+         != downloadList->end()) {
     if ((*itr)->file_list()->free_diskspace() < (uint64_t)arg) {
-      control->core()->download_list()->close(*itr);
+      downloadList->close(*itr);
 
       (*itr)->set_hash_failed(true);
       (*itr)->set_message(std::string("Low diskspace."));
     }
 
     ++itr;
   }
 }
 
 torrent::Object
 apply_download_list(const torrent::Object& rawArgs) {
-  const torrent::Object::list_type& args = rawArgs.as_list();
+  const torrent::Object::list_type&          args    = rawArgs.as_list();
   torrent::Object::list_type::const_iterator argsItr = args.begin();
 
   core::ViewManager* viewManager = control->view_manager();
   core::ViewManager::iterator viewItr;
 
-  if (argsItr != args.end() && !(argsItr++)->as_string().empty())
+  if (argsItr != args.end() && !argsItr->as_string().empty())
     viewItr = viewManager->find((argsItr++)->as_string());
   else
-    viewItr = viewManager->find("main");
+    viewItr = viewManager->find("default");
 
   if (viewItr == viewManager->end())
     throw torrent::input_error("Could not find view.");
 
   torrent::Object result(torrent::Object::TYPE_LIST);
   torrent::Object::list_type& resultList = result.as_list();
@@ -306,21 +323,21 @@
   ADD_COMMAND_SLOT_PRIVATE("start_tied",      call_string, rpc::object_fn(&apply_start_tied));
   ADD_COMMAND_SLOT_PRIVATE("stop_untied",     call_string, rpc::object_fn(&apply_stop_untied));
   ADD_COMMAND_SLOT_PRIVATE("close_untied",    call_string, rpc::object_fn(&apply_close_untied));
   ADD_COMMAND_SLOT_PRIVATE("remove_untied",   call_string, rpc::object_fn(&apply_remove_untied));
 
   ADD_COMMAND_LIST("schedule",                rak::ptr_fn(&apply_schedule));
-  ADD_COMMAND_STRING_UN("schedule_remove",    rak::make_mem_fun(control->command_scheduler(), &CommandScheduler::erase_str));
+  ADD_COMMAND_STRING_UN("schedule_remove",    rak::make_mem_fun(control->command_scheduler(), &rpc::CommandScheduler::erase_str));
 
-  ADD_COMMAND_STRING_UN("import",                std::ptr_fun(&apply_import));
-  ADD_COMMAND_STRING_UN("try_import",            std::ptr_fun(&apply_try_import));
+  ADD_COMMAND_STRING_UN("import",             std::ptr_fun(&apply_import));
+  ADD_COMMAND_STRING_UN("try_import",         std::ptr_fun(&apply_try_import));
 
-  ADD_COMMAND_STRING_UN("load",                  std::ptr_fun(&apply_load));
-  ADD_COMMAND_STRING_UN("load_verbose",          std::ptr_fun(&apply_load_verbose));
-  ADD_COMMAND_STRING_UN("load_start",            std::ptr_fun(&apply_load_start));
-  ADD_COMMAND_STRING_UN("load_start_verbose",    std::ptr_fun(&apply_load_start_verbose));
+  ADD_COMMAND_LIST("load",                    rak::bind_ptr_fn(&apply_load, core::Manager::create_quiet | core::Manager::create_tied));
+  ADD_COMMAND_LIST("load_verbose",            rak::bind_ptr_fn(&apply_load, core::Manager::create_tied));
+  ADD_COMMAND_LIST("load_start",              rak::bind_ptr_fn(&apply_load, core::Manager::create_quiet | core::Manager::create_tied | core::Manager::create_start));
+  ADD_COMMAND_LIST("load_start_verbose",      rak::bind_ptr_fn(&apply_load, core::Manager::create_tied | core::Manager::create_start));
 
-  ADD_COMMAND_VALUE_UN("close_low_diskspace",    std::ptr_fun(&apply_close_low_diskspace));
+  ADD_COMMAND_VALUE_UN("close_low_diskspace", std::ptr_fun(&apply_close_low_diskspace));
 
-  ADD_COMMAND_LIST("download_list",              rak::ptr_fn(&apply_download_list));
-  ADD_COMMAND_LIST("call_download",              rak::ptr_fn(&apply_call_download));
+  ADD_COMMAND_LIST("download_list",           rak::ptr_fn(&apply_download_list));
+//   ADD_COMMAND_LIST("call_download",           rak::ptr_fn(&apply_call_download));
 }
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src: command_file.cc
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_helpers.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_helpers.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_helpers.cc	2007-06-17 10:34:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_helpers.cc	2007-07-26 06:13:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -38,55 +38,71 @@
 
 #include <torrent/exceptions.h>
 
 #include "rpc/command_slot.h"
 #include "rpc/command_variable.h"
 #include "rpc/command_download_slot.h"
+#include "rpc/command_file_slot.h"
+#include "rpc/command_tracker_slot.h"
 
 #include "globals.h"
 #include "control.h"
 #include "command_helpers.h"
 
 rpc::CommandSlot          commandSlots[COMMAND_SLOTS_SIZE];
 rpc::CommandSlot*         commandSlotsItr = commandSlots;
 rpc::CommandVariable      commandVariables[COMMAND_VARIABLES_SIZE];
 rpc::CommandVariable*     commandVariablesItr = commandVariables;
 rpc::CommandDownloadSlot  commandDownloadSlots[COMMAND_DOWNLOAD_SLOTS_SIZE];
 rpc::CommandDownloadSlot* commandDownloadSlotsItr = commandDownloadSlots;
+rpc::CommandFileSlot      commandFileSlots[COMMAND_FILE_SLOTS_SIZE];
+rpc::CommandFileSlot*     commandFileSlotsItr = commandFileSlots;
+rpc::CommandTrackerSlot   commandTrackerSlots[COMMAND_TRACKER_SLOTS_SIZE];
+rpc::CommandTrackerSlot*  commandTrackerSlotsItr = commandTrackerSlots;
 
 void initialize_command_download();
 void initialize_command_events();
+void initialize_command_file();
 void initialize_command_local();
 void initialize_command_network();
+void initialize_command_tracker();
 void initialize_command_ui();
 
 void
 initialize_commands() {
   initialize_command_events();
   initialize_command_network();
   initialize_command_local();
   initialize_command_ui();
   initialize_command_download();
+  initialize_command_file();
+  initialize_command_tracker();
 
 #ifdef ADDING_COMMANDS 
   if (commandSlotsItr > commandSlots + COMMAND_SLOTS_SIZE ||
-      commandVariablesItr > commandVariables + COMMAND_VARIABLES_SIZE)
+      commandVariablesItr > commandVariables + COMMAND_VARIABLES_SIZE ||
+      commandDownloadSlotsItr > commandDownloadSlots + COMMAND_DOWNLOAD_SLOTS_SIZE ||
+      commandFileSlotsItr > commandFileSlots + COMMAND_FILE_SLOTS_SIZE ||
+      commandTrackerSlotsItr > commandTrackerSlots + COMMAND_TRACKER_SLOTS_SIZE)
 #else
   if (commandSlotsItr != commandSlots + COMMAND_SLOTS_SIZE ||
-      commandVariablesItr != commandVariables + COMMAND_VARIABLES_SIZE)
+      commandVariablesItr != commandVariables + COMMAND_VARIABLES_SIZE ||
+      commandDownloadSlotsItr != commandDownloadSlots + COMMAND_DOWNLOAD_SLOTS_SIZE ||
+      commandFileSlotsItr != commandFileSlots + COMMAND_FILE_SLOTS_SIZE ||
+      commandTrackerSlotsItr != commandTrackerSlots + COMMAND_TRACKER_SLOTS_SIZE)
 #endif
     throw torrent::internal_error("initialize_commands() static command array size mismatch.");
 }
 
 void
 add_variable(const char* getKey, const char* setKey, const char* defaultSetKey,
              rpc::CommandMap::generic_slot getSlot, rpc::CommandMap::generic_slot setSlot,
              const torrent::Object& defaultObject) {
   rpc::CommandVariable* variable = commandVariablesItr++;
   variable->set_variable(defaultObject);
 
-  rpc::commands.insert(getKey, variable, getSlot, NULL, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, "i:", "");
-  rpc::commands.insert(setKey, variable, setSlot, NULL, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, "i:", "");
+  rpc::commands.insert_generic(getKey, variable, getSlot, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, "i:", "");
+  rpc::commands.insert_generic(setKey, variable, setSlot, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, "i:", "");
 
   if (defaultSetKey)
-    rpc::commands.insert(defaultSetKey, variable, setSlot, NULL, rpc::CommandMap::flag_dont_delete, "i:", "");
+    rpc::commands.insert_generic(defaultSetKey, variable, setSlot, rpc::CommandMap::flag_dont_delete, "i:", "");
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_helpers.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_helpers.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_helpers.h	2007-06-17 10:40:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_helpers.h	2007-07-27 22:53:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -40,28 +40,36 @@
 #include "rpc/parse_commands.h"
 
 namespace rpc {
   class CommandSlot;
   class CommandVariable;
   class CommandDownloadSlot;
+  class CommandFileSlot;
+  class CommandTrackerSlot;
 }
 
 // By using a static array we avoid allocating the variables on the
 // heap. This should reduce memory use and improve cache locality.
 #define COMMAND_SLOTS_SIZE          100
 #define COMMAND_VARIABLES_SIZE      100
-#define COMMAND_DOWNLOAD_SLOTS_SIZE 50
+#define COMMAND_DOWNLOAD_SLOTS_SIZE 100
+#define COMMAND_FILE_SLOTS_SIZE     20
+#define COMMAND_TRACKER_SLOTS_SIZE  15
 
 #define ADDING_COMMANDS
 
 extern rpc::CommandSlot          commandSlots[COMMAND_SLOTS_SIZE];
 extern rpc::CommandSlot*         commandSlotsItr;
 extern rpc::CommandVariable      commandVariables[COMMAND_VARIABLES_SIZE];
 extern rpc::CommandVariable*     commandVariablesItr;
 extern rpc::CommandDownloadSlot  commandDownloadSlots[COMMAND_DOWNLOAD_SLOTS_SIZE];
 extern rpc::CommandDownloadSlot* commandDownloadSlotsItr;
+extern rpc::CommandFileSlot      commandFileSlots[COMMAND_FILE_SLOTS_SIZE];
+extern rpc::CommandFileSlot*     commandFileSlotsItr;
+extern rpc::CommandTrackerSlot   commandTrackerSlots[COMMAND_TRACKER_SLOTS_SIZE];
+extern rpc::CommandTrackerSlot*  commandTrackerSlotsItr;
 
 void initialize_commands();
 
 void
 add_variable(const char* getKey, const char* setKey, const char* defaultSetKey,
              rpc::CommandMap::generic_slot getSlot, rpc::CommandMap::generic_slot setSlot,
@@ -75,23 +83,23 @@
 
 #define ADD_VARIABLE_STRING(key, defaultValue) \
 add_variable("get_" key, "set_" key, key, &rpc::CommandVariable::get_string, &rpc::CommandVariable::set_string, std::string(defaultValue));
 
 #define ADD_COMMAND_SLOT(key, function, slot, parm, doc)    \
   commandSlotsItr->set_slot(slot); \
-  rpc::commands.insert(key, commandSlotsItr++, &rpc::CommandSlot::function, NULL, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, parm, doc);
+  rpc::commands.insert_generic(key, commandSlotsItr++, &rpc::CommandSlot::function, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, parm, doc);
 
 #define ADD_COMMAND_SLOT_PRIVATE(key, function, slot) \
   commandSlotsItr->set_slot(slot); \
-  rpc::commands.insert(key, commandSlotsItr++, &rpc::CommandSlot::function, NULL, rpc::CommandMap::flag_dont_delete, NULL, NULL);
+  rpc::commands.insert_generic(key, commandSlotsItr++, &rpc::CommandSlot::function, rpc::CommandMap::flag_dont_delete, NULL, NULL);
 
 #define ADD_COMMAND_COPY(key, function, parm, doc) \
-  rpc::commands.insert(key, (commandSlotsItr - 1), &rpc::CommandSlot::function, NULL, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, parm, doc);
+  rpc::commands.insert_generic(key, (commandSlotsItr - 1), &rpc::CommandSlot::function, rpc::CommandMap::flag_dont_delete | rpc::CommandMap::flag_public_xmlrpc, parm, doc);
 
 #define ADD_COMMAND_COPY_PRIVATE(key, function) \
-  rpc::commands.insert(key, (commandSlotsItr - 1), &rpc::CommandSlot::function, NULL, rpc::CommandMap::flag_dont_delete, NULL, NULL);
+  rpc::commands.insert_generic(key, (commandSlotsItr - 1), &rpc::CommandSlot::function, rpc::CommandMap::flag_dont_delete, NULL, NULL);
 
 #define ADD_COMMAND_VALUE_TRI(key, set, get) \
   ADD_COMMAND_SLOT_PRIVATE(key, call_value, rpc::object_value_fn(set))      \
   ADD_COMMAND_COPY("set_" key,  call_value, "i:i", "")                      \
   ADD_COMMAND_SLOT("get_" key,  call_unknown, rpc::object_void_fn(get), "i:", "")
 
@@ -125,7 +133,10 @@
 #define ADD_COMMAND_STRING_UN(key, slot) \
   ADD_COMMAND_SLOT(key, call_string, rpc::object_string_fn(slot), "i:s", "")
 
 #define ADD_COMMAND_LIST(key, slot) \
   ADD_COMMAND_SLOT(key, call_list, slot, "i:", "")
 
+#define ADD_COMMAND_NONE_L(key, slot) \
+  ADD_COMMAND_SLOT(key, call_unknown, slot, "A:", "")
+
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_local.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_local.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_local.cc	2007-06-17 10:42:43.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_local.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -78,7 +78,9 @@
 
   ADD_COMMAND_STRING_TRI("session",            rak::make_mem_fun(dStore, &core::DownloadStore::set_path), rak::make_mem_fun(dStore, &core::DownloadStore::path));
   ADD_COMMAND_VOID("session_save",             rak::make_mem_fun(dList, &core::DownloadList::session_save));
 
   ADD_COMMAND_VALUE_TRI_OCT("umask",           rak::make_mem_fun(control, &Control::set_umask), rak::make_mem_fun(control, &Control::umask));
   ADD_COMMAND_STRING_TRI("working_directory",  rak::make_mem_fun(control, &Control::set_working_directory), rak::make_mem_fun(control, &Control::working_directory));
+
+  ADD_COMMAND_LIST("execute", rak::mem_fn(&rpc::execFile, &rpc::ExecFile::execute_object));
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_network.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_network.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_network.cc	2007-06-19 23:21:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_network.cc	2007-07-28 21:07:09.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -44,15 +44,13 @@
 #include <torrent/tracker.h>
 #include <torrent/tracker_list.h>
 #include <torrent/torrent.h>
 
 #include "core/download.h"
 #include "core/manager.h"
-#include "rpc/fast_cgi.h"
 #include "rpc/scgi.h"
-#include "rpc/xmlrpc.h"
 #include "ui/root.h"
 #include "rpc/command_slot.h"
 #include "rpc/command_variable.h"
 #include "rpc/parse.h"
 #include "rpc/parse_commands.h"
 
@@ -81,13 +79,13 @@
       options_mask |= torrent::ConnectionManager::encryption_require_RC4;
     else if (opt == "enable_retry")
       options_mask |= torrent::ConnectionManager::encryption_enable_retry;
     else if (opt == "prefer_plaintext")
       options_mask |= torrent::ConnectionManager::encryption_prefer_plaintext;
     else
-      throw torrent::input_error("Invalid encryption option '" + opt + "'.");
+      throw torrent::input_error("Invalid encryption option.");
   }
 
   torrent::connection_manager()->set_encryption_options(options_mask);
 
   return torrent::Object();
 }
@@ -140,57 +132,69 @@
 
     if (arg && !rpc::call_command_value("get_use_udp_trackers"))
       (*itr)->enable_udp_trackers(false);
   }    
 }
 
+torrent::File*
+xmlrpc_find_file(core::Download* download, uint32_t index) {
+  if (index >= download->file_list()->size_files())
+    return NULL;
+
+  return (*download->file_list())[index];
+}
+
+// Ergh... time to update the Tracker API to allow proper ptrs.
+torrent::Tracker*
+xmlrpc_find_tracker(core::Download* download, uint32_t index) {
+  if (index >= download->tracker_list()->size())
+    return NULL;
+
+  // HACK ALERT!!!!
+  static torrent::Tracker hack;
+  hack = download->tracker_list()->get(index);
+
+  return &hack;
+}
+
 void
 initialize_xmlrpc() {
-  control->set_xmlrpc(new rpc::XmlRpc);
-  rpc::XmlRpc::set_slot_find_download(rak::mem_fn(control->core()->download_list(), &core::DownloadList::find_hex_ptr));
+  rpc::xmlrpc.initialize();
+  rpc::xmlrpc.set_slot_find_download(rak::mem_fn(control->core()->download_list(), &core::DownloadList::find_hex_ptr));
+  rpc::xmlrpc.set_slot_find_file(rak::ptr_fn(&xmlrpc_find_file));
+  rpc::xmlrpc.set_slot_find_tracker(rak::ptr_fn(&xmlrpc_find_tracker));
 
   unsigned int count = 0;
 
   for (rpc::CommandMap::const_iterator itr = rpc::commands.begin(), last = rpc::commands.end(); itr != last; itr++) {
     if (!(itr->second.m_flags & rpc::CommandMap::flag_public_xmlrpc))
       continue;
 
-    if (itr->second.m_genericSlot != NULL)
-      control->xmlrpc()->insert_command(itr->first, itr->second.m_parm, itr->second.m_doc, false);
-    else if (itr->second.m_downloadSlot != NULL)
-      control->xmlrpc()->insert_command(itr->first, itr->second.m_parm, itr->second.m_doc, true);
-    else
-      throw torrent::internal_error("XMLRPC: Bad entry.");
+    switch (itr->second.m_target) {
+    case rpc::CommandMap::target_generic:  rpc::xmlrpc.insert_command(itr->first, itr->second.m_parm, itr->second.m_doc, rpc::XmlRpc::call_generic); break;
+    case rpc::CommandMap::target_download: rpc::xmlrpc.insert_command(itr->first, itr->second.m_parm, itr->second.m_doc, rpc::XmlRpc::call_download); break;
+    case rpc::CommandMap::target_file:     rpc::xmlrpc.insert_command(itr->first, itr->second.m_parm, itr->second.m_doc, rpc::XmlRpc::call_file); break;
+    case rpc::CommandMap::target_tracker:  rpc::xmlrpc.insert_command(itr->first, itr->second.m_parm, itr->second.m_doc, rpc::XmlRpc::call_tracker); break;
+    default: throw torrent::internal_error("XMLRPC: Bad entry.");
+    }
 
     count++;
   }
 
   char buffer[128];
   sprintf(buffer, "XMLRPC initialized with %u functions.", count);
 
   control->core()->push_log(buffer);
 }
 
 void
-apply_fast_cgi(const std::string& arg) {
-  if (control->fast_cgi() != NULL)
-    throw torrent::input_error("FastCGI already enabled.");
-
-  if (control->xmlrpc() == NULL)
-    initialize_xmlrpc();
-
-  control->set_fast_cgi(new rpc::FastCgi(arg));
-  control->fast_cgi()->set_slot_process(rak::mem_fn(control->xmlrpc(), &rpc::XmlRpc::process));
-}
-
-void
 apply_scgi(const std::string& arg, int type) {
   if (control->scgi() != NULL)
     throw torrent::input_error("SCGI already enabled.");
 
-  if (control->xmlrpc() == NULL)
+  if (!rpc::xmlrpc.is_valid())
     initialize_xmlrpc();
 
   // Fix this...
   control->set_scgi(new rpc::SCgi);
 
   rak::address_info* ai = NULL;
@@ -237,18 +241,33 @@
   } catch (torrent::local_error& e) {
     rak::address_info::free_address_info(ai);
 
     throw torrent::input_error(e.what());
   }
 
-  control->scgi()->set_slot_process(rak::mem_fn(control->xmlrpc(), &rpc::XmlRpc::process));
+  control->scgi()->set_slot_process(rak::mem_fn(&rpc::xmlrpc, &rpc::XmlRpc::process));
+}
+
+void
+apply_xmlrpc_dialect(const std::string& arg) {
+  int value;
+
+  if (arg == "i8")
+    value = rpc::XmlRpc::dialect_i8;
+  else if (arg == "apache")
+    value = rpc::XmlRpc::dialect_apache;
+  else if (arg == "generic")
+    value = rpc::XmlRpc::dialect_generic;
+  else
+    value = -1;
+
+  rpc::xmlrpc.set_dialect(value);
 }
 
 void
 initialize_command_network() {
-//   core::DownloadList* downloadList = control->core()->download_list();
   torrent::ConnectionManager* cm = torrent::connection_manager();
   core::CurlStack* httpStack = control->core()->get_poll_manager()->get_http_stack();
 
   ADD_VARIABLE_BOOL("use_udp_trackers", true);
 
   ADD_VARIABLE_BOOL("port_open", true);
@@ -292,16 +311,16 @@
 
   ADD_COMMAND_VALUE_TRI("hash_max_tries",       std::ptr_fun(&torrent::set_hash_max_tries), rak::ptr_fun(&torrent::hash_max_tries));
   ADD_COMMAND_VALUE_TRI("max_open_files",       std::ptr_fun(&torrent::set_max_open_files), rak::ptr_fun(&torrent::max_open_files));
   ADD_COMMAND_VALUE_TRI("max_open_sockets",     rak::make_mem_fun(cm, &torrent::ConnectionManager::set_max_size), rak::make_mem_fun(cm, &torrent::ConnectionManager::max_size));
   ADD_COMMAND_VALUE_TRI("max_open_http",        rak::make_mem_fun(httpStack, &core::CurlStack::set_max_active), rak::make_mem_fun(httpStack, &core::CurlStack::max_active));
 
-  ADD_COMMAND_STRING_UN("fast_cgi",             std::ptr_fun(&apply_fast_cgi));
   ADD_COMMAND_STRING_UN("scgi_port",            rak::bind2nd(std::ptr_fun(&apply_scgi), 1));
   ADD_COMMAND_STRING_UN("scgi_local",           rak::bind2nd(std::ptr_fun(&apply_scgi), 2));
   ADD_VARIABLE_BOOL("scgi_dont_route", false);
+  ADD_COMMAND_STRING_UN("xmlrpc_dialect",       std::ptr_fun(&apply_xmlrpc_dialect));
 
   ADD_COMMAND_VALUE_TRI("hash_read_ahead",      std::ptr_fun(&apply_hash_read_ahead), rak::ptr_fun(torrent::hash_read_ahead));
   ADD_COMMAND_VALUE_TRI("hash_interval",        std::ptr_fun(&apply_hash_interval), rak::ptr_fun(torrent::hash_interval));
 
   ADD_COMMAND_VALUE_UN("enable_trackers",       std::ptr_fun(&apply_enable_trackers));
   ADD_COMMAND_STRING_UN("encoding_list",        std::ptr_fun(&apply_encoding_list));
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src: command_scheduler.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src: command_scheduler.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src: command_scheduler_item.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src: command_scheduler_item.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src: command_tracker.cc
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_ui.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_ui.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/command_ui.cc	2007-06-17 10:47:30.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/command_ui.cc	2007-07-26 03:31:07.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -94,23 +94,61 @@
 
   control->view_manager()->sort(name, value);
 
   return torrent::Object();
 }
 
+torrent::Object
+apply_view_list(const torrent::Object&) {
+  torrent::Object rawResult(torrent::Object::TYPE_LIST);
+  torrent::Object::list_type& result = rawResult.as_list();
+
+  for (core::ViewManager::const_iterator itr = control->view_manager()->begin(), last = control->view_manager()->end(); itr != last; itr++)
+    result.push_back((*itr)->name());
+
+  return rawResult;
+}
+
+torrent::Object
+apply_print(const torrent::Object& rawArgs) {
+  char buffer[1024];
+  char* current = buffer;
+
+  for (torrent::Object::list_type::const_iterator itr = rawArgs.as_list().begin(), last = rawArgs.as_list().end(); itr != last; itr++) {
+    switch (itr->type()) {
+    case torrent::Object::TYPE_STRING:
+    {
+      int len = std::min<int>(itr->as_string().size(), buffer + 1024 - current);
+
+      std::memcpy(current, itr->as_string().c_str(), len + 1);
+      current += len;
+      break;
+    }
+    case torrent::Object::TYPE_VALUE:
+    default:
+      current += snprintf(current, buffer + 1024 - current, "%lli", itr->as_value());
+      break;
+    }
+  }
+
+  control->core()->push_log(buffer);
+  return torrent::Object();
+}
+
 void
 initialize_command_ui() {
   ADD_VARIABLE_STRING("key_layout", "qwerty");
 
   ADD_COMMAND_STRING("view_add",        rpc::object_string_fn(rak::make_mem_fun(control->view_manager(), &core::ViewManager::insert_throw)));
+  ADD_COMMAND_NONE_L("view_list",       rak::ptr_fn(&apply_view_list));
 
   ADD_COMMAND_LIST("view_filter",       rak::bind_ptr_fn(&apply_view_filter, &core::ViewManager::set_filter));
   ADD_COMMAND_LIST("view_filter_on",    rak::bind_ptr_fn(&apply_view_filter, &core::ViewManager::set_filter_on));
 
   ADD_COMMAND_LIST("view_sort",         rak::ptr_fn(&apply_view_sort));
   ADD_COMMAND_LIST("view_sort_new",     rak::bind_ptr_fn(&apply_view_filter, &core::ViewManager::set_sort_new));
   ADD_COMMAND_LIST("view_sort_current", rak::bind_ptr_fn(&apply_view_filter, &core::ViewManager::set_sort_current));
 
 //   ADD_COMMAND_LIST("view_sort_current", rak::bind_ptr_fn(&apply_view_filter, &core::ViewManager::set_sort_current));
 
-  ADD_COMMAND_STRING("print",           rpc::object_string_fn(rak::make_mem_fun(control->core(), &core::Manager::push_log)));
+  ADD_COMMAND_LIST("print",             rak::ptr_fn(&apply_print));
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/control.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/control.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/control.cc	2007-06-17 11:01:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/control.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -47,49 +47,43 @@
 
 #include "display/canvas.h"
 #include "display/window.h"
 #include "display/manager.h"
 #include "input/manager.h"
 #include "input/input_event.h"
-#include "rpc/fast_cgi.h"
+#include "rpc/command_scheduler.h"
 #include "rpc/parse_commands.h"
 #include "rpc/scgi.h"
-#include "rpc/xmlrpc.h"
 #include "ui/root.h"
 
-#include "command_scheduler.h"
-
 #include "control.h"
 
 Control::Control() :
   m_shutdownReceived(false),
   m_shutdownQuick(false),
 
   m_ui(new ui::Root()),
   m_display(new display::Manager()),
   m_input(new input::Manager()),
   m_inputStdin(new input::InputEvent(STDIN_FILENO)),
 
-  m_commandScheduler(new CommandScheduler()),
+  m_commandScheduler(new rpc::CommandScheduler()),
 
-  m_fastCgi(NULL),
   m_scgi(NULL),
-  m_xmlrpc(NULL),
 
   m_tick(0) {
 
   m_core        = new core::Manager();
   m_viewManager = new core::ViewManager(m_core->download_list());
   m_scheduler   = new core::Scheduler(m_core->download_list());
 
   m_inputStdin->slot_pressed(sigc::mem_fun(m_input, &input::Manager::pressed));
 
   m_taskShutdown.set_slot(rak::mem_fn(this, &Control::handle_shutdown));
 
-  m_commandScheduler->set_slot_command(rak::ptr_fn(&rpc::parse_command_single_std));
-  m_commandScheduler->set_slot_error_message(rak::mem_fn(m_core, &core::Manager::push_log));
+  m_commandScheduler->set_slot_error_message(rak::mem_fn(m_core, &core::Manager::push_log_std));
 }
 
 Control::~Control() {
   delete m_inputStdin;
   delete m_input;
 
@@ -123,15 +117,14 @@
 
   m_inputStdin->insert(m_core->get_poll_manager()->get_torrent_poll());
 }
 
 void
 Control::cleanup() {
-  delete m_fastCgi; m_fastCgi = NULL;
   delete m_scgi;    m_scgi = NULL;
-  delete m_xmlrpc;  m_xmlrpc = NULL;
+  rpc::xmlrpc.cleanup();
 
   priority_queue_erase(&taskScheduler, &m_taskShutdown);
 
   m_inputStdin->remove(m_core->get_poll_manager()->get_torrent_poll());
 
   m_core->download_store()->disable();
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/control.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/control.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/control.h	2007-06-17 09:43:45.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/control.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -60,19 +60,18 @@
 namespace input {
   class InputEvent;
   class Manager;
 }  
 
 namespace rpc {
+  class CommandScheduler;
   class FastCgi;
   class SCgi;
   class XmlRpc;
 }
 
-class CommandScheduler;
-
 class Control {
 public:
   Control();
   ~Control();
   
   bool                is_shutdown_completed()       { return m_shutdownQuick && torrent::is_inactive(); }
@@ -95,23 +94,17 @@
 
   ui::Root*           ui()                          { return m_ui; }
   display::Manager*   display()                     { return m_display; }
   input::Manager*     input()                       { return m_input; }
   input::InputEvent*  input_stdin()                 { return m_inputStdin; }
 
-  CommandScheduler*   command_scheduler()           { return m_commandScheduler; }
-
-  rpc::FastCgi*       fast_cgi()                    { return m_fastCgi; }
-  void                set_fast_cgi(rpc::FastCgi* f) { m_fastCgi = f; }
+  rpc::CommandScheduler* command_scheduler()        { return m_commandScheduler; }
 
   rpc::SCgi*          scgi()                        { return m_scgi; }
   void                set_scgi(rpc::SCgi* f)        { m_scgi = f; }
 
-  rpc::XmlRpc*        xmlrpc()                      { return m_xmlrpc; }
-  void                set_xmlrpc(rpc::XmlRpc* f)    { m_xmlrpc = f; }
-
   uint64_t            tick() const                  { return m_tick; }
   void                inc_tick()                    { m_tick++; }
 
   mode_t              umask() const                 { return m_umask; }
   void                set_umask(mode_t m);
 
@@ -131,17 +124,15 @@
 
   ui::Root*           m_ui;
   display::Manager*   m_display;
   input::Manager*     m_input;
   input::InputEvent*  m_inputStdin;
 
-  CommandScheduler*   m_commandScheduler;
+  rpc::CommandScheduler* m_commandScheduler;
 
-  rpc::FastCgi*       m_fastCgi;
   rpc::SCgi*          m_scgi;
-  rpc::XmlRpc*        m_xmlrpc;
 
   uint64_t            m_tick;
 
   mode_t              m_umask;
   std::string         m_workingDirectory;
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_get.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_get.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_get.cc	2007-03-12 06:06:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_get.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_get.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_get.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_get.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_get.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_stack.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_stack.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_stack.cc	2007-05-22 22:57:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_stack.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_stack.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_stack.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/curl_stack.h	2007-05-22 22:57:22.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/curl_stack.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download.cc	2007-06-17 09:53:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -122,65 +122,12 @@
 
 void
 Download::receive_storage_error(std::string msg) {
   m_message = "Storage error: [" + msg + "]";
 }
 
-Download::download_type::ConnectionType
-Download::string_to_connection_type(const std::string& name) {
-  // Return default if the name isn't found.
-  if (name == "leech")
-    return download_type::CONNECTION_LEECH;
-  else if (name == "seed")
-    return download_type::CONNECTION_SEED;
-  else
-    throw torrent::input_error("Unknown peer connection type selected: \"" + name + "\"");
-}
-
-const char*
-Download::connection_type_to_string(download_type::ConnectionType t) {
-  switch (t) {
-  case download_type::CONNECTION_LEECH:
-    return "leech";
-  case download_type::CONNECTION_SEED:
-    return "seed";
-  default:
-    return "unknown";
-  }
-}
-
-uint32_t
-Download::string_to_priority(const std::string& name) {
-  if (name == "off")
-    return 0;
-  else if (name == "low")
-    return 1;
-  else if (name == "normal")
-    return 2;
-  else if (name == "high")
-    return 3;
-  else
-    throw torrent::input_error("Could not convert string to priority.");
-}
-
-const char*
-Download::priority_to_string(uint32_t p) {
-  switch (p) {
-  case 0:
-    return "off";
-  case 1:
-    return "low";
-  case 2:
-    return "normal";
-  case 3:
-    return "high";
-  default:
-    throw torrent::input_error("Priority out of range.");
-  }
-}
-
 float
 Download::distributed_copies() const {
   const uint8_t* avail = m_download.chunks_seen();
   const uint8_t* end = avail + m_download.file_list()->size_chunks();
 
   if (avail == NULL)
@@ -208,20 +155,20 @@
 // Clean up.
 void
 Download::set_root_directory(const std::string& path) {
   torrent::FileList* fileList = m_download.file_list();
 
   if (path.empty()) {
-    fileList->set_root_dir("./" + (fileList->size_files() > 1 ? m_download.name() : std::string()));
+    fileList->set_root_dir("./" + (fileList->is_multi_file() ? m_download.name() : std::string()));
 
   } else {
     std::string fullPath = rak::path_expand(path);
 
     fileList->set_root_dir(fullPath +
                            (*fullPath.rbegin() != '/' ? "/" : "") +
-                           (fileList->size_files() > 1 ? m_download.name() : ""));
+                           (fileList->is_multi_file() ? m_download.name() : std::string()));
   }
 
   bencode()->get_key("rtorrent").insert_key("directory", path);
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_factory.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_factory.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_factory.cc	2007-06-17 09:53:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_factory.cc	2007-07-25 02:48:48.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -227,12 +227,39 @@
     delete download;
 
     m_slotFinished();
     return;
   }
 
+  // Save the info-hash just in case the commands decide to delete it.
+  torrent::HashString infohash = download->download()->info_hash();
+
+  try {
+    std::for_each(m_commands.begin(), m_commands.end(), rak::bind1st(std::ptr_fun(&rpc::parse_command_d_multiple_std), download));
+
+    if (m_manager->download_list()->find(infohash) == m_manager->download_list()->end())
+      throw torrent::input_error("The newly created download was removed.");
+
+  } catch (torrent::input_error& e) {
+    std::string msg = "Command on torrent creation failed: " + std::string(e.what());
+
+    if (m_printLog) {
+      m_manager->get_log_important().push_front(msg);
+      m_manager->get_log_complete().push_front(msg);
+    }
+    
+    if (m_manager->download_list()->find(infohash) != m_manager->download_list()->end()) {
+      // Should stop it, mark it bad. Perhaps even delete it?
+      download->set_hash_failed(true);
+      download->set_message(msg);
+      //     m_manager->download_list()->erase(m_manager->download_list()->find(infohash.data()));
+    }
+
+    return m_slotFinished();
+  }
+
   // When a download scheduler is implemented, this is handled by the
   // above insertion into download list.
   if (m_session) {
     // This torrent was queued for hashing or hashing when the session
     // file was saved. Or it was in a started state.
     if (rpc::call_command_d_value("get_d_hashing", download) != Download::variable_hashing_stopped ||
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_factory.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_factory.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_factory.h	2007-05-12 05:32:48.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_factory.h	2007-07-21 06:31:29.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -52,23 +52,25 @@
 
 class Manager;
 
 class DownloadFactory {
 public:
   typedef sigc::slot<void> Slot;
+  typedef std::vector<std::string> command_list_type;
 
   // Do not destroy this object while it is in a HttpQueue.
   DownloadFactory(const std::string& uri, Manager* m);
   ~DownloadFactory();
 
   // Calling of receive_load() is delayed so you can change whatever
   // you want without fear of the slots being triggered as you call
   // load() or commit().
   void                load();
   void                commit();
 
+  command_list_type&         commands()     { return m_commands; }
   torrent::Object::map_type& variables()    { return m_variables; }
 
   bool                get_session() const   { return m_session; }
   void                set_session(bool v)   { m_session = v; }
 
   bool                get_start() const     { return m_start; }
@@ -96,12 +98,13 @@
 
   std::string         m_uri;
   bool                m_session;
   bool                m_start;
   bool                m_printLog;
 
+  command_list_type         m_commands;
   torrent::Object::map_type m_variables;
 
   Slot                m_slotFinished;
   rak::priority_item  m_taskLoad;
   rak::priority_item  m_taskCommit;
 };
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download.h	2007-06-17 04:49:04.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -101,23 +101,12 @@
   void                set_priority(uint32_t p);
 
   void                set_root_directory(const std::string& path);
 
   bool                operator == (const std::string& str) const;
 
-  void                set_connection_type(const std::string& t) { m_download.set_connection_type(string_to_connection_type(t)); }
-
-  static connection_type string_to_connection_type(const std::string& name);
-  static const char*     connection_type_to_string(connection_type t);
-
-  const char*         connection_current() const                    { return connection_type_to_string(m_download.connection_type()); }
-  void                set_connection_current(const std::string& t)  { return m_download.set_connection_type(string_to_connection_type(t.c_str())); }
-
-  static uint32_t     string_to_priority(const std::string& name);
-  static const char*  priority_to_string(uint32_t p);
-
   float               distributed_copies() const;
 
 private:
   Download(const Download&);
   void operator () (const Download&);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_list.cc	2007-06-19 22:46:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_list.cc	2007-07-25 02:33:05.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -90,12 +90,17 @@
 void
 DownloadList::session_save() {
   std::for_each(begin(), end(), std::bind1st(std::mem_fun(&DownloadStore::save), control->core()->download_store()));
 }
 
 DownloadList::iterator
+DownloadList::find(const torrent::HashString& hash) {
+  return std::find_if(begin(), end(), rak::equal(hash, rak::on(std::mem_fun(&Download::download), std::mem_fun(&torrent::Download::info_hash))));
+}
+
+DownloadList::iterator
 DownloadList::find_hex(const char* hash) {
   torrent::HashString key;
 
   for (torrent::HashString::iterator itr = key.begin(), last = key.end(); itr != last; itr++, hash += 2)
     *itr = (rak::hexchar_to_value(*hash) << 4) + rak::hexchar_to_value(*(hash + 1));
 
@@ -161,13 +166,13 @@
   }
 
   return itr;
 }
 
 void
-DownloadList::erase(Download* download) {
+DownloadList::erase_ptr(Download* download) {
   erase(std::find(begin(), end(), download));
 }
 
 DownloadList::iterator
 DownloadList::erase(iterator itr) {
   if (itr == end())
@@ -349,15 +354,15 @@
     // This will never actually do anything due to the above hash check.
     // open_throw(download);
 
     rpc::call_command_d("set_d_state_changed", download, cachedTime.seconds());
 
     if (download->is_done()) {
-      download->set_connection_type(rpc::call_command_d_string("get_d_connection_seed", download));
+      rpc::call_command_d("set_d_connection_current", download, rpc::call_command_d_void("get_d_connection_seed", download));
     } else {
-      download->set_connection_type(rpc::call_command_d_string("get_d_connection_leech", download));
+      rpc::call_command_d("set_d_connection_current", download, rpc::call_command_d_void("get_d_connection_leech", download));
 
       // For the moment, clear the resume data so we force hash-check
       // on non-complete downloads after a crash. This shouldn't be
       // needed, but for some reason linux 2.6 is very lazy about
       // updating mtime.
       torrent::resume_save_progress(*download->download(), download->download()->bencode()->get_key("libtorrent_resume"), true);
@@ -533,13 +538,13 @@
 void
 DownloadList::confirm_finished(Download* download) {
   check_contains(download);
 
   rpc::call_command_d("set_d_complete", download, (int64_t)1);
 
-  download->set_connection_type(rpc::call_command_d_string("get_d_connection_seed", download));
+  rpc::call_command_d("set_d_connection_current", download, rpc::call_command_d_void("get_d_connection_seed", download));
   download->set_priority(download->priority());
 
   if (rpc::call_command_d_value("get_d_min_peers", download) == rpc::call_command_value("get_min_peers") && rpc::call_command_value("get_min_peers_seed") >= 0)
     rpc::call_command_d("set_d_min_peers", download, rpc::call_command_void("get_min_peers_seed"));
 
   if (rpc::call_command_d_value("get_d_max_peers", download) == rpc::call_command_value("get_max_peers") && rpc::call_command_value("get_max_peers_seed") >= 0)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_list.h	2007-06-19 22:45:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_list.h	2007-07-25 02:32:21.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -40,12 +40,16 @@
 #include <iosfwd>
 #include <list>
 #include <map>
 #include <string>
 #include <sigc++/slot.h>
 
+namespace torrent {
+  class HashString;
+}
+
 namespace core {
 
 class Download;
 
 // Container for all downloads. Add slots to the slot maps to cause
 // some action to be taken when the torrent changes states. Don't
@@ -75,21 +79,23 @@
   DownloadList() { }
 
   void                clear();
 
   void                session_save();
 
+  iterator            find(const torrent::HashString& hash);
+
   iterator            find_hex(const char* hash);
   Download*           find_hex_ptr(const char* hash);
 
   // Might move this to DownloadFactory.
   Download*           create(std::istream* str, bool printLog);
 
   iterator            insert(Download* d);
 
-  void                erase(Download* d);
+  void                erase_ptr(Download* d);
   iterator            erase(iterator itr);
 
   //void                save(Download* d);
 
   bool                open(Download* d);
   void                open_throw(Download* d);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_slot_map.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_slot_map.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_slot_map.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_slot_map.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_store.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_store.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_store.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_store.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_store.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_store.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/download_store.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/download_store.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/http_queue.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/http_queue.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/http_queue.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/http_queue.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/http_queue.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/http_queue.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/http_queue.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/http_queue.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/log.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/log.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/log.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/log.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/log.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/log.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/log.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/log.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/manager.cc	2007-06-17 09:53:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/manager.cc	2007-07-21 07:02:27.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -162,26 +162,16 @@
   default:
     m_logComplete.push_front("Unknown handshake message for " + peer + download);
     break;
   }
 }
 
-// Hmm... find some better place for all this.
 void
-Manager::delete_tied(Download* download) {
-  const std::string& tie = rpc::call_command_d_string("get_d_tied_to_file", download);
-
-  // This should be configurable, need to wait for the variable
-  // thingie to be implemented.
-  if (tie.empty())
-    return;
-
-  if (::unlink(rak::path_expand(tie).c_str()) == -1)
-    push_log("Could not unlink tied file: " + std::string(rak::error_number::current().c_str()));
-
-  rpc::call_command_d("set_d_tied_to_file", download, std::string());
+Manager::push_log(const char* msg) {
+  m_logImportant.push_front(msg);
+  m_logComplete.push_front(msg);
 }
 
 Manager::Manager() :
   m_hashingView(NULL),
 
   m_pollManager(NULL) {
@@ -237,13 +227,13 @@
   // Register slots to be called when a download is inserted/erased,
   // opened or closed.
   m_downloadList->slot_map_insert()["1_connect_network_log"]  = sigc::bind(sigc::ptr_fun(&connect_signal_network_log), sigc::mem_fun(m_logComplete, &Log::push_front));
   m_downloadList->slot_map_insert()["1_connect_storage_log"]  = sigc::bind(sigc::ptr_fun(&connect_signal_storage_log), sigc::mem_fun(m_logComplete, &Log::push_front));
   m_downloadList->slot_map_insert()["1_connect_tracker_dump"] = sigc::bind(sigc::ptr_fun(&connect_signal_tracker_dump), sigc::ptr_fun(&receive_tracker_dump));
 
-  m_downloadList->slot_map_erase()["9_delete_tied"] = sigc::mem_fun(this, &Manager::delete_tied);
+  m_downloadList->slot_map_erase()["9_delete_tied"] = sigc::bind<0>(&rpc::call_command_d_v_void, "d_delete_tied");
 
   torrent::connection_manager()->set_signal_handshake_log(sigc::mem_fun(this, &Manager::handshake_log));
 }
 
 void
 Manager::cleanup() {
@@ -257,18 +247,12 @@
 
   delete m_pollManager;
 }
 
 void
 Manager::shutdown(bool force) {
-  // This doesn't trigger a compiler error on gcc-3.4.5 for some reason.
-//   if (!force)
-//     std::for_each(m_downloadList->begin(), m_downloadList->end(), std::bind1st(std::mem_fun(&DownloadList::pause), &m_downloadList));
-//   else
-//     std::for_each(m_downloadList->begin(), m_downloadList->end(), std::bind1st(std::mem_fun(&DownloadList::close), &m_downloadList));
-
   if (!force)
     std::for_each(m_downloadList->begin(), m_downloadList->end(), std::bind1st(std::mem_fun(&DownloadList::pause), m_downloadList));
   else
     std::for_each(m_downloadList->begin(), m_downloadList->end(), std::bind1st(std::mem_fun(&DownloadList::close_quick), m_downloadList));
 }
 
@@ -408,20 +392,21 @@
 Manager::receive_http_failed(std::string msg) {
   m_logImportant.push_front("Http download error: \"" + msg + "\"");
   m_logComplete.push_front("Http download error: \"" + msg + "\"");
 }
 
 void
-Manager::try_create_download(const std::string& uri, bool start, bool printLog, bool tied) {
+Manager::try_create_download(const std::string& uri, int flags, const command_list_type& commands) {
   // Adding download.
   DownloadFactory* f = new DownloadFactory(uri, this);
 
-  f->variables()["tied_to_file"] = (int64_t)tied;
+  f->variables()["tied_to_file"] = (int64_t)(bool)(flags & create_tied);
+  f->commands().insert(f->commands().end(), commands.begin(), commands.end());
 
-  f->set_start(start);
-  f->set_print_log(printLog);
+  f->set_start(flags & create_start);
+  f->set_print_log(!(flags & create_quiet));
   f->slot_finished(sigc::bind(sigc::ptr_fun(&rak::call_delete_func<core::DownloadFactory>), f));
   f->load();
   f->commit();
 }
 
 // Move this somewhere better.
@@ -476,32 +461,32 @@
 bool
 manager_equal_tied(const std::string& path, Download* download) {
   return path == rpc::call_command_d_string("get_d_tied_to_file", download);
 }
 
 void
-Manager::try_create_download_expand(const std::string& uri, bool start, bool printLog, bool tied) {
+Manager::try_create_download_expand(const std::string& uri, int flags, command_list_type commands) {
   std::vector<std::string> paths;
   paths.reserve(256);
 
   path_expand(&paths, uri);
 
-  if (tied)
+  if (flags & create_tied)
     for (std::vector<std::string>::iterator itr = paths.begin(); itr != paths.end(); )
       if (std::find_if(m_downloadList->begin(), m_downloadList->end(), rak::bind1st(std::ptr_fun(&manager_equal_tied), *itr))
           != m_downloadList->end())
         itr = paths.erase(itr);
       else
         itr++;
 
   if (!paths.empty())
     for (std::vector<std::string>::iterator itr = paths.begin(); itr != paths.end(); ++itr)
-      try_create_download(*itr, start, printLog, tied);
+      try_create_download(*itr, flags, commands);
 
   else
-    try_create_download(uri, start, printLog, tied);
+    try_create_download(uri, flags, commands);
 }
 
 // DownloadList's hashing related functions don't actually start the
 // hashing, it only reacts to events. This functions checks the
 // hashing view and starts hashing if nessesary.
 void
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/manager.h	2007-04-28 09:52:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/manager.h	2007-07-21 07:03:29.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -35,12 +35,13 @@
 //           3185 Skoppum, NORWAY
 
 #ifndef RTORRENT_CORE_MANAGER_H
 #define RTORRENT_CORE_MANAGER_H
 
 #include <iosfwd>
+#include <vector>
 
 #include "download_list.h"
 #include "poll_manager.h"
 #include "log.h"
 
 namespace torrent {
@@ -89,21 +91,26 @@
 
   std::string         proxy_address() const;
   void                set_proxy_address(const std::string& addr);
 
   void                shutdown(bool force);
 
-  void                push_log(const std::string& msg)    { m_logImportant.push_front(msg); m_logComplete.push_front(msg); }
+  void                push_log(const char* msg);
+  void                push_log_std(const std::string& msg) { m_logImportant.push_front(msg); m_logComplete.push_front(msg); }
 
   void                handshake_log(const sockaddr* sa, int msg, int err, const torrent::HashString* hash);
 
-  // Temporary, find a better place for this.
-  void                try_create_download(const std::string& uri, bool start, bool printLog = true, bool tied = false);
-  void                try_create_download_expand(const std::string& uri, bool start, bool printLog = true, bool tied = false);
+  static const int create_start = 0x1;
+  static const int create_tied  = 0x2;
+  static const int create_quiet = 0x4;
 
-  void                delete_tied(Download* d);
+  typedef std::vector<std::string> command_list_type;
+
+  // Temporary, find a better place for this.
+  void                try_create_download(const std::string& uri, int flags, const command_list_type& commands);
+  void                try_create_download_expand(const std::string& uri, int flags, command_list_type commands = command_list_type());
 
 private:
   void                create_http(const std::string& uri);
   void                create_final(std::istream* s);
 
   void                initialize_bencode(Download* d);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_epoll.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_epoll.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_epoll.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_epoll.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_epoll.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_epoll.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_epoll.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_epoll.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_kqueue.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_kqueue.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_kqueue.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_kqueue.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_kqueue.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_kqueue.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_kqueue.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_kqueue.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_select.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_select.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_select.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_select.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_select.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_select.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/poll_manager_select.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/poll_manager_select.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/scheduler.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/scheduler.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/scheduler.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/scheduler.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/scheduler.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/scheduler.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/scheduler.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/scheduler.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view_manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view_manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view_manager.cc	2007-06-17 09:53:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view_manager.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view_manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view_manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/core/view_manager.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/core/view_manager.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/attributes.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/attributes.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/attributes.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/attributes.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/canvas.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/canvas.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/canvas.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/canvas.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/canvas.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/canvas.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/canvas.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/canvas.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/frame.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/frame.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/frame.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/frame.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/frame.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/frame.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/frame.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/frame.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/manager.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/manager.cc	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/manager.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/manager.h	2007-07-20 05:23:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_helpers.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_helpers.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_helpers.h	2007-06-17 10:29:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_helpers.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -174,9 +174,15 @@
 template <typename Return, typename Object>
 inline TextElement*
 te_branch(Return (Object::*fptr)() const, const Object* object, TextElement* branch1, TextElement* branch2) {
   return text_element_branch_void(rak::make_mem_fun(object, fptr), branch1, branch2);
 }
 
+template <typename Return1, typename Return2, typename Object1, typename Object2>
+inline TextElement*
+te_branch(Return1 (Object1::*fptr1)() const, Return2 (Object2::*fptr2)() const, TextElement* branch1, TextElement* branch2) {
+  return text_element_branch(rak::on(std::mem_fun(fptr1), std::mem_fun(fptr2)), branch1, branch2);
+}
+
 } }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_lambda.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_lambda.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_lambda.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_lambda.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_string.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_string.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_string.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_string.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_string.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_string.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_string.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_string.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_value.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_value.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_value.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_value.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_value.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_value.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/text_element_value.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/text_element_value.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/utils.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/utils.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/utils.cc	2007-06-17 09:53:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/utils.cc	2007-07-26 00:51:20.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -156,19 +156,19 @@
     first = print_buffer(first, last, " ");
     first = print_download_time_left(first, last, d);
   } else {
     first = print_buffer(first, last, "                ");
   }
 
-  first = print_buffer(first, last, " [%c%c R: %3.2f",
+  first = print_buffer(first, last, " [%c%c R: %4.2f",
                        rpc::call_command_d_string("get_d_tied_to_file", d).empty() ? ' ' : 'T',
                        rpc::call_command_d_value("get_d_ignore_commands", d) == 0 ? ' ' : 'I',
-                       d->download()->bytes_done() > 0 ? (double)(100 * d->download()->up_rate()->total() / d->download()->bytes_done()) / 100 : 0.0);
+                       (double)rpc::call_command_d_value("get_d_ratio", d) / 1000.0);
 
   if (d->priority() != 2)
-    first = print_buffer(first, last, " %s]", core::Download::priority_to_string(d->priority()));
+    first = print_buffer(first, last, " %s]", rpc::call_command_d_string("get_d_priority_str", d).c_str());
   else
     first = print_buffer(first, last, "]");
 
   if (first > last)
     throw torrent::internal_error("print_download_info(...) wrote past end of the buffer.");
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/utils.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/utils.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/utils.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/utils.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_chunks_seen.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_chunks_seen.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_chunks_seen.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_chunks_seen.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_chunks_seen.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_chunks_seen.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_chunks_seen.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_chunks_seen.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_statusbar.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_statusbar.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_statusbar.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_statusbar.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_statusbar.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_statusbar.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_statusbar.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_statusbar.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_transfer_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_transfer_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_transfer_list.cc	2007-02-05 20:35:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_transfer_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_transfer_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_transfer_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_download_transfer_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_download_transfer_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_file_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_file_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_file_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_file_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -141,13 +141,13 @@
       case torrent::PRIORITY_OFF:    priority = "off"; break;
       case torrent::PRIORITY_NORMAL: priority = "   "; break;
       case torrent::PRIORITY_HIGH:   priority = "hig"; break;
       default: priority = "BUG"; break;
       };
 
-      m_canvas->print(0, pos, "%3d %s", done_percentage(e), priority);
+      m_canvas->print(0, pos, "%3d %s ", done_percentage(e), priority);
 
       int64_t val = e->size_bytes();
 
       if (val < (int64_t(1000) << 20))
         m_canvas->print(8, pos, "%5.1f M", (double)val / (int64_t(1) << 20));
       else if (val < (int64_t(1000) << 30))
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_file_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_file_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_file_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_file_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_http_queue.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_http_queue.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_http_queue.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_http_queue.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_http_queue.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_http_queue.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_http_queue.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_http_queue.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_input.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_input.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_input.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_input.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_input.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_input.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_input.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_input.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log_complete.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log_complete.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log_complete.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log_complete.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log_complete.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log_complete.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log_complete.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log_complete.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_log.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_log.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_peer_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_peer_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_peer_list.cc	2007-03-18 07:26:59.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_peer_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_peer_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_peer_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_peer_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_peer_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_statusbar.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_statusbar.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_statusbar.cc	2007-03-04 02:16:47.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_statusbar.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_statusbar.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_statusbar.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_statusbar.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_statusbar.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_string_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_string_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_string_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_string_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_string_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_string_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_string_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_string_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_text.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_text.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_text.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_text.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_text.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_text.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_text.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_text.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_title.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_title.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_title.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_title.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_title.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_title.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_title.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_title.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_tracker_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_tracker_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_tracker_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_tracker_list.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -33,15 +33,15 @@
 //
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
-#include <stdexcept>
 #include <rak/algorithm.h>
 #include <rak/string_manip.h>
+#include <torrent/exceptions.h>
 #include <torrent/tracker.h>
 #include <torrent/tracker_list.h>
 
 #include "core/download.h"
 
 #include "window_tracker_list.h"
@@ -63,38 +63,54 @@
   int pos = 0;
   torrent::TrackerList* tl = m_download->tracker_list();
 
   m_canvas->print(2, pos, "Trackers: [Key: %08x]", tl->key());
   ++pos;
 
-  if (tl->size() == 0)
+  if (tl->size() == 0 || *m_focus >= tl->size())
     return;
 
-  if (*m_focus >= tl->size())
-    throw std::logic_error("WindowTrackerList::redraw() called on an object with a bad focus value.");
-
   typedef std::pair<unsigned int, unsigned int> Range;
 
+  unsigned int group = 0;
   Range range = rak::advance_bidirectional<unsigned int>(0, *m_focus, tl->size(), (m_canvas->height() + 1) / 2);
 
   while (range.first != range.second) {
-    torrent::Tracker t = tl->get(range.first);
+    torrent::Tracker tracker = tl->get(range.first);
+
+//     m_canvas->print(0, pos, "[%c] [S/L %5i/%5i] %s",
+//                     tracker.is_enabled() ? (tracker.is_open() ? '*' : ' ') : '-',
+//                     tracker.scrape_complete(), tracker.scrape_incomplete(),
+//                     tracker.url().c_str());
+
+    if (tracker.group() == group)
+      m_canvas->print(0, pos, "%2i:", group++);
+
+    m_canvas->print(4, pos++, "%s",
+                    tracker.url().c_str());
 
-    m_canvas->print(0, pos++, "%c %s",
-                    range.first == *m_focus ? '*' : ' ',
-                    t.url().c_str());
-
-    m_canvas->print(0, pos++, "%c Group: %2i Id: %s Focus: %s Enabled: %s Open: %s S/L: %u/%u",
-                    range.first == *m_focus ? '*' : ' ',
-                    t.group(),
-                    rak::copy_escape_html(t.tracker_id()).c_str(),
+    m_canvas->print(4, pos++, "Id: %s Focus: %s Enabled: %s Open: %s S/L: %u/%u",
+                    rak::copy_escape_html(tracker.tracker_id()).c_str(),
                     range.first == tl->focus() ? "yes" : " no",
-                    t.is_enabled() ? "yes" : " no",
-                    t.is_open() ? "yes" : " no",
-                    t.scrape_complete(),
-                    t.scrape_incomplete());
+                    tracker.is_enabled() ? "yes" : " no",
+                    tracker.is_open() ? "yes" : " no",
+                    tracker.scrape_complete(),
+                    tracker.scrape_incomplete());
+
+//     m_canvas->print(4, pos++, "Id: %s Focus: %s Enabled: %s Open: %s Timer: %u/%u",
+//                     rak::copy_escape_html(tracker.tracker_id()).c_str(),
+//                     range.first == tl->focus() ? "yes" : " no",
+//                     tracker.is_enabled() ? "yes" : " no",
+//                     tracker.is_open() ? "yes" : " no",
+//                     tracker.normal_interval(),
+//                     tracker.min_interval());
+
+    if (range.first == *m_focus) {
+      m_canvas->set_attr(0, pos - 2, m_canvas->width(), is_focused() ? A_REVERSE : A_BOLD, COLOR_PAIR(0));
+      m_canvas->set_attr(0, pos - 1, m_canvas->width(), is_focused() ? A_REVERSE : A_BOLD, COLOR_PAIR(0));
+    }
 
-    ++range.first;
+    range.first++;
   }
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_tracker_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_tracker_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/display/window_tracker_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/display/window_tracker_list.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -34,20 +34,14 @@
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #ifndef RTORRENT_DISPLAY_TRACKER_LIST_H
 #define RTORRENT_DISPLAY_TRACKER_LIST_H
 
-#include <list>
-
 #include "window.h"
 
-namespace torrent {
-  class Tracker;
-}
-
 namespace core {
   class Download;
 }
 
 namespace display {
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/globals.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/globals.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/globals.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/globals.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent library
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/globals.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/globals.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/globals.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/globals.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent library
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/bindings.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/bindings.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/bindings.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/bindings.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/bindings.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/bindings.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/bindings.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/bindings.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/input_event.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/input_event.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/input_event.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/input_event.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/input_event.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/input_event.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/input_event.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/input_event.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/manager.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/manager.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/manager.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/manager.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/manager.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/manager.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/manager.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/manager.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/path_input.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/path_input.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/path_input.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/path_input.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/path_input.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/path_input.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/path_input.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/path_input.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/text_input.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/text_input.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/text_input.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/text_input.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/text_input.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/text_input.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/input/text_input.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/input/text_input.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/main.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/main.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/main.cc	2007-06-17 11:01:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/main.cc	2007-07-25 23:45:22.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -55,21 +55,21 @@
 #include "core/manager.h"
 #include "display/canvas.h"
 #include "display/window.h"
 #include "display/manager.h"
 #include "input/bindings.h"
 
+#include "rpc/command_scheduler.h"
+#include "rpc/command_scheduler_item.h"
 #include "rpc/parse_commands.h"
 #include "utils/directory.h"
 
 #include "control.h"
 #include "globals.h"
 #include "signal_handler.h"
 #include "option_parser.h"
-#include "command_scheduler.h"
-#include "command_scheduler_item.h"
 
 void do_panic(int signum);
 void print_help();
 void initialize_commands();
 
 int
@@ -165,12 +165,13 @@
     // torrent::ConnectionManager* are valid etc.
     initialize_commands();
 
     rpc::parse_command_multiple(
        // Currently not doing any sorting on main.
        "view_add = main\n"
+       "view_add = default\n"
 
        "view_add = name\n"
        "view_sort_new = name,name\n"
        "view_sort_current = name,name\n"
 
        "view_add = started\n"
@@ -266,13 +267,16 @@
     control->core()->download_list()->session_save();
 
     control->cleanup();
 
   } catch (std::exception& e) {
     display::Canvas::cleanup();
-    delete control;
+
+    // Safe to delete here? Seem to cause problems if cleanup hasn't
+    // been called.
+    //delete control;
 
     std::cout << "rtorrent: " << e.what() << std::endl;
     return -1;
   }
 
   delete control;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/Makefile.am	2007-05-19 04:04:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/Makefile.am	2007-07-26 04:46:17.000000000 +0800
@@ -16,21 +16,19 @@
 	$(top_srcdir)/src/rpc/libsub_rpc.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
 
 rtorrent_SOURCES = \
 	command_download.cc \
 	command_events.cc \
+	command_file.cc \
 	command_helpers.cc \
 	command_helpers.h \
 	command_local.cc \
 	command_network.cc \
+	command_tracker.cc \
 	command_ui.cc \
-	command_scheduler.cc \
-	command_scheduler.h \
-	command_scheduler_item.cc \
-	command_scheduler_item.h \
 	control.cc \
 	control.h \
 	globals.cc \
 	globals.h \
 	main.cc \
 	option_parser.cc \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/Makefile.in	2007-06-20 06:56:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/Makefile.in	2007-08-02 05:50:43.000000000 +0800
@@ -49,17 +49,17 @@
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 am__installdirs = "$(DESTDIR)$(bindir)"
 binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
 PROGRAMS = $(bin_PROGRAMS)
 am_rtorrent_OBJECTS = command_download.$(OBJEXT) \
-	command_events.$(OBJEXT) command_helpers.$(OBJEXT) \
-	command_local.$(OBJEXT) command_network.$(OBJEXT) \
-	command_ui.$(OBJEXT) command_scheduler.$(OBJEXT) \
-	command_scheduler_item.$(OBJEXT) control.$(OBJEXT) \
-	globals.$(OBJEXT) main.$(OBJEXT) option_parser.$(OBJEXT) \
+	command_events.$(OBJEXT) command_file.$(OBJEXT) \
+	command_helpers.$(OBJEXT) command_local.$(OBJEXT) \
+	command_network.$(OBJEXT) command_tracker.$(OBJEXT) \
+	command_ui.$(OBJEXT) control.$(OBJEXT) globals.$(OBJEXT) \
+	main.$(OBJEXT) option_parser.$(OBJEXT) \
 	signal_handler.$(OBJEXT)
 rtorrent_OBJECTS = $(am_rtorrent_OBJECTS)
 rtorrent_DEPENDENCIES = $(top_srcdir)/src/ui/libsub_ui.a \
 	$(top_srcdir)/src/core/libsub_core.a \
 	$(top_srcdir)/src/display/libsub_display.a \
 	$(top_srcdir)/src/input/libsub_input.a \
@@ -216,21 +216,19 @@
 	$(top_srcdir)/src/rpc/libsub_rpc.a \
 	$(top_srcdir)/src/utils/libsub_utils.a
 
 rtorrent_SOURCES = \
 	command_download.cc \
 	command_events.cc \
+	command_file.cc \
 	command_helpers.cc \
 	command_helpers.h \
 	command_local.cc \
 	command_network.cc \
+	command_tracker.cc \
 	command_ui.cc \
-	command_scheduler.cc \
-	command_scheduler.h \
-	command_scheduler_item.cc \
-	command_scheduler_item.h \
 	control.cc \
 	control.h \
 	globals.cc \
 	globals.h \
 	main.cc \
 	option_parser.cc \
@@ -308,17 +306,17 @@
 
 distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_download.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_events.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_file.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_helpers.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_local.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_network.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_scheduler.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_scheduler_item.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_tracker.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_ui.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/control.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/globals.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/option_parser.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal_handler.Po@am__quote@
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/option_parser.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/option_parser.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/option_parser.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/option_parser.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/option_parser.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/option_parser.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/option_parser.h	2007-03-06 04:22:32.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/option_parser.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_download_slot.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_download_slot.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_download_slot.cc	2007-06-17 10:10:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_download_slot.cc	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -103,20 +103,20 @@
   const torrent::Object& arg = convert_to_single_argument(rawArgs);
 
   switch (arg.type()) {
   case torrent::Object::TYPE_STRING:
     return command->m_slot(download, arg);
 
-  case torrent::Object::TYPE_NONE:
-    throw torrent::input_error("CDS: void.");
+//   case torrent::Object::TYPE_NONE:
+//     throw torrent::input_error("CDS: void.");
 
-  case torrent::Object::TYPE_VALUE:
-    throw torrent::input_error("CDS: value.");
+//   case torrent::Object::TYPE_VALUE:
+//     throw torrent::input_error("CDS: value.");
 
-  case torrent::Object::TYPE_LIST:
-    throw torrent::input_error("CDS: list.");
+//   case torrent::Object::TYPE_LIST:
+//     throw torrent::input_error("CDS: list.");
 
   default:
     throw torrent::input_error("Not a string.");
   }
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_download_slot.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_download_slot.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_download_slot.h	2007-06-17 10:05:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_download_slot.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_file_slot.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_file_slot.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command.h	2007-06-17 10:05:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command.h	2007-07-20 05:23:11.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_map.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_map.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_map.cc	2007-06-17 10:04:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_map.cc	2007-07-28 21:15:58.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -33,83 +33,103 @@
 //
 //           Skomakerveien 33
 //           3185 Skoppum, NORWAY
 
 #include "config.h"
 
-#include <algorithm>
-#include <cstdio>
-#include <cctype>
-#include <fstream>
-#include <rak/functional.h>
-#include <rak/path.h>
 #include <torrent/exceptions.h>
 #include <torrent/object.h>
 
 #include "command.h"
 #include "command_map.h"
 
 namespace rpc {
 
-struct command_map_get_ptr : std::unary_function<CommandMap::value_type&, Command*> {
-  Command* operator () (CommandMap::value_type& value) { return value.second.m_variable; }
-};
-
 CommandMap::~CommandMap() {
   for (iterator itr = base_type::begin(), last = base_type::end(); itr != last; itr++)
     if (!(itr->second.m_flags & flag_dont_delete))
       delete itr->second.m_variable;
 }
 
-void
-CommandMap::insert(key_type key, Command* variable, generic_slot genericSlot, download_slot downloadSlot, int flags,
-                    const char* parm, const char* doc) {
+CommandMap::iterator
+CommandMap::insert(key_type key, Command* variable, int flags, const char* parm, const char* doc) {
   iterator itr = base_type::find(key);
 
   if (itr != base_type::end())
     throw torrent::internal_error("CommandMap::insert(...) tried to insert an already existing key.");
 
-  base_type::insert(itr, value_type(key, command_map_data_type(variable, genericSlot, downloadSlot, flags, parm, doc)));
+  return base_type::insert(itr, value_type(key, command_map_data_type(variable, flags, parm, doc)));
+}
+
+void
+CommandMap::insert_generic(key_type key, Command* variable, generic_slot targetSlot, int flags, const char* parm, const char* doc) {
+  iterator itr = insert(key, variable, flags, parm, doc);
+
+  itr->second.m_target      = target_generic;
+  itr->second.m_genericSlot = targetSlot;
+}
+
+void
+CommandMap::insert_download(key_type key, Command* variable, download_slot targetSlot, int flags, const char* parm, const char* doc) {
+  iterator itr = insert(key, variable, flags, parm, doc);
+
+  itr->second.m_target       = target_download;
+  itr->second.m_downloadSlot = targetSlot;
+}
+
+void
+CommandMap::insert_file(key_type key, Command* variable, file_slot targetSlot, int flags, const char* parm, const char* doc) {
+  iterator itr = insert(key, variable, flags, parm, doc);
+
+  itr->second.m_target   = target_file;
+  itr->second.m_fileSlot = targetSlot;
+}
+
+void
+CommandMap::insert_tracker(key_type key, Command* variable, tracker_slot targetSlot, int flags, const char* parm, const char* doc) {
+  iterator itr = insert(key, variable, flags, parm, doc);
+
+  itr->second.m_target      = target_tracker;
+  itr->second.m_trackerSlot = targetSlot;
 }
 
 void
 CommandMap::insert(key_type key, const command_map_data_type src) {
   iterator itr = base_type::find(key);
 
   if (itr != base_type::end())
     throw torrent::internal_error("CommandMap::insert(...) tried to insert an already existing key.");
 
-  base_type::insert(itr, value_type(key, command_map_data_type(src.m_variable, src.m_genericSlot, src.m_downloadSlot,
-                                                                src.m_flags | flag_dont_delete, src.m_parm, src.m_doc)));
-}
-
-const CommandMap::mapped_type
-CommandMap::call_command(key_type key, const mapped_type& arg) {
-  const_iterator itr = base_type::find(key);
-
-  if (itr == base_type::end())
-    throw torrent::input_error("Command \"" + std::string(key) + "\" does not exist.");
+  itr = base_type::insert(itr, value_type(key, command_map_data_type(src.m_variable, src.m_flags | flag_dont_delete, src.m_parm, src.m_doc)));
 
-  if (itr->second.m_genericSlot == NULL)
-    throw torrent::input_error("Command does not have a generic slot.");
+  itr->second.m_target       = src.m_target;
 
-  return itr->second.m_genericSlot(itr->second.m_variable, arg);
+  switch (itr->second.m_target) {
+  case target_generic:  itr->second.m_genericSlot  = src.m_genericSlot; break;
+  case target_download: itr->second.m_downloadSlot = src.m_downloadSlot; break;
+  case target_file:     itr->second.m_fileSlot     = src.m_fileSlot; break;
+  case target_tracker:  itr->second.m_trackerSlot  = src.m_trackerSlot; break;
+  default: throw torrent::internal_error("CommandMap::insert(...) Invalid target.");
+  }
 }
 
 const CommandMap::mapped_type
-CommandMap::call_command_d(key_type key, core::Download* download, const mapped_type& arg) {
+CommandMap::call_command(key_type key, const mapped_type& arg, target_type target) {
   const_iterator itr = base_type::find(key);
 
   if (itr == base_type::end())
     throw torrent::input_error("Command \"" + std::string(key) + "\" does not exist.");
 
-  if (itr->second.m_downloadSlot == NULL) {
-    if (itr->second.m_genericSlot == NULL)
-      throw torrent::input_error("Command does not have a generic slot.");
-
-    return itr->second.m_genericSlot(itr->second.m_variable, arg);
+  if ((itr->second.m_target != target.first && itr->second.m_target != target_generic) ||
+      (itr->second.m_target != target_generic && target.second == NULL))
+    throw torrent::input_error("Command type mis-match.");
+
+  switch (itr->second.m_target) {
+  case target_generic:  return itr->second.m_genericSlot(itr->second.m_variable, arg);
+  case target_download: return itr->second.m_downloadSlot(itr->second.m_variable, (core::Download*)target.second, arg);
+  case target_file:     return itr->second.m_fileSlot(itr->second.m_variable, (torrent::File*)target.second, arg);
+  case target_tracker:  return itr->second.m_trackerSlot(itr->second.m_variable, (torrent::Tracker*)target.second, arg);
+  default: throw torrent::internal_error("CommandMap::call_command(...) Invalid target.");
   }
-
-  return itr->second.m_downloadSlot(itr->second.m_variable, download, arg);
 }
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_map.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_map.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_map.h	2007-06-17 10:05:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_map.h	2007-07-26 04:22:17.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -43,89 +43,102 @@
 #include <torrent/object.h>
 
 namespace core {
   class Download;
 }
 
+namespace torrent {
+  class File;
+  class Tracker;
+}
+
 namespace rpc {
 
 class Command;
 
 struct command_map_comp : public std::binary_function<const char*, const char*, bool> {
   bool operator () (const char* arg1, const char* arg2) const { return std::strcmp(arg1, arg2) < 0; }
 };
 
 struct command_map_data_type {
   // Some commands will need to share data, like get/set a variable. So
   // instead of using a single virtual member function, each command
   // will register a member function pointer to be used instead.
-  typedef const torrent::Object (*generic_slot)(Command*, const torrent::Object&);
+  typedef const torrent::Object (*generic_slot) (Command*, const torrent::Object&);
   typedef const torrent::Object (*download_slot)(Command*, core::Download*, const torrent::Object&);
+  typedef const torrent::Object (*file_slot)    (Command*, torrent::File*, const torrent::Object&);
+  typedef const torrent::Object (*tracker_slot) (Command*, torrent::Tracker*, const torrent::Object&);
 
-  command_map_data_type(Command* variable, generic_slot genericSlot, download_slot downloadSlot, int flags,
-                         const char* parm, const char* doc) :
-    m_variable(variable), m_genericSlot(genericSlot), m_downloadSlot(downloadSlot), m_flags(flags), m_parm(parm), m_doc(doc) {}
+  command_map_data_type(Command* variable, int flags, const char* parm, const char* doc) :
+    m_variable(variable), m_flags(flags), m_parm(parm), m_doc(doc) {}
 
   Command*      m_variable;
-  generic_slot  m_genericSlot;
-  download_slot m_downloadSlot;
+
+  union {
+    generic_slot  m_genericSlot;
+    download_slot m_downloadSlot;
+    file_slot     m_fileSlot;
+    tracker_slot  m_trackerSlot;
+  };
 
   int           m_flags;
+  int           m_target;
 
   const char*   m_parm;
   const char*   m_doc;
 };
 
 class CommandMap : public std::map<const char*, command_map_data_type, command_map_comp> {
 public:
   typedef std::map<const char*, command_map_data_type, command_map_comp> base_type;
 
   typedef command_map_data_type::generic_slot  generic_slot;
   typedef command_map_data_type::download_slot download_slot;
+  typedef command_map_data_type::file_slot     file_slot;
+  typedef command_map_data_type::tracker_slot  tracker_slot;
 
   typedef torrent::Object         mapped_type;
   typedef mapped_type::value_type mapped_value_type;
 
   using base_type::iterator;
   using base_type::key_type;
   using base_type::value_type;
 
   using base_type::begin;
   using base_type::end;
   using base_type::find;
 
+  typedef std::pair<int, void*> target_type;
+
+  static const int target_generic  = 0;
+  static const int target_download = 1;
+  static const int target_file     = 2;
+  static const int target_tracker  = 3;
+
   static const int flag_dont_delete   = 0x1;
   static const int flag_public_xmlrpc = 0x2;
 
   CommandMap() {}
   ~CommandMap();
 
   bool                has(const char* key) const        { return base_type::find(key) != base_type::end(); }
   bool                has(const std::string& key) const { return has(key.c_str()); }
 
-  void                insert(key_type key, Command* variable, generic_slot genericSlot, download_slot downloadSlot, int flags,
-                             const char* parm, const char* doc);
+  iterator            insert(key_type key, Command* variable, int flags, const char* parm, const char* doc);
+
+  void                insert_generic(key_type key, Command* variable, generic_slot targetSlot, int flags, const char* parm, const char* doc);
+  void                insert_download(key_type key, Command* variable, download_slot targetSlot, int flags, const char* parm, const char* doc);
+  void                insert_file(key_type key, Command* variable, file_slot targetSlot, int flags, const char* parm, const char* doc);
+  void                insert_tracker(key_type key, Command* variable, tracker_slot targetSlot, int flags, const char* parm, const char* doc);
 
   void                insert(key_type key, const command_map_data_type src);
 
-  const mapped_type   call_command(key_type key, const mapped_type& arg);
-//   const mapped_type   call_command_void(key_type key)   { return call_command(key, torrent::Object()); }
-//   const std::string   call_command_string(key_type key) { return call_command(key, torrent::Object()).as_string(); }
-//   mapped_value_type   call_command_value(key_type key)  { return call_command(key, torrent::Object()).as_value(); }
-
-//   void                call_command_set_string(key_type key, const std::string& arg)               { call_command(key, mapped_type(arg)); }
-//   void                call_command_set_std_string(const std::string& key, const std::string& arg) { call_command(key.c_str(), mapped_type(arg)); }
-
-  const mapped_type   call_command_d(key_type key, core::Download* download, const mapped_type& arg);
-//   const mapped_type   call_command_d_void(key_type key, core::Download* download)   { return call_command_d(key, download, torrent::Object()); }
-//   const std::string   call_command_d_string(key_type key, core::Download* download) { return call_command_d(key, download, torrent::Object()).as_string(); }
-//   mapped_value_type   call_command_d_value(key_type key, core::Download* download)  { return call_command_d(key, download, torrent::Object()).as_value(); }
-
-//   void                call_command_d_set_value(key_type key, core::Download* download, mapped_value_type arg)                 { call_command_d(key, download, mapped_type(arg)); }
-//   void                call_command_d_set_string(key_type key, core::Download* download, const std::string& arg)               { call_command_d(key, download, mapped_type(arg)); }
-//   void                call_command_d_set_std_string(const std::string& key, core::Download* download, const std::string& arg) { call_command_d(key.c_str(), download, mapped_type(arg)); }
+  const mapped_type   call_command(key_type key, const mapped_type& arg, target_type target = target_type((int)target_generic, NULL));
+  const mapped_type   call_command_d(key_type key, core::Download* download, const mapped_type& arg)  { return call_command(key, arg, target_type((int)target_download, download)); }
+  const mapped_type   call_command_f(key_type key, torrent::File* file, const mapped_type& arg)       { return call_command(key, arg, target_type((int)target_file, file)); }
+  const mapped_type   call_command_t(key_type key, torrent::Tracker* tracker, const mapped_type& arg) { return call_command(key, arg, target_type((int)target_tracker, tracker)); }
 
 private:
   CommandMap(const CommandMap&);
   void operator = (const CommandMap&);
 };
 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_scheduler.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_scheduler.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_scheduler_item.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_scheduler_item.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_slot.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_slot.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_slot.cc	2007-06-17 10:10:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_slot.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -111,14 +111,7 @@
 
   default:
     throw torrent::input_error("Not a string.");
   }
 }
 
-// const torrent::Object&
-// CommandSlot::get_generic(Command* rawCommand, const torrent::Object& args) {
-//   CommandVariable* variable = static_cast<CommandVariable*>(rawCommand);
-
-//   return variable->m_variable;
-// }
-
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_slot.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_slot.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_slot.h	2007-06-17 10:05:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_slot.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_tracker_slot.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: command_tracker_slot.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_variable.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_variable.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_variable.cc	2007-06-17 10:04:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_variable.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_variable.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_variable.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/command_variable.h	2007-06-17 10:05:16.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/command_variable.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: exec_file.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc: exec_file.h
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc: fast_cgi.cc
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc: fast_cgi.h
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/Makefile.am /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/Makefile.am
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/Makefile.am	2007-06-17 01:26:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/Makefile.am	2007-07-26 04:58:07.000000000 +0800
@@ -1,20 +1,28 @@
 noinst_LIBRARIES = libsub_rpc.a
 
 libsub_rpc_a_SOURCES = \
 	command.h \
+	command_download_slot.cc \
+	command_download_slot.h \
+	command_file_slot.cc \
+	command_file_slot.h \
+	command_tracker_slot.cc \
+	command_tracker_slot.h \
 	command_map.cc \
 	command_map.h \
+	command_scheduler.cc \
+	command_scheduler.h \
+	command_scheduler_item.cc \
+	command_scheduler_item.h \
 	command_slot.cc \
 	command_slot.h \
 	command_variable.cc \
 	command_variable.h \
-	command_download_slot.cc \
-	command_download_slot.h \
-	fast_cgi.cc \
-	fast_cgi.h \
+	exec_file.cc \
+	exec_file.h \
 	parse.cc \
 	parse.h \
 	parse_commands.cc \
 	parse_commands.h \
 	scgi.cc \
 	scgi.h \
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/Makefile.in	2007-06-20 06:56:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/Makefile.in	2007-08-02 05:50:44.000000000 +0800
@@ -48,16 +48,19 @@
 CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 LIBRARIES = $(noinst_LIBRARIES)
 ARFLAGS = cru
 libsub_rpc_a_AR = $(AR) $(ARFLAGS)
 libsub_rpc_a_LIBADD =
-am_libsub_rpc_a_OBJECTS = command_map.$(OBJEXT) command_slot.$(OBJEXT) \
-	command_variable.$(OBJEXT) command_download_slot.$(OBJEXT) \
-	fast_cgi.$(OBJEXT) parse.$(OBJEXT) parse_commands.$(OBJEXT) \
-	scgi.$(OBJEXT) scgi_task.$(OBJEXT) xmlrpc.$(OBJEXT)
+am_libsub_rpc_a_OBJECTS = command_download_slot.$(OBJEXT) \
+	command_file_slot.$(OBJEXT) command_tracker_slot.$(OBJEXT) \
+	command_map.$(OBJEXT) command_scheduler.$(OBJEXT) \
+	command_scheduler_item.$(OBJEXT) command_slot.$(OBJEXT) \
+	command_variable.$(OBJEXT) exec_file.$(OBJEXT) parse.$(OBJEXT) \
+	parse_commands.$(OBJEXT) scgi.$(OBJEXT) scgi_task.$(OBJEXT) \
+	xmlrpc.$(OBJEXT)
 libsub_rpc_a_OBJECTS = $(am_libsub_rpc_a_OBJECTS)
 DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/depcomp
 am__depfiles_maybe = depfiles
 CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
@@ -184,22 +187,30 @@
 sharedstatedir = @sharedstatedir@
 sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 noinst_LIBRARIES = libsub_rpc.a
 libsub_rpc_a_SOURCES = \
 	command.h \
+	command_download_slot.cc \
+	command_download_slot.h \
+	command_file_slot.cc \
+	command_file_slot.h \
+	command_tracker_slot.cc \
+	command_tracker_slot.h \
 	command_map.cc \
 	command_map.h \
+	command_scheduler.cc \
+	command_scheduler.h \
+	command_scheduler_item.cc \
+	command_scheduler_item.h \
 	command_slot.cc \
 	command_slot.h \
 	command_variable.cc \
 	command_variable.h \
-	command_download_slot.cc \
-	command_download_slot.h \
-	fast_cgi.cc \
-	fast_cgi.h \
+	exec_file.cc \
+	exec_file.h \
 	parse.cc \
 	parse.h \
 	parse_commands.cc \
 	parse_commands.h \
 	scgi.cc \
 	scgi.h \
@@ -254,16 +265,20 @@
 	-rm -f *.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_download_slot.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_file_slot.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_map.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_scheduler.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_scheduler_item.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_slot.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_tracker_slot.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_variable.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fast_cgi.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exec_file.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parse_commands.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scgi.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scgi_task.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlrpc.Po@am__quote@
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse.cc	2007-06-17 10:04:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -42,22 +42,21 @@
 #include "parse.h"
 
 namespace rpc {
 
 const char*
 parse_skip_wspace(const char* first, const char* last) {
-  while (first != last && std::isspace(*first))
+  while (first != last && parse_is_space(*first))
     first++;
 
   return first;
 }
 
 const char*
 parse_skip_wspace(const char* first) {
-  // Assume isspace('\0') == false.
-  while (std::isspace(*first))
+  while (parse_is_space(*first))
     first++;
 
   return first;
 }
 
 const char*
@@ -187,13 +186,13 @@
     first++;
   }
 
   return first;
 }
 
-void
+const char*
 parse_whole_list(const char* first, const char* last, torrent::Object* dest) {
   std::string str;
 
   first = parse_skip_wspace(first, last);
   first = parse_string(first, last, &str);
   first = parse_skip_wspace(first, last);
@@ -205,14 +204,13 @@
     first = parse_list(++first, last, dest);
 
   } else {
     *dest = str;
   }
 
-  if (first != last)
-    throw torrent::input_error("Junk at end of input.");
+  return first;
 }
 
 std::string
 convert_list_to_string(const torrent::Object& src) {
   if (!src.is_list())
     throw torrent::internal_error("convert_list_to_string(...) !src->is_list().");
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse_commands.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse_commands.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse_commands.cc	2007-06-17 11:00:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse_commands.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -46,132 +46,166 @@
 #include "parse.h"
 #include "parse_commands.h"
 
 namespace rpc {
 
 CommandMap commands;
+XmlRpc     xmlrpc;
+ExecFile   execFile;
 
 struct command_map_is_space : std::unary_function<char, bool> {
   bool operator () (char c) const {
-    return std::isspace(c);
+    return c == ' ' || c == '\t';
   }
 };
 
 struct command_map_is_newline : std::unary_function<char, bool> {
   bool operator () (char c) const {
-    return c == '\n' || c == '\0';
+    return c == '\n' || c == '\0' || c == ';';
   }
 };
 
-// Use a static length buffer for dest.
-const char*
-parse_command_name(const char* first, const char* last, std::string* dest) {
-  if (first == last || !std::isalpha(*first))
-    throw torrent::input_error("Invalid start of name.");
-
-  for ( ; first != last && (std::isalnum(*first) || *first == '_'); ++first)
-    dest->push_back(*first);
-
-  return first;
-}
-
-const char*
-parse_command_single(const char* first) {
-  return parse_command_single(first, first + std::strlen(first));
-}
-
-const char*
-parse_command_single(const char* first, const char* last) {
+// Only escape eol on odd number of escape characters. We know that
+// there can't be any characters in between, so this should work for
+// all cases.
+int
+parse_count_escaped(const char* first, const char* last) {
+  int escaped = 0;
+
+  while (last != first && *--last == '\\')
+    escaped++;
+
+  return escaped;
+}
+
+// Set 'download' to NULL to call the generic functions, thus reusing
+// the code below for both cases.
+std::pair<torrent::Object, const char*>
+parse_command(core::Download* download, const char* first, const char* last) {
   first = std::find_if(first, last, std::not1(command_map_is_space()));
 
   if (first == last || *first == '#')
-    return last;
+    return std::make_pair(torrent::Object(), first);
   
-  // Avoid using a string here?
   std::string key;
   first = parse_command_name(first, last, &key);
   first = std::find_if(first, last, std::not1(command_map_is_space()));
   
   if (first == last || *first != '=')
     throw torrent::input_error("Could not find '='.");
 
   torrent::Object args;
-  parse_whole_list(first + 1, last, &args);
-
-  commands.call_command(key.c_str(), args);
-
-  return last;
-}
+  first = parse_whole_list(first + 1, last, &args);
 
-const char*
-parse_command_d_single(core::Download* download, const char* first, const char* last) {
-  first = std::find_if(first, last, std::not1(command_map_is_space()));
-
-  if (first == last || *first == '#')
-    return last;
-  
-  std::string key;
-  first = parse_command_name(first, last, &key);
+  // Find the last character that is part of this command, skipping
+  // the whitespace at the end. This ensures us that the caller
+  // doesn't need to do this nor check for junk at the end.
   first = std::find_if(first, last, std::not1(command_map_is_space()));
   
-  if (first == last || *first != '=')
-    throw torrent::input_error("Could not find '='.");
+  if (first != last) {
+    if (*first != '\n' && *first != ';' && *first != '\0')
+      throw torrent::input_error("Junk at end of input.");
 
-  torrent::Object args;
-  parse_whole_list(first + 1, last, &args);
+    first++;
+  }
 
-  commands.call_command_d(key.c_str(), download, args);
+  // Replace any strings starting with '$' with the result of the
+  // following command.
+  if (args.is_list()) {
+    for (torrent::Object::list_type::iterator itr = args.as_list().begin(), last = args.as_list().end(); itr != last; itr++) {
+      if (!itr->is_string())
+        continue;
 
-  return last;
-}
+      const std::string& str = itr->as_string();
 
-void
-parse_command_multiple(const char* first) {
-  try {
-    while (first != '\0') {
-      const char* last = first;
+      if (*str.c_str() == '$')
+        *itr = parse_command_d_single(download, str.c_str() + 1, str.c_str() + str.size());
+    }
 
-      while (*last != '\n' && *last != '\0') last++;
+  } else if (*args.as_string().c_str() == '$') {
+    const std::string& str = args.as_string();
 
-      // Should we check the return value? Probably not necessary as
-      // parse_args throws on unquoted multi-word input.
-      parse_command_single(first, last);
+    args = parse_command_d_single(download, str.c_str() + 1, str.c_str() + str.size());
+  }
 
-      if (*last == '\0')
-        return;
+  return std::make_pair(commands.call_command_d(key.c_str(), download, args), first);
+}
 
-      first = last + 1;
-    }
+void
+parse_command_single(const char* first) {
+  parse_command(NULL, first, first + std::strlen(first));
+}
 
-  } catch (torrent::input_error& e) {
-    throw torrent::input_error(std::string("Error parsing multi-line option: ") + e.what());
+void
+parse_command_multiple(core::Download* download, const char* first, const char* last) {
+  while (first != last) {
+    // Should we check the return value? Probably not necessary as
+    // parse_args throws on unquoted multi-word input.
+    std::pair<torrent::Object, const char*> result = parse_command(download, first, last);
+
+    first = result.second;
   }
 }
 
+void
+parse_command_d_multiple(core::Download* download, const char* first) {
+  parse_command_multiple(download, first, first + std::strlen(first));
+}
+
 bool
 parse_command_file(const std::string& path) {
   std::fstream file(rak::path_expand(path).c_str(), std::ios::in);
 
   if (!file.is_open())
     return false;
 
-  int lineNumber = 0;
-  char buffer[2048];
+  unsigned int lineNumber = 0;
+  char buffer[4096];
 
   try {
+    unsigned int getCount = 0;
+
+    while (file.getline(buffer + getCount, 4096 - getCount).good()) {
+      if (file.gcount() == 0)
+        throw torrent::internal_error("parse_command_file(...) file.gcount() == 0.");
+
+      int escaped = parse_count_escaped(buffer + getCount, buffer + getCount + file.gcount() - 1);
 
-    while (file.getline(buffer, 2048).good()) {
       lineNumber++;
+      getCount += file.gcount() - 1;
+
+      if (getCount == 4096 - 1)
+        throw torrent::input_error("Exceeded max line lenght.");
+      
+      if (escaped & 0x1) {
+        // Remove the escape characters and continue reading.
+        getCount -= escaped;
+        continue;
+      }
+
       // Would be nice to make this zero-copy.
-      parse_command_single(buffer, buffer + std::strlen(buffer));
+      parse_command(NULL, buffer, buffer + getCount);
+      getCount = 0;
     }
 
   } catch (torrent::input_error& e) {
-    snprintf(buffer, 2048, "Error in option file: %s:%i: %s", path.c_str(), lineNumber, e.what());
+    snprintf(buffer, 2048, "Error in option file: %s:%u: %s", path.c_str(), lineNumber, e.what());
 
     throw torrent::input_error(buffer);
   }
 
   return true;
 }
 
+// Use a static length buffer for dest.
+const char*
+parse_command_name(const char* first, const char* last, std::string* dest) {
+  if (first == last || !std::isalpha(*first))
+    throw torrent::input_error("Invalid start of name.");
+
+  for ( ; first != last && (std::isalnum(*first) || *first == '_'); ++first)
+    dest->push_back(*first);
+
+  return first;
+}
+
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse_commands.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse_commands.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse_commands.h	2007-06-19 06:36:29.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse_commands.h	2007-07-26 04:39:18.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -37,43 +37,57 @@
 #ifndef RTORRENT_RPC_PARSE_COMMANDS_H
 #define RTORRENT_RPC_PARSE_COMMANDS_H
 
 #include <string>
 
 #include "command_map.h"
+#include "exec_file.h"
+#include "xmlrpc.h"
 
 namespace core {
   class Download;
 }
 
 namespace rpc {
 
-// class CommandMap;
+// Move to another file?
+extern CommandMap commands;
+extern XmlRpc     xmlrpc;
+extern ExecFile   execFile;
+
+// The generic parse command function, used by the rest. At some point
+// the 'download' parameter should be replaced by a more generic one.
+std::pair<torrent::Object, const char*> parse_command(core::Download* download, const char* first, const char* last);
 
-const char* parse_command_name(const char* first, const char* last, std::string* dest);
+void                   parse_command_single(const char* first);
+inline torrent::Object parse_command_single(const char* first, const char* last)                             { return parse_command(NULL, first, last).first; }
+inline torrent::Object parse_command_d_single(core::Download* download, const char* first, const char* last) { return parse_command(download, first, last).first; }
 
-const char* parse_command_single(const char* first);
-const char* parse_command_single(const char* first, const char* last);
+void                   parse_command_multiple(core::Download* download, const char* first, const char* last);
 
-const char* parse_command_d_single(core::Download* download, const char* first, const char* last);
+void                   parse_command_d_multiple(core::Download* download, const char* first);
+inline void            parse_command_d_multiple_std(core::Download* download, const std::string& cmd) { parse_command_multiple(download, cmd.c_str(), cmd.c_str() + cmd.size()); }
+inline void            parse_command_multiple(const char* first)                                      { parse_command_d_multiple(NULL, first); }
 
-void        parse_command_multiple(const char* first);
-bool        parse_command_file(const std::string& path);
+bool                   parse_command_file(const std::string& path);
+const char*            parse_command_name(const char* first, const char* last, std::string* dest);
 
 inline void
 parse_command_single_std(const std::string& cmd) {
   parse_command_single(cmd.c_str(), cmd.c_str() + cmd.size());
 }
 
 inline void
 parse_command_d_single_std(core::Download* download, const std::string& cmd) {
   parse_command_d_single(download, cmd.c_str(), cmd.c_str() + cmd.size());
 }
 
-// Move to anoher file?
-extern CommandMap commands;
+inline void
+parse_command_multiple_std(const std::string& cmd) {
+  parse_command_multiple(NULL, cmd.c_str(), cmd.c_str() + cmd.size());
+}
 
 inline torrent::Object call_command(const char* key, const torrent::Object& obj) { return commands.call_command(key, obj); }
 inline torrent::Object call_command_void(const char* key)   { return commands.call_command(key, torrent::Object()); }
 inline std::string     call_command_string(const char* key) { return commands.call_command(key, torrent::Object()).as_string(); }
 inline int64_t         call_command_value(const char* key)  { return commands.call_command(key, torrent::Object()).as_value(); }
 
@@ -82,16 +96,21 @@
 
 inline torrent::Object call_command_d(const char* key, core::Download* download, const torrent::Object& obj) { return commands.call_command_d(key, download, obj); }
 inline torrent::Object call_command_d_void(const char* key, core::Download* download)   { return commands.call_command_d(key, download, torrent::Object()); }
 inline std::string     call_command_d_string(const char* key, core::Download* download) { return commands.call_command_d(key, download, torrent::Object()).as_string(); }
 inline int64_t         call_command_d_value(const char* key, core::Download* download)  { return commands.call_command_d(key, download, torrent::Object()).as_value(); }
 
+inline void            call_command_d_v_void(const char* key, core::Download* download) { commands.call_command_d(key, download, torrent::Object()); }
+
 inline void            call_command_d_set_value(const char* key, core::Download* download, int64_t arg)                        { commands.call_command_d(key, download, torrent::Object(arg)); }
 inline void            call_command_d_set_string(const char* key, core::Download* download, const std::string& arg)            { commands.call_command_d(key, download, torrent::Object(arg)); }
 inline void            call_command_d_set_std_string(const std::string& key, core::Download* download, const std::string& arg) { commands.call_command_d(key.c_str(), download, torrent::Object(arg)); }
 
+inline torrent::Object call_command_f(const char* key, torrent::File* file, const torrent::Object& obj)       { return commands.call_command_f(key, file, obj); }
+inline torrent::Object call_command_t(const char* key, torrent::Tracker* tracker, const torrent::Object& obj) { return commands.call_command_t(key, tracker, obj); }
+
 inline torrent::Object
 call_command_d_range(const char* key, core::Download* download, torrent::Object::list_type::const_iterator first, torrent::Object::list_type::const_iterator last) {
   torrent::Object rawArgs(torrent::Object::TYPE_LIST);
   torrent::Object::list_type& args = rawArgs.as_list();
   
   while (first != last)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/parse.h	2007-06-17 10:04:12.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/parse.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -46,15 +46,16 @@
 // asked for. If a whitespace is found, it will be treated as empty
 // input rather than skipped.
 //
 // parse_whole_* functions allow for whitespaces and throw an
 // exception if there is any garbage at the end of the input.
 
-inline bool parse_is_quote(const char c) { return c == '"'; }
-inline bool parse_is_escape(const char c) { return c == '\\'; }
+inline bool parse_is_quote(const char c)     { return c == '"'; }
+inline bool parse_is_escape(const char c)    { return c == '\\'; }
 inline bool parse_is_seperator(const char c) { return c == ','; }
+inline bool parse_is_space(const char c)     { return c == ' ' || c == '\t'; }
 
 const char* parse_skip_wspace(const char* first);
 const char* parse_skip_wspace(const char* first, const char* last);
 
 const char* parse_string(const char* first, const char* last, std::string* dest);
 void        parse_whole_string(const char* first, const char* last, std::string* dest);
@@ -63,13 +64,13 @@
 const char* parse_value_nothrow(const char* src, int64_t* value, int base = 0, int unit = 1);
 
 void        parse_whole_value(const char* src, int64_t* value, int base = 0, int unit = 1);
 bool        parse_whole_value_nothrow(const char* src, int64_t* value, int base = 0, int unit = 1);
 
 const char* parse_list(const char* first, const char* last, torrent::Object* dest);
-void        parse_whole_list(const char* first, const char* last, torrent::Object* dest);
+const char* parse_whole_list(const char* first, const char* last, torrent::Object* dest);
 
 std::string convert_list_to_string(const torrent::Object& src);
 std::string convert_list_to_string(torrent::Object::list_type::const_iterator first, torrent::Object::list_type::const_iterator last);
 std::string convert_list_to_command(torrent::Object::list_type::const_iterator first, torrent::Object::list_type::const_iterator last);
 
 int64_t     convert_to_value(const torrent::Object& src, int base = 0, int unit = 1);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi.cc	2007-05-24 05:36:20.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi.h	2007-06-17 10:10:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi_task.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi_task.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi_task.cc	2007-05-23 22:29:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi_task.cc	2007-07-20 19:16:10.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -178,13 +178,13 @@
   if (length + 256 > m_bufferSize) {
     delete [] m_buffer;
     m_buffer = new char[length + 256];
   }
 
   // Who ever bothers to check the return value?
-  int headerSize = sprintf(m_buffer, "Status: 200 OK\r\nContent-Type: text/plain\r\nContent-Length: %i\r\n\r\n", length);
+  int headerSize = sprintf(m_buffer, "Status: 200 OK\r\nContent-Type: text/xml\r\nContent-Length: %i\r\n\r\n", length);
 
   m_position = m_buffer;
   m_bufferSize = length + headerSize;
   
   std::memcpy(m_buffer + headerSize, buffer, length);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi_task.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi_task.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/scgi_task.h	2007-05-21 01:06:18.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/scgi_task.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/xmlrpc.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/xmlrpc.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/xmlrpc.cc	2007-06-20 06:50:01.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/xmlrpc.cc	2007-07-27 20:42:42.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -46,25 +46,31 @@
 
 #include "xmlrpc.h"
 #include "parse_commands.h"
 
 namespace rpc {
 
-XmlRpc::slot_find_download XmlRpc::m_slotFindDownload;
-
 #ifdef HAVE_XMLRPC_C
 
 torrent::Object
 xmlrpc_to_object(xmlrpc_env* env, xmlrpc_value* value) {
   switch (xmlrpc_value_type(value)) {
   case XMLRPC_TYPE_INT:
     int v;
     xmlrpc_read_int(env, value, &v);
       
     return torrent::Object((int64_t)v);
 
+#ifdef XMLRPC_HAVE_I8
+  case XMLRPC_TYPE_I8:
+    long long v2;
+    xmlrpc_read_i8(env, value, &v2);
+      
+    return torrent::Object((int64_t)v2);
+#endif
+
     //     case XMLRPC_TYPE_BOOL:
     //     case XMLRPC_TYPE_DOUBLE:
     //     case XMLRPC_TYPE_DATETIME:
 
   case XMLRPC_TYPE_STRING:
   {
@@ -116,137 +122,244 @@
     xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Unsupported type found.");
     return torrent::Object();
   }
 }
 
 core::Download*
-XmlRpc::xmlrpc_to_download(xmlrpc_env* env, xmlrpc_value* value) {
+xmlrpc_to_download(xmlrpc_env* env, xmlrpc_value* value) {
   core::Download* download = NULL;
 
   switch (xmlrpc_value_type(value)) {
   case XMLRPC_TYPE_STRING:
-    const char* valueString;
-    xmlrpc_read_string(env, value, &valueString);
+  {
+    const char* str;
+    xmlrpc_read_string(env, value, &str);
 
     if (env->fault_occurred)
       return NULL;
 
-    if (std::strlen(valueString) != 40 ||
-        (download = m_slotFindDownload(valueString)) == NULL)
+    if (std::strlen(str) != 40 ||
+        (download = xmlrpc.get_slot_find_download()(str)) == NULL)
       xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Could not find info-hash.");
 
     // Urgh, seriously?
-    ::free((void*)valueString);
+    ::free((void*)str);
     return download;
+  }
+
+  default:
+    xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Unsupported type found.");
+    return NULL;
+  }
+}
+
+void*
+xmlrpc_to_index_type(xmlrpc_env* env, xmlrpc_value* value, int callType, core::Download* download) {
+  int index;
+
+  switch (xmlrpc_value_type(value)) {
+  case XMLRPC_TYPE_INT:
+    xmlrpc_read_int(env, value, &index);
+    break;
+
+#ifdef XMLRPC_HAVE_I8
+  case XMLRPC_TYPE_I8:
+    long long v2;
+    xmlrpc_read_i8(env, value, &v2);
+      
+    index = v2;
+    break;
+#endif
+
+  case XMLRPC_TYPE_STRING:
+  {
+    const char* str;
+    xmlrpc_read_string(env, value, &str);
+
+    if (env->fault_occurred)
+      return NULL;
+
+    const char* end = str;
+    index = ::strtol(str, (char**)&end, 0);
+
+    ::free((void*)str);
+
+    if (*str == '\0' || *end != '\0') {
+      xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Invalid index.");
+      return NULL;
+    }
+
+    break;
+  }
 
   default:
     xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Unsupported type found.");
     return NULL;
   }
+
+  if (env->fault_occurred)
+    return NULL;
+    
+  void* result;
+
+  switch (callType) {
+  case XmlRpc::call_file:    result = xmlrpc.get_slot_find_file()(download, index); break;
+  case XmlRpc::call_tracker: result = xmlrpc.get_slot_find_tracker()(download, index); break;
+  default: result = NULL; break;
+  }
+
+  if (result == NULL)
+    xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Invalid index.");
+      
+  return result;
 }
 
 // This should really be cleaned up and support for an array of
 // downloads should be added.
 torrent::Object
-XmlRpc::xmlrpc_to_object_d(xmlrpc_env* env, xmlrpc_value* value, core::Download** download) {
+xmlrpc_to_object_target(xmlrpc_env* env, xmlrpc_value* value, int callType, void** target) {
   switch (xmlrpc_value_type(value)) {
   case XMLRPC_TYPE_STRING:
-    *download = xmlrpc_to_download(env, value);
-    return torrent::Object();
+    if (callType != XmlRpc::call_download) {
+      xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Unsupported type found.");
+      break;
+    }
+
+    *target = xmlrpc_to_download(env, value);
+    break;
 
   case XMLRPC_TYPE_ARRAY:
   {
+    unsigned int current = 0;
     unsigned int last = xmlrpc_array_size(env, value);
 
-    if (env->fault_occurred || last < 1)
-      return torrent::Object();
+    if (env->fault_occurred)
+      break;
 
-    // Need to decref.
-    xmlrpc_value* tmpDownload;
-    xmlrpc_array_read_item(env, value, 0, &tmpDownload);
+    if (last < 1) {
+      xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Too few arguments.");
+      break;
+    }
 
-    if (env->fault_occurred)
-      return torrent::Object();
+    {
+      xmlrpc_value* tmp;
+      xmlrpc_array_read_item(env, value, current++, &tmp);
 
-    *download = xmlrpc_to_download(env, tmpDownload);
-    xmlrpc_DECREF(tmpDownload);
+      if (env->fault_occurred)
+        break;
 
-    if (env->fault_occurred)
-      return torrent::Object();
+      *target = xmlrpc_to_download(env, tmp);
+      xmlrpc_DECREF(tmp);
+
+      if (env->fault_occurred)
+        break;
+    }
+
+    if (callType == XmlRpc::call_file || callType == XmlRpc::call_tracker) {
+      if (current == last) {
+        xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Too few arguments.");
+        break;
+      }
+
+      xmlrpc_value* tmp;
+      xmlrpc_array_read_item(env, value, current++, &tmp);
+
+      if (env->fault_occurred)
+        break;
+
+      *target = xmlrpc_to_index_type(env, tmp, callType, (core::Download*)*target);
+      xmlrpc_DECREF(tmp);
+
+      if (env->fault_occurred)
+        break;
+    }
 
     torrent::Object result;
 
-    if (last > 2) {
+    if (current + 1 > last) {
       result = torrent::Object(torrent::Object::TYPE_LIST);
       torrent::Object::list_type& listRef = result.as_list();
 
-      // Move this into a helper function.
-      for (unsigned int i = 1; i != last; i++) {
-        // Need to decref.
+      // Move this into a helper function?
+      while (current != last) {
         xmlrpc_value* tmp;
-        xmlrpc_array_read_item(env, value, i, &tmp);
+        xmlrpc_array_read_item(env, value, current++, &tmp);
 
         if (env->fault_occurred)
-          return torrent::Object();
+          break;
 
         listRef.push_back(xmlrpc_to_object(env, tmp));
         xmlrpc_DECREF(tmp);
       }
 
       return result;
 
-    } else if (last == 2) {
+    } else if (current + 1 == last) {
       // Need to decref.
       xmlrpc_value* tmp;
-      xmlrpc_array_read_item(env, value, 1, &tmp);
+      xmlrpc_array_read_item(env, value, current, &tmp);
 
       if (env->fault_occurred)
-        return torrent::Object();
+        break;
 
       result = xmlrpc_to_object(env, tmp);
       xmlrpc_DECREF(tmp);
     }
 
     return result;
   }
 
   default:
     xmlrpc_env_set_fault(env, XMLRPC_TYPE_ERROR, "Unsupported type found.");
-    return torrent::Object();
   }
+
+  return torrent::Object();
 }
 
 xmlrpc_value*
 object_to_xmlrpc(xmlrpc_env* env, const torrent::Object& object) {
-  xmlrpc_value* result;
-  xmlrpc_int32  tmpInt;
-
   switch (object.type()) {
   case torrent::Object::TYPE_VALUE:
-    tmpInt = object.as_value();
-    return xmlrpc_build_value(env, "i", tmpInt);
+
+#ifdef XMLRPC_HAVE_I8
+    if (xmlrpc.dialect() != XmlRpc::dialect_generic)
+      return xmlrpc_i8_new(env, object.as_value());
+#else
+    return xmlrpc_int_new(env, object.as_value());
+#endif
 
   case torrent::Object::TYPE_STRING:
     return xmlrpc_string_new(env, object.as_string().c_str());
 
   case torrent::Object::TYPE_LIST:
-    result = xmlrpc_array_new(env);
-
+  {
+    xmlrpc_value* result = xmlrpc_array_new(env);
+    
     for (torrent::Object::list_type::const_iterator itr = object.as_list().begin(), last = object.as_list().end(); itr != last; itr++)
       xmlrpc_array_append_item(env, result, object_to_xmlrpc(env, *itr));
 
     return result;
+  }
+
+  case torrent::Object::TYPE_MAP:
+  {
+    xmlrpc_value* result = xmlrpc_struct_new(env);
+    
+    for (torrent::Object::map_type::const_iterator itr = object.as_map().begin(), last = object.as_map().end(); itr != last; itr++)
+      xmlrpc_struct_set_value(env, result, itr->first.c_str(), object_to_xmlrpc(env, itr->second));
+
+    return result;
+  }
 
   default:
-    tmpInt = 0;
-    return xmlrpc_build_value(env, "i", tmpInt);
+    return xmlrpc_int_new(env, 0);
   }
 }
 
 xmlrpc_value*
-XmlRpc::call_command(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) {
+xmlrpc_call_command(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) {
   torrent::Object object = xmlrpc_to_object(env, args);
 
   if (env->fault_occurred)
     return NULL;
 
   try {
@@ -256,15 +369,15 @@
     xmlrpc_env_set_fault(env, XMLRPC_PARSE_ERROR, e.what());
     return NULL;
   }
 }
 
 xmlrpc_value*
-XmlRpc::call_command_d(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) {
-  core::Download* download;
-  torrent::Object object = xmlrpc_to_object_d(env, args, &download);
+xmlrpc_call_command_d(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) {
+  core::Download* download = NULL;
+  torrent::Object object = xmlrpc_to_object_target(env, args, XmlRpc::call_download, (void**)&download);
 
   if (env->fault_occurred)
     return NULL;
 
   try {
     return object_to_xmlrpc(env, rpc::call_command_d((const char*)voidServerInfo, download, object));
@@ -272,62 +385,149 @@
   } catch (torrent::local_error& e) {
     xmlrpc_env_set_fault(env, XMLRPC_PARSE_ERROR, e.what());
     return NULL;
   }
 }
 
-XmlRpc::XmlRpc() : m_env(new xmlrpc_env) {
-  xmlrpc_env_init(m_env);
-  m_registry = xmlrpc_registry_new(m_env);
+xmlrpc_value*
+xmlrpc_call_command_f(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) {
+  torrent::File*  file = NULL;
+  torrent::Object object = xmlrpc_to_object_target(env, args, XmlRpc::call_file, (void**)&file);
+
+  if (env->fault_occurred)
+    return NULL;
+
+  try {
+    return object_to_xmlrpc(env, rpc::call_command_f((const char*)voidServerInfo, file, object));
+
+  } catch (torrent::local_error& e) {
+    xmlrpc_env_set_fault(env, XMLRPC_PARSE_ERROR, e.what());
+    return NULL;
+  }
 }
 
-XmlRpc::~XmlRpc() {
-  xmlrpc_registry_free(m_registry);
-  xmlrpc_env_clean(m_env);
-  delete m_env;
+xmlrpc_value*
+xmlrpc_call_command_t(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) {
+  torrent::Tracker* tracker = NULL;
+  torrent::Object   object = xmlrpc_to_object_target(env, args, XmlRpc::call_tracker, (void**)&tracker);
+
+  if (env->fault_occurred)
+    return NULL;
+
+  try {
+    return object_to_xmlrpc(env, rpc::call_command_t((const char*)voidServerInfo, tracker, object));
+
+  } catch (torrent::local_error& e) {
+    xmlrpc_env_set_fault(env, XMLRPC_PARSE_ERROR, e.what());
+    return NULL;
+  }
+}
+
+void
+XmlRpc::initialize() {
+#ifndef XMLRPC_HAVE_I8
+  m_dialect = dialect_generic;
+#endif
+  
+  m_env = new xmlrpc_env;
+
+  xmlrpc_env_init((xmlrpc_env*)m_env);
+  m_registry = xmlrpc_registry_new((xmlrpc_env*)m_env);
+}
+
+void
+XmlRpc::cleanup() {
+  if (!is_valid())
+    return;
+
+  xmlrpc_registry_free((xmlrpc_registry*)m_registry);
+  xmlrpc_env_clean((xmlrpc_env*)m_env);
+  delete (xmlrpc_env*)m_env;
 }
 
 bool
 XmlRpc::process(const char* inBuffer, uint32_t length, slot_write slotWrite) {
   xmlrpc_env localEnv;
   xmlrpc_env_init(&localEnv);
 
-  xmlrpc_mem_block* memblock = xmlrpc_registry_process_call(&localEnv, m_registry, NULL, inBuffer, length);
+  xmlrpc_mem_block* memblock = xmlrpc_registry_process_call(&localEnv, (xmlrpc_registry*)m_registry, NULL, inBuffer, length);
 
   bool result = slotWrite((const char*)xmlrpc_mem_block_contents(memblock),
                           xmlrpc_mem_block_size(memblock));
 
   xmlrpc_mem_block_free(memblock);
   xmlrpc_env_clean(&localEnv);
   return result;
 }
 
 void
-XmlRpc::insert_command(const char* name, const char* parm, const char* doc, bool onDownload) {
+XmlRpc::insert_command(const char* name, const char* parm, const char* doc, int call) {
   xmlrpc_env localEnv;
   xmlrpc_env_init(&localEnv);
 
-  xmlrpc_registry_add_method_w_doc(&localEnv, m_registry, NULL, name,
-                                   onDownload ? &XmlRpc::call_command_d : &XmlRpc::call_command,
-                                   const_cast<char*>(name), parm, doc);
+  xmlrpc_value* (*callSlot)(xmlrpc_env*, xmlrpc_value*, void*);
+
+  switch (call) {
+  case call_download: callSlot = &xmlrpc_call_command_d; break;
+  case call_file:     callSlot = &xmlrpc_call_command_f; break;
+  case call_tracker:  callSlot = &xmlrpc_call_command_t; break;
+  default:            callSlot = &xmlrpc_call_command; break;
+  }
+
+  xmlrpc_registry_add_method_w_doc(&localEnv, (xmlrpc_registry*)m_registry, NULL, name,
+                                   callSlot, const_cast<char*>(name), parm, doc);
 
   if (localEnv.fault_occurred)
     throw torrent::internal_error("Fault occured while inserting xmlrpc call.");
 
   xmlrpc_env_clean(&localEnv);
 }
 
-#else
+void
+XmlRpc::set_dialect(int dialect) {
+  if (!is_valid())
+    throw torrent::input_error("Cannot select XMLRPC dialect before it is initialized.");
+
+  xmlrpc_env localEnv;
+  xmlrpc_env_init(&localEnv);
+
+  switch (dialect) {
+  case dialect_generic:
+    break;
+
+#ifdef XMLRPC_HAVE_I8
+  case dialect_i8:
+    xmlrpc_registry_set_dialect(&localEnv, (xmlrpc_registry*)m_registry, xmlrpc_dialect_i8);
+    break;
+
+  case dialect_apache:
+    xmlrpc_registry_set_dialect(&localEnv, (xmlrpc_registry*)m_registry, xmlrpc_dialect_apache);
+    break;
+#endif
+
+  default:
+    xmlrpc_env_clean(&localEnv);
+    throw torrent::input_error("Unsupported XMLRPC dialect selected.");
+  }
+
+  if (localEnv.fault_occurred) {
+    xmlrpc_env_clean(&localEnv);
+    throw torrent::input_error("Unsupported XMLRPC dialect selected.");
+  }
 
-XmlRpc::XmlRpc() { throw torrent::resource_error("XMLRPC not supported."); }
-XmlRpc::~XmlRpc() {}
+  xmlrpc_env_clean(&localEnv);
+  m_dialect = dialect;
+}
+
+#else
 
-void XmlRpc::insert_command(const char* name, const char* parm, const char* doc, bool onDownload) {}
+void XmlRpc::initialize() { throw torrent::resource_error("XMLRPC not supported."); }
+void XmlRpc::cleanup() {}
 
-bool XmlRpc::process(const char* inBuffer, uint32_t length, slot_write slotWrite) { return false; }
+void XmlRpc::insert_command(__UNUSED const char* name, __UNUSED const char* parm, __UNUSED const char* doc, __UNUSED int call) {}
+void XmlRpc::set_dialect(__UNUSED int dialect) {}
 
-xmlrpc_value* XmlRpc::call_command(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) { return NULL; }
-xmlrpc_value* call_command_d(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo) { return NULL; }
+bool XmlRpc::process(__UNUSED const char* inBuffer, __UNUSED uint32_t length, __UNUSED slot_write slotWrite) { return false; }
 
 #endif
 
 }
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/xmlrpc.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/xmlrpc.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/rpc/xmlrpc.h	2007-06-19 23:48:46.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/rpc/xmlrpc.h	2007-07-26 06:39:16.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -36,50 +36,71 @@
 
 #ifndef RTORRENT_RPC_XMLRPC_H
 #define RTORRENT_RPC_XMLRPC_H
 
 #include <rak/functional_fun.h>
 
-typedef struct _xmlrpc_env xmlrpc_env;
-typedef struct _xmlrpc_value xmlrpc_value;
-typedef struct _xmlrpc_registry xmlrpc_registry;
-
 namespace core {
   class Download;
 }
 
 namespace torrent {
+  class File;
   class Object;
+  class Tracker;
 }
 
 namespace rpc {
 
 class XmlRpc {
 public:
-  typedef rak::function1<core::Download*, const char*> slot_find_download;
-  typedef rak::function2<bool, const char*, uint32_t>  slot_write;
+  typedef rak::function1<core::Download*, const char*>                 slot_find_download;
+  typedef rak::function2<torrent::File*, core::Download*, uint32_t>    slot_find_file;
+  typedef rak::function2<torrent::Tracker*, core::Download*, uint32_t> slot_find_tracker;
+  typedef rak::function2<bool, const char*, uint32_t>                  slot_write;
+
+  static const int dialect_generic = 0;
+  static const int dialect_i8      = 1;
+  static const int dialect_apache  = 2;
+
+  static const int call_generic    = 0;
+  static const int call_download   = 1;
+  static const int call_file       = 2;
+  static const int call_tracker    = 3;
+
+  XmlRpc() : m_env(NULL), m_registry(NULL), m_dialect(dialect_i8) {}
+
+  bool                is_valid() const { return m_env != NULL; }
 
-  XmlRpc();
-  ~XmlRpc();
+  void                initialize();
+  void                cleanup();
 
   bool                process(const char* inBuffer, uint32_t length, slot_write slotWrite);
 
-  void                insert_command(const char* name, const char* parm, const char* doc, bool onDownload);
+  void                insert_command(const char* name, const char* parm, const char* doc, int call);
+
+  int                 dialect() { return m_dialect; }
+  void                set_dialect(int dialect);
+
+  slot_find_download& get_slot_find_download()                                    { return m_slotFindDownload; }
+  void                set_slot_find_download(slot_find_download::base_type* slot) { m_slotFindDownload.set(slot); }
 
-  static void         set_slot_find_download(slot_find_download::base_type* slot) { m_slotFindDownload.set(slot); }
+  slot_find_file&     get_slot_find_file()                                        { return m_slotFindFile; }
+  void                set_slot_find_file(slot_find_file::base_type* slot)         { m_slotFindFile.set(slot); }
 
-  static xmlrpc_value* call_command(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo);
-  static xmlrpc_value* call_command_d(xmlrpc_env* env, xmlrpc_value* args, void* voidServerInfo);
+  slot_find_tracker&  get_slot_find_tracker()                                     { return m_slotFindTracker; }
+  void                set_slot_find_tracker(slot_find_tracker::base_type* slot)   { m_slotFindTracker.set(slot); }
 
 private:
-  static core::Download* xmlrpc_to_download(xmlrpc_env* env, xmlrpc_value* value);
-  static torrent::Object xmlrpc_to_object_d(xmlrpc_env* env, xmlrpc_value* value, core::Download** download);
+  void*               m_env;
+  void*               m_registry;
 
-  xmlrpc_env*         m_env;
-  xmlrpc_registry*    m_registry;
+  int                 m_dialect;
 
-  static slot_find_download m_slotFindDownload;
+  slot_find_download  m_slotFindDownload;
+  slot_find_file      m_slotFindFile;
+  slot_find_tracker   m_slotFindTracker;
 };
 
 }
 
 #endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/signal_handler.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/signal_handler.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/signal_handler.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/signal_handler.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/signal_handler.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/signal_handler.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/signal_handler.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/signal_handler.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download.cc	2007-06-17 11:09:33.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -152,12 +152,15 @@
   element->push_column("Info hash:",        te_string(&torrent::Download::info_hash, string_base::flag_escape_hex));
   element->push_column("Created:",          te_value(&torrent::Download::creation_date, value_base::flag_date), " ", te_value(&torrent::Download::creation_date, value_base::flag_time));
 
   element->push_back("");
   element->push_column("Directory:",        te_string(&torrent::FileList::root_dir));
   element->push_column("Tied to file:",     te_variable_string("get_d_tied_to_file"));
+  element->push_column("File stats:",
+                       te_branch(&core::Download::c_file_list, &torrent::FileList::is_multi_file, te_string("multi"), te_string("single")),
+                       " ", te_value(&torrent::FileList::size_files), " files");
 
   element->push_back("");
   element->push_column("Chunks:",           te_value(&torrent::FileList::completed_chunks), " / ", te_value(&torrent::FileList::size_chunks), " * ", te_value(&torrent::FileList::chunk_size));
   element->push_column("Priority:",         te_variable_value("get_d_priority"));
 
   element->push_column("State changed:",    te_variable_value("get_d_state_changed", value_base::flag_timer | value_base::flag_elapsed));
@@ -166,12 +169,13 @@
   element->push_column("Memory usage:",     te_value(&torrent::ChunkManager::memory_usage, value_base::flag_mb), " MB");
   element->push_column("Max memory usage:", te_value(&torrent::ChunkManager::max_memory_usage, value_base::flag_mb), " MB");
   element->push_column("Free diskspace:",   te_value(&torrent::FileList::free_diskspace, value_base::flag_mb), " MB");
   element->push_column("Safe diskspace:",   te_value(&torrent::ChunkManager::safe_free_diskspace, value_base::flag_mb), " MB");
 
   element->push_back("");
+  element->push_column("Connection type:",  te_variable_string("get_d_connection_current"));
   element->push_column("Safe sync:",        te_branch(&torrent::ChunkManager::safe_sync, torrent::chunk_manager(), te_string("yes"), te_string("no")));
   element->push_column("Send buffer:",      te_value(&torrent::ConnectionManager::send_buffer_size, value_base::flag_kb), " KB");
   element->push_column("Receive buffer:",   te_value(&torrent::ConnectionManager::receive_buffer_size, value_base::flag_kb), " KB");
 
   element->push_back("");
   element->push_column("Upload:",           te_variable_value("get_d_up_rate", value_base::flag_kb), " KB / ", te_variable_value("get_d_up_total", value_base::flag_xb));
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download_list.cc	2007-06-17 11:01:49.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download_list.cc	2007-07-21 07:01:41.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -275,25 +275,28 @@
     switch (type) {
     case INPUT_NONE:
       break;
 
     case INPUT_LOAD_DEFAULT:
     case INPUT_LOAD_MODIFIED:
-      control->core()->try_create_download_expand(input->str(), type == INPUT_LOAD_DEFAULT);
+      if (input->str().empty())
+        break;
+
+      control->core()->try_create_download_expand(input->str(), type == INPUT_LOAD_DEFAULT ? core::Manager::create_start : 0);
       break;
 
     case INPUT_CHANGE_DIRECTORY:
       if (current_view()->focus() == current_view()->end_visible())
         throw torrent::input_error("No download in focus to change root directory.");
 
       rpc::call_command_d("set_d_directory", *current_view()->focus(), rak::trim(input->str()));
-      control->core()->push_log("New root directory \"" + rpc::call_command_d_string("get_d_directory", *current_view()->focus()) + "\" for torrent.");
+      control->core()->push_log_std("New root directory \"" + rpc::call_command_d_string("get_d_directory", *current_view()->focus()) + "\" for torrent.");
       break;
 
     case INPUT_COMMAND:
-      rpc::parse_command_single_std(input->str());
+      rpc::parse_command_d_single_std(current_view()->focus() != current_view()->end_visible() ? *current_view()->focus() : NULL, input->str());
       break;
 
     default:
       throw torrent::internal_error("DownloadList::receive_exit_input(...) Invalid input type.");
     }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/download_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/download_list.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_base.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_base.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_base.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_base.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_chunks_seen.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_chunks_seen.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_chunks_seen.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_chunks_seen.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_chunks_seen.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_chunks_seen.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_chunks_seen.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_chunks_seen.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_download_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_download_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_download_list.cc	2007-06-17 10:20:02.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_download_list.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -152,13 +152,13 @@
   if (m_view->focus() == m_view->end_visible())
     return;
 
   if (rpc::call_command_d_value("get_d_state", *m_view->focus()) == 1)
     control->core()->download_list()->stop_normal(*m_view->focus());
   else
-    control->core()->download_list()->erase(*m_view->focus());
+    control->core()->download_list()->erase_ptr(*m_view->focus());
 
   m_view->set_last_changed();
 }
 
 void
 ElementDownloadList::receive_close_download() {
@@ -220,25 +220,24 @@
   if (m_view->focus() == m_view->end_visible())
     return;
 
   const std::string& tiedFile = rpc::call_command_d_string("get_d_tied_to_file", *m_view->focus());
 
   if (!tiedFile.empty()) {
-    // Move this into core?
-    control->core()->delete_tied(*m_view->focus());
+    rpc::call_command_d_void("d_delete_tied", *m_view->focus());
 
-    control->core()->push_log("Cleared tied to file association for download.");
+    control->core()->push_log("Cleared tied to file association for the selected download.");
   }
 }
 
 void
 ElementDownloadList::receive_change_view(const std::string& name) {
   core::ViewManager::iterator itr = control->view_manager()->find(name);
 
   if (itr == control->view_manager()->end()) {
-    control->core()->push_log("Could not find view \"" + name + "\".");
+    control->core()->push_log_std("Could not find view \"" + name + "\".");
     return;
   }
 
   set_view(*itr);
 }
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_download_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_download_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_download_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_download_list.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_file_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_file_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_file_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_file_list.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_file_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_file_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_file_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_file_list.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_log_complete.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_log_complete.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_log_complete.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_log_complete.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_log_complete.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_log_complete.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_log_complete.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_log_complete.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_menu.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_menu.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_menu.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_menu.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_menu.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_menu.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_menu.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_menu.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_peer_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_peer_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_peer_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_peer_list.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_peer_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_peer_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_peer_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_peer_list.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_string_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_string_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_string_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_string_list.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_string_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_string_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_string_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_string_list.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_text.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_text.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_text.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_text.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_text.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_text.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_text.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_text.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_tracker_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_tracker_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_tracker_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_tracker_list.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
@@ -70,12 +70,13 @@
 
   if (focus)
     control->input()->push_back(&m_bindings);
 
   m_window = new WTrackerList(m_download, &m_focus);
   m_window->set_active(true);
+  m_window->set_focused(focus);
 
   m_frame = frame;
   m_frame->initialize_window(m_window);
 }
 
 void
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_tracker_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_tracker_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_tracker_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_tracker_list.h	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_transfer_list.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_transfer_list.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_transfer_list.cc	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_transfer_list.cc	2007-07-20 05:23:12.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_transfer_list.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_transfer_list.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/element_transfer_list.h	2007-02-02 19:09:54.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/element_transfer_list.h	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/root.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/root.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/root.cc	2007-06-17 09:53:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/root.cc	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/root.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/root.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/ui/root.h	2007-03-20 23:33:51.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/ui/root.h	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/directory.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/directory.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/directory.cc	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/directory.cc	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/directory.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/directory.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/directory.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/directory.h	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/list_focus.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/list_focus.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/list_focus.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/list_focus.h	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/lockfile.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/lockfile.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/lockfile.cc	2007-02-23 00:24:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/lockfile.cc	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/lockfile.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/lockfile.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/lockfile.h	2007-02-02 19:09:53.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/lockfile.h	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // rTorrent - BitTorrent client
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/socket_fd.cc /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/socket_fd.cc
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/socket_fd.cc	2007-05-24 04:01:31.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/socket_fd.cc	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // libTorrent - BitTorrent library
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/socket_fd.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/socket_fd.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.5/src/utils/socket_fd.h	2007-05-23 22:31:17.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rtorrent/repos/rtorrent-0.7.6/src/utils/socket_fd.h	2007-07-20 05:23:13.000000000 +0800
@@ -1,8 +1,8 @@
 // libTorrent - BitTorrent library
-// Copyright (C) 2005-2006, Jari Sundell
+// Copyright (C) 2005-2007, Jari Sundell
 //
 // This program is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation; either version 2 of the License, or
 // (at your option) any later version.
 // 

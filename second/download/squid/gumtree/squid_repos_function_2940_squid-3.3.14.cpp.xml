<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2940_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ip<pos:position pos:line="1" pos:column="3"/></name><operator pos:line="1" pos:column="3">::<pos:position pos:line="1" pos:column="5"/></operator><name pos:line="1" pos:column="5">Address<pos:position pos:line="1" pos:column="12"/></name></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">client_entry<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">Ip<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">Address<pos:position pos:line="2" pos:column="25"/></name></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">current<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ClientInfo<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">c<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">key<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">MAX_IPSTRLEN<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">current<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">current<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">NtoA<pos:position pos:line="8" pos:column="22"/></name></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">key<pos:position pos:line="8" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="27">MAX_IPSTRLEN<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">hash_first<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">client_table<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
        <while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">c<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">ClientInfo<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator> <call><name pos:line="10" pos:column="36">hash_next<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><name pos:line="10" pos:column="46">client_table<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call><operator pos:line="10" pos:column="59">)<pos:position pos:line="10" pos:column="60"/></operator></expr>)<pos:position pos:line="10" pos:column="61"/></condition> <block pos:line="10" pos:column="62">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><operator pos:line="11" pos:column="17">!<pos:position pos:line="11" pos:column="18"/></operator><call><name pos:line="11" pos:column="18">strcmp<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">key<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="30">hashKeyStr<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name><name pos:line="11" pos:column="42">c<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">hash<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
                <block type="pseudo"><break pos:line="12" pos:column="17">break;<pos:position pos:line="12" pos:column="23"/></break></block></then></if>
        }<pos:position pos:line="13" pos:column="10"/></block></while>

        <expr_stmt><expr><name pos:line="15" pos:column="9">c<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">ClientInfo<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="28">hash_next<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">client_table<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then> <else pos:line="16" pos:column="7">else <block pos:line="16" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">hash_first<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">client_table<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">c<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">ClientInfo<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">hash_next<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">client_table<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">hash_last<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">client_table<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">c<pos:position pos:line="23" pos:column="10"/></name></expr>)<pos:position pos:line="23" pos:column="11"/></condition><then pos:line="23" pos:column="11">
        <block type="pseudo"><return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><operator pos:line="24" pos:column="17">&amp;<pos:position pos:line="24" pos:column="22"/></operator><name><name pos:line="24" pos:column="18">c<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">addr<pos:position pos:line="24" pos:column="25"/></name></name><operator pos:line="24" pos:column="25">)<pos:position pos:line="24" pos:column="26"/></operator></expr>;<pos:position pos:line="24" pos:column="27"/></return></block></then>
    <else pos:line="25" pos:column="5">else
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">NULL<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">)<pos:position pos:line="26" pos:column="22"/></operator></expr>;<pos:position pos:line="26" pos:column="23"/></return></block></else></if>

}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

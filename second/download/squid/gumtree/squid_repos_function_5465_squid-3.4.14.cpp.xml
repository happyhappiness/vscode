<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5465_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">logfile_mod_daemon_append<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">Logfile<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">lf<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">buf<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">len<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">l_daemon_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ll<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">l_daemon_t<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator> <name><name pos:line="4" pos:column="37">lf<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">data<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">logfile_buffer_t<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">b<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* Is there a buffer? If not, create one */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ll<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">bufs<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">head<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">==<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31"> <block pos:line="9" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">logfileNewBuffer<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">lf<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">50<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"logfile_mod_daemon_append: "<pos:position pos:line="12" pos:column="48"/></literal> <operator pos:line="12" pos:column="49">&lt;&lt;<pos:position pos:line="12" pos:column="57"/></operator> <name><name pos:line="12" pos:column="52">lf<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">path<pos:position pos:line="12" pos:column="60"/></name></name> <operator pos:line="12" pos:column="61">&lt;&lt;<pos:position pos:line="12" pos:column="69"/></operator> <literal type="string" pos:line="12" pos:column="64">": appending "<pos:position pos:line="12" pos:column="78"/></literal> <operator pos:line="12" pos:column="79">&lt;&lt;<pos:position pos:line="12" pos:column="87"/></operator> <name pos:line="12" pos:column="82">len<pos:position pos:line="12" pos:column="85"/></name> <operator pos:line="12" pos:column="86">&lt;&lt;<pos:position pos:line="12" pos:column="94"/></operator> <literal type="string" pos:line="12" pos:column="89">" bytes"<pos:position pos:line="12" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="99"/></expr_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* Copy what can be copied */</comment>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">len<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&gt;<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition> <block pos:line="14" pos:column="21">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">b<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <cast type="static" pos:line="15" pos:column="13">static_cast<argument_list type="generic" pos:line="15" pos:column="24">&lt;<argument><expr><name pos:line="15" pos:column="25">logfile_buffer_t<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="46"/></argument_list><argument_list pos:line="15" pos:column="43">(<argument><expr><name><name pos:line="15" pos:column="44">ll<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">bufs<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">.<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="53">tail<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">data<pos:position pos:line="15" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></cast></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">50<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">3<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"logfile_mod_daemon_append: current buffer has "<pos:position pos:line="16" pos:column="71"/></literal> <operator pos:line="16" pos:column="72">&lt;&lt;<pos:position pos:line="16" pos:column="80"/></operator> <name><name pos:line="16" pos:column="75">b<pos:position pos:line="16" pos:column="76"/></name><operator pos:line="16" pos:column="76">-&gt;<pos:position pos:line="16" pos:column="81"/></operator><name pos:line="16" pos:column="78">len<pos:position pos:line="16" pos:column="81"/></name></name> <operator pos:line="16" pos:column="82">&lt;&lt;<pos:position pos:line="16" pos:column="90"/></operator> <literal type="string" pos:line="16" pos:column="85">" of "<pos:position pos:line="16" pos:column="91"/></literal> <operator pos:line="16" pos:column="92">&lt;&lt;<pos:position pos:line="16" pos:column="100"/></operator> <name><name pos:line="16" pos:column="95">b<pos:position pos:line="16" pos:column="96"/></name><operator pos:line="16" pos:column="96">-&gt;<pos:position pos:line="16" pos:column="101"/></operator><name pos:line="16" pos:column="98">size<pos:position pos:line="16" pos:column="102"/></name></name> <operator pos:line="16" pos:column="103">&lt;&lt;<pos:position pos:line="16" pos:column="111"/></operator> <literal type="string" pos:line="16" pos:column="106">" bytes before append"<pos:position pos:line="16" pos:column="128"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="130"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">s<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">min<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">len<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="23">b<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">size<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">-<pos:position pos:line="17" pos:column="32"/></operator> <name><name pos:line="17" pos:column="33">b<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">len<pos:position pos:line="17" pos:column="39"/></name></name><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">memcpy<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name><name pos:line="18" pos:column="16">b<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">buf<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">+<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="25">b<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">len<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">buf<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">s<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">len<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">len<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">-<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">s<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">buf<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">buf<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">+<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">s<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">b<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">len<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name><name pos:line="21" pos:column="18">b<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">len<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">+<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">s<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">assert<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name><name pos:line="22" pos:column="16">b<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">len<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">&lt;=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="26">LOGFILE_BUFSZ<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">assert<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">len<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">&gt;=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="23">0<pos:position pos:line="23" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">len<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&gt;<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">logfileNewBuffer<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">lf<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></while>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_417_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientRequestContext<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">hostHeaderVerifyFailed<pos:position pos:line="2" pos:column="45"/></name></name><parameter_list pos:line="2" pos:column="45">(<parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">A<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <name pos:line="2" pos:column="67">char<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">B<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// IP address validation for Host: failed. Admin wants to ignore them.</comment>
    <comment type="line" pos:line="5" pos:column="5">// NP: we do not yet handle CONNECT tunnels well, so ignore for them</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="10">Config<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">onoff<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">hostStrictVerify<pos:position pos:line="6" pos:column="39"/></name></name> <operator pos:line="6" pos:column="40">&amp;&amp;<pos:position pos:line="6" pos:column="50"/></operator> <name><name pos:line="6" pos:column="43">http<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">request<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">-&gt;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="58">method<pos:position pos:line="6" pos:column="64"/></name></name> <operator pos:line="6" pos:column="65">!=<pos:position pos:line="6" pos:column="67"/></operator> <name><name pos:line="6" pos:column="68">Http<pos:position pos:line="6" pos:column="72"/></name><operator pos:line="6" pos:column="72">::<pos:position pos:line="6" pos:column="74"/></operator><name pos:line="6" pos:column="74">METHOD_CONNECT<pos:position pos:line="6" pos:column="88"/></name></name></expr>)<pos:position pos:line="6" pos:column="89"/></condition><then pos:line="6" pos:column="89"> <block pos:line="6" pos:column="90">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">85<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">3<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"SECURITY ALERT: Host header forgery detected on "<pos:position pos:line="7" pos:column="73"/></literal> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator> <call><name><name pos:line="7" pos:column="77">http<pos:position pos:line="7" pos:column="81"/></name><operator pos:line="7" pos:column="81">-&gt;<pos:position pos:line="7" pos:column="86"/></operator><name pos:line="7" pos:column="83">getConn<pos:position pos:line="7" pos:column="90"/></name></name><argument_list pos:line="7" pos:column="90">()<pos:position pos:line="7" pos:column="92"/></argument_list></call><operator pos:line="7" pos:column="92">-&gt;<pos:position pos:line="7" pos:column="97"/></operator><name pos:line="7" pos:column="94">clientConnection<pos:position pos:line="7" pos:column="110"/></name> <operator pos:line="7" pos:column="111">&lt;&lt;<pos:position pos:line="7" pos:column="119"/></operator>
               <literal type="string" pos:line="8" pos:column="16">" ("<pos:position pos:line="8" pos:column="20"/></literal> <operator pos:line="8" pos:column="21">&lt;&lt;<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="24">A<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">&lt;&lt;<pos:position pos:line="8" pos:column="34"/></operator> <literal type="string" pos:line="8" pos:column="29">" does not match "<pos:position pos:line="8" pos:column="47"/></literal> <operator pos:line="8" pos:column="48">&lt;&lt;<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="51">B<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <literal type="string" pos:line="8" pos:column="56">") on URL: "<pos:position pos:line="8" pos:column="68"/></literal> <operator pos:line="8" pos:column="69">&lt;&lt;<pos:position pos:line="8" pos:column="77"/></operator> <call><name><name pos:line="8" pos:column="72">http<pos:position pos:line="8" pos:column="76"/></name><operator pos:line="8" pos:column="76">-&gt;<pos:position pos:line="8" pos:column="81"/></operator><name pos:line="8" pos:column="78">request<pos:position pos:line="8" pos:column="85"/></name><operator pos:line="8" pos:column="85">-&gt;<pos:position pos:line="8" pos:column="90"/></operator><name pos:line="8" pos:column="87">effectiveRequestUri<pos:position pos:line="8" pos:column="106"/></name></name><argument_list pos:line="8" pos:column="106">()<pos:position pos:line="8" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="110"/></expr_stmt>

        <comment type="line" pos:line="10" pos:column="9">// NP: it is tempting to use 'flags.noCache' but that is all about READing cache data.</comment>
        <comment type="line" pos:line="11" pos:column="9">// The problems here are about WRITE for new cache content, which means flags.cachable</comment>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">http<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">request<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">flags<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">cachable<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator> <literal type="boolean" pos:line="12" pos:column="41">false<pos:position pos:line="12" pos:column="46"/></literal></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt> <comment type="line" pos:line="12" pos:column="48">// MUST NOT cache (for now)</comment>
        <comment type="line" pos:line="13" pos:column="9">// XXX: when we have updated the cache key to base on raw-IP + URI this cacheable limit can go.</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">http<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">request<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">flags<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">hierarchical<pos:position pos:line="14" pos:column="42"/></name></name> <operator pos:line="14" pos:column="43">=<pos:position pos:line="14" pos:column="44"/></operator> <literal type="boolean" pos:line="14" pos:column="45">false<pos:position pos:line="14" pos:column="50"/></literal></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt> <comment type="line" pos:line="14" pos:column="52">// MUST NOT pass to peers (for now)</comment>
        <comment type="line" pos:line="15" pos:column="9">// XXX: when we have sorted out the best way to relay requests properly to peers this hierarchical limit can go.</comment>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">http<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">doCallouts<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">85<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="16">DBG_IMPORTANT<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"SECURITY ALERT: Host header forgery detected on "<pos:position pos:line="20" pos:column="81"/></literal> <operator pos:line="20" pos:column="82">&lt;&lt;<pos:position pos:line="20" pos:column="90"/></operator>
           <call><name><name pos:line="21" pos:column="12">http<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">getConn<pos:position pos:line="21" pos:column="25"/></name></name><argument_list pos:line="21" pos:column="25">()<pos:position pos:line="21" pos:column="27"/></argument_list></call><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">clientConnection<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">&lt;&lt;<pos:position pos:line="21" pos:column="54"/></operator> <literal type="string" pos:line="21" pos:column="49">" ("<pos:position pos:line="21" pos:column="53"/></literal> <operator pos:line="21" pos:column="54">&lt;&lt;<pos:position pos:line="21" pos:column="62"/></operator> <name pos:line="21" pos:column="57">A<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">&lt;&lt;<pos:position pos:line="21" pos:column="67"/></operator> <literal type="string" pos:line="21" pos:column="62">" does not match "<pos:position pos:line="21" pos:column="80"/></literal> <operator pos:line="21" pos:column="81">&lt;&lt;<pos:position pos:line="21" pos:column="89"/></operator> <name pos:line="21" pos:column="84">B<pos:position pos:line="21" pos:column="85"/></name> <operator pos:line="21" pos:column="86">&lt;&lt;<pos:position pos:line="21" pos:column="94"/></operator> <literal type="string" pos:line="21" pos:column="89">")"<pos:position pos:line="21" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="94"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">char<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">ua<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><call><name><name pos:line="22" pos:column="26">http<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">request<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">header<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">getStr<pos:position pos:line="22" pos:column="54"/></name></name><argument_list pos:line="22" pos:column="54">(<argument><expr><name><name pos:line="22" pos:column="55">Http<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">::<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="61">HdrType<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">::<pos:position pos:line="22" pos:column="70"/></operator><name pos:line="22" pos:column="70">USER_AGENT<pos:position pos:line="22" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="81"/></argument_list></call></expr></init></decl>)<pos:position pos:line="22" pos:column="82"/></condition><then pos:line="22" pos:column="82">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">85<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">DBG_IMPORTANT<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="35">"SECURITY ALERT: By user agent: "<pos:position pos:line="23" pos:column="68"/></literal> <operator pos:line="23" pos:column="69">&lt;&lt;<pos:position pos:line="23" pos:column="77"/></operator> <name pos:line="23" pos:column="72">ua<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="76"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">85<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="16">DBG_IMPORTANT<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"SECURITY ALERT: on URL: "<pos:position pos:line="24" pos:column="57"/></literal> <operator pos:line="24" pos:column="58">&lt;&lt;<pos:position pos:line="24" pos:column="66"/></operator> <call><name><name pos:line="24" pos:column="61">http<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">-&gt;<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="67">request<pos:position pos:line="24" pos:column="74"/></name><operator pos:line="24" pos:column="74">-&gt;<pos:position pos:line="24" pos:column="79"/></operator><name pos:line="24" pos:column="76">effectiveRequestUri<pos:position pos:line="24" pos:column="95"/></name></name><argument_list pos:line="24" pos:column="95">()<pos:position pos:line="24" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="99"/></expr_stmt>

    <comment type="line" pos:line="26" pos:column="5">// IP address validation for Host: failed. reject the connection.</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">clientStreamNode<pos:position pos:line="27" pos:column="21"/></name> <modifier pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></modifier></type><name pos:line="27" pos:column="23">node<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">clientStreamNode<pos:position pos:line="27" pos:column="47"/></name> <operator pos:line="27" pos:column="48">*<pos:position pos:line="27" pos:column="49"/></operator><operator pos:line="27" pos:column="49">)<pos:position pos:line="27" pos:column="50"/></operator><name><name pos:line="27" pos:column="50">http<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">client_stream<pos:position pos:line="27" pos:column="69"/></name><operator pos:line="27" pos:column="69">.<pos:position pos:line="27" pos:column="70"/></operator><name pos:line="27" pos:column="70">tail<pos:position pos:line="27" pos:column="74"/></name><operator pos:line="27" pos:column="74">-&gt;<pos:position pos:line="27" pos:column="79"/></operator><name pos:line="27" pos:column="76">prev<pos:position pos:line="27" pos:column="80"/></name><operator pos:line="27" pos:column="80">-&gt;<pos:position pos:line="27" pos:column="85"/></operator><name pos:line="27" pos:column="82">data<pos:position pos:line="27" pos:column="86"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="87"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">clientReplyContext<pos:position pos:line="28" pos:column="23"/></name> <modifier pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></modifier></type><name pos:line="28" pos:column="25">repContext<pos:position pos:line="28" pos:column="35"/></name> <init pos:line="28" pos:column="36">= <expr><cast type="dynamic" pos:line="28" pos:column="38">dynamic_cast<argument_list type="generic" pos:line="28" pos:column="50">&lt;<argument><expr><name pos:line="28" pos:column="51">clientReplyContext<pos:position pos:line="28" pos:column="69"/></name> <operator pos:line="28" pos:column="70">*<pos:position pos:line="28" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="28" pos:column="75"/></argument_list><argument_list pos:line="28" pos:column="72">(<argument><expr><call><name><name pos:line="28" pos:column="73">node<pos:position pos:line="28" pos:column="77"/></name><operator pos:line="28" pos:column="77">-&gt;<pos:position pos:line="28" pos:column="82"/></operator><name pos:line="28" pos:column="79">data<pos:position pos:line="28" pos:column="83"/></name><operator pos:line="28" pos:column="83">.<pos:position pos:line="28" pos:column="84"/></operator><name pos:line="28" pos:column="84">getRaw<pos:position pos:line="28" pos:column="90"/></name></name><argument_list pos:line="28" pos:column="90">()<pos:position pos:line="28" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="93"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="28" pos:column="94"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">assert<pos:position pos:line="29" pos:column="11"/></name> <argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">repContext<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">repContext<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">setReplyToError<pos:position pos:line="30" pos:column="32"/></name></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">ERR_CONFLICT_HOST<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="52">Http<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">::<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="58">scConflict<pos:position pos:line="30" pos:column="68"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="31" pos:column="33">http<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">request<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">method<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">NULL<pos:position pos:line="31" pos:column="60"/></name></expr></argument>,
                                <argument><expr><call><name><name pos:line="32" pos:column="33">http<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">getConn<pos:position pos:line="32" pos:column="46"/></name></name><argument_list pos:line="32" pos:column="46">()<pos:position pos:line="32" pos:column="48"/></argument_list></call><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name><name pos:line="32" pos:column="50">clientConnection<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">-&gt;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="68">remote<pos:position pos:line="32" pos:column="74"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="33" pos:column="33">http<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">request<pos:position pos:line="33" pos:column="46"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="34" pos:column="33">NULL<pos:position pos:line="34" pos:column="37"/></name></expr></argument>,
<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><ternary><condition><expr><name pos:line="35" pos:column="5">USE_AUTH<pos:position pos:line="35" pos:column="13"/></name></expr></condition></ternary></expr></cpp:if>
                                <argument><expr><ternary><condition><expr><call><name><name pos:line="36" pos:column="33">http<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">getConn<pos:position pos:line="36" pos:column="46"/></name></name><argument_list pos:line="36" pos:column="46">()<pos:position pos:line="36" pos:column="48"/></argument_list></call> <operator pos:line="36" pos:column="49">!=<pos:position pos:line="36" pos:column="51"/></operator> <name pos:line="36" pos:column="52">NULL<pos:position pos:line="36" pos:column="56"/></name> <operator pos:line="36" pos:column="57">&amp;&amp;<pos:position pos:line="36" pos:column="67"/></operator> <call><name><name pos:line="36" pos:column="60">http<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">getConn<pos:position pos:line="36" pos:column="73"/></name></name><argument_list pos:line="36" pos:column="73">()<pos:position pos:line="36" pos:column="75"/></argument_list></call><operator pos:line="36" pos:column="75">-&gt;<pos:position pos:line="36" pos:column="80"/></operator><call><name pos:line="36" pos:column="77">getAuth<pos:position pos:line="36" pos:column="84"/></name><argument_list pos:line="36" pos:column="84">()<pos:position pos:line="36" pos:column="86"/></argument_list></call> <operator pos:line="36" pos:column="87">!=<pos:position pos:line="36" pos:column="89"/></operator> <name pos:line="36" pos:column="90">NULL<pos:position pos:line="36" pos:column="94"/></name></expr> ?<pos:position pos:line="36" pos:column="96"/></condition><then pos:line="36" pos:column="96">
                                <expr><call><name><name pos:line="37" pos:column="33">http<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">getConn<pos:position pos:line="37" pos:column="46"/></name></name><argument_list pos:line="37" pos:column="46">()<pos:position pos:line="37" pos:column="48"/></argument_list></call><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><call><name pos:line="37" pos:column="50">getAuth<pos:position pos:line="37" pos:column="57"/></name><argument_list pos:line="37" pos:column="57">()<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr> <pos:position pos:line="37" pos:column="60"/></then><else pos:line="37" pos:column="60">: <expr><name><name pos:line="37" pos:column="62">http<pos:position pos:line="37" pos:column="66"/></name><operator pos:line="37" pos:column="66">-&gt;<pos:position pos:line="37" pos:column="71"/></operator><name pos:line="37" pos:column="68">request<pos:position pos:line="37" pos:column="75"/></name><operator pos:line="37" pos:column="75">-&gt;<pos:position pos:line="37" pos:column="80"/></operator><name pos:line="37" pos:column="77">auth_user_request<pos:position pos:line="37" pos:column="94"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="37" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="96"/></expr_stmt>
<cpp:else pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">else<pos:position pos:line="38" pos:column="6"/></cpp:directive></cpp:else>
                                <expr_stmt><expr><name pos:line="39" pos:column="33">NULL<pos:position pos:line="39" pos:column="37"/></name></expr></expr_stmt>)<pos:position pos:line="39" pos:column="38"/></block>;<pos:position pos:line="39" pos:column="39"/></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1079_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Init<pos:position pos:line="2" pos:column="10"/></name></name><parameter_list pos:line="2" pos:column="10">()<pos:position pos:line="2" pos:column="12"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* the registration order does not matter */</comment>

    <comment type="line" pos:line="6" pos:column="5">// The explicit return type (ACL*) for lambdas is needed because the type</comment>
    <comment type="line" pos:line="7" pos:column="5">// of the return expression inside lambda is not ACL* but AclFoo* while</comment>
    <comment type="line" pos:line="8" pos:column="5">// Acl::Maker is defined to return ACL*.</comment>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">RegisterMaker<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="string" pos:line="10" pos:column="19">"all-of"<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="10" pos:column="29">[]<pos:position pos:line="10" pos:column="31"/></capture><parameter_list pos:line="10" pos:column="31">(<parameter><decl><type><name pos:line="10" pos:column="32">TypeName<pos:position pos:line="10" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="10" pos:column="41"/></parameter_list>-&gt;<type><name pos:line="10" pos:column="43">ACL<pos:position pos:line="10" pos:column="46"/></name><modifier pos:line="10" pos:column="46">*<pos:position pos:line="10" pos:column="47"/></modifier></type> <block pos:line="10" pos:column="48">{ <return pos:line="10" pos:column="50">return <expr><operator pos:line="10" pos:column="57">new<pos:position pos:line="10" pos:column="60"/></operator> <name><name pos:line="10" pos:column="61">Acl<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">::<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">AllOf<pos:position pos:line="10" pos:column="71"/></name></name></expr>;<pos:position pos:line="10" pos:column="72"/></return> }<pos:position pos:line="10" pos:column="74"/></block></lambda></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt> <comment type="line" pos:line="10" pos:column="77">// XXX: Add name parameter to ctor</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">RegisterMaker<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><literal type="string" pos:line="11" pos:column="19">"any-of"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="11" pos:column="29">[]<pos:position pos:line="11" pos:column="31"/></capture><parameter_list pos:line="11" pos:column="31">(<parameter><decl><type><name pos:line="11" pos:column="32">TypeName<pos:position pos:line="11" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="11" pos:column="41"/></parameter_list>-&gt;<type><name pos:line="11" pos:column="43">ACL<pos:position pos:line="11" pos:column="46"/></name><modifier pos:line="11" pos:column="46">*<pos:position pos:line="11" pos:column="47"/></modifier></type> <block pos:line="11" pos:column="48">{ <return pos:line="11" pos:column="50">return <expr><operator pos:line="11" pos:column="57">new<pos:position pos:line="11" pos:column="60"/></operator> <name><name pos:line="11" pos:column="61">Acl<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">::<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="66">AnyOf<pos:position pos:line="11" pos:column="71"/></name></name></expr>;<pos:position pos:line="11" pos:column="72"/></return> }<pos:position pos:line="11" pos:column="74"/></block></lambda></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt> <comment type="line" pos:line="11" pos:column="77">// XXX: Add name parameter to ctor</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">RegisterMaker<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"random"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="12" pos:column="29">[]<pos:position pos:line="12" pos:column="31"/></capture><parameter_list pos:line="12" pos:column="31">(<parameter><decl><type><name pos:line="12" pos:column="32">TypeName<pos:position pos:line="12" pos:column="40"/></name></type> <name pos:line="12" pos:column="41">name<pos:position pos:line="12" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="12" pos:column="46"/></parameter_list>-&gt;<type><name pos:line="12" pos:column="48">ACL<pos:position pos:line="12" pos:column="51"/></name><modifier pos:line="12" pos:column="51">*<pos:position pos:line="12" pos:column="52"/></modifier></type> <block pos:line="12" pos:column="53">{ <return pos:line="12" pos:column="55">return <expr><operator pos:line="12" pos:column="62">new<pos:position pos:line="12" pos:column="65"/></operator> <call><name pos:line="12" pos:column="66">ACLRandom<pos:position pos:line="12" pos:column="75"/></name><argument_list pos:line="12" pos:column="75">(<argument><expr><name pos:line="12" pos:column="76">name<pos:position pos:line="12" pos:column="80"/></name></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></return> }<pos:position pos:line="12" pos:column="84"/></block></lambda></expr></argument>)<pos:position pos:line="12" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">RegisterMaker<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><literal type="string" pos:line="13" pos:column="19">"time"<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="13" pos:column="27">[]<pos:position pos:line="13" pos:column="29"/></capture><parameter_list pos:line="13" pos:column="29">(<parameter><decl><type><name pos:line="13" pos:column="30">TypeName<pos:position pos:line="13" pos:column="38"/></name></type> <name pos:line="13" pos:column="39">name<pos:position pos:line="13" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="13" pos:column="44"/></parameter_list>-&gt;<type><name pos:line="13" pos:column="46">ACL<pos:position pos:line="13" pos:column="49"/></name><modifier pos:line="13" pos:column="49">*<pos:position pos:line="13" pos:column="50"/></modifier></type> <block pos:line="13" pos:column="51">{ <return pos:line="13" pos:column="53">return <expr><operator pos:line="13" pos:column="60">new<pos:position pos:line="13" pos:column="63"/></operator> <call><name><name pos:line="13" pos:column="64">ACLStrategised<pos:position pos:line="13" pos:column="78"/></name><argument_list type="generic" pos:line="13" pos:column="78">&lt;<argument><expr><name pos:line="13" pos:column="79">time_t<pos:position pos:line="13" pos:column="85"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="89"/></argument_list></name><argument_list pos:line="13" pos:column="86">(<argument><expr><operator pos:line="13" pos:column="87">new<pos:position pos:line="13" pos:column="90"/></operator> <name pos:line="13" pos:column="91">ACLTimeData<pos:position pos:line="13" pos:column="102"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="104">new<pos:position pos:line="13" pos:column="107"/></operator> <name pos:line="13" pos:column="108">ACLTimeStrategy<pos:position pos:line="13" pos:column="123"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="125">name<pos:position pos:line="13" pos:column="129"/></name></expr></argument>)<pos:position pos:line="13" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="131"/></return> }<pos:position pos:line="13" pos:column="133"/></block></lambda></expr></argument>)<pos:position pos:line="13" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="135"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">RegisterMaker<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><literal type="string" pos:line="14" pos:column="19">"src_as"<pos:position pos:line="14" pos:column="27"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="14" pos:column="29">[]<pos:position pos:line="14" pos:column="31"/></capture><parameter_list pos:line="14" pos:column="31">(<parameter><decl><type><name pos:line="14" pos:column="32">TypeName<pos:position pos:line="14" pos:column="40"/></name></type> <name pos:line="14" pos:column="41">name<pos:position pos:line="14" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="14" pos:column="46"/></parameter_list>-&gt;<type><name pos:line="14" pos:column="48">ACL<pos:position pos:line="14" pos:column="51"/></name><modifier pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></modifier></type> <block pos:line="14" pos:column="53">{ <return pos:line="14" pos:column="55">return <expr><operator pos:line="14" pos:column="62">new<pos:position pos:line="14" pos:column="65"/></operator> <call><name><name pos:line="14" pos:column="66">ACLStrategised<pos:position pos:line="14" pos:column="80"/></name><argument_list type="generic" pos:line="14" pos:column="80">&lt;<argument><expr><name><name pos:line="14" pos:column="81">Ip<pos:position pos:line="14" pos:column="83"/></name><operator pos:line="14" pos:column="83">::<pos:position pos:line="14" pos:column="85"/></operator><name pos:line="14" pos:column="85">Address<pos:position pos:line="14" pos:column="92"/></name></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="96"/></argument_list></name><argument_list pos:line="14" pos:column="93">(<argument><expr><operator pos:line="14" pos:column="94">new<pos:position pos:line="14" pos:column="97"/></operator> <name pos:line="14" pos:column="98">ACLASN<pos:position pos:line="14" pos:column="104"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="106">new<pos:position pos:line="14" pos:column="109"/></operator> <name pos:line="14" pos:column="110">ACLSourceASNStrategy<pos:position pos:line="14" pos:column="130"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="132">name<pos:position pos:line="14" pos:column="136"/></name></expr></argument>)<pos:position pos:line="14" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="138"/></return> }<pos:position pos:line="14" pos:column="140"/></block></lambda></expr></argument>)<pos:position pos:line="14" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="142"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">RegisterMaker<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><literal type="string" pos:line="15" pos:column="19">"dst_as"<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="15" pos:column="29">[]<pos:position pos:line="15" pos:column="31"/></capture><parameter_list pos:line="15" pos:column="31">(<parameter><decl><type><name pos:line="15" pos:column="32">TypeName<pos:position pos:line="15" pos:column="40"/></name></type> <name pos:line="15" pos:column="41">name<pos:position pos:line="15" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="15" pos:column="46"/></parameter_list>-&gt;<type><name pos:line="15" pos:column="48">ACL<pos:position pos:line="15" pos:column="51"/></name><modifier pos:line="15" pos:column="51">*<pos:position pos:line="15" pos:column="52"/></modifier></type> <block pos:line="15" pos:column="53">{ <return pos:line="15" pos:column="55">return <expr><operator pos:line="15" pos:column="62">new<pos:position pos:line="15" pos:column="65"/></operator> <call><name><name pos:line="15" pos:column="66">ACLStrategised<pos:position pos:line="15" pos:column="80"/></name><argument_list type="generic" pos:line="15" pos:column="80">&lt;<argument><expr><name><name pos:line="15" pos:column="81">Ip<pos:position pos:line="15" pos:column="83"/></name><operator pos:line="15" pos:column="83">::<pos:position pos:line="15" pos:column="85"/></operator><name pos:line="15" pos:column="85">Address<pos:position pos:line="15" pos:column="92"/></name></name></expr></argument>&gt;<pos:position pos:line="15" pos:column="96"/></argument_list></name><argument_list pos:line="15" pos:column="93">(<argument><expr><operator pos:line="15" pos:column="94">new<pos:position pos:line="15" pos:column="97"/></operator> <name pos:line="15" pos:column="98">ACLASN<pos:position pos:line="15" pos:column="104"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="106">new<pos:position pos:line="15" pos:column="109"/></operator> <name pos:line="15" pos:column="110">ACLDestinationASNStrategy<pos:position pos:line="15" pos:column="135"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="137">name<pos:position pos:line="15" pos:column="141"/></name></expr></argument>)<pos:position pos:line="15" pos:column="142"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="143"/></return> }<pos:position pos:line="15" pos:column="145"/></block></lambda></expr></argument>)<pos:position pos:line="15" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="147"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">RegisterMaker<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><literal type="string" pos:line="16" pos:column="19">"browser"<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="16" pos:column="30">[]<pos:position pos:line="16" pos:column="32"/></capture><parameter_list pos:line="16" pos:column="32">(<parameter><decl><type><name pos:line="16" pos:column="33">TypeName<pos:position pos:line="16" pos:column="41"/></name></type> <name pos:line="16" pos:column="42">name<pos:position pos:line="16" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="16" pos:column="47"/></parameter_list>-&gt;<type><name pos:line="16" pos:column="49">ACL<pos:position pos:line="16" pos:column="52"/></name><modifier pos:line="16" pos:column="52">*<pos:position pos:line="16" pos:column="53"/></modifier></type> <block pos:line="16" pos:column="54">{ <return pos:line="16" pos:column="56">return <expr><operator pos:line="16" pos:column="63">new<pos:position pos:line="16" pos:column="66"/></operator> <call><name><name pos:line="16" pos:column="67">ACLStrategised<pos:position pos:line="16" pos:column="81"/></name><argument_list type="generic" pos:line="16" pos:column="81">&lt;<argument><expr><name pos:line="16" pos:column="82">char<pos:position pos:line="16" pos:column="86"/></name> <specifier pos:line="16" pos:column="87">const<pos:position pos:line="16" pos:column="92"/></specifier> <operator pos:line="16" pos:column="93">*<pos:position pos:line="16" pos:column="94"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="98"/></argument_list></name><argument_list pos:line="16" pos:column="95">(<argument><expr><operator pos:line="16" pos:column="96">new<pos:position pos:line="16" pos:column="99"/></operator> <name pos:line="16" pos:column="100">ACLRegexData<pos:position pos:line="16" pos:column="112"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="114">new<pos:position pos:line="16" pos:column="117"/></operator> <name><name pos:line="16" pos:column="118">ACLRequestHeaderStrategy<pos:position pos:line="16" pos:column="142"/></name><argument_list type="generic" pos:line="16" pos:column="142">&lt;<argument><expr><name><name pos:line="16" pos:column="143">Http<pos:position pos:line="16" pos:column="147"/></name><operator pos:line="16" pos:column="147">::<pos:position pos:line="16" pos:column="149"/></operator><name pos:line="16" pos:column="149">HdrType<pos:position pos:line="16" pos:column="156"/></name><operator pos:line="16" pos:column="156">::<pos:position pos:line="16" pos:column="158"/></operator><name pos:line="16" pos:column="158">USER_AGENT<pos:position pos:line="16" pos:column="168"/></name></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="172"/></argument_list></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="171">name<pos:position pos:line="16" pos:column="175"/></name></expr></argument>)<pos:position pos:line="16" pos:column="176"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="177"/></return> }<pos:position pos:line="16" pos:column="179"/></block></lambda></expr></argument>)<pos:position pos:line="16" pos:column="180"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="181"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">RegisterMaker<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><literal type="string" pos:line="17" pos:column="19">"dstdomain"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="17" pos:column="32">[]<pos:position pos:line="17" pos:column="34"/></capture><parameter_list pos:line="17" pos:column="34">(<parameter><decl><type><name pos:line="17" pos:column="35">TypeName<pos:position pos:line="17" pos:column="43"/></name></type> <name pos:line="17" pos:column="44">name<pos:position pos:line="17" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="17" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="17" pos:column="51">ACL<pos:position pos:line="17" pos:column="54"/></name><modifier pos:line="17" pos:column="54">*<pos:position pos:line="17" pos:column="55"/></modifier></type> <block pos:line="17" pos:column="56">{ <return pos:line="17" pos:column="58">return <expr><operator pos:line="17" pos:column="65">new<pos:position pos:line="17" pos:column="68"/></operator> <call><name><name pos:line="17" pos:column="69">ACLStrategised<pos:position pos:line="17" pos:column="83"/></name><argument_list type="generic" pos:line="17" pos:column="83">&lt;<argument><expr><name pos:line="17" pos:column="84">char<pos:position pos:line="17" pos:column="88"/></name> <specifier pos:line="17" pos:column="89">const<pos:position pos:line="17" pos:column="94"/></specifier> <operator pos:line="17" pos:column="95">*<pos:position pos:line="17" pos:column="96"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="100"/></argument_list></name><argument_list pos:line="17" pos:column="97">(<argument><expr><operator pos:line="17" pos:column="98">new<pos:position pos:line="17" pos:column="101"/></operator> <name pos:line="17" pos:column="102">ACLDomainData<pos:position pos:line="17" pos:column="115"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="117">new<pos:position pos:line="17" pos:column="120"/></operator> <name pos:line="17" pos:column="121">ACLDestinationDomainStrategy<pos:position pos:line="17" pos:column="149"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="151">name<pos:position pos:line="17" pos:column="155"/></name></expr></argument>)<pos:position pos:line="17" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="157"/></return> }<pos:position pos:line="17" pos:column="159"/></block></lambda></expr></argument>)<pos:position pos:line="17" pos:column="160"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="161"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">RegisterMaker<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><literal type="string" pos:line="18" pos:column="19">"dstdom_regex"<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="18" pos:column="35">[]<pos:position pos:line="18" pos:column="37"/></capture><parameter_list pos:line="18" pos:column="37">(<parameter><decl><type><name pos:line="18" pos:column="38">TypeName<pos:position pos:line="18" pos:column="46"/></name></type> <name pos:line="18" pos:column="47">name<pos:position pos:line="18" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="18" pos:column="52"/></parameter_list>-&gt;<type><name pos:line="18" pos:column="54">ACL<pos:position pos:line="18" pos:column="57"/></name><modifier pos:line="18" pos:column="57">*<pos:position pos:line="18" pos:column="58"/></modifier></type> <block pos:line="18" pos:column="59">{ <return pos:line="18" pos:column="61">return <expr><operator pos:line="18" pos:column="68">new<pos:position pos:line="18" pos:column="71"/></operator> <call><name><name pos:line="18" pos:column="72">ACLStrategised<pos:position pos:line="18" pos:column="86"/></name><argument_list type="generic" pos:line="18" pos:column="86">&lt;<argument><expr><name pos:line="18" pos:column="87">char<pos:position pos:line="18" pos:column="91"/></name> <specifier pos:line="18" pos:column="92">const<pos:position pos:line="18" pos:column="97"/></specifier> <operator pos:line="18" pos:column="98">*<pos:position pos:line="18" pos:column="99"/></operator></expr></argument>&gt;<pos:position pos:line="18" pos:column="103"/></argument_list></name><argument_list pos:line="18" pos:column="100">(<argument><expr><operator pos:line="18" pos:column="101">new<pos:position pos:line="18" pos:column="104"/></operator> <name pos:line="18" pos:column="105">ACLRegexData<pos:position pos:line="18" pos:column="117"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="119">new<pos:position pos:line="18" pos:column="122"/></operator> <name pos:line="18" pos:column="123">ACLDestinationDomainStrategy<pos:position pos:line="18" pos:column="151"/></name></expr></argument> , <argument><expr><name pos:line="18" pos:column="154">name<pos:position pos:line="18" pos:column="158"/></name></expr></argument>)<pos:position pos:line="18" pos:column="159"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="160"/></return> }<pos:position pos:line="18" pos:column="162"/></block></lambda></expr></argument>)<pos:position pos:line="18" pos:column="163"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="164"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">RegisterMaker<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><literal type="string" pos:line="19" pos:column="19">"dst"<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="19" pos:column="26">[]<pos:position pos:line="19" pos:column="28"/></capture><parameter_list pos:line="19" pos:column="28">(<parameter><decl><type><name pos:line="19" pos:column="29">TypeName<pos:position pos:line="19" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="19" pos:column="38"/></parameter_list>-&gt;<type><name pos:line="19" pos:column="40">ACL<pos:position pos:line="19" pos:column="43"/></name><modifier pos:line="19" pos:column="43">*<pos:position pos:line="19" pos:column="44"/></modifier></type> <block pos:line="19" pos:column="45">{ <return pos:line="19" pos:column="47">return <expr><operator pos:line="19" pos:column="54">new<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">ACLDestinationIP<pos:position pos:line="19" pos:column="74"/></name></expr>;<pos:position pos:line="19" pos:column="75"/></return> }<pos:position pos:line="19" pos:column="77"/></block></lambda></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt> <comment type="line" pos:line="19" pos:column="80">// XXX: Add name parameter to ctor</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">RegisterMaker<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><literal type="string" pos:line="20" pos:column="19">"hier_code"<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="20" pos:column="32">[]<pos:position pos:line="20" pos:column="34"/></capture><parameter_list pos:line="20" pos:column="34">(<parameter><decl><type><name pos:line="20" pos:column="35">TypeName<pos:position pos:line="20" pos:column="43"/></name></type> <name pos:line="20" pos:column="44">name<pos:position pos:line="20" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="20" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="20" pos:column="51">ACL<pos:position pos:line="20" pos:column="54"/></name><modifier pos:line="20" pos:column="54">*<pos:position pos:line="20" pos:column="55"/></modifier></type> <block pos:line="20" pos:column="56">{ <return pos:line="20" pos:column="58">return <expr><operator pos:line="20" pos:column="65">new<pos:position pos:line="20" pos:column="68"/></operator> <call><name><name pos:line="20" pos:column="69">ACLStrategised<pos:position pos:line="20" pos:column="83"/></name><argument_list type="generic" pos:line="20" pos:column="83">&lt;<argument><expr><name pos:line="20" pos:column="84">hier_code<pos:position pos:line="20" pos:column="93"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="97"/></argument_list></name><argument_list pos:line="20" pos:column="94">(<argument><expr><operator pos:line="20" pos:column="95">new<pos:position pos:line="20" pos:column="98"/></operator> <name pos:line="20" pos:column="99">ACLHierCodeData<pos:position pos:line="20" pos:column="114"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="116">new<pos:position pos:line="20" pos:column="119"/></operator> <name pos:line="20" pos:column="120">ACLHierCodeStrategy<pos:position pos:line="20" pos:column="139"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="141">name<pos:position pos:line="20" pos:column="145"/></name></expr></argument>)<pos:position pos:line="20" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="147"/></return> }<pos:position pos:line="20" pos:column="149"/></block></lambda></expr></argument>)<pos:position pos:line="20" pos:column="150"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="151"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">RegisterMaker<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">"rep_header"<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="21" pos:column="33">[]<pos:position pos:line="21" pos:column="35"/></capture><parameter_list pos:line="21" pos:column="35">(<parameter><decl><type><name pos:line="21" pos:column="36">TypeName<pos:position pos:line="21" pos:column="44"/></name></type> <name pos:line="21" pos:column="45">name<pos:position pos:line="21" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="21" pos:column="50"/></parameter_list>-&gt;<type><name pos:line="21" pos:column="52">ACL<pos:position pos:line="21" pos:column="55"/></name><modifier pos:line="21" pos:column="55">*<pos:position pos:line="21" pos:column="56"/></modifier></type> <block pos:line="21" pos:column="57">{ <return pos:line="21" pos:column="59">return <expr><operator pos:line="21" pos:column="66">new<pos:position pos:line="21" pos:column="69"/></operator> <call><name><name pos:line="21" pos:column="70">ACLStrategised<pos:position pos:line="21" pos:column="84"/></name><argument_list type="generic" pos:line="21" pos:column="84">&lt;<argument><expr><name pos:line="21" pos:column="85">HttpHeader<pos:position pos:line="21" pos:column="95"/></name><operator pos:line="21" pos:column="95">*<pos:position pos:line="21" pos:column="96"/></operator></expr></argument>&gt;<pos:position pos:line="21" pos:column="100"/></argument_list></name><argument_list pos:line="21" pos:column="97">(<argument><expr><operator pos:line="21" pos:column="98">new<pos:position pos:line="21" pos:column="101"/></operator> <name pos:line="21" pos:column="102">ACLHTTPHeaderData<pos:position pos:line="21" pos:column="119"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="121">new<pos:position pos:line="21" pos:column="124"/></operator> <name pos:line="21" pos:column="125">ACLHTTPRepHeaderStrategy<pos:position pos:line="21" pos:column="149"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="151">name<pos:position pos:line="21" pos:column="155"/></name></expr></argument>)<pos:position pos:line="21" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="157"/></return> }<pos:position pos:line="21" pos:column="159"/></block></lambda></expr></argument>)<pos:position pos:line="21" pos:column="160"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="161"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">RegisterMaker<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><literal type="string" pos:line="22" pos:column="19">"req_header"<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="22" pos:column="33">[]<pos:position pos:line="22" pos:column="35"/></capture><parameter_list pos:line="22" pos:column="35">(<parameter><decl><type><name pos:line="22" pos:column="36">TypeName<pos:position pos:line="22" pos:column="44"/></name></type> <name pos:line="22" pos:column="45">name<pos:position pos:line="22" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="22" pos:column="50"/></parameter_list>-&gt;<type><name pos:line="22" pos:column="52">ACL<pos:position pos:line="22" pos:column="55"/></name><modifier pos:line="22" pos:column="55">*<pos:position pos:line="22" pos:column="56"/></modifier></type> <block pos:line="22" pos:column="57">{ <return pos:line="22" pos:column="59">return <expr><operator pos:line="22" pos:column="66">new<pos:position pos:line="22" pos:column="69"/></operator> <call><name><name pos:line="22" pos:column="70">ACLStrategised<pos:position pos:line="22" pos:column="84"/></name><argument_list type="generic" pos:line="22" pos:column="84">&lt;<argument><expr><name pos:line="22" pos:column="85">HttpHeader<pos:position pos:line="22" pos:column="95"/></name><operator pos:line="22" pos:column="95">*<pos:position pos:line="22" pos:column="96"/></operator></expr></argument>&gt;<pos:position pos:line="22" pos:column="100"/></argument_list></name><argument_list pos:line="22" pos:column="97">(<argument><expr><operator pos:line="22" pos:column="98">new<pos:position pos:line="22" pos:column="101"/></operator> <name pos:line="22" pos:column="102">ACLHTTPHeaderData<pos:position pos:line="22" pos:column="119"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="121">new<pos:position pos:line="22" pos:column="124"/></operator> <name pos:line="22" pos:column="125">ACLHTTPReqHeaderStrategy<pos:position pos:line="22" pos:column="149"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="151">name<pos:position pos:line="22" pos:column="155"/></name></expr></argument>)<pos:position pos:line="22" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="157"/></return> }<pos:position pos:line="22" pos:column="159"/></block></lambda></expr></argument>)<pos:position pos:line="22" pos:column="160"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="161"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">RegisterMaker<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="string" pos:line="23" pos:column="19">"http_status"<pos:position pos:line="23" pos:column="32"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="23" pos:column="34">[]<pos:position pos:line="23" pos:column="36"/></capture><parameter_list pos:line="23" pos:column="36">(<parameter><decl><type><name pos:line="23" pos:column="37">TypeName<pos:position pos:line="23" pos:column="45"/></name></type> <name pos:line="23" pos:column="46">name<pos:position pos:line="23" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="23" pos:column="51"/></parameter_list>-&gt;<type><name pos:line="23" pos:column="53">ACL<pos:position pos:line="23" pos:column="56"/></name><modifier pos:line="23" pos:column="56">*<pos:position pos:line="23" pos:column="57"/></modifier></type> <block pos:line="23" pos:column="58">{ <return pos:line="23" pos:column="60">return <expr><operator pos:line="23" pos:column="67">new<pos:position pos:line="23" pos:column="70"/></operator> <call><name pos:line="23" pos:column="71">ACLHTTPStatus<pos:position pos:line="23" pos:column="84"/></name><argument_list pos:line="23" pos:column="84">(<argument><expr><name pos:line="23" pos:column="85">name<pos:position pos:line="23" pos:column="89"/></name></expr></argument>)<pos:position pos:line="23" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="91"/></return> }<pos:position pos:line="23" pos:column="93"/></block></lambda></expr></argument>)<pos:position pos:line="23" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">RegisterMaker<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"maxconn"<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="24" pos:column="30">[]<pos:position pos:line="24" pos:column="32"/></capture><parameter_list pos:line="24" pos:column="32">(<parameter><decl><type><name pos:line="24" pos:column="33">TypeName<pos:position pos:line="24" pos:column="41"/></name></type> <name pos:line="24" pos:column="42">name<pos:position pos:line="24" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="24" pos:column="47"/></parameter_list>-&gt;<type><name pos:line="24" pos:column="49">ACL<pos:position pos:line="24" pos:column="52"/></name><modifier pos:line="24" pos:column="52">*<pos:position pos:line="24" pos:column="53"/></modifier></type> <block pos:line="24" pos:column="54">{ <return pos:line="24" pos:column="56">return <expr><operator pos:line="24" pos:column="63">new<pos:position pos:line="24" pos:column="66"/></operator> <call><name pos:line="24" pos:column="67">ACLMaxConnection<pos:position pos:line="24" pos:column="83"/></name><argument_list pos:line="24" pos:column="83">(<argument><expr><name pos:line="24" pos:column="84">name<pos:position pos:line="24" pos:column="88"/></name></expr></argument>)<pos:position pos:line="24" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="90"/></return> }<pos:position pos:line="24" pos:column="92"/></block></lambda></expr></argument>)<pos:position pos:line="24" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">RegisterMaker<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="string" pos:line="25" pos:column="19">"method"<pos:position pos:line="25" pos:column="27"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="25" pos:column="29">[]<pos:position pos:line="25" pos:column="31"/></capture><parameter_list pos:line="25" pos:column="31">(<parameter><decl><type><name pos:line="25" pos:column="32">TypeName<pos:position pos:line="25" pos:column="40"/></name></type> <name pos:line="25" pos:column="41">name<pos:position pos:line="25" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="25" pos:column="46"/></parameter_list>-&gt;<type><name pos:line="25" pos:column="48">ACL<pos:position pos:line="25" pos:column="51"/></name><modifier pos:line="25" pos:column="51">*<pos:position pos:line="25" pos:column="52"/></modifier></type> <block pos:line="25" pos:column="53">{ <return pos:line="25" pos:column="55">return <expr><operator pos:line="25" pos:column="62">new<pos:position pos:line="25" pos:column="65"/></operator> <call><name><name pos:line="25" pos:column="66">ACLStrategised<pos:position pos:line="25" pos:column="80"/></name><argument_list type="generic" pos:line="25" pos:column="80">&lt;<argument><expr><name pos:line="25" pos:column="81">HttpRequestMethod<pos:position pos:line="25" pos:column="98"/></name></expr></argument>&gt;<pos:position pos:line="25" pos:column="102"/></argument_list></name><argument_list pos:line="25" pos:column="99">(<argument><expr><operator pos:line="25" pos:column="100">new<pos:position pos:line="25" pos:column="103"/></operator> <name pos:line="25" pos:column="104">ACLMethodData<pos:position pos:line="25" pos:column="117"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="119">new<pos:position pos:line="25" pos:column="122"/></operator> <name pos:line="25" pos:column="123">ACLMethodStrategy<pos:position pos:line="25" pos:column="140"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="142">name<pos:position pos:line="25" pos:column="146"/></name></expr></argument>)<pos:position pos:line="25" pos:column="147"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="148"/></return> }<pos:position pos:line="25" pos:column="150"/></block></lambda></expr></argument>)<pos:position pos:line="25" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="152"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">RegisterMaker<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><literal type="string" pos:line="26" pos:column="19">"localip"<pos:position pos:line="26" pos:column="28"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="26" pos:column="30">[]<pos:position pos:line="26" pos:column="32"/></capture><parameter_list pos:line="26" pos:column="32">(<parameter><decl><type><name pos:line="26" pos:column="33">TypeName<pos:position pos:line="26" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="26" pos:column="42"/></parameter_list>-&gt;<type><name pos:line="26" pos:column="44">ACL<pos:position pos:line="26" pos:column="47"/></name><modifier pos:line="26" pos:column="47">*<pos:position pos:line="26" pos:column="48"/></modifier></type> <block pos:line="26" pos:column="49">{ <return pos:line="26" pos:column="51">return <expr><operator pos:line="26" pos:column="58">new<pos:position pos:line="26" pos:column="61"/></operator> <name pos:line="26" pos:column="62">ACLLocalIP<pos:position pos:line="26" pos:column="72"/></name></expr>;<pos:position pos:line="26" pos:column="73"/></return> }<pos:position pos:line="26" pos:column="75"/></block></lambda></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt> <comment type="line" pos:line="26" pos:column="78">// XXX: Add name parameter to ctor</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">RegisterMaker<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><literal type="string" pos:line="27" pos:column="19">"localport"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="27" pos:column="32">[]<pos:position pos:line="27" pos:column="34"/></capture><parameter_list pos:line="27" pos:column="34">(<parameter><decl><type><name pos:line="27" pos:column="35">TypeName<pos:position pos:line="27" pos:column="43"/></name></type> <name pos:line="27" pos:column="44">name<pos:position pos:line="27" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="27" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="27" pos:column="51">ACL<pos:position pos:line="27" pos:column="54"/></name><modifier pos:line="27" pos:column="54">*<pos:position pos:line="27" pos:column="55"/></modifier></type> <block pos:line="27" pos:column="56">{ <return pos:line="27" pos:column="58">return <expr><operator pos:line="27" pos:column="65">new<pos:position pos:line="27" pos:column="68"/></operator> <call><name><name pos:line="27" pos:column="69">ACLStrategised<pos:position pos:line="27" pos:column="83"/></name><argument_list type="generic" pos:line="27" pos:column="83">&lt;<argument><expr><name pos:line="27" pos:column="84">int<pos:position pos:line="27" pos:column="87"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="91"/></argument_list></name><argument_list pos:line="27" pos:column="88">(<argument><expr><operator pos:line="27" pos:column="89">new<pos:position pos:line="27" pos:column="92"/></operator> <name pos:line="27" pos:column="93">ACLIntRange<pos:position pos:line="27" pos:column="104"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="106">new<pos:position pos:line="27" pos:column="109"/></operator> <name pos:line="27" pos:column="110">ACLLocalPortStrategy<pos:position pos:line="27" pos:column="130"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="132">name<pos:position pos:line="27" pos:column="136"/></name></expr></argument>)<pos:position pos:line="27" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="138"/></return> }<pos:position pos:line="27" pos:column="140"/></block></lambda></expr></argument>)<pos:position pos:line="27" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="142"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">RegisterMaker<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><literal type="string" pos:line="28" pos:column="19">"myportname"<pos:position pos:line="28" pos:column="31"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="28" pos:column="33">[]<pos:position pos:line="28" pos:column="35"/></capture><parameter_list pos:line="28" pos:column="35">(<parameter><decl><type><name pos:line="28" pos:column="36">TypeName<pos:position pos:line="28" pos:column="44"/></name></type> <name pos:line="28" pos:column="45">name<pos:position pos:line="28" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="28" pos:column="50"/></parameter_list>-&gt;<type><name pos:line="28" pos:column="52">ACL<pos:position pos:line="28" pos:column="55"/></name><modifier pos:line="28" pos:column="55">*<pos:position pos:line="28" pos:column="56"/></modifier></type> <block pos:line="28" pos:column="57">{ <return pos:line="28" pos:column="59">return <expr><operator pos:line="28" pos:column="66">new<pos:position pos:line="28" pos:column="69"/></operator> <call><name><name pos:line="28" pos:column="70">ACLStrategised<pos:position pos:line="28" pos:column="84"/></name><argument_list type="generic" pos:line="28" pos:column="84">&lt;<argument><expr><specifier pos:line="28" pos:column="85">const<pos:position pos:line="28" pos:column="90"/></specifier> <name pos:line="28" pos:column="91">char<pos:position pos:line="28" pos:column="95"/></name> <operator pos:line="28" pos:column="96">*<pos:position pos:line="28" pos:column="97"/></operator></expr></argument>&gt;<pos:position pos:line="28" pos:column="101"/></argument_list></name><argument_list pos:line="28" pos:column="98">(<argument><expr><operator pos:line="28" pos:column="99">new<pos:position pos:line="28" pos:column="102"/></operator> <name pos:line="28" pos:column="103">ACLStringData<pos:position pos:line="28" pos:column="116"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="118">new<pos:position pos:line="28" pos:column="121"/></operator> <name pos:line="28" pos:column="122">ACLMyPortNameStrategy<pos:position pos:line="28" pos:column="143"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="145">name<pos:position pos:line="28" pos:column="149"/></name></expr></argument>)<pos:position pos:line="28" pos:column="150"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="151"/></return> }<pos:position pos:line="28" pos:column="153"/></block></lambda></expr></argument>)<pos:position pos:line="28" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="155"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">RegisterMaker<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><literal type="string" pos:line="29" pos:column="19">"peername"<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="29" pos:column="31">[]<pos:position pos:line="29" pos:column="33"/></capture><parameter_list pos:line="29" pos:column="33">(<parameter><decl><type><name pos:line="29" pos:column="34">TypeName<pos:position pos:line="29" pos:column="42"/></name></type> <name pos:line="29" pos:column="43">name<pos:position pos:line="29" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="29" pos:column="48"/></parameter_list>-&gt;<type><name pos:line="29" pos:column="50">ACL<pos:position pos:line="29" pos:column="53"/></name><modifier pos:line="29" pos:column="53">*<pos:position pos:line="29" pos:column="54"/></modifier></type> <block pos:line="29" pos:column="55">{ <return pos:line="29" pos:column="57">return <expr><operator pos:line="29" pos:column="64">new<pos:position pos:line="29" pos:column="67"/></operator> <call><name><name pos:line="29" pos:column="68">ACLStrategised<pos:position pos:line="29" pos:column="82"/></name><argument_list type="generic" pos:line="29" pos:column="82">&lt;<argument><expr><specifier pos:line="29" pos:column="83">const<pos:position pos:line="29" pos:column="88"/></specifier> <name pos:line="29" pos:column="89">char<pos:position pos:line="29" pos:column="93"/></name> <operator pos:line="29" pos:column="94">*<pos:position pos:line="29" pos:column="95"/></operator></expr></argument>&gt;<pos:position pos:line="29" pos:column="99"/></argument_list></name><argument_list pos:line="29" pos:column="96">(<argument><expr><operator pos:line="29" pos:column="97">new<pos:position pos:line="29" pos:column="100"/></operator> <name pos:line="29" pos:column="101">ACLStringData<pos:position pos:line="29" pos:column="114"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="116">new<pos:position pos:line="29" pos:column="119"/></operator> <name pos:line="29" pos:column="120">ACLPeerNameStrategy<pos:position pos:line="29" pos:column="139"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="141">name<pos:position pos:line="29" pos:column="145"/></name></expr></argument>)<pos:position pos:line="29" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="147"/></return> }<pos:position pos:line="29" pos:column="149"/></block></lambda></expr></argument>)<pos:position pos:line="29" pos:column="150"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="151"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">RegisterMaker<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><literal type="string" pos:line="30" pos:column="19">"peername_regex"<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="30" pos:column="37">[]<pos:position pos:line="30" pos:column="39"/></capture><parameter_list pos:line="30" pos:column="39">(<parameter><decl><type><name pos:line="30" pos:column="40">TypeName<pos:position pos:line="30" pos:column="48"/></name></type> <name pos:line="30" pos:column="49">name<pos:position pos:line="30" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="30" pos:column="54"/></parameter_list>-&gt;<type><name pos:line="30" pos:column="56">ACL<pos:position pos:line="30" pos:column="59"/></name><modifier pos:line="30" pos:column="59">*<pos:position pos:line="30" pos:column="60"/></modifier></type> <block pos:line="30" pos:column="61">{ <return pos:line="30" pos:column="63">return <expr><operator pos:line="30" pos:column="70">new<pos:position pos:line="30" pos:column="73"/></operator> <call><name><name pos:line="30" pos:column="74">ACLStrategised<pos:position pos:line="30" pos:column="88"/></name><argument_list type="generic" pos:line="30" pos:column="88">&lt;<argument><expr><name pos:line="30" pos:column="89">char<pos:position pos:line="30" pos:column="93"/></name> <specifier pos:line="30" pos:column="94">const<pos:position pos:line="30" pos:column="99"/></specifier> <operator pos:line="30" pos:column="100">*<pos:position pos:line="30" pos:column="101"/></operator></expr></argument>&gt;<pos:position pos:line="30" pos:column="105"/></argument_list></name><argument_list pos:line="30" pos:column="102">(<argument><expr><operator pos:line="30" pos:column="103">new<pos:position pos:line="30" pos:column="106"/></operator> <name pos:line="30" pos:column="107">ACLRegexData<pos:position pos:line="30" pos:column="119"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="121">new<pos:position pos:line="30" pos:column="124"/></operator> <name pos:line="30" pos:column="125">ACLPeerNameStrategy<pos:position pos:line="30" pos:column="144"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="146">name<pos:position pos:line="30" pos:column="150"/></name></expr></argument>)<pos:position pos:line="30" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="152"/></return> }<pos:position pos:line="30" pos:column="154"/></block></lambda></expr></argument>)<pos:position pos:line="30" pos:column="155"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="156"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">RegisterMaker<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><literal type="string" pos:line="31" pos:column="19">"proto"<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="31" pos:column="28">[]<pos:position pos:line="31" pos:column="30"/></capture><parameter_list pos:line="31" pos:column="30">(<parameter><decl><type><name pos:line="31" pos:column="31">TypeName<pos:position pos:line="31" pos:column="39"/></name></type> <name pos:line="31" pos:column="40">name<pos:position pos:line="31" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="31" pos:column="45"/></parameter_list>-&gt;<type><name pos:line="31" pos:column="47">ACL<pos:position pos:line="31" pos:column="50"/></name><modifier pos:line="31" pos:column="50">*<pos:position pos:line="31" pos:column="51"/></modifier></type> <block pos:line="31" pos:column="52">{ <return pos:line="31" pos:column="54">return <expr><operator pos:line="31" pos:column="61">new<pos:position pos:line="31" pos:column="64"/></operator> <call><name><name pos:line="31" pos:column="65">ACLStrategised<pos:position pos:line="31" pos:column="79"/></name><argument_list type="generic" pos:line="31" pos:column="79">&lt;<argument><expr><name><name pos:line="31" pos:column="80">AnyP<pos:position pos:line="31" pos:column="84"/></name><operator pos:line="31" pos:column="84">::<pos:position pos:line="31" pos:column="86"/></operator><name pos:line="31" pos:column="86">ProtocolType<pos:position pos:line="31" pos:column="98"/></name></name></expr></argument>&gt;<pos:position pos:line="31" pos:column="102"/></argument_list></name><argument_list pos:line="31" pos:column="99">(<argument><expr><operator pos:line="31" pos:column="100">new<pos:position pos:line="31" pos:column="103"/></operator> <name pos:line="31" pos:column="104">ACLProtocolData<pos:position pos:line="31" pos:column="119"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="121">new<pos:position pos:line="31" pos:column="124"/></operator> <name pos:line="31" pos:column="125">ACLProtocolStrategy<pos:position pos:line="31" pos:column="144"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="146">name<pos:position pos:line="31" pos:column="150"/></name></expr></argument>)<pos:position pos:line="31" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="152"/></return> }<pos:position pos:line="31" pos:column="154"/></block></lambda></expr></argument>)<pos:position pos:line="31" pos:column="155"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="156"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">RegisterMaker<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><literal type="string" pos:line="32" pos:column="19">"referer_regex"<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="32" pos:column="36">[]<pos:position pos:line="32" pos:column="38"/></capture><parameter_list pos:line="32" pos:column="38">(<parameter><decl><type><name pos:line="32" pos:column="39">TypeName<pos:position pos:line="32" pos:column="47"/></name></type> <name pos:line="32" pos:column="48">name<pos:position pos:line="32" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="32" pos:column="53"/></parameter_list>-&gt;<type><name pos:line="32" pos:column="55">ACL<pos:position pos:line="32" pos:column="58"/></name><modifier pos:line="32" pos:column="58">*<pos:position pos:line="32" pos:column="59"/></modifier></type> <block pos:line="32" pos:column="60">{ <return pos:line="32" pos:column="62">return <expr><operator pos:line="32" pos:column="69">new<pos:position pos:line="32" pos:column="72"/></operator> <call><name><name pos:line="32" pos:column="73">ACLStrategised<pos:position pos:line="32" pos:column="87"/></name><argument_list type="generic" pos:line="32" pos:column="87">&lt;<argument><expr><name pos:line="32" pos:column="88">char<pos:position pos:line="32" pos:column="92"/></name> <specifier pos:line="32" pos:column="93">const<pos:position pos:line="32" pos:column="98"/></specifier> <operator pos:line="32" pos:column="99">*<pos:position pos:line="32" pos:column="100"/></operator></expr></argument>&gt;<pos:position pos:line="32" pos:column="104"/></argument_list></name><argument_list pos:line="32" pos:column="101">(<argument><expr><operator pos:line="32" pos:column="102">new<pos:position pos:line="32" pos:column="105"/></operator> <name pos:line="32" pos:column="106">ACLRegexData<pos:position pos:line="32" pos:column="118"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="120">new<pos:position pos:line="32" pos:column="123"/></operator> <name><name pos:line="32" pos:column="124">ACLRequestHeaderStrategy<pos:position pos:line="32" pos:column="148"/></name><argument_list type="generic" pos:line="32" pos:column="148">&lt;<argument><expr><name><name pos:line="32" pos:column="149">Http<pos:position pos:line="32" pos:column="153"/></name><operator pos:line="32" pos:column="153">::<pos:position pos:line="32" pos:column="155"/></operator><name pos:line="32" pos:column="155">HdrType<pos:position pos:line="32" pos:column="162"/></name><operator pos:line="32" pos:column="162">::<pos:position pos:line="32" pos:column="164"/></operator><name pos:line="32" pos:column="164">REFERER<pos:position pos:line="32" pos:column="171"/></name></name></expr></argument>&gt;<pos:position pos:line="32" pos:column="175"/></argument_list></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="174">name<pos:position pos:line="32" pos:column="178"/></name></expr></argument>)<pos:position pos:line="32" pos:column="179"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="180"/></return> }<pos:position pos:line="32" pos:column="182"/></block></lambda></expr></argument>)<pos:position pos:line="32" pos:column="183"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="184"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">RegisterMaker<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><literal type="string" pos:line="33" pos:column="19">"rep_mime_type"<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="33" pos:column="36">[]<pos:position pos:line="33" pos:column="38"/></capture><parameter_list pos:line="33" pos:column="38">(<parameter><decl><type><name pos:line="33" pos:column="39">TypeName<pos:position pos:line="33" pos:column="47"/></name></type> <name pos:line="33" pos:column="48">name<pos:position pos:line="33" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="33" pos:column="53"/></parameter_list>-&gt;<type><name pos:line="33" pos:column="55">ACL<pos:position pos:line="33" pos:column="58"/></name><modifier pos:line="33" pos:column="58">*<pos:position pos:line="33" pos:column="59"/></modifier></type> <block pos:line="33" pos:column="60">{ <return pos:line="33" pos:column="62">return <expr><operator pos:line="33" pos:column="69">new<pos:position pos:line="33" pos:column="72"/></operator> <call><name><name pos:line="33" pos:column="73">ACLStrategised<pos:position pos:line="33" pos:column="87"/></name><argument_list type="generic" pos:line="33" pos:column="87">&lt;<argument><expr><name pos:line="33" pos:column="88">char<pos:position pos:line="33" pos:column="92"/></name> <specifier pos:line="33" pos:column="93">const<pos:position pos:line="33" pos:column="98"/></specifier> <operator pos:line="33" pos:column="99">*<pos:position pos:line="33" pos:column="100"/></operator></expr></argument>&gt;<pos:position pos:line="33" pos:column="104"/></argument_list></name><argument_list pos:line="33" pos:column="101">(<argument><expr><operator pos:line="33" pos:column="102">new<pos:position pos:line="33" pos:column="105"/></operator> <name pos:line="33" pos:column="106">ACLRegexData<pos:position pos:line="33" pos:column="118"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="120">new<pos:position pos:line="33" pos:column="123"/></operator> <name><name pos:line="33" pos:column="124">ACLReplyHeaderStrategy<pos:position pos:line="33" pos:column="146"/></name><argument_list type="generic" pos:line="33" pos:column="146">&lt;<argument><expr><name><name pos:line="33" pos:column="147">Http<pos:position pos:line="33" pos:column="151"/></name><operator pos:line="33" pos:column="151">::<pos:position pos:line="33" pos:column="153"/></operator><name pos:line="33" pos:column="153">HdrType<pos:position pos:line="33" pos:column="160"/></name><operator pos:line="33" pos:column="160">::<pos:position pos:line="33" pos:column="162"/></operator><name pos:line="33" pos:column="162">CONTENT_TYPE<pos:position pos:line="33" pos:column="174"/></name></name></expr></argument>&gt;<pos:position pos:line="33" pos:column="178"/></argument_list></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="177">name<pos:position pos:line="33" pos:column="181"/></name></expr></argument>)<pos:position pos:line="33" pos:column="182"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="183"/></return> }<pos:position pos:line="33" pos:column="185"/></block></lambda></expr></argument>)<pos:position pos:line="33" pos:column="186"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="187"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">RegisterMaker<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="string" pos:line="34" pos:column="19">"req_mime_type"<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="34" pos:column="36">[]<pos:position pos:line="34" pos:column="38"/></capture><parameter_list pos:line="34" pos:column="38">(<parameter><decl><type><name pos:line="34" pos:column="39">TypeName<pos:position pos:line="34" pos:column="47"/></name></type> <name pos:line="34" pos:column="48">name<pos:position pos:line="34" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="34" pos:column="53"/></parameter_list>-&gt;<type><name pos:line="34" pos:column="55">ACL<pos:position pos:line="34" pos:column="58"/></name><modifier pos:line="34" pos:column="58">*<pos:position pos:line="34" pos:column="59"/></modifier></type> <block pos:line="34" pos:column="60">{ <return pos:line="34" pos:column="62">return <expr><operator pos:line="34" pos:column="69">new<pos:position pos:line="34" pos:column="72"/></operator> <call><name><name pos:line="34" pos:column="73">ACLStrategised<pos:position pos:line="34" pos:column="87"/></name><argument_list type="generic" pos:line="34" pos:column="87">&lt;<argument><expr><name pos:line="34" pos:column="88">char<pos:position pos:line="34" pos:column="92"/></name> <specifier pos:line="34" pos:column="93">const<pos:position pos:line="34" pos:column="98"/></specifier> <operator pos:line="34" pos:column="99">*<pos:position pos:line="34" pos:column="100"/></operator></expr></argument>&gt;<pos:position pos:line="34" pos:column="104"/></argument_list></name><argument_list pos:line="34" pos:column="101">(<argument><expr><operator pos:line="34" pos:column="102">new<pos:position pos:line="34" pos:column="105"/></operator> <name pos:line="34" pos:column="106">ACLRegexData<pos:position pos:line="34" pos:column="118"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="120">new<pos:position pos:line="34" pos:column="123"/></operator> <name><name pos:line="34" pos:column="124">ACLRequestHeaderStrategy<pos:position pos:line="34" pos:column="148"/></name><argument_list type="generic" pos:line="34" pos:column="148">&lt;<argument><expr><name><name pos:line="34" pos:column="149">Http<pos:position pos:line="34" pos:column="153"/></name><operator pos:line="34" pos:column="153">::<pos:position pos:line="34" pos:column="155"/></operator><name pos:line="34" pos:column="155">HdrType<pos:position pos:line="34" pos:column="162"/></name><operator pos:line="34" pos:column="162">::<pos:position pos:line="34" pos:column="164"/></operator><name pos:line="34" pos:column="164">CONTENT_TYPE<pos:position pos:line="34" pos:column="176"/></name></name></expr></argument>&gt;<pos:position pos:line="34" pos:column="180"/></argument_list></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="179">name<pos:position pos:line="34" pos:column="183"/></name></expr></argument>)<pos:position pos:line="34" pos:column="184"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="185"/></return> }<pos:position pos:line="34" pos:column="187"/></block></lambda></expr></argument>)<pos:position pos:line="34" pos:column="188"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="189"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">RegisterMaker<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><literal type="string" pos:line="35" pos:column="19">"srcdomain"<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="35" pos:column="32">[]<pos:position pos:line="35" pos:column="34"/></capture><parameter_list pos:line="35" pos:column="34">(<parameter><decl><type><name pos:line="35" pos:column="35">TypeName<pos:position pos:line="35" pos:column="43"/></name></type> <name pos:line="35" pos:column="44">name<pos:position pos:line="35" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="35" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="35" pos:column="51">ACL<pos:position pos:line="35" pos:column="54"/></name><modifier pos:line="35" pos:column="54">*<pos:position pos:line="35" pos:column="55"/></modifier></type> <block pos:line="35" pos:column="56">{ <return pos:line="35" pos:column="58">return <expr><operator pos:line="35" pos:column="65">new<pos:position pos:line="35" pos:column="68"/></operator> <call><name><name pos:line="35" pos:column="69">ACLStrategised<pos:position pos:line="35" pos:column="83"/></name><argument_list type="generic" pos:line="35" pos:column="83">&lt;<argument><expr><name pos:line="35" pos:column="84">char<pos:position pos:line="35" pos:column="88"/></name> <specifier pos:line="35" pos:column="89">const<pos:position pos:line="35" pos:column="94"/></specifier> <operator pos:line="35" pos:column="95">*<pos:position pos:line="35" pos:column="96"/></operator></expr></argument>&gt;<pos:position pos:line="35" pos:column="100"/></argument_list></name><argument_list pos:line="35" pos:column="97">(<argument><expr><operator pos:line="35" pos:column="98">new<pos:position pos:line="35" pos:column="101"/></operator> <name pos:line="35" pos:column="102">ACLDomainData<pos:position pos:line="35" pos:column="115"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="117">new<pos:position pos:line="35" pos:column="120"/></operator> <name pos:line="35" pos:column="121">ACLSourceDomainStrategy<pos:position pos:line="35" pos:column="144"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="146">name<pos:position pos:line="35" pos:column="150"/></name></expr></argument>)<pos:position pos:line="35" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="152"/></return> }<pos:position pos:line="35" pos:column="154"/></block></lambda></expr></argument>)<pos:position pos:line="35" pos:column="155"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="156"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">RegisterMaker<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><literal type="string" pos:line="36" pos:column="19">"srcdom_regex"<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="36" pos:column="35">[]<pos:position pos:line="36" pos:column="37"/></capture><parameter_list pos:line="36" pos:column="37">(<parameter><decl><type><name pos:line="36" pos:column="38">TypeName<pos:position pos:line="36" pos:column="46"/></name></type> <name pos:line="36" pos:column="47">name<pos:position pos:line="36" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="36" pos:column="52"/></parameter_list>-&gt;<type><name pos:line="36" pos:column="54">ACL<pos:position pos:line="36" pos:column="57"/></name><modifier pos:line="36" pos:column="57">*<pos:position pos:line="36" pos:column="58"/></modifier></type> <block pos:line="36" pos:column="59">{ <return pos:line="36" pos:column="61">return <expr><operator pos:line="36" pos:column="68">new<pos:position pos:line="36" pos:column="71"/></operator> <call><name><name pos:line="36" pos:column="72">ACLStrategised<pos:position pos:line="36" pos:column="86"/></name><argument_list type="generic" pos:line="36" pos:column="86">&lt;<argument><expr><name pos:line="36" pos:column="87">char<pos:position pos:line="36" pos:column="91"/></name> <specifier pos:line="36" pos:column="92">const<pos:position pos:line="36" pos:column="97"/></specifier> <operator pos:line="36" pos:column="98">*<pos:position pos:line="36" pos:column="99"/></operator></expr></argument>&gt;<pos:position pos:line="36" pos:column="103"/></argument_list></name><argument_list pos:line="36" pos:column="100">(<argument><expr><operator pos:line="36" pos:column="101">new<pos:position pos:line="36" pos:column="104"/></operator> <name pos:line="36" pos:column="105">ACLRegexData<pos:position pos:line="36" pos:column="117"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="119">new<pos:position pos:line="36" pos:column="122"/></operator> <name pos:line="36" pos:column="123">ACLSourceDomainStrategy<pos:position pos:line="36" pos:column="146"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="148">name<pos:position pos:line="36" pos:column="152"/></name></expr></argument>)<pos:position pos:line="36" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="154"/></return> }<pos:position pos:line="36" pos:column="156"/></block></lambda></expr></argument>)<pos:position pos:line="36" pos:column="157"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="158"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">RegisterMaker<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><literal type="string" pos:line="37" pos:column="19">"src"<pos:position pos:line="37" pos:column="24"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="37" pos:column="26">[]<pos:position pos:line="37" pos:column="28"/></capture><parameter_list pos:line="37" pos:column="28">(<parameter><decl><type><name pos:line="37" pos:column="29">TypeName<pos:position pos:line="37" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="37" pos:column="38"/></parameter_list>-&gt;<type><name pos:line="37" pos:column="40">ACL<pos:position pos:line="37" pos:column="43"/></name><modifier pos:line="37" pos:column="43">*<pos:position pos:line="37" pos:column="44"/></modifier></type> <block pos:line="37" pos:column="45">{ <return pos:line="37" pos:column="47">return <expr><operator pos:line="37" pos:column="54">new<pos:position pos:line="37" pos:column="57"/></operator> <name pos:line="37" pos:column="58">ACLSourceIP<pos:position pos:line="37" pos:column="69"/></name></expr>;<pos:position pos:line="37" pos:column="70"/></return> }<pos:position pos:line="37" pos:column="72"/></block></lambda></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt> <comment type="line" pos:line="37" pos:column="75">// XXX: Add name parameter to ctor</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">RegisterMaker<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><literal type="string" pos:line="38" pos:column="19">"url_regex"<pos:position pos:line="38" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="38" pos:column="32">[]<pos:position pos:line="38" pos:column="34"/></capture><parameter_list pos:line="38" pos:column="34">(<parameter><decl><type><name pos:line="38" pos:column="35">TypeName<pos:position pos:line="38" pos:column="43"/></name></type> <name pos:line="38" pos:column="44">name<pos:position pos:line="38" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="38" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="38" pos:column="51">ACL<pos:position pos:line="38" pos:column="54"/></name><modifier pos:line="38" pos:column="54">*<pos:position pos:line="38" pos:column="55"/></modifier></type> <block pos:line="38" pos:column="56">{ <return pos:line="38" pos:column="58">return <expr><operator pos:line="38" pos:column="65">new<pos:position pos:line="38" pos:column="68"/></operator> <call><name><name pos:line="38" pos:column="69">ACLStrategised<pos:position pos:line="38" pos:column="83"/></name><argument_list type="generic" pos:line="38" pos:column="83">&lt;<argument><expr><name pos:line="38" pos:column="84">char<pos:position pos:line="38" pos:column="88"/></name> <specifier pos:line="38" pos:column="89">const<pos:position pos:line="38" pos:column="94"/></specifier> <operator pos:line="38" pos:column="95">*<pos:position pos:line="38" pos:column="96"/></operator></expr></argument>&gt;<pos:position pos:line="38" pos:column="100"/></argument_list></name><argument_list pos:line="38" pos:column="97">(<argument><expr><operator pos:line="38" pos:column="98">new<pos:position pos:line="38" pos:column="101"/></operator> <name pos:line="38" pos:column="102">ACLRegexData<pos:position pos:line="38" pos:column="114"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="116">new<pos:position pos:line="38" pos:column="119"/></operator> <name pos:line="38" pos:column="120">ACLUrlStrategy<pos:position pos:line="38" pos:column="134"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="136">name<pos:position pos:line="38" pos:column="140"/></name></expr></argument>)<pos:position pos:line="38" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="142"/></return> }<pos:position pos:line="38" pos:column="144"/></block></lambda></expr></argument>)<pos:position pos:line="38" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="146"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">RegisterMaker<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><literal type="string" pos:line="39" pos:column="19">"urllogin"<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="39" pos:column="31">[]<pos:position pos:line="39" pos:column="33"/></capture><parameter_list pos:line="39" pos:column="33">(<parameter><decl><type><name pos:line="39" pos:column="34">TypeName<pos:position pos:line="39" pos:column="42"/></name></type> <name pos:line="39" pos:column="43">name<pos:position pos:line="39" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="39" pos:column="48"/></parameter_list>-&gt;<type><name pos:line="39" pos:column="50">ACL<pos:position pos:line="39" pos:column="53"/></name><modifier pos:line="39" pos:column="53">*<pos:position pos:line="39" pos:column="54"/></modifier></type> <block pos:line="39" pos:column="55">{ <return pos:line="39" pos:column="57">return <expr><operator pos:line="39" pos:column="64">new<pos:position pos:line="39" pos:column="67"/></operator> <call><name><name pos:line="39" pos:column="68">ACLStrategised<pos:position pos:line="39" pos:column="82"/></name><argument_list type="generic" pos:line="39" pos:column="82">&lt;<argument><expr><name pos:line="39" pos:column="83">char<pos:position pos:line="39" pos:column="87"/></name> <specifier pos:line="39" pos:column="88">const<pos:position pos:line="39" pos:column="93"/></specifier> <operator pos:line="39" pos:column="94">*<pos:position pos:line="39" pos:column="95"/></operator></expr></argument>&gt;<pos:position pos:line="39" pos:column="99"/></argument_list></name><argument_list pos:line="39" pos:column="96">(<argument><expr><operator pos:line="39" pos:column="97">new<pos:position pos:line="39" pos:column="100"/></operator> <name pos:line="39" pos:column="101">ACLRegexData<pos:position pos:line="39" pos:column="113"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="115">new<pos:position pos:line="39" pos:column="118"/></operator> <name pos:line="39" pos:column="119">ACLUrlLoginStrategy<pos:position pos:line="39" pos:column="138"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="140">name<pos:position pos:line="39" pos:column="144"/></name></expr></argument>)<pos:position pos:line="39" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="146"/></return> }<pos:position pos:line="39" pos:column="148"/></block></lambda></expr></argument>)<pos:position pos:line="39" pos:column="149"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="150"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">RegisterMaker<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><literal type="string" pos:line="40" pos:column="19">"urlpath_regex"<pos:position pos:line="40" pos:column="34"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="40" pos:column="36">[]<pos:position pos:line="40" pos:column="38"/></capture><parameter_list pos:line="40" pos:column="38">(<parameter><decl><type><name pos:line="40" pos:column="39">TypeName<pos:position pos:line="40" pos:column="47"/></name></type> <name pos:line="40" pos:column="48">name<pos:position pos:line="40" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="40" pos:column="53"/></parameter_list>-&gt;<type><name pos:line="40" pos:column="55">ACL<pos:position pos:line="40" pos:column="58"/></name><modifier pos:line="40" pos:column="58">*<pos:position pos:line="40" pos:column="59"/></modifier></type> <block pos:line="40" pos:column="60">{ <return pos:line="40" pos:column="62">return <expr><operator pos:line="40" pos:column="69">new<pos:position pos:line="40" pos:column="72"/></operator> <call><name><name pos:line="40" pos:column="73">ACLStrategised<pos:position pos:line="40" pos:column="87"/></name><argument_list type="generic" pos:line="40" pos:column="87">&lt;<argument><expr><name pos:line="40" pos:column="88">char<pos:position pos:line="40" pos:column="92"/></name> <specifier pos:line="40" pos:column="93">const<pos:position pos:line="40" pos:column="98"/></specifier> <operator pos:line="40" pos:column="99">*<pos:position pos:line="40" pos:column="100"/></operator></expr></argument>&gt;<pos:position pos:line="40" pos:column="104"/></argument_list></name><argument_list pos:line="40" pos:column="101">(<argument><expr><operator pos:line="40" pos:column="102">new<pos:position pos:line="40" pos:column="105"/></operator> <name pos:line="40" pos:column="106">ACLRegexData<pos:position pos:line="40" pos:column="118"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="120">new<pos:position pos:line="40" pos:column="123"/></operator> <name pos:line="40" pos:column="124">ACLUrlPathStrategy<pos:position pos:line="40" pos:column="142"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="144">name<pos:position pos:line="40" pos:column="148"/></name></expr></argument>)<pos:position pos:line="40" pos:column="149"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="150"/></return> }<pos:position pos:line="40" pos:column="152"/></block></lambda></expr></argument>)<pos:position pos:line="40" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="154"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">RegisterMaker<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><literal type="string" pos:line="41" pos:column="19">"port"<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="41" pos:column="27">[]<pos:position pos:line="41" pos:column="29"/></capture><parameter_list pos:line="41" pos:column="29">(<parameter><decl><type><name pos:line="41" pos:column="30">TypeName<pos:position pos:line="41" pos:column="38"/></name></type> <name pos:line="41" pos:column="39">name<pos:position pos:line="41" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="41" pos:column="44"/></parameter_list>-&gt;<type><name pos:line="41" pos:column="46">ACL<pos:position pos:line="41" pos:column="49"/></name><modifier pos:line="41" pos:column="49">*<pos:position pos:line="41" pos:column="50"/></modifier></type> <block pos:line="41" pos:column="51">{ <return pos:line="41" pos:column="53">return <expr><operator pos:line="41" pos:column="60">new<pos:position pos:line="41" pos:column="63"/></operator> <call><name><name pos:line="41" pos:column="64">ACLStrategised<pos:position pos:line="41" pos:column="78"/></name><argument_list type="generic" pos:line="41" pos:column="78">&lt;<argument><expr><name pos:line="41" pos:column="79">int<pos:position pos:line="41" pos:column="82"/></name></expr></argument>&gt;<pos:position pos:line="41" pos:column="86"/></argument_list></name><argument_list pos:line="41" pos:column="83">(<argument><expr><operator pos:line="41" pos:column="84">new<pos:position pos:line="41" pos:column="87"/></operator> <name pos:line="41" pos:column="88">ACLIntRange<pos:position pos:line="41" pos:column="99"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="101">new<pos:position pos:line="41" pos:column="104"/></operator> <name pos:line="41" pos:column="105">ACLUrlPortStrategy<pos:position pos:line="41" pos:column="123"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="125">name<pos:position pos:line="41" pos:column="129"/></name></expr></argument>)<pos:position pos:line="41" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="131"/></return> }<pos:position pos:line="41" pos:column="133"/></block></lambda></expr></argument>)<pos:position pos:line="41" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="135"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">RegisterMaker<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><literal type="string" pos:line="42" pos:column="19">"external"<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="42" pos:column="31">[]<pos:position pos:line="42" pos:column="33"/></capture><parameter_list pos:line="42" pos:column="33">(<parameter><decl><type><name pos:line="42" pos:column="34">TypeName<pos:position pos:line="42" pos:column="42"/></name></type> <name pos:line="42" pos:column="43">name<pos:position pos:line="42" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="42" pos:column="48"/></parameter_list>-&gt;<type><name pos:line="42" pos:column="50">ACL<pos:position pos:line="42" pos:column="53"/></name><modifier pos:line="42" pos:column="53">*<pos:position pos:line="42" pos:column="54"/></modifier></type> <block pos:line="42" pos:column="55">{ <return pos:line="42" pos:column="57">return <expr><operator pos:line="42" pos:column="64">new<pos:position pos:line="42" pos:column="67"/></operator> <call><name pos:line="42" pos:column="68">ACLExternal<pos:position pos:line="42" pos:column="79"/></name><argument_list pos:line="42" pos:column="79">(<argument><expr><name pos:line="42" pos:column="80">name<pos:position pos:line="42" pos:column="84"/></name></expr></argument>)<pos:position pos:line="42" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="86"/></return> }<pos:position pos:line="42" pos:column="88"/></block></lambda></expr></argument>)<pos:position pos:line="42" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="90"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">RegisterMaker<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><literal type="string" pos:line="43" pos:column="19">"squid_error"<pos:position pos:line="43" pos:column="32"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="43" pos:column="34">[]<pos:position pos:line="43" pos:column="36"/></capture><parameter_list pos:line="43" pos:column="36">(<parameter><decl><type><name pos:line="43" pos:column="37">TypeName<pos:position pos:line="43" pos:column="45"/></name></type> <name pos:line="43" pos:column="46">name<pos:position pos:line="43" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="43" pos:column="51"/></parameter_list>-&gt;<type><name pos:line="43" pos:column="53">ACL<pos:position pos:line="43" pos:column="56"/></name><modifier pos:line="43" pos:column="56">*<pos:position pos:line="43" pos:column="57"/></modifier></type> <block pos:line="43" pos:column="58">{ <return pos:line="43" pos:column="60">return <expr><operator pos:line="43" pos:column="67">new<pos:position pos:line="43" pos:column="70"/></operator> <call><name><name pos:line="43" pos:column="71">ACLStrategised<pos:position pos:line="43" pos:column="85"/></name><argument_list type="generic" pos:line="43" pos:column="85">&lt;<argument><expr><name pos:line="43" pos:column="86">err_type<pos:position pos:line="43" pos:column="94"/></name></expr></argument>&gt;<pos:position pos:line="43" pos:column="98"/></argument_list></name><argument_list pos:line="43" pos:column="95">(<argument><expr><operator pos:line="43" pos:column="96">new<pos:position pos:line="43" pos:column="99"/></operator> <name pos:line="43" pos:column="100">ACLSquidErrorData<pos:position pos:line="43" pos:column="117"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="119">new<pos:position pos:line="43" pos:column="122"/></operator> <name pos:line="43" pos:column="123">ACLSquidErrorStrategy<pos:position pos:line="43" pos:column="144"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="146">name<pos:position pos:line="43" pos:column="150"/></name></expr></argument>)<pos:position pos:line="43" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="152"/></return> }<pos:position pos:line="43" pos:column="154"/></block></lambda></expr></argument>)<pos:position pos:line="43" pos:column="155"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="156"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">RegisterMaker<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><literal type="string" pos:line="44" pos:column="19">"connections_encrypted"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="44" pos:column="44">[]<pos:position pos:line="44" pos:column="46"/></capture><parameter_list pos:line="44" pos:column="46">(<parameter><decl><type><name pos:line="44" pos:column="47">TypeName<pos:position pos:line="44" pos:column="55"/></name></type> <name pos:line="44" pos:column="56">name<pos:position pos:line="44" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="44" pos:column="61"/></parameter_list>-&gt;<type><name pos:line="44" pos:column="63">ACL<pos:position pos:line="44" pos:column="66"/></name><modifier pos:line="44" pos:column="66">*<pos:position pos:line="44" pos:column="67"/></modifier></type> <block pos:line="44" pos:column="68">{ <return pos:line="44" pos:column="70">return <expr><operator pos:line="44" pos:column="77">new<pos:position pos:line="44" pos:column="80"/></operator> <call><name><name pos:line="44" pos:column="81">Acl<pos:position pos:line="44" pos:column="84"/></name><operator pos:line="44" pos:column="84">::<pos:position pos:line="44" pos:column="86"/></operator><name pos:line="44" pos:column="86">ConnectionsEncrypted<pos:position pos:line="44" pos:column="106"/></name></name><argument_list pos:line="44" pos:column="106">(<argument><expr><name pos:line="44" pos:column="107">name<pos:position pos:line="44" pos:column="111"/></name></expr></argument>)<pos:position pos:line="44" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="113"/></return> }<pos:position pos:line="44" pos:column="115"/></block></lambda></expr></argument>)<pos:position pos:line="44" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="117"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">RegisterMaker<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><literal type="string" pos:line="45" pos:column="19">"tag"<pos:position pos:line="45" pos:column="24"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="45" pos:column="26">[]<pos:position pos:line="45" pos:column="28"/></capture><parameter_list pos:line="45" pos:column="28">(<parameter><decl><type><name pos:line="45" pos:column="29">TypeName<pos:position pos:line="45" pos:column="37"/></name></type> <name pos:line="45" pos:column="38">name<pos:position pos:line="45" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="45" pos:column="43"/></parameter_list>-&gt;<type><name pos:line="45" pos:column="45">ACL<pos:position pos:line="45" pos:column="48"/></name><modifier pos:line="45" pos:column="48">*<pos:position pos:line="45" pos:column="49"/></modifier></type> <block pos:line="45" pos:column="50">{ <return pos:line="45" pos:column="52">return <expr><operator pos:line="45" pos:column="59">new<pos:position pos:line="45" pos:column="62"/></operator> <call><name><name pos:line="45" pos:column="63">ACLStrategised<pos:position pos:line="45" pos:column="77"/></name><argument_list type="generic" pos:line="45" pos:column="77">&lt;<argument><expr><specifier pos:line="45" pos:column="78">const<pos:position pos:line="45" pos:column="83"/></specifier> <name pos:line="45" pos:column="84">char<pos:position pos:line="45" pos:column="88"/></name> <operator pos:line="45" pos:column="89">*<pos:position pos:line="45" pos:column="90"/></operator></expr></argument>&gt;<pos:position pos:line="45" pos:column="94"/></argument_list></name><argument_list pos:line="45" pos:column="91">(<argument><expr><operator pos:line="45" pos:column="92">new<pos:position pos:line="45" pos:column="95"/></operator> <name pos:line="45" pos:column="96">ACLStringData<pos:position pos:line="45" pos:column="109"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="111">new<pos:position pos:line="45" pos:column="114"/></operator> <name pos:line="45" pos:column="115">ACLTagStrategy<pos:position pos:line="45" pos:column="129"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="131">name<pos:position pos:line="45" pos:column="135"/></name></expr></argument>)<pos:position pos:line="45" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="137"/></return> }<pos:position pos:line="45" pos:column="139"/></block></lambda></expr></argument>)<pos:position pos:line="45" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="141"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">RegisterMaker<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><literal type="string" pos:line="46" pos:column="19">"note"<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="46" pos:column="27">[]<pos:position pos:line="46" pos:column="29"/></capture><parameter_list pos:line="46" pos:column="29">(<parameter><decl><type><name pos:line="46" pos:column="30">TypeName<pos:position pos:line="46" pos:column="38"/></name></type> <name pos:line="46" pos:column="39">name<pos:position pos:line="46" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="46" pos:column="44"/></parameter_list>-&gt;<type><name pos:line="46" pos:column="46">ACL<pos:position pos:line="46" pos:column="49"/></name><modifier pos:line="46" pos:column="49">*<pos:position pos:line="46" pos:column="50"/></modifier></type> <block pos:line="46" pos:column="51">{ <return pos:line="46" pos:column="53">return <expr><operator pos:line="46" pos:column="60">new<pos:position pos:line="46" pos:column="63"/></operator> <call><name><name pos:line="46" pos:column="64">ACLStrategised<pos:position pos:line="46" pos:column="78"/></name><argument_list type="generic" pos:line="46" pos:column="78">&lt;<argument><expr><name><name pos:line="46" pos:column="79">NotePairs<pos:position pos:line="46" pos:column="88"/></name><operator pos:line="46" pos:column="88">::<pos:position pos:line="46" pos:column="90"/></operator><name pos:line="46" pos:column="90">Entry<pos:position pos:line="46" pos:column="95"/></name></name><operator pos:line="46" pos:column="95">*<pos:position pos:line="46" pos:column="96"/></operator></expr></argument>&gt;<pos:position pos:line="46" pos:column="100"/></argument_list></name><argument_list pos:line="46" pos:column="97">(<argument><expr><operator pos:line="46" pos:column="98">new<pos:position pos:line="46" pos:column="101"/></operator> <name pos:line="46" pos:column="102">ACLNoteData<pos:position pos:line="46" pos:column="113"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="115">new<pos:position pos:line="46" pos:column="118"/></operator> <name pos:line="46" pos:column="119">ACLNoteStrategy<pos:position pos:line="46" pos:column="134"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="136">name<pos:position pos:line="46" pos:column="140"/></name></expr></argument>)<pos:position pos:line="46" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="142"/></return> }<pos:position pos:line="46" pos:column="144"/></block></lambda></expr></argument>)<pos:position pos:line="46" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="146"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">RegisterMaker<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><literal type="string" pos:line="47" pos:column="19">"has"<pos:position pos:line="47" pos:column="24"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="47" pos:column="26">[]<pos:position pos:line="47" pos:column="28"/></capture><parameter_list pos:line="47" pos:column="28">(<parameter><decl><type><name pos:line="47" pos:column="29">TypeName<pos:position pos:line="47" pos:column="37"/></name></type> <name pos:line="47" pos:column="38">name<pos:position pos:line="47" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="47" pos:column="43"/></parameter_list>-&gt;<type><name pos:line="47" pos:column="45">ACL<pos:position pos:line="47" pos:column="48"/></name><modifier pos:line="47" pos:column="48">*<pos:position pos:line="47" pos:column="49"/></modifier></type> <block pos:line="47" pos:column="50">{<return pos:line="47" pos:column="51">return <expr><operator pos:line="47" pos:column="58">new<pos:position pos:line="47" pos:column="61"/></operator> <call><name><name pos:line="47" pos:column="62">ACLStrategised<pos:position pos:line="47" pos:column="76"/></name><argument_list type="generic" pos:line="47" pos:column="76">&lt;<argument><expr><name pos:line="47" pos:column="77">ACLChecklist<pos:position pos:line="47" pos:column="89"/></name> <operator pos:line="47" pos:column="90">*<pos:position pos:line="47" pos:column="91"/></operator></expr></argument>&gt;<pos:position pos:line="47" pos:column="95"/></argument_list></name><argument_list pos:line="47" pos:column="92">(<argument><expr><operator pos:line="47" pos:column="93">new<pos:position pos:line="47" pos:column="96"/></operator> <name pos:line="47" pos:column="97">ACLHasComponentData<pos:position pos:line="47" pos:column="116"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="118">new<pos:position pos:line="47" pos:column="121"/></operator> <name pos:line="47" pos:column="122">ACLHasComponentStrategy<pos:position pos:line="47" pos:column="145"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="147">name<pos:position pos:line="47" pos:column="151"/></name></expr></argument>)<pos:position pos:line="47" pos:column="152"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="153"/></return> }<pos:position pos:line="47" pos:column="155"/></block></lambda></expr></argument>)<pos:position pos:line="47" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="157"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">RegisterMaker<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><literal type="string" pos:line="48" pos:column="19">"transaction_initiator"<pos:position pos:line="48" pos:column="42"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="48" pos:column="44">[]<pos:position pos:line="48" pos:column="46"/></capture><parameter_list pos:line="48" pos:column="46">(<parameter><decl><type><name pos:line="48" pos:column="47">TypeName<pos:position pos:line="48" pos:column="55"/></name></type> <name pos:line="48" pos:column="56">name<pos:position pos:line="48" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="48" pos:column="61"/></parameter_list>-&gt;<type><name pos:line="48" pos:column="63">ACL<pos:position pos:line="48" pos:column="66"/></name><modifier pos:line="48" pos:column="66">*<pos:position pos:line="48" pos:column="67"/></modifier></type> <block pos:line="48" pos:column="68">{<return pos:line="48" pos:column="69">return <expr><operator pos:line="48" pos:column="76">new<pos:position pos:line="48" pos:column="79"/></operator> <call><name><name pos:line="48" pos:column="80">Acl<pos:position pos:line="48" pos:column="83"/></name><operator pos:line="48" pos:column="83">::<pos:position pos:line="48" pos:column="85"/></operator><name pos:line="48" pos:column="85">TransactionInitiator<pos:position pos:line="48" pos:column="105"/></name></name><argument_list pos:line="48" pos:column="105">(<argument><expr><name pos:line="48" pos:column="106">name<pos:position pos:line="48" pos:column="110"/></name></expr></argument>)<pos:position pos:line="48" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="112"/></return>}<pos:position pos:line="48" pos:column="113"/></block></lambda></expr></argument>)<pos:position pos:line="48" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="115"/></expr_stmt>

<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">USE_OPENSSL<pos:position pos:line="50" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">RegisterMaker<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><literal type="string" pos:line="51" pos:column="19">"ssl_error"<pos:position pos:line="51" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="51" pos:column="32">[]<pos:position pos:line="51" pos:column="34"/></capture><parameter_list pos:line="51" pos:column="34">(<parameter><decl><type><name pos:line="51" pos:column="35">TypeName<pos:position pos:line="51" pos:column="43"/></name></type> <name pos:line="51" pos:column="44">name<pos:position pos:line="51" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="51" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="51" pos:column="51">ACL<pos:position pos:line="51" pos:column="54"/></name><modifier pos:line="51" pos:column="54">*<pos:position pos:line="51" pos:column="55"/></modifier></type> <block pos:line="51" pos:column="56">{ <return pos:line="51" pos:column="58">return <expr><operator pos:line="51" pos:column="65">new<pos:position pos:line="51" pos:column="68"/></operator> <call><name><name pos:line="51" pos:column="69">ACLStrategised<pos:position pos:line="51" pos:column="83"/></name><argument_list type="generic" pos:line="51" pos:column="83">&lt;<argument><expr><specifier pos:line="51" pos:column="84">const<pos:position pos:line="51" pos:column="89"/></specifier> <name><name pos:line="51" pos:column="90">Security<pos:position pos:line="51" pos:column="98"/></name><operator pos:line="51" pos:column="98">::<pos:position pos:line="51" pos:column="100"/></operator><name pos:line="51" pos:column="100">CertErrors<pos:position pos:line="51" pos:column="110"/></name></name> <operator pos:line="51" pos:column="111">*<pos:position pos:line="51" pos:column="112"/></operator></expr></argument>&gt;<pos:position pos:line="51" pos:column="116"/></argument_list></name><argument_list pos:line="51" pos:column="113">(<argument><expr><operator pos:line="51" pos:column="114">new<pos:position pos:line="51" pos:column="117"/></operator> <name pos:line="51" pos:column="118">ACLSslErrorData<pos:position pos:line="51" pos:column="133"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="135">new<pos:position pos:line="51" pos:column="138"/></operator> <name pos:line="51" pos:column="139">ACLSslErrorStrategy<pos:position pos:line="51" pos:column="158"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="160">name<pos:position pos:line="51" pos:column="164"/></name></expr></argument>)<pos:position pos:line="51" pos:column="165"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="166"/></return> }<pos:position pos:line="51" pos:column="168"/></block></lambda></expr></argument>)<pos:position pos:line="51" pos:column="169"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="170"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">RegisterMaker<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><literal type="string" pos:line="52" pos:column="19">"user_cert"<pos:position pos:line="52" pos:column="30"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="52" pos:column="32">[]<pos:position pos:line="52" pos:column="34"/></capture><parameter_list pos:line="52" pos:column="34">(<parameter><decl><type><name pos:line="52" pos:column="35">TypeName<pos:position pos:line="52" pos:column="43"/></name></type> <name pos:line="52" pos:column="44">name<pos:position pos:line="52" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="52" pos:column="49"/></parameter_list>-&gt;<type><name pos:line="52" pos:column="51">ACL<pos:position pos:line="52" pos:column="54"/></name><modifier pos:line="52" pos:column="54">*<pos:position pos:line="52" pos:column="55"/></modifier></type> <block pos:line="52" pos:column="56">{ <return pos:line="52" pos:column="58">return <expr><operator pos:line="52" pos:column="65">new<pos:position pos:line="52" pos:column="68"/></operator> <call><name><name pos:line="52" pos:column="69">ACLStrategised<pos:position pos:line="52" pos:column="83"/></name><argument_list type="generic" pos:line="52" pos:column="83">&lt;<argument><expr><name pos:line="52" pos:column="84">X509<pos:position pos:line="52" pos:column="88"/></name><operator pos:line="52" pos:column="88">*<pos:position pos:line="52" pos:column="89"/></operator></expr></argument>&gt;<pos:position pos:line="52" pos:column="93"/></argument_list></name><argument_list pos:line="52" pos:column="90">(<argument><expr><operator pos:line="52" pos:column="91">new<pos:position pos:line="52" pos:column="94"/></operator> <call><name pos:line="52" pos:column="95">ACLCertificateData<pos:position pos:line="52" pos:column="113"/></name><argument_list pos:line="52" pos:column="113">(<argument><expr><name><name pos:line="52" pos:column="114">Ssl<pos:position pos:line="52" pos:column="117"/></name><operator pos:line="52" pos:column="117">::<pos:position pos:line="52" pos:column="119"/></operator><name pos:line="52" pos:column="119">GetX509UserAttribute<pos:position pos:line="52" pos:column="139"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="141">"*"<pos:position pos:line="52" pos:column="144"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="145"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="52" pos:column="147">new<pos:position pos:line="52" pos:column="150"/></operator> <name pos:line="52" pos:column="151">ACLCertificateStrategy<pos:position pos:line="52" pos:column="173"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="175">name<pos:position pos:line="52" pos:column="179"/></name></expr></argument>)<pos:position pos:line="52" pos:column="180"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="181"/></return> }<pos:position pos:line="52" pos:column="183"/></block></lambda></expr></argument>)<pos:position pos:line="52" pos:column="184"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="185"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">RegisterMaker<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><literal type="string" pos:line="53" pos:column="19">"ca_cert"<pos:position pos:line="53" pos:column="28"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="53" pos:column="30">[]<pos:position pos:line="53" pos:column="32"/></capture><parameter_list pos:line="53" pos:column="32">(<parameter><decl><type><name pos:line="53" pos:column="33">TypeName<pos:position pos:line="53" pos:column="41"/></name></type> <name pos:line="53" pos:column="42">name<pos:position pos:line="53" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="53" pos:column="47"/></parameter_list>-&gt;<type><name pos:line="53" pos:column="49">ACL<pos:position pos:line="53" pos:column="52"/></name><modifier pos:line="53" pos:column="52">*<pos:position pos:line="53" pos:column="53"/></modifier></type> <block pos:line="53" pos:column="54">{ <return pos:line="53" pos:column="56">return <expr><operator pos:line="53" pos:column="63">new<pos:position pos:line="53" pos:column="66"/></operator> <call><name><name pos:line="53" pos:column="67">ACLStrategised<pos:position pos:line="53" pos:column="81"/></name><argument_list type="generic" pos:line="53" pos:column="81">&lt;<argument><expr><name pos:line="53" pos:column="82">X509<pos:position pos:line="53" pos:column="86"/></name><operator pos:line="53" pos:column="86">*<pos:position pos:line="53" pos:column="87"/></operator></expr></argument>&gt;<pos:position pos:line="53" pos:column="91"/></argument_list></name><argument_list pos:line="53" pos:column="88">(<argument><expr><operator pos:line="53" pos:column="89">new<pos:position pos:line="53" pos:column="92"/></operator> <call><name pos:line="53" pos:column="93">ACLCertificateData<pos:position pos:line="53" pos:column="111"/></name><argument_list pos:line="53" pos:column="111">(<argument><expr><name><name pos:line="53" pos:column="112">Ssl<pos:position pos:line="53" pos:column="115"/></name><operator pos:line="53" pos:column="115">::<pos:position pos:line="53" pos:column="117"/></operator><name pos:line="53" pos:column="117">GetX509CAAttribute<pos:position pos:line="53" pos:column="135"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="137">"*"<pos:position pos:line="53" pos:column="140"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="141"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="53" pos:column="143">new<pos:position pos:line="53" pos:column="146"/></operator> <name pos:line="53" pos:column="147">ACLCertificateStrategy<pos:position pos:line="53" pos:column="169"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="171">name<pos:position pos:line="53" pos:column="175"/></name></expr></argument>)<pos:position pos:line="53" pos:column="176"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="177"/></return> }<pos:position pos:line="53" pos:column="179"/></block></lambda></expr></argument>)<pos:position pos:line="53" pos:column="180"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="181"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">RegisterMaker<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><literal type="string" pos:line="54" pos:column="19">"server_cert_fingerprint"<pos:position pos:line="54" pos:column="44"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="54" pos:column="46">[]<pos:position pos:line="54" pos:column="48"/></capture><parameter_list pos:line="54" pos:column="48">(<parameter><decl><type><name pos:line="54" pos:column="49">TypeName<pos:position pos:line="54" pos:column="57"/></name></type> <name pos:line="54" pos:column="58">name<pos:position pos:line="54" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="54" pos:column="63"/></parameter_list>-&gt;<type><name pos:line="54" pos:column="65">ACL<pos:position pos:line="54" pos:column="68"/></name><modifier pos:line="54" pos:column="68">*<pos:position pos:line="54" pos:column="69"/></modifier></type> <block pos:line="54" pos:column="70">{ <return pos:line="54" pos:column="72">return <expr><operator pos:line="54" pos:column="79">new<pos:position pos:line="54" pos:column="82"/></operator> <call><name><name pos:line="54" pos:column="83">ACLStrategised<pos:position pos:line="54" pos:column="97"/></name><argument_list type="generic" pos:line="54" pos:column="97">&lt;<argument><expr><name pos:line="54" pos:column="98">X509<pos:position pos:line="54" pos:column="102"/></name><operator pos:line="54" pos:column="102">*<pos:position pos:line="54" pos:column="103"/></operator></expr></argument>&gt;<pos:position pos:line="54" pos:column="107"/></argument_list></name><argument_list pos:line="54" pos:column="104">(<argument><expr><operator pos:line="54" pos:column="105">new<pos:position pos:line="54" pos:column="108"/></operator> <call><name pos:line="54" pos:column="109">ACLCertificateData<pos:position pos:line="54" pos:column="127"/></name><argument_list pos:line="54" pos:column="127">(<argument><expr><name><name pos:line="54" pos:column="128">Ssl<pos:position pos:line="54" pos:column="131"/></name><operator pos:line="54" pos:column="131">::<pos:position pos:line="54" pos:column="133"/></operator><name pos:line="54" pos:column="133">GetX509Fingerprint<pos:position pos:line="54" pos:column="151"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="153">"-sha1"<pos:position pos:line="54" pos:column="160"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="54" pos:column="162">true<pos:position pos:line="54" pos:column="166"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="167"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="54" pos:column="169">new<pos:position pos:line="54" pos:column="172"/></operator> <name pos:line="54" pos:column="173">ACLServerCertificateStrategy<pos:position pos:line="54" pos:column="201"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="203">name<pos:position pos:line="54" pos:column="207"/></name></expr></argument>)<pos:position pos:line="54" pos:column="208"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="209"/></return> }<pos:position pos:line="54" pos:column="211"/></block></lambda></expr></argument>)<pos:position pos:line="54" pos:column="212"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="213"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">RegisterMaker<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><literal type="string" pos:line="55" pos:column="19">"at_step"<pos:position pos:line="55" pos:column="28"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="55" pos:column="30">[]<pos:position pos:line="55" pos:column="32"/></capture><parameter_list pos:line="55" pos:column="32">(<parameter><decl><type><name pos:line="55" pos:column="33">TypeName<pos:position pos:line="55" pos:column="41"/></name></type> <name pos:line="55" pos:column="42">name<pos:position pos:line="55" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="55" pos:column="47"/></parameter_list>-&gt;<type><name pos:line="55" pos:column="49">ACL<pos:position pos:line="55" pos:column="52"/></name><modifier pos:line="55" pos:column="52">*<pos:position pos:line="55" pos:column="53"/></modifier></type> <block pos:line="55" pos:column="54">{ <return pos:line="55" pos:column="56">return <expr><operator pos:line="55" pos:column="63">new<pos:position pos:line="55" pos:column="66"/></operator> <call><name><name pos:line="55" pos:column="67">ACLStrategised<pos:position pos:line="55" pos:column="81"/></name><argument_list type="generic" pos:line="55" pos:column="81">&lt;<argument><expr><name><name pos:line="55" pos:column="82">Ssl<pos:position pos:line="55" pos:column="85"/></name><operator pos:line="55" pos:column="85">::<pos:position pos:line="55" pos:column="87"/></operator><name pos:line="55" pos:column="87">BumpStep<pos:position pos:line="55" pos:column="95"/></name></name></expr></argument>&gt;<pos:position pos:line="55" pos:column="99"/></argument_list></name><argument_list pos:line="55" pos:column="96">(<argument><expr><operator pos:line="55" pos:column="97">new<pos:position pos:line="55" pos:column="100"/></operator> <name pos:line="55" pos:column="101">ACLAtStepData<pos:position pos:line="55" pos:column="114"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="116">new<pos:position pos:line="55" pos:column="119"/></operator> <name pos:line="55" pos:column="120">ACLAtStepStrategy<pos:position pos:line="55" pos:column="137"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="139">name<pos:position pos:line="55" pos:column="143"/></name></expr></argument>)<pos:position pos:line="55" pos:column="144"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="145"/></return> }<pos:position pos:line="55" pos:column="147"/></block></lambda></expr></argument>)<pos:position pos:line="55" pos:column="148"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="149"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">RegisterMaker<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><literal type="string" pos:line="56" pos:column="19">"ssl::server_name"<pos:position pos:line="56" pos:column="37"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="56" pos:column="39">[]<pos:position pos:line="56" pos:column="41"/></capture><parameter_list pos:line="56" pos:column="41">(<parameter><decl><type><name pos:line="56" pos:column="42">TypeName<pos:position pos:line="56" pos:column="50"/></name></type> <name pos:line="56" pos:column="51">name<pos:position pos:line="56" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="56" pos:column="56"/></parameter_list>-&gt;<type><name pos:line="56" pos:column="58">ACL<pos:position pos:line="56" pos:column="61"/></name><modifier pos:line="56" pos:column="61">*<pos:position pos:line="56" pos:column="62"/></modifier></type> <block pos:line="56" pos:column="63">{ <return pos:line="56" pos:column="65">return <expr><operator pos:line="56" pos:column="72">new<pos:position pos:line="56" pos:column="75"/></operator> <call><name><name pos:line="56" pos:column="76">ACLStrategised<pos:position pos:line="56" pos:column="90"/></name><argument_list type="generic" pos:line="56" pos:column="90">&lt;<argument><expr><name pos:line="56" pos:column="91">char<pos:position pos:line="56" pos:column="95"/></name> <specifier pos:line="56" pos:column="96">const<pos:position pos:line="56" pos:column="101"/></specifier> <operator pos:line="56" pos:column="102">*<pos:position pos:line="56" pos:column="103"/></operator></expr></argument>&gt;<pos:position pos:line="56" pos:column="107"/></argument_list></name><argument_list pos:line="56" pos:column="104">(<argument><expr><operator pos:line="56" pos:column="105">new<pos:position pos:line="56" pos:column="108"/></operator> <name pos:line="56" pos:column="109">ACLServerNameData<pos:position pos:line="56" pos:column="126"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="128">new<pos:position pos:line="56" pos:column="131"/></operator> <name pos:line="56" pos:column="132">ACLServerNameStrategy<pos:position pos:line="56" pos:column="153"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="155">name<pos:position pos:line="56" pos:column="159"/></name></expr></argument>)<pos:position pos:line="56" pos:column="160"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="161"/></return> }<pos:position pos:line="56" pos:column="163"/></block></lambda></expr></argument>)<pos:position pos:line="56" pos:column="164"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="165"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">RegisterMaker<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><literal type="string" pos:line="57" pos:column="19">"ssl::server_name_regex"<pos:position pos:line="57" pos:column="43"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="57" pos:column="45">[]<pos:position pos:line="57" pos:column="47"/></capture><parameter_list pos:line="57" pos:column="47">(<parameter><decl><type><name pos:line="57" pos:column="48">TypeName<pos:position pos:line="57" pos:column="56"/></name></type> <name pos:line="57" pos:column="57">name<pos:position pos:line="57" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="57" pos:column="62"/></parameter_list>-&gt;<type><name pos:line="57" pos:column="64">ACL<pos:position pos:line="57" pos:column="67"/></name><modifier pos:line="57" pos:column="67">*<pos:position pos:line="57" pos:column="68"/></modifier></type> <block pos:line="57" pos:column="69">{ <return pos:line="57" pos:column="71">return <expr><operator pos:line="57" pos:column="78">new<pos:position pos:line="57" pos:column="81"/></operator> <call><name><name pos:line="57" pos:column="82">ACLStrategised<pos:position pos:line="57" pos:column="96"/></name><argument_list type="generic" pos:line="57" pos:column="96">&lt;<argument><expr><name pos:line="57" pos:column="97">char<pos:position pos:line="57" pos:column="101"/></name> <specifier pos:line="57" pos:column="102">const<pos:position pos:line="57" pos:column="107"/></specifier> <operator pos:line="57" pos:column="108">*<pos:position pos:line="57" pos:column="109"/></operator></expr></argument>&gt;<pos:position pos:line="57" pos:column="113"/></argument_list></name><argument_list pos:line="57" pos:column="110">(<argument><expr><operator pos:line="57" pos:column="111">new<pos:position pos:line="57" pos:column="114"/></operator> <name pos:line="57" pos:column="115">ACLRegexData<pos:position pos:line="57" pos:column="127"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="129">new<pos:position pos:line="57" pos:column="132"/></operator> <name pos:line="57" pos:column="133">ACLServerNameStrategy<pos:position pos:line="57" pos:column="154"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="156">name<pos:position pos:line="57" pos:column="160"/></name></expr></argument>)<pos:position pos:line="57" pos:column="161"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="162"/></return> }<pos:position pos:line="57" pos:column="164"/></block></lambda></expr></argument>)<pos:position pos:line="57" pos:column="165"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="166"/></expr_stmt>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">if<pos:position pos:line="60" pos:column="4"/></cpp:directive> <expr><name pos:line="60" pos:column="5">USE_SQUID_EUI<pos:position pos:line="60" pos:column="18"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">RegisterMaker<pos:position pos:line="61" pos:column="18"/></name><argument_list pos:line="61" pos:column="18">(<argument><expr><literal type="string" pos:line="61" pos:column="19">"arp"<pos:position pos:line="61" pos:column="24"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="61" pos:column="26">[]<pos:position pos:line="61" pos:column="28"/></capture><parameter_list pos:line="61" pos:column="28">(<parameter><decl><type><name pos:line="61" pos:column="29">TypeName<pos:position pos:line="61" pos:column="37"/></name></type> <name pos:line="61" pos:column="38">name<pos:position pos:line="61" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="61" pos:column="43"/></parameter_list>-&gt;<type><name pos:line="61" pos:column="45">ACL<pos:position pos:line="61" pos:column="48"/></name><modifier pos:line="61" pos:column="48">*<pos:position pos:line="61" pos:column="49"/></modifier></type> <block pos:line="61" pos:column="50">{ <return pos:line="61" pos:column="52">return <expr><operator pos:line="61" pos:column="59">new<pos:position pos:line="61" pos:column="62"/></operator> <call><name pos:line="61" pos:column="63">ACLARP<pos:position pos:line="61" pos:column="69"/></name><argument_list pos:line="61" pos:column="69">(<argument><expr><name pos:line="61" pos:column="70">name<pos:position pos:line="61" pos:column="74"/></name></expr></argument>)<pos:position pos:line="61" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="76"/></return> }<pos:position pos:line="61" pos:column="78"/></block></lambda></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">RegisterMaker<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><literal type="string" pos:line="62" pos:column="19">"eui64"<pos:position pos:line="62" pos:column="26"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="62" pos:column="28">[]<pos:position pos:line="62" pos:column="30"/></capture><parameter_list pos:line="62" pos:column="30">(<parameter><decl><type><name pos:line="62" pos:column="31">TypeName<pos:position pos:line="62" pos:column="39"/></name></type> <name pos:line="62" pos:column="40">name<pos:position pos:line="62" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="62" pos:column="45"/></parameter_list>-&gt;<type><name pos:line="62" pos:column="47">ACL<pos:position pos:line="62" pos:column="50"/></name><modifier pos:line="62" pos:column="50">*<pos:position pos:line="62" pos:column="51"/></modifier></type> <block pos:line="62" pos:column="52">{ <return pos:line="62" pos:column="54">return <expr><operator pos:line="62" pos:column="61">new<pos:position pos:line="62" pos:column="64"/></operator> <call><name pos:line="62" pos:column="65">ACLEui64<pos:position pos:line="62" pos:column="73"/></name><argument_list pos:line="62" pos:column="73">(<argument><expr><name pos:line="62" pos:column="74">name<pos:position pos:line="62" pos:column="78"/></name></expr></argument>)<pos:position pos:line="62" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="80"/></return> }<pos:position pos:line="62" pos:column="82"/></block></lambda></expr></argument>)<pos:position pos:line="62" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if<pos:position pos:line="65" pos:column="4"/></cpp:directive> <expr><name pos:line="65" pos:column="5">USE_IDENT<pos:position pos:line="65" pos:column="14"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">RegisterMaker<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><literal type="string" pos:line="66" pos:column="19">"ident"<pos:position pos:line="66" pos:column="26"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="66" pos:column="28">[]<pos:position pos:line="66" pos:column="30"/></capture><parameter_list pos:line="66" pos:column="30">(<parameter><decl><type><name pos:line="66" pos:column="31">TypeName<pos:position pos:line="66" pos:column="39"/></name></type> <name pos:line="66" pos:column="40">name<pos:position pos:line="66" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="66" pos:column="45"/></parameter_list>-&gt;<type><name pos:line="66" pos:column="47">ACL<pos:position pos:line="66" pos:column="50"/></name><modifier pos:line="66" pos:column="50">*<pos:position pos:line="66" pos:column="51"/></modifier></type> <block pos:line="66" pos:column="52">{ <return pos:line="66" pos:column="54">return <expr><operator pos:line="66" pos:column="61">new<pos:position pos:line="66" pos:column="64"/></operator> <call><name pos:line="66" pos:column="65">ACLIdent<pos:position pos:line="66" pos:column="73"/></name><argument_list pos:line="66" pos:column="73">(<argument><expr><operator pos:line="66" pos:column="74">new<pos:position pos:line="66" pos:column="77"/></operator> <name pos:line="66" pos:column="78">ACLUserData<pos:position pos:line="66" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="91">name<pos:position pos:line="66" pos:column="95"/></name></expr></argument>)<pos:position pos:line="66" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="97"/></return> }<pos:position pos:line="66" pos:column="99"/></block></lambda></expr></argument>)<pos:position pos:line="66" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="101"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">RegisterMaker<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><literal type="string" pos:line="67" pos:column="19">"ident_regex"<pos:position pos:line="67" pos:column="32"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="67" pos:column="34">[]<pos:position pos:line="67" pos:column="36"/></capture><parameter_list pos:line="67" pos:column="36">(<parameter><decl><type><name pos:line="67" pos:column="37">TypeName<pos:position pos:line="67" pos:column="45"/></name></type> <name pos:line="67" pos:column="46">name<pos:position pos:line="67" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="67" pos:column="51"/></parameter_list>-&gt;<type><name pos:line="67" pos:column="53">ACL<pos:position pos:line="67" pos:column="56"/></name><modifier pos:line="67" pos:column="56">*<pos:position pos:line="67" pos:column="57"/></modifier></type> <block pos:line="67" pos:column="58">{ <return pos:line="67" pos:column="60">return <expr><operator pos:line="67" pos:column="67">new<pos:position pos:line="67" pos:column="70"/></operator> <call><name pos:line="67" pos:column="71">ACLIdent<pos:position pos:line="67" pos:column="79"/></name><argument_list pos:line="67" pos:column="79">(<argument><expr><operator pos:line="67" pos:column="80">new<pos:position pos:line="67" pos:column="83"/></operator> <name pos:line="67" pos:column="84">ACLRegexData<pos:position pos:line="67" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="98">name<pos:position pos:line="67" pos:column="102"/></name></expr></argument>)<pos:position pos:line="67" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="104"/></return> }<pos:position pos:line="67" pos:column="106"/></block></lambda></expr></argument>)<pos:position pos:line="67" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="108"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">if<pos:position pos:line="70" pos:column="4"/></cpp:directive> <expr><name pos:line="70" pos:column="5">USE_AUTH<pos:position pos:line="70" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">RegisterMaker<pos:position pos:line="71" pos:column="18"/></name><argument_list pos:line="71" pos:column="18">(<argument><expr><literal type="string" pos:line="71" pos:column="19">"ext_user"<pos:position pos:line="71" pos:column="29"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="71" pos:column="31">[]<pos:position pos:line="71" pos:column="33"/></capture><parameter_list pos:line="71" pos:column="33">(<parameter><decl><type><name pos:line="71" pos:column="34">TypeName<pos:position pos:line="71" pos:column="42"/></name></type> <name pos:line="71" pos:column="43">name<pos:position pos:line="71" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="71" pos:column="48"/></parameter_list>-&gt;<type><name pos:line="71" pos:column="50">ACL<pos:position pos:line="71" pos:column="53"/></name><modifier pos:line="71" pos:column="53">*<pos:position pos:line="71" pos:column="54"/></modifier></type> <block pos:line="71" pos:column="55">{ <return pos:line="71" pos:column="57">return <expr><operator pos:line="71" pos:column="64">new<pos:position pos:line="71" pos:column="67"/></operator> <call><name pos:line="71" pos:column="68">ACLExtUser<pos:position pos:line="71" pos:column="78"/></name><argument_list pos:line="71" pos:column="78">(<argument><expr><operator pos:line="71" pos:column="79">new<pos:position pos:line="71" pos:column="82"/></operator> <name pos:line="71" pos:column="83">ACLUserData<pos:position pos:line="71" pos:column="94"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="96">name<pos:position pos:line="71" pos:column="100"/></name></expr></argument>)<pos:position pos:line="71" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="102"/></return> }<pos:position pos:line="71" pos:column="104"/></block></lambda></expr></argument>)<pos:position pos:line="71" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="106"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">RegisterMaker<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><literal type="string" pos:line="72" pos:column="19">"ext_user_regex"<pos:position pos:line="72" pos:column="35"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="72" pos:column="37">[]<pos:position pos:line="72" pos:column="39"/></capture><parameter_list pos:line="72" pos:column="39">(<parameter><decl><type><name pos:line="72" pos:column="40">TypeName<pos:position pos:line="72" pos:column="48"/></name></type> <name pos:line="72" pos:column="49">name<pos:position pos:line="72" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="72" pos:column="54"/></parameter_list>-&gt;<type><name pos:line="72" pos:column="56">ACL<pos:position pos:line="72" pos:column="59"/></name><modifier pos:line="72" pos:column="59">*<pos:position pos:line="72" pos:column="60"/></modifier></type> <block pos:line="72" pos:column="61">{ <return pos:line="72" pos:column="63">return <expr><operator pos:line="72" pos:column="70">new<pos:position pos:line="72" pos:column="73"/></operator> <call><name pos:line="72" pos:column="74">ACLExtUser<pos:position pos:line="72" pos:column="84"/></name><argument_list pos:line="72" pos:column="84">(<argument><expr><operator pos:line="72" pos:column="85">new<pos:position pos:line="72" pos:column="88"/></operator> <name pos:line="72" pos:column="89">ACLRegexData<pos:position pos:line="72" pos:column="101"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="103">name<pos:position pos:line="72" pos:column="107"/></name></expr></argument>)<pos:position pos:line="72" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="109"/></return> }<pos:position pos:line="72" pos:column="111"/></block></lambda></expr></argument>)<pos:position pos:line="72" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="113"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">RegisterMaker<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><literal type="string" pos:line="73" pos:column="19">"proxy_auth"<pos:position pos:line="73" pos:column="31"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="73" pos:column="33">[]<pos:position pos:line="73" pos:column="35"/></capture><parameter_list pos:line="73" pos:column="35">(<parameter><decl><type><name pos:line="73" pos:column="36">TypeName<pos:position pos:line="73" pos:column="44"/></name></type> <name pos:line="73" pos:column="45">name<pos:position pos:line="73" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="73" pos:column="50"/></parameter_list>-&gt;<type><name pos:line="73" pos:column="52">ACL<pos:position pos:line="73" pos:column="55"/></name><modifier pos:line="73" pos:column="55">*<pos:position pos:line="73" pos:column="56"/></modifier></type> <block pos:line="73" pos:column="57">{ <return pos:line="73" pos:column="59">return <expr><operator pos:line="73" pos:column="66">new<pos:position pos:line="73" pos:column="69"/></operator> <call><name pos:line="73" pos:column="70">ACLProxyAuth<pos:position pos:line="73" pos:column="82"/></name><argument_list pos:line="73" pos:column="82">(<argument><expr><operator pos:line="73" pos:column="83">new<pos:position pos:line="73" pos:column="86"/></operator> <name pos:line="73" pos:column="87">ACLUserData<pos:position pos:line="73" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="100">name<pos:position pos:line="73" pos:column="104"/></name></expr></argument>)<pos:position pos:line="73" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="106"/></return> }<pos:position pos:line="73" pos:column="108"/></block></lambda></expr></argument>)<pos:position pos:line="73" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="110"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">RegisterMaker<pos:position pos:line="74" pos:column="18"/></name><argument_list pos:line="74" pos:column="18">(<argument><expr><literal type="string" pos:line="74" pos:column="19">"proxy_auth_regex"<pos:position pos:line="74" pos:column="37"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="74" pos:column="39">[]<pos:position pos:line="74" pos:column="41"/></capture><parameter_list pos:line="74" pos:column="41">(<parameter><decl><type><name pos:line="74" pos:column="42">TypeName<pos:position pos:line="74" pos:column="50"/></name></type> <name pos:line="74" pos:column="51">name<pos:position pos:line="74" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="74" pos:column="56"/></parameter_list>-&gt;<type><name pos:line="74" pos:column="58">ACL<pos:position pos:line="74" pos:column="61"/></name><modifier pos:line="74" pos:column="61">*<pos:position pos:line="74" pos:column="62"/></modifier></type> <block pos:line="74" pos:column="63">{ <return pos:line="74" pos:column="65">return <expr><operator pos:line="74" pos:column="72">new<pos:position pos:line="74" pos:column="75"/></operator> <call><name pos:line="74" pos:column="76">ACLProxyAuth<pos:position pos:line="74" pos:column="88"/></name><argument_list pos:line="74" pos:column="88">(<argument><expr><operator pos:line="74" pos:column="89">new<pos:position pos:line="74" pos:column="92"/></operator> <name pos:line="74" pos:column="93">ACLRegexData<pos:position pos:line="74" pos:column="105"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="107">name<pos:position pos:line="74" pos:column="111"/></name></expr></argument>)<pos:position pos:line="74" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="113"/></return> }<pos:position pos:line="74" pos:column="115"/></block></lambda></expr></argument>)<pos:position pos:line="74" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="117"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">RegisterMaker<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><literal type="string" pos:line="75" pos:column="19">"max_user_ip"<pos:position pos:line="75" pos:column="32"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="75" pos:column="34">[]<pos:position pos:line="75" pos:column="36"/></capture><parameter_list pos:line="75" pos:column="36">(<parameter><decl><type><name pos:line="75" pos:column="37">TypeName<pos:position pos:line="75" pos:column="45"/></name></type> <name pos:line="75" pos:column="46">name<pos:position pos:line="75" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="75" pos:column="51"/></parameter_list>-&gt;<type><name pos:line="75" pos:column="53">ACL<pos:position pos:line="75" pos:column="56"/></name><modifier pos:line="75" pos:column="56">*<pos:position pos:line="75" pos:column="57"/></modifier></type> <block pos:line="75" pos:column="58">{ <return pos:line="75" pos:column="60">return <expr><operator pos:line="75" pos:column="67">new<pos:position pos:line="75" pos:column="70"/></operator> <call><name pos:line="75" pos:column="71">ACLMaxUserIP<pos:position pos:line="75" pos:column="83"/></name><argument_list pos:line="75" pos:column="83">(<argument><expr><name pos:line="75" pos:column="84">name<pos:position pos:line="75" pos:column="88"/></name></expr></argument>)<pos:position pos:line="75" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="90"/></return> }<pos:position pos:line="75" pos:column="92"/></block></lambda></expr></argument>)<pos:position pos:line="75" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="94"/></expr_stmt>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">if<pos:position pos:line="78" pos:column="4"/></cpp:directive> <expr><name pos:line="78" pos:column="5">USE_ADAPTATION<pos:position pos:line="78" pos:column="19"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">RegisterMaker<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><literal type="string" pos:line="79" pos:column="19">"adaptation_service"<pos:position pos:line="79" pos:column="39"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="79" pos:column="41">[]<pos:position pos:line="79" pos:column="43"/></capture><parameter_list pos:line="79" pos:column="43">(<parameter><decl><type><name pos:line="79" pos:column="44">TypeName<pos:position pos:line="79" pos:column="52"/></name></type> <name pos:line="79" pos:column="53">name<pos:position pos:line="79" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="79" pos:column="58"/></parameter_list>-&gt;<type><name pos:line="79" pos:column="60">ACL<pos:position pos:line="79" pos:column="63"/></name><modifier pos:line="79" pos:column="63">*<pos:position pos:line="79" pos:column="64"/></modifier></type> <block pos:line="79" pos:column="65">{ <return pos:line="79" pos:column="67">return <expr><operator pos:line="79" pos:column="74">new<pos:position pos:line="79" pos:column="77"/></operator> <call><name><name pos:line="79" pos:column="78">ACLStrategised<pos:position pos:line="79" pos:column="92"/></name><argument_list type="generic" pos:line="79" pos:column="92">&lt;<argument><expr><specifier pos:line="79" pos:column="93">const<pos:position pos:line="79" pos:column="98"/></specifier> <name pos:line="79" pos:column="99">char<pos:position pos:line="79" pos:column="103"/></name> <operator pos:line="79" pos:column="104">*<pos:position pos:line="79" pos:column="105"/></operator></expr></argument>&gt;<pos:position pos:line="79" pos:column="109"/></argument_list></name><argument_list pos:line="79" pos:column="106">(<argument><expr><operator pos:line="79" pos:column="107">new<pos:position pos:line="79" pos:column="110"/></operator> <name pos:line="79" pos:column="111">ACLAdaptationServiceData<pos:position pos:line="79" pos:column="135"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="137">new<pos:position pos:line="79" pos:column="140"/></operator> <name pos:line="79" pos:column="141">ACLAdaptationServiceStrategy<pos:position pos:line="79" pos:column="169"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="171">name<pos:position pos:line="79" pos:column="175"/></name></expr></argument>)<pos:position pos:line="79" pos:column="176"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="177"/></return> }<pos:position pos:line="79" pos:column="179"/></block></lambda></expr></argument>)<pos:position pos:line="79" pos:column="180"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="181"/></expr_stmt>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">if<pos:position pos:line="82" pos:column="4"/></cpp:directive> <expr><name pos:line="82" pos:column="5">SQUID_SNMP<pos:position pos:line="82" pos:column="15"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">RegisterMaker<pos:position pos:line="83" pos:column="18"/></name><argument_list pos:line="83" pos:column="18">(<argument><expr><literal type="string" pos:line="83" pos:column="19">"snmp_community"<pos:position pos:line="83" pos:column="35"/></literal></expr></argument>, <argument><expr><lambda><capture pos:line="83" pos:column="37">[]<pos:position pos:line="83" pos:column="39"/></capture><parameter_list pos:line="83" pos:column="39">(<parameter><decl><type><name pos:line="83" pos:column="40">TypeName<pos:position pos:line="83" pos:column="48"/></name></type> <name pos:line="83" pos:column="49">name<pos:position pos:line="83" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="83" pos:column="54"/></parameter_list>-&gt;<type><name pos:line="83" pos:column="56">ACL<pos:position pos:line="83" pos:column="59"/></name><modifier pos:line="83" pos:column="59">*<pos:position pos:line="83" pos:column="60"/></modifier></type> <block pos:line="83" pos:column="61">{ <return pos:line="83" pos:column="63">return <expr><operator pos:line="83" pos:column="70">new<pos:position pos:line="83" pos:column="73"/></operator> <call><name><name pos:line="83" pos:column="74">ACLStrategised<pos:position pos:line="83" pos:column="88"/></name><argument_list type="generic" pos:line="83" pos:column="88">&lt;<argument><expr><specifier pos:line="83" pos:column="89">const<pos:position pos:line="83" pos:column="94"/></specifier> <name pos:line="83" pos:column="95">char<pos:position pos:line="83" pos:column="99"/></name> <operator pos:line="83" pos:column="100">*<pos:position pos:line="83" pos:column="101"/></operator></expr></argument>&gt;<pos:position pos:line="83" pos:column="105"/></argument_list></name><argument_list pos:line="83" pos:column="102">(<argument><expr><operator pos:line="83" pos:column="103">new<pos:position pos:line="83" pos:column="106"/></operator> <name pos:line="83" pos:column="107">ACLStringData<pos:position pos:line="83" pos:column="120"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="122">new<pos:position pos:line="83" pos:column="125"/></operator> <name pos:line="83" pos:column="126">ACLSNMPCommunityStrategy<pos:position pos:line="83" pos:column="150"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="152">name<pos:position pos:line="83" pos:column="156"/></name></expr></argument>)<pos:position pos:line="83" pos:column="157"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="158"/></return> }<pos:position pos:line="83" pos:column="160"/></block></lambda></expr></argument>)<pos:position pos:line="83" pos:column="161"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="162"/></expr_stmt>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

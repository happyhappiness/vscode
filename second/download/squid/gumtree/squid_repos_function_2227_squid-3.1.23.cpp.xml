<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2227_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsSendQuery<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">idns_query<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">q<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">DnsSocketA<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&lt;<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal> <operator pos:line="4" pos:column="24">&amp;&amp;<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="27">DnsSocketB<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">&lt;<pos:position pos:line="4" pos:column="42"/></operator> <literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr>)<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42"> <block pos:line="4" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">78<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">1<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"WARNING: idnsSendQuery: Can't send query, no DNS socket!"<pos:position pos:line="5" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="83"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">nns<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&lt;=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">78<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">1<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"WARNING: idnsSendQuery: Can't send query, no DNS nameservers known!"<pos:position pos:line="10" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="94"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">q<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">lru<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">.<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">next<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">NULL<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">q<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">lru<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">.<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">prev<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">NULL<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">x<pos:position pos:line="18" pos:column="10"/></name> <init pos:line="18" pos:column="11">= <expr><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="17">y<pos:position pos:line="18" pos:column="18"/></name> <init pos:line="18" pos:column="19">= <expr><operator pos:line="18" pos:column="21">-<pos:position pos:line="18" pos:column="22"/></operator><literal type="number" pos:line="18" pos:column="22">1<pos:position pos:line="18" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">ns<pos:position pos:line="19" pos:column="11"/></name></decl>;<pos:position pos:line="19" pos:column="12"/></decl_stmt>

    <do pos:line="21" pos:column="5">do <block pos:line="21" pos:column="8">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">ns<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name><name pos:line="22" pos:column="14">q<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">nsends<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">%<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">nns<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">q<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">need_vc<pos:position pos:line="24" pos:column="23"/></name></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24"> <block pos:line="24" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">idnsSendQueryVC<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">q<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">ns<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">x<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">y<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name pos:line="28" pos:column="17">DnsSocketB<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">&gt;=<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal> <operator pos:line="28" pos:column="33">&amp;&amp;<pos:position pos:line="28" pos:column="43"/></operator> <name><name pos:line="28" pos:column="36">nameservers<pos:position pos:line="28" pos:column="47"/></name><index pos:line="28" pos:column="47">[<expr><name pos:line="28" pos:column="48">ns<pos:position pos:line="28" pos:column="50"/></name></expr>]<pos:position pos:line="28" pos:column="51"/></index></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><call><name><name pos:line="28" pos:column="52">S<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">.<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="54">IsIPv6<pos:position pos:line="28" pos:column="60"/></name></name><argument_list pos:line="28" pos:column="60">()<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="63"/></condition><then pos:line="28" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">y<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">comm_udp_sendto<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">DnsSocketB<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">nameservers<pos:position pos:line="29" pos:column="60"/></name><index pos:line="29" pos:column="60">[<expr><name pos:line="29" pos:column="61">ns<pos:position pos:line="29" pos:column="63"/></name></expr>]<pos:position pos:line="29" pos:column="64"/></index></name><operator pos:line="29" pos:column="64">.<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="65">S<pos:position pos:line="29" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="68">q<pos:position pos:line="29" pos:column="69"/></name><operator pos:line="29" pos:column="69">-&gt;<pos:position pos:line="29" pos:column="74"/></operator><name pos:line="29" pos:column="71">buf<pos:position pos:line="29" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="76">q<pos:position pos:line="29" pos:column="77"/></name><operator pos:line="29" pos:column="77">-&gt;<pos:position pos:line="29" pos:column="82"/></operator><name pos:line="29" pos:column="79">sz<pos:position pos:line="29" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt></block></then>
            <elseif pos:line="30" pos:column="13">else <if pos:line="30" pos:column="18">if <condition pos:line="30" pos:column="21">(<expr><name pos:line="30" pos:column="22">DnsSocketA<pos:position pos:line="30" pos:column="32"/></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">x<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">comm_udp_sendto<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">DnsSocketA<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="49">nameservers<pos:position pos:line="31" pos:column="60"/></name><index pos:line="31" pos:column="60">[<expr><name pos:line="31" pos:column="61">ns<pos:position pos:line="31" pos:column="63"/></name></expr>]<pos:position pos:line="31" pos:column="64"/></index></name><operator pos:line="31" pos:column="64">.<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="65">S<pos:position pos:line="31" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="68">q<pos:position pos:line="31" pos:column="69"/></name><operator pos:line="31" pos:column="69">-&gt;<pos:position pos:line="31" pos:column="74"/></operator><name pos:line="31" pos:column="71">buf<pos:position pos:line="31" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="76">q<pos:position pos:line="31" pos:column="77"/></name><operator pos:line="31" pos:column="77">-&gt;<pos:position pos:line="31" pos:column="82"/></operator><name pos:line="31" pos:column="79">sz<pos:position pos:line="31" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="83"/></expr_stmt></block></then></if></elseif></if>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="34" pos:column="9">q<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">nsends<pos:position pos:line="34" pos:column="18"/></name></name><operator pos:line="34" pos:column="18">++<pos:position pos:line="34" pos:column="20"/></operator></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="36" pos:column="9">q<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">queue_t<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name><name pos:line="36" pos:column="22">q<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">sent_t<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name pos:line="36" pos:column="34">current_time<pos:position pos:line="36" pos:column="46"/></name></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">y<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">&lt;<pos:position pos:line="38" pos:column="19"/></operator> <literal type="number" pos:line="38" pos:column="17">0<pos:position pos:line="38" pos:column="18"/></literal> <operator pos:line="38" pos:column="19">&amp;&amp;<pos:position pos:line="38" pos:column="29"/></operator> <name><name pos:line="38" pos:column="22">nameservers<pos:position pos:line="38" pos:column="33"/></name><index pos:line="38" pos:column="33">[<expr><name pos:line="38" pos:column="34">ns<pos:position pos:line="38" pos:column="36"/></name></expr>]<pos:position pos:line="38" pos:column="37"/></index></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><call><name><name pos:line="38" pos:column="38">S<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">IsIPv6<pos:position pos:line="38" pos:column="46"/></name></name><argument_list pos:line="38" pos:column="46">()<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="49"/></condition><then pos:line="38" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="13">debugs<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><literal type="number" pos:line="39" pos:column="20">50<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="24">1<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="27">"idnsSendQuery: FD "<pos:position pos:line="39" pos:column="47"/></literal> <operator pos:line="39" pos:column="48">&lt;&lt;<pos:position pos:line="39" pos:column="56"/></operator> <name pos:line="39" pos:column="51">DnsSocketB<pos:position pos:line="39" pos:column="61"/></name> <operator pos:line="39" pos:column="62">&lt;&lt;<pos:position pos:line="39" pos:column="70"/></operator> <literal type="string" pos:line="39" pos:column="65">": sendto: "<pos:position pos:line="39" pos:column="77"/></literal> <operator pos:line="39" pos:column="78">&lt;&lt;<pos:position pos:line="39" pos:column="86"/></operator> <call><name pos:line="39" pos:column="81">xstrerror<pos:position pos:line="39" pos:column="90"/></name><argument_list pos:line="39" pos:column="90">()<pos:position pos:line="39" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="94"/></expr_stmt></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">x<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">&lt;<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="17">0<pos:position pos:line="40" pos:column="18"/></literal> <operator pos:line="40" pos:column="19">&amp;&amp;<pos:position pos:line="40" pos:column="29"/></operator> <name><name pos:line="40" pos:column="22">nameservers<pos:position pos:line="40" pos:column="33"/></name><index pos:line="40" pos:column="33">[<expr><name pos:line="40" pos:column="34">ns<pos:position pos:line="40" pos:column="36"/></name></expr>]<pos:position pos:line="40" pos:column="37"/></index></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><call><name><name pos:line="40" pos:column="38">S<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">.<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="40">IsIPv4<pos:position pos:line="40" pos:column="46"/></name></name><argument_list pos:line="40" pos:column="46">()<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="49"/></condition><then pos:line="40" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="13">debugs<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><literal type="number" pos:line="41" pos:column="20">50<pos:position pos:line="41" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="24">1<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="27">"idnsSendQuery: FD "<pos:position pos:line="41" pos:column="47"/></literal> <operator pos:line="41" pos:column="48">&lt;&lt;<pos:position pos:line="41" pos:column="56"/></operator> <name pos:line="41" pos:column="51">DnsSocketA<pos:position pos:line="41" pos:column="61"/></name> <operator pos:line="41" pos:column="62">&lt;&lt;<pos:position pos:line="41" pos:column="70"/></operator> <literal type="string" pos:line="41" pos:column="65">": sendto: "<pos:position pos:line="41" pos:column="77"/></literal> <operator pos:line="41" pos:column="78">&lt;&lt;<pos:position pos:line="41" pos:column="86"/></operator> <call><name pos:line="41" pos:column="81">xstrerror<pos:position pos:line="41" pos:column="90"/></name><argument_list pos:line="41" pos:column="90">()<pos:position pos:line="41" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="94"/></expr_stmt></block></then></if>

    }<pos:position pos:line="43" pos:column="6"/></block> while <condition pos:line="43" pos:column="13">( <expr><operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">x<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">&lt;<pos:position pos:line="43" pos:column="21"/></operator><literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal> <operator pos:line="43" pos:column="20">&amp;&amp;<pos:position pos:line="43" pos:column="30"/></operator> <name pos:line="43" pos:column="23">y<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">&lt;<pos:position pos:line="43" pos:column="28"/></operator><literal type="number" pos:line="43" pos:column="25">0<pos:position pos:line="43" pos:column="26"/></literal><operator pos:line="43" pos:column="26">)<pos:position pos:line="43" pos:column="27"/></operator> <operator pos:line="43" pos:column="28">&amp;&amp;<pos:position pos:line="43" pos:column="38"/></operator> <name><name pos:line="43" pos:column="31">q<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">nsends<pos:position pos:line="43" pos:column="40"/></name></name> <operator pos:line="43" pos:column="41">%<pos:position pos:line="43" pos:column="42"/></operator> <name pos:line="43" pos:column="43">nns<pos:position pos:line="43" pos:column="46"/></name> <operator pos:line="43" pos:column="47">!=<pos:position pos:line="43" pos:column="49"/></operator> <literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr>)<pos:position pos:line="43" pos:column="52"/></condition>;<pos:position pos:line="43" pos:column="53"/></do>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">y<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">&gt;<pos:position pos:line="45" pos:column="15"/></operator> <literal type="number" pos:line="45" pos:column="13">0<pos:position pos:line="45" pos:column="14"/></literal></expr>)<pos:position pos:line="45" pos:column="15"/></condition><then pos:line="45" pos:column="15"> <block pos:line="45" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">fd_bytes<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">DnsSocketB<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">y<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">FD_WRITE<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">x<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">&gt;<pos:position pos:line="48" pos:column="15"/></operator> <literal type="number" pos:line="48" pos:column="13">0<pos:position pos:line="48" pos:column="14"/></literal></expr>)<pos:position pos:line="48" pos:column="15"/></condition><then pos:line="48" pos:column="15"> <block pos:line="48" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">fd_bytes<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">DnsSocketA<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">x<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="33">FD_WRITE<pos:position pos:line="49" pos:column="41"/></name></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">nameservers<pos:position pos:line="52" pos:column="16"/></name><index pos:line="52" pos:column="16">[<expr><name pos:line="52" pos:column="17">ns<pos:position pos:line="52" pos:column="19"/></name></expr>]<pos:position pos:line="52" pos:column="20"/></index></name><operator pos:line="52" pos:column="20">.<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">nqueries<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">++<pos:position pos:line="52" pos:column="31"/></operator></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">q<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">queue_t<pos:position pos:line="53" pos:column="15"/></name></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">current_time<pos:position pos:line="53" pos:column="30"/></name></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">dlinkAdd<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><name pos:line="54" pos:column="14">q<pos:position pos:line="54" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="17">&amp;<pos:position pos:line="54" pos:column="22"/></operator><name><name pos:line="54" pos:column="18">q<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">lru<pos:position pos:line="54" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="26">&amp;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="27">lru_list<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">idnsTickleQueue<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">()<pos:position pos:line="55" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

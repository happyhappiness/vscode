<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5441_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">handleControlReply<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">bytes_used<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">wordlistDestroy<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="22">ctrl<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">message<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">parseControlReply<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">bytes_used<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40"> <block pos:line="9" pos:column="41">{
        <comment type="block" pos:line="10" pos:column="9">/* didn't get complete reply yet */</comment>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">ctrl<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">offset<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="28">ctrl<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">size<pos:position pos:line="12" pos:column="37"/></name></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">ctrl<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">buf<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <cast type="static" pos:line="13" pos:column="24">static_cast<argument_list type="generic" pos:line="13" pos:column="35">&lt;<argument><expr><name pos:line="13" pos:column="36">char<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="45"/></argument_list><argument_list pos:line="13" pos:column="42">(<argument><expr><call><name pos:line="13" pos:column="43">memReallocBuf<pos:position pos:line="13" pos:column="56"/></name><argument_list pos:line="13" pos:column="56">(<argument><expr><name><name pos:line="13" pos:column="57">ctrl<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">.<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="62">buf<pos:position pos:line="13" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="67">ctrl<pos:position pos:line="13" pos:column="71"/></name><operator pos:line="13" pos:column="71">.<pos:position pos:line="13" pos:column="72"/></operator><name pos:line="13" pos:column="72">size<pos:position pos:line="13" pos:column="76"/></name></name> <operator pos:line="13" pos:column="77">&lt;&lt;<pos:position pos:line="13" pos:column="85"/></operator> <literal type="number" pos:line="13" pos:column="80">1<pos:position pos:line="13" pos:column="81"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="83">&amp;<pos:position pos:line="13" pos:column="88"/></operator><name><name pos:line="13" pos:column="84">ctrl<pos:position pos:line="13" pos:column="88"/></name><operator pos:line="13" pos:column="88">.<pos:position pos:line="13" pos:column="89"/></operator><name pos:line="13" pos:column="89">size<pos:position pos:line="13" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="95"/></argument_list></cast></expr>;<pos:position pos:line="13" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="16" pos:column="9">scheduleReadControlReply<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">ctrl<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">message<pos:position pos:line="20" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt> <comment type="line" pos:line="20" pos:column="27">// the entire FTP server response, line by line</comment>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name><name pos:line="21" pos:column="12">ctrl<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">replycode<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">&gt;=<pos:position pos:line="21" pos:column="32"/></operator> <literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt> <comment type="line" pos:line="21" pos:column="34">// FTP status code (from the last line)</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">ctrl<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">last_reply<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt> <comment type="line" pos:line="22" pos:column="30">// FTP reason (from the last line)</comment>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">ctrl<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">offset<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">==<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">bytes_used<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
        <comment type="block" pos:line="25" pos:column="9">/* used it all up */</comment>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">ctrl<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">.<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">offset<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <comment type="block" pos:line="28" pos:column="9">/* Got some data past the complete reply */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">assert<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">bytes_used<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">&lt;<pos:position pos:line="29" pos:column="31"/></operator> <name><name pos:line="29" pos:column="29">ctrl<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">.<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">offset<pos:position pos:line="29" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">ctrl<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">.<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">offset<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">-=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">bytes_used<pos:position pos:line="30" pos:column="34"/></name></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">memmove<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name><name pos:line="31" pos:column="17">ctrl<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">buf<pos:position pos:line="31" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="27">ctrl<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">.<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">buf<pos:position pos:line="31" pos:column="35"/></name></name> <operator pos:line="31" pos:column="36">+<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="38">bytes_used<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="50">ctrl<pos:position pos:line="31" pos:column="54"/></name><operator pos:line="31" pos:column="54">.<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="55">offset<pos:position pos:line="31" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">debugs<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">9<pos:position pos:line="34" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="15">3<pos:position pos:line="34" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="18">"state="<pos:position pos:line="34" pos:column="26"/></literal> <operator pos:line="34" pos:column="27">&lt;&lt;<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="30">state<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">&lt;&lt;<pos:position pos:line="34" pos:column="44"/></operator> <literal type="string" pos:line="34" pos:column="39">", code="<pos:position pos:line="34" pos:column="48"/></literal> <operator pos:line="34" pos:column="49">&lt;&lt;<pos:position pos:line="34" pos:column="57"/></operator> <name><name pos:line="34" pos:column="52">ctrl<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">replycode<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

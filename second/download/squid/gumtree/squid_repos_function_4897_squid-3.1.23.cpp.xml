<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4897_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">BasicUser<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">makeLoggingInstance<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">AuthBasicUserRequest<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">auth_user_request<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">username<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">()<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
        <comment type="block" pos:line="5" pos:column="9">/* log the username */</comment>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">29<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">9<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">HERE<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&lt;&lt;<pos:position pos:line="6" pos:column="36"/></operator> <literal type="string" pos:line="6" pos:column="31">"Creating new user for logging '"<pos:position pos:line="6" pos:column="64"/></literal> <operator pos:line="6" pos:column="65">&lt;&lt;<pos:position pos:line="6" pos:column="73"/></operator> <call><name pos:line="6" pos:column="68">username<pos:position pos:line="6" pos:column="76"/></name><argument_list pos:line="6" pos:column="76">()<pos:position pos:line="6" pos:column="78"/></argument_list></call> <operator pos:line="6" pos:column="79">&lt;&lt;<pos:position pos:line="6" pos:column="87"/></operator> <literal type="string" pos:line="6" pos:column="82">"'"<pos:position pos:line="6" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="87"/></expr_stmt>
        <comment type="block" pos:line="7" pos:column="9">/* new scheme data */</comment>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">BasicUser<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">basic_auth<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><operator pos:line="8" pos:column="33">new<pos:position pos:line="8" pos:column="36"/></operator> <call><name pos:line="8" pos:column="37">BasicUser<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><operator pos:line="8" pos:column="47">&amp;<pos:position pos:line="8" pos:column="52"/></operator> <name pos:line="8" pos:column="49">basicConfig<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="62"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">auth_user_request<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">user<pos:position pos:line="9" pos:column="32"/></name></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">basic_auth<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
        <comment type="block" pos:line="10" pos:column="9">/* save the credentials */</comment>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">basic_auth<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">username<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">(<argument><expr><call><name pos:line="11" pos:column="30">username<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">()<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">username<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr></argument>)<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
        <comment type="block" pos:line="13" pos:column="9">/* set the auth_user type */</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">basic_auth<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">auth_type<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">AUTH_BROKEN<pos:position pos:line="14" pos:column="44"/></name></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
        <comment type="block" pos:line="15" pos:column="9">/* link the request to the user */</comment>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">basic_auth<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">addRequest<pos:position pos:line="16" pos:column="31"/></name></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">auth_user_request<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

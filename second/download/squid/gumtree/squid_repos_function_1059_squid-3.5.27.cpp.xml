<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1059_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_SBufList<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">StoreEntry<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">entry<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">SBufList<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">words<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">SBufList<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">const_iterator<pos:position pos:line="4" pos:column="34"/></name></name></type> <name pos:line="4" pos:column="35">i<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><call><name><name pos:line="4" pos:column="39">words<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">begin<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></init> <condition><expr><name pos:line="4" pos:column="54">i<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">!=<pos:position pos:line="4" pos:column="58"/></operator> <call><name><name pos:line="4" pos:column="59">words<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">.<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="65">end<pos:position pos:line="4" pos:column="68"/></name></name><argument_list pos:line="4" pos:column="68">()<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="71"/></condition> <incr><expr><operator pos:line="4" pos:column="72">++<pos:position pos:line="4" pos:column="74"/></operator><name pos:line="4" pos:column="74">i<pos:position pos:line="4" pos:column="75"/></name></expr></incr>)<pos:position pos:line="4" pos:column="76"/></control> <block pos:line="4" pos:column="77">{
        <expr_stmt><expr><call><name><name pos:line="5" pos:column="9">entry<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">append<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">(<argument><expr><call><name><name pos:line="5" pos:column="23">i<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">rawContent<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">()<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="40">i<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">length<pos:position pos:line="5" pos:column="49"/></name></name><argument_list pos:line="5" pos:column="49">()<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">entry<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">append<pos:position pos:line="6" pos:column="22"/></name></name><argument_list pos:line="6" pos:column="22">(<argument><expr><literal type="string" pos:line="6" pos:column="23">" "<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="27">1<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">entry<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">append<pos:position pos:line="8" pos:column="18"/></name></name><argument_list pos:line="8" pos:column="18">(<argument><expr><literal type="string" pos:line="8" pos:column="19">"\n"<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="24">1<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

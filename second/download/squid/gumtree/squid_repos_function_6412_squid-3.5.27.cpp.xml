<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6412_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">netdbDump<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">StoreEntry<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">sentry<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ICMP<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">netdbEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">n<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">netdbEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">list<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">net_db_name<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">x<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">k<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">j<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">net_db_peer<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">p<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">storeAppendPrintf<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">sentry<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"Network DB Statistics:\n"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">storeAppendPrintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">sentry<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"%-46.46s %9s %7s %5s %s\n"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>,  <comment type="block" pos:line="13" pos:column="61">/* Max between 16 (IPv4) or 46 (IPv6)   */</comment>
                      <argument><expr><literal type="string" pos:line="14" pos:column="23">"Network"<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="15" pos:column="23">"recv/sent"<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="16" pos:column="23">"RTT"<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="17" pos:column="23">"Hops"<pos:position pos:line="17" pos:column="29"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="18" pos:column="23">"Hostnames"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">list<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">netdbEntry<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></operator><operator pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></operator><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator><call><name pos:line="19" pos:column="27">xcalloc<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><call><name pos:line="19" pos:column="35">memInUse<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">MEM_NETDBENTRY<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="61">sizeof<argument_list pos:line="19" pos:column="67">(<argument><expr><name pos:line="19" pos:column="68">netdbEntry<pos:position pos:line="19" pos:column="78"/></name> <operator pos:line="19" pos:column="79">*<pos:position pos:line="19" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">i<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <literal type="number" pos:line="20" pos:column="9">0<pos:position pos:line="20" pos:column="10"/></literal></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">hash_first<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">addr_table<pos:position pos:line="21" pos:column="26"/></name></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>

    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">n<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">netdbEntry<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">*<pos:position pos:line="23" pos:column="30"/></operator><operator pos:line="23" pos:column="30">)<pos:position pos:line="23" pos:column="31"/></operator> <call><name pos:line="23" pos:column="32">hash_next<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><name pos:line="23" pos:column="42">addr_table<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call><operator pos:line="23" pos:column="53">)<pos:position pos:line="23" pos:column="54"/></operator></expr>)<pos:position pos:line="23" pos:column="55"/></condition> <block pos:line="23" pos:column="56">{
        <expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><operator pos:line="24" pos:column="10">(<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">list<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">i<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">)<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">n<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="25" pos:column="9">++<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">i<pos:position pos:line="25" pos:column="12"/></name></expr>;<pos:position pos:line="25" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></while>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">i<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">!=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">memInUse<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">MEM_NETDBENTRY<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">38<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="20">DBG_CRITICAL<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">"WARNING: netdb_addrs count off, found "<pos:position pos:line="29" pos:column="74"/></literal> <operator pos:line="29" pos:column="75">&lt;&lt;<pos:position pos:line="29" pos:column="83"/></operator> <name pos:line="29" pos:column="78">i<pos:position pos:line="29" pos:column="79"/></name> <operator pos:line="29" pos:column="80">&lt;&lt;<pos:position pos:line="29" pos:column="88"/></operator>
               <literal type="string" pos:line="30" pos:column="16">", expected "<pos:position pos:line="30" pos:column="29"/></literal> <operator pos:line="30" pos:column="30">&lt;&lt;<pos:position pos:line="30" pos:column="38"/></operator> <call><name pos:line="30" pos:column="33">memInUse<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">MEM_NETDBENTRY<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">qsort<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">char<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">list<pos:position pos:line="32" pos:column="24"/></name></expr></argument>,
          <argument><expr><name pos:line="33" pos:column="11">i<pos:position pos:line="33" pos:column="12"/></name></expr></argument>,
          <argument><expr><sizeof pos:line="34" pos:column="11">sizeof<argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">netdbEntry<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">*<pos:position pos:line="34" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></sizeof></expr></argument>,
          <argument><expr><name pos:line="35" pos:column="11">sortByRtt<pos:position pos:line="35" pos:column="20"/></name></expr></argument>)<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>

    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">k<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></init> <condition><expr><name pos:line="37" pos:column="17">k<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">&lt;<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="21">i<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></condition> <incr><expr><operator pos:line="37" pos:column="24">++<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">k<pos:position pos:line="37" pos:column="27"/></name></expr></incr>)<pos:position pos:line="37" pos:column="28"/></control> <block pos:line="37" pos:column="29">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">n<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">(<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">list<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">+<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">k<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">)<pos:position pos:line="38" pos:column="24"/></operator></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">storeAppendPrintf<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">sentry<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="35">"%-46.46s %4d/%4d %7.1f %5.1f"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>, <comment type="block" pos:line="39" pos:column="67">/* Max between 16 (IPv4) or 46 (IPv6)   */</comment>
                          <argument><expr><name><name pos:line="40" pos:column="27">n<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">network<pos:position pos:line="40" pos:column="37"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="41" pos:column="27">n<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">pings_recv<pos:position pos:line="41" pos:column="40"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="42" pos:column="27">n<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">pings_sent<pos:position pos:line="42" pos:column="40"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="43" pos:column="27">n<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">rtt<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="44" pos:column="27">n<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">hops<pos:position pos:line="44" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>

        <for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">x<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name><name pos:line="46" pos:column="18">n<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">hosts<pos:position pos:line="46" pos:column="26"/></name></name></expr>;<pos:position pos:line="46" pos:column="27"/></init> <condition><expr><name pos:line="46" pos:column="28">x<pos:position pos:line="46" pos:column="29"/></name></expr>;<pos:position pos:line="46" pos:column="30"/></condition> <incr><expr><name pos:line="46" pos:column="31">x<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">=<pos:position pos:line="46" pos:column="34"/></operator> <name><name pos:line="46" pos:column="35">x<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">next<pos:position pos:line="46" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="46" pos:column="43"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="13">storeAppendPrintf<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">sentry<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="39">" %s"<pos:position pos:line="47" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="46">hashKeyStr<pos:position pos:line="47" pos:column="56"/></name><argument_list pos:line="47" pos:column="56">(<argument><expr><operator pos:line="47" pos:column="57">&amp;<pos:position pos:line="47" pos:column="62"/></operator><name><name pos:line="47" pos:column="58">x<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">-&gt;<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="61">hash<pos:position pos:line="47" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt></block></for>

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">storeAppendPrintf<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">sentry<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="35">"\n"<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name pos:line="51" pos:column="9">p<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name><name pos:line="51" pos:column="13">n<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">peers<pos:position pos:line="51" pos:column="21"/></name></name></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>

        <for pos:line="53" pos:column="9">for <control pos:line="53" pos:column="13">(<init><expr><name pos:line="53" pos:column="14">j<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <literal type="number" pos:line="53" pos:column="18">0<pos:position pos:line="53" pos:column="19"/></literal></expr>;<pos:position pos:line="53" pos:column="20"/></init> <condition><expr><name pos:line="53" pos:column="21">j<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">&lt;<pos:position pos:line="53" pos:column="27"/></operator> <name><name pos:line="53" pos:column="25">n<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">-&gt;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="28">n_peers<pos:position pos:line="53" pos:column="35"/></name></name></expr>;<pos:position pos:line="53" pos:column="36"/></condition> <incr><expr><operator pos:line="53" pos:column="37">++<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="39">j<pos:position pos:line="53" pos:column="40"/></name></expr><operator pos:line="53" pos:column="40">,<pos:position pos:line="53" pos:column="41"/></operator> <expr><operator pos:line="53" pos:column="42">++<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="44">p<pos:position pos:line="53" pos:column="45"/></name></expr></incr>)<pos:position pos:line="53" pos:column="46"/></control> <block pos:line="53" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">storeAppendPrintf<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">sentry<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="39">"    %-22.22s %7.1f %5.1f\n"<pos:position pos:line="54" pos:column="67"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="55" pos:column="31">p<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">-&gt;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="34">peername<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="56" pos:column="31">p<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">rtt<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="57" pos:column="31">p<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">hops<pos:position pos:line="57" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></for>
    }<pos:position pos:line="59" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">xfree<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">list<pos:position pos:line="61" pos:column="15"/></name></expr></argument>)<pos:position pos:line="61" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="17"/></expr_stmt>
<cpp:else pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">else<pos:position pos:line="62" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="64" pos:column="5">storeAppendPrintf<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">sentry<pos:position pos:line="64" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="64" pos:column="30">"NETDB support not compiled into this Squid cache.\n"<pos:position pos:line="64" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="85"/></expr_stmt>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

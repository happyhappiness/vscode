<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1777_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">statPeerSelect<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">StoreEntry<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">sentry<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="4" pos:column="22"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StatCounters<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">f<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><operator pos:line="5" pos:column="23">&amp;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="24">statCounter<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CachePeer<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">peer<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">int<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">tot_used<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name><name pos:line="7" pos:column="26">f<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">cd<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">times_used<pos:position pos:line="7" pos:column="42"/></name></name> <operator pos:line="7" pos:column="43">+<pos:position pos:line="7" pos:column="44"/></operator> <name><name pos:line="7" pos:column="45">f<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">icp<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">.<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">times_used<pos:position pos:line="7" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* totals */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">cacheDigestGuessStatsReport<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><operator pos:line="10" pos:column="33">&amp;<pos:position pos:line="10" pos:column="38"/></operator><name><name pos:line="10" pos:column="34">f<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">cd<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">guess<pos:position pos:line="10" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="47">sentry<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="55">"all peers"<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* per-peer */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">storeAppendPrintf<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">sentry<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="31">"\nPer-peer statistics:\n"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">peer<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">getFirstPeer<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">()<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></init> <condition><expr><name pos:line="14" pos:column="33">peer<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></condition> <incr><expr><name pos:line="14" pos:column="39">peer<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">=<pos:position pos:line="14" pos:column="45"/></operator> <call><name pos:line="14" pos:column="46">getNextPeer<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name pos:line="14" pos:column="58">peer<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></incr>)<pos:position pos:line="14" pos:column="64"/></control> <block pos:line="14" pos:column="65">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">peer<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">digest<pos:position pos:line="15" pos:column="25"/></name></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="13">peerDigestStatsReport<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name><name pos:line="16" pos:column="35">peer<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">digest<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">sentry<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></then>
        <else pos:line="17" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">storeAppendPrintf<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">sentry<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="39">"\nNo peer digest from %s\n"<pos:position pos:line="18" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="69">peer<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">-&gt;<pos:position pos:line="18" pos:column="78"/></operator><name pos:line="18" pos:column="75">host<pos:position pos:line="18" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="20" pos:column="9">storeAppendPrintf<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">sentry<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="35">"\n"<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">storeAppendPrintf<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">sentry<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"\nAlgorithm usage:\n"<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">storeAppendPrintf<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">sentry<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"Cache Digest: %7d (%3d%%)\n"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="25" pos:column="23">f<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">cd<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">.<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">times_used<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="41">xpercentInt<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name><name pos:line="25" pos:column="53">f<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">cd<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">.<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">times_used<pos:position pos:line="25" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">tot_used<pos:position pos:line="25" pos:column="79"/></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">storeAppendPrintf<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">sentry<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="31">"Icp:          %7d (%3d%%)\n"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="27" pos:column="23">f<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">icp<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">times_used<pos:position pos:line="27" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="42">xpercentInt<pos:position pos:line="27" pos:column="53"/></name><argument_list pos:line="27" pos:column="53">(<argument><expr><name><name pos:line="27" pos:column="54">f<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">icp<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">.<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="61">times_used<pos:position pos:line="27" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="73">tot_used<pos:position pos:line="27" pos:column="81"/></name></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">storeAppendPrintf<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">sentry<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">"Total:        %7d (%3d%%)\n"<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>,
                      <argument><expr><name pos:line="29" pos:column="23">tot_used<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="33">xpercentInt<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">tot_used<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">tot_used<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
<cpp:else pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">else<pos:position pos:line="30" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">storeAppendPrintf<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">sentry<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="31">"peer digests are disabled; no stats is available.\n"<pos:position pos:line="32" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="86"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_550_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">u_char<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name pos:line="2" pos:column="1">asn_parse_objid<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">u_char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type> <name pos:line="2" pos:column="26">data<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">datalength<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
                <parameter><decl><type><name pos:line="3" pos:column="17">u_char<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type> <name pos:line="3" pos:column="26">type<pos:position pos:line="3" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="32">oid<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type> <name pos:line="3" pos:column="38">objid<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="45">int<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">objidlength<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<comment type="block" pos:line="4" pos:column="1">/*    u_char  *data;        IN - pointer to start of object */</comment>
<comment type="block" pos:line="5" pos:column="1">/*    int     *datalength;  IN/OUT - # of valid bytes left in buf */</comment>
<comment type="block" pos:line="6" pos:column="1">/*    u_char  *type;        OUT - ASN type of object */</comment>
<comment type="block" pos:line="7" pos:column="1">/*    oid     *objid;       IN/OUT - pointer to start of output buffer */</comment>
<comment type="block" pos:line="8" pos:column="1">/*    int     *objidlength; IN/OUT - number of sub-id's in objid */</comment>
<block pos:line="9" pos:column="1">{
    <comment type="block" pos:line="10" pos:column="5">/*
     * ASN.1 objid ::= 0x06 asnlength subidentifier {subidentifier}*
     * subidentifier ::= {leadingbyte}* lastbyte
     * leadingbyte ::= 1 7bitvalue
     * lastbyte ::= 0 7bitvalue
     */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">u_char<pos:position pos:line="16" pos:column="11"/></name> <modifier pos:line="16" pos:column="12">*<pos:position pos:line="16" pos:column="13"/></modifier></type><name pos:line="16" pos:column="13">bufp<pos:position pos:line="16" pos:column="17"/></name> <init pos:line="16" pos:column="18">= <expr><name pos:line="16" pos:column="20">data<pos:position pos:line="16" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">oid<pos:position pos:line="17" pos:column="8"/></name> <modifier pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></modifier></type><name pos:line="17" pos:column="10">oidp<pos:position pos:line="17" pos:column="14"/></name> <init pos:line="17" pos:column="15">= <expr><name pos:line="17" pos:column="17">objid<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">+<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">u_int<pos:position pos:line="18" pos:column="10"/></name></type> <name pos:line="18" pos:column="11">subidentifier<pos:position pos:line="18" pos:column="24"/></name></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">length<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">u_int<pos:position pos:line="20" pos:column="10"/></name></type> <name pos:line="20" pos:column="11">asn_length<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">type<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">bufp<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">++<pos:position pos:line="22" pos:column="20"/></operator></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">bufp<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">asn_parse_length<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">bufp<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="35">&amp;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="36">asn_length<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">bufp<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">==<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">NULL<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">)<pos:position pos:line="25" pos:column="22"/></operator></expr>;<pos:position pos:line="25" pos:column="23"/></return></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">asn_length<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">+<pos:position pos:line="27" pos:column="21"/></operator> <operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">bufp<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">-<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">data<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">)<pos:position pos:line="27" pos:column="35"/></operator> <operator pos:line="27" pos:column="36">&gt;<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="38">*<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="39">datalength<pos:position pos:line="27" pos:column="49"/></name></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50"> <block pos:line="27" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">snmp_set_api_error<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">SNMPERR_ASN_DECODE<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">datalength<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">-=<pos:position pos:line="31" pos:column="19"/></operator> <operator pos:line="31" pos:column="20">(<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">int<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">asn_length<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">+<pos:position pos:line="31" pos:column="38"/></operator> <operator pos:line="31" pos:column="39">(<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="40">bufp<pos:position pos:line="31" pos:column="44"/></name> <operator pos:line="31" pos:column="45">-<pos:position pos:line="31" pos:column="46"/></operator> <name pos:line="31" pos:column="47">data<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">)<pos:position pos:line="31" pos:column="52"/></operator></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* Handle invalid object identifier encodings of the form 06 00 robustly */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">asn_length<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">==<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="9">objid<pos:position pos:line="35" pos:column="14"/></name><index pos:line="35" pos:column="14">[<expr><literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr>]<pos:position pos:line="35" pos:column="17"/></index></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name><name pos:line="35" pos:column="20">objid<pos:position pos:line="35" pos:column="25"/></name><index pos:line="35" pos:column="25">[<expr><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal></expr>]<pos:position pos:line="35" pos:column="28"/></index></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="31">0<pos:position pos:line="35" pos:column="32"/></literal></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="37" pos:column="5">length<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">asn_length<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="38" pos:column="5">(<pos:position pos:line="38" pos:column="6"/></operator><operator pos:line="38" pos:column="6">*<pos:position pos:line="38" pos:column="7"/></operator><name pos:line="38" pos:column="7">objidlength<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">)<pos:position pos:line="38" pos:column="19"/></operator><operator pos:line="38" pos:column="19">--<pos:position pos:line="38" pos:column="21"/></operator></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="38" pos:column="33">/* account for expansion of first byte */</comment>
    <while pos:line="39" pos:column="5">while <condition pos:line="39" pos:column="11">(<expr><name pos:line="39" pos:column="12">length<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">&gt;<pos:position pos:line="39" pos:column="23"/></operator> <literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal> <operator pos:line="39" pos:column="23">&amp;&amp;<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="26">(<pos:position pos:line="39" pos:column="27"/></operator><operator pos:line="39" pos:column="27">*<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">objidlength<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">)<pos:position pos:line="39" pos:column="40"/></operator><operator pos:line="39" pos:column="40">--<pos:position pos:line="39" pos:column="42"/></operator> <operator pos:line="39" pos:column="43">&gt;<pos:position pos:line="39" pos:column="47"/></operator> <literal type="number" pos:line="39" pos:column="45">0<pos:position pos:line="39" pos:column="46"/></literal></expr>)<pos:position pos:line="39" pos:column="47"/></condition> <block pos:line="39" pos:column="48">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">subidentifier<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="25">0<pos:position pos:line="40" pos:column="26"/></literal></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>

        <do pos:line="42" pos:column="9">do <block pos:line="42" pos:column="12">{			<comment type="block" pos:line="42" pos:column="33">/* shift and add in low order 7 bits */</comment>
            <expr_stmt><expr><name pos:line="43" pos:column="13">subidentifier<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <operator pos:line="43" pos:column="29">(<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">subidentifier<pos:position pos:line="43" pos:column="43"/></name> <operator pos:line="43" pos:column="44">&lt;&lt;<pos:position pos:line="43" pos:column="52"/></operator> <literal type="number" pos:line="43" pos:column="47">7<pos:position pos:line="43" pos:column="48"/></literal><operator pos:line="43" pos:column="48">)<pos:position pos:line="43" pos:column="49"/></operator>
                            <operator pos:line="44" pos:column="29">+<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="31">(<pos:position pos:line="44" pos:column="32"/></operator><operator pos:line="44" pos:column="32">*<pos:position pos:line="44" pos:column="33"/></operator><operator pos:line="44" pos:column="33">(<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">u_char<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">*<pos:position pos:line="44" pos:column="42"/></operator><operator pos:line="44" pos:column="42">)<pos:position pos:line="44" pos:column="43"/></operator> <name pos:line="44" pos:column="44">bufp<pos:position pos:line="44" pos:column="48"/></name> <operator pos:line="44" pos:column="49">&amp;<pos:position pos:line="44" pos:column="54"/></operator> <operator pos:line="44" pos:column="51">~<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">ASN_BIT8<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">)<pos:position pos:line="44" pos:column="61"/></operator></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">length<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">--<pos:position pos:line="45" pos:column="21"/></operator></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block> while <condition pos:line="46" pos:column="17">(<expr><operator pos:line="46" pos:column="18">*<pos:position pos:line="46" pos:column="19"/></operator><operator pos:line="46" pos:column="19">(<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">u_char<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">*<pos:position pos:line="46" pos:column="28"/></operator><operator pos:line="46" pos:column="28">)<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">bufp<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">++<pos:position pos:line="46" pos:column="36"/></operator> <operator pos:line="46" pos:column="37">&amp;<pos:position pos:line="46" pos:column="42"/></operator> <name pos:line="46" pos:column="39">ASN_BIT8<pos:position pos:line="46" pos:column="47"/></name></expr>)<pos:position pos:line="46" pos:column="48"/></condition>;<pos:position pos:line="46" pos:column="49"/></do>

        <comment type="block" pos:line="48" pos:column="9">/* while last byte has high bit clear */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">subidentifier<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">&gt;<pos:position pos:line="49" pos:column="31"/></operator> <operator pos:line="49" pos:column="29">(<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">u_int<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">)<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="37">MAX_SUBID<pos:position pos:line="49" pos:column="46"/></name></expr>)<pos:position pos:line="49" pos:column="47"/></condition><then pos:line="49" pos:column="47"> <block pos:line="49" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">snmp_set_api_error<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">SNMPERR_ASN_DECODE<pos:position pos:line="50" pos:column="50"/></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
            <return pos:line="51" pos:column="13">return <expr><operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">NULL<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">)<pos:position pos:line="51" pos:column="26"/></operator></expr>;<pos:position pos:line="51" pos:column="27"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">oidp<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">++<pos:position pos:line="53" pos:column="16"/></operator> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <operator pos:line="53" pos:column="19">(<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">oid<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">)<pos:position pos:line="53" pos:column="24"/></operator> <name pos:line="53" pos:column="25">subidentifier<pos:position pos:line="53" pos:column="38"/></name></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></while>

    <comment type="block" pos:line="56" pos:column="5">/*
     * The first two subidentifiers are encoded into the first component
     * with the value (X * 40) + Y, where:
     *  X is the value of the first subidentifier.
     *  Y is the value of the second subidentifier.
     */</comment>
    <expr_stmt><expr><name pos:line="62" pos:column="5">subidentifier<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <operator pos:line="62" pos:column="21">(<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">u_int<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">)<pos:position pos:line="62" pos:column="28"/></operator> <name><name pos:line="62" pos:column="29">objid<pos:position pos:line="62" pos:column="34"/></name><index pos:line="62" pos:column="34">[<expr><literal type="number" pos:line="62" pos:column="35">1<pos:position pos:line="62" pos:column="36"/></literal></expr>]<pos:position pos:line="62" pos:column="37"/></index></name></expr>;<pos:position pos:line="62" pos:column="38"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">subidentifier<pos:position pos:line="63" pos:column="22"/></name> <operator pos:line="63" pos:column="23">==<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">0x2B<pos:position pos:line="63" pos:column="30"/></literal></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31"> <block pos:line="63" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">objid<pos:position pos:line="64" pos:column="14"/></name><index pos:line="64" pos:column="14">[<expr><literal type="number" pos:line="64" pos:column="15">0<pos:position pos:line="64" pos:column="16"/></literal></expr>]<pos:position pos:line="64" pos:column="17"/></index></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <literal type="number" pos:line="64" pos:column="20">1<pos:position pos:line="64" pos:column="21"/></literal></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">objid<pos:position pos:line="65" pos:column="14"/></name><index pos:line="65" pos:column="14">[<expr><literal type="number" pos:line="65" pos:column="15">1<pos:position pos:line="65" pos:column="16"/></literal></expr>]<pos:position pos:line="65" pos:column="17"/></index></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <literal type="number" pos:line="65" pos:column="20">3<pos:position pos:line="65" pos:column="21"/></literal></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then> <else pos:line="66" pos:column="7">else <block pos:line="66" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">objid<pos:position pos:line="67" pos:column="14"/></name><index pos:line="67" pos:column="14">[<expr><literal type="number" pos:line="67" pos:column="15">1<pos:position pos:line="67" pos:column="16"/></literal></expr>]<pos:position pos:line="67" pos:column="17"/></index></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <call pos:line="67" pos:column="20">(<name pos:line="67" pos:column="21">u_char<pos:position pos:line="67" pos:column="27"/></name>) <argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">subidentifier<pos:position pos:line="67" pos:column="43"/></name> <operator pos:line="67" pos:column="44">%<pos:position pos:line="67" pos:column="45"/></operator> <literal type="number" pos:line="67" pos:column="46">40<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">objid<pos:position pos:line="68" pos:column="14"/></name><index pos:line="68" pos:column="14">[<expr><literal type="number" pos:line="68" pos:column="15">0<pos:position pos:line="68" pos:column="16"/></literal></expr>]<pos:position pos:line="68" pos:column="17"/></index></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <call pos:line="68" pos:column="20">(<name pos:line="68" pos:column="21">u_char<pos:position pos:line="68" pos:column="27"/></name>) <argument_list pos:line="68" pos:column="29">(<argument><expr><operator pos:line="68" pos:column="30">(<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">subidentifier<pos:position pos:line="68" pos:column="44"/></name> <operator pos:line="68" pos:column="45">-<pos:position pos:line="68" pos:column="46"/></operator> <name><name pos:line="68" pos:column="47">objid<pos:position pos:line="68" pos:column="52"/></name><index pos:line="68" pos:column="52">[<expr><literal type="number" pos:line="68" pos:column="53">1<pos:position pos:line="68" pos:column="54"/></literal></expr>]<pos:position pos:line="68" pos:column="55"/></index></name><operator pos:line="68" pos:column="55">)<pos:position pos:line="68" pos:column="56"/></operator> <operator pos:line="68" pos:column="57">/<pos:position pos:line="68" pos:column="58"/></operator> <literal type="number" pos:line="68" pos:column="59">40<pos:position pos:line="68" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="71" pos:column="5">*<pos:position pos:line="71" pos:column="6"/></operator><name pos:line="71" pos:column="6">objidlength<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <call pos:line="71" pos:column="20">(<name pos:line="71" pos:column="21">int<pos:position pos:line="71" pos:column="24"/></name>) <argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">oidp<pos:position pos:line="71" pos:column="31"/></name> <operator pos:line="71" pos:column="32">-<pos:position pos:line="71" pos:column="33"/></operator> <name pos:line="71" pos:column="34">objid<pos:position pos:line="71" pos:column="39"/></name></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
    <return pos:line="72" pos:column="5">return <expr><operator pos:line="72" pos:column="12">(<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="13">bufp<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">)<pos:position pos:line="72" pos:column="18"/></operator></expr>;<pos:position pos:line="72" pos:column="19"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

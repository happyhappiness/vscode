<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_63_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">commonCode<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">( <parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name><modifier pos:line="2" pos:column="16">&amp;<pos:position pos:line="2" pos:column="21"/></modifier></type> <name pos:line="2" pos:column="18">sockfd<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">bool<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">nodelay<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">sendBufferSize<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">recvBufferSize<pos:position pos:line="2" pos:column="78"/></name></decl></parameter> )<pos:position pos:line="2" pos:column="80"/></parameter_list>
<comment type="line" pos:line="3" pos:column="1">// purpose: common code in server sockets and client sockets</comment>
<comment type="line" pos:line="4" pos:column="1">// paramtr: sockfd (IO): socket filedescriptor</comment>
<comment type="line" pos:line="5" pos:column="1">//          nodelay (IN): true=set TCP_NODELAY option.</comment>
<comment type="line" pos:line="6" pos:column="1">//          sendBufferSize (IN): don't set (use sys defaults) if &lt; 0</comment>
<comment type="line" pos:line="7" pos:column="1">//          recvBufferSize (IN): don't set (use sys defaults) if &lt; 0</comment>
<comment type="line" pos:line="8" pos:column="1">// returns: 0 == if everthing went ok, -1 otherwise</comment>
<comment type="line" pos:line="9" pos:column="1">// warning: sockfd will be closed, if -1 is returned!</comment>
<block pos:line="10" pos:column="1">{
    <comment type="line" pos:line="11" pos:column="5">// set TCP_NODELAY option, if that is wanted.</comment>
    <comment type="line" pos:line="12" pos:column="5">// The socket API default is unset.</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">( <expr><name pos:line="13" pos:column="10">nodelay<pos:position pos:line="13" pos:column="17"/></name></expr> )<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">int<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">delay<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">( <expr><call><name pos:line="15" pos:column="14">setsockopt<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">( <argument><expr><name pos:line="15" pos:column="26">sockfd<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">IPPROTO_TCP<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">TCP_NODELAY<pos:position pos:line="15" pos:column="58"/></name></expr></argument>,
                         <argument><expr><operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><specifier pos:line="16" pos:column="27">const<pos:position pos:line="16" pos:column="32"/></specifier> <name pos:line="16" pos:column="33">char<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">*<pos:position pos:line="16" pos:column="38"/></operator><operator pos:line="16" pos:column="38">)<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="41">delay<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="48">sizeof<argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">delay<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="16" pos:column="63"/></argument_list></call> <operator pos:line="16" pos:column="64">==<pos:position pos:line="16" pos:column="66"/></operator> <operator pos:line="16" pos:column="67">-<pos:position pos:line="16" pos:column="68"/></operator><literal type="number" pos:line="16" pos:column="68">1<pos:position pos:line="16" pos:column="69"/></literal></expr> )<pos:position pos:line="16" pos:column="71"/></condition><then pos:line="16" pos:column="71"> <block pos:line="16" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">perror<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">( <argument><expr><literal type="string" pos:line="17" pos:column="21">"setsockopt( TCP_NODELAY ) failed"<pos:position pos:line="17" pos:column="55"/></literal></expr></argument> )<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">close<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">sockfd<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">-<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="23" pos:column="5">// set the socket send buffer size explicitly, or use the system default</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">( <expr><name pos:line="24" pos:column="10">sendBufferSize<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">&gt;=<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr> )<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block pos:line="24" pos:column="32">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">( <expr><call><name pos:line="25" pos:column="14">setsockopt<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">( <argument><expr><name pos:line="25" pos:column="26">sockfd<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">SOL_SOCKET<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">SO_SNDBUF<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="57">(<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="58">char<pos:position pos:line="25" pos:column="62"/></name><operator pos:line="25" pos:column="62">*<pos:position pos:line="25" pos:column="63"/></operator><operator pos:line="25" pos:column="63">)<pos:position pos:line="25" pos:column="64"/></operator> <operator pos:line="25" pos:column="65">&amp;<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="66">sendBufferSize<pos:position pos:line="25" pos:column="80"/></name></expr></argument>,
                         <argument><expr><sizeof pos:line="26" pos:column="26">sizeof<argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">sendBufferSize<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="26" pos:column="50"/></argument_list></call> <operator pos:line="26" pos:column="51">==<pos:position pos:line="26" pos:column="53"/></operator> <operator pos:line="26" pos:column="54">-<pos:position pos:line="26" pos:column="55"/></operator><literal type="number" pos:line="26" pos:column="55">1<pos:position pos:line="26" pos:column="56"/></literal></expr> )<pos:position pos:line="26" pos:column="58"/></condition><then pos:line="26" pos:column="58"> <block pos:line="26" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">perror<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">( <argument><expr><literal type="string" pos:line="27" pos:column="21">"setsockopt( SO_SNDBUF )"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument> )<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">close<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">sockfd<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
            <return pos:line="29" pos:column="13">return <expr><operator pos:line="29" pos:column="20">-<pos:position pos:line="29" pos:column="21"/></operator><literal type="number" pos:line="29" pos:column="21">1<pos:position pos:line="29" pos:column="22"/></literal></expr>;<pos:position pos:line="29" pos:column="23"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="33" pos:column="5">// set the socket recv buffer size explicitly, or use the system default</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">( <expr><name pos:line="34" pos:column="10">recvBufferSize<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">&gt;=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="28">0<pos:position pos:line="34" pos:column="29"/></literal></expr> )<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31"> <block pos:line="34" pos:column="32">{
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">( <expr><call><name pos:line="35" pos:column="14">setsockopt<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">( <argument><expr><name pos:line="35" pos:column="26">sockfd<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">SOL_SOCKET<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">SO_RCVBUF<pos:position pos:line="35" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="57">(<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="58">char<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">*<pos:position pos:line="35" pos:column="63"/></operator><operator pos:line="35" pos:column="63">)<pos:position pos:line="35" pos:column="64"/></operator> <operator pos:line="35" pos:column="65">&amp;<pos:position pos:line="35" pos:column="70"/></operator><name pos:line="35" pos:column="66">recvBufferSize<pos:position pos:line="35" pos:column="80"/></name></expr></argument>,
                         <argument><expr><sizeof pos:line="36" pos:column="26">sizeof<argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">recvBufferSize<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="36" pos:column="50"/></argument_list></call> <operator pos:line="36" pos:column="51">==<pos:position pos:line="36" pos:column="53"/></operator> <operator pos:line="36" pos:column="54">-<pos:position pos:line="36" pos:column="55"/></operator><literal type="number" pos:line="36" pos:column="55">1<pos:position pos:line="36" pos:column="56"/></literal></expr> )<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58"> <block pos:line="36" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">perror<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">( <argument><expr><literal type="string" pos:line="37" pos:column="21">"setsockopt( SO_RCVBUF )"<pos:position pos:line="37" pos:column="46"/></literal></expr></argument> )<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">close<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">sockfd<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
            <return pos:line="39" pos:column="13">return <expr><operator pos:line="39" pos:column="20">-<pos:position pos:line="39" pos:column="21"/></operator><literal type="number" pos:line="39" pos:column="21">1<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

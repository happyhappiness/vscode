<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4035_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Initiate<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">ServiceRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">makeXactLauncher<pos:position pos:line="2" pos:column="47"/></name></name><parameter_list pos:line="2" pos:column="47">(<parameter><decl><type><name pos:line="2" pos:column="48">HttpMsg<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">virgin<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3" pos:column="9">HttpRequest<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">cause<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="29">AccessLogEntry<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">::<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">Pointer<pos:position pos:line="3" pos:column="52"/></name></name> <modifier pos:line="3" pos:column="53">&amp;<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="54">alp<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><call><name pos:line="5" pos:column="10">up<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">()<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>

    <comment type="line" pos:line="7" pos:column="5">// register now because (a) we need EventLoop::Running and (b) we do not</comment>
    <comment type="line" pos:line="8" pos:column="5">// want to add more main loop overheads unless an async service is used.</comment>
    <decl_stmt><decl><specifier pos:line="9" pos:column="5">static<pos:position pos:line="9" pos:column="11"/></specifier> <type><name pos:line="9" pos:column="12">AsyncEngine<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">TheEngine<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><name pos:line="9" pos:column="37">NULL<pos:position pos:line="9" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">AsyncServices<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">size<pos:position pos:line="10" pos:column="27"/></name></name><argument_list pos:line="10" pos:column="27">()<pos:position pos:line="10" pos:column="29"/></argument_list></call> <operator pos:line="10" pos:column="30">&amp;&amp;<pos:position pos:line="10" pos:column="40"/></operator> <operator pos:line="10" pos:column="33">!<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">TheEngine<pos:position pos:line="10" pos:column="43"/></name> <operator pos:line="10" pos:column="44">&amp;&amp;<pos:position pos:line="10" pos:column="54"/></operator> <name><name pos:line="10" pos:column="47">EventLoop<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">::<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">Running<pos:position pos:line="10" pos:column="65"/></name></name></expr>)<pos:position pos:line="10" pos:column="66"/></condition><then pos:line="10" pos:column="66"> <block pos:line="10" pos:column="67">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">TheEngine<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <operator pos:line="11" pos:column="21">new<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">Engine<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">EventLoop<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">::<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">Running<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">registerEngine<pos:position pos:line="12" pos:column="43"/></name></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">TheEngine<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">93<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">3<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"asyncs: "<pos:position pos:line="13" pos:column="33"/></literal> <operator pos:line="13" pos:column="34">&lt;&lt;<pos:position pos:line="13" pos:column="42"/></operator> <call><name><name pos:line="13" pos:column="37">AsyncServices<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">.<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">size<pos:position pos:line="13" pos:column="55"/></name></name><argument_list pos:line="13" pos:column="55">()<pos:position pos:line="13" pos:column="57"/></argument_list></call> <operator pos:line="13" pos:column="58">&lt;&lt;<pos:position pos:line="13" pos:column="66"/></operator> <literal type="char" pos:line="13" pos:column="61">' '<pos:position pos:line="13" pos:column="64"/></literal> <operator pos:line="13" pos:column="65">&lt;&lt;<pos:position pos:line="13" pos:column="73"/></operator> <name pos:line="13" pos:column="68">TheEngine<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">XactionRep<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">rep<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><operator pos:line="16" pos:column="23">new<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">XactionRep<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">virgin<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">cause<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">alp<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="58">Pointer<pos:position pos:line="16" pos:column="65"/></name><argument_list pos:line="16" pos:column="65">(<argument><expr><name pos:line="16" pos:column="66">this<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">XactionRep<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">::<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">AdapterXaction<pos:position pos:line="17" pos:column="31"/></name></name></type> <name pos:line="17" pos:column="32">x<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><call><name><name pos:line="17" pos:column="34">theService<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">makeXaction<pos:position pos:line="17" pos:column="57"/></name></name><argument_list pos:line="17" pos:column="57">(<argument><expr><name pos:line="17" pos:column="58">rep<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></decl>;<pos:position pos:line="17" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">rep<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">-&gt;<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="10">master<pos:position pos:line="18" pos:column="16"/></name></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">x<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">rep<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1795_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">free_external_acl<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">data<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">external_acl<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">p<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><cast type="static" pos:line="4" pos:column="23">static_cast<argument_list type="generic" pos:line="4" pos:column="34">&lt;<argument><expr><name pos:line="4" pos:column="35">external_acl<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="53"/></argument_list><argument_list pos:line="4" pos:column="50">(<argument><expr><name pos:line="4" pos:column="51">data<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">safe_free<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">name<pos:position pos:line="5" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name><name pos:line="7" pos:column="12">p<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">format<pos:position pos:line="7" pos:column="21"/></name></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition> <block pos:line="7" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">external_acl_format<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">f<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name><name pos:line="8" pos:column="34">p<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">format<pos:position pos:line="8" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">format<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name><name pos:line="9" pos:column="21">f<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">next<pos:position pos:line="9" pos:column="28"/></name></name></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">cbdataFree<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">f<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">wordlistDestroy<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="22">p<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">cmdline<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">theHelper<pos:position pos:line="15" pos:column="21"/></name></name></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">helperShutdown<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name><name pos:line="16" pos:column="24">p<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">theHelper<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="17" pos:column="9">delete<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">p<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">theHelper<pos:position pos:line="17" pos:column="28"/></name></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">p<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">theHelper<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><name><name pos:line="21" pos:column="12">p<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">lru_list<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">tail<pos:position pos:line="21" pos:column="28"/></name></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">external_acl_cache_delete<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">p<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="22" pos:column="38">static_cast<argument_list type="generic" pos:line="22" pos:column="49">&lt;<argument><expr><name pos:line="22" pos:column="50">external_acl_entry<pos:position pos:line="22" pos:column="68"/></name> <operator pos:line="22" pos:column="69">*<pos:position pos:line="22" pos:column="70"/></operator></expr></argument>&gt;<pos:position pos:line="22" pos:column="74"/></argument_list><argument_list pos:line="22" pos:column="71">(<argument><expr><name><name pos:line="22" pos:column="72">p<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">-&gt;<pos:position pos:line="22" pos:column="78"/></operator><name pos:line="22" pos:column="75">lru_list<pos:position pos:line="22" pos:column="83"/></name><operator pos:line="22" pos:column="83">.<pos:position pos:line="22" pos:column="84"/></operator><name pos:line="22" pos:column="84">tail<pos:position pos:line="22" pos:column="88"/></name><operator pos:line="22" pos:column="88">-&gt;<pos:position pos:line="22" pos:column="93"/></operator><name pos:line="22" pos:column="90">data<pos:position pos:line="22" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="95"/></argument_list></cast></expr></argument>)<pos:position pos:line="22" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="97"/></expr_stmt></block></while>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">p<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">cache<pos:position pos:line="23" pos:column="17"/></name></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="9">hashFreeMemory<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name><name pos:line="24" pos:column="24">p<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">cache<pos:position pos:line="24" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

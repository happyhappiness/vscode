<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5264_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">netdbSendPing<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">ipcache_addrs<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">ia<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">DnsLookupDetails<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">&amp;<pos:position pos:line="2" pos:column="68"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">void<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">data<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IpAddress<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">addr<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">hostname<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><cast type="static" pos:line="6" pos:column="5">static_cast<argument_list type="generic" pos:line="6" pos:column="16">&lt;<argument><expr><name pos:line="6" pos:column="17">generic_cbdata<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="37"/></argument_list><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">data<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></cast><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><call><name pos:line="6" pos:column="42">unwrap<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><operator pos:line="6" pos:column="49">&amp;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="50">hostname<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">netdbEntry<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">n<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">netdbEntry<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">na<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">net_db_name<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">x<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">net_db_name<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier><modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">X<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ia<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">xfree<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">hostname<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">addr<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name><name pos:line="17" pos:column="12">ia<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">in_addrs<pos:position pos:line="17" pos:column="24"/></name><index pos:line="17" pos:column="24">[<expr><name><name pos:line="17" pos:column="25">ia<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">cur<pos:position pos:line="17" pos:column="32"/></name></name></expr>]<pos:position pos:line="17" pos:column="33"/></index></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">n<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">netdbLookupHost<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">hostname<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator> <operator pos:line="19" pos:column="41">==<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="44">NULL<pos:position pos:line="19" pos:column="48"/></name></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">n<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">netdbAdd<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">addr<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">netdbHostInsert<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">n<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">hostname<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <elseif pos:line="22" pos:column="7">else <if pos:line="22" pos:column="12">if <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">na<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">netdbLookupAddr<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">addr<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call><operator pos:line="22" pos:column="43">)<pos:position pos:line="22" pos:column="44"/></operator> <operator pos:line="22" pos:column="45">!=<pos:position pos:line="22" pos:column="47"/></operator> <name pos:line="22" pos:column="48">n<pos:position pos:line="22" pos:column="49"/></name></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50"> <block pos:line="22" pos:column="51">{
        <comment type="block" pos:line="23" pos:column="9">/*
         *hostname moved from 'network n' to 'network na'!
         */</comment>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">na<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">==<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">NULL<pos:position pos:line="27" pos:column="23"/></name></expr>)<pos:position pos:line="27" pos:column="24"/></condition><then pos:line="27" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="13">na<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">netdbAdd<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">addr<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">38<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">3<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"netdbSendPing: "<pos:position pos:line="30" pos:column="40"/></literal> <operator pos:line="30" pos:column="41">&lt;&lt;<pos:position pos:line="30" pos:column="49"/></operator> <name pos:line="30" pos:column="44">hostname<pos:position pos:line="30" pos:column="52"/></name> <operator pos:line="30" pos:column="53">&lt;&lt;<pos:position pos:line="30" pos:column="61"/></operator> <literal type="string" pos:line="30" pos:column="56">" moved from "<pos:position pos:line="30" pos:column="70"/></literal> <operator pos:line="30" pos:column="71">&lt;&lt;<pos:position pos:line="30" pos:column="79"/></operator> <name><name pos:line="30" pos:column="74">n<pos:position pos:line="30" pos:column="75"/></name><operator pos:line="30" pos:column="75">-&gt;<pos:position pos:line="30" pos:column="80"/></operator><name pos:line="30" pos:column="77">network<pos:position pos:line="30" pos:column="84"/></name></name> <operator pos:line="30" pos:column="85">&lt;&lt;<pos:position pos:line="30" pos:column="93"/></operator> <literal type="string" pos:line="30" pos:column="88">" to "<pos:position pos:line="30" pos:column="94"/></literal> <operator pos:line="30" pos:column="95">&lt;&lt;<pos:position pos:line="30" pos:column="103"/></operator> <name><name pos:line="30" pos:column="98">na<pos:position pos:line="30" pos:column="100"/></name><operator pos:line="30" pos:column="100">-&gt;<pos:position pos:line="30" pos:column="105"/></operator><name pos:line="30" pos:column="102">network<pos:position pos:line="30" pos:column="109"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="111"/></expr_stmt>

        <expr_stmt><expr><name pos:line="32" pos:column="9">x<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">net_db_name<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">*<pos:position pos:line="32" pos:column="27"/></operator><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator> <call><name pos:line="32" pos:column="29">hash_lookup<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">host_table<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="53">hostname<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">x<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator> <name pos:line="34" pos:column="18">NULL<pos:position pos:line="34" pos:column="22"/></name></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23"> <block pos:line="34" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debugs<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="number" pos:line="35" pos:column="20">38<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="24">1<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="27">"netdbSendPing: net_db_name list bug: "<pos:position pos:line="35" pos:column="66"/></literal> <operator pos:line="35" pos:column="67">&lt;&lt;<pos:position pos:line="35" pos:column="75"/></operator> <name pos:line="35" pos:column="70">hostname<pos:position pos:line="35" pos:column="78"/></name> <operator pos:line="35" pos:column="79">&lt;&lt;<pos:position pos:line="35" pos:column="87"/></operator> <literal type="string" pos:line="35" pos:column="82">" not found"<pos:position pos:line="35" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="96"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">xfree<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">hostname<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
            <return pos:line="37" pos:column="13">return;<pos:position pos:line="37" pos:column="20"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="40" pos:column="9">/* remove net_db_name from 'network n' linked list */</comment>
        <for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">X<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <operator pos:line="41" pos:column="18">&amp;<pos:position pos:line="41" pos:column="23"/></operator><name><name pos:line="41" pos:column="19">n<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">hosts<pos:position pos:line="41" pos:column="27"/></name></name></expr>;<pos:position pos:line="41" pos:column="28"/></init> <condition><expr><operator pos:line="41" pos:column="29">*<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">X<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></condition> <incr><expr><name pos:line="41" pos:column="33">X<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">=<pos:position pos:line="41" pos:column="36"/></operator> <operator pos:line="41" pos:column="37">&amp;<pos:position pos:line="41" pos:column="42"/></operator><name><operator pos:line="41" pos:column="38">(<pos:position pos:line="41" pos:column="39"/></operator><operator pos:line="41" pos:column="39">*<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">X<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">)<pos:position pos:line="41" pos:column="42"/></operator><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">next<pos:position pos:line="41" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="41" pos:column="49"/></control> <block pos:line="41" pos:column="50">{
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">X<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">==<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">x<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
                <expr_stmt><expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">X<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name><name pos:line="43" pos:column="22">x<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">next<pos:position pos:line="43" pos:column="29"/></name></name></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
                <break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block></for>

        <expr_stmt><expr><name><name pos:line="48" pos:column="9">n<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">link_count<pos:position pos:line="48" pos:column="22"/></name></name><operator pos:line="48" pos:column="22">--<pos:position pos:line="48" pos:column="24"/></operator></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
        <comment type="block" pos:line="49" pos:column="9">/* point to 'network na' from host entry */</comment>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">x<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">net_db_entry<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">na<pos:position pos:line="50" pos:column="29"/></name></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
        <comment type="block" pos:line="51" pos:column="9">/* link net_db_name to 'network na' */</comment>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">x<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">next<pos:position pos:line="52" pos:column="16"/></name></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <name><name pos:line="52" pos:column="19">na<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">hosts<pos:position pos:line="52" pos:column="28"/></name></name></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">na<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">hosts<pos:position pos:line="53" pos:column="18"/></name></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">x<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">na<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">link_count<pos:position pos:line="54" pos:column="23"/></name></name><operator pos:line="54" pos:column="23">++<pos:position pos:line="54" pos:column="25"/></operator></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">n<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <name pos:line="55" pos:column="13">na<pos:position pos:line="55" pos:column="15"/></name></expr>;<pos:position pos:line="55" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">n<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">next_ping_time<pos:position pos:line="58" pos:column="26"/></name></name> <operator pos:line="58" pos:column="27">&lt;=<pos:position pos:line="58" pos:column="32"/></operator> <name pos:line="58" pos:column="30">squid_curtime<pos:position pos:line="58" pos:column="43"/></name></expr>)<pos:position pos:line="58" pos:column="44"/></condition><then pos:line="58" pos:column="44"> <block pos:line="58" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">debugs<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="number" pos:line="59" pos:column="16">38<pos:position pos:line="59" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="20">3<pos:position pos:line="59" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="23">"netdbSendPing: pinging "<pos:position pos:line="59" pos:column="48"/></literal> <operator pos:line="59" pos:column="49">&lt;&lt;<pos:position pos:line="59" pos:column="57"/></operator> <name pos:line="59" pos:column="52">hostname<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="60" pos:column="9">icmpEngine<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">.<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="20">DomainPing<pos:position pos:line="60" pos:column="30"/></name></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">addr<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="37">hostname<pos:position pos:line="60" pos:column="45"/></name></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">n<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">pings_sent<pos:position pos:line="61" pos:column="22"/></name></name><operator pos:line="61" pos:column="22">++<pos:position pos:line="61" pos:column="24"/></operator></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">n<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">next_ping_time<pos:position pos:line="62" pos:column="26"/></name></name> <operator pos:line="62" pos:column="27">=<pos:position pos:line="62" pos:column="28"/></operator> <name pos:line="62" pos:column="29">squid_curtime<pos:position pos:line="62" pos:column="42"/></name> <operator pos:line="62" pos:column="43">+<pos:position pos:line="62" pos:column="44"/></operator> <name><name pos:line="62" pos:column="45">Config<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">.<pos:position pos:line="62" pos:column="52"/></operator><name pos:line="62" pos:column="52">Netdb<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">.<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="58">period<pos:position pos:line="62" pos:column="64"/></name></name></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">n<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">-&gt;<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="12">last_use_time<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <name pos:line="63" pos:column="28">squid_curtime<pos:position pos:line="63" pos:column="41"/></name></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">xfree<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">hostname<pos:position pos:line="66" pos:column="19"/></name></expr></argument>)<pos:position pos:line="66" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3678_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">callWhenReady<pos:position pos:line="1" pos:column="49"/></name></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name><name pos:line="1" pos:column="50">AsyncCall<pos:position pos:line="1" pos:column="59"/></name><operator pos:line="1" pos:column="59">::<pos:position pos:line="1" pos:column="61"/></operator><name pos:line="1" pos:column="61">Pointer<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">&amp;<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="70">cb<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">cb<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">!=<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">NULL<pos:position pos:line="3" pos:column="18"/></name></expr></argument>)<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">93<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="15">5<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="18">HERE<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;&lt;<pos:position pos:line="5" pos:column="31"/></operator> <literal type="string" pos:line="5" pos:column="26">"Adaptation::Icap::Service is asked to call "<pos:position pos:line="5" pos:column="71"/></literal> <operator pos:line="5" pos:column="72">&lt;&lt;<pos:position pos:line="5" pos:column="80"/></operator> <operator pos:line="5" pos:column="75">*<pos:position pos:line="5" pos:column="76"/></operator><name pos:line="5" pos:column="76">cb<pos:position pos:line="5" pos:column="78"/></name> <operator pos:line="5" pos:column="79">&lt;&lt;<pos:position pos:line="5" pos:column="87"/></operator>
           <literal type="string" pos:line="6" pos:column="12">" when ready "<pos:position pos:line="6" pos:column="26"/></literal> <operator pos:line="6" pos:column="27">&lt;&lt;<pos:position pos:line="6" pos:column="35"/></operator> <call><name pos:line="6" pos:column="30">status<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><operator pos:line="8" pos:column="10">!<pos:position pos:line="8" pos:column="11"/></operator><call><name pos:line="8" pos:column="11">broken<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">()<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt> <comment type="line" pos:line="8" pos:column="22">// we do not wait for a broken service</comment>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">Client<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">i<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">i<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">.<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">service<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">Pointer<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">this<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt> <comment type="line" pos:line="11" pos:column="32">// TODO: is this really needed?</comment>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">i<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">.<pos:position pos:line="12" pos:column="7"/></operator><name pos:line="12" pos:column="7">callback<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">cb<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">theClients<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">push_back<pos:position pos:line="13" pos:column="25"/></name></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">i<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">theOptionsFetcher<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">set<pos:position pos:line="15" pos:column="30"/></name></name><argument_list pos:line="15" pos:column="30">()<pos:position pos:line="15" pos:column="32"/></argument_list></call> <operator pos:line="15" pos:column="33">||<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">notifying<pos:position pos:line="15" pos:column="45"/></name></expr>)<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46">
        <block type="pseudo"><return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="16" pos:column="17">// do nothing, we will be picked up in noteTimeToNotify()</comment>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">needNewOptions<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">startGettingOptions<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">()<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="20" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">scheduleNotification<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">()<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt></block></else></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2935_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">cloneReply<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">reply<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">reply<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name><name pos:line="6" pos:column="13">http<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">storeEntry<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><call><name pos:line="6" pos:column="33">getReply<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">()<pos:position pos:line="6" pos:column="43"/></argument_list></call><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><call><name pos:line="6" pos:column="45">clone<pos:position pos:line="6" pos:column="50"/></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">HTTPMSGLOCK<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">reply<pos:position pos:line="7" pos:column="22"/></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">reply<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">sline<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">protocol<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">==<pos:position pos:line="9" pos:column="33"/></operator> <name><name pos:line="9" pos:column="34">AnyP<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">::<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">PROTO_HTTP<pos:position pos:line="9" pos:column="50"/></name></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51"> <block pos:line="9" pos:column="52">{
        <comment type="block" pos:line="10" pos:column="9">/* RFC 2616 requires us to advertise our version (but only on real HTTP traffic) */</comment>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">reply<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">sline<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">version<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <call><name><name pos:line="11" pos:column="32">Http<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">::<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">ProtocolVersion<pos:position pos:line="11" pos:column="53"/></name></name><argument_list pos:line="11" pos:column="53">()<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* do header conversions */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">buildReplyHeader<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">()<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

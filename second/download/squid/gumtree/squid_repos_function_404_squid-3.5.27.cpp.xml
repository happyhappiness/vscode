<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_404_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">check_gss_err<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">OM_uint32<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">major_status<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">OM_uint32<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">minor_status<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
              <parameter><decl><type><specifier pos:line="3" pos:column="15">const<pos:position pos:line="3" pos:column="20"/></specifier> <name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">function<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="37">int<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">log<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">int<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">sout<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">GSS_ERROR<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">major_status<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33"> <block pos:line="5" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">OM_uint32<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">maj_stat<pos:position pos:line="6" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="29">min_stat<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">OM_uint32<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">msg_ctx<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">gss_buffer_desc<pos:position pos:line="8" pos:column="24"/></name></type> <name pos:line="8" pos:column="25">status_string<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">buf<pos:position pos:line="9" pos:column="17"/></name><index pos:line="9" pos:column="17">[<expr><literal type="number" pos:line="9" pos:column="18">1024<pos:position pos:line="9" pos:column="22"/></literal></expr>]<pos:position pos:line="9" pos:column="23"/></index></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="15">0<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">msg_ctx<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
        <do pos:line="14" pos:column="9">do <block pos:line="14" pos:column="12">{
            <comment type="block" pos:line="15" pos:column="13">/* convert major status code (GSS-API error) to text */</comment>
            <expr_stmt><expr><name pos:line="16" pos:column="13">maj_stat<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">gss_display_status<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">min_stat<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">major_status<pos:position pos:line="16" pos:column="66"/></name></expr></argument>,
                                          <argument><expr><name pos:line="17" pos:column="43">GSS_C_GSS_CODE<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">GSS_C_NULL_OID<pos:position pos:line="17" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="75">&amp;<pos:position pos:line="17" pos:column="80"/></operator><name pos:line="17" pos:column="76">msg_ctx<pos:position pos:line="17" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="85">&amp;<pos:position pos:line="17" pos:column="90"/></operator><name pos:line="17" pos:column="86">status_string<pos:position pos:line="17" pos:column="99"/></name></expr></argument>)<pos:position pos:line="17" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="101"/></expr_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">maj_stat<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">GSS_S_COMPLETE<pos:position pos:line="18" pos:column="43"/></name> <operator pos:line="18" pos:column="44">&amp;&amp;<pos:position pos:line="18" pos:column="54"/></operator> <name><name pos:line="18" pos:column="47">status_string<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">.<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="61">length<pos:position pos:line="18" pos:column="67"/></name></name> <operator pos:line="18" pos:column="68">&gt;<pos:position pos:line="18" pos:column="72"/></operator> <literal type="number" pos:line="18" pos:column="70">0<pos:position pos:line="18" pos:column="71"/></literal></expr>)<pos:position pos:line="18" pos:column="72"/></condition><then pos:line="18" pos:column="72"> <block pos:line="18" pos:column="73">{
                <if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><sizeof pos:line="19" pos:column="21">sizeof<argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">buf<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></sizeof> <operator pos:line="19" pos:column="33">&gt;<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="35">len<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">+<pos:position pos:line="19" pos:column="40"/></operator> <name><name pos:line="19" pos:column="41">status_string<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">.<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="55">length<pos:position pos:line="19" pos:column="61"/></name></name> <operator pos:line="19" pos:column="62">+<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="64">1<pos:position pos:line="19" pos:column="65"/></literal></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66"> <block pos:line="19" pos:column="67">{
                    <expr_stmt><expr><call><name pos:line="20" pos:column="21">snprintf<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">+<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">len<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="41">(<pos:position pos:line="20" pos:column="42"/></operator><sizeof pos:line="20" pos:column="42">sizeof<argument_list pos:line="20" pos:column="48">(<argument><expr><name pos:line="20" pos:column="49">buf<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></sizeof> <operator pos:line="20" pos:column="54">-<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="56">len<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">)<pos:position pos:line="20" pos:column="60"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="62">"%s"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="68">(<pos:position pos:line="20" pos:column="69"/></operator><name pos:line="20" pos:column="69">char<pos:position pos:line="20" pos:column="73"/></name> <operator pos:line="20" pos:column="74">*<pos:position pos:line="20" pos:column="75"/></operator><operator pos:line="20" pos:column="75">)<pos:position pos:line="20" pos:column="76"/></operator> <name><name pos:line="20" pos:column="77">status_string<pos:position pos:line="20" pos:column="90"/></name><operator pos:line="20" pos:column="90">.<pos:position pos:line="20" pos:column="91"/></operator><name pos:line="20" pos:column="91">value<pos:position pos:line="20" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="98"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="21" pos:column="21">len<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">+=<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">status_string<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">length<pos:position pos:line="21" pos:column="48"/></name></name></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="22" pos:column="18"/></block></then></if>
            }<pos:position pos:line="23" pos:column="14"/></block></then> <else pos:line="23" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">msg_ctx<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></else></if>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">gss_release_buffer<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">min_stat<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">status_string<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block> while <condition pos:line="26" pos:column="17">(<expr><name pos:line="26" pos:column="18">msg_ctx<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition>;<pos:position pos:line="26" pos:column="27"/></do>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><sizeof pos:line="27" pos:column="13">sizeof<argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">buf<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></sizeof> <operator pos:line="27" pos:column="25">&gt;<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="27">len<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">+<pos:position pos:line="27" pos:column="32"/></operator> <literal type="number" pos:line="27" pos:column="33">2<pos:position pos:line="27" pos:column="34"/></literal></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35"> <block pos:line="27" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">snprintf<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">buf<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">+<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">len<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="33">(<pos:position pos:line="28" pos:column="34"/></operator><sizeof pos:line="28" pos:column="34">sizeof<argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">buf<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></sizeof> <operator pos:line="28" pos:column="46">-<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">len<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">)<pos:position pos:line="28" pos:column="52"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="54">"%s"<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="60">". "<pos:position pos:line="28" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name pos:line="29" pos:column="13">len<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">+=<pos:position pos:line="29" pos:column="19"/></operator> <literal type="number" pos:line="29" pos:column="20">2<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="31" pos:column="9">msg_ctx<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
        <do pos:line="32" pos:column="9">do <block pos:line="32" pos:column="12">{
            <comment type="block" pos:line="33" pos:column="13">/* convert minor status code (underlying routine error) to text */</comment>
            <expr_stmt><expr><name pos:line="34" pos:column="13">maj_stat<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">gss_display_status<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><operator pos:line="34" pos:column="43">&amp;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="44">min_stat<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="54">minor_status<pos:position pos:line="34" pos:column="66"/></name></expr></argument>,
                                          <argument><expr><name pos:line="35" pos:column="43">GSS_C_MECH_CODE<pos:position pos:line="35" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="60">GSS_C_NULL_OID<pos:position pos:line="35" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="76">&amp;<pos:position pos:line="35" pos:column="81"/></operator><name pos:line="35" pos:column="77">msg_ctx<pos:position pos:line="35" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="86">&amp;<pos:position pos:line="35" pos:column="91"/></operator><name pos:line="35" pos:column="87">status_string<pos:position pos:line="35" pos:column="100"/></name></expr></argument>)<pos:position pos:line="35" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="102"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">maj_stat<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">GSS_S_COMPLETE<pos:position pos:line="36" pos:column="43"/></name> <operator pos:line="36" pos:column="44">&amp;&amp;<pos:position pos:line="36" pos:column="54"/></operator> <name><name pos:line="36" pos:column="47">status_string<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">.<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="61">length<pos:position pos:line="36" pos:column="67"/></name></name> <operator pos:line="36" pos:column="68">&gt;<pos:position pos:line="36" pos:column="72"/></operator> <literal type="number" pos:line="36" pos:column="70">0<pos:position pos:line="36" pos:column="71"/></literal></expr>)<pos:position pos:line="36" pos:column="72"/></condition><then pos:line="36" pos:column="72"> <block pos:line="36" pos:column="73">{
                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><sizeof pos:line="37" pos:column="21">sizeof<argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">buf<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></sizeof> <operator pos:line="37" pos:column="33">&gt;<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="35">len<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">+<pos:position pos:line="37" pos:column="40"/></operator> <name><name pos:line="37" pos:column="41">status_string<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">.<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="55">length<pos:position pos:line="37" pos:column="61"/></name></name></expr>)<pos:position pos:line="37" pos:column="62"/></condition><then pos:line="37" pos:column="62"> <block pos:line="37" pos:column="63">{
                    <expr_stmt><expr><call><name pos:line="38" pos:column="21">snprintf<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">buf<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">+<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">len<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="41">(<pos:position pos:line="38" pos:column="42"/></operator><sizeof pos:line="38" pos:column="42">sizeof<argument_list pos:line="38" pos:column="48">(<argument><expr><name pos:line="38" pos:column="49">buf<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></sizeof> <operator pos:line="38" pos:column="54">-<pos:position pos:line="38" pos:column="55"/></operator> <name pos:line="38" pos:column="56">len<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">)<pos:position pos:line="38" pos:column="60"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="62">"%s"<pos:position pos:line="38" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="68">(<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="69">char<pos:position pos:line="38" pos:column="73"/></name> <operator pos:line="38" pos:column="74">*<pos:position pos:line="38" pos:column="75"/></operator><operator pos:line="38" pos:column="75">)<pos:position pos:line="38" pos:column="76"/></operator> <name><name pos:line="38" pos:column="77">status_string<pos:position pos:line="38" pos:column="90"/></name><operator pos:line="38" pos:column="90">.<pos:position pos:line="38" pos:column="91"/></operator><name pos:line="38" pos:column="91">value<pos:position pos:line="38" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="98"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="39" pos:column="21">len<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">+=<pos:position pos:line="39" pos:column="27"/></operator> <name><name pos:line="39" pos:column="28">status_string<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">.<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">length<pos:position pos:line="39" pos:column="48"/></name></name></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="40" pos:column="18"/></block></then></if>
            }<pos:position pos:line="41" pos:column="14"/></block></then> <else pos:line="41" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">msg_ctx<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <literal type="number" pos:line="42" pos:column="27">0<pos:position pos:line="42" pos:column="28"/></literal></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt></block></else></if>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">gss_release_buffer<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><operator pos:line="43" pos:column="32">&amp;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="33">min_stat<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="43">&amp;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="44">status_string<pos:position pos:line="43" pos:column="57"/></name></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block> while <condition pos:line="44" pos:column="17">(<expr><name pos:line="44" pos:column="18">msg_ctx<pos:position pos:line="44" pos:column="25"/></name></expr>)<pos:position pos:line="44" pos:column="26"/></condition>;<pos:position pos:line="44" pos:column="27"/></do>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debug<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><operator pos:line="45" pos:column="15">(<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">char<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">*<pos:position pos:line="45" pos:column="22"/></operator><operator pos:line="45" pos:column="22">)<pos:position pos:line="45" pos:column="23"/></operator> <literal type="string" pos:line="45" pos:column="24">"%s| %s: ERROR: %s failed: %s\n"<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="58">LogTime<pos:position pos:line="45" pos:column="65"/></name><argument_list pos:line="45" pos:column="65">()<pos:position pos:line="45" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="69">PROGRAM<pos:position pos:line="45" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="78">function<pos:position pos:line="45" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="88">buf<pos:position pos:line="45" pos:column="91"/></name></expr></argument>)<pos:position pos:line="45" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="93"/></expr_stmt>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">sout<pos:position pos:line="46" pos:column="17"/></name></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="13">fprintf<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">stdout<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="29">"BH %s failed: %s\n"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">function<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">buf<pos:position pos:line="47" pos:column="64"/></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt></block></then></if>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">log<pos:position pos:line="48" pos:column="16"/></name></expr>)<pos:position pos:line="48" pos:column="17"/></condition><then pos:line="48" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="13">fprintf<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">stderr<pos:position pos:line="49" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="29">"%s| %s: INFO: User not authenticated\n"<pos:position pos:line="49" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="71">LogTime<pos:position pos:line="49" pos:column="78"/></name><argument_list pos:line="49" pos:column="78">()<pos:position pos:line="49" pos:column="80"/></argument_list></call></expr></argument>,
                    <argument><expr><name pos:line="50" pos:column="21">PROGRAM<pos:position pos:line="50" pos:column="28"/></name></expr></argument>)<pos:position pos:line="50" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt></block></then></if>
        <return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal><operator pos:line="51" pos:column="18">)<pos:position pos:line="51" pos:column="19"/></operator></expr>;<pos:position pos:line="51" pos:column="20"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal><operator pos:line="53" pos:column="14">)<pos:position pos:line="53" pos:column="15"/></operator></expr>;<pos:position pos:line="53" pos:column="16"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4616_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLHierCodeData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">empty<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list> <specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">hier_code<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">iter<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">HIER_NONE<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></init> <condition><expr><name pos:line="4" pos:column="38">iter<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">&lt;=<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="46">HIER_MAX<pos:position pos:line="4" pos:column="54"/></name></expr>;<pos:position pos:line="4" pos:column="55"/></condition> <incr><expr><operator pos:line="4" pos:column="56">++<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">iter<pos:position pos:line="4" pos:column="62"/></name></expr></incr>)<pos:position pos:line="4" pos:column="63"/></control> <block pos:line="4" pos:column="64">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">values<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">iter<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block type="pseudo"><return pos:line="5" pos:column="27">return <expr><literal type="boolean" pos:line="5" pos:column="34">false<pos:position pos:line="5" pos:column="39"/></literal></expr>;<pos:position pos:line="5" pos:column="40"/></return></block></then></if> <comment type="line" pos:line="5" pos:column="41">// not empty.</comment>
    }<pos:position pos:line="6" pos:column="6"/></block></for>
    <return pos:line="7" pos:column="5">return <expr><literal type="boolean" pos:line="7" pos:column="12">true<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

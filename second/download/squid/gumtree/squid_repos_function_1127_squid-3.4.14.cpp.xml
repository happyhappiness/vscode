<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1127_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_time_msec<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">StoreEntry<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">entry<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">name<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">time_msec_t<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">var<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">var<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">%<pos:position pos:line="4" pos:column="14"/></operator> <literal type="number" pos:line="4" pos:column="15">1000<pos:position pos:line="4" pos:column="19"/></literal></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">storeAppendPrintf<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">entry<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"%s %"<pos:position pos:line="5" pos:column="40"/></literal> <name pos:line="5" pos:column="41">PRId64<pos:position pos:line="5" pos:column="47"/></name> <literal type="string" pos:line="5" pos:column="48">" milliseconds\n"<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="67">name<pos:position pos:line="5" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="73">var<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="78"/></expr_stmt></block></then>
    <else pos:line="6" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">storeAppendPrintf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"%s %d seconds\n"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">name<pos:position pos:line="7" pos:column="57"/></name></expr></argument>, <argument><expr><call pos:line="7" pos:column="59">(<name pos:line="7" pos:column="60">int<pos:position pos:line="7" pos:column="63"/></name>)<argument_list pos:line="7" pos:column="64">(<argument><expr><name pos:line="7" pos:column="65">var<pos:position pos:line="7" pos:column="68"/></name><operator pos:line="7" pos:column="68">/<pos:position pos:line="7" pos:column="69"/></operator><literal type="number" pos:line="7" pos:column="69">1000<pos:position pos:line="7" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr></argument> )<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="77"/></expr_stmt></block></else></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_902_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">commSetTcpKeepalive<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">fd<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">idle<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">interval<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">timeout<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">on<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">TCP_KEEPCNT<pos:position pos:line="5" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">timeout<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&amp;&amp;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="20">interval<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">count<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">timeout<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">+<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">interval<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">-<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">1<pos:position pos:line="7" pos:column="44"/></literal><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator> <operator pos:line="7" pos:column="46">/<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">interval<pos:position pos:line="7" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">setsockopt<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">fd<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">IPPROTO_TCP<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">TCP_KEEPCNT<pos:position pos:line="8" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="54">&amp;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="55">count<pos:position pos:line="8" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="62">sizeof<argument_list pos:line="8" pos:column="68">(<argument><expr><name pos:line="8" pos:column="69">on<pos:position pos:line="8" pos:column="71"/></name></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call> <operator pos:line="8" pos:column="74">&lt;<pos:position pos:line="8" pos:column="78"/></operator> <literal type="number" pos:line="8" pos:column="76">0<pos:position pos:line="8" pos:column="77"/></literal></expr>)<pos:position pos:line="8" pos:column="78"/></condition><then pos:line="8" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">5<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">1<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"commSetKeepalive: FD "<pos:position pos:line="9" pos:column="49"/></literal> <operator pos:line="9" pos:column="50">&lt;&lt;<pos:position pos:line="9" pos:column="58"/></operator> <name pos:line="9" pos:column="53">fd<pos:position pos:line="9" pos:column="55"/></name> <operator pos:line="9" pos:column="56">&lt;&lt;<pos:position pos:line="9" pos:column="64"/></operator> <literal type="string" pos:line="9" pos:column="59">": "<pos:position pos:line="9" pos:column="63"/></literal> <operator pos:line="9" pos:column="64">&lt;&lt;<pos:position pos:line="9" pos:column="72"/></operator> <call><name pos:line="9" pos:column="67">xstrerror<pos:position pos:line="9" pos:column="76"/></name><argument_list pos:line="9" pos:column="76">()<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">TCP_KEEPIDLE<pos:position pos:line="12" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">idle<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14"> <block pos:line="13" pos:column="15">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">setsockopt<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">fd<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">IPPROTO_TCP<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">TCP_KEEPIDLE<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="55">&amp;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="56">idle<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="62">sizeof<argument_list pos:line="14" pos:column="68">(<argument><expr><name pos:line="14" pos:column="69">on<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call> <operator pos:line="14" pos:column="74">&lt;<pos:position pos:line="14" pos:column="78"/></operator> <literal type="number" pos:line="14" pos:column="76">0<pos:position pos:line="14" pos:column="77"/></literal></expr>)<pos:position pos:line="14" pos:column="78"/></condition><then pos:line="14" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">5<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="23">1<pos:position pos:line="15" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">"commSetKeepalive: FD "<pos:position pos:line="15" pos:column="49"/></literal> <operator pos:line="15" pos:column="50">&lt;&lt;<pos:position pos:line="15" pos:column="58"/></operator> <name pos:line="15" pos:column="53">fd<pos:position pos:line="15" pos:column="55"/></name> <operator pos:line="15" pos:column="56">&lt;&lt;<pos:position pos:line="15" pos:column="64"/></operator> <literal type="string" pos:line="15" pos:column="59">": "<pos:position pos:line="15" pos:column="63"/></literal> <operator pos:line="15" pos:column="64">&lt;&lt;<pos:position pos:line="15" pos:column="72"/></operator> <call><name pos:line="15" pos:column="67">xstrerror<pos:position pos:line="15" pos:column="76"/></name><argument_list pos:line="15" pos:column="76">()<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">TCP_KEEPINTVL<pos:position pos:line="18" pos:column="21"/></name></cpp:ifdef>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">interval<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">setsockopt<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">fd<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">IPPROTO_TCP<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">TCP_KEEPINTVL<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="56">&amp;<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="57">interval<pos:position pos:line="20" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="67">sizeof<argument_list pos:line="20" pos:column="73">(<argument><expr><name pos:line="20" pos:column="74">on<pos:position pos:line="20" pos:column="76"/></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call> <operator pos:line="20" pos:column="79">&lt;<pos:position pos:line="20" pos:column="83"/></operator> <literal type="number" pos:line="20" pos:column="81">0<pos:position pos:line="20" pos:column="82"/></literal></expr>)<pos:position pos:line="20" pos:column="83"/></condition><then pos:line="20" pos:column="83">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">5<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="23">1<pos:position pos:line="21" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="26">"commSetKeepalive: FD "<pos:position pos:line="21" pos:column="49"/></literal> <operator pos:line="21" pos:column="50">&lt;&lt;<pos:position pos:line="21" pos:column="58"/></operator> <name pos:line="21" pos:column="53">fd<pos:position pos:line="21" pos:column="55"/></name> <operator pos:line="21" pos:column="56">&lt;&lt;<pos:position pos:line="21" pos:column="64"/></operator> <literal type="string" pos:line="21" pos:column="59">": "<pos:position pos:line="21" pos:column="63"/></literal> <operator pos:line="21" pos:column="64">&lt;&lt;<pos:position pos:line="21" pos:column="72"/></operator> <call><name pos:line="21" pos:column="67">xstrerror<pos:position pos:line="21" pos:column="76"/></name><argument_list pos:line="21" pos:column="76">()<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">setsockopt<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">fd<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">SOL_SOCKET<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">SO_KEEPALIVE<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="50">(<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">char<pos:position pos:line="24" pos:column="55"/></name> <operator pos:line="24" pos:column="56">*<pos:position pos:line="24" pos:column="57"/></operator><operator pos:line="24" pos:column="57">)<pos:position pos:line="24" pos:column="58"/></operator> <operator pos:line="24" pos:column="59">&amp;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="60">on<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="64">sizeof<argument_list pos:line="24" pos:column="70">(<argument><expr><name pos:line="24" pos:column="71">on<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call> <operator pos:line="24" pos:column="76">&lt;<pos:position pos:line="24" pos:column="80"/></operator> <literal type="number" pos:line="24" pos:column="78">0<pos:position pos:line="24" pos:column="79"/></literal></expr>)<pos:position pos:line="24" pos:column="80"/></condition><then pos:line="24" pos:column="80">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">5<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="19">1<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="22">"commSetKeepalive: FD "<pos:position pos:line="25" pos:column="45"/></literal> <operator pos:line="25" pos:column="46">&lt;&lt;<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="49">fd<pos:position pos:line="25" pos:column="51"/></name> <operator pos:line="25" pos:column="52">&lt;&lt;<pos:position pos:line="25" pos:column="60"/></operator> <literal type="string" pos:line="25" pos:column="55">": "<pos:position pos:line="25" pos:column="59"/></literal> <operator pos:line="25" pos:column="60">&lt;&lt;<pos:position pos:line="25" pos:column="68"/></operator> <call><name pos:line="25" pos:column="63">xstrerror<pos:position pos:line="25" pos:column="72"/></name><argument_list pos:line="25" pos:column="72">()<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt></block></then></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

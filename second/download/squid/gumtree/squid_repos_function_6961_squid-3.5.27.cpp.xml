<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6961_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">Ipc<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">StoreMap<pos:position pos:line="1" pos:column="20"/></name><operator pos:line="1" pos:column="20">::<pos:position pos:line="1" pos:column="22"/></operator><name pos:line="1" pos:column="22">Slice<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">&amp;<pos:position pos:line="1" pos:column="33"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreMap<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">readableSlice<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">AnchorId<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">anchorId<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">SliceId<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">sliceId<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <specifier pos:line="2" pos:column="78">const<pos:position pos:line="2" pos:column="83"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">anchorAt<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">anchorId<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><call><name pos:line="4" pos:column="31">reading<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">()<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name pos:line="5" pos:column="12">validSlice<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">sliceId<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">sliceAt<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">sliceId<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5406_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">fvdbCount<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">hash_table<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">hash<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">key<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">fvdb_entry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">fv<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">NULL<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">hash<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">fv<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">fvdb_entry<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></operator><operator pos:line="9" pos:column="23">)<pos:position pos:line="9" pos:column="24"/></operator><call><name pos:line="9" pos:column="24">hash_lookup<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">hash<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">key<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">NULL<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">fv<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">fv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <cast type="static" pos:line="12" pos:column="14">static_cast <argument_list type="generic" pos:line="12" pos:column="26">&lt;<argument><expr><name pos:line="12" pos:column="27">fvdb_entry<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="43"/></argument_list><argument_list pos:line="12" pos:column="40">(<argument><expr><call><name pos:line="12" pos:column="41">xcalloc<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><literal type="number" pos:line="12" pos:column="49">1<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="52">sizeof<argument_list pos:line="12" pos:column="58">(<argument><expr><name pos:line="12" pos:column="59">fvdb_entry<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></cast></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">fv<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">hash<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">key<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">xstrdup<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">key<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">hash_join<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">hash<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name><name pos:line="14" pos:column="26">fv<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">hash<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="17" pos:column="5">++<pos:position pos:line="17" pos:column="7"/></operator> <name><name pos:line="17" pos:column="8">fv<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">n<pos:position pos:line="17" pos:column="13"/></name></name></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1229_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CpuAffinitySet<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">undo<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">applied<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">sched_setaffinity<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="34">sizeof<argument_list pos:line="5" pos:column="40">(<argument><expr><name pos:line="5" pos:column="41">theOrigCpuSet<pos:position pos:line="5" pos:column="54"/></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="5" pos:column="57">&amp;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="58">theOrigCpuSet<pos:position pos:line="5" pos:column="71"/></name></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="73"/></condition><then pos:line="5" pos:column="73"> <block pos:line="5" pos:column="74">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">54<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">DBG_IMPORTANT<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="39">"ERROR: failed to restore original CPU "<pos:position pos:line="6" pos:column="79"/></literal>
                   <literal type="string" pos:line="7" pos:column="20">"affinity for process PID "<pos:position pos:line="7" pos:column="47"/></literal> <operator pos:line="7" pos:column="48">&lt;&lt;<pos:position pos:line="7" pos:column="56"/></operator> <call><name pos:line="7" pos:column="51">getpid<pos:position pos:line="7" pos:column="57"/></name><argument_list pos:line="7" pos:column="57">()<pos:position pos:line="7" pos:column="59"/></argument_list></call> <operator pos:line="7" pos:column="60">&lt;&lt;<pos:position pos:line="7" pos:column="68"/></operator> <literal type="string" pos:line="7" pos:column="63">": "<pos:position pos:line="7" pos:column="67"/></literal> <operator pos:line="7" pos:column="68">&lt;&lt;<pos:position pos:line="7" pos:column="76"/></operator>
                   <call><name pos:line="8" pos:column="20">xstrerror<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">()<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">CPU_ZERO<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="19">theOrigCpuSet<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5873_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Session<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">unpack<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name><name pos:line="2" pos:column="29">Ipc<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">TypedMsgHdr<pos:position pos:line="2" pos:column="45"/></name></name><modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="47">msg<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">free<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">()<pos:position pos:line="4" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">msg<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">getPod<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">Version<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">community_len<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <call><name><name pos:line="6" pos:column="21">msg<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">getInt<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">community_len<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&gt;<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">community<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <cast type="static" pos:line="8" pos:column="21">static_cast<argument_list type="generic" pos:line="8" pos:column="32">&lt;<argument><expr><name pos:line="8" pos:column="33">u_char<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">*<pos:position pos:line="8" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="44"/></argument_list><argument_list pos:line="8" pos:column="41">(<argument><expr><call><name pos:line="8" pos:column="42">xmalloc<pos:position pos:line="8" pos:column="49"/></name><argument_list pos:line="8" pos:column="49">(<argument><expr><name pos:line="8" pos:column="50">community_len<pos:position pos:line="8" pos:column="63"/></name> <operator pos:line="8" pos:column="64">+<pos:position pos:line="8" pos:column="65"/></operator> <literal type="number" pos:line="8" pos:column="66">1<pos:position pos:line="8" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></cast></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">Must<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">community<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">!=<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">msg<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">getFixed<pos:position pos:line="10" pos:column="21"/></name></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">community<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">community_len<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">community<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><name pos:line="11" pos:column="19">community_len<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <literal type="number" pos:line="11" pos:column="36">0<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">msg<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">.<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">getPod<pos:position pos:line="13" pos:column="15"/></name></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">retries<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">msg<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">.<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">getPod<pos:position pos:line="14" pos:column="15"/></name></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">timeout<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <init pos:line="15" pos:column="13">= <expr><call><name><name pos:line="15" pos:column="15">msg<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">getInt<pos:position pos:line="15" pos:column="25"/></name></name><argument_list pos:line="15" pos:column="25">()<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">&gt;<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">peername<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <cast type="static" pos:line="17" pos:column="20">static_cast<argument_list type="generic" pos:line="17" pos:column="31">&lt;<argument><expr><name pos:line="17" pos:column="32">char<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="41"/></argument_list><argument_list pos:line="17" pos:column="38">(<argument><expr><call><name pos:line="17" pos:column="39">xmalloc<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">len<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">+<pos:position pos:line="17" pos:column="52"/></operator> <literal type="number" pos:line="17" pos:column="53">1<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></cast></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">Must<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">peername<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">!=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">NULL<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">msg<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">getFixed<pos:position pos:line="19" pos:column="21"/></name></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">peername<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">len<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">peername<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><name pos:line="20" pos:column="18">len<pos:position pos:line="20" pos:column="21"/></name></expr>]<pos:position pos:line="20" pos:column="22"/></index></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">msg<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">getPod<pos:position pos:line="22" pos:column="15"/></name></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">remote_port<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">msg<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">.<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">getPod<pos:position pos:line="23" pos:column="15"/></name></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">local_port<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3830_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Ecap<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">ServiceRep<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">AdapterService<pos:position pos:line="1" pos:column="45"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">FindAdapterService<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">String<pos:position pos:line="2" pos:column="50"/></name><modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="52">serviceUri<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">std<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">::<pos:position pos:line="4" pos:column="18"/></operator><name><name pos:line="4" pos:column="18">list<pos:position pos:line="4" pos:column="22"/></name><argument_list type="generic" pos:line="4" pos:column="22">&lt;<argument><expr><name><name pos:line="4" pos:column="23">ServiceRep<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">::<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">AdapterService<pos:position pos:line="4" pos:column="49"/></name></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="53"/></argument_list></name><operator pos:line="4" pos:column="50">::<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">const_iterator<pos:position pos:line="4" pos:column="66"/></name></name></type> <name pos:line="4" pos:column="67">ASCI<pos:position pos:line="4" pos:column="71"/></name>;<pos:position pos:line="4" pos:column="72"/></typedef>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">ASCI<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">s<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name><name pos:line="5" pos:column="19">TheServices<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">begin<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">()<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></init> <condition><expr><name pos:line="5" pos:column="40">s<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">!=<pos:position pos:line="5" pos:column="44"/></operator> <call><name><name pos:line="5" pos:column="45">TheServices<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">.<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">end<pos:position pos:line="5" pos:column="60"/></name></name><argument_list pos:line="5" pos:column="60">()<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></condition> <incr><expr><operator pos:line="5" pos:column="64">++<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="66">s<pos:position pos:line="5" pos:column="67"/></name></expr></incr>)<pos:position pos:line="5" pos:column="68"/></control> <block pos:line="5" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">Must<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">s<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">serviceUri<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <call><name><operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">s<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">uri<pos:position pos:line="7" pos:column="36"/></name></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><call><name pos:line="7" pos:column="39">c_str<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">()<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="47"/></condition><then pos:line="7" pos:column="47">
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><operator pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">s<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    <return pos:line="10" pos:column="5">return <expr><call><name><name pos:line="10" pos:column="12">ServiceRep<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">::<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">AdapterService<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

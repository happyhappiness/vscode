<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5578_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">ConnOpener<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">doneAll<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list> <specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// is the conn_ to be opened still waiting?</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">conn_<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
        <return pos:line="6" pos:column="9">return <expr><call><name><name pos:line="6" pos:column="16">AsyncJob<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">::<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">doneAll<pos:position pos:line="6" pos:column="33"/></name></name><argument_list pos:line="6" pos:column="33">()<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// is the callback still to be called?</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">callback_<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">||<pos:position pos:line="10" pos:column="29"/></operator> <call><name><name pos:line="10" pos:column="30">callback_<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">canceled<pos:position pos:line="10" pos:column="49"/></name></name><argument_list pos:line="10" pos:column="49">()<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <block pos:line="10" pos:column="53">{
        <return pos:line="11" pos:column="9">return <expr><call><name><name pos:line="11" pos:column="16">AsyncJob<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">::<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">doneAll<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">()<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="14" pos:column="5">// otherwise, we must be waiting for something</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">Must<pos:position pos:line="15" pos:column="9"/></name><argument_list pos:line="15" pos:column="9">(<argument><expr><name pos:line="15" pos:column="10">temporaryFd_<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&gt;=<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal> <operator pos:line="15" pos:column="28">||<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="31">calls_<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">sleep_<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><literal type="boolean" pos:line="16" pos:column="12">false<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4905_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">RebuildState<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">rebuildFromDirectory<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">()<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cache_key<pos:position pos:line="4" pos:column="14"/></name></type> <name><name pos:line="4" pos:column="15">key<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><name pos:line="4" pos:column="19">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="4" pos:column="42"/></name></expr>]<pos:position pos:line="4" pos:column="43"/></index></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">stat<pos:position pos:line="6" pos:column="16"/></name></name></type> <name pos:line="6" pos:column="17">sb<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">fd<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><operator pos:line="7" pos:column="14">-<pos:position pos:line="7" pos:column="15"/></operator><literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">this<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">!=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">47<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="19">HERE<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;&lt;<pos:position pos:line="9" pos:column="32"/></operator> <literal type="string" pos:line="9" pos:column="27">"DIR #"<pos:position pos:line="9" pos:column="34"/></literal> <operator pos:line="9" pos:column="35">&lt;&lt;<pos:position pos:line="9" pos:column="43"/></operator> <name><name pos:line="9" pos:column="38">sd<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">index<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">fd<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">-<pos:position pos:line="11" pos:column="19"/></operator><literal type="number" pos:line="11" pos:column="19">1<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">sfileno<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">filn<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">size<pos:position pos:line="13" pos:column="13"/></name></decl>;<pos:position pos:line="13" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">fd<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">getNextFile<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><operator pos:line="14" pos:column="22">&amp;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="23">filn<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">size<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">fd<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <operator pos:line="16" pos:column="15">-<pos:position pos:line="16" pos:column="16"/></operator><literal type="number" pos:line="16" pos:column="16">2<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18"> <block pos:line="16" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">47<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">DBG_IMPORTANT<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"Done scanning "<pos:position pos:line="17" pos:column="51"/></literal> <operator pos:line="17" pos:column="52">&lt;&lt;<pos:position pos:line="17" pos:column="60"/></operator> <name><name pos:line="17" pos:column="55">sd<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">-&gt;<pos:position pos:line="17" pos:column="62"/></operator><name pos:line="17" pos:column="59">path<pos:position pos:line="17" pos:column="63"/></name></name> <operator pos:line="17" pos:column="64">&lt;&lt;<pos:position pos:line="17" pos:column="72"/></operator> <literal type="string" pos:line="17" pos:column="67">" dir ("<pos:position pos:line="17" pos:column="75"/></literal> <operator pos:line="17" pos:column="76">&lt;&lt;<pos:position pos:line="17" pos:column="84"/></operator>
               <name pos:line="18" pos:column="16">n_read<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;&lt;<pos:position pos:line="18" pos:column="31"/></operator> <literal type="string" pos:line="18" pos:column="26">" entries)"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">_done<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="boolean" pos:line="19" pos:column="17">true<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <elseif pos:line="21" pos:column="7">else <if pos:line="21" pos:column="12">if <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">fd<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">fd<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">&gt;<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="17">-<pos:position pos:line="25" pos:column="18"/></operator><literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
    <comment type="block" pos:line="26" pos:column="5">/* lets get file stats here */</comment>

    <expr_stmt><expr><operator pos:line="28" pos:column="5">++<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">n_read<pos:position pos:line="28" pos:column="13"/></name></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">fstat<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><name pos:line="30" pos:column="15">fd<pos:position pos:line="30" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="19">&amp;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="20">sb<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call> <operator pos:line="30" pos:column="24">&lt;<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28"> <block pos:line="30" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">47<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="20">DBG_IMPORTANT<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">HERE<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">&lt;&lt;<pos:position pos:line="31" pos:column="48"/></operator> <literal type="string" pos:line="31" pos:column="43">"fstat(FD "<pos:position pos:line="31" pos:column="54"/></literal> <operator pos:line="31" pos:column="55">&lt;&lt;<pos:position pos:line="31" pos:column="63"/></operator> <name pos:line="31" pos:column="58">fd<pos:position pos:line="31" pos:column="60"/></name> <operator pos:line="31" pos:column="61">&lt;&lt;<pos:position pos:line="31" pos:column="69"/></operator> <literal type="string" pos:line="31" pos:column="64">"): "<pos:position pos:line="31" pos:column="69"/></literal> <operator pos:line="31" pos:column="70">&lt;&lt;<pos:position pos:line="31" pos:column="78"/></operator> <call><name pos:line="31" pos:column="73">xstrerror<pos:position pos:line="31" pos:column="82"/></name><argument_list pos:line="31" pos:column="82">()<pos:position pos:line="31" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="86"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">file_close<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">fd<pos:position pos:line="32" pos:column="22"/></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">--<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">store_open_disk_fd<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">fd<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>
        <return pos:line="35" pos:column="9">return;<pos:position pos:line="35" pos:column="16"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="38" pos:column="5">MemBuf<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">buf<pos:position pos:line="38" pos:column="15"/></name></decl>;<pos:position pos:line="38" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">buf<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">.<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="9">init<pos:position pos:line="39" pos:column="13"/></name></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">SM_PAGE_SIZE<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="28">SM_PAGE_SIZE<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><call><name pos:line="40" pos:column="10">storeRebuildLoadEntry<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">fd<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="36">sd<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">index<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">buf<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">counts<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="60"/></condition><then pos:line="40" pos:column="60">
        <block type="pseudo"><return pos:line="41" pos:column="9">return;<pos:position pos:line="41" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="43" pos:column="5">StoreEntry<pos:position pos:line="43" pos:column="15"/></name></type> <name pos:line="43" pos:column="16">tmpe<pos:position pos:line="43" pos:column="20"/></name></decl>;<pos:position pos:line="43" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="44" pos:column="5">const<pos:position pos:line="44" pos:column="10"/></specifier> <name pos:line="44" pos:column="11">bool<pos:position pos:line="44" pos:column="15"/></name></type> <name pos:line="44" pos:column="16">loaded<pos:position pos:line="44" pos:column="22"/></name> <init pos:line="44" pos:column="23">= <expr><call><name pos:line="44" pos:column="25">storeRebuildParseEntry<pos:position pos:line="44" pos:column="47"/></name><argument_list pos:line="44" pos:column="47">(<argument><expr><name pos:line="44" pos:column="48">buf<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">tmpe<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="59">key<pos:position pos:line="44" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="64">counts<pos:position pos:line="44" pos:column="70"/></name></expr></argument>,
                        <argument><expr><operator pos:line="45" pos:column="25">(<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">int64_t<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">)<pos:position pos:line="45" pos:column="34"/></operator><name><name pos:line="45" pos:column="34">sb<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">.<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="37">st_size<pos:position pos:line="45" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="46"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">file_close<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">fd<pos:position pos:line="47" pos:column="18"/></name></expr></argument>)<pos:position pos:line="47" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="48" pos:column="5">--<pos:position pos:line="48" pos:column="7"/></operator><name pos:line="48" pos:column="7">store_open_disk_fd<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">fd<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <operator pos:line="49" pos:column="10">-<pos:position pos:line="49" pos:column="11"/></operator><literal type="number" pos:line="49" pos:column="11">1<pos:position pos:line="49" pos:column="12"/></literal></expr>;<pos:position pos:line="49" pos:column="13"/></expr_stmt>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">loaded<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17"> <block pos:line="51" pos:column="18">{
        <comment type="line" pos:line="52" pos:column="9">// XXX: shouldn't this be a call to commonUfsUnlink?</comment>
        <expr_stmt><expr><call><name><name pos:line="53" pos:column="9">sd<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">unlinkFile<pos:position pos:line="53" pos:column="23"/></name></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">filn<pos:position pos:line="53" pos:column="28"/></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt> <comment type="line" pos:line="53" pos:column="31">// should we unlink in all failure cases?</comment>
        <return pos:line="54" pos:column="9">return;<pos:position pos:line="54" pos:column="16"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><call><name pos:line="57" pos:column="10">storeRebuildKeepEntry<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">tmpe<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">key<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">counts<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="51"/></condition><then pos:line="57" pos:column="51">
        <block type="pseudo"><return pos:line="58" pos:column="9">return;<pos:position pos:line="58" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="60" pos:column="5">++<pos:position pos:line="60" pos:column="7"/></operator><name><name pos:line="60" pos:column="7">counts<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">.<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">objcount<pos:position pos:line="60" pos:column="22"/></name></name></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
    <comment type="line" pos:line="61" pos:column="5">// tmpe.dump(5);</comment>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">currentEntry<pos:position pos:line="62" pos:column="17"/></name><argument_list pos:line="62" pos:column="17">(<argument><expr><call><name><name pos:line="62" pos:column="18">sd<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">addDiskRestore<pos:position pos:line="62" pos:column="36"/></name></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">key<pos:position pos:line="62" pos:column="40"/></name></expr></argument>,
                                    <argument><expr><name pos:line="63" pos:column="37">filn<pos:position pos:line="63" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="64" pos:column="37">tmpe<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">.<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="42">swap_file_sz<pos:position pos:line="64" pos:column="54"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="65" pos:column="37">tmpe<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">expires<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="66" pos:column="37">tmpe<pos:position pos:line="66" pos:column="41"/></name><operator pos:line="66" pos:column="41">.<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="42">timestamp<pos:position pos:line="66" pos:column="51"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="67" pos:column="37">tmpe<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">.<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">lastref<pos:position pos:line="67" pos:column="49"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="68" pos:column="37">tmpe<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">.<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="42">lastmod<pos:position pos:line="68" pos:column="49"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="69" pos:column="37">tmpe<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">.<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">refcount<pos:position pos:line="69" pos:column="50"/></name></name></expr></argument>,  <comment type="block" pos:line="69" pos:column="53">/* refcount */</comment>
                                    <argument><expr><name><name pos:line="70" pos:column="37">tmpe<pos:position pos:line="70" pos:column="41"/></name><operator pos:line="70" pos:column="41">.<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="42">flags<pos:position pos:line="70" pos:column="47"/></name></name></expr></argument>,     <comment type="block" pos:line="70" pos:column="53">/* flags */</comment>
                                    <argument><expr><operator pos:line="71" pos:column="37">(<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="38">int<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">)<pos:position pos:line="71" pos:column="42"/></operator> <name><name pos:line="71" pos:column="43">flags<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">.<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="49">clean<pos:position pos:line="71" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">storeDirSwapLog<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><call><name pos:line="72" pos:column="21">currentEntry<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">()<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">SWAP_LOG_ADD<pos:position pos:line="72" pos:column="49"/></name></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="51"/></expr_stmt>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

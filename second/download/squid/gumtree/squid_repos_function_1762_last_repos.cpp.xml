<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1762_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">xprof_comp<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">A<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">void<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">B<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">xprof_stats_node<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">ii<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">(<pos:position pos:line="4" pos:column="36"/></operator><cast type="static" pos:line="4" pos:column="36">static_cast<argument_list type="generic" pos:line="4" pos:column="47">&lt;<argument><expr><specifier pos:line="4" pos:column="48">const<pos:position pos:line="4" pos:column="53"/></specifier> <name pos:line="4" pos:column="54">xprof_stats_node<pos:position pos:line="4" pos:column="70"/></name> <operator pos:line="4" pos:column="71">*<pos:position pos:line="4" pos:column="72"/></operator> <specifier pos:line="4" pos:column="73">const<pos:position pos:line="4" pos:column="78"/></specifier> <operator pos:line="4" pos:column="79">*<pos:position pos:line="4" pos:column="80"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="84"/></argument_list><argument_list pos:line="4" pos:column="81">(<argument><expr><name pos:line="4" pos:column="82">A<pos:position pos:line="4" pos:column="83"/></name></expr></argument>)<pos:position pos:line="4" pos:column="84"/></argument_list></cast><operator pos:line="4" pos:column="84">)<pos:position pos:line="4" pos:column="85"/></operator></expr></init></decl>;<pos:position pos:line="4" pos:column="86"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">xprof_stats_node<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">jj<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><operator pos:line="5" pos:column="35">(<pos:position pos:line="5" pos:column="36"/></operator><cast type="static" pos:line="5" pos:column="36">static_cast<argument_list type="generic" pos:line="5" pos:column="47">&lt;<argument><expr><specifier pos:line="5" pos:column="48">const<pos:position pos:line="5" pos:column="53"/></specifier> <name pos:line="5" pos:column="54">xprof_stats_node<pos:position pos:line="5" pos:column="70"/></name> <operator pos:line="5" pos:column="71">*<pos:position pos:line="5" pos:column="72"/></operator> <specifier pos:line="5" pos:column="73">const<pos:position pos:line="5" pos:column="78"/></specifier> <operator pos:line="5" pos:column="79">*<pos:position pos:line="5" pos:column="80"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="84"/></argument_list><argument_list pos:line="5" pos:column="81">(<argument><expr><name pos:line="5" pos:column="82">B<pos:position pos:line="5" pos:column="83"/></name></expr></argument>)<pos:position pos:line="5" pos:column="84"/></argument_list></cast><operator pos:line="5" pos:column="84">)<pos:position pos:line="5" pos:column="85"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="86"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">ii<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">hist<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">summ<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <name><name pos:line="7" pos:column="25">jj<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">hist<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">summ<pos:position pos:line="7" pos:column="38"/></name></name></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator></expr>;<pos:position pos:line="8" pos:column="20"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">ii<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">hist<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">summ<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">&gt;<pos:position pos:line="10" pos:column="27"/></operator> <name><name pos:line="10" pos:column="25">jj<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">hist<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">summ<pos:position pos:line="10" pos:column="38"/></name></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">-<pos:position pos:line="11" pos:column="18"/></operator><literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal><operator pos:line="13" pos:column="14">)<pos:position pos:line="13" pos:column="15"/></operator></expr>;<pos:position pos:line="13" pos:column="16"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

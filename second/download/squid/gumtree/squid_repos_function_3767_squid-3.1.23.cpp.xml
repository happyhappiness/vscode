<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3767_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">dumpService<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">StoreEntry<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">entry<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">name<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list> <specifier pos:line="2" pos:column="70">const<pos:position pos:line="2" pos:column="75"/></specifier>
<block pos:line="3" pos:column="1">{
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">Services<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">::<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">iterator<pos:position pos:line="4" pos:column="31"/></name></name></type> <name pos:line="4" pos:column="32">SCI<pos:position pos:line="4" pos:column="35"/></name>;<pos:position pos:line="4" pos:column="36"/></typedef>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">SCI<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><call><name pos:line="5" pos:column="18">AllServices<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">()<pos:position pos:line="5" pos:column="31"/></argument_list></call><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><call><name pos:line="5" pos:column="32">begin<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></init> <condition><expr><name pos:line="5" pos:column="41">i<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">!=<pos:position pos:line="5" pos:column="45"/></operator> <call><name pos:line="5" pos:column="46">AllServices<pos:position pos:line="5" pos:column="57"/></name><argument_list pos:line="5" pos:column="57">()<pos:position pos:line="5" pos:column="59"/></argument_list></call><operator pos:line="5" pos:column="59">.<pos:position pos:line="5" pos:column="60"/></operator><call><name pos:line="5" pos:column="60">end<pos:position pos:line="5" pos:column="63"/></name><argument_list pos:line="5" pos:column="63">()<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="66"/></condition> <incr><expr><operator pos:line="5" pos:column="67">++<pos:position pos:line="5" pos:column="69"/></operator><name pos:line="5" pos:column="69">i<pos:position pos:line="5" pos:column="70"/></name></expr></incr>)<pos:position pos:line="5" pos:column="71"/></control> <block pos:line="5" pos:column="72">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">ServiceConfig<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">&amp;<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="30">cfg<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><call><name><operator pos:line="6" pos:column="36">(<pos:position pos:line="6" pos:column="37"/></operator><operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">i<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">cfg<pos:position pos:line="6" pos:column="45"/></name></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">storeAppendPrintf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"%s "<pos:position pos:line="7" pos:column="39"/></literal> <name pos:line="7" pos:column="40">SQUIDSTRINGPH<pos:position pos:line="7" pos:column="53"/></name> <literal type="string" pos:line="7" pos:column="54">"_%s %s %d "<pos:position pos:line="7" pos:column="66"/></literal> <name pos:line="7" pos:column="67">SQUIDSTRINGPH<pos:position pos:line="7" pos:column="80"/></name> <literal type="string" pos:line="7" pos:column="81">"\n"<pos:position pos:line="7" pos:column="85"/></literal></expr></argument>,
                          <argument><expr><name pos:line="8" pos:column="27">name<pos:position pos:line="8" pos:column="31"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="9" pos:column="27">SQUIDSTRINGPRINT<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name><name pos:line="9" pos:column="44">cfg<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">.<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">key<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></argument>,
                          <argument><expr><call><name><name pos:line="10" pos:column="27">cfg<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">methodStr<pos:position pos:line="10" pos:column="40"/></name></name><argument_list pos:line="10" pos:column="40">()<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="44">cfg<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">vectPointStr<pos:position pos:line="10" pos:column="60"/></name></name><argument_list pos:line="10" pos:column="60">()<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="64">cfg<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">.<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="68">bypass<pos:position pos:line="10" pos:column="74"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="11" pos:column="27">SQUIDSTRINGPRINT<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name><name pos:line="11" pos:column="44">cfg<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">uri<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></for>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5808_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Basic<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">UserRequest<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">startHelperLookup<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><name pos:line="2" pos:column="45">HttpRequest<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">request<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="67">AccessLogEntry<pos:position pos:line="2" pos:column="81"/></name><operator pos:line="2" pos:column="81">::<pos:position pos:line="2" pos:column="83"/></operator><name pos:line="2" pos:column="83">Pointer<pos:position pos:line="2" pos:column="90"/></name></name> <modifier pos:line="2" pos:column="91">&amp;<pos:position pos:line="2" pos:column="96"/></modifier></type><name pos:line="2" pos:column="92">al<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="96">AUTHCB<pos:position pos:line="2" pos:column="102"/></name> <modifier pos:line="2" pos:column="103">*<pos:position pos:line="2" pos:column="104"/></modifier></type> <name pos:line="2" pos:column="105">handler<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="114">void<pos:position pos:line="2" pos:column="118"/></name> <modifier pos:line="2" pos:column="119">*<pos:position pos:line="2" pos:column="120"/></modifier></type><name pos:line="2" pos:column="120">data<pos:position pos:line="2" pos:column="124"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="125"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">user<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">auth_type<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">==<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="33">Auth<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">::<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">AUTH_BASIC<pos:position pos:line="4" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Auth<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">::<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">Basic<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">::<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">User<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">basic_auth<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><cast type="dynamic" pos:line="5" pos:column="37">dynamic_cast<argument_list type="generic" pos:line="5" pos:column="49">&lt;<argument><expr><name><name pos:line="5" pos:column="50">Auth<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">::<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="56">Basic<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">::<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="63">User<pos:position pos:line="5" pos:column="67"/></name></name> <operator pos:line="5" pos:column="68">*<pos:position pos:line="5" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="73"/></argument_list><argument_list pos:line="5" pos:column="70">(<argument><expr><call><name pos:line="5" pos:column="71">user<pos:position pos:line="5" pos:column="75"/></name><argument_list pos:line="5" pos:column="75">()<pos:position pos:line="5" pos:column="77"/></argument_list></call><operator pos:line="5" pos:column="77">.<pos:position pos:line="5" pos:column="78"/></operator><call><name pos:line="5" pos:column="78">getRaw<pos:position pos:line="5" pos:column="84"/></name><argument_list pos:line="5" pos:column="84">()<pos:position pos:line="5" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="87"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="5" pos:column="88"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">basic_auth<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">!=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">29<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">9<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">HERE<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="string" pos:line="7" pos:column="27">"'"<pos:position pos:line="7" pos:column="30"/></literal> <operator pos:line="7" pos:column="31">&lt;&lt;<pos:position pos:line="7" pos:column="39"/></operator> <call><name><name pos:line="7" pos:column="34">basic_auth<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">username<pos:position pos:line="7" pos:column="54"/></name></name><argument_list pos:line="7" pos:column="54">()<pos:position pos:line="7" pos:column="56"/></argument_list></call> <operator pos:line="7" pos:column="57">&lt;&lt;<pos:position pos:line="7" pos:column="65"/></operator> <literal type="string" pos:line="7" pos:column="60">":"<pos:position pos:line="7" pos:column="63"/></literal> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator> <name><name pos:line="7" pos:column="67">basic_auth<pos:position pos:line="7" pos:column="77"/></name><operator pos:line="7" pos:column="77">-&gt;<pos:position pos:line="7" pos:column="82"/></operator><name pos:line="7" pos:column="79">passwd<pos:position pos:line="7" pos:column="85"/></name></name> <operator pos:line="7" pos:column="86">&lt;&lt;<pos:position pos:line="7" pos:column="94"/></operator> <literal type="string" pos:line="7" pos:column="89">"'"<pos:position pos:line="7" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="94"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><cast type="static" pos:line="9" pos:column="9">static_cast<argument_list type="generic" pos:line="9" pos:column="20">&lt;<argument><expr><name><name pos:line="9" pos:column="21">Auth<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">::<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">Basic<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">::<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">Config<pos:position pos:line="9" pos:column="40"/></name></name><operator pos:line="9" pos:column="40">*<pos:position pos:line="9" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="45"/></argument_list><argument_list pos:line="9" pos:column="42">(<argument><expr><call><name><name pos:line="9" pos:column="43">Auth<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">::<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">Config<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">::<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">Find<pos:position pos:line="9" pos:column="61"/></name></name><argument_list pos:line="9" pos:column="61">(<argument><expr><literal type="string" pos:line="9" pos:column="62">"basic"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></cast><operator pos:line="9" pos:column="71">-&gt;<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="73">authenticateProgram<pos:position pos:line="9" pos:column="92"/></name> <operator pos:line="9" pos:column="93">==<pos:position pos:line="9" pos:column="95"/></operator> <name pos:line="9" pos:column="96">NULL<pos:position pos:line="9" pos:column="100"/></name></expr>)<pos:position pos:line="9" pos:column="101"/></condition><then pos:line="9" pos:column="101"> <block pos:line="9" pos:column="102">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">29<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_CRITICAL<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"ERROR: No Basic authentication program configured."<pos:position pos:line="10" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">handler<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">data<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* check to see if the auth_user already has a request outstanding */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">user<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">()<pos:position pos:line="16" pos:column="15"/></argument_list></call><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><call><name pos:line="16" pos:column="17">credentials<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">()<pos:position pos:line="16" pos:column="30"/></argument_list></call> <operator pos:line="16" pos:column="31">==<pos:position pos:line="16" pos:column="33"/></operator> <name><name pos:line="16" pos:column="34">Auth<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">::<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">Pending<pos:position pos:line="16" pos:column="47"/></name></name></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <block pos:line="16" pos:column="49">{
        <comment type="block" pos:line="17" pos:column="9">/* there is a request with the same credentials already being verified */</comment>

        <decl_stmt><decl><type><name><name pos:line="19" pos:column="9">Auth<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">::<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">QueueNode<pos:position pos:line="19" pos:column="24"/></name></name> <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">node<pos:position pos:line="19" pos:column="30"/></name> <init pos:line="19" pos:column="31">= <expr><operator pos:line="19" pos:column="33">new<pos:position pos:line="19" pos:column="36"/></operator> <call><name><name pos:line="19" pos:column="37">Auth<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">::<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">QueueNode<pos:position pos:line="19" pos:column="52"/></name></name><argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">this<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">handler<pos:position pos:line="19" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="68">data<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="74"/></decl_stmt>

        <comment type="block" pos:line="21" pos:column="9">/* queue this validation request to be infored of the pending lookup results */</comment>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">node<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">next<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name><name pos:line="22" pos:column="22">basic_auth<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">queue<pos:position pos:line="22" pos:column="39"/></name></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">basic_auth<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">queue<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="29">node<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <comment type="line" pos:line="26" pos:column="5">// otherwise submit this request to the auth helper(s) for validation</comment>

    <comment type="block" pos:line="28" pos:column="5">/* mark this user as having verification in progress */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">user<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">()<pos:position pos:line="29" pos:column="11"/></argument_list></call><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><call><name pos:line="29" pos:column="13">credentials<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">Auth<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">::<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">Pending<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name></type> <name><name pos:line="30" pos:column="10">buf<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">HELPER_INPUT_BUFFER<pos:position pos:line="30" pos:column="33"/></name></expr>]<pos:position pos:line="30" pos:column="34"/></index></name></decl>;<pos:position pos:line="30" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="31" pos:column="5">static<pos:position pos:line="31" pos:column="11"/></specifier> <type><name pos:line="31" pos:column="12">char<pos:position pos:line="31" pos:column="16"/></name></type> <name><name pos:line="31" pos:column="17">usern<pos:position pos:line="31" pos:column="22"/></name><index pos:line="31" pos:column="22">[<expr><name pos:line="31" pos:column="23">HELPER_INPUT_BUFFER<pos:position pos:line="31" pos:column="42"/></name></expr>]<pos:position pos:line="31" pos:column="43"/></index></name></decl>;<pos:position pos:line="31" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="32" pos:column="5">static<pos:position pos:line="32" pos:column="11"/></specifier> <type><name pos:line="32" pos:column="12">char<pos:position pos:line="32" pos:column="16"/></name></type> <name><name pos:line="32" pos:column="17">pass<pos:position pos:line="32" pos:column="21"/></name><index pos:line="32" pos:column="21">[<expr><name pos:line="32" pos:column="22">HELPER_INPUT_BUFFER<pos:position pos:line="32" pos:column="41"/></name></expr>]<pos:position pos:line="32" pos:column="42"/></index></name></decl>;<pos:position pos:line="32" pos:column="43"/></decl_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><cast type="static" pos:line="33" pos:column="9">static_cast<argument_list type="generic" pos:line="33" pos:column="20">&lt;<argument><expr><name><name pos:line="33" pos:column="21">Auth<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">::<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">Basic<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">::<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="34">Config<pos:position pos:line="33" pos:column="40"/></name></name><operator pos:line="33" pos:column="40">*<pos:position pos:line="33" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="33" pos:column="45"/></argument_list><argument_list pos:line="33" pos:column="42">(<argument><expr><call><name pos:line="33" pos:column="43">user<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">()<pos:position pos:line="33" pos:column="49"/></argument_list></call><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">config<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></cast><operator pos:line="33" pos:column="58">-&gt;<pos:position pos:line="33" pos:column="63"/></operator><name pos:line="33" pos:column="60">utf8<pos:position pos:line="33" pos:column="64"/></name></expr>)<pos:position pos:line="33" pos:column="65"/></condition><then pos:line="33" pos:column="65"> <block pos:line="33" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">latin1_to_utf8<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">usern<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="31">sizeof<argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">usern<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="46">user<pos:position pos:line="34" pos:column="50"/></name><argument_list pos:line="34" pos:column="50">()<pos:position pos:line="34" pos:column="52"/></argument_list></call><operator pos:line="34" pos:column="52">-&gt;<pos:position pos:line="34" pos:column="57"/></operator><call><name pos:line="34" pos:column="54">username<pos:position pos:line="34" pos:column="62"/></name><argument_list pos:line="34" pos:column="62">()<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">latin1_to_utf8<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">pass<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="30">sizeof<argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">pass<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="44">basic_auth<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">-&gt;<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="56">passwd<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">xstrncpy<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">usern<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="25">rfc1738_escape<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">usern<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="48">sizeof<argument_list pos:line="36" pos:column="54">(<argument><expr><name pos:line="36" pos:column="55">usern<pos:position pos:line="36" pos:column="60"/></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">xstrncpy<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">pass<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="24">rfc1738_escape<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">pass<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="46">sizeof<argument_list pos:line="37" pos:column="52">(<argument><expr><name pos:line="37" pos:column="53">pass<pos:position pos:line="37" pos:column="57"/></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then> <else pos:line="38" pos:column="7">else <block pos:line="38" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">xstrncpy<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">usern<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="25">rfc1738_escape<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><call><name pos:line="39" pos:column="40">user<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">()<pos:position pos:line="39" pos:column="46"/></argument_list></call><operator pos:line="39" pos:column="46">-&gt;<pos:position pos:line="39" pos:column="51"/></operator><call><name pos:line="39" pos:column="48">username<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">()<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="61">sizeof<argument_list pos:line="39" pos:column="67">(<argument><expr><name pos:line="39" pos:column="68">usern<pos:position pos:line="39" pos:column="73"/></name></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">xstrncpy<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">pass<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="24">rfc1738_escape<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name><name pos:line="40" pos:column="39">basic_auth<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">passwd<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="60">sizeof<argument_list pos:line="40" pos:column="66">(<argument><expr><name pos:line="40" pos:column="67">pass<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">int<pos:position pos:line="42" pos:column="8"/></name></type> <name pos:line="42" pos:column="9">sz<pos:position pos:line="42" pos:column="11"/></name> <init pos:line="42" pos:column="12">= <expr><literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="16"/></decl_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<decl><type><specifier pos:line="43" pos:column="9">const<pos:position pos:line="43" pos:column="14"/></specifier> <name pos:line="43" pos:column="15">char<pos:position pos:line="43" pos:column="19"/></name> <modifier pos:line="43" pos:column="20">*<pos:position pos:line="43" pos:column="21"/></modifier></type><name pos:line="43" pos:column="21">keyExtras<pos:position pos:line="43" pos:column="30"/></name> <init pos:line="43" pos:column="31">= <expr><call><name pos:line="43" pos:column="33">helperRequestKeyExtras<pos:position pos:line="43" pos:column="55"/></name><argument_list pos:line="43" pos:column="55">(<argument><expr><name pos:line="43" pos:column="56">request<pos:position pos:line="43" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="65">al<pos:position pos:line="43" pos:column="67"/></name></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr></init></decl>)<pos:position pos:line="43" pos:column="69"/></condition><then pos:line="43" pos:column="69">
        <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="9">sz<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <call><name pos:line="44" pos:column="14">snprintf<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">buf<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="28">sizeof<argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">buf<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="41">"%s %s %s\n"<pos:position pos:line="44" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="55">usern<pos:position pos:line="44" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="62">pass<pos:position pos:line="44" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="68">keyExtras<pos:position pos:line="44" pos:column="77"/></name></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="79"/></expr_stmt></block></then>
    <else pos:line="45" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="9">sz<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">snprintf<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">buf<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="28">sizeof<argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">buf<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="41">"%s %s\n"<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="52">usern<pos:position pos:line="46" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="59">pass<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt></block></else></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">sz<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">&lt;=<pos:position pos:line="48" pos:column="16"/></operator><literal type="number" pos:line="48" pos:column="13">0<pos:position pos:line="48" pos:column="14"/></literal></expr>)<pos:position pos:line="48" pos:column="15"/></condition><then pos:line="48" pos:column="15"> <block pos:line="48" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">debugs<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="number" pos:line="49" pos:column="16">9<pos:position pos:line="49" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="19">DBG_CRITICAL<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="33">"ERROR: Basic Authentication Failure. Can not build helper validation request."<pos:position pos:line="49" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="114"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">handler<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">data<pos:position pos:line="50" pos:column="21"/></name></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then> <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><cast type="static" pos:line="51" pos:column="16">static_cast<argument_list type="generic" pos:line="51" pos:column="27">&lt;<argument><expr><name pos:line="51" pos:column="28">size_t<pos:position pos:line="51" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="51" pos:column="38"/></argument_list><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">sz<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></cast> <operator pos:line="51" pos:column="40">&gt;=<pos:position pos:line="51" pos:column="45"/></operator> <sizeof pos:line="51" pos:column="43">sizeof<argument_list pos:line="51" pos:column="49">(<argument><expr><name pos:line="51" pos:column="50">buf<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></sizeof></expr>)<pos:position pos:line="51" pos:column="55"/></condition><then pos:line="51" pos:column="55"> <block pos:line="51" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="number" pos:line="52" pos:column="16">9<pos:position pos:line="52" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="19">DBG_CRITICAL<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"ERROR: Basic Authentication Failure. user:password exceeds "<pos:position pos:line="52" pos:column="94"/></literal> <operator pos:line="52" pos:column="95">&lt;&lt;<pos:position pos:line="52" pos:column="103"/></operator> <sizeof pos:line="52" pos:column="98">sizeof<argument_list pos:line="52" pos:column="104">(<argument><expr><name pos:line="52" pos:column="105">buf<pos:position pos:line="52" pos:column="108"/></name></expr></argument>)<pos:position pos:line="52" pos:column="109"/></argument_list></sizeof> <operator pos:line="52" pos:column="110">&lt;&lt;<pos:position pos:line="52" pos:column="118"/></operator> <literal type="string" pos:line="52" pos:column="113">" bytes."<pos:position pos:line="52" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="124"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">handler<pos:position pos:line="53" pos:column="16"/></name><argument_list pos:line="53" pos:column="16">(<argument><expr><name pos:line="53" pos:column="17">data<pos:position pos:line="53" pos:column="21"/></name></expr></argument>)<pos:position pos:line="53" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif> <else pos:line="54" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="9">helperSubmit<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">basicauthenticators<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">buf<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="48">Auth<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">::<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">Basic<pos:position pos:line="55" pos:column="59"/></name><operator pos:line="55" pos:column="59">::<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">UserRequest<pos:position pos:line="55" pos:column="72"/></name><operator pos:line="55" pos:column="72">::<pos:position pos:line="55" pos:column="74"/></operator><name pos:line="55" pos:column="74">HandleReply<pos:position pos:line="55" pos:column="85"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="56" pos:column="22">new<pos:position pos:line="56" pos:column="25"/></operator> <call><name><name pos:line="56" pos:column="26">Auth<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">::<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="32">StateData<pos:position pos:line="56" pos:column="41"/></name></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name pos:line="56" pos:column="42">this<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="48">handler<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">data<pos:position pos:line="56" pos:column="61"/></name></expr></argument>)<pos:position pos:line="56" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt></block></else></if>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

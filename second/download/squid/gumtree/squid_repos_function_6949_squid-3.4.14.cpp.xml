<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6949_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SMB_Get_Error_Msg<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">msg<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">msgbuf<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">len<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>

<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">msg<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">&gt;=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{

        <expr_stmt><expr><call><name pos:line="7" pos:column="9">strncpy<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">msgbuf<pos:position pos:line="7" pos:column="23"/></name></expr></argument>,
                <argument><expr><name><name pos:line="8" pos:column="17">SMBlib_Error_Messages<pos:position pos:line="8" pos:column="38"/></name><index pos:line="8" pos:column="38">[<expr><ternary><condition><expr><name pos:line="8" pos:column="39">msg<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">SMBlibE_NoSuchMsg<pos:position pos:line="8" pos:column="60"/></name></expr>?<pos:position pos:line="8" pos:column="61"/></condition><then><expr><name pos:line="8" pos:column="61">SMBlibE_NoSuchMsg<pos:position pos:line="8" pos:column="78"/></name></expr></then><else pos:line="8" pos:column="78">:<expr><name pos:line="8" pos:column="79">msg<pos:position pos:line="8" pos:column="82"/></name></expr></else></ternary></expr>]<pos:position pos:line="8" pos:column="83"/></index></name></expr></argument>,
                <argument><expr><name pos:line="9" pos:column="17">len<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">-<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">1<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">msgbuf<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">-<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr>]<pos:position pos:line="10" pos:column="24"/></index></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt> <comment type="block" pos:line="10" pos:column="30">/* Make sure it is a string */</comment>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else <block pos:line="11" pos:column="12">{ <comment type="block" pos:line="11" pos:column="14">/* Add the lower layer message ... */</comment>

        <decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name></type> <name><name pos:line="13" pos:column="14">prot_msg<pos:position pos:line="13" pos:column="22"/></name><index pos:line="13" pos:column="22">[<expr><literal type="number" pos:line="13" pos:column="23">1024<pos:position pos:line="13" pos:column="27"/></literal></expr>]<pos:position pos:line="13" pos:column="28"/></index></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><name pos:line="15" pos:column="9">msg<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <operator pos:line="15" pos:column="15">-<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">msg<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>   <comment type="block" pos:line="15" pos:column="23">/* Make it positive */</comment>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">strncpy<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">msgbuf<pos:position pos:line="17" pos:column="23"/></name></expr></argument>,
                <argument><expr><name><name pos:line="18" pos:column="17">SMBlib_Error_Messages<pos:position pos:line="18" pos:column="38"/></name><index pos:line="18" pos:column="38">[<expr><ternary><condition><expr><name pos:line="18" pos:column="39">msg<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">SMBlibE_NoSuchMsg<pos:position pos:line="18" pos:column="60"/></name></expr>?<pos:position pos:line="18" pos:column="61"/></condition><then><expr><name pos:line="18" pos:column="61">SMBlibE_NoSuchMsg<pos:position pos:line="18" pos:column="78"/></name></expr></then><else pos:line="18" pos:column="78">:<expr><name pos:line="18" pos:column="79">msg<pos:position pos:line="18" pos:column="82"/></name></expr></else></ternary></expr>]<pos:position pos:line="18" pos:column="83"/></index></name></expr></argument>,
                <argument><expr><name pos:line="19" pos:column="17">len<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">-<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="21" pos:column="9">msgbuf<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><name pos:line="21" pos:column="16">len<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">-<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr>]<pos:position pos:line="21" pos:column="24"/></index></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">0<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt> <comment type="block" pos:line="21" pos:column="30">/* make sure it is a string */</comment>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strlen<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">msgbuf<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call> <operator pos:line="23" pos:column="28">&lt;<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="30">len<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34"> <block pos:line="23" pos:column="35">{ <comment type="block" pos:line="23" pos:column="37">/* If there is space, put rest in */</comment>

            <expr_stmt><expr><call><name pos:line="25" pos:column="13">strncat<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">msgbuf<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="29">"\n\t"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">len<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">-<pos:position pos:line="25" pos:column="42"/></operator> <call><name pos:line="25" pos:column="43">strlen<pos:position pos:line="25" pos:column="49"/></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name pos:line="25" pos:column="50">msgbuf<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="27" pos:column="13">RFCNB_Get_Error<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">prot_msg<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="39">sizeof<argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">prot_msg<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></sizeof> <operator pos:line="27" pos:column="56">-<pos:position pos:line="27" pos:column="57"/></operator> <literal type="number" pos:line="27" pos:column="58">1<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="29" pos:column="13">strncat<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">msgbuf<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">prot_msg<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">len<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">-<pos:position pos:line="29" pos:column="44"/></operator> <call><name pos:line="29" pos:column="45">strlen<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">msgbuf<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>

        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

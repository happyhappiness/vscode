<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_270_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">RFCNB_Set_Sock_NoDelay<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">RFCNB_Con<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">con_Handle<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">BOOL<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">yn<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">setsockopt<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">con_Handle<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">fd<pos:position pos:line="5" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">IPPROTO_TCP<pos:position pos:line="5" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="53">TCP_NODELAY<pos:position pos:line="5" pos:column="64"/></name></expr></argument>,
                       <argument><expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">char<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="33">&amp;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="34">yn<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="38">sizeof<argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">yn<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator></expr>;<pos:position pos:line="6" pos:column="51"/></return>

}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

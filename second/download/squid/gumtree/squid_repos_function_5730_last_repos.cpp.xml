<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5730_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Auth<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Scheme<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Scheme<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">Find<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">typestr<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">iterator<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">i<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">GetSchemes<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">()<pos:position pos:line="4" pos:column="35"/></argument_list></call><operator pos:line="4" pos:column="35">.<pos:position pos:line="4" pos:column="36"/></operator><call><name pos:line="4" pos:column="36">begin<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">()<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></init> <condition><expr><name pos:line="4" pos:column="45">i<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">!=<pos:position pos:line="4" pos:column="49"/></operator> <call><name pos:line="4" pos:column="50">GetSchemes<pos:position pos:line="4" pos:column="60"/></name><argument_list pos:line="4" pos:column="60">()<pos:position pos:line="4" pos:column="62"/></argument_list></call><operator pos:line="4" pos:column="62">.<pos:position pos:line="4" pos:column="63"/></operator><call><name pos:line="4" pos:column="63">end<pos:position pos:line="4" pos:column="66"/></name><argument_list pos:line="4" pos:column="66">()<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></condition> <incr><expr><operator pos:line="4" pos:column="70">++<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="72">i<pos:position pos:line="4" pos:column="73"/></name></expr></incr>)<pos:position pos:line="4" pos:column="74"/></control> <block pos:line="4" pos:column="75">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">strcmp<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><call><name><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><operator pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">i<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">)<pos:position pos:line="5" pos:column="24"/></operator><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">type<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">()<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">typestr<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">==<pos:position pos:line="5" pos:column="45"/></operator> <literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><operator pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name></expr>;<pos:position pos:line="6" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></for>

    <return pos:line="9" pos:column="5">return <expr><call><name><name pos:line="9" pos:column="12">Auth<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">::<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">Scheme<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">::<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">Pointer<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

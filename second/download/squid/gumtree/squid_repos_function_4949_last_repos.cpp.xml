<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4949_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parseSizeOption<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">option<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">value<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name></type> <name pos:line="2" pos:column="75">reconfig<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="84"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uint64_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">storedSize<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">strcmp<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">option<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="24">"slot-size"<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <literal type="number" pos:line="5" pos:column="40">0<pos:position pos:line="5" pos:column="41"/></literal></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="9">storedSize<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="23">slotSize<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt></block></then>
    <else pos:line="7" pos:column="5">else
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></else></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">value<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">self_destruct<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">()<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="13" pos:column="5">// TODO: handle size units and detect parsing errors better</comment>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">uint64_t<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">newSize<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><call><name pos:line="14" pos:column="30">strtoll<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">value<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">NULL<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="51">10<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="55"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">newSize<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="19">DBG_CRITICAL<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="33">"FATAL: cache_dir "<pos:position pos:line="16" pos:column="52"/></literal> <operator pos:line="16" pos:column="53">&lt;&lt;<pos:position pos:line="16" pos:column="61"/></operator> <name pos:line="16" pos:column="56">path<pos:position pos:line="16" pos:column="60"/></name> <operator pos:line="16" pos:column="61">&lt;&lt;<pos:position pos:line="16" pos:column="69"/></operator> <literal type="char" pos:line="16" pos:column="64">' '<pos:position pos:line="16" pos:column="67"/></literal> <operator pos:line="16" pos:column="68">&lt;&lt;<pos:position pos:line="16" pos:column="76"/></operator> <name pos:line="16" pos:column="71">option<pos:position pos:line="16" pos:column="77"/></name> <operator pos:line="16" pos:column="78">&lt;&lt;<pos:position pos:line="16" pos:column="86"/></operator> <literal type="string" pos:line="16" pos:column="81">" must be positive; got: "<pos:position pos:line="16" pos:column="107"/></literal> <operator pos:line="16" pos:column="108">&lt;&lt;<pos:position pos:line="16" pos:column="116"/></operator> <name pos:line="16" pos:column="111">newSize<pos:position pos:line="16" pos:column="118"/></name></expr></argument>)<pos:position pos:line="16" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="120"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">self_destruct<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">()<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">newSize<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&lt;=<pos:position pos:line="20" pos:column="22"/></operator> <sizeof pos:line="20" pos:column="20">sizeof<argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">DbCellHeader<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></sizeof></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">3<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">DBG_CRITICAL<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"FATAL: cache_dir "<pos:position pos:line="21" pos:column="52"/></literal> <operator pos:line="21" pos:column="53">&lt;&lt;<pos:position pos:line="21" pos:column="61"/></operator> <name pos:line="21" pos:column="56">path<pos:position pos:line="21" pos:column="60"/></name> <operator pos:line="21" pos:column="61">&lt;&lt;<pos:position pos:line="21" pos:column="69"/></operator> <literal type="char" pos:line="21" pos:column="64">' '<pos:position pos:line="21" pos:column="67"/></literal> <operator pos:line="21" pos:column="68">&lt;&lt;<pos:position pos:line="21" pos:column="76"/></operator> <name pos:line="21" pos:column="71">option<pos:position pos:line="21" pos:column="77"/></name> <operator pos:line="21" pos:column="78">&lt;&lt;<pos:position pos:line="21" pos:column="86"/></operator> <literal type="string" pos:line="21" pos:column="81">" must exceed "<pos:position pos:line="21" pos:column="96"/></literal> <operator pos:line="21" pos:column="97">&lt;&lt;<pos:position pos:line="21" pos:column="105"/></operator> <sizeof pos:line="21" pos:column="100">sizeof<argument_list pos:line="21" pos:column="106">(<argument><expr><name pos:line="21" pos:column="107">DbCellHeader<pos:position pos:line="21" pos:column="119"/></name></expr></argument>)<pos:position pos:line="21" pos:column="120"/></argument_list></sizeof> <operator pos:line="21" pos:column="121">&lt;&lt;<pos:position pos:line="21" pos:column="129"/></operator> <literal type="string" pos:line="21" pos:column="124">"; got: "<pos:position pos:line="21" pos:column="133"/></literal> <operator pos:line="21" pos:column="134">&lt;&lt;<pos:position pos:line="21" pos:column="142"/></operator> <name pos:line="21" pos:column="137">newSize<pos:position pos:line="21" pos:column="144"/></name></expr></argument>)<pos:position pos:line="21" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="146"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">self_destruct<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">()<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">reconfig<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">storedSize<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">newSize<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><operator pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">storedSize<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">!=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">newSize<pos:position pos:line="27" pos:column="36"/></name></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">3<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="19">DBG_IMPORTANT<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"WARNING: cache_dir "<pos:position pos:line="28" pos:column="55"/></literal> <operator pos:line="28" pos:column="56">&lt;&lt;<pos:position pos:line="28" pos:column="64"/></operator> <name pos:line="28" pos:column="59">path<pos:position pos:line="28" pos:column="63"/></name> <operator pos:line="28" pos:column="64">&lt;&lt;<pos:position pos:line="28" pos:column="72"/></operator> <literal type="char" pos:line="28" pos:column="67">' '<pos:position pos:line="28" pos:column="70"/></literal> <operator pos:line="28" pos:column="71">&lt;&lt;<pos:position pos:line="28" pos:column="79"/></operator> <name pos:line="28" pos:column="74">option<pos:position pos:line="28" pos:column="80"/></name>
               <operator pos:line="29" pos:column="16">&lt;&lt;<pos:position pos:line="29" pos:column="24"/></operator> <literal type="string" pos:line="29" pos:column="19">" cannot be changed dynamically, value left unchanged: "<pos:position pos:line="29" pos:column="75"/></literal> <operator pos:line="29" pos:column="76">&lt;&lt;<pos:position pos:line="29" pos:column="84"/></operator>
               <operator pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">storedSize<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="33" pos:column="5">return <expr><literal type="boolean" pos:line="33" pos:column="12">true<pos:position pos:line="33" pos:column="16"/></literal></expr>;<pos:position pos:line="33" pos:column="17"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

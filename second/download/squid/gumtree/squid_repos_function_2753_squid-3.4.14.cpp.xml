<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2753_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">writeServerDone<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">buf<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">size_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">len<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">comm_err_t<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">flag<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">int<pos:position pos:line="2" pos:column="77"/></name></type> <name pos:line="2" pos:column="78">xerrno<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name>  <operator pos:line="4" pos:column="25">&lt;&lt;<pos:position pos:line="4" pos:column="33"/></operator> <name><name pos:line="4" pos:column="28">server<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">conn<pos:position pos:line="4" pos:column="39"/></name></name> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <literal type="string" pos:line="4" pos:column="43">", "<pos:position pos:line="4" pos:column="47"/></literal> <operator pos:line="4" pos:column="48">&lt;&lt;<pos:position pos:line="4" pos:column="56"/></operator> <name pos:line="4" pos:column="51">len<pos:position pos:line="4" pos:column="54"/></name> <operator pos:line="4" pos:column="55">&lt;&lt;<pos:position pos:line="4" pos:column="63"/></operator> <literal type="string" pos:line="4" pos:column="58">" bytes written, flag="<pos:position pos:line="4" pos:column="81"/></literal> <operator pos:line="4" pos:column="82">&lt;&lt;<pos:position pos:line="4" pos:column="90"/></operator> <name pos:line="4" pos:column="85">flag<pos:position pos:line="4" pos:column="89"/></name></expr></argument>)<pos:position pos:line="4" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="91"/></expr_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Error? */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">flag<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">COMM_OK<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">flag<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">!=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">COMM_ERR_CLOSING<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <block pos:line="8" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">26<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="24">4<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">HERE<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">&lt;&lt;<pos:position pos:line="9" pos:column="40"/></operator> <literal type="string" pos:line="9" pos:column="35">"calling TunnelStateData::server.error("<pos:position pos:line="9" pos:column="75"/></literal> <operator pos:line="9" pos:column="76">&lt;&lt;<pos:position pos:line="9" pos:column="84"/></operator> <name pos:line="9" pos:column="79">xerrno<pos:position pos:line="9" pos:column="85"/></name> <operator pos:line="9" pos:column="86">&lt;&lt;<pos:position pos:line="9" pos:column="94"/></operator><literal type="string" pos:line="9" pos:column="88">")"<pos:position pos:line="9" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="93"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">server<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">.<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">error<pos:position pos:line="10" pos:column="25"/></name></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">xerrno<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt> <comment type="line" pos:line="10" pos:column="35">// may call comm_close</comment>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* EOF? */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">==<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18"> <block pos:line="16" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">26<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">4<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">HERE<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;&lt;<pos:position pos:line="17" pos:column="36"/></operator> <literal type="string" pos:line="17" pos:column="31">"No read input. Closing server connection."<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">server<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">conn<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">close<pos:position pos:line="18" pos:column="27"/></name></name><argument_list pos:line="18" pos:column="27">()<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* Valid data */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">kb_incr<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><operator pos:line="23" pos:column="13">&amp;<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="15">statCounter<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">server<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">.<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">all<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">.<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">kbytes_out<pos:position pos:line="23" pos:column="48"/></name></name><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">len<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">kb_incr<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><operator pos:line="24" pos:column="13">&amp;<pos:position pos:line="24" pos:column="18"/></operator><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name><name pos:line="24" pos:column="15">statCounter<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">server<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">other<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">.<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">kbytes_out<pos:position pos:line="24" pos:column="50"/></name></name><operator pos:line="24" pos:column="50">)<pos:position pos:line="24" pos:column="51"/></operator></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">len<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">client<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">dataSent<pos:position pos:line="25" pos:column="20"/></name></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">len<pos:position pos:line="25" pos:column="24"/></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* If the other end has closed, so should we */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><call><name><name pos:line="28" pos:column="10">Comm<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">::<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">IsConnOpen<pos:position pos:line="28" pos:column="26"/></name></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name><name pos:line="28" pos:column="27">client<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">.<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">conn<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="40"/></condition><then pos:line="28" pos:column="40"> <block pos:line="28" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">26<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="20">4<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">HERE<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">&lt;&lt;<pos:position pos:line="29" pos:column="36"/></operator> <literal type="string" pos:line="29" pos:column="31">"Client gone away. Shutting down server connection."<pos:position pos:line="29" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="30" pos:column="9">server<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">conn<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">close<pos:position pos:line="30" pos:column="27"/></name></name><argument_list pos:line="30" pos:column="27">()<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="34" pos:column="5">const<pos:position pos:line="34" pos:column="10"/></specifier> <name><name pos:line="34" pos:column="11">CbcPointer<pos:position pos:line="34" pos:column="21"/></name><argument_list type="generic" pos:line="34" pos:column="21">&lt;<argument><expr><name pos:line="34" pos:column="22">TunnelStateData<pos:position pos:line="34" pos:column="37"/></name></expr></argument>&gt;<pos:position pos:line="34" pos:column="41"/></argument_list></name></type> <name pos:line="34" pos:column="39">safetyLock<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name pos:line="34" pos:column="50">this<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></decl>;<pos:position pos:line="34" pos:column="56"/></decl_stmt>	<comment type="block" pos:line="34" pos:column="57">/* ??? should be locked by the caller... */</comment>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">cbdataReferenceValid<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">this<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">copyRead<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">client<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="26">ReadClient<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt></block></then></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4820_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parseSize<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">bool<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">reconfiguring<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">i<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">GetInteger<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">&lt;<pos:position pos:line="5" pos:column="15"/></operator> <literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">fatal<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="string" pos:line="6" pos:column="15">"negative Rock cache_dir size value"<pos:position pos:line="6" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt></block></then></if>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">uint64_t<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">new_max_size<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">=
        <expr><cast type="static" pos:line="8" pos:column="9">static_cast<argument_list type="generic" pos:line="8" pos:column="20">&lt;<argument><expr><name pos:line="8" pos:column="21">uint64_t<pos:position pos:line="8" pos:column="29"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="33"/></argument_list><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">i<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></cast> <operator pos:line="8" pos:column="34">&lt;&lt;<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="37">20<pos:position pos:line="8" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt> <comment type="line" pos:line="8" pos:column="41">// MBytes to Bytes</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">reconfiguring<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">max_size<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">new_max_size<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt></block></then>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">new_max_size<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">max_size<pos:position pos:line="11" pos:column="38"/></name></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">DBG_IMPORTANT<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"WARNING: cache_dir '"<pos:position pos:line="12" pos:column="56"/></literal> <operator pos:line="12" pos:column="57">&lt;&lt;<pos:position pos:line="12" pos:column="65"/></operator> <name pos:line="12" pos:column="60">path<pos:position pos:line="12" pos:column="64"/></name> <operator pos:line="12" pos:column="65">&lt;&lt;<pos:position pos:line="12" pos:column="73"/></operator> <literal type="string" pos:line="12" pos:column="68">"' size "<pos:position pos:line="12" pos:column="77"/></literal>
               <literal type="string" pos:line="13" pos:column="16">"cannot be changed dynamically, value left unchanged ("<pos:position pos:line="13" pos:column="71"/></literal> <operator pos:line="13" pos:column="72">&lt;&lt;<pos:position pos:line="13" pos:column="80"/></operator>
               <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">max_size<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&gt;&gt;<pos:position pos:line="14" pos:column="31"/></operator> <literal type="number" pos:line="14" pos:column="29">20<pos:position pos:line="14" pos:column="31"/></literal><operator pos:line="14" pos:column="31">)<pos:position pos:line="14" pos:column="32"/></operator> <operator pos:line="14" pos:column="33">&lt;&lt;<pos:position pos:line="14" pos:column="41"/></operator> <literal type="string" pos:line="14" pos:column="36">" MB)"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

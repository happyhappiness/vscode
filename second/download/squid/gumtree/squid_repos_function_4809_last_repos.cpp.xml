<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4809_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">uint32_t<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">Parser<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">BinaryTokenizer<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">uint32<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">description<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">want<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><literal type="number" pos:line="4" pos:column="10">4<pos:position pos:line="4" pos:column="11"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="13">description<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">uint32_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">result<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">(<pos:position pos:line="5" pos:column="30"/></operator><call><name pos:line="5" pos:column="30">octet<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">&lt;&lt;<pos:position pos:line="5" pos:column="46"/></operator> <literal type="number" pos:line="5" pos:column="41">24<pos:position pos:line="5" pos:column="43"/></literal><operator pos:line="5" pos:column="43">)<pos:position pos:line="5" pos:column="44"/></operator> <operator pos:line="5" pos:column="45">|<pos:position pos:line="5" pos:column="46"/></operator> <operator pos:line="5" pos:column="47">(<pos:position pos:line="5" pos:column="48"/></operator><call><name pos:line="5" pos:column="48">octet<pos:position pos:line="5" pos:column="53"/></name><argument_list pos:line="5" pos:column="53">()<pos:position pos:line="5" pos:column="55"/></argument_list></call> <operator pos:line="5" pos:column="56">&lt;&lt;<pos:position pos:line="5" pos:column="64"/></operator> <literal type="number" pos:line="5" pos:column="59">16<pos:position pos:line="5" pos:column="61"/></literal><operator pos:line="5" pos:column="61">)<pos:position pos:line="5" pos:column="62"/></operator> <operator pos:line="5" pos:column="63">|<pos:position pos:line="5" pos:column="64"/></operator> <operator pos:line="5" pos:column="65">(<pos:position pos:line="5" pos:column="66"/></operator><call><name pos:line="5" pos:column="66">octet<pos:position pos:line="5" pos:column="71"/></name><argument_list pos:line="5" pos:column="71">()<pos:position pos:line="5" pos:column="73"/></argument_list></call> <operator pos:line="5" pos:column="74">&lt;&lt;<pos:position pos:line="5" pos:column="82"/></operator> <literal type="number" pos:line="5" pos:column="77">8<pos:position pos:line="5" pos:column="78"/></literal><operator pos:line="5" pos:column="78">)<pos:position pos:line="5" pos:column="79"/></operator> <operator pos:line="5" pos:column="80">|<pos:position pos:line="5" pos:column="81"/></operator> <call><name pos:line="5" pos:column="82">octet<pos:position pos:line="5" pos:column="87"/></name><argument_list pos:line="5" pos:column="87">()<pos:position pos:line="5" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="90"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">got<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="17">4<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="20">description<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">result<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

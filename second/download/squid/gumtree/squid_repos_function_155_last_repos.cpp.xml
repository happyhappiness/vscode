<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_155_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">shellUnescape<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">buf<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">p<pos:position pos:line="7" pos:column="21"/></name></decl>, <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="24">d<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">d<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <cast type="reinterpret" pos:line="9" pos:column="13">reinterpret_cast<argument_list type="generic" pos:line="9" pos:column="29">&lt;<argument><expr><name pos:line="9" pos:column="30">unsigned<pos:position pos:line="9" pos:column="38"/></name> <name pos:line="9" pos:column="39">char<pos:position pos:line="9" pos:column="43"/></name> <operator pos:line="9" pos:column="44">*<pos:position pos:line="9" pos:column="45"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="49"/></argument_list><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">buf<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></cast></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<decl><type><name pos:line="11" pos:column="12">auto<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">ch<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">p<pos:position pos:line="11" pos:column="24"/></name></expr></init></decl>)<pos:position pos:line="11" pos:column="25"/></condition> <block pos:line="11" pos:column="26">{

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">ch<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="19">'\\'<pos:position pos:line="13" pos:column="23"/></literal></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
            <expr_stmt><expr><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">p<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>

            <switch pos:line="16" pos:column="13">switch <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition> <block pos:line="16" pos:column="25">{
            <case pos:line="17" pos:column="13">case <expr><literal type="char" pos:line="17" pos:column="18">'n'<pos:position pos:line="17" pos:column="21"/></literal></expr>:<pos:position pos:line="17" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="18" pos:column="17">ch<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <literal type="char" pos:line="18" pos:column="22">'\n'<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
                <break pos:line="19" pos:column="17">break;<pos:position pos:line="19" pos:column="23"/></break>
            <case pos:line="20" pos:column="13">case <expr><literal type="char" pos:line="20" pos:column="18">'r'<pos:position pos:line="20" pos:column="21"/></literal></expr>:<pos:position pos:line="20" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="21" pos:column="17">ch<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="char" pos:line="21" pos:column="22">'\r'<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
                <break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
            <case pos:line="23" pos:column="13">case <expr><literal type="char" pos:line="23" pos:column="18">'t'<pos:position pos:line="23" pos:column="21"/></literal></expr>:<pos:position pos:line="23" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="24" pos:column="17">ch<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="char" pos:line="24" pos:column="22">'\t'<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
                <break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>
            <case pos:line="26" pos:column="13">case <expr><literal type="char" pos:line="26" pos:column="18">'\\'<pos:position pos:line="26" pos:column="22"/></literal></expr>:<pos:position pos:line="26" pos:column="23"/></case>
                <expr_stmt><expr><name pos:line="27" pos:column="17">ch<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="char" pos:line="27" pos:column="22">'\\'<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
                <break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break>
            <default pos:line="29" pos:column="13">default:<pos:position pos:line="29" pos:column="21"/></default>
                <expr_stmt><expr><name pos:line="30" pos:column="17">ch<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <operator pos:line="30" pos:column="22">*<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">p<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">debugVerbose<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><literal type="number" pos:line="31" pos:column="30">1<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"Warning: unsupported shell code '\\"<pos:position pos:line="31" pos:column="70"/></literal> <operator pos:line="31" pos:column="71">&lt;&lt;<pos:position pos:line="31" pos:column="79"/></operator> <name pos:line="31" pos:column="74">ch<pos:position pos:line="31" pos:column="76"/></name> <operator pos:line="31" pos:column="77">&lt;&lt;<pos:position pos:line="31" pos:column="85"/></operator> <literal type="string" pos:line="31" pos:column="80">"'"<pos:position pos:line="31" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="85"/></expr_stmt>
                <break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
            }<pos:position pos:line="33" pos:column="14"/></block></switch>

            <expr_stmt><expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">d<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">ch<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>

            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">ch<pos:position pos:line="37" pos:column="20"/></name></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21">
                <block type="pseudo"><continue pos:line="38" pos:column="17">continue;<pos:position pos:line="38" pos:column="26"/></continue></block></then></if>

        }<pos:position pos:line="40" pos:column="10"/></block></then> <else pos:line="40" pos:column="11">else <block pos:line="40" pos:column="16">{
            <expr_stmt><expr><operator pos:line="41" pos:column="13">*<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">d<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <operator pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">p<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>

        <expr_stmt><expr><operator pos:line="44" pos:column="9">++<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">p<pos:position pos:line="44" pos:column="12"/></name></expr>;<pos:position pos:line="44" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="45" pos:column="9">++<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">d<pos:position pos:line="45" pos:column="12"/></name></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">d<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <literal type="char" pos:line="48" pos:column="10">'\0'<pos:position pos:line="48" pos:column="14"/></literal></expr>;<pos:position pos:line="48" pos:column="15"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

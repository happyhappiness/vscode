<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3513_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">HttpRequest<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">&amp;<pos:position pos:line="1" pos:column="24"/></modifier></type><name><name pos:line="1" pos:column="20">Adaptation<pos:position pos:line="1" pos:column="30"/></name><operator pos:line="1" pos:column="30">::<pos:position pos:line="1" pos:column="32"/></operator><name pos:line="1" pos:column="32">Icap<pos:position pos:line="1" pos:column="36"/></name><operator pos:line="1" pos:column="36">::<pos:position pos:line="1" pos:column="38"/></operator><name pos:line="1" pos:column="38">ModXact<pos:position pos:line="1" pos:column="45"/></name><operator pos:line="1" pos:column="45">::<pos:position pos:line="1" pos:column="47"/></operator><name pos:line="1" pos:column="47">virginRequest<pos:position pos:line="1" pos:column="60"/></name></name><parameter_list pos:line="1" pos:column="60">()<pos:position pos:line="1" pos:column="62"/></parameter_list> <specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">HttpRequest<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">request<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><ternary><condition><expr><name><name pos:line="3" pos:column="34">virgin<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">.<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">cause<pos:position pos:line="3" pos:column="46"/></name></name></expr> ?<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48">
                                 <expr><name><name pos:line="4" pos:column="34">virgin<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">.<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">cause<pos:position pos:line="4" pos:column="46"/></name></name></expr> <pos:position pos:line="4" pos:column="47"/></then><else pos:line="4" pos:column="47">: <expr><cast type="dynamic" pos:line="4" pos:column="49">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="61">&lt;<argument><expr><specifier pos:line="4" pos:column="62">const<pos:position pos:line="4" pos:column="67"/></specifier> <name pos:line="4" pos:column="68">HttpRequest<pos:position pos:line="4" pos:column="79"/></name><operator pos:line="4" pos:column="79">*<pos:position pos:line="4" pos:column="80"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="84"/></argument_list><argument_list pos:line="4" pos:column="81">(<argument><expr><name><name pos:line="4" pos:column="82">virgin<pos:position pos:line="4" pos:column="88"/></name><operator pos:line="4" pos:column="88">.<pos:position pos:line="4" pos:column="89"/></operator><name pos:line="4" pos:column="89">header<pos:position pos:line="4" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="96"/></argument_list></cast></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="97"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">request<pos:position pos:line="5" pos:column="17"/></name></expr></argument>)<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">request<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

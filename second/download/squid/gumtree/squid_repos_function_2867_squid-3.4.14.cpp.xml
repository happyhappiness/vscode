<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2867_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">wccp2Init<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">void<pos:position pos:line="2" pos:column="15"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address_list<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">s<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ptr<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uint32_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">service_flags<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">wccp2_service_list_t<pos:position pos:line="8" pos:column="32"/></name></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">service_list_ptr<pos:position pos:line="8" pos:column="50"/></name></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">wccp2_router_list_t<pos:position pos:line="10" pos:column="31"/></name></name> <modifier pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></modifier></type><name pos:line="10" pos:column="33">router_list_ptr<pos:position pos:line="10" pos:column="48"/></name></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">80<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">5<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"wccp2Init: Called"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">wccp2_connected<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
        <block type="pseudo"><return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">wccp2_numrouters<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Calculate the number of routers configured in the config file */</comment>
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">s<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name><name pos:line="20" pos:column="14">Config<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">.<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">Wccp2<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">.<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">router<pos:position pos:line="20" pos:column="33"/></name></name></expr>;<pos:position pos:line="20" pos:column="34"/></init> <condition><expr><name pos:line="20" pos:column="35">s<pos:position pos:line="20" pos:column="36"/></name></expr>;<pos:position pos:line="20" pos:column="37"/></condition> <incr><expr><name pos:line="20" pos:column="38">s<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <name><name pos:line="20" pos:column="42">s<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">next<pos:position pos:line="20" pos:column="49"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="50"/></control> <block pos:line="20" pos:column="51">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name><name pos:line="21" pos:column="14">s<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">s<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">isAnyAddr<pos:position pos:line="21" pos:column="28"/></name></name><argument_list pos:line="21" pos:column="28">()<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
            <comment type="block" pos:line="22" pos:column="13">/* Increment the counter */</comment>
            <expr_stmt><expr><operator pos:line="23" pos:column="13">++<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">wccp2_numrouters<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">wccp2_numrouters<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">==<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31"> <block pos:line="27" pos:column="32">{
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">struct<pos:position pos:line="31" pos:column="11"/></name> <name pos:line="31" pos:column="12">wccp2_security_md5_t<pos:position pos:line="31" pos:column="32"/></name></name></type> <name pos:line="31" pos:column="33">wccp2_security_md5<pos:position pos:line="31" pos:column="51"/></name></decl>;<pos:position pos:line="31" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">memset<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><operator pos:line="32" pos:column="12">&amp;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="13">wccp2_security_md5<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="33">0<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="36">sizeof<argument_list pos:line="32" pos:column="42">(<argument><expr><name pos:line="32" pos:column="43">wccp2_security_md5<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Initialise the list of services */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">wccp2InitServices<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">()<pos:position pos:line="35" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">service_list_ptr<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">wccp2_service_list_head<pos:position pos:line="37" pos:column="47"/></name></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>

    <while pos:line="39" pos:column="5">while <condition pos:line="39" pos:column="11">(<expr><name pos:line="39" pos:column="12">service_list_ptr<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">!=<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="32">NULL<pos:position pos:line="39" pos:column="36"/></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition> <block pos:line="39" pos:column="38">{
        <comment type="block" pos:line="40" pos:column="9">/* Set up our list pointers */</comment>
        <expr_stmt><expr><name pos:line="41" pos:column="9">router_list_ptr<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <operator pos:line="41" pos:column="27">&amp;<pos:position pos:line="41" pos:column="32"/></operator><name><name pos:line="41" pos:column="28">service_list_ptr<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">router_list_head<pos:position pos:line="41" pos:column="62"/></name></name></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="43" pos:column="9">/* start the wccp header */</comment>
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">.<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="32">type<pos:position pos:line="44" pos:column="36"/></name></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <call><name pos:line="44" pos:column="39">htonl<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name pos:line="44" pos:column="45">WCCP2_HERE_I_AM<pos:position pos:line="44" pos:column="60"/></name></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">.<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="32">version<pos:position pos:line="45" pos:column="39"/></name></name> <operator pos:line="45" pos:column="40">=<pos:position pos:line="45" pos:column="41"/></operator> <call><name pos:line="45" pos:column="42">htons<pos:position pos:line="45" pos:column="47"/></name><argument_list pos:line="45" pos:column="47">(<argument><expr><name pos:line="45" pos:column="48">WCCP2_VERSION<pos:position pos:line="45" pos:column="61"/></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">.<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">length<pos:position pos:line="46" pos:column="38"/></name></name> <operator pos:line="46" pos:column="39">=<pos:position pos:line="46" pos:column="40"/></operator> <literal type="number" pos:line="46" pos:column="41">0<pos:position pos:line="46" pos:column="42"/></literal></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">ptr<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <name><name pos:line="47" pos:column="15">service_list_ptr<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">wccp_packet<pos:position pos:line="47" pos:column="44"/></name></name> <operator pos:line="47" pos:column="45">+<pos:position pos:line="47" pos:column="46"/></operator> <sizeof pos:line="47" pos:column="47">sizeof<argument_list pos:line="47" pos:column="53">(<argument><expr><name pos:line="47" pos:column="54">wccp2_here_i_am_header<pos:position pos:line="47" pos:column="76"/></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></sizeof></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>

        <comment type="block" pos:line="49" pos:column="9">/* add the security section */</comment>
        <comment type="block" pos:line="50" pos:column="9">/* XXX this is ugly */</comment>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">service_list_ptr<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">wccp2_security_type<pos:position pos:line="52" pos:column="50"/></name></name> <operator pos:line="52" pos:column="51">==<pos:position pos:line="52" pos:column="53"/></operator> <name pos:line="52" pos:column="54">WCCP2_MD5_SECURITY<pos:position pos:line="52" pos:column="72"/></name></expr>)<pos:position pos:line="52" pos:column="73"/></condition><then pos:line="52" pos:column="73"> <block pos:line="52" pos:column="74">{
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">wccp2_security_md5<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">security_option<pos:position pos:line="53" pos:column="47"/></name></name> <operator pos:line="53" pos:column="48">=<pos:position pos:line="53" pos:column="49"/></operator> <call><name pos:line="53" pos:column="50">htonl<pos:position pos:line="53" pos:column="55"/></name><argument_list pos:line="53" pos:column="55">(<argument><expr><name pos:line="53" pos:column="56">WCCP2_MD5_SECURITY<pos:position pos:line="53" pos:column="74"/></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="55" pos:column="13">wccp2_security_md5<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">.<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">security_length<pos:position pos:line="55" pos:column="47"/></name></name> <operator pos:line="55" pos:column="48">=<pos:position pos:line="55" pos:column="49"/></operator> <call><name pos:line="55" pos:column="50">htons<pos:position pos:line="55" pos:column="55"/></name><argument_list pos:line="55" pos:column="55">(<argument><expr><sizeof pos:line="55" pos:column="56">sizeof<argument_list pos:line="55" pos:column="62">(<argument><expr pos:line="55" pos:column="63">struct <name pos:line="55" pos:column="70">wccp2_security_md5_t<pos:position pos:line="55" pos:column="90"/></name></expr></argument>)<pos:position pos:line="55" pos:column="91"/></argument_list></sizeof> <operator pos:line="55" pos:column="92">-<pos:position pos:line="55" pos:column="93"/></operator> <literal type="number" pos:line="55" pos:column="94">4<pos:position pos:line="55" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="97"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then> <elseif pos:line="56" pos:column="11">else <if pos:line="56" pos:column="16">if <condition pos:line="56" pos:column="19">(<expr><name><name pos:line="56" pos:column="20">service_list_ptr<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">wccp2_security_type<pos:position pos:line="56" pos:column="57"/></name></name> <operator pos:line="56" pos:column="58">==<pos:position pos:line="56" pos:column="60"/></operator> <name pos:line="56" pos:column="61">WCCP2_NO_SECURITY<pos:position pos:line="56" pos:column="78"/></name></expr>)<pos:position pos:line="56" pos:column="79"/></condition><then pos:line="56" pos:column="79"> <block pos:line="56" pos:column="80">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">wccp2_security_md5<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">.<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="32">security_option<pos:position pos:line="57" pos:column="47"/></name></name> <operator pos:line="57" pos:column="48">=<pos:position pos:line="57" pos:column="49"/></operator> <call><name pos:line="57" pos:column="50">htonl<pos:position pos:line="57" pos:column="55"/></name><argument_list pos:line="57" pos:column="55">(<argument><expr><name pos:line="57" pos:column="56">WCCP2_NO_SECURITY<pos:position pos:line="57" pos:column="73"/></name></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
            <comment type="block" pos:line="58" pos:column="13">/* XXX I hate magic length numbers! */</comment>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">wccp2_security_md5<pos:position pos:line="59" pos:column="31"/></name><operator pos:line="59" pos:column="31">.<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="32">security_length<pos:position pos:line="59" pos:column="47"/></name></name> <operator pos:line="59" pos:column="48">=<pos:position pos:line="59" pos:column="49"/></operator> <call><name pos:line="59" pos:column="50">htons<pos:position pos:line="59" pos:column="55"/></name><argument_list pos:line="59" pos:column="55">(<argument><expr><literal type="number" pos:line="59" pos:column="56">4<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif> <else pos:line="60" pos:column="11">else <block pos:line="60" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">fatalf<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="string" pos:line="61" pos:column="20">"Bad WCCP2 security type\n"<pos:position pos:line="61" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="64" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">.<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="32">length<pos:position pos:line="64" pos:column="38"/></name></name> <operator pos:line="64" pos:column="39">+=<pos:position pos:line="64" pos:column="41"/></operator> <call><name pos:line="64" pos:column="42">ntohs<pos:position pos:line="64" pos:column="47"/></name><argument_list pos:line="64" pos:column="47">(<argument><expr><name><name pos:line="64" pos:column="48">wccp2_security_md5<pos:position pos:line="64" pos:column="66"/></name><operator pos:line="64" pos:column="66">.<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="67">security_length<pos:position pos:line="64" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="83"/></argument_list></call> <operator pos:line="64" pos:column="84">+<pos:position pos:line="64" pos:column="85"/></operator> <literal type="number" pos:line="64" pos:column="86">4<pos:position pos:line="64" pos:column="87"/></literal></expr>;<pos:position pos:line="64" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">assert<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><name><name pos:line="65" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">.<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="39">length<pos:position pos:line="65" pos:column="45"/></name></name> <operator pos:line="65" pos:column="46">&lt;=<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">wccp2_security_md5<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">.<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="28">security_type<pos:position pos:line="66" pos:column="41"/></name></name> <operator pos:line="66" pos:column="42">=<pos:position pos:line="66" pos:column="43"/></operator> <call><name pos:line="66" pos:column="44">htons<pos:position pos:line="66" pos:column="49"/></name><argument_list pos:line="66" pos:column="49">(<argument><expr><name pos:line="66" pos:column="50">WCCP2_SECURITY_INFO<pos:position pos:line="66" pos:column="69"/></name></expr></argument>)<pos:position pos:line="66" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="71"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="68" pos:column="9">service_list_ptr<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">security_info<pos:position pos:line="68" pos:column="40"/></name></name> <operator pos:line="68" pos:column="41">=<pos:position pos:line="68" pos:column="42"/></operator> <operator pos:line="68" pos:column="43">(<pos:position pos:line="68" pos:column="44"/></operator>struct <name pos:line="68" pos:column="51">wccp2_security_md5_t<pos:position pos:line="68" pos:column="71"/></name> <operator pos:line="68" pos:column="72">*<pos:position pos:line="68" pos:column="73"/></operator><operator pos:line="68" pos:column="73">)<pos:position pos:line="68" pos:column="74"/></operator> <name pos:line="68" pos:column="75">ptr<pos:position pos:line="68" pos:column="78"/></name></expr>;<pos:position pos:line="68" pos:column="79"/></expr_stmt>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">service_list_ptr<pos:position pos:line="70" pos:column="29"/></name><operator pos:line="70" pos:column="29">-&gt;<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="31">wccp2_security_type<pos:position pos:line="70" pos:column="50"/></name></name> <operator pos:line="70" pos:column="51">==<pos:position pos:line="70" pos:column="53"/></operator> <name pos:line="70" pos:column="54">WCCP2_MD5_SECURITY<pos:position pos:line="70" pos:column="72"/></name></expr>)<pos:position pos:line="70" pos:column="73"/></condition><then pos:line="70" pos:column="73"> <block pos:line="70" pos:column="74">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">memcpy<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">ptr<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="25">&amp;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="26">wccp2_security_md5<pos:position pos:line="71" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="46">sizeof<argument_list pos:line="71" pos:column="52">(<argument><expr pos:line="71" pos:column="53">struct <name pos:line="71" pos:column="60">wccp2_security_md5_t<pos:position pos:line="71" pos:column="80"/></name></expr></argument>)<pos:position pos:line="71" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="72" pos:column="13">ptr<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">+=<pos:position pos:line="72" pos:column="19"/></operator> <sizeof pos:line="72" pos:column="20">sizeof<argument_list pos:line="72" pos:column="26">(<argument><expr pos:line="72" pos:column="27">struct <name pos:line="72" pos:column="34">wccp2_security_md5_t<pos:position pos:line="72" pos:column="54"/></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></sizeof></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then> <else pos:line="73" pos:column="11">else <block pos:line="73" pos:column="16">{
            <comment type="block" pos:line="74" pos:column="13">/* assume NONE, and XXX I hate magic length numbers */</comment>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">memcpy<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">ptr<pos:position pos:line="75" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="25">&amp;<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="26">wccp2_security_md5<pos:position pos:line="75" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="46">8<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="76" pos:column="13">ptr<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">+=<pos:position pos:line="76" pos:column="19"/></operator> <literal type="number" pos:line="76" pos:column="20">8<pos:position pos:line="76" pos:column="21"/></literal></expr>;<pos:position pos:line="76" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="79" pos:column="9">/* Add the service info section */</comment>

        <expr_stmt><expr><name><name pos:line="81" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">.<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="32">length<pos:position pos:line="81" pos:column="38"/></name></name> <operator pos:line="81" pos:column="39">+=<pos:position pos:line="81" pos:column="41"/></operator> <sizeof pos:line="81" pos:column="42">sizeof<argument_list pos:line="81" pos:column="48">(<argument><expr pos:line="81" pos:column="49">struct <name pos:line="81" pos:column="56">wccp2_service_info_t<pos:position pos:line="81" pos:column="76"/></name></expr></argument>)<pos:position pos:line="81" pos:column="77"/></argument_list></sizeof></expr>;<pos:position pos:line="81" pos:column="78"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="83" pos:column="9">assert<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name><name pos:line="83" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="83" pos:column="38"/></name><operator pos:line="83" pos:column="38">.<pos:position pos:line="83" pos:column="39"/></operator><name pos:line="83" pos:column="39">length<pos:position pos:line="83" pos:column="45"/></name></name> <operator pos:line="83" pos:column="46">&lt;=<pos:position pos:line="83" pos:column="51"/></operator> <name pos:line="83" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="83" pos:column="67"/></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="85" pos:column="9">memcpy<pos:position pos:line="85" pos:column="15"/></name><argument_list pos:line="85" pos:column="15">(<argument><expr><name pos:line="85" pos:column="16">ptr<pos:position pos:line="85" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="21">&amp;<pos:position pos:line="85" pos:column="26"/></operator><name><name pos:line="85" pos:column="22">service_list_ptr<pos:position pos:line="85" pos:column="38"/></name><operator pos:line="85" pos:column="38">-&gt;<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="40">info<pos:position pos:line="85" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="46">sizeof<argument_list pos:line="85" pos:column="52">(<argument><expr pos:line="85" pos:column="53">struct <name pos:line="85" pos:column="60">wccp2_service_info_t<pos:position pos:line="85" pos:column="80"/></name></expr></argument>)<pos:position pos:line="85" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="83"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="87" pos:column="9">service_list_ptr<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">service_info<pos:position pos:line="87" pos:column="39"/></name></name> <operator pos:line="87" pos:column="40">=<pos:position pos:line="87" pos:column="41"/></operator> <operator pos:line="87" pos:column="42">(<pos:position pos:line="87" pos:column="43"/></operator>struct <name pos:line="87" pos:column="50">wccp2_service_info_t<pos:position pos:line="87" pos:column="70"/></name> <operator pos:line="87" pos:column="71">*<pos:position pos:line="87" pos:column="72"/></operator><operator pos:line="87" pos:column="72">)<pos:position pos:line="87" pos:column="73"/></operator> <name pos:line="87" pos:column="74">ptr<pos:position pos:line="87" pos:column="77"/></name></expr>;<pos:position pos:line="87" pos:column="78"/></expr_stmt>

        <expr_stmt><expr><name pos:line="89" pos:column="9">ptr<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">+=<pos:position pos:line="89" pos:column="15"/></operator> <sizeof pos:line="89" pos:column="16">sizeof<argument_list pos:line="89" pos:column="22">(<argument><expr pos:line="89" pos:column="23">struct <name pos:line="89" pos:column="30">wccp2_service_info_t<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></sizeof></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt>

        <comment type="block" pos:line="91" pos:column="9">/* Add the cache identity section */</comment>

        <switch pos:line="93" pos:column="9">switch <condition pos:line="93" pos:column="16">(<expr><name><name pos:line="93" pos:column="17">Config<pos:position pos:line="93" pos:column="23"/></name><operator pos:line="93" pos:column="23">.<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="24">Wccp2<pos:position pos:line="93" pos:column="29"/></name><operator pos:line="93" pos:column="29">.<pos:position pos:line="93" pos:column="30"/></operator><name pos:line="93" pos:column="30">assignment_method<pos:position pos:line="93" pos:column="47"/></name></name></expr>)<pos:position pos:line="93" pos:column="48"/></condition> <block pos:line="93" pos:column="49">{

        <case pos:line="95" pos:column="9">case <expr><name pos:line="95" pos:column="14">WCCP2_ASSIGNMENT_METHOD_HASH<pos:position pos:line="95" pos:column="42"/></name></expr>:<pos:position pos:line="95" pos:column="43"/></case>

            <expr_stmt><expr><name><name pos:line="97" pos:column="13">wccp2_here_i_am_header<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">.<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="36">length<pos:position pos:line="97" pos:column="42"/></name></name> <operator pos:line="97" pos:column="43">+=<pos:position pos:line="97" pos:column="45"/></operator> <sizeof pos:line="97" pos:column="46">sizeof<argument_list pos:line="97" pos:column="52">(<argument><expr pos:line="97" pos:column="53">struct <name pos:line="97" pos:column="60">wccp2_identity_info_t<pos:position pos:line="97" pos:column="81"/></name></expr></argument>)<pos:position pos:line="97" pos:column="82"/></argument_list></sizeof></expr>;<pos:position pos:line="97" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">assert<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><name><name pos:line="98" pos:column="20">wccp2_here_i_am_header<pos:position pos:line="98" pos:column="42"/></name><operator pos:line="98" pos:column="42">.<pos:position pos:line="98" pos:column="43"/></operator><name pos:line="98" pos:column="43">length<pos:position pos:line="98" pos:column="49"/></name></name> <operator pos:line="98" pos:column="50">&lt;=<pos:position pos:line="98" pos:column="55"/></operator> <name pos:line="98" pos:column="53">WCCP_RESPONSE_SIZE<pos:position pos:line="98" pos:column="71"/></name></expr></argument>)<pos:position pos:line="98" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">wccp2_identity_info<pos:position pos:line="99" pos:column="32"/></name><operator pos:line="99" pos:column="32">.<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="33">cache_identity_type<pos:position pos:line="99" pos:column="52"/></name></name> <operator pos:line="99" pos:column="53">=<pos:position pos:line="99" pos:column="54"/></operator> <call><name pos:line="99" pos:column="55">htons<pos:position pos:line="99" pos:column="60"/></name><argument_list pos:line="99" pos:column="60">(<argument><expr><name pos:line="99" pos:column="61">WCCP2_WC_ID_INFO<pos:position pos:line="99" pos:column="77"/></name></expr></argument>)<pos:position pos:line="99" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="100" pos:column="13">wccp2_identity_info<pos:position pos:line="100" pos:column="32"/></name><operator pos:line="100" pos:column="32">.<pos:position pos:line="100" pos:column="33"/></operator><name pos:line="100" pos:column="33">cache_identity_length<pos:position pos:line="100" pos:column="54"/></name></name> <operator pos:line="100" pos:column="55">=<pos:position pos:line="100" pos:column="56"/></operator> <call><name pos:line="100" pos:column="57">htons<pos:position pos:line="100" pos:column="62"/></name><argument_list pos:line="100" pos:column="62">(<argument><expr><sizeof pos:line="100" pos:column="63">sizeof<argument_list pos:line="100" pos:column="69">(<argument><expr><name><name pos:line="100" pos:column="70">wccp2_identity_info<pos:position pos:line="100" pos:column="89"/></name><operator pos:line="100" pos:column="89">.<pos:position pos:line="100" pos:column="90"/></operator><name pos:line="100" pos:column="90">cache_identity<pos:position pos:line="100" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="105"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="107"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">memset<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><operator pos:line="101" pos:column="20">&amp;<pos:position pos:line="101" pos:column="25"/></operator><name><name pos:line="101" pos:column="21">wccp2_identity_info<pos:position pos:line="101" pos:column="40"/></name><operator pos:line="101" pos:column="40">.<pos:position pos:line="101" pos:column="41"/></operator><name pos:line="101" pos:column="41">cache_identity<pos:position pos:line="101" pos:column="55"/></name><operator pos:line="101" pos:column="55">.<pos:position pos:line="101" pos:column="56"/></operator><name pos:line="101" pos:column="56">addr<pos:position pos:line="101" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="101" pos:column="62">'\0'<pos:position pos:line="101" pos:column="66"/></literal></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="68">sizeof<argument_list pos:line="101" pos:column="74">(<argument><expr pos:line="101" pos:column="75">struct <name pos:line="101" pos:column="82">in_addr<pos:position pos:line="101" pos:column="89"/></name></expr></argument>)<pos:position pos:line="101" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">memset<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">(<argument><expr><operator pos:line="102" pos:column="20">&amp;<pos:position pos:line="102" pos:column="25"/></operator><name><name pos:line="102" pos:column="21">wccp2_identity_info<pos:position pos:line="102" pos:column="40"/></name><operator pos:line="102" pos:column="40">.<pos:position pos:line="102" pos:column="41"/></operator><name pos:line="102" pos:column="41">cache_identity<pos:position pos:line="102" pos:column="55"/></name><operator pos:line="102" pos:column="55">.<pos:position pos:line="102" pos:column="56"/></operator><name pos:line="102" pos:column="56">hash_revision<pos:position pos:line="102" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="102" pos:column="71">'\0'<pos:position pos:line="102" pos:column="75"/></literal></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="77">sizeof<argument_list pos:line="102" pos:column="83">(<argument><expr><name><name pos:line="102" pos:column="84">wccp2_identity_info<pos:position pos:line="102" pos:column="103"/></name><operator pos:line="102" pos:column="103">.<pos:position pos:line="102" pos:column="104"/></operator><name pos:line="102" pos:column="104">cache_identity<pos:position pos:line="102" pos:column="118"/></name><operator pos:line="102" pos:column="118">.<pos:position pos:line="102" pos:column="119"/></operator><name pos:line="102" pos:column="119">hash_revision<pos:position pos:line="102" pos:column="132"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="133"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="135"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">memset<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><operator pos:line="103" pos:column="20">&amp;<pos:position pos:line="103" pos:column="25"/></operator><name><name pos:line="103" pos:column="21">wccp2_identity_info<pos:position pos:line="103" pos:column="40"/></name><operator pos:line="103" pos:column="40">.<pos:position pos:line="103" pos:column="41"/></operator><name pos:line="103" pos:column="41">cache_identity<pos:position pos:line="103" pos:column="55"/></name><operator pos:line="103" pos:column="55">.<pos:position pos:line="103" pos:column="56"/></operator><name pos:line="103" pos:column="56">bits<pos:position pos:line="103" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="103" pos:column="62">'\0'<pos:position pos:line="103" pos:column="66"/></literal></expr></argument>, <argument><expr><sizeof pos:line="103" pos:column="68">sizeof<argument_list pos:line="103" pos:column="74">(<argument><expr><name><name pos:line="103" pos:column="75">wccp2_identity_info<pos:position pos:line="103" pos:column="94"/></name><operator pos:line="103" pos:column="94">.<pos:position pos:line="103" pos:column="95"/></operator><name pos:line="103" pos:column="95">cache_identity<pos:position pos:line="103" pos:column="109"/></name><operator pos:line="103" pos:column="109">.<pos:position pos:line="103" pos:column="110"/></operator><name pos:line="103" pos:column="110">bits<pos:position pos:line="103" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="115"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="103" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="117"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">memset<pos:position pos:line="104" pos:column="19"/></name><argument_list pos:line="104" pos:column="19">(<argument><expr><operator pos:line="104" pos:column="20">&amp;<pos:position pos:line="104" pos:column="25"/></operator><name><name pos:line="104" pos:column="21">wccp2_identity_info<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">.<pos:position pos:line="104" pos:column="41"/></operator><name pos:line="104" pos:column="41">cache_identity<pos:position pos:line="104" pos:column="55"/></name><operator pos:line="104" pos:column="55">.<pos:position pos:line="104" pos:column="56"/></operator><name pos:line="104" pos:column="56">buckets<pos:position pos:line="104" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="104" pos:column="65">'\0'<pos:position pos:line="104" pos:column="69"/></literal></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="71">sizeof<argument_list pos:line="104" pos:column="77">(<argument><expr><name><name pos:line="104" pos:column="78">wccp2_identity_info<pos:position pos:line="104" pos:column="97"/></name><operator pos:line="104" pos:column="97">.<pos:position pos:line="104" pos:column="98"/></operator><name pos:line="104" pos:column="98">cache_identity<pos:position pos:line="104" pos:column="112"/></name><operator pos:line="104" pos:column="112">.<pos:position pos:line="104" pos:column="113"/></operator><name pos:line="104" pos:column="113">buckets<pos:position pos:line="104" pos:column="120"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="121"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="104" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="123"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">wccp2_identity_info<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">.<pos:position pos:line="105" pos:column="33"/></operator><name pos:line="105" pos:column="33">cache_identity<pos:position pos:line="105" pos:column="47"/></name><operator pos:line="105" pos:column="47">.<pos:position pos:line="105" pos:column="48"/></operator><name pos:line="105" pos:column="48">weight<pos:position pos:line="105" pos:column="54"/></name></name> <operator pos:line="105" pos:column="55">=<pos:position pos:line="105" pos:column="56"/></operator> <call><name pos:line="105" pos:column="57">htons<pos:position pos:line="105" pos:column="62"/></name><argument_list pos:line="105" pos:column="62">(<argument><expr><name><name pos:line="105" pos:column="63">Config<pos:position pos:line="105" pos:column="69"/></name><operator pos:line="105" pos:column="69">.<pos:position pos:line="105" pos:column="70"/></operator><name pos:line="105" pos:column="70">Wccp2<pos:position pos:line="105" pos:column="75"/></name><operator pos:line="105" pos:column="75">.<pos:position pos:line="105" pos:column="76"/></operator><name pos:line="105" pos:column="76">weight<pos:position pos:line="105" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">memset<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><operator pos:line="106" pos:column="20">&amp;<pos:position pos:line="106" pos:column="25"/></operator><name><name pos:line="106" pos:column="21">wccp2_identity_info<pos:position pos:line="106" pos:column="40"/></name><operator pos:line="106" pos:column="40">.<pos:position pos:line="106" pos:column="41"/></operator><name pos:line="106" pos:column="41">cache_identity<pos:position pos:line="106" pos:column="55"/></name><operator pos:line="106" pos:column="55">.<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="56">status<pos:position pos:line="106" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="106" pos:column="64">'\0'<pos:position pos:line="106" pos:column="68"/></literal></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="70">sizeof<argument_list pos:line="106" pos:column="76">(<argument><expr><name><name pos:line="106" pos:column="77">wccp2_identity_info<pos:position pos:line="106" pos:column="96"/></name><operator pos:line="106" pos:column="96">.<pos:position pos:line="106" pos:column="97"/></operator><name pos:line="106" pos:column="97">cache_identity<pos:position pos:line="106" pos:column="111"/></name><operator pos:line="106" pos:column="111">.<pos:position pos:line="106" pos:column="112"/></operator><name pos:line="106" pos:column="112">status<pos:position pos:line="106" pos:column="118"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="119"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="106" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="121"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="108" pos:column="13">memcpy<pos:position pos:line="108" pos:column="19"/></name><argument_list pos:line="108" pos:column="19">(<argument><expr><name pos:line="108" pos:column="20">ptr<pos:position pos:line="108" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="25">&amp;<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="26">wccp2_identity_info<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="108" pos:column="47">sizeof<argument_list pos:line="108" pos:column="53">(<argument><expr pos:line="108" pos:column="54">struct <name pos:line="108" pos:column="61">wccp2_identity_info_t<pos:position pos:line="108" pos:column="82"/></name></expr></argument>)<pos:position pos:line="108" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="108" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="109" pos:column="13">service_list_ptr<pos:position pos:line="109" pos:column="29"/></name><operator pos:line="109" pos:column="29">-&gt;<pos:position pos:line="109" pos:column="34"/></operator><name pos:line="109" pos:column="31">wccp2_identity_info_ptr<pos:position pos:line="109" pos:column="54"/></name></name> <operator pos:line="109" pos:column="55">=<pos:position pos:line="109" pos:column="56"/></operator> <name pos:line="109" pos:column="57">ptr<pos:position pos:line="109" pos:column="60"/></name></expr>;<pos:position pos:line="109" pos:column="61"/></expr_stmt>

            <expr_stmt><expr><name pos:line="111" pos:column="13">ptr<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">+=<pos:position pos:line="111" pos:column="19"/></operator> <sizeof pos:line="111" pos:column="20">sizeof<argument_list pos:line="111" pos:column="26">(<argument><expr pos:line="111" pos:column="27">struct <name pos:line="111" pos:column="34">wccp2_identity_info_t<pos:position pos:line="111" pos:column="55"/></name></expr></argument>)<pos:position pos:line="111" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="111" pos:column="57"/></expr_stmt>
            <break pos:line="112" pos:column="13">break;<pos:position pos:line="112" pos:column="19"/></break>

        <case pos:line="114" pos:column="9">case <expr><name pos:line="114" pos:column="14">WCCP2_ASSIGNMENT_METHOD_MASK<pos:position pos:line="114" pos:column="42"/></name></expr>:<pos:position pos:line="114" pos:column="43"/></case>

            <expr_stmt><expr><name><name pos:line="116" pos:column="13">wccp2_here_i_am_header<pos:position pos:line="116" pos:column="35"/></name><operator pos:line="116" pos:column="35">.<pos:position pos:line="116" pos:column="36"/></operator><name pos:line="116" pos:column="36">length<pos:position pos:line="116" pos:column="42"/></name></name> <operator pos:line="116" pos:column="43">+=<pos:position pos:line="116" pos:column="45"/></operator> <sizeof pos:line="116" pos:column="46">sizeof<argument_list pos:line="116" pos:column="52">(<argument><expr pos:line="116" pos:column="53">struct <name pos:line="116" pos:column="60">wccp2_mask_identity_info_t<pos:position pos:line="116" pos:column="86"/></name></expr></argument>)<pos:position pos:line="116" pos:column="87"/></argument_list></sizeof></expr>;<pos:position pos:line="116" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">assert<pos:position pos:line="117" pos:column="19"/></name><argument_list pos:line="117" pos:column="19">(<argument><expr><name><name pos:line="117" pos:column="20">wccp2_here_i_am_header<pos:position pos:line="117" pos:column="42"/></name><operator pos:line="117" pos:column="42">.<pos:position pos:line="117" pos:column="43"/></operator><name pos:line="117" pos:column="43">length<pos:position pos:line="117" pos:column="49"/></name></name> <operator pos:line="117" pos:column="50">&lt;=<pos:position pos:line="117" pos:column="55"/></operator> <name pos:line="117" pos:column="53">WCCP_RESPONSE_SIZE<pos:position pos:line="117" pos:column="71"/></name></expr></argument>)<pos:position pos:line="117" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="118" pos:column="13">wccp2_mask_identity_info<pos:position pos:line="118" pos:column="37"/></name><operator pos:line="118" pos:column="37">.<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="38">cache_identity_type<pos:position pos:line="118" pos:column="57"/></name></name> <operator pos:line="118" pos:column="58">=<pos:position pos:line="118" pos:column="59"/></operator> <call><name pos:line="118" pos:column="60">htons<pos:position pos:line="118" pos:column="65"/></name><argument_list pos:line="118" pos:column="65">(<argument><expr><name pos:line="118" pos:column="66">WCCP2_WC_ID_INFO<pos:position pos:line="118" pos:column="82"/></name></expr></argument>)<pos:position pos:line="118" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="119" pos:column="13">wccp2_mask_identity_info<pos:position pos:line="119" pos:column="37"/></name><operator pos:line="119" pos:column="37">.<pos:position pos:line="119" pos:column="38"/></operator><name pos:line="119" pos:column="38">cache_identity_length<pos:position pos:line="119" pos:column="59"/></name></name> <operator pos:line="119" pos:column="60">=<pos:position pos:line="119" pos:column="61"/></operator> <call><name pos:line="119" pos:column="62">htons<pos:position pos:line="119" pos:column="67"/></name><argument_list pos:line="119" pos:column="67">(<argument><expr><sizeof pos:line="119" pos:column="68">sizeof<argument_list pos:line="119" pos:column="74">(<argument><expr><name><name pos:line="119" pos:column="75">wccp2_mask_identity_info<pos:position pos:line="119" pos:column="99"/></name><operator pos:line="119" pos:column="99">.<pos:position pos:line="119" pos:column="100"/></operator><name pos:line="119" pos:column="100">cache_identity<pos:position pos:line="119" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="115"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="119" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="117"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">memset<pos:position pos:line="120" pos:column="19"/></name><argument_list pos:line="120" pos:column="19">(<argument><expr><operator pos:line="120" pos:column="20">&amp;<pos:position pos:line="120" pos:column="25"/></operator><name><name pos:line="120" pos:column="21">wccp2_mask_identity_info<pos:position pos:line="120" pos:column="45"/></name><operator pos:line="120" pos:column="45">.<pos:position pos:line="120" pos:column="46"/></operator><name pos:line="120" pos:column="46">cache_identity<pos:position pos:line="120" pos:column="60"/></name><operator pos:line="120" pos:column="60">.<pos:position pos:line="120" pos:column="61"/></operator><name pos:line="120" pos:column="61">addr<pos:position pos:line="120" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="120" pos:column="67">'\0'<pos:position pos:line="120" pos:column="71"/></literal></expr></argument>, <argument><expr><sizeof pos:line="120" pos:column="73">sizeof<argument_list pos:line="120" pos:column="79">(<argument><expr pos:line="120" pos:column="80">struct <name pos:line="120" pos:column="87">in_addr<pos:position pos:line="120" pos:column="94"/></name></expr></argument>)<pos:position pos:line="120" pos:column="95"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="120" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">wccp2_mask_identity_info<pos:position pos:line="121" pos:column="37"/></name><operator pos:line="121" pos:column="37">.<pos:position pos:line="121" pos:column="38"/></operator><name pos:line="121" pos:column="38">cache_identity<pos:position pos:line="121" pos:column="52"/></name><operator pos:line="121" pos:column="52">.<pos:position pos:line="121" pos:column="53"/></operator><name pos:line="121" pos:column="53">bits<pos:position pos:line="121" pos:column="57"/></name></name> <operator pos:line="121" pos:column="58">=<pos:position pos:line="121" pos:column="59"/></operator> <call><name pos:line="121" pos:column="60">htons<pos:position pos:line="121" pos:column="65"/></name><argument_list pos:line="121" pos:column="65">(<argument><expr><name pos:line="121" pos:column="66">WCCP2_MASK_ASSIGNMENT_DATA<pos:position pos:line="121" pos:column="92"/></name></expr></argument>)<pos:position pos:line="121" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="122" pos:column="13">wccp2_mask_identity_info<pos:position pos:line="122" pos:column="37"/></name><operator pos:line="122" pos:column="37">.<pos:position pos:line="122" pos:column="38"/></operator><name pos:line="122" pos:column="38">cache_identity<pos:position pos:line="122" pos:column="52"/></name><operator pos:line="122" pos:column="52">.<pos:position pos:line="122" pos:column="53"/></operator><name pos:line="122" pos:column="53">mask_element_count<pos:position pos:line="122" pos:column="71"/></name></name> <operator pos:line="122" pos:column="72">=<pos:position pos:line="122" pos:column="73"/></operator> <call><name pos:line="122" pos:column="74">htonl<pos:position pos:line="122" pos:column="79"/></name><argument_list pos:line="122" pos:column="79">(<argument><expr><literal type="number" pos:line="122" pos:column="80">1<pos:position pos:line="122" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="123" pos:column="13">service_flags<pos:position pos:line="123" pos:column="26"/></name> <operator pos:line="123" pos:column="27">=<pos:position pos:line="123" pos:column="28"/></operator> <call><name pos:line="123" pos:column="29">ntohl<pos:position pos:line="123" pos:column="34"/></name><argument_list pos:line="123" pos:column="34">(<argument><expr><name><name pos:line="123" pos:column="35">service_list_ptr<pos:position pos:line="123" pos:column="51"/></name><operator pos:line="123" pos:column="51">-&gt;<pos:position pos:line="123" pos:column="56"/></operator><name pos:line="123" pos:column="53">service_info<pos:position pos:line="123" pos:column="65"/></name><operator pos:line="123" pos:column="65">-&gt;<pos:position pos:line="123" pos:column="70"/></operator><name pos:line="123" pos:column="67">service_flags<pos:position pos:line="123" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="82"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="125" pos:column="13">memset<pos:position pos:line="125" pos:column="19"/></name><argument_list pos:line="125" pos:column="19">(<argument><expr><operator pos:line="125" pos:column="20">&amp;<pos:position pos:line="125" pos:column="25"/></operator><name><name pos:line="125" pos:column="21">wccp2_mask_identity_info<pos:position pos:line="125" pos:column="45"/></name><operator pos:line="125" pos:column="45">.<pos:position pos:line="125" pos:column="46"/></operator><name pos:line="125" pos:column="46">cache_identity<pos:position pos:line="125" pos:column="60"/></name><operator pos:line="125" pos:column="60">.<pos:position pos:line="125" pos:column="61"/></operator><name pos:line="125" pos:column="61">mask<pos:position pos:line="125" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="67">0<pos:position pos:line="125" pos:column="68"/></literal></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="70">sizeof<argument_list pos:line="125" pos:column="76">(<argument><expr pos:line="125" pos:column="77">struct <name pos:line="125" pos:column="84">wccp2_mask_element_t<pos:position pos:line="125" pos:column="104"/></name></expr></argument>)<pos:position pos:line="125" pos:column="105"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="125" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="107"/></expr_stmt>

            <if pos:line="127" pos:column="13">if <condition pos:line="127" pos:column="16">(<expr><operator pos:line="127" pos:column="17">(<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="18">service_flags<pos:position pos:line="127" pos:column="31"/></name> <operator pos:line="127" pos:column="32">&amp;<pos:position pos:line="127" pos:column="37"/></operator> <name pos:line="127" pos:column="34">WCCP2_SERVICE_SRC_IP_HASH<pos:position pos:line="127" pos:column="59"/></name><operator pos:line="127" pos:column="59">)<pos:position pos:line="127" pos:column="60"/></operator> <operator pos:line="127" pos:column="61">||<pos:position pos:line="127" pos:column="63"/></operator> <operator pos:line="127" pos:column="64">(<pos:position pos:line="127" pos:column="65"/></operator><name pos:line="127" pos:column="65">service_flags<pos:position pos:line="127" pos:column="78"/></name> <operator pos:line="127" pos:column="79">&amp;<pos:position pos:line="127" pos:column="84"/></operator> <name pos:line="127" pos:column="81">WCCP2_SERVICE_SRC_IP_ALT_HASH<pos:position pos:line="127" pos:column="110"/></name><operator pos:line="127" pos:column="110">)<pos:position pos:line="127" pos:column="111"/></operator></expr>)<pos:position pos:line="127" pos:column="112"/></condition><then pos:line="127" pos:column="112"> <block pos:line="127" pos:column="113">{
                <expr_stmt><expr><name><name pos:line="128" pos:column="17">wccp2_mask_identity_info<pos:position pos:line="128" pos:column="41"/></name><operator pos:line="128" pos:column="41">.<pos:position pos:line="128" pos:column="42"/></operator><name pos:line="128" pos:column="42">cache_identity<pos:position pos:line="128" pos:column="56"/></name><operator pos:line="128" pos:column="56">.<pos:position pos:line="128" pos:column="57"/></operator><name pos:line="128" pos:column="57">mask<pos:position pos:line="128" pos:column="61"/></name><operator pos:line="128" pos:column="61">.<pos:position pos:line="128" pos:column="62"/></operator><name pos:line="128" pos:column="62">source_ip_mask<pos:position pos:line="128" pos:column="76"/></name></name> <operator pos:line="128" pos:column="77">=<pos:position pos:line="128" pos:column="78"/></operator> <call><name pos:line="128" pos:column="79">htonl<pos:position pos:line="128" pos:column="84"/></name><argument_list pos:line="128" pos:column="84">(<argument><expr><literal type="number" pos:line="128" pos:column="85">0x00001741<pos:position pos:line="128" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="97"/></expr_stmt>
            }<pos:position pos:line="129" pos:column="14"/></block></then> <elseif pos:line="129" pos:column="15">else <if pos:line="129" pos:column="20">if <condition pos:line="129" pos:column="23">(<expr><operator pos:line="129" pos:column="24">(<pos:position pos:line="129" pos:column="25"/></operator><name><name pos:line="129" pos:column="25">service_list_ptr<pos:position pos:line="129" pos:column="41"/></name><operator pos:line="129" pos:column="41">-&gt;<pos:position pos:line="129" pos:column="46"/></operator><name pos:line="129" pos:column="43">info<pos:position pos:line="129" pos:column="47"/></name><operator pos:line="129" pos:column="47">.<pos:position pos:line="129" pos:column="48"/></operator><name pos:line="129" pos:column="48">service<pos:position pos:line="129" pos:column="55"/></name></name> <operator pos:line="129" pos:column="56">==<pos:position pos:line="129" pos:column="58"/></operator> <name pos:line="129" pos:column="59">WCCP2_SERVICE_STANDARD<pos:position pos:line="129" pos:column="81"/></name><operator pos:line="129" pos:column="81">)<pos:position pos:line="129" pos:column="82"/></operator> <operator pos:line="129" pos:column="83">||<pos:position pos:line="129" pos:column="85"/></operator> <operator pos:line="129" pos:column="86">(<pos:position pos:line="129" pos:column="87"/></operator><name pos:line="129" pos:column="87">service_flags<pos:position pos:line="129" pos:column="100"/></name> <operator pos:line="129" pos:column="101">&amp;<pos:position pos:line="129" pos:column="106"/></operator> <name pos:line="129" pos:column="103">WCCP2_SERVICE_DST_IP_HASH<pos:position pos:line="129" pos:column="128"/></name><operator pos:line="129" pos:column="128">)<pos:position pos:line="129" pos:column="129"/></operator> <operator pos:line="129" pos:column="130">||<pos:position pos:line="129" pos:column="132"/></operator> <operator pos:line="129" pos:column="133">(<pos:position pos:line="129" pos:column="134"/></operator><name pos:line="129" pos:column="134">service_flags<pos:position pos:line="129" pos:column="147"/></name> <operator pos:line="129" pos:column="148">&amp;<pos:position pos:line="129" pos:column="153"/></operator> <name pos:line="129" pos:column="150">WCCP2_SERVICE_DST_IP_ALT_HASH<pos:position pos:line="129" pos:column="179"/></name><operator pos:line="129" pos:column="179">)<pos:position pos:line="129" pos:column="180"/></operator></expr>)<pos:position pos:line="129" pos:column="181"/></condition><then pos:line="129" pos:column="181"> <block pos:line="129" pos:column="182">{
                <expr_stmt><expr><name><name pos:line="130" pos:column="17">wccp2_mask_identity_info<pos:position pos:line="130" pos:column="41"/></name><operator pos:line="130" pos:column="41">.<pos:position pos:line="130" pos:column="42"/></operator><name pos:line="130" pos:column="42">cache_identity<pos:position pos:line="130" pos:column="56"/></name><operator pos:line="130" pos:column="56">.<pos:position pos:line="130" pos:column="57"/></operator><name pos:line="130" pos:column="57">mask<pos:position pos:line="130" pos:column="61"/></name><operator pos:line="130" pos:column="61">.<pos:position pos:line="130" pos:column="62"/></operator><name pos:line="130" pos:column="62">dest_ip_mask<pos:position pos:line="130" pos:column="74"/></name></name> <operator pos:line="130" pos:column="75">=<pos:position pos:line="130" pos:column="76"/></operator> <call><name pos:line="130" pos:column="77">htonl<pos:position pos:line="130" pos:column="82"/></name><argument_list pos:line="130" pos:column="82">(<argument><expr><literal type="number" pos:line="130" pos:column="83">0x00001741<pos:position pos:line="130" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="95"/></expr_stmt>
            }<pos:position pos:line="131" pos:column="14"/></block></then></if></elseif> <elseif pos:line="131" pos:column="15">else <if pos:line="131" pos:column="20">if <condition pos:line="131" pos:column="23">(<expr><operator pos:line="131" pos:column="24">(<pos:position pos:line="131" pos:column="25"/></operator><name pos:line="131" pos:column="25">service_flags<pos:position pos:line="131" pos:column="38"/></name> <operator pos:line="131" pos:column="39">&amp;<pos:position pos:line="131" pos:column="44"/></operator> <name pos:line="131" pos:column="41">WCCP2_SERVICE_SRC_PORT_HASH<pos:position pos:line="131" pos:column="68"/></name><operator pos:line="131" pos:column="68">)<pos:position pos:line="131" pos:column="69"/></operator> <operator pos:line="131" pos:column="70">||<pos:position pos:line="131" pos:column="72"/></operator> <operator pos:line="131" pos:column="73">(<pos:position pos:line="131" pos:column="74"/></operator><name pos:line="131" pos:column="74">service_flags<pos:position pos:line="131" pos:column="87"/></name> <operator pos:line="131" pos:column="88">&amp;<pos:position pos:line="131" pos:column="93"/></operator> <name pos:line="131" pos:column="90">WCCP2_SERVICE_SRC_PORT_ALT_HASH<pos:position pos:line="131" pos:column="121"/></name><operator pos:line="131" pos:column="121">)<pos:position pos:line="131" pos:column="122"/></operator></expr>)<pos:position pos:line="131" pos:column="123"/></condition><then pos:line="131" pos:column="123"> <block pos:line="131" pos:column="124">{
                <expr_stmt><expr><name><name pos:line="132" pos:column="17">wccp2_mask_identity_info<pos:position pos:line="132" pos:column="41"/></name><operator pos:line="132" pos:column="41">.<pos:position pos:line="132" pos:column="42"/></operator><name pos:line="132" pos:column="42">cache_identity<pos:position pos:line="132" pos:column="56"/></name><operator pos:line="132" pos:column="56">.<pos:position pos:line="132" pos:column="57"/></operator><name pos:line="132" pos:column="57">mask<pos:position pos:line="132" pos:column="61"/></name><operator pos:line="132" pos:column="61">.<pos:position pos:line="132" pos:column="62"/></operator><name pos:line="132" pos:column="62">source_port_mask<pos:position pos:line="132" pos:column="78"/></name></name> <operator pos:line="132" pos:column="79">=<pos:position pos:line="132" pos:column="80"/></operator> <call><name pos:line="132" pos:column="81">htons<pos:position pos:line="132" pos:column="86"/></name><argument_list pos:line="132" pos:column="86">(<argument><expr><literal type="number" pos:line="132" pos:column="87">0x1741<pos:position pos:line="132" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="95"/></expr_stmt>
            }<pos:position pos:line="133" pos:column="14"/></block></then></if></elseif> <elseif pos:line="133" pos:column="15">else <if pos:line="133" pos:column="20">if <condition pos:line="133" pos:column="23">(<expr><operator pos:line="133" pos:column="24">(<pos:position pos:line="133" pos:column="25"/></operator><name pos:line="133" pos:column="25">service_flags<pos:position pos:line="133" pos:column="38"/></name> <operator pos:line="133" pos:column="39">&amp;<pos:position pos:line="133" pos:column="44"/></operator> <name pos:line="133" pos:column="41">WCCP2_SERVICE_DST_PORT_HASH<pos:position pos:line="133" pos:column="68"/></name><operator pos:line="133" pos:column="68">)<pos:position pos:line="133" pos:column="69"/></operator> <operator pos:line="133" pos:column="70">||<pos:position pos:line="133" pos:column="72"/></operator> <operator pos:line="133" pos:column="73">(<pos:position pos:line="133" pos:column="74"/></operator><name pos:line="133" pos:column="74">service_flags<pos:position pos:line="133" pos:column="87"/></name> <operator pos:line="133" pos:column="88">&amp;<pos:position pos:line="133" pos:column="93"/></operator> <name pos:line="133" pos:column="90">WCCP2_SERVICE_DST_PORT_ALT_HASH<pos:position pos:line="133" pos:column="121"/></name><operator pos:line="133" pos:column="121">)<pos:position pos:line="133" pos:column="122"/></operator></expr>)<pos:position pos:line="133" pos:column="123"/></condition><then pos:line="133" pos:column="123"> <block pos:line="133" pos:column="124">{
                <expr_stmt><expr><name><name pos:line="134" pos:column="17">wccp2_mask_identity_info<pos:position pos:line="134" pos:column="41"/></name><operator pos:line="134" pos:column="41">.<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="42">cache_identity<pos:position pos:line="134" pos:column="56"/></name><operator pos:line="134" pos:column="56">.<pos:position pos:line="134" pos:column="57"/></operator><name pos:line="134" pos:column="57">mask<pos:position pos:line="134" pos:column="61"/></name><operator pos:line="134" pos:column="61">.<pos:position pos:line="134" pos:column="62"/></operator><name pos:line="134" pos:column="62">dest_port_mask<pos:position pos:line="134" pos:column="76"/></name></name> <operator pos:line="134" pos:column="77">=<pos:position pos:line="134" pos:column="78"/></operator> <call><name pos:line="134" pos:column="79">htons<pos:position pos:line="134" pos:column="84"/></name><argument_list pos:line="134" pos:column="84">(<argument><expr><literal type="number" pos:line="134" pos:column="85">0x1741<pos:position pos:line="134" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="93"/></expr_stmt>
            }<pos:position pos:line="135" pos:column="14"/></block></then></if></elseif> <else pos:line="135" pos:column="15">else <block pos:line="135" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">fatalf<pos:position pos:line="136" pos:column="23"/></name><argument_list pos:line="136" pos:column="23">(<argument><expr><literal type="string" pos:line="136" pos:column="24">"Unknown service hash method\n"<pos:position pos:line="136" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></else></if>

            <expr_stmt><expr><name><name pos:line="139" pos:column="13">wccp2_mask_identity_info<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">.<pos:position pos:line="139" pos:column="38"/></operator><name pos:line="139" pos:column="38">cache_identity<pos:position pos:line="139" pos:column="52"/></name><operator pos:line="139" pos:column="52">.<pos:position pos:line="139" pos:column="53"/></operator><name pos:line="139" pos:column="53">weight<pos:position pos:line="139" pos:column="59"/></name></name> <operator pos:line="139" pos:column="60">=<pos:position pos:line="139" pos:column="61"/></operator> <literal type="number" pos:line="139" pos:column="62">0<pos:position pos:line="139" pos:column="63"/></literal></expr>;<pos:position pos:line="139" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="140" pos:column="13">wccp2_mask_identity_info<pos:position pos:line="140" pos:column="37"/></name><operator pos:line="140" pos:column="37">.<pos:position pos:line="140" pos:column="38"/></operator><name pos:line="140" pos:column="38">cache_identity<pos:position pos:line="140" pos:column="52"/></name><operator pos:line="140" pos:column="52">.<pos:position pos:line="140" pos:column="53"/></operator><name pos:line="140" pos:column="53">status<pos:position pos:line="140" pos:column="59"/></name></name> <operator pos:line="140" pos:column="60">=<pos:position pos:line="140" pos:column="61"/></operator> <literal type="number" pos:line="140" pos:column="62">0<pos:position pos:line="140" pos:column="63"/></literal></expr>;<pos:position pos:line="140" pos:column="64"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="142" pos:column="13">memcpy<pos:position pos:line="142" pos:column="19"/></name><argument_list pos:line="142" pos:column="19">(<argument><expr><name pos:line="142" pos:column="20">ptr<pos:position pos:line="142" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="25">&amp;<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="26">wccp2_mask_identity_info<pos:position pos:line="142" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="142" pos:column="52">sizeof<argument_list pos:line="142" pos:column="58">(<argument><expr pos:line="142" pos:column="59">struct <name pos:line="142" pos:column="66">wccp2_mask_identity_info_t<pos:position pos:line="142" pos:column="92"/></name></expr></argument>)<pos:position pos:line="142" pos:column="93"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="142" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="143" pos:column="13">service_list_ptr<pos:position pos:line="143" pos:column="29"/></name><operator pos:line="143" pos:column="29">-&gt;<pos:position pos:line="143" pos:column="34"/></operator><name pos:line="143" pos:column="31">wccp2_identity_info_ptr<pos:position pos:line="143" pos:column="54"/></name></name> <operator pos:line="143" pos:column="55">=<pos:position pos:line="143" pos:column="56"/></operator> <name pos:line="143" pos:column="57">ptr<pos:position pos:line="143" pos:column="60"/></name></expr>;<pos:position pos:line="143" pos:column="61"/></expr_stmt>

            <expr_stmt><expr><name pos:line="145" pos:column="13">ptr<pos:position pos:line="145" pos:column="16"/></name> <operator pos:line="145" pos:column="17">+=<pos:position pos:line="145" pos:column="19"/></operator> <sizeof pos:line="145" pos:column="20">sizeof<argument_list pos:line="145" pos:column="26">(<argument><expr pos:line="145" pos:column="27">struct <name pos:line="145" pos:column="34">wccp2_mask_identity_info_t<pos:position pos:line="145" pos:column="60"/></name></expr></argument>)<pos:position pos:line="145" pos:column="61"/></argument_list></sizeof></expr>;<pos:position pos:line="145" pos:column="62"/></expr_stmt>
            <break pos:line="146" pos:column="13">break;<pos:position pos:line="146" pos:column="19"/></break>

        <default pos:line="148" pos:column="9">default:<pos:position pos:line="148" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">fatalf<pos:position pos:line="149" pos:column="19"/></name><argument_list pos:line="149" pos:column="19">(<argument><expr><literal type="string" pos:line="149" pos:column="20">"Unknown Wccp2 assignment method\n"<pos:position pos:line="149" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="150" pos:column="10"/></block></switch>

        <comment type="block" pos:line="152" pos:column="9">/* Add the cache view section */</comment>
        <expr_stmt><expr><name><name pos:line="153" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="153" pos:column="31"/></name><operator pos:line="153" pos:column="31">.<pos:position pos:line="153" pos:column="32"/></operator><name pos:line="153" pos:column="32">length<pos:position pos:line="153" pos:column="38"/></name></name> <operator pos:line="153" pos:column="39">+=<pos:position pos:line="153" pos:column="41"/></operator> <sizeof pos:line="153" pos:column="42">sizeof<argument_list pos:line="153" pos:column="48">(<argument><expr><name pos:line="153" pos:column="49">wccp2_cache_view_header<pos:position pos:line="153" pos:column="72"/></name></expr></argument>)<pos:position pos:line="153" pos:column="73"/></argument_list></sizeof></expr>;<pos:position pos:line="153" pos:column="74"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="155" pos:column="9">assert<pos:position pos:line="155" pos:column="15"/></name><argument_list pos:line="155" pos:column="15">(<argument><expr><name><name pos:line="155" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="155" pos:column="38"/></name><operator pos:line="155" pos:column="38">.<pos:position pos:line="155" pos:column="39"/></operator><name pos:line="155" pos:column="39">length<pos:position pos:line="155" pos:column="45"/></name></name> <operator pos:line="155" pos:column="46">&lt;=<pos:position pos:line="155" pos:column="51"/></operator> <name pos:line="155" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="155" pos:column="67"/></name></expr></argument>)<pos:position pos:line="155" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="157" pos:column="9">wccp2_cache_view_header<pos:position pos:line="157" pos:column="32"/></name><operator pos:line="157" pos:column="32">.<pos:position pos:line="157" pos:column="33"/></operator><name pos:line="157" pos:column="33">cache_view_type<pos:position pos:line="157" pos:column="48"/></name></name> <operator pos:line="157" pos:column="49">=<pos:position pos:line="157" pos:column="50"/></operator> <call><name pos:line="157" pos:column="51">htons<pos:position pos:line="157" pos:column="56"/></name><argument_list pos:line="157" pos:column="56">(<argument><expr><name pos:line="157" pos:column="57">WCCP2_WC_VIEW_INFO<pos:position pos:line="157" pos:column="75"/></name></expr></argument>)<pos:position pos:line="157" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="77"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="159" pos:column="9">wccp2_cache_view_header<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">.<pos:position pos:line="159" pos:column="33"/></operator><name pos:line="159" pos:column="33">cache_view_length<pos:position pos:line="159" pos:column="50"/></name></name> <operator pos:line="159" pos:column="51">=<pos:position pos:line="159" pos:column="52"/></operator> <call><name pos:line="159" pos:column="53">htons<pos:position pos:line="159" pos:column="58"/></name><argument_list pos:line="159" pos:column="58">(<argument><expr><sizeof pos:line="159" pos:column="59">sizeof<argument_list pos:line="159" pos:column="65">(<argument><expr><name pos:line="159" pos:column="66">wccp2_cache_view_header<pos:position pos:line="159" pos:column="89"/></name></expr></argument>)<pos:position pos:line="159" pos:column="90"/></argument_list></sizeof> <operator pos:line="159" pos:column="91">-<pos:position pos:line="159" pos:column="92"/></operator> <literal type="number" pos:line="159" pos:column="93">4<pos:position pos:line="159" pos:column="94"/></literal> <operator pos:line="159" pos:column="95">+<pos:position pos:line="159" pos:column="96"/></operator>
                <sizeof pos:line="160" pos:column="17">sizeof<argument_list pos:line="160" pos:column="23">(<argument><expr><name pos:line="160" pos:column="24">wccp2_cache_view_info<pos:position pos:line="160" pos:column="45"/></name></expr></argument>)<pos:position pos:line="160" pos:column="46"/></argument_list></sizeof> <operator pos:line="160" pos:column="47">+<pos:position pos:line="160" pos:column="48"/></operator> <operator pos:line="160" pos:column="49">(<pos:position pos:line="160" pos:column="50"/></operator><name pos:line="160" pos:column="50">wccp2_numrouters<pos:position pos:line="160" pos:column="66"/></name> <operator pos:line="160" pos:column="67">*<pos:position pos:line="160" pos:column="68"/></operator> <sizeof pos:line="160" pos:column="69">sizeof<argument_list pos:line="160" pos:column="75">(<argument><expr><name pos:line="160" pos:column="76">wccp2_router_id_element<pos:position pos:line="160" pos:column="99"/></name></expr></argument>)<pos:position pos:line="160" pos:column="100"/></argument_list></sizeof><operator pos:line="160" pos:column="100">)<pos:position pos:line="160" pos:column="101"/></operator></expr></argument>)<pos:position pos:line="160" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="103"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="162" pos:column="9">wccp2_cache_view_header<pos:position pos:line="162" pos:column="32"/></name><operator pos:line="162" pos:column="32">.<pos:position pos:line="162" pos:column="33"/></operator><name pos:line="162" pos:column="33">cache_view_version<pos:position pos:line="162" pos:column="51"/></name></name> <operator pos:line="162" pos:column="52">=<pos:position pos:line="162" pos:column="53"/></operator> <call><name pos:line="162" pos:column="54">htonl<pos:position pos:line="162" pos:column="59"/></name><argument_list pos:line="162" pos:column="59">(<argument><expr><literal type="number" pos:line="162" pos:column="60">1<pos:position pos:line="162" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="63"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="164" pos:column="9">memcpy<pos:position pos:line="164" pos:column="15"/></name><argument_list pos:line="164" pos:column="15">(<argument><expr><name pos:line="164" pos:column="16">ptr<pos:position pos:line="164" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="164" pos:column="21">&amp;<pos:position pos:line="164" pos:column="26"/></operator><name pos:line="164" pos:column="22">wccp2_cache_view_header<pos:position pos:line="164" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="164" pos:column="47">sizeof<argument_list pos:line="164" pos:column="53">(<argument><expr><name pos:line="164" pos:column="54">wccp2_cache_view_header<pos:position pos:line="164" pos:column="77"/></name></expr></argument>)<pos:position pos:line="164" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="164" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><name pos:line="166" pos:column="9">ptr<pos:position pos:line="166" pos:column="12"/></name> <operator pos:line="166" pos:column="13">+=<pos:position pos:line="166" pos:column="15"/></operator> <sizeof pos:line="166" pos:column="16">sizeof<argument_list pos:line="166" pos:column="22">(<argument><expr><name pos:line="166" pos:column="23">wccp2_cache_view_header<pos:position pos:line="166" pos:column="46"/></name></expr></argument>)<pos:position pos:line="166" pos:column="47"/></argument_list></sizeof></expr>;<pos:position pos:line="166" pos:column="48"/></expr_stmt>

        <comment type="block" pos:line="168" pos:column="9">/* Add the number of routers to the packet */</comment>
        <expr_stmt><expr><name><name pos:line="169" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="169" pos:column="31"/></name><operator pos:line="169" pos:column="31">.<pos:position pos:line="169" pos:column="32"/></operator><name pos:line="169" pos:column="32">length<pos:position pos:line="169" pos:column="38"/></name></name> <operator pos:line="169" pos:column="39">+=<pos:position pos:line="169" pos:column="41"/></operator> <sizeof pos:line="169" pos:column="42">sizeof<argument_list pos:line="169" pos:column="48">(<argument><expr><name><name pos:line="169" pos:column="49">service_list_ptr<pos:position pos:line="169" pos:column="65"/></name><operator pos:line="169" pos:column="65">-&gt;<pos:position pos:line="169" pos:column="70"/></operator><name pos:line="169" pos:column="67">num_routers<pos:position pos:line="169" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="79"/></argument_list></sizeof></expr>;<pos:position pos:line="169" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="171" pos:column="9">assert<pos:position pos:line="171" pos:column="15"/></name><argument_list pos:line="171" pos:column="15">(<argument><expr><name><name pos:line="171" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="171" pos:column="38"/></name><operator pos:line="171" pos:column="38">.<pos:position pos:line="171" pos:column="39"/></operator><name pos:line="171" pos:column="39">length<pos:position pos:line="171" pos:column="45"/></name></name> <operator pos:line="171" pos:column="46">&lt;=<pos:position pos:line="171" pos:column="51"/></operator> <name pos:line="171" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="171" pos:column="67"/></name></expr></argument>)<pos:position pos:line="171" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="173" pos:column="9">service_list_ptr<pos:position pos:line="173" pos:column="25"/></name><operator pos:line="173" pos:column="25">-&gt;<pos:position pos:line="173" pos:column="30"/></operator><name pos:line="173" pos:column="27">num_routers<pos:position pos:line="173" pos:column="38"/></name></name> <operator pos:line="173" pos:column="39">=<pos:position pos:line="173" pos:column="40"/></operator> <call><name pos:line="173" pos:column="41">htonl<pos:position pos:line="173" pos:column="46"/></name><argument_list pos:line="173" pos:column="46">(<argument><expr><name pos:line="173" pos:column="47">wccp2_numrouters<pos:position pos:line="173" pos:column="63"/></name></expr></argument>)<pos:position pos:line="173" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="65"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="175" pos:column="9">memcpy<pos:position pos:line="175" pos:column="15"/></name><argument_list pos:line="175" pos:column="15">(<argument><expr><name pos:line="175" pos:column="16">ptr<pos:position pos:line="175" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="175" pos:column="21">&amp;<pos:position pos:line="175" pos:column="26"/></operator><name><name pos:line="175" pos:column="22">service_list_ptr<pos:position pos:line="175" pos:column="38"/></name><operator pos:line="175" pos:column="38">-&gt;<pos:position pos:line="175" pos:column="43"/></operator><name pos:line="175" pos:column="40">num_routers<pos:position pos:line="175" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="175" pos:column="53">sizeof<argument_list pos:line="175" pos:column="59">(<argument><expr><name><name pos:line="175" pos:column="60">service_list_ptr<pos:position pos:line="175" pos:column="76"/></name><operator pos:line="175" pos:column="76">-&gt;<pos:position pos:line="175" pos:column="81"/></operator><name pos:line="175" pos:column="78">num_routers<pos:position pos:line="175" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="175" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="92"/></expr_stmt>

        <expr_stmt><expr><name pos:line="177" pos:column="9">ptr<pos:position pos:line="177" pos:column="12"/></name> <operator pos:line="177" pos:column="13">+=<pos:position pos:line="177" pos:column="15"/></operator> <sizeof pos:line="177" pos:column="16">sizeof<argument_list pos:line="177" pos:column="22">(<argument><expr><name><name pos:line="177" pos:column="23">service_list_ptr<pos:position pos:line="177" pos:column="39"/></name><operator pos:line="177" pos:column="39">-&gt;<pos:position pos:line="177" pos:column="44"/></operator><name pos:line="177" pos:column="41">num_routers<pos:position pos:line="177" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="53"/></argument_list></sizeof></expr>;<pos:position pos:line="177" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="179" pos:column="9">/* Add each router.  Keep this functionality here to make sure the received_id can be updated in the packet */</comment>
        <for pos:line="180" pos:column="9">for <control pos:line="180" pos:column="13">(<init><expr><name pos:line="180" pos:column="14">s<pos:position pos:line="180" pos:column="15"/></name> <operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator> <name><name pos:line="180" pos:column="18">Config<pos:position pos:line="180" pos:column="24"/></name><operator pos:line="180" pos:column="24">.<pos:position pos:line="180" pos:column="25"/></operator><name pos:line="180" pos:column="25">Wccp2<pos:position pos:line="180" pos:column="30"/></name><operator pos:line="180" pos:column="30">.<pos:position pos:line="180" pos:column="31"/></operator><name pos:line="180" pos:column="31">router<pos:position pos:line="180" pos:column="37"/></name></name></expr>;<pos:position pos:line="180" pos:column="38"/></init> <condition><expr><name pos:line="180" pos:column="39">s<pos:position pos:line="180" pos:column="40"/></name></expr>;<pos:position pos:line="180" pos:column="41"/></condition> <incr><expr><name pos:line="180" pos:column="42">s<pos:position pos:line="180" pos:column="43"/></name> <operator pos:line="180" pos:column="44">=<pos:position pos:line="180" pos:column="45"/></operator> <name><name pos:line="180" pos:column="46">s<pos:position pos:line="180" pos:column="47"/></name><operator pos:line="180" pos:column="47">-&gt;<pos:position pos:line="180" pos:column="52"/></operator><name pos:line="180" pos:column="49">next<pos:position pos:line="180" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="180" pos:column="54"/></control> <block pos:line="180" pos:column="55">{
            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><operator pos:line="181" pos:column="17">!<pos:position pos:line="181" pos:column="18"/></operator><call><name><name pos:line="181" pos:column="18">s<pos:position pos:line="181" pos:column="19"/></name><operator pos:line="181" pos:column="19">-&gt;<pos:position pos:line="181" pos:column="24"/></operator><name pos:line="181" pos:column="21">s<pos:position pos:line="181" pos:column="22"/></name><operator pos:line="181" pos:column="22">.<pos:position pos:line="181" pos:column="23"/></operator><name pos:line="181" pos:column="23">isAnyAddr<pos:position pos:line="181" pos:column="32"/></name></name><argument_list pos:line="181" pos:column="32">()<pos:position pos:line="181" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="35"/></condition><then pos:line="181" pos:column="35"> <block pos:line="181" pos:column="36">{

                <expr_stmt><expr><name><name pos:line="183" pos:column="17">wccp2_here_i_am_header<pos:position pos:line="183" pos:column="39"/></name><operator pos:line="183" pos:column="39">.<pos:position pos:line="183" pos:column="40"/></operator><name pos:line="183" pos:column="40">length<pos:position pos:line="183" pos:column="46"/></name></name> <operator pos:line="183" pos:column="47">+=<pos:position pos:line="183" pos:column="49"/></operator> <sizeof pos:line="183" pos:column="50">sizeof<argument_list pos:line="183" pos:column="56">(<argument><expr pos:line="183" pos:column="57">struct <name pos:line="183" pos:column="64">wccp2_router_id_element_t<pos:position pos:line="183" pos:column="89"/></name></expr></argument>)<pos:position pos:line="183" pos:column="90"/></argument_list></sizeof></expr>;<pos:position pos:line="183" pos:column="91"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="184" pos:column="17">assert<pos:position pos:line="184" pos:column="23"/></name><argument_list pos:line="184" pos:column="23">(<argument><expr><name><name pos:line="184" pos:column="24">wccp2_here_i_am_header<pos:position pos:line="184" pos:column="46"/></name><operator pos:line="184" pos:column="46">.<pos:position pos:line="184" pos:column="47"/></operator><name pos:line="184" pos:column="47">length<pos:position pos:line="184" pos:column="53"/></name></name> <operator pos:line="184" pos:column="54">&lt;=<pos:position pos:line="184" pos:column="59"/></operator> <name pos:line="184" pos:column="57">WCCP_RESPONSE_SIZE<pos:position pos:line="184" pos:column="75"/></name></expr></argument>)<pos:position pos:line="184" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="77"/></expr_stmt>

                <comment type="block" pos:line="186" pos:column="17">/* Add a pointer to the router list for this router */</comment>

                <expr_stmt><expr><name><name pos:line="188" pos:column="17">router_list_ptr<pos:position pos:line="188" pos:column="32"/></name><operator pos:line="188" pos:column="32">-&gt;<pos:position pos:line="188" pos:column="37"/></operator><name pos:line="188" pos:column="34">info<pos:position pos:line="188" pos:column="38"/></name></name> <operator pos:line="188" pos:column="39">=<pos:position pos:line="188" pos:column="40"/></operator> <operator pos:line="188" pos:column="41">(<pos:position pos:line="188" pos:column="42"/></operator>struct <name pos:line="188" pos:column="49">wccp2_router_id_element_t<pos:position pos:line="188" pos:column="74"/></name> <operator pos:line="188" pos:column="75">*<pos:position pos:line="188" pos:column="76"/></operator><operator pos:line="188" pos:column="76">)<pos:position pos:line="188" pos:column="77"/></operator> <name pos:line="188" pos:column="78">ptr<pos:position pos:line="188" pos:column="81"/></name></expr>;<pos:position pos:line="188" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="189" pos:column="17">s<pos:position pos:line="189" pos:column="18"/></name><operator pos:line="189" pos:column="18">-&gt;<pos:position pos:line="189" pos:column="23"/></operator><name pos:line="189" pos:column="20">s<pos:position pos:line="189" pos:column="21"/></name><operator pos:line="189" pos:column="21">.<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="22">getInAddr<pos:position pos:line="189" pos:column="31"/></name></name><argument_list pos:line="189" pos:column="31">(<argument><expr><name><name pos:line="189" pos:column="32">router_list_ptr<pos:position pos:line="189" pos:column="47"/></name><operator pos:line="189" pos:column="47">-&gt;<pos:position pos:line="189" pos:column="52"/></operator><name pos:line="189" pos:column="49">info<pos:position pos:line="189" pos:column="53"/></name><operator pos:line="189" pos:column="53">-&gt;<pos:position pos:line="189" pos:column="58"/></operator><name pos:line="189" pos:column="55">router_address<pos:position pos:line="189" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="190" pos:column="17">router_list_ptr<pos:position pos:line="190" pos:column="32"/></name><operator pos:line="190" pos:column="32">-&gt;<pos:position pos:line="190" pos:column="37"/></operator><name pos:line="190" pos:column="34">info<pos:position pos:line="190" pos:column="38"/></name><operator pos:line="190" pos:column="38">-&gt;<pos:position pos:line="190" pos:column="43"/></operator><name pos:line="190" pos:column="40">received_id<pos:position pos:line="190" pos:column="51"/></name></name> <operator pos:line="190" pos:column="52">=<pos:position pos:line="190" pos:column="53"/></operator> <call><name pos:line="190" pos:column="54">htonl<pos:position pos:line="190" pos:column="59"/></name><argument_list pos:line="190" pos:column="59">(<argument><expr><literal type="number" pos:line="190" pos:column="60">0<pos:position pos:line="190" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="191" pos:column="17">s<pos:position pos:line="191" pos:column="18"/></name><operator pos:line="191" pos:column="18">-&gt;<pos:position pos:line="191" pos:column="23"/></operator><name pos:line="191" pos:column="20">s<pos:position pos:line="191" pos:column="21"/></name><operator pos:line="191" pos:column="21">.<pos:position pos:line="191" pos:column="22"/></operator><name pos:line="191" pos:column="22">getInAddr<pos:position pos:line="191" pos:column="31"/></name></name><argument_list pos:line="191" pos:column="31">(<argument><expr><name><name pos:line="191" pos:column="32">router_list_ptr<pos:position pos:line="191" pos:column="47"/></name><operator pos:line="191" pos:column="47">-&gt;<pos:position pos:line="191" pos:column="52"/></operator><name pos:line="191" pos:column="49">router_sendto_address<pos:position pos:line="191" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="191" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="192" pos:column="17">router_list_ptr<pos:position pos:line="192" pos:column="32"/></name><operator pos:line="192" pos:column="32">-&gt;<pos:position pos:line="192" pos:column="37"/></operator><name pos:line="192" pos:column="34">member_change<pos:position pos:line="192" pos:column="47"/></name></name> <operator pos:line="192" pos:column="48">=<pos:position pos:line="192" pos:column="49"/></operator> <call><name pos:line="192" pos:column="50">htonl<pos:position pos:line="192" pos:column="55"/></name><argument_list pos:line="192" pos:column="55">(<argument><expr><literal type="number" pos:line="192" pos:column="56">0<pos:position pos:line="192" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="59"/></expr_stmt>

                <comment type="block" pos:line="194" pos:column="17">/* Build the next struct */</comment>

                <expr_stmt><expr><name><name pos:line="196" pos:column="17">router_list_ptr<pos:position pos:line="196" pos:column="32"/></name><operator pos:line="196" pos:column="32">-&gt;<pos:position pos:line="196" pos:column="37"/></operator><name pos:line="196" pos:column="34">next<pos:position pos:line="196" pos:column="38"/></name></name> <operator pos:line="196" pos:column="39">=<pos:position pos:line="196" pos:column="40"/></operator> <operator pos:line="196" pos:column="41">(<pos:position pos:line="196" pos:column="42"/></operator><name pos:line="196" pos:column="42">wccp2_router_list_t<pos:position pos:line="196" pos:column="61"/></name><operator pos:line="196" pos:column="61">*<pos:position pos:line="196" pos:column="62"/></operator><operator pos:line="196" pos:column="62">)<pos:position pos:line="196" pos:column="63"/></operator> <call><name pos:line="196" pos:column="64">xcalloc<pos:position pos:line="196" pos:column="71"/></name><argument_list pos:line="196" pos:column="71">(<argument><expr><literal type="number" pos:line="196" pos:column="72">1<pos:position pos:line="196" pos:column="73"/></literal></expr></argument>, <argument><expr><sizeof pos:line="196" pos:column="75">sizeof<argument_list pos:line="196" pos:column="81">(<argument><expr pos:line="196" pos:column="82">struct <name pos:line="196" pos:column="89">wccp2_router_list_t<pos:position pos:line="196" pos:column="108"/></name></expr></argument>)<pos:position pos:line="196" pos:column="109"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="196" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="111"/></expr_stmt>

                <comment type="block" pos:line="198" pos:column="17">/* update the pointer */</comment>
                <expr_stmt><expr><name pos:line="199" pos:column="17">router_list_ptr<pos:position pos:line="199" pos:column="32"/></name> <operator pos:line="199" pos:column="33">=<pos:position pos:line="199" pos:column="34"/></operator> <name><name pos:line="199" pos:column="35">router_list_ptr<pos:position pos:line="199" pos:column="50"/></name><operator pos:line="199" pos:column="50">-&gt;<pos:position pos:line="199" pos:column="55"/></operator><name pos:line="199" pos:column="52">next<pos:position pos:line="199" pos:column="56"/></name></name></expr>;<pos:position pos:line="199" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="200" pos:column="17">router_list_ptr<pos:position pos:line="200" pos:column="32"/></name><operator pos:line="200" pos:column="32">-&gt;<pos:position pos:line="200" pos:column="37"/></operator><name pos:line="200" pos:column="34">next<pos:position pos:line="200" pos:column="38"/></name></name> <operator pos:line="200" pos:column="39">=<pos:position pos:line="200" pos:column="40"/></operator> <name pos:line="200" pos:column="41">NULL<pos:position pos:line="200" pos:column="45"/></name></expr>;<pos:position pos:line="200" pos:column="46"/></expr_stmt>

                <comment type="block" pos:line="202" pos:column="17">/* no need to copy memory - we've just set the values directly in the packet above */</comment>

                <expr_stmt><expr><name pos:line="204" pos:column="17">ptr<pos:position pos:line="204" pos:column="20"/></name> <operator pos:line="204" pos:column="21">+=<pos:position pos:line="204" pos:column="23"/></operator> <sizeof pos:line="204" pos:column="24">sizeof<argument_list pos:line="204" pos:column="30">(<argument><expr pos:line="204" pos:column="31">struct <name pos:line="204" pos:column="38">wccp2_router_id_element_t<pos:position pos:line="204" pos:column="63"/></name></expr></argument>)<pos:position pos:line="204" pos:column="64"/></argument_list></sizeof></expr>;<pos:position pos:line="204" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="205" pos:column="14"/></block></then></if>
        }<pos:position pos:line="206" pos:column="10"/></block></for>

        <comment type="block" pos:line="208" pos:column="9">/* Add the number of caches (0) */</comment>
        <expr_stmt><expr><name><name pos:line="209" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="209" pos:column="31"/></name><operator pos:line="209" pos:column="31">.<pos:position pos:line="209" pos:column="32"/></operator><name pos:line="209" pos:column="32">length<pos:position pos:line="209" pos:column="38"/></name></name> <operator pos:line="209" pos:column="39">+=<pos:position pos:line="209" pos:column="41"/></operator> <sizeof pos:line="209" pos:column="42">sizeof<argument_list pos:line="209" pos:column="48">(<argument><expr><name><name pos:line="209" pos:column="49">wccp2_cache_view_info<pos:position pos:line="209" pos:column="70"/></name><operator pos:line="209" pos:column="70">.<pos:position pos:line="209" pos:column="71"/></operator><name pos:line="209" pos:column="71">num_caches<pos:position pos:line="209" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="82"/></argument_list></sizeof></expr>;<pos:position pos:line="209" pos:column="83"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="211" pos:column="9">assert<pos:position pos:line="211" pos:column="15"/></name><argument_list pos:line="211" pos:column="15">(<argument><expr><name><name pos:line="211" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="211" pos:column="38"/></name><operator pos:line="211" pos:column="38">.<pos:position pos:line="211" pos:column="39"/></operator><name pos:line="211" pos:column="39">length<pos:position pos:line="211" pos:column="45"/></name></name> <operator pos:line="211" pos:column="46">&lt;=<pos:position pos:line="211" pos:column="51"/></operator> <name pos:line="211" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="211" pos:column="67"/></name></expr></argument>)<pos:position pos:line="211" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="213" pos:column="9">wccp2_cache_view_info<pos:position pos:line="213" pos:column="30"/></name><operator pos:line="213" pos:column="30">.<pos:position pos:line="213" pos:column="31"/></operator><name pos:line="213" pos:column="31">num_caches<pos:position pos:line="213" pos:column="41"/></name></name> <operator pos:line="213" pos:column="42">=<pos:position pos:line="213" pos:column="43"/></operator> <call><name pos:line="213" pos:column="44">htonl<pos:position pos:line="213" pos:column="49"/></name><argument_list pos:line="213" pos:column="49">(<argument><expr><literal type="number" pos:line="213" pos:column="50">0<pos:position pos:line="213" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="53"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="215" pos:column="9">memcpy<pos:position pos:line="215" pos:column="15"/></name><argument_list pos:line="215" pos:column="15">(<argument><expr><name pos:line="215" pos:column="16">ptr<pos:position pos:line="215" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="21">&amp;<pos:position pos:line="215" pos:column="26"/></operator><name><name pos:line="215" pos:column="22">wccp2_cache_view_info<pos:position pos:line="215" pos:column="43"/></name><operator pos:line="215" pos:column="43">.<pos:position pos:line="215" pos:column="44"/></operator><name pos:line="215" pos:column="44">num_caches<pos:position pos:line="215" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="215" pos:column="56">sizeof<argument_list pos:line="215" pos:column="62">(<argument><expr><name><name pos:line="215" pos:column="63">wccp2_cache_view_info<pos:position pos:line="215" pos:column="84"/></name><operator pos:line="215" pos:column="84">.<pos:position pos:line="215" pos:column="85"/></operator><name pos:line="215" pos:column="85">num_caches<pos:position pos:line="215" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="96"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="215" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="98"/></expr_stmt>

        <expr_stmt><expr><name pos:line="217" pos:column="9">ptr<pos:position pos:line="217" pos:column="12"/></name> <operator pos:line="217" pos:column="13">+=<pos:position pos:line="217" pos:column="15"/></operator> <sizeof pos:line="217" pos:column="16">sizeof<argument_list pos:line="217" pos:column="22">(<argument><expr><name><name pos:line="217" pos:column="23">wccp2_cache_view_info<pos:position pos:line="217" pos:column="44"/></name><operator pos:line="217" pos:column="44">.<pos:position pos:line="217" pos:column="45"/></operator><name pos:line="217" pos:column="45">num_caches<pos:position pos:line="217" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="217" pos:column="57"/></expr_stmt>

        <comment type="block" pos:line="219" pos:column="9">/* Add the extra capability header */</comment>
        <expr_stmt><expr><name><name pos:line="220" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="220" pos:column="31"/></name><operator pos:line="220" pos:column="31">.<pos:position pos:line="220" pos:column="32"/></operator><name pos:line="220" pos:column="32">length<pos:position pos:line="220" pos:column="38"/></name></name> <operator pos:line="220" pos:column="39">+=<pos:position pos:line="220" pos:column="41"/></operator> <sizeof pos:line="220" pos:column="42">sizeof<argument_list pos:line="220" pos:column="48">(<argument><expr><name pos:line="220" pos:column="49">wccp2_capability_info_header<pos:position pos:line="220" pos:column="77"/></name></expr></argument>)<pos:position pos:line="220" pos:column="78"/></argument_list></sizeof></expr>;<pos:position pos:line="220" pos:column="79"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="222" pos:column="9">assert<pos:position pos:line="222" pos:column="15"/></name><argument_list pos:line="222" pos:column="15">(<argument><expr><name><name pos:line="222" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="222" pos:column="38"/></name><operator pos:line="222" pos:column="38">.<pos:position pos:line="222" pos:column="39"/></operator><name pos:line="222" pos:column="39">length<pos:position pos:line="222" pos:column="45"/></name></name> <operator pos:line="222" pos:column="46">&lt;=<pos:position pos:line="222" pos:column="51"/></operator> <name pos:line="222" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="222" pos:column="67"/></name></expr></argument>)<pos:position pos:line="222" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="224" pos:column="9">wccp2_capability_info_header<pos:position pos:line="224" pos:column="37"/></name><operator pos:line="224" pos:column="37">.<pos:position pos:line="224" pos:column="38"/></operator><name pos:line="224" pos:column="38">capability_info_type<pos:position pos:line="224" pos:column="58"/></name></name> <operator pos:line="224" pos:column="59">=<pos:position pos:line="224" pos:column="60"/></operator> <call><name pos:line="224" pos:column="61">htons<pos:position pos:line="224" pos:column="66"/></name><argument_list pos:line="224" pos:column="66">(<argument><expr><name pos:line="224" pos:column="67">WCCP2_CAPABILITY_INFO<pos:position pos:line="224" pos:column="88"/></name></expr></argument>)<pos:position pos:line="224" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="90"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="226" pos:column="9">wccp2_capability_info_header<pos:position pos:line="226" pos:column="37"/></name><operator pos:line="226" pos:column="37">.<pos:position pos:line="226" pos:column="38"/></operator><name pos:line="226" pos:column="38">capability_info_length<pos:position pos:line="226" pos:column="60"/></name></name> <operator pos:line="226" pos:column="61">=<pos:position pos:line="226" pos:column="62"/></operator> <call><name pos:line="226" pos:column="63">htons<pos:position pos:line="226" pos:column="68"/></name><argument_list pos:line="226" pos:column="68">(<argument><expr><literal type="number" pos:line="226" pos:column="69">3<pos:position pos:line="226" pos:column="70"/></literal> <operator pos:line="226" pos:column="71">*<pos:position pos:line="226" pos:column="72"/></operator> <sizeof pos:line="226" pos:column="73">sizeof<argument_list pos:line="226" pos:column="79">(<argument><expr><name pos:line="226" pos:column="80">wccp2_capability_element<pos:position pos:line="226" pos:column="104"/></name></expr></argument>)<pos:position pos:line="226" pos:column="105"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="226" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="107"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="228" pos:column="9">memcpy<pos:position pos:line="228" pos:column="15"/></name><argument_list pos:line="228" pos:column="15">(<argument><expr><name pos:line="228" pos:column="16">ptr<pos:position pos:line="228" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="228" pos:column="21">&amp;<pos:position pos:line="228" pos:column="26"/></operator><name pos:line="228" pos:column="22">wccp2_capability_info_header<pos:position pos:line="228" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="228" pos:column="52">sizeof<argument_list pos:line="228" pos:column="58">(<argument><expr><name pos:line="228" pos:column="59">wccp2_capability_info_header<pos:position pos:line="228" pos:column="87"/></name></expr></argument>)<pos:position pos:line="228" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="228" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="90"/></expr_stmt>

        <expr_stmt><expr><name pos:line="230" pos:column="9">ptr<pos:position pos:line="230" pos:column="12"/></name> <operator pos:line="230" pos:column="13">+=<pos:position pos:line="230" pos:column="15"/></operator> <sizeof pos:line="230" pos:column="16">sizeof<argument_list pos:line="230" pos:column="22">(<argument><expr><name pos:line="230" pos:column="23">wccp2_capability_info_header<pos:position pos:line="230" pos:column="51"/></name></expr></argument>)<pos:position pos:line="230" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="230" pos:column="53"/></expr_stmt>

        <comment type="block" pos:line="232" pos:column="9">/* Add the forwarding method */</comment>
        <expr_stmt><expr><name><name pos:line="233" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="233" pos:column="31"/></name><operator pos:line="233" pos:column="31">.<pos:position pos:line="233" pos:column="32"/></operator><name pos:line="233" pos:column="32">length<pos:position pos:line="233" pos:column="38"/></name></name> <operator pos:line="233" pos:column="39">+=<pos:position pos:line="233" pos:column="41"/></operator> <sizeof pos:line="233" pos:column="42">sizeof<argument_list pos:line="233" pos:column="48">(<argument><expr><name pos:line="233" pos:column="49">wccp2_capability_element<pos:position pos:line="233" pos:column="73"/></name></expr></argument>)<pos:position pos:line="233" pos:column="74"/></argument_list></sizeof></expr>;<pos:position pos:line="233" pos:column="75"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="235" pos:column="9">assert<pos:position pos:line="235" pos:column="15"/></name><argument_list pos:line="235" pos:column="15">(<argument><expr><name><name pos:line="235" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="235" pos:column="38"/></name><operator pos:line="235" pos:column="38">.<pos:position pos:line="235" pos:column="39"/></operator><name pos:line="235" pos:column="39">length<pos:position pos:line="235" pos:column="45"/></name></name> <operator pos:line="235" pos:column="46">&lt;=<pos:position pos:line="235" pos:column="51"/></operator> <name pos:line="235" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="235" pos:column="67"/></name></expr></argument>)<pos:position pos:line="235" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="237" pos:column="9">wccp2_capability_element<pos:position pos:line="237" pos:column="33"/></name><operator pos:line="237" pos:column="33">.<pos:position pos:line="237" pos:column="34"/></operator><name pos:line="237" pos:column="34">capability_type<pos:position pos:line="237" pos:column="49"/></name></name> <operator pos:line="237" pos:column="50">=<pos:position pos:line="237" pos:column="51"/></operator> <call><name pos:line="237" pos:column="52">htons<pos:position pos:line="237" pos:column="57"/></name><argument_list pos:line="237" pos:column="57">(<argument><expr><name pos:line="237" pos:column="58">WCCP2_CAPABILITY_FORWARDING_METHOD<pos:position pos:line="237" pos:column="92"/></name></expr></argument>)<pos:position pos:line="237" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="94"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="239" pos:column="9">wccp2_capability_element<pos:position pos:line="239" pos:column="33"/></name><operator pos:line="239" pos:column="33">.<pos:position pos:line="239" pos:column="34"/></operator><name pos:line="239" pos:column="34">capability_length<pos:position pos:line="239" pos:column="51"/></name></name> <operator pos:line="239" pos:column="52">=<pos:position pos:line="239" pos:column="53"/></operator> <call><name pos:line="239" pos:column="54">htons<pos:position pos:line="239" pos:column="59"/></name><argument_list pos:line="239" pos:column="59">(<argument><expr><sizeof pos:line="239" pos:column="60">sizeof<argument_list pos:line="239" pos:column="66">(<argument><expr><name><name pos:line="239" pos:column="67">wccp2_capability_element<pos:position pos:line="239" pos:column="91"/></name><operator pos:line="239" pos:column="91">.<pos:position pos:line="239" pos:column="92"/></operator><name pos:line="239" pos:column="92">capability_value<pos:position pos:line="239" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="239" pos:column="109"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="239" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="111"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="241" pos:column="9">wccp2_capability_element<pos:position pos:line="241" pos:column="33"/></name><operator pos:line="241" pos:column="33">.<pos:position pos:line="241" pos:column="34"/></operator><name pos:line="241" pos:column="34">capability_value<pos:position pos:line="241" pos:column="50"/></name></name> <operator pos:line="241" pos:column="51">=<pos:position pos:line="241" pos:column="52"/></operator> <call><name pos:line="241" pos:column="53">htonl<pos:position pos:line="241" pos:column="58"/></name><argument_list pos:line="241" pos:column="58">(<argument><expr><name><name pos:line="241" pos:column="59">Config<pos:position pos:line="241" pos:column="65"/></name><operator pos:line="241" pos:column="65">.<pos:position pos:line="241" pos:column="66"/></operator><name pos:line="241" pos:column="66">Wccp2<pos:position pos:line="241" pos:column="71"/></name><operator pos:line="241" pos:column="71">.<pos:position pos:line="241" pos:column="72"/></operator><name pos:line="241" pos:column="72">forwarding_method<pos:position pos:line="241" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="91"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="243" pos:column="9">memcpy<pos:position pos:line="243" pos:column="15"/></name><argument_list pos:line="243" pos:column="15">(<argument><expr><name pos:line="243" pos:column="16">ptr<pos:position pos:line="243" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="21">&amp;<pos:position pos:line="243" pos:column="26"/></operator><name pos:line="243" pos:column="22">wccp2_capability_element<pos:position pos:line="243" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="243" pos:column="48">sizeof<argument_list pos:line="243" pos:column="54">(<argument><expr><name pos:line="243" pos:column="55">wccp2_capability_element<pos:position pos:line="243" pos:column="79"/></name></expr></argument>)<pos:position pos:line="243" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="243" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="82"/></expr_stmt>

        <expr_stmt><expr><name pos:line="245" pos:column="9">ptr<pos:position pos:line="245" pos:column="12"/></name> <operator pos:line="245" pos:column="13">+=<pos:position pos:line="245" pos:column="15"/></operator> <sizeof pos:line="245" pos:column="16">sizeof<argument_list pos:line="245" pos:column="22">(<argument><expr><name pos:line="245" pos:column="23">wccp2_capability_element<pos:position pos:line="245" pos:column="47"/></name></expr></argument>)<pos:position pos:line="245" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="245" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="247" pos:column="9">/* Add the assignment method */</comment>
        <expr_stmt><expr><name><name pos:line="248" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="248" pos:column="31"/></name><operator pos:line="248" pos:column="31">.<pos:position pos:line="248" pos:column="32"/></operator><name pos:line="248" pos:column="32">length<pos:position pos:line="248" pos:column="38"/></name></name> <operator pos:line="248" pos:column="39">+=<pos:position pos:line="248" pos:column="41"/></operator> <sizeof pos:line="248" pos:column="42">sizeof<argument_list pos:line="248" pos:column="48">(<argument><expr><name pos:line="248" pos:column="49">wccp2_capability_element<pos:position pos:line="248" pos:column="73"/></name></expr></argument>)<pos:position pos:line="248" pos:column="74"/></argument_list></sizeof></expr>;<pos:position pos:line="248" pos:column="75"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="250" pos:column="9">assert<pos:position pos:line="250" pos:column="15"/></name><argument_list pos:line="250" pos:column="15">(<argument><expr><name><name pos:line="250" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="250" pos:column="38"/></name><operator pos:line="250" pos:column="38">.<pos:position pos:line="250" pos:column="39"/></operator><name pos:line="250" pos:column="39">length<pos:position pos:line="250" pos:column="45"/></name></name> <operator pos:line="250" pos:column="46">&lt;=<pos:position pos:line="250" pos:column="51"/></operator> <name pos:line="250" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="250" pos:column="67"/></name></expr></argument>)<pos:position pos:line="250" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="252" pos:column="9">wccp2_capability_element<pos:position pos:line="252" pos:column="33"/></name><operator pos:line="252" pos:column="33">.<pos:position pos:line="252" pos:column="34"/></operator><name pos:line="252" pos:column="34">capability_type<pos:position pos:line="252" pos:column="49"/></name></name> <operator pos:line="252" pos:column="50">=<pos:position pos:line="252" pos:column="51"/></operator> <call><name pos:line="252" pos:column="52">htons<pos:position pos:line="252" pos:column="57"/></name><argument_list pos:line="252" pos:column="57">(<argument><expr><name pos:line="252" pos:column="58">WCCP2_CAPABILITY_ASSIGNMENT_METHOD<pos:position pos:line="252" pos:column="92"/></name></expr></argument>)<pos:position pos:line="252" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="94"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="254" pos:column="9">wccp2_capability_element<pos:position pos:line="254" pos:column="33"/></name><operator pos:line="254" pos:column="33">.<pos:position pos:line="254" pos:column="34"/></operator><name pos:line="254" pos:column="34">capability_length<pos:position pos:line="254" pos:column="51"/></name></name> <operator pos:line="254" pos:column="52">=<pos:position pos:line="254" pos:column="53"/></operator> <call><name pos:line="254" pos:column="54">htons<pos:position pos:line="254" pos:column="59"/></name><argument_list pos:line="254" pos:column="59">(<argument><expr><sizeof pos:line="254" pos:column="60">sizeof<argument_list pos:line="254" pos:column="66">(<argument><expr><name><name pos:line="254" pos:column="67">wccp2_capability_element<pos:position pos:line="254" pos:column="91"/></name><operator pos:line="254" pos:column="91">.<pos:position pos:line="254" pos:column="92"/></operator><name pos:line="254" pos:column="92">capability_value<pos:position pos:line="254" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="254" pos:column="109"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="254" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="111"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="256" pos:column="9">wccp2_capability_element<pos:position pos:line="256" pos:column="33"/></name><operator pos:line="256" pos:column="33">.<pos:position pos:line="256" pos:column="34"/></operator><name pos:line="256" pos:column="34">capability_value<pos:position pos:line="256" pos:column="50"/></name></name> <operator pos:line="256" pos:column="51">=<pos:position pos:line="256" pos:column="52"/></operator> <call><name pos:line="256" pos:column="53">htonl<pos:position pos:line="256" pos:column="58"/></name><argument_list pos:line="256" pos:column="58">(<argument><expr><name><name pos:line="256" pos:column="59">Config<pos:position pos:line="256" pos:column="65"/></name><operator pos:line="256" pos:column="65">.<pos:position pos:line="256" pos:column="66"/></operator><name pos:line="256" pos:column="66">Wccp2<pos:position pos:line="256" pos:column="71"/></name><operator pos:line="256" pos:column="71">.<pos:position pos:line="256" pos:column="72"/></operator><name pos:line="256" pos:column="72">assignment_method<pos:position pos:line="256" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="256" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="91"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="258" pos:column="9">memcpy<pos:position pos:line="258" pos:column="15"/></name><argument_list pos:line="258" pos:column="15">(<argument><expr><name pos:line="258" pos:column="16">ptr<pos:position pos:line="258" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="258" pos:column="21">&amp;<pos:position pos:line="258" pos:column="26"/></operator><name pos:line="258" pos:column="22">wccp2_capability_element<pos:position pos:line="258" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="258" pos:column="48">sizeof<argument_list pos:line="258" pos:column="54">(<argument><expr><name pos:line="258" pos:column="55">wccp2_capability_element<pos:position pos:line="258" pos:column="79"/></name></expr></argument>)<pos:position pos:line="258" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="258" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="82"/></expr_stmt>

        <expr_stmt><expr><name pos:line="260" pos:column="9">ptr<pos:position pos:line="260" pos:column="12"/></name> <operator pos:line="260" pos:column="13">+=<pos:position pos:line="260" pos:column="15"/></operator> <sizeof pos:line="260" pos:column="16">sizeof<argument_list pos:line="260" pos:column="22">(<argument><expr><name pos:line="260" pos:column="23">wccp2_capability_element<pos:position pos:line="260" pos:column="47"/></name></expr></argument>)<pos:position pos:line="260" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="260" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="262" pos:column="9">/* Add the return method */</comment>
        <expr_stmt><expr><name><name pos:line="263" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="263" pos:column="31"/></name><operator pos:line="263" pos:column="31">.<pos:position pos:line="263" pos:column="32"/></operator><name pos:line="263" pos:column="32">length<pos:position pos:line="263" pos:column="38"/></name></name> <operator pos:line="263" pos:column="39">+=<pos:position pos:line="263" pos:column="41"/></operator> <sizeof pos:line="263" pos:column="42">sizeof<argument_list pos:line="263" pos:column="48">(<argument><expr><name pos:line="263" pos:column="49">wccp2_capability_element<pos:position pos:line="263" pos:column="73"/></name></expr></argument>)<pos:position pos:line="263" pos:column="74"/></argument_list></sizeof></expr>;<pos:position pos:line="263" pos:column="75"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="265" pos:column="9">assert<pos:position pos:line="265" pos:column="15"/></name><argument_list pos:line="265" pos:column="15">(<argument><expr><name><name pos:line="265" pos:column="16">wccp2_here_i_am_header<pos:position pos:line="265" pos:column="38"/></name><operator pos:line="265" pos:column="38">.<pos:position pos:line="265" pos:column="39"/></operator><name pos:line="265" pos:column="39">length<pos:position pos:line="265" pos:column="45"/></name></name> <operator pos:line="265" pos:column="46">&lt;=<pos:position pos:line="265" pos:column="51"/></operator> <name pos:line="265" pos:column="49">WCCP_RESPONSE_SIZE<pos:position pos:line="265" pos:column="67"/></name></expr></argument>)<pos:position pos:line="265" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="69"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="267" pos:column="9">wccp2_capability_element<pos:position pos:line="267" pos:column="33"/></name><operator pos:line="267" pos:column="33">.<pos:position pos:line="267" pos:column="34"/></operator><name pos:line="267" pos:column="34">capability_type<pos:position pos:line="267" pos:column="49"/></name></name> <operator pos:line="267" pos:column="50">=<pos:position pos:line="267" pos:column="51"/></operator> <call><name pos:line="267" pos:column="52">htons<pos:position pos:line="267" pos:column="57"/></name><argument_list pos:line="267" pos:column="57">(<argument><expr><name pos:line="267" pos:column="58">WCCP2_CAPABILITY_RETURN_METHOD<pos:position pos:line="267" pos:column="88"/></name></expr></argument>)<pos:position pos:line="267" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="90"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="269" pos:column="9">wccp2_capability_element<pos:position pos:line="269" pos:column="33"/></name><operator pos:line="269" pos:column="33">.<pos:position pos:line="269" pos:column="34"/></operator><name pos:line="269" pos:column="34">capability_length<pos:position pos:line="269" pos:column="51"/></name></name> <operator pos:line="269" pos:column="52">=<pos:position pos:line="269" pos:column="53"/></operator> <call><name pos:line="269" pos:column="54">htons<pos:position pos:line="269" pos:column="59"/></name><argument_list pos:line="269" pos:column="59">(<argument><expr><sizeof pos:line="269" pos:column="60">sizeof<argument_list pos:line="269" pos:column="66">(<argument><expr><name><name pos:line="269" pos:column="67">wccp2_capability_element<pos:position pos:line="269" pos:column="91"/></name><operator pos:line="269" pos:column="91">.<pos:position pos:line="269" pos:column="92"/></operator><name pos:line="269" pos:column="92">capability_value<pos:position pos:line="269" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="269" pos:column="109"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="269" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="111"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="271" pos:column="9">wccp2_capability_element<pos:position pos:line="271" pos:column="33"/></name><operator pos:line="271" pos:column="33">.<pos:position pos:line="271" pos:column="34"/></operator><name pos:line="271" pos:column="34">capability_value<pos:position pos:line="271" pos:column="50"/></name></name> <operator pos:line="271" pos:column="51">=<pos:position pos:line="271" pos:column="52"/></operator> <call><name pos:line="271" pos:column="53">htonl<pos:position pos:line="271" pos:column="58"/></name><argument_list pos:line="271" pos:column="58">(<argument><expr><name><name pos:line="271" pos:column="59">Config<pos:position pos:line="271" pos:column="65"/></name><operator pos:line="271" pos:column="65">.<pos:position pos:line="271" pos:column="66"/></operator><name pos:line="271" pos:column="66">Wccp2<pos:position pos:line="271" pos:column="71"/></name><operator pos:line="271" pos:column="71">.<pos:position pos:line="271" pos:column="72"/></operator><name pos:line="271" pos:column="72">return_method<pos:position pos:line="271" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="87"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="273" pos:column="9">memcpy<pos:position pos:line="273" pos:column="15"/></name><argument_list pos:line="273" pos:column="15">(<argument><expr><name pos:line="273" pos:column="16">ptr<pos:position pos:line="273" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="273" pos:column="21">&amp;<pos:position pos:line="273" pos:column="26"/></operator><name pos:line="273" pos:column="22">wccp2_capability_element<pos:position pos:line="273" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="273" pos:column="48">sizeof<argument_list pos:line="273" pos:column="54">(<argument><expr><name pos:line="273" pos:column="55">wccp2_capability_element<pos:position pos:line="273" pos:column="79"/></name></expr></argument>)<pos:position pos:line="273" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="273" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="82"/></expr_stmt>

        <expr_stmt><expr><name pos:line="275" pos:column="9">ptr<pos:position pos:line="275" pos:column="12"/></name> <operator pos:line="275" pos:column="13">+=<pos:position pos:line="275" pos:column="15"/></operator> <sizeof pos:line="275" pos:column="16">sizeof<argument_list pos:line="275" pos:column="22">(<argument><expr><name pos:line="275" pos:column="23">wccp2_capability_element<pos:position pos:line="275" pos:column="47"/></name></expr></argument>)<pos:position pos:line="275" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="275" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="277" pos:column="9">/* Finally, fix the total length to network order, and copy to the appropriate memory blob */</comment>
        <expr_stmt><expr><name><name pos:line="278" pos:column="9">wccp2_here_i_am_header<pos:position pos:line="278" pos:column="31"/></name><operator pos:line="278" pos:column="31">.<pos:position pos:line="278" pos:column="32"/></operator><name pos:line="278" pos:column="32">length<pos:position pos:line="278" pos:column="38"/></name></name> <operator pos:line="278" pos:column="39">=<pos:position pos:line="278" pos:column="40"/></operator> <call><name pos:line="278" pos:column="41">htons<pos:position pos:line="278" pos:column="46"/></name><argument_list pos:line="278" pos:column="46">(<argument><expr><name><name pos:line="278" pos:column="47">wccp2_here_i_am_header<pos:position pos:line="278" pos:column="69"/></name><operator pos:line="278" pos:column="69">.<pos:position pos:line="278" pos:column="70"/></operator><name pos:line="278" pos:column="70">length<pos:position pos:line="278" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="78"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="280" pos:column="9">memcpy<pos:position pos:line="280" pos:column="15"/></name><argument_list pos:line="280" pos:column="15">(<argument><expr><operator pos:line="280" pos:column="16">&amp;<pos:position pos:line="280" pos:column="21"/></operator><name><name pos:line="280" pos:column="17">service_list_ptr<pos:position pos:line="280" pos:column="33"/></name><operator pos:line="280" pos:column="33">-&gt;<pos:position pos:line="280" pos:column="38"/></operator><name pos:line="280" pos:column="35">wccp_packet<pos:position pos:line="280" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="280" pos:column="48">&amp;<pos:position pos:line="280" pos:column="53"/></operator><name pos:line="280" pos:column="49">wccp2_here_i_am_header<pos:position pos:line="280" pos:column="71"/></name></expr></argument>, <argument><expr><sizeof pos:line="280" pos:column="73">sizeof<argument_list pos:line="280" pos:column="79">(<argument><expr><name pos:line="280" pos:column="80">wccp2_here_i_am_header<pos:position pos:line="280" pos:column="102"/></name></expr></argument>)<pos:position pos:line="280" pos:column="103"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="280" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="105"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="282" pos:column="9">service_list_ptr<pos:position pos:line="282" pos:column="25"/></name><operator pos:line="282" pos:column="25">-&gt;<pos:position pos:line="282" pos:column="30"/></operator><name pos:line="282" pos:column="27">wccp_packet_size<pos:position pos:line="282" pos:column="43"/></name></name> <operator pos:line="282" pos:column="44">=<pos:position pos:line="282" pos:column="45"/></operator> <call><name pos:line="282" pos:column="46">ntohs<pos:position pos:line="282" pos:column="51"/></name><argument_list pos:line="282" pos:column="51">(<argument><expr><name><name pos:line="282" pos:column="52">wccp2_here_i_am_header<pos:position pos:line="282" pos:column="74"/></name><operator pos:line="282" pos:column="74">.<pos:position pos:line="282" pos:column="75"/></operator><name pos:line="282" pos:column="75">length<pos:position pos:line="282" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="82"/></argument_list></call> <operator pos:line="282" pos:column="83">+<pos:position pos:line="282" pos:column="84"/></operator> <sizeof pos:line="282" pos:column="85">sizeof<argument_list pos:line="282" pos:column="91">(<argument><expr><name pos:line="282" pos:column="92">wccp2_here_i_am_header<pos:position pos:line="282" pos:column="114"/></name></expr></argument>)<pos:position pos:line="282" pos:column="115"/></argument_list></sizeof></expr>;<pos:position pos:line="282" pos:column="116"/></expr_stmt>

        <comment type="block" pos:line="284" pos:column="9">/* Add the event if everything initialised correctly */</comment>
        <expr_stmt><expr><call><name pos:line="285" pos:column="9">debugs<pos:position pos:line="285" pos:column="15"/></name><argument_list pos:line="285" pos:column="15">(<argument><expr><literal type="number" pos:line="285" pos:column="16">80<pos:position pos:line="285" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="285" pos:column="19">3<pos:position pos:line="285" pos:column="20"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="285" pos:column="21">"wccp2Init: scheduled 'HERE_I_AM' message to "<pos:position pos:line="285" pos:column="67"/></literal> <operator pos:line="285" pos:column="68">&lt;&lt;<pos:position pos:line="285" pos:column="76"/></operator> <name pos:line="285" pos:column="71">wccp2_numrouters<pos:position pos:line="285" pos:column="87"/></name> <operator pos:line="285" pos:column="88">&lt;&lt;<pos:position pos:line="285" pos:column="96"/></operator> <literal type="string" pos:line="285" pos:column="91">"routers."<pos:position pos:line="285" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="103"/></expr_stmt>
        <if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">wccp2_numrouters<pos:position pos:line="286" pos:column="29"/></name></expr>)<pos:position pos:line="286" pos:column="30"/></condition><then pos:line="286" pos:column="30"> <block pos:line="286" pos:column="31">{
            <if pos:line="287" pos:column="13">if <condition pos:line="287" pos:column="16">(<expr><operator pos:line="287" pos:column="17">!<pos:position pos:line="287" pos:column="18"/></operator><call><name pos:line="287" pos:column="18">eventFind<pos:position pos:line="287" pos:column="27"/></name><argument_list pos:line="287" pos:column="27">(<argument><expr><name pos:line="287" pos:column="28">wccp2HereIam<pos:position pos:line="287" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="42">NULL<pos:position pos:line="287" pos:column="46"/></name></expr></argument>)<pos:position pos:line="287" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="287" pos:column="48"/></condition><then pos:line="287" pos:column="48"> <block pos:line="287" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="288" pos:column="17">eventAdd<pos:position pos:line="288" pos:column="25"/></name><argument_list pos:line="288" pos:column="25">(<argument><expr><literal type="string" pos:line="288" pos:column="26">"wccp2HereIam"<pos:position pos:line="288" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="288" pos:column="42">wccp2HereIam<pos:position pos:line="288" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="56">NULL<pos:position pos:line="288" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="288" pos:column="62">1<pos:position pos:line="288" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="288" pos:column="65">1<pos:position pos:line="288" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="289" pos:column="14"/></block></then> <else pos:line="289" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="290" pos:column="17">debugs<pos:position pos:line="290" pos:column="23"/></name><argument_list pos:line="290" pos:column="23">(<argument><expr><literal type="number" pos:line="290" pos:column="24">80<pos:position pos:line="290" pos:column="26"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="290" pos:column="27">3<pos:position pos:line="290" pos:column="28"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="290" pos:column="29">"wccp2Init: skip duplicate 'HERE_I_AM'."<pos:position pos:line="290" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="71"/></expr_stmt></block></else></if>
        }<pos:position pos:line="291" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="293" pos:column="9">service_list_ptr<pos:position pos:line="293" pos:column="25"/></name> <operator pos:line="293" pos:column="26">=<pos:position pos:line="293" pos:column="27"/></operator> <name><name pos:line="293" pos:column="28">service_list_ptr<pos:position pos:line="293" pos:column="44"/></name><operator pos:line="293" pos:column="44">-&gt;<pos:position pos:line="293" pos:column="49"/></operator><name pos:line="293" pos:column="46">next<pos:position pos:line="293" pos:column="50"/></name></name></expr>;<pos:position pos:line="293" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="294" pos:column="6"/></block></while>
}<pos:position pos:line="295" pos:column="2"/></block></function></unit>

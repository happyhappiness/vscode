<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2056_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CacheDigest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">add<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">cache_key<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">key<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">key<pos:position pos:line="4" pos:column="15"/></name></expr></argument>)<pos:position pos:line="4" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* hash */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">cacheDigestHashKey<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">this<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">key<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* turn on corresponding bits */</comment>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">CD_FAST_ADD<pos:position pos:line="8" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">CBIT_SET<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">mask<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="20">hashed_keys<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">CBIT_SET<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">mask<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="20">hashed_keys<pos:position pos:line="11" pos:column="31"/></name><index pos:line="11" pos:column="31">[<expr><literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">CBIT_SET<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">mask<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="20">hashed_keys<pos:position pos:line="12" pos:column="31"/></name><index pos:line="12" pos:column="31">[<expr><literal type="number" pos:line="12" pos:column="32">2<pos:position pos:line="12" pos:column="33"/></literal></expr>]<pos:position pos:line="12" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">CBIT_SET<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">mask<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="20">hashed_keys<pos:position pos:line="13" pos:column="31"/></name><index pos:line="13" pos:column="31">[<expr><literal type="number" pos:line="13" pos:column="32">3<pos:position pos:line="13" pos:column="33"/></literal></expr>]<pos:position pos:line="13" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>

    <block pos:line="16" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">on_xition_cnt<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">CBIT_TEST<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">mask<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="30">hashed_keys<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><literal type="number" pos:line="19" pos:column="42">0<pos:position pos:line="19" pos:column="43"/></literal></expr>]<pos:position pos:line="19" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46"> <block pos:line="19" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">CBIT_SET<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">mask<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="28">hashed_keys<pos:position pos:line="20" pos:column="39"/></name><index pos:line="20" pos:column="39">[<expr><literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr>]<pos:position pos:line="20" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">on_xition_cnt<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">CBIT_TEST<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">mask<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="30">hashed_keys<pos:position pos:line="24" pos:column="41"/></name><index pos:line="24" pos:column="41">[<expr><literal type="number" pos:line="24" pos:column="42">1<pos:position pos:line="24" pos:column="43"/></literal></expr>]<pos:position pos:line="24" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46"> <block pos:line="24" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">CBIT_SET<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">mask<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="28">hashed_keys<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><literal type="number" pos:line="25" pos:column="40">1<pos:position pos:line="25" pos:column="41"/></literal></expr>]<pos:position pos:line="25" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="26" pos:column="13">++<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">on_xition_cnt<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><call><name pos:line="29" pos:column="14">CBIT_TEST<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">mask<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="30">hashed_keys<pos:position pos:line="29" pos:column="41"/></name><index pos:line="29" pos:column="41">[<expr><literal type="number" pos:line="29" pos:column="42">2<pos:position pos:line="29" pos:column="43"/></literal></expr>]<pos:position pos:line="29" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46"> <block pos:line="29" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">CBIT_SET<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">mask<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="28">hashed_keys<pos:position pos:line="30" pos:column="39"/></name><index pos:line="30" pos:column="39">[<expr><literal type="number" pos:line="30" pos:column="40">2<pos:position pos:line="30" pos:column="41"/></literal></expr>]<pos:position pos:line="30" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="31" pos:column="13">++<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">on_xition_cnt<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">CBIT_TEST<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">mask<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="30">hashed_keys<pos:position pos:line="34" pos:column="41"/></name><index pos:line="34" pos:column="41">[<expr><literal type="number" pos:line="34" pos:column="42">3<pos:position pos:line="34" pos:column="43"/></literal></expr>]<pos:position pos:line="34" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">CBIT_SET<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">mask<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="28">hashed_keys<pos:position pos:line="35" pos:column="39"/></name><index pos:line="35" pos:column="39">[<expr><literal type="number" pos:line="35" pos:column="40">3<pos:position pos:line="35" pos:column="41"/></literal></expr>]<pos:position pos:line="35" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="36" pos:column="13">++<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">on_xition_cnt<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="39" pos:column="9">statCounter<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">.<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">cd<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">on_xition_count<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">.<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="40">count<pos:position pos:line="39" pos:column="45"/></name></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">on_xition_cnt<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><operator pos:line="42" pos:column="5">++<pos:position pos:line="42" pos:column="7"/></operator><name pos:line="42" pos:column="7">count<pos:position pos:line="42" pos:column="12"/></name></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

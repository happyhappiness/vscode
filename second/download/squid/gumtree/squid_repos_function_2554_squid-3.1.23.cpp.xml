<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2554_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ftpSendPassive<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">FtpStateData<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">ftpState<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IpAddress<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">addr<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">addrinfo<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">AI<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="7" pos:column="5">/** Checks the server control channel is still available before running. */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">ftpState<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">||<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">!<pos:position pos:line="8" pos:column="23"/></operator><call><name><name pos:line="8" pos:column="23">ftpState<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">haveControlChannel<pos:position pos:line="8" pos:column="51"/></name></name><argument_list pos:line="8" pos:column="51">(<argument><expr><literal type="string" pos:line="8" pos:column="52">"ftpSendPassive"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">9<pos:position pos:line="11" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="15">3<pos:position pos:line="11" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="18">HERE<pos:position pos:line="11" pos:column="22"/></name></expr></argument>)<pos:position pos:line="11" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="13" pos:column="5">/** \par
      * Checks for EPSV ALL special conditions:
      * If enabled to be sent, squid MUST NOT request any other connect methods.
      * If 'ALL' is sent and fails the entire FTP Session fails.
      * NP: By my reading exact EPSV protocols maybe attempted, but only EPSV method. */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">Config<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">Ftp<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">epsv_all<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">&amp;&amp;<pos:position pos:line="18" pos:column="39"/></operator> <name><name pos:line="18" pos:column="32">ftpState<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">flags<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">.<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">epsv_all_sent<pos:position pos:line="18" pos:column="61"/></name></name> <operator pos:line="18" pos:column="62">&amp;&amp;<pos:position pos:line="18" pos:column="72"/></operator> <name><name pos:line="18" pos:column="65">ftpState<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">-&gt;<pos:position pos:line="18" pos:column="78"/></operator><name pos:line="18" pos:column="75">state<pos:position pos:line="18" pos:column="80"/></name></name> <operator pos:line="18" pos:column="81">==<pos:position pos:line="18" pos:column="83"/></operator> <name pos:line="18" pos:column="84">SENT_EPSV_1<pos:position pos:line="18" pos:column="95"/></name></expr> )<pos:position pos:line="18" pos:column="97"/></condition><then pos:line="18" pos:column="97"> <block pos:line="18" pos:column="98">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">9<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="19">DBG_IMPORTANT<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"FTP does not allow PASV method after 'EPSV ALL' has been sent."<pos:position pos:line="19" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ftpFail<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">ftpState<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="24" pos:column="5">/** \par
      * Checks for 'HEAD' method request and passes off for special handling by FtpStateData::processHeadResponse(). */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">ftpState<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">request<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">method<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">==<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">METHOD_HEAD<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">&amp;&amp;<pos:position pos:line="26" pos:column="60"/></operator> <operator pos:line="26" pos:column="53">(<pos:position pos:line="26" pos:column="54"/></operator><name><name pos:line="26" pos:column="54">ftpState<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">-&gt;<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="64">flags<pos:position pos:line="26" pos:column="69"/></name><operator pos:line="26" pos:column="69">.<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="70">isdir<pos:position pos:line="26" pos:column="75"/></name></name> <operator pos:line="26" pos:column="76">||<pos:position pos:line="26" pos:column="78"/></operator> <name><name pos:line="26" pos:column="79">ftpState<pos:position pos:line="26" pos:column="87"/></name><operator pos:line="26" pos:column="87">-&gt;<pos:position pos:line="26" pos:column="92"/></operator><name pos:line="26" pos:column="89">theSize<pos:position pos:line="26" pos:column="96"/></name></name> <operator pos:line="26" pos:column="97">!=<pos:position pos:line="26" pos:column="99"/></operator> <operator pos:line="26" pos:column="100">-<pos:position pos:line="26" pos:column="101"/></operator><literal type="number" pos:line="26" pos:column="101">1<pos:position pos:line="26" pos:column="102"/></literal><operator pos:line="26" pos:column="102">)<pos:position pos:line="26" pos:column="103"/></operator></expr>)<pos:position pos:line="26" pos:column="104"/></condition><then pos:line="26" pos:column="104"> <block pos:line="26" pos:column="105">{
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">ftpState<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">processHeadResponse<pos:position pos:line="27" pos:column="38"/></name></name><argument_list pos:line="27" pos:column="38">()<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt> <comment type="line" pos:line="27" pos:column="42">// may call serverComplete</comment>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="line" format="doxygen" pos:line="31" pos:column="5">/// Closes any old FTP-Data connection which may exist. */</comment>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">ftpState<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">data<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">close<pos:position pos:line="32" pos:column="25"/></name></name><argument_list pos:line="32" pos:column="25">()<pos:position pos:line="32" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="34" pos:column="5">/** \par
      * Checks for previous EPSV/PASV failures on this server/session.
      * Diverts to EPRT immediately if they are not working. */</comment>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name><name pos:line="37" pos:column="10">ftpState<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">flags<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">pasv_supported<pos:position pos:line="37" pos:column="40"/></name></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ftpSendEPRT<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">ftpState<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="42" pos:column="5">/** \par
      * Locates the Address of the remote server. */</comment>
    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">addr<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">.<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">InitAddrInfo<pos:position pos:line="44" pos:column="22"/></name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">AI<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">getsockname<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name><name pos:line="46" pos:column="21">ftpState<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">ctrl<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">fd<pos:position pos:line="46" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="40">AI<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">-&gt;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="44">ai_addr<pos:position pos:line="46" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="53">&amp;<pos:position pos:line="46" pos:column="58"/></operator><name><name pos:line="46" pos:column="54">AI<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">-&gt;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="58">ai_addrlen<pos:position pos:line="46" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="70"/></condition><then pos:line="46" pos:column="70"> <block pos:line="46" pos:column="71">{
        <comment type="block" format="doxygen" pos:line="47" pos:column="9">/** If it cannot be located the FTP Session is killed. */</comment>
        <expr_stmt><expr><call><name><name pos:line="48" pos:column="9">addr<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">.<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">FreeAddrInfo<pos:position pos:line="48" pos:column="26"/></name></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">AI<pos:position pos:line="48" pos:column="29"/></name></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">debugs<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="number" pos:line="49" pos:column="16">9<pos:position pos:line="49" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="19">DBG_CRITICAL<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="33">HERE<pos:position pos:line="49" pos:column="37"/></name> <operator pos:line="49" pos:column="38">&lt;&lt;<pos:position pos:line="49" pos:column="46"/></operator> <literal type="string" pos:line="49" pos:column="41">"getsockname("<pos:position pos:line="49" pos:column="55"/></literal> <operator pos:line="49" pos:column="56">&lt;&lt;<pos:position pos:line="49" pos:column="64"/></operator> <name><name pos:line="49" pos:column="59">ftpState<pos:position pos:line="49" pos:column="67"/></name><operator pos:line="49" pos:column="67">-&gt;<pos:position pos:line="49" pos:column="72"/></operator><name pos:line="49" pos:column="69">ctrl<pos:position pos:line="49" pos:column="73"/></name><operator pos:line="49" pos:column="73">.<pos:position pos:line="49" pos:column="74"/></operator><name pos:line="49" pos:column="74">fd<pos:position pos:line="49" pos:column="76"/></name></name> <operator pos:line="49" pos:column="77">&lt;&lt;<pos:position pos:line="49" pos:column="85"/></operator> <literal type="string" pos:line="49" pos:column="80">",'"<pos:position pos:line="49" pos:column="84"/></literal> <operator pos:line="49" pos:column="85">&lt;&lt;<pos:position pos:line="49" pos:column="93"/></operator> <name pos:line="49" pos:column="88">addr<pos:position pos:line="49" pos:column="92"/></name> <operator pos:line="49" pos:column="93">&lt;&lt;<pos:position pos:line="49" pos:column="101"/></operator> <literal type="string" pos:line="49" pos:column="96">"',...): "<pos:position pos:line="49" pos:column="106"/></literal> <operator pos:line="49" pos:column="107">&lt;&lt;<pos:position pos:line="49" pos:column="115"/></operator> <call><name pos:line="49" pos:column="110">xstrerror<pos:position pos:line="49" pos:column="119"/></name><argument_list pos:line="49" pos:column="119">()<pos:position pos:line="49" pos:column="121"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="123"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ftpFail<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">ftpState<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
        <return pos:line="51" pos:column="9">return;<pos:position pos:line="51" pos:column="16"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="54" pos:column="5">addr<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <operator pos:line="54" pos:column="12">*<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">AI<pos:position pos:line="54" pos:column="15"/></name></expr>;<pos:position pos:line="54" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="55" pos:column="5">addr<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">.<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">FreeAddrInfo<pos:position pos:line="55" pos:column="22"/></name></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">AI<pos:position pos:line="55" pos:column="25"/></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="57" pos:column="5">/** \par
      * Send EPSV (ALL,2,1) or PASV on the control channel.
      *
      *  - EPSV ALL  is used if enabled.
      *  - EPSV 2    is used if ALL is disabled and IPv6 is available and ctrl channel is IPv6.
      *  - EPSV 1    is used if EPSV 2 (IPv6) fails or is not available or ctrl channel is IPv4.
      *  - PASV      is used if EPSV 1 fails.
      */</comment>
    <switch pos:line="65" pos:column="5">switch <condition pos:line="65" pos:column="12">(<expr><name><name pos:line="65" pos:column="13">ftpState<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">state<pos:position pos:line="65" pos:column="28"/></name></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition> <block pos:line="65" pos:column="30">{
    <case pos:line="66" pos:column="5">case <expr><name pos:line="66" pos:column="10">SENT_EPSV_ALL<pos:position pos:line="66" pos:column="23"/></name></expr>:<pos:position pos:line="66" pos:column="24"/></case> <comment type="block" pos:line="66" pos:column="25">/* EPSV ALL resulted in a bad response. Try ther EPSV methods. */</comment>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">ftpState<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">flags<pos:position pos:line="67" pos:column="24"/></name><operator pos:line="67" pos:column="24">.<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="25">epsv_all_sent<pos:position pos:line="67" pos:column="38"/></name></name> <operator pos:line="67" pos:column="39">=<pos:position pos:line="67" pos:column="40"/></operator> <literal type="boolean" pos:line="67" pos:column="41">true<pos:position pos:line="67" pos:column="45"/></literal></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name><name pos:line="68" pos:column="13">addr<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">.<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">IsIPv6<pos:position pos:line="68" pos:column="24"/></name></name><argument_list pos:line="68" pos:column="24">()<pos:position pos:line="68" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="27"/></condition><then pos:line="68" pos:column="27"> <block pos:line="68" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">debugs<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><literal type="number" pos:line="69" pos:column="20">9<pos:position pos:line="69" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="23">5<pos:position pos:line="69" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="26">HERE<pos:position pos:line="69" pos:column="30"/></name> <operator pos:line="69" pos:column="31">&lt;&lt;<pos:position pos:line="69" pos:column="39"/></operator> <literal type="string" pos:line="69" pos:column="34">"FTP Channel is IPv6 ("<pos:position pos:line="69" pos:column="57"/></literal> <operator pos:line="69" pos:column="58">&lt;&lt;<pos:position pos:line="69" pos:column="66"/></operator> <name pos:line="69" pos:column="61">addr<pos:position pos:line="69" pos:column="65"/></name> <operator pos:line="69" pos:column="66">&lt;&lt;<pos:position pos:line="69" pos:column="74"/></operator> <literal type="string" pos:line="69" pos:column="69">") attempting EPSV 2 after EPSV ALL has failed."<pos:position pos:line="69" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="119"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">snprintf<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name pos:line="70" pos:column="22">cbuf<pos:position pos:line="70" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="28">1024<pos:position pos:line="70" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="34">"EPSV 2\r\n"<pos:position pos:line="70" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">ftpState<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">state<pos:position pos:line="71" pos:column="28"/></name></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">SENT_EPSV_2<pos:position pos:line="71" pos:column="42"/></name></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
            <break pos:line="72" pos:column="13">break;<pos:position pos:line="72" pos:column="19"/></break>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="74" pos:column="9">// else fall through to skip EPSV 2</comment>

    <case pos:line="76" pos:column="5">case <expr><name pos:line="76" pos:column="10">SENT_EPSV_2<pos:position pos:line="76" pos:column="21"/></name></expr>:<pos:position pos:line="76" pos:column="22"/></case> <comment type="block" pos:line="76" pos:column="23">/* EPSV IPv6 failed. Try EPSV IPv4 */</comment>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name><name pos:line="77" pos:column="13">addr<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">.<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="18">IsIPv4<pos:position pos:line="77" pos:column="24"/></name></name><argument_list pos:line="77" pos:column="24">()<pos:position pos:line="77" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="27"/></condition><then pos:line="77" pos:column="27"> <block pos:line="77" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">debugs<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><literal type="number" pos:line="78" pos:column="20">9<pos:position pos:line="78" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="23">5<pos:position pos:line="78" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="26">HERE<pos:position pos:line="78" pos:column="30"/></name> <operator pos:line="78" pos:column="31">&lt;&lt;<pos:position pos:line="78" pos:column="39"/></operator> <literal type="string" pos:line="78" pos:column="34">"FTP Channel is IPv4 ("<pos:position pos:line="78" pos:column="57"/></literal> <operator pos:line="78" pos:column="58">&lt;&lt;<pos:position pos:line="78" pos:column="66"/></operator> <name pos:line="78" pos:column="61">addr<pos:position pos:line="78" pos:column="65"/></name> <operator pos:line="78" pos:column="66">&lt;&lt;<pos:position pos:line="78" pos:column="74"/></operator> <literal type="string" pos:line="78" pos:column="69">") attempting EPSV 1 after EPSV ALL has failed."<pos:position pos:line="78" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="119"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">snprintf<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><name pos:line="79" pos:column="22">cbuf<pos:position pos:line="79" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="28">1024<pos:position pos:line="79" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="34">"EPSV 1\r\n"<pos:position pos:line="79" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="80" pos:column="13">ftpState<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">-&gt;<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="23">state<pos:position pos:line="80" pos:column="28"/></name></name> <operator pos:line="80" pos:column="29">=<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="31">SENT_EPSV_1<pos:position pos:line="80" pos:column="42"/></name></expr>;<pos:position pos:line="80" pos:column="43"/></expr_stmt>
            <break pos:line="81" pos:column="13">break;<pos:position pos:line="81" pos:column="19"/></break>
        }<pos:position pos:line="82" pos:column="10"/></block></then> <elseif pos:line="82" pos:column="11">else <if pos:line="82" pos:column="16">if <condition pos:line="82" pos:column="19">(<expr><name><name pos:line="82" pos:column="20">ftpState<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">-&gt;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="30">flags<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">.<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="36">epsv_all_sent<pos:position pos:line="82" pos:column="49"/></name></name></expr>)<pos:position pos:line="82" pos:column="50"/></condition><then pos:line="82" pos:column="50"> <block pos:line="82" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">debugs<pos:position pos:line="83" pos:column="19"/></name><argument_list pos:line="83" pos:column="19">(<argument><expr><literal type="number" pos:line="83" pos:column="20">9<pos:position pos:line="83" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="23">DBG_IMPORTANT<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="38">"FTP does not allow PASV method after 'EPSV ALL' has been sent."<pos:position pos:line="83" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">ftpFail<pos:position pos:line="84" pos:column="20"/></name><argument_list pos:line="84" pos:column="20">(<argument><expr><name pos:line="84" pos:column="21">ftpState<pos:position pos:line="84" pos:column="29"/></name></expr></argument>)<pos:position pos:line="84" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>
            <return pos:line="85" pos:column="13">return;<pos:position pos:line="85" pos:column="20"/></return>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if></elseif></if>
        <comment type="line" pos:line="87" pos:column="9">// else fall through to skip EPSV 1</comment>

    <case pos:line="89" pos:column="5">case <expr><name pos:line="89" pos:column="10">SENT_EPSV_1<pos:position pos:line="89" pos:column="21"/></name></expr>:<pos:position pos:line="89" pos:column="22"/></case> <comment type="block" pos:line="89" pos:column="23">/* EPSV options exhausted. Try PASV now. */</comment>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">debugs<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><literal type="number" pos:line="90" pos:column="16">9<pos:position pos:line="90" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="19">5<pos:position pos:line="90" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="22">HERE<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">&lt;&lt;<pos:position pos:line="90" pos:column="35"/></operator> <literal type="string" pos:line="90" pos:column="30">"FTP Channel ("<pos:position pos:line="90" pos:column="45"/></literal> <operator pos:line="90" pos:column="46">&lt;&lt;<pos:position pos:line="90" pos:column="54"/></operator> <name pos:line="90" pos:column="49">addr<pos:position pos:line="90" pos:column="53"/></name> <operator pos:line="90" pos:column="54">&lt;&lt;<pos:position pos:line="90" pos:column="62"/></operator> <literal type="string" pos:line="90" pos:column="57">") rejects EPSV connection attempts. Trying PASV instead."<pos:position pos:line="90" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="117"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">snprintf<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><name pos:line="91" pos:column="18">cbuf<pos:position pos:line="91" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="24">1024<pos:position pos:line="91" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="30">"PASV\r\n"<pos:position pos:line="91" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">ftpState<pos:position pos:line="92" pos:column="17"/></name><operator pos:line="92" pos:column="17">-&gt;<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="19">state<pos:position pos:line="92" pos:column="24"/></name></name> <operator pos:line="92" pos:column="25">=<pos:position pos:line="92" pos:column="26"/></operator> <name pos:line="92" pos:column="27">SENT_PASV<pos:position pos:line="92" pos:column="36"/></name></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
        <break pos:line="93" pos:column="9">break;<pos:position pos:line="93" pos:column="15"/></break>

    <default pos:line="95" pos:column="5">default:<pos:position pos:line="95" pos:column="13"/></default>
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><name><name pos:line="96" pos:column="14">Config<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">Ftp<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">.<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="25">epsv<pos:position pos:line="96" pos:column="29"/></name></name></expr>)<pos:position pos:line="96" pos:column="30"/></condition><then pos:line="96" pos:column="30"> <block pos:line="96" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">debugs<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><literal type="number" pos:line="97" pos:column="20">9<pos:position pos:line="97" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="23">5<pos:position pos:line="97" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="26">HERE<pos:position pos:line="97" pos:column="30"/></name> <operator pos:line="97" pos:column="31">&lt;&lt;<pos:position pos:line="97" pos:column="39"/></operator> <literal type="string" pos:line="97" pos:column="34">"EPSV support manually disabled. Sending PASV for FTP Channel ("<pos:position pos:line="97" pos:column="98"/></literal> <operator pos:line="97" pos:column="99">&lt;&lt;<pos:position pos:line="97" pos:column="107"/></operator> <name pos:line="97" pos:column="102">addr<pos:position pos:line="97" pos:column="106"/></name> <operator pos:line="97" pos:column="107">&lt;&lt;<pos:position pos:line="97" pos:column="115"/></operator><literal type="string" pos:line="97" pos:column="109">")"<pos:position pos:line="97" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="114"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">snprintf<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">cbuf<pos:position pos:line="98" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="28">1024<pos:position pos:line="98" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="34">"PASV\r\n"<pos:position pos:line="98" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">ftpState<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">-&gt;<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="23">state<pos:position pos:line="99" pos:column="28"/></name></name> <operator pos:line="99" pos:column="29">=<pos:position pos:line="99" pos:column="30"/></operator> <name pos:line="99" pos:column="31">SENT_PASV<pos:position pos:line="99" pos:column="40"/></name></expr>;<pos:position pos:line="99" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then> <elseif pos:line="100" pos:column="11">else <if pos:line="100" pos:column="16">if <condition pos:line="100" pos:column="19">(<expr><name><name pos:line="100" pos:column="20">Config<pos:position pos:line="100" pos:column="26"/></name><operator pos:line="100" pos:column="26">.<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="27">Ftp<pos:position pos:line="100" pos:column="30"/></name><operator pos:line="100" pos:column="30">.<pos:position pos:line="100" pos:column="31"/></operator><name pos:line="100" pos:column="31">epsv_all<pos:position pos:line="100" pos:column="39"/></name></name></expr>)<pos:position pos:line="100" pos:column="40"/></condition><then pos:line="100" pos:column="40"> <block pos:line="100" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">debugs<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><literal type="number" pos:line="101" pos:column="20">9<pos:position pos:line="101" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="23">5<pos:position pos:line="101" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="26">HERE<pos:position pos:line="101" pos:column="30"/></name> <operator pos:line="101" pos:column="31">&lt;&lt;<pos:position pos:line="101" pos:column="39"/></operator> <literal type="string" pos:line="101" pos:column="34">"EPSV ALL manually enabled. Attempting with FTP Channel ("<pos:position pos:line="101" pos:column="92"/></literal> <operator pos:line="101" pos:column="93">&lt;&lt;<pos:position pos:line="101" pos:column="101"/></operator> <name pos:line="101" pos:column="96">addr<pos:position pos:line="101" pos:column="100"/></name> <operator pos:line="101" pos:column="101">&lt;&lt;<pos:position pos:line="101" pos:column="109"/></operator><literal type="string" pos:line="101" pos:column="103">")"<pos:position pos:line="101" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="108"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">snprintf<pos:position pos:line="102" pos:column="21"/></name><argument_list pos:line="102" pos:column="21">(<argument><expr><name pos:line="102" pos:column="22">cbuf<pos:position pos:line="102" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="28">1024<pos:position pos:line="102" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="34">"EPSV ALL\r\n"<pos:position pos:line="102" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">ftpState<pos:position pos:line="103" pos:column="21"/></name><operator pos:line="103" pos:column="21">-&gt;<pos:position pos:line="103" pos:column="26"/></operator><name pos:line="103" pos:column="23">state<pos:position pos:line="103" pos:column="28"/></name></name> <operator pos:line="103" pos:column="29">=<pos:position pos:line="103" pos:column="30"/></operator> <name pos:line="103" pos:column="31">SENT_EPSV_ALL<pos:position pos:line="103" pos:column="44"/></name></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="104" pos:column="13">/* block other non-EPSV connections being attempted */</comment>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">ftpState<pos:position pos:line="105" pos:column="21"/></name><operator pos:line="105" pos:column="21">-&gt;<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="23">flags<pos:position pos:line="105" pos:column="28"/></name><operator pos:line="105" pos:column="28">.<pos:position pos:line="105" pos:column="29"/></operator><name pos:line="105" pos:column="29">epsv_all_sent<pos:position pos:line="105" pos:column="42"/></name></name> <operator pos:line="105" pos:column="43">=<pos:position pos:line="105" pos:column="44"/></operator> <literal type="boolean" pos:line="105" pos:column="45">true<pos:position pos:line="105" pos:column="49"/></literal></expr>;<pos:position pos:line="105" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if></elseif> <else pos:line="106" pos:column="11">else <block pos:line="106" pos:column="16">{
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><call><name><name pos:line="107" pos:column="17">addr<pos:position pos:line="107" pos:column="21"/></name><operator pos:line="107" pos:column="21">.<pos:position pos:line="107" pos:column="22"/></operator><name pos:line="107" pos:column="22">IsIPv6<pos:position pos:line="107" pos:column="28"/></name></name><argument_list pos:line="107" pos:column="28">()<pos:position pos:line="107" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31"> <block pos:line="107" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">debugs<pos:position pos:line="108" pos:column="23"/></name><argument_list pos:line="108" pos:column="23">(<argument><expr><literal type="number" pos:line="108" pos:column="24">9<pos:position pos:line="108" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="27">5<pos:position pos:line="108" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="30">HERE<pos:position pos:line="108" pos:column="34"/></name> <operator pos:line="108" pos:column="35">&lt;&lt;<pos:position pos:line="108" pos:column="43"/></operator> <literal type="string" pos:line="108" pos:column="38">"FTP Channel ("<pos:position pos:line="108" pos:column="53"/></literal> <operator pos:line="108" pos:column="54">&lt;&lt;<pos:position pos:line="108" pos:column="62"/></operator> <name pos:line="108" pos:column="57">addr<pos:position pos:line="108" pos:column="61"/></name> <operator pos:line="108" pos:column="62">&lt;&lt;<pos:position pos:line="108" pos:column="70"/></operator> <literal type="string" pos:line="108" pos:column="65">"). Sending default EPSV 2"<pos:position pos:line="108" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="94"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="109" pos:column="17">snprintf<pos:position pos:line="109" pos:column="25"/></name><argument_list pos:line="109" pos:column="25">(<argument><expr><name pos:line="109" pos:column="26">cbuf<pos:position pos:line="109" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="32">1024<pos:position pos:line="109" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="38">"EPSV 2\r\n"<pos:position pos:line="109" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="110" pos:column="17">ftpState<pos:position pos:line="110" pos:column="25"/></name><operator pos:line="110" pos:column="25">-&gt;<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="27">state<pos:position pos:line="110" pos:column="32"/></name></name> <operator pos:line="110" pos:column="33">=<pos:position pos:line="110" pos:column="34"/></operator> <name pos:line="110" pos:column="35">SENT_EPSV_2<pos:position pos:line="110" pos:column="46"/></name></expr>;<pos:position pos:line="110" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="111" pos:column="14"/></block></then></if>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><call><name><name pos:line="112" pos:column="17">addr<pos:position pos:line="112" pos:column="21"/></name><operator pos:line="112" pos:column="21">.<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="22">IsIPv4<pos:position pos:line="112" pos:column="28"/></name></name><argument_list pos:line="112" pos:column="28">()<pos:position pos:line="112" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31"> <block pos:line="112" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="113" pos:column="17">debugs<pos:position pos:line="113" pos:column="23"/></name><argument_list pos:line="113" pos:column="23">(<argument><expr><literal type="number" pos:line="113" pos:column="24">9<pos:position pos:line="113" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="27">5<pos:position pos:line="113" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="30">HERE<pos:position pos:line="113" pos:column="34"/></name> <operator pos:line="113" pos:column="35">&lt;&lt;<pos:position pos:line="113" pos:column="43"/></operator> <literal type="string" pos:line="113" pos:column="38">"Channel ("<pos:position pos:line="113" pos:column="49"/></literal> <operator pos:line="113" pos:column="50">&lt;&lt;<pos:position pos:line="113" pos:column="58"/></operator> <name pos:line="113" pos:column="53">addr<pos:position pos:line="113" pos:column="57"/></name> <operator pos:line="113" pos:column="58">&lt;&lt;<pos:position pos:line="113" pos:column="66"/></operator><literal type="string" pos:line="113" pos:column="60">"). Sending default EPSV 1"<pos:position pos:line="113" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="89"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="114" pos:column="17">snprintf<pos:position pos:line="114" pos:column="25"/></name><argument_list pos:line="114" pos:column="25">(<argument><expr><name pos:line="114" pos:column="26">cbuf<pos:position pos:line="114" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="32">1024<pos:position pos:line="114" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="38">"EPSV 1\r\n"<pos:position pos:line="114" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="115" pos:column="17">ftpState<pos:position pos:line="115" pos:column="25"/></name><operator pos:line="115" pos:column="25">-&gt;<pos:position pos:line="115" pos:column="30"/></operator><name pos:line="115" pos:column="27">state<pos:position pos:line="115" pos:column="32"/></name></name> <operator pos:line="115" pos:column="33">=<pos:position pos:line="115" pos:column="34"/></operator> <name pos:line="115" pos:column="35">SENT_EPSV_1<pos:position pos:line="115" pos:column="46"/></name></expr>;<pos:position pos:line="115" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></then></if>
        }<pos:position pos:line="117" pos:column="10"/></block></else></if>
        <break pos:line="118" pos:column="9">break;<pos:position pos:line="118" pos:column="15"/></break>
    }<pos:position pos:line="119" pos:column="6"/></block></switch>

    <comment type="block" format="doxygen" pos:line="121" pos:column="5">/** Otherwise, Open data channel with the same local address as control channel (on a new random port!) */</comment>
    <expr_stmt><expr><call><name><name pos:line="122" pos:column="5">addr<pos:position pos:line="122" pos:column="9"/></name><operator pos:line="122" pos:column="9">.<pos:position pos:line="122" pos:column="10"/></operator><name pos:line="122" pos:column="10">SetPort<pos:position pos:line="122" pos:column="17"/></name></name><argument_list pos:line="122" pos:column="17">(<argument><expr><literal type="number" pos:line="122" pos:column="18">0<pos:position pos:line="122" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="21"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="123" pos:column="5">int<pos:position pos:line="123" pos:column="8"/></name></type> <name pos:line="123" pos:column="9">fd<pos:position pos:line="123" pos:column="11"/></name> <init pos:line="123" pos:column="12">= <expr><call><name pos:line="123" pos:column="14">comm_open<pos:position pos:line="123" pos:column="23"/></name><argument_list pos:line="123" pos:column="23">(<argument><expr><name pos:line="123" pos:column="24">SOCK_STREAM<pos:position pos:line="123" pos:column="35"/></name></expr></argument>,
                       <argument><expr><name pos:line="124" pos:column="24">IPPROTO_TCP<pos:position pos:line="124" pos:column="35"/></name></expr></argument>,
                       <argument><expr><name pos:line="125" pos:column="24">addr<pos:position pos:line="125" pos:column="28"/></name></expr></argument>,
                       <argument><expr><name pos:line="126" pos:column="24">COMM_NONBLOCKING<pos:position pos:line="126" pos:column="40"/></name></expr></argument>,
                       <argument><expr><call><name><name pos:line="127" pos:column="24">ftpState<pos:position pos:line="127" pos:column="32"/></name><operator pos:line="127" pos:column="32">-&gt;<pos:position pos:line="127" pos:column="37"/></operator><name pos:line="127" pos:column="34">entry<pos:position pos:line="127" pos:column="39"/></name><operator pos:line="127" pos:column="39">-&gt;<pos:position pos:line="127" pos:column="44"/></operator><name pos:line="127" pos:column="41">url<pos:position pos:line="127" pos:column="44"/></name></name><argument_list pos:line="127" pos:column="44">()<pos:position pos:line="127" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="127" pos:column="48"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="129" pos:column="5">debugs<pos:position pos:line="129" pos:column="11"/></name><argument_list pos:line="129" pos:column="11">(<argument><expr><literal type="number" pos:line="129" pos:column="12">9<pos:position pos:line="129" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="15">3<pos:position pos:line="129" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="18">HERE<pos:position pos:line="129" pos:column="22"/></name> <operator pos:line="129" pos:column="23">&lt;&lt;<pos:position pos:line="129" pos:column="31"/></operator> <literal type="string" pos:line="129" pos:column="26">"Unconnected data socket created on FD "<pos:position pos:line="129" pos:column="66"/></literal> <operator pos:line="129" pos:column="67">&lt;&lt;<pos:position pos:line="129" pos:column="75"/></operator> <name pos:line="129" pos:column="70">fd<pos:position pos:line="129" pos:column="72"/></name> <operator pos:line="129" pos:column="73">&lt;&lt;<pos:position pos:line="129" pos:column="81"/></operator> <literal type="string" pos:line="129" pos:column="76">" from "<pos:position pos:line="129" pos:column="84"/></literal> <operator pos:line="129" pos:column="85">&lt;&lt;<pos:position pos:line="129" pos:column="93"/></operator> <name pos:line="129" pos:column="88">addr<pos:position pos:line="129" pos:column="92"/></name></expr></argument>)<pos:position pos:line="129" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="94"/></expr_stmt>

    <if pos:line="131" pos:column="5">if <condition pos:line="131" pos:column="8">(<expr><name pos:line="131" pos:column="9">fd<pos:position pos:line="131" pos:column="11"/></name> <operator pos:line="131" pos:column="12">&lt;<pos:position pos:line="131" pos:column="16"/></operator> <literal type="number" pos:line="131" pos:column="14">0<pos:position pos:line="131" pos:column="15"/></literal></expr>)<pos:position pos:line="131" pos:column="16"/></condition><then pos:line="131" pos:column="16"> <block pos:line="131" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">ftpFail<pos:position pos:line="132" pos:column="16"/></name><argument_list pos:line="132" pos:column="16">(<argument><expr><name pos:line="132" pos:column="17">ftpState<pos:position pos:line="132" pos:column="25"/></name></expr></argument>)<pos:position pos:line="132" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="27"/></expr_stmt>
        <return pos:line="133" pos:column="9">return;<pos:position pos:line="133" pos:column="16"/></return>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="136" pos:column="5">ftpState<pos:position pos:line="136" pos:column="13"/></name><operator pos:line="136" pos:column="13">-&gt;<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="15">data<pos:position pos:line="136" pos:column="19"/></name><operator pos:line="136" pos:column="19">.<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="20">opened<pos:position pos:line="136" pos:column="26"/></name></name><argument_list pos:line="136" pos:column="26">(<argument><expr><name pos:line="136" pos:column="27">fd<pos:position pos:line="136" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="136" pos:column="31">ftpState<pos:position pos:line="136" pos:column="39"/></name><operator pos:line="136" pos:column="39">-&gt;<pos:position pos:line="136" pos:column="44"/></operator><name pos:line="136" pos:column="41">dataCloser<pos:position pos:line="136" pos:column="51"/></name></name><argument_list pos:line="136" pos:column="51">()<pos:position pos:line="136" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="137" pos:column="5">ftpState<pos:position pos:line="137" pos:column="13"/></name><operator pos:line="137" pos:column="13">-&gt;<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="15">writeCommand<pos:position pos:line="137" pos:column="27"/></name></name><argument_list pos:line="137" pos:column="27">(<argument><expr><name pos:line="137" pos:column="28">cbuf<pos:position pos:line="137" pos:column="32"/></name></expr></argument>)<pos:position pos:line="137" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="139" pos:column="5">/*
     * ugly hack for ftp servers like ftp.netscape.com that sometimes
     * dont acknowledge PASV commands.
     */</comment>
    <typedef pos:line="143" pos:column="5">typedef <type><name><name pos:line="143" pos:column="13">CommCbMemFunT<pos:position pos:line="143" pos:column="26"/></name><argument_list type="generic" pos:line="143" pos:column="26">&lt;<argument><expr><name pos:line="143" pos:column="27">FtpStateData<pos:position pos:line="143" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="41">CommTimeoutCbParams<pos:position pos:line="143" pos:column="60"/></name></expr></argument>&gt;<pos:position pos:line="143" pos:column="64"/></argument_list></name></type> <name pos:line="143" pos:column="62">TimeoutDialer<pos:position pos:line="143" pos:column="75"/></name>;<pos:position pos:line="143" pos:column="76"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="144" pos:column="5">AsyncCall<pos:position pos:line="144" pos:column="14"/></name><operator pos:line="144" pos:column="14">::<pos:position pos:line="144" pos:column="16"/></operator><name pos:line="144" pos:column="16">Pointer<pos:position pos:line="144" pos:column="23"/></name></name></type> <name pos:line="144" pos:column="24">timeoutCall<pos:position pos:line="144" pos:column="35"/></name> <init pos:line="144" pos:column="36">=  <expr><call><name pos:line="144" pos:column="39">JobCallback<pos:position pos:line="144" pos:column="50"/></name><argument_list pos:line="144" pos:column="50">(<argument><expr><literal type="number" pos:line="144" pos:column="51">9<pos:position pos:line="144" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="54">5<pos:position pos:line="144" pos:column="55"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="145" pos:column="39">TimeoutDialer<pos:position pos:line="145" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="54">ftpState<pos:position pos:line="145" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="64">FtpStateData<pos:position pos:line="145" pos:column="76"/></name><operator pos:line="145" pos:column="76">::<pos:position pos:line="145" pos:column="78"/></operator><name pos:line="145" pos:column="78">ftpTimeout<pos:position pos:line="145" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="145" pos:column="90"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="147" pos:column="5">commSetTimeout<pos:position pos:line="147" pos:column="19"/></name><argument_list pos:line="147" pos:column="19">(<argument><expr><name><name pos:line="147" pos:column="20">ftpState<pos:position pos:line="147" pos:column="28"/></name><operator pos:line="147" pos:column="28">-&gt;<pos:position pos:line="147" pos:column="33"/></operator><name pos:line="147" pos:column="30">data<pos:position pos:line="147" pos:column="34"/></name><operator pos:line="147" pos:column="34">.<pos:position pos:line="147" pos:column="35"/></operator><name pos:line="147" pos:column="35">fd<pos:position pos:line="147" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="39">15<pos:position pos:line="147" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="43">timeoutCall<pos:position pos:line="147" pos:column="54"/></name></expr></argument>)<pos:position pos:line="147" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="56"/></expr_stmt>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

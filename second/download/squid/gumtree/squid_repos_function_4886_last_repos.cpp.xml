<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4886_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">CharacterSet<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">&amp;<pos:position pos:line="1" pos:column="25"/></modifier></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">RequestParser<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">RequestTargetCharacters<pos:position pos:line="2" pos:column="50"/></name></name><parameter_list pos:line="2" pos:column="50">()<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">onoff<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">relaxed_header_parser<pos:position pos:line="4" pos:column="43"/></name></name></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <block pos:line="4" pos:column="45">{
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="5" pos:column="24"/></name></expr></cpp:if>
        <decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><specifier pos:line="6" pos:column="16">const<pos:position pos:line="6" pos:column="21"/></specifier> <name pos:line="6" pos:column="22">CharacterSet<pos:position pos:line="6" pos:column="34"/></name></type> <name pos:line="6" pos:column="35">RelaxedExtended<pos:position pos:line="6" pos:column="50"/></name> <init pos:line="6" pos:column="51">=
            <expr><call><name pos:line="7" pos:column="13">UriValidCharacters<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call> <operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator>
            <comment type="line" pos:line="8" pos:column="13">// accept whitespace (extended), it will be dealt with later</comment>
            <call><name pos:line="9" pos:column="13">DelimiterCharacters<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">()<pos:position pos:line="9" pos:column="34"/></argument_list></call> <operator pos:line="9" pos:column="35">+<pos:position pos:line="9" pos:column="36"/></operator>
            <comment type="line" pos:line="10" pos:column="13">// RFC 2396 unwise character set which must never be transmitted</comment>
            <comment type="line" pos:line="11" pos:column="13">// in un-escaped form. But many web services do anyway.</comment>
            <call><name pos:line="12" pos:column="13">CharacterSet<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="string" pos:line="12" pos:column="26">"RFC2396-unwise"<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="43">"\"\\|^&lt;&gt;`{}"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call> <operator pos:line="12" pos:column="58">+<pos:position pos:line="12" pos:column="59"/></operator>
            <comment type="line" pos:line="13" pos:column="13">// UTF-8 because we want to be future-proof</comment>
            <call><name pos:line="14" pos:column="13">CharacterSet<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="string" pos:line="14" pos:column="26">"UTF-8"<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="35">128<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="40">255<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="45"/></decl_stmt>

        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">RelaxedExtended<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></return>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else<pos:position pos:line="17" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><specifier pos:line="18" pos:column="9">static<pos:position pos:line="18" pos:column="15"/></specifier> <type><specifier pos:line="18" pos:column="16">const<pos:position pos:line="18" pos:column="21"/></specifier> <name pos:line="18" pos:column="22">CharacterSet<pos:position pos:line="18" pos:column="34"/></name></type> <name pos:line="18" pos:column="35">RelaxedCompliant<pos:position pos:line="18" pos:column="51"/></name> <init pos:line="18" pos:column="52">=
            <expr><call><name pos:line="19" pos:column="13">UriValidCharacters<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">()<pos:position pos:line="19" pos:column="33"/></argument_list></call> <operator pos:line="19" pos:column="34">+<pos:position pos:line="19" pos:column="35"/></operator>
            <comment type="line" pos:line="20" pos:column="13">// accept whitespace (extended), it will be dealt with later.</comment>
            <call><name pos:line="21" pos:column="13">DelimiterCharacters<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">()<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="35"/></decl_stmt>

        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">RelaxedCompliant<pos:position pos:line="23" pos:column="32"/></name></expr>;<pos:position pos:line="23" pos:column="33"/></return>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="27" pos:column="5">// strict parse only accepts what the RFC say we can</comment>
    <return pos:line="28" pos:column="5">return <expr><call><name pos:line="28" pos:column="12">UriValidCharacters<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">()<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4328_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">ParseProtoIpPort<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">buf<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="40">Ip<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">Address<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">addr<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">delim<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">buf<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">buf<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">+<pos:position pos:line="6" pos:column="26"/></operator> <literal type="number" pos:line="6" pos:column="27">1<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">e<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">s<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">int<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">proto<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><call><name pos:line="8" pos:column="23">strtol<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">s<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><cast type="const" pos:line="8" pos:column="33">const_cast<argument_list type="generic" pos:line="8" pos:column="43">&lt;<argument><expr><name pos:line="8" pos:column="44">char<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">*<pos:position pos:line="8" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="54"/></argument_list><argument_list pos:line="8" pos:column="51">(<argument><expr><operator pos:line="8" pos:column="52">&amp;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="53">e<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></cast></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="57">10<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">proto<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">!=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">1<pos:position pos:line="9" pos:column="20"/></literal> <operator pos:line="9" pos:column="21">&amp;&amp;<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="24">proto<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">!=<pos:position pos:line="9" pos:column="32"/></operator> <literal type="number" pos:line="9" pos:column="33">2<pos:position pos:line="9" pos:column="34"/></literal><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="36">||<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">e<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">!=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">delim<pos:position pos:line="9" pos:column="50"/></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">s<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <name pos:line="12" pos:column="9">e<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">+<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">e<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">strchr<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">s<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">delim<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">ip<pos:position pos:line="14" pos:column="12"/></name><index pos:line="14" pos:column="12">[<expr><name pos:line="14" pos:column="13">MAX_IPSTRLEN<pos:position pos:line="14" pos:column="25"/></name></expr>]<pos:position pos:line="14" pos:column="26"/></index></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><cast type="static" pos:line="15" pos:column="9">static_cast<argument_list type="generic" pos:line="15" pos:column="20">&lt;<argument><expr><name pos:line="15" pos:column="21">size_t<pos:position pos:line="15" pos:column="27"/></name></expr></argument>&gt;<pos:position pos:line="15" pos:column="31"/></argument_list><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">e<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">-<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">s<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></cast> <operator pos:line="15" pos:column="36">&gt;=<pos:position pos:line="15" pos:column="41"/></operator> <sizeof pos:line="15" pos:column="39">sizeof<argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">ip<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></sizeof></expr>)<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><literal type="boolean" pos:line="16" pos:column="16">false<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">strncpy<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">ip<pos:position pos:line="17" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="17">s<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">e<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">-<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ip<pos:position pos:line="18" pos:column="7"/></name><index pos:line="18" pos:column="7">[<expr><name pos:line="18" pos:column="8">e<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">-<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">s<pos:position pos:line="18" pos:column="13"/></name></expr>]<pos:position pos:line="18" pos:column="14"/></index></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="char" pos:line="18" pos:column="17">'\0'<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">addr<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">ip<pos:position pos:line="19" pos:column="14"/></name></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name><name pos:line="21" pos:column="9">addr<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">.<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">isAnyAddr<pos:position pos:line="21" pos:column="23"/></name></name><argument_list pos:line="21" pos:column="23">()<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><literal type="boolean" pos:line="22" pos:column="16">false<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></return></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">proto<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">==<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">2<pos:position pos:line="24" pos:column="20"/></literal><operator pos:line="24" pos:column="20">)<pos:position pos:line="24" pos:column="21"/></operator> <operator pos:line="24" pos:column="22">!=<pos:position pos:line="24" pos:column="24"/></operator> <call><name><name pos:line="24" pos:column="25">addr<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">.<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">isIPv6<pos:position pos:line="24" pos:column="36"/></name></name><argument_list pos:line="24" pos:column="36">()<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="39"/></condition><then pos:line="24" pos:column="39"> <comment type="line" pos:line="24" pos:column="40">// proto ID mismatches address version</comment>
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="boolean" pos:line="25" pos:column="16">false<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">s<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <name pos:line="27" pos:column="9">e<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">+<pos:position pos:line="27" pos:column="12"/></operator> <literal type="number" pos:line="27" pos:column="13">1<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt> <comment type="line" pos:line="27" pos:column="16">// skip port delimiter</comment>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">int<pos:position pos:line="28" pos:column="14"/></name></type> <name pos:line="28" pos:column="15">port<pos:position pos:line="28" pos:column="19"/></name> <init pos:line="28" pos:column="20">= <expr><call><name pos:line="28" pos:column="22">strtol<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">s<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><cast type="const" pos:line="28" pos:column="32">const_cast<argument_list type="generic" pos:line="28" pos:column="42">&lt;<argument><expr><name pos:line="28" pos:column="43">char<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">*<pos:position pos:line="28" pos:column="48"/></operator><operator pos:line="28" pos:column="48">*<pos:position pos:line="28" pos:column="49"/></operator></expr></argument>&gt;<pos:position pos:line="28" pos:column="53"/></argument_list><argument_list pos:line="28" pos:column="50">(<argument><expr><operator pos:line="28" pos:column="51">&amp;<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="52">e<pos:position pos:line="28" pos:column="53"/></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></cast></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="56">10<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="60"/></decl_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">port<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">&lt;<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal> <operator pos:line="29" pos:column="18">||<pos:position pos:line="29" pos:column="20"/></operator> <operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">e<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">!=<pos:position pos:line="29" pos:column="26"/></operator> <literal type="char" pos:line="29" pos:column="27">'|'<pos:position pos:line="29" pos:column="30"/></literal></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="boolean" pos:line="30" pos:column="16">false<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></return></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">Config<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">Ftp<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">sanitycheck<pos:position pos:line="32" pos:column="31"/></name></name> <operator pos:line="32" pos:column="32">&amp;&amp;<pos:position pos:line="32" pos:column="42"/></operator> <name pos:line="32" pos:column="35">port<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">&lt;<pos:position pos:line="32" pos:column="44"/></operator> <literal type="number" pos:line="32" pos:column="42">1024<pos:position pos:line="32" pos:column="46"/></literal></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47">
        <block type="pseudo"><return pos:line="33" pos:column="9">return <expr><literal type="boolean" pos:line="33" pos:column="16">false<pos:position pos:line="33" pos:column="21"/></literal></expr>;<pos:position pos:line="33" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">addr<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">.<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">port<pos:position pos:line="35" pos:column="14"/></name></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">port<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><literal type="boolean" pos:line="36" pos:column="12">true<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

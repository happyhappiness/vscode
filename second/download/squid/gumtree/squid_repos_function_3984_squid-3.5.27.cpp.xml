<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3984_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">HeaderRep<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">hasAny<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">Name<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="49">name<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">http_hdr_type<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">squidId<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><call><name pos:line="4" pos:column="35">TranslateHeaderId<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">name<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <comment type="line" pos:line="5" pos:column="5">// XXX: optimize to remove getByName: we do not need the value here</comment>
    <return pos:line="6" pos:column="5">return <expr><ternary><condition><expr><name pos:line="6" pos:column="12">squidId<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">==<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">HDR_OTHER<pos:position pos:line="6" pos:column="32"/></name></expr> ?<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
           <expr><call><name><name pos:line="7" pos:column="12">theHeader<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">getByName<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">(<argument><expr><call><name><name pos:line="7" pos:column="32">name<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">image<pos:position pos:line="7" pos:column="42"/></name></name><argument_list pos:line="7" pos:column="42">()<pos:position pos:line="7" pos:column="44"/></argument_list></call><operator pos:line="7" pos:column="44">.<pos:position pos:line="7" pos:column="45"/></operator><call><name pos:line="7" pos:column="45">c_str<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">()<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call><operator pos:line="7" pos:column="53">.<pos:position pos:line="7" pos:column="54"/></operator><call><name pos:line="7" pos:column="54">size<pos:position pos:line="7" pos:column="58"/></name><argument_list pos:line="7" pos:column="58">()<pos:position pos:line="7" pos:column="60"/></argument_list></call> <operator pos:line="7" pos:column="61">&gt;<pos:position pos:line="7" pos:column="65"/></operator> <literal type="number" pos:line="7" pos:column="63">0<pos:position pos:line="7" pos:column="64"/></literal></expr></then><else pos:line="7" pos:column="64">:
           <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">bool<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator><call><name><name pos:line="8" pos:column="18">theHeader<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">has<pos:position pos:line="8" pos:column="31"/></name></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">squidId<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="41"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

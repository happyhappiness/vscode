<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1850_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">commUpdateReadBits<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">PF<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">handler<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">handler<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&amp;&amp;<pos:position pos:line="4" pos:column="27"/></operator> <operator pos:line="4" pos:column="20">!<pos:position pos:line="4" pos:column="21"/></operator><call><name pos:line="4" pos:column="21">FD_ISSET<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">fd<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="34">&amp;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="35">global_readfds<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51"> <block pos:line="4" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">FD_SET<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">fd<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="20">&amp;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="21">global_readfds<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">nreadfds<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">++<pos:position pos:line="6" pos:column="19"/></operator></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <elseif pos:line="7" pos:column="7">else <if pos:line="7" pos:column="12">if <condition pos:line="7" pos:column="15">(<expr><operator pos:line="7" pos:column="16">!<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">handler<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&amp;&amp;<pos:position pos:line="7" pos:column="35"/></operator> <call><name pos:line="7" pos:column="28">FD_ISSET<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">fd<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="41">&amp;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="42">global_readfds<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58"> <block pos:line="7" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">FD_CLR<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">fd<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="20">&amp;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="21">global_readfds<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">nreadfds<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">--<pos:position pos:line="9" pos:column="19"/></operator></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

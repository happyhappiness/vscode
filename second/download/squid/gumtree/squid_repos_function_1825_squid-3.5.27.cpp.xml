<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1825_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">helperStatefulHandleRead<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">Comm<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">ConnectionPointer<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">conn<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">buf<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">size_t<pos:position pos:line="2" pos:column="80"/></name></type> <name pos:line="2" pos:column="81">len<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="86">Comm<pos:position pos:line="2" pos:column="90"/></name><operator pos:line="2" pos:column="90">::<pos:position pos:line="2" pos:column="92"/></operator><name pos:line="2" pos:column="92">Flag<pos:position pos:line="2" pos:column="96"/></name></name></type> <name pos:line="2" pos:column="97">flag<pos:position pos:line="2" pos:column="101"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="103">int<pos:position pos:line="2" pos:column="106"/></name></type> <name pos:line="2" pos:column="107">xerrno<pos:position pos:line="2" pos:column="113"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="115">void<pos:position pos:line="2" pos:column="119"/></name> <modifier pos:line="2" pos:column="120">*<pos:position pos:line="2" pos:column="121"/></modifier></type><name pos:line="2" pos:column="121">data<pos:position pos:line="2" pos:column="125"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="126"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">helper_stateful_server<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">srv<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><operator pos:line="5" pos:column="35">(<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">helper_stateful_server<pos:position pos:line="5" pos:column="58"/></name> <operator pos:line="5" pos:column="59">*<pos:position pos:line="5" pos:column="60"/></operator><operator pos:line="5" pos:column="60">)<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="61">data<pos:position pos:line="5" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Helper<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">::<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">Request<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">r<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">statefulhelper<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">hlp<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">srv<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">parent<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><call><name pos:line="8" pos:column="12">cbdataReferenceValid<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">data<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Bail out early on Comm::ERR_CLOSING - close handlers will tidy up for us */</comment>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">flag<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">Comm<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">::<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">ERR_CLOSING<pos:position pos:line="12" pos:column="34"/></name></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35"> <block pos:line="12" pos:column="36">{
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">conn<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">fd<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="24">srv<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">readPipe<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">fd<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">84<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">5<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"helperStatefulHandleRead: "<pos:position pos:line="18" pos:column="47"/></literal> <operator pos:line="18" pos:column="48">&lt;&lt;<pos:position pos:line="18" pos:column="56"/></operator> <name pos:line="18" pos:column="51">len<pos:position pos:line="18" pos:column="54"/></name> <operator pos:line="18" pos:column="55">&lt;&lt;<pos:position pos:line="18" pos:column="63"/></operator> <literal type="string" pos:line="18" pos:column="58">" bytes from "<pos:position pos:line="18" pos:column="72"/></literal> <operator pos:line="18" pos:column="73">&lt;&lt;<pos:position pos:line="18" pos:column="81"/></operator>
           <name><name pos:line="19" pos:column="12">hlp<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">id_name<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">&lt;&lt;<pos:position pos:line="19" pos:column="33"/></operator> <literal type="string" pos:line="19" pos:column="28">" #"<pos:position pos:line="19" pos:column="32"/></literal> <operator pos:line="19" pos:column="33">&lt;&lt;<pos:position pos:line="19" pos:column="41"/></operator> <name><name pos:line="19" pos:column="36">srv<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">index<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">flag<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">!=<pos:position pos:line="21" pos:column="16"/></operator> <name><name pos:line="21" pos:column="17">Comm<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">::<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">OK<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">||<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">len<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="36">0<pos:position pos:line="21" pos:column="37"/></literal></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38"> <block pos:line="21" pos:column="39">{
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">srv<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">closePipesSafely<pos:position pos:line="22" pos:column="30"/></name></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">hlp<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">id_name<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">srv<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">roffset<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">+=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">len<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">srv<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">rbuf<pos:position pos:line="27" pos:column="14"/></name><index pos:line="27" pos:column="14">[<expr><name><name pos:line="27" pos:column="15">srv<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">roffset<pos:position pos:line="27" pos:column="27"/></name></name></expr>]<pos:position pos:line="27" pos:column="28"/></index></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="char" pos:line="27" pos:column="31">'\0'<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">r<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <name><name pos:line="28" pos:column="9">srv<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">request<pos:position pos:line="28" pos:column="21"/></name></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">84<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="16">DBG_DATA<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="26">Raw<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><literal type="string" pos:line="29" pos:column="30">"accumulated"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="45">srv<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">rbuf<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="56">srv<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">roffset<pos:position pos:line="29" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">r<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">==<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">NULL<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
        <comment type="block" pos:line="32" pos:column="9">/* someone spoke without being spoken to */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">debugs<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">84<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="20">DBG_IMPORTANT<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="35">"helperStatefulHandleRead: unexpected read from "<pos:position pos:line="33" pos:column="84"/></literal> <operator pos:line="33" pos:column="85">&lt;&lt;<pos:position pos:line="33" pos:column="93"/></operator>
               <name><name pos:line="34" pos:column="16">hlp<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">id_name<pos:position pos:line="34" pos:column="28"/></name></name> <operator pos:line="34" pos:column="29">&lt;&lt;<pos:position pos:line="34" pos:column="37"/></operator> <literal type="string" pos:line="34" pos:column="32">" #"<pos:position pos:line="34" pos:column="36"/></literal> <operator pos:line="34" pos:column="37">&lt;&lt;<pos:position pos:line="34" pos:column="45"/></operator> <name><name pos:line="34" pos:column="40">srv<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">index<pos:position pos:line="34" pos:column="50"/></name></name> <operator pos:line="34" pos:column="51">&lt;&lt;<pos:position pos:line="34" pos:column="59"/></operator> <literal type="string" pos:line="34" pos:column="54">", "<pos:position pos:line="34" pos:column="58"/></literal> <operator pos:line="34" pos:column="59">&lt;&lt;<pos:position pos:line="34" pos:column="67"/></operator> <operator pos:line="34" pos:column="62">(<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="63">int<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">)<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="67">len<pos:position pos:line="34" pos:column="70"/></name> <operator pos:line="34" pos:column="71">&lt;&lt;<pos:position pos:line="34" pos:column="79"/></operator>
               <literal type="string" pos:line="35" pos:column="16">" bytes '"<pos:position pos:line="35" pos:column="26"/></literal> <operator pos:line="35" pos:column="27">&lt;&lt;<pos:position pos:line="35" pos:column="35"/></operator> <name><name pos:line="35" pos:column="30">srv<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">rbuf<pos:position pos:line="35" pos:column="39"/></name></name> <operator pos:line="35" pos:column="40">&lt;&lt;<pos:position pos:line="35" pos:column="48"/></operator> <literal type="string" pos:line="35" pos:column="43">"'"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="37" pos:column="9">srv<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">roffset<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">t<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <call><name pos:line="40" pos:column="14">strchr<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">srv<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">rbuf<pos:position pos:line="40" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="32">hlp<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">eom<pos:position pos:line="40" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call><operator pos:line="40" pos:column="41">)<pos:position pos:line="40" pos:column="42"/></operator></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
        <comment type="block" pos:line="41" pos:column="9">/* end of reply found */</comment>
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">int<pos:position pos:line="42" pos:column="12"/></name></type> <name pos:line="42" pos:column="13">called<pos:position pos:line="42" pos:column="19"/></name> <init pos:line="42" pos:column="20">= <expr><literal type="number" pos:line="42" pos:column="22">1<pos:position pos:line="42" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">int<pos:position pos:line="43" pos:column="12"/></name></type> <name pos:line="43" pos:column="13">skip<pos:position pos:line="43" pos:column="17"/></name> <init pos:line="43" pos:column="18">= <expr><literal type="number" pos:line="43" pos:column="20">1<pos:position pos:line="43" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">84<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="20">3<pos:position pos:line="44" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="23">"helperStatefulHandleRead: end of reply found"<pos:position pos:line="44" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="71"/></expr_stmt>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">t<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">&gt;<pos:position pos:line="46" pos:column="19"/></operator> <name><name pos:line="46" pos:column="17">srv<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">rbuf<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">&amp;&amp;<pos:position pos:line="46" pos:column="37"/></operator> <name><name pos:line="46" pos:column="30">t<pos:position pos:line="46" pos:column="31"/></name><index pos:line="46" pos:column="31">[<expr><operator pos:line="46" pos:column="32">-<pos:position pos:line="46" pos:column="33"/></operator><literal type="number" pos:line="46" pos:column="33">1<pos:position pos:line="46" pos:column="34"/></literal></expr>]<pos:position pos:line="46" pos:column="35"/></index></name> <operator pos:line="46" pos:column="36">==<pos:position pos:line="46" pos:column="38"/></operator> <literal type="char" pos:line="46" pos:column="39">'\r'<pos:position pos:line="46" pos:column="43"/></literal> <operator pos:line="46" pos:column="44">&amp;&amp;<pos:position pos:line="46" pos:column="54"/></operator> <name><name pos:line="46" pos:column="47">hlp<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">-&gt;<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="52">eom<pos:position pos:line="46" pos:column="55"/></name></name> <operator pos:line="46" pos:column="56">==<pos:position pos:line="46" pos:column="58"/></operator> <literal type="char" pos:line="46" pos:column="59">'\n'<pos:position pos:line="46" pos:column="63"/></literal></expr>)<pos:position pos:line="46" pos:column="64"/></condition><then pos:line="46" pos:column="64"> <block pos:line="46" pos:column="65">{
            <expr_stmt><expr><operator pos:line="47" pos:column="13">*<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">t<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <literal type="char" pos:line="47" pos:column="18">'\0'<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
            <comment type="line" pos:line="48" pos:column="13">// rewind to the \r octet which is the real terminal now</comment>
            <comment type="line" pos:line="49" pos:column="13">// and remember that we have to skip forward 2 places now.</comment>
            <expr_stmt><expr><name pos:line="50" pos:column="13">skip<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="20">2<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="51" pos:column="13">--<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">t<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">t<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <literal type="char" pos:line="54" pos:column="14">'\0'<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">r<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">&amp;&amp;<pos:position pos:line="56" pos:column="25"/></operator> <call><name pos:line="56" pos:column="18">cbdataReferenceValid<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name><name pos:line="56" pos:column="39">r<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">data<pos:position pos:line="56" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48"> <block pos:line="56" pos:column="49">{
            <decl_stmt><decl><type><name><name pos:line="57" pos:column="13">Helper<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">::<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">Reply<pos:position pos:line="57" pos:column="26"/></name></name></type> <name pos:line="57" pos:column="27">res<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name><name pos:line="57" pos:column="31">srv<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">rbuf<pos:position pos:line="57" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="42">(<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="43">t<pos:position pos:line="57" pos:column="44"/></name> <operator pos:line="57" pos:column="45">-<pos:position pos:line="57" pos:column="46"/></operator> <name><name pos:line="57" pos:column="47">srv<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">-&gt;<pos:position pos:line="57" pos:column="55"/></operator><name pos:line="57" pos:column="52">rbuf<pos:position pos:line="57" pos:column="56"/></name></name><operator pos:line="57" pos:column="56">)<pos:position pos:line="57" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></decl>;<pos:position pos:line="57" pos:column="59"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">res<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">.<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">whichServer<pos:position pos:line="58" pos:column="28"/></name></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <name pos:line="58" pos:column="31">srv<pos:position pos:line="58" pos:column="34"/></name></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">r<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">callback<pos:position pos:line="59" pos:column="24"/></name></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name><name pos:line="59" pos:column="25">r<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">data<pos:position pos:line="59" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">res<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then> <else pos:line="60" pos:column="11">else <block pos:line="60" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">debugs<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="number" pos:line="61" pos:column="20">84<pos:position pos:line="61" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="24">DBG_IMPORTANT<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="39">"StatefulHandleRead: no callback data registered"<pos:position pos:line="61" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">called<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <literal type="number" pos:line="62" pos:column="22">0<pos:position pos:line="62" pos:column="23"/></literal></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></else></if>
        <comment type="line" pos:line="64" pos:column="9">// only skip off the \0's _after_ passing its location in Helper::Reply above</comment>
        <expr_stmt><expr><name pos:line="65" pos:column="9">t<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">+=<pos:position pos:line="65" pos:column="13"/></operator> <name pos:line="65" pos:column="14">skip<pos:position pos:line="65" pos:column="18"/></name></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>

        <comment type="block" format="doxygen" pos:line="67" pos:column="9">/**
         * BUG: the below assumes that only one response per read() was received and discards any octets remaining.
         *      Doing this prohibits concurrency support with multiple replies per read().
         * TODO: check that read() setup on these buffers pays attention to roffest!=0
         * TODO: check that replies bigger than the buffer are discarded and do not to affect future replies
         */</comment>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">srv<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">roffset<pos:position pos:line="73" pos:column="21"/></name></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <literal type="number" pos:line="73" pos:column="24">0<pos:position pos:line="73" pos:column="25"/></literal></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="74" pos:column="9">delete<pos:position pos:line="74" pos:column="15"/></operator> <name pos:line="74" pos:column="16">r<pos:position pos:line="74" pos:column="17"/></name></expr>;<pos:position pos:line="74" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">srv<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">-&gt;<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="14">request<pos:position pos:line="75" pos:column="21"/></name></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">NULL<pos:position pos:line="75" pos:column="28"/></name></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="77" pos:column="9">--<pos:position pos:line="77" pos:column="11"/></operator> <name><name pos:line="77" pos:column="12">srv<pos:position pos:line="77" pos:column="15"/></name><operator pos:line="77" pos:column="15">-&gt;<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="17">stats<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">.<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">pending<pos:position pos:line="77" pos:column="30"/></name></name></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="78" pos:column="9">++<pos:position pos:line="78" pos:column="11"/></operator> <name><name pos:line="78" pos:column="12">srv<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">-&gt;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="17">stats<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">.<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">replies<pos:position pos:line="78" pos:column="30"/></name></name></expr>;<pos:position pos:line="78" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="80" pos:column="9">++<pos:position pos:line="80" pos:column="11"/></operator> <name><name pos:line="80" pos:column="12">hlp<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">-&gt;<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="17">stats<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">.<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">replies<pos:position pos:line="80" pos:column="30"/></name></name></expr>;<pos:position pos:line="80" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">srv<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">answer_time<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <name pos:line="81" pos:column="28">current_time<pos:position pos:line="81" pos:column="40"/></name></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">hlp<pos:position pos:line="82" pos:column="12"/></name><operator pos:line="82" pos:column="12">-&gt;<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="14">stats<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">.<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">avg_svc_time<pos:position pos:line="82" pos:column="32"/></name></name> <operator pos:line="82" pos:column="33">=<pos:position pos:line="82" pos:column="34"/></operator>
            <call><name><name pos:line="83" pos:column="13">Math<pos:position pos:line="83" pos:column="17"/></name><operator pos:line="83" pos:column="17">::<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="19">intAverage<pos:position pos:line="83" pos:column="29"/></name></name><argument_list pos:line="83" pos:column="29">(<argument><expr><name><name pos:line="83" pos:column="30">hlp<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">-&gt;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="35">stats<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">.<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="41">avg_svc_time<pos:position pos:line="83" pos:column="53"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="84" pos:column="30">tvSubMsec<pos:position pos:line="84" pos:column="39"/></name><argument_list pos:line="84" pos:column="39">(<argument><expr><name><name pos:line="84" pos:column="40">srv<pos:position pos:line="84" pos:column="43"/></name><operator pos:line="84" pos:column="43">-&gt;<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="45">dispatch_time<pos:position pos:line="84" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="60">current_time<pos:position pos:line="84" pos:column="72"/></name></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call></expr></argument>,
                             <argument><expr><name><name pos:line="85" pos:column="30">hlp<pos:position pos:line="85" pos:column="33"/></name><operator pos:line="85" pos:column="33">-&gt;<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="35">stats<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">.<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="41">replies<pos:position pos:line="85" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="50">REDIRECT_AV_FACTOR<pos:position pos:line="85" pos:column="68"/></name></expr></argument>)<pos:position pos:line="85" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="70"/></expr_stmt>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">called<pos:position pos:line="87" pos:column="19"/></name></expr>)<pos:position pos:line="87" pos:column="20"/></condition><then pos:line="87" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="13">helperStatefulServerDone<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><name pos:line="88" pos:column="38">srv<pos:position pos:line="88" pos:column="41"/></name></expr></argument>)<pos:position pos:line="88" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="43"/></expr_stmt></block></then>
        <else pos:line="89" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="13">helperStatefulReleaseServer<pos:position pos:line="90" pos:column="40"/></name><argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">srv<pos:position pos:line="90" pos:column="44"/></name></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="46"/></expr_stmt></block></else></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><call><name><name pos:line="93" pos:column="9">Comm<pos:position pos:line="93" pos:column="13"/></name><operator pos:line="93" pos:column="13">::<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">IsConnOpen<pos:position pos:line="93" pos:column="25"/></name></name><argument_list pos:line="93" pos:column="25">(<argument><expr><name><name pos:line="93" pos:column="26">srv<pos:position pos:line="93" pos:column="29"/></name><operator pos:line="93" pos:column="29">-&gt;<pos:position pos:line="93" pos:column="34"/></operator><name pos:line="93" pos:column="31">readPipe<pos:position pos:line="93" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="40"/></argument_list></call> <operator pos:line="93" pos:column="41">&amp;&amp;<pos:position pos:line="93" pos:column="51"/></operator> <operator pos:line="93" pos:column="44">!<pos:position pos:line="93" pos:column="45"/></operator><name><name pos:line="93" pos:column="45">fd_table<pos:position pos:line="93" pos:column="53"/></name><index pos:line="93" pos:column="53">[<expr><name><name pos:line="93" pos:column="54">srv<pos:position pos:line="93" pos:column="57"/></name><operator pos:line="93" pos:column="57">-&gt;<pos:position pos:line="93" pos:column="62"/></operator><name pos:line="93" pos:column="59">readPipe<pos:position pos:line="93" pos:column="67"/></name><operator pos:line="93" pos:column="67">-&gt;<pos:position pos:line="93" pos:column="72"/></operator><name pos:line="93" pos:column="69">fd<pos:position pos:line="93" pos:column="71"/></name></name></expr>]<pos:position pos:line="93" pos:column="72"/></index></name><operator pos:line="93" pos:column="72">.<pos:position pos:line="93" pos:column="73"/></operator><call><name pos:line="93" pos:column="73">closing<pos:position pos:line="93" pos:column="80"/></name><argument_list pos:line="93" pos:column="80">()<pos:position pos:line="93" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="83"/></condition><then pos:line="93" pos:column="83"> <block pos:line="93" pos:column="84">{
        <decl_stmt><decl><type><name pos:line="94" pos:column="9">int<pos:position pos:line="94" pos:column="12"/></name></type> <name pos:line="94" pos:column="13">spaceSize<pos:position pos:line="94" pos:column="22"/></name> <init pos:line="94" pos:column="23">= <expr><name><name pos:line="94" pos:column="25">srv<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">rbuf_sz<pos:position pos:line="94" pos:column="37"/></name></name> <operator pos:line="94" pos:column="38">-<pos:position pos:line="94" pos:column="39"/></operator> <name><name pos:line="94" pos:column="40">srv<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">-&gt;<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="45">roffset<pos:position pos:line="94" pos:column="52"/></name></name> <operator pos:line="94" pos:column="53">-<pos:position pos:line="94" pos:column="54"/></operator> <literal type="number" pos:line="94" pos:column="55">1<pos:position pos:line="94" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="94" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">assert<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><name pos:line="95" pos:column="16">spaceSize<pos:position pos:line="95" pos:column="25"/></name> <operator pos:line="95" pos:column="26">&gt;=<pos:position pos:line="95" pos:column="31"/></operator> <literal type="number" pos:line="95" pos:column="29">0<pos:position pos:line="95" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="32"/></expr_stmt>

        <comment type="line" pos:line="97" pos:column="9">// grow the input buffer if needed and possible</comment>
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">spaceSize<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">&amp;&amp;<pos:position pos:line="98" pos:column="34"/></operator> <name><name pos:line="98" pos:column="27">srv<pos:position pos:line="98" pos:column="30"/></name><operator pos:line="98" pos:column="30">-&gt;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="32">rbuf_sz<pos:position pos:line="98" pos:column="39"/></name></name> <operator pos:line="98" pos:column="40">+<pos:position pos:line="98" pos:column="41"/></operator> <literal type="number" pos:line="98" pos:column="42">4096<pos:position pos:line="98" pos:column="46"/></literal> <operator pos:line="98" pos:column="47">&lt;=<pos:position pos:line="98" pos:column="52"/></operator> <name pos:line="98" pos:column="50">ReadBufMaxSize<pos:position pos:line="98" pos:column="64"/></name></expr>)<pos:position pos:line="98" pos:column="65"/></condition><then pos:line="98" pos:column="65"> <block pos:line="98" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">srv<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">rbuf<pos:position pos:line="99" pos:column="22"/></name></name> <operator pos:line="99" pos:column="23">=<pos:position pos:line="99" pos:column="24"/></operator> <operator pos:line="99" pos:column="25">(<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">char<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">*<pos:position pos:line="99" pos:column="32"/></operator><operator pos:line="99" pos:column="32">)<pos:position pos:line="99" pos:column="33"/></operator><call><name pos:line="99" pos:column="33">memReallocBuf<pos:position pos:line="99" pos:column="46"/></name><argument_list pos:line="99" pos:column="46">(<argument><expr><name><name pos:line="99" pos:column="47">srv<pos:position pos:line="99" pos:column="50"/></name><operator pos:line="99" pos:column="50">-&gt;<pos:position pos:line="99" pos:column="55"/></operator><name pos:line="99" pos:column="52">rbuf<pos:position pos:line="99" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="58">srv<pos:position pos:line="99" pos:column="61"/></name><operator pos:line="99" pos:column="61">-&gt;<pos:position pos:line="99" pos:column="66"/></operator><name pos:line="99" pos:column="63">rbuf_sz<pos:position pos:line="99" pos:column="70"/></name></name> <operator pos:line="99" pos:column="71">+<pos:position pos:line="99" pos:column="72"/></operator> <literal type="number" pos:line="99" pos:column="73">4096<pos:position pos:line="99" pos:column="77"/></literal></expr></argument>, <argument><expr><operator pos:line="99" pos:column="79">&amp;<pos:position pos:line="99" pos:column="84"/></operator><name><name pos:line="99" pos:column="80">srv<pos:position pos:line="99" pos:column="83"/></name><operator pos:line="99" pos:column="83">-&gt;<pos:position pos:line="99" pos:column="88"/></operator><name pos:line="99" pos:column="85">rbuf_sz<pos:position pos:line="99" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">debugs<pos:position pos:line="100" pos:column="19"/></name><argument_list pos:line="100" pos:column="19">(<argument><expr><literal type="number" pos:line="100" pos:column="20">84<pos:position pos:line="100" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="24">3<pos:position pos:line="100" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="27">HERE<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">&lt;&lt;<pos:position pos:line="100" pos:column="40"/></operator> <literal type="string" pos:line="100" pos:column="35">"Grew read buffer to "<pos:position pos:line="100" pos:column="57"/></literal> <operator pos:line="100" pos:column="58">&lt;&lt;<pos:position pos:line="100" pos:column="66"/></operator> <name><name pos:line="100" pos:column="61">srv<pos:position pos:line="100" pos:column="64"/></name><operator pos:line="100" pos:column="64">-&gt;<pos:position pos:line="100" pos:column="69"/></operator><name pos:line="100" pos:column="66">rbuf_sz<pos:position pos:line="100" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name pos:line="101" pos:column="13">spaceSize<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">=<pos:position pos:line="101" pos:column="24"/></operator> <name><name pos:line="101" pos:column="25">srv<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">-&gt;<pos:position pos:line="101" pos:column="33"/></operator><name pos:line="101" pos:column="30">rbuf_sz<pos:position pos:line="101" pos:column="37"/></name></name> <operator pos:line="101" pos:column="38">-<pos:position pos:line="101" pos:column="39"/></operator> <name><name pos:line="101" pos:column="40">srv<pos:position pos:line="101" pos:column="43"/></name><operator pos:line="101" pos:column="43">-&gt;<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="45">roffset<pos:position pos:line="101" pos:column="52"/></name></name> <operator pos:line="101" pos:column="53">-<pos:position pos:line="101" pos:column="54"/></operator> <literal type="number" pos:line="101" pos:column="55">1<pos:position pos:line="101" pos:column="56"/></literal></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">assert<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">(<argument><expr><name pos:line="102" pos:column="20">spaceSize<pos:position pos:line="102" pos:column="29"/></name> <operator pos:line="102" pos:column="30">&gt;=<pos:position pos:line="102" pos:column="35"/></operator> <literal type="number" pos:line="102" pos:column="33">0<pos:position pos:line="102" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="105" pos:column="9">// quit reading if there is no space left</comment>
        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><operator pos:line="106" pos:column="13">!<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">spaceSize<pos:position pos:line="106" pos:column="23"/></name></expr>)<pos:position pos:line="106" pos:column="24"/></condition><then pos:line="106" pos:column="24"> <block pos:line="106" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">debugs<pos:position pos:line="107" pos:column="19"/></name><argument_list pos:line="107" pos:column="19">(<argument><expr><literal type="number" pos:line="107" pos:column="20">84<pos:position pos:line="107" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="24">DBG_IMPORTANT<pos:position pos:line="107" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="39">"ERROR: Disconnecting from a "<pos:position pos:line="107" pos:column="69"/></literal> <operator pos:line="107" pos:column="70">&lt;&lt;<pos:position pos:line="107" pos:column="78"/></operator>
                   <literal type="string" pos:line="108" pos:column="20">"helper that overflowed "<pos:position pos:line="108" pos:column="45"/></literal> <operator pos:line="108" pos:column="46">&lt;&lt;<pos:position pos:line="108" pos:column="54"/></operator> <name><name pos:line="108" pos:column="49">srv<pos:position pos:line="108" pos:column="52"/></name><operator pos:line="108" pos:column="52">-&gt;<pos:position pos:line="108" pos:column="57"/></operator><name pos:line="108" pos:column="54">rbuf_sz<pos:position pos:line="108" pos:column="61"/></name></name> <operator pos:line="108" pos:column="62">&lt;&lt;<pos:position pos:line="108" pos:column="70"/></operator> <literal type="string" pos:line="108" pos:column="65">"-byte "<pos:position pos:line="108" pos:column="73"/></literal> <operator pos:line="108" pos:column="74">&lt;&lt;<pos:position pos:line="108" pos:column="82"/></operator>
                   <literal type="string" pos:line="109" pos:column="20">"Squid input buffer: "<pos:position pos:line="109" pos:column="42"/></literal> <operator pos:line="109" pos:column="43">&lt;&lt;<pos:position pos:line="109" pos:column="51"/></operator> <name><name pos:line="109" pos:column="46">hlp<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">-&gt;<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="51">id_name<pos:position pos:line="109" pos:column="58"/></name></name> <operator pos:line="109" pos:column="59">&lt;&lt;<pos:position pos:line="109" pos:column="67"/></operator> <literal type="string" pos:line="109" pos:column="62">" #"<pos:position pos:line="109" pos:column="66"/></literal> <operator pos:line="109" pos:column="67">&lt;&lt;<pos:position pos:line="109" pos:column="75"/></operator> <name><name pos:line="109" pos:column="70">srv<pos:position pos:line="109" pos:column="73"/></name><operator pos:line="109" pos:column="73">-&gt;<pos:position pos:line="109" pos:column="78"/></operator><name pos:line="109" pos:column="75">index<pos:position pos:line="109" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="110" pos:column="13">srv<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">-&gt;<pos:position pos:line="110" pos:column="21"/></operator><name pos:line="110" pos:column="18">closePipesSafely<pos:position pos:line="110" pos:column="34"/></name></name><argument_list pos:line="110" pos:column="34">(<argument><expr><name><name pos:line="110" pos:column="35">hlp<pos:position pos:line="110" pos:column="38"/></name><operator pos:line="110" pos:column="38">-&gt;<pos:position pos:line="110" pos:column="43"/></operator><name pos:line="110" pos:column="40">id_name<pos:position pos:line="110" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="49"/></expr_stmt>
            <return pos:line="111" pos:column="13">return;<pos:position pos:line="111" pos:column="20"/></return>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name><name pos:line="114" pos:column="9">AsyncCall<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">::<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="20">Pointer<pos:position pos:line="114" pos:column="27"/></name></name></type> <name pos:line="114" pos:column="28">call<pos:position pos:line="114" pos:column="32"/></name> <init pos:line="114" pos:column="33">= <expr><call><name pos:line="114" pos:column="35">commCbCall<pos:position pos:line="114" pos:column="45"/></name><argument_list pos:line="114" pos:column="45">(<argument><expr><literal type="number" pos:line="114" pos:column="46">5<pos:position pos:line="114" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="114" pos:column="48">4<pos:position pos:line="114" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="51">"helperStatefulHandleRead"<pos:position pos:line="114" pos:column="77"/></literal></expr></argument>,
                                             <argument><expr><call><name pos:line="115" pos:column="46">CommIoCbPtrFun<pos:position pos:line="115" pos:column="60"/></name><argument_list pos:line="115" pos:column="60">(<argument><expr><name pos:line="115" pos:column="61">helperStatefulHandleRead<pos:position pos:line="115" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="87">srv<pos:position pos:line="115" pos:column="90"/></name></expr></argument>)<pos:position pos:line="115" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="115" pos:column="93"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="116" pos:column="9">comm_read<pos:position pos:line="116" pos:column="18"/></name><argument_list pos:line="116" pos:column="18">(<argument><expr><name><name pos:line="116" pos:column="19">srv<pos:position pos:line="116" pos:column="22"/></name><operator pos:line="116" pos:column="22">-&gt;<pos:position pos:line="116" pos:column="27"/></operator><name pos:line="116" pos:column="24">readPipe<pos:position pos:line="116" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="34">srv<pos:position pos:line="116" pos:column="37"/></name><operator pos:line="116" pos:column="37">-&gt;<pos:position pos:line="116" pos:column="42"/></operator><name pos:line="116" pos:column="39">rbuf<pos:position pos:line="116" pos:column="43"/></name></name> <operator pos:line="116" pos:column="44">+<pos:position pos:line="116" pos:column="45"/></operator> <name><name pos:line="116" pos:column="46">srv<pos:position pos:line="116" pos:column="49"/></name><operator pos:line="116" pos:column="49">-&gt;<pos:position pos:line="116" pos:column="54"/></operator><name pos:line="116" pos:column="51">roffset<pos:position pos:line="116" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="60">spaceSize<pos:position pos:line="116" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="71">call<pos:position pos:line="116" pos:column="75"/></name></expr></argument>)<pos:position pos:line="116" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

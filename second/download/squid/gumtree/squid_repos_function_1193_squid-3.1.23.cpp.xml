<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1193_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">memAllocString<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">size_t<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">net_size<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">size_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">gross_size<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">MemAllocator<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">pool<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name pos:line="5" pos:column="26">NULL<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">gross_size<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">mem_str_pool_count<pos:position pos:line="8" pos:column="39"/></name></expr>;<pos:position pos:line="8" pos:column="40"/></condition> <incr><expr><name pos:line="8" pos:column="41">i<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">++<pos:position pos:line="8" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="45"/></control> <block pos:line="8" pos:column="46">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">net_size<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&lt;=<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="25">StrPoolsAttrs<pos:position pos:line="9" pos:column="38"/></name><index pos:line="9" pos:column="38">[<expr><name pos:line="9" pos:column="39">i<pos:position pos:line="9" pos:column="40"/></name></expr>]<pos:position pos:line="9" pos:column="41"/></index></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">obj_size<pos:position pos:line="9" pos:column="50"/></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51"> <block pos:line="9" pos:column="52">{
            <expr_stmt><expr><name pos:line="10" pos:column="13">pool<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name><name pos:line="10" pos:column="20">StrPools<pos:position pos:line="10" pos:column="28"/></name><index pos:line="10" pos:column="28">[<expr><name pos:line="10" pos:column="29">i<pos:position pos:line="10" pos:column="30"/></name></expr>]<pos:position pos:line="10" pos:column="31"/></index></name><operator pos:line="10" pos:column="31">.<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">pool<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
            <break pos:line="11" pos:column="13">break;<pos:position pos:line="11" pos:column="19"/></break>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">gross_size<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="15" pos:column="19">pool<pos:position pos:line="15" pos:column="23"/></name></expr> ?<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <expr><name><name pos:line="15" pos:column="26">StrPoolsAttrs<pos:position pos:line="15" pos:column="39"/></name><index pos:line="15" pos:column="39">[<expr><name pos:line="15" pos:column="40">i<pos:position pos:line="15" pos:column="41"/></name></expr>]<pos:position pos:line="15" pos:column="42"/></index></name><operator pos:line="15" pos:column="42">.<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">obj_size<pos:position pos:line="15" pos:column="51"/></name></expr> <pos:position pos:line="15" pos:column="52"/></then><else pos:line="15" pos:column="52">: <expr><name pos:line="15" pos:column="54">net_size<pos:position pos:line="15" pos:column="62"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><operator pos:line="16" pos:column="12">*<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">gross_size<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&gt;=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="27">net_size<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">memMeterInc<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">StrCountMeter<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memMeterAdd<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">StrVolumeMeter<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">gross_size<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><ternary><condition><expr><name pos:line="19" pos:column="12">pool<pos:position pos:line="19" pos:column="16"/></name></expr> ?<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <expr><call><name><name pos:line="19" pos:column="19">pool<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">alloc<pos:position pos:line="19" pos:column="30"/></name></name><argument_list pos:line="19" pos:column="30">()<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr> <pos:position pos:line="19" pos:column="33"/></then><else pos:line="19" pos:column="33">: <expr><call><name pos:line="19" pos:column="35">xcalloc<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><literal type="number" pos:line="19" pos:column="43">1<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">net_size<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="56"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

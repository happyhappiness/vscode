<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_176_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hex_dump<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">data<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">size<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* dumps size bytes of *data to stdout. Looks like:
     * [0000] 75 6E 6B 6E 6F 77 6E 20
     *                  30 FF 00 00 00 00 39 00 unknown 0.....9.
     * (in a single line of course)
     */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">data<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">debug_enabled<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">unsigned<pos:position pos:line="13" pos:column="17"/></name> <name pos:line="13" pos:column="18">char<pos:position pos:line="13" pos:column="22"/></name> <modifier pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></modifier></type><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><name pos:line="13" pos:column="28">data<pos:position pos:line="13" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">unsigned<pos:position pos:line="14" pos:column="17"/></name> <name pos:line="14" pos:column="18">char<pos:position pos:line="14" pos:column="22"/></name></type> <name pos:line="14" pos:column="23">c<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">n<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name></type> <name><name pos:line="16" pos:column="14">bytestr<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><literal type="number" pos:line="16" pos:column="22">4<pos:position pos:line="16" pos:column="23"/></literal></expr>]<pos:position pos:line="16" pos:column="24"/></index></name> <init pos:line="16" pos:column="25">= <expr><block pos:line="16" pos:column="27">{<expr><literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>}<pos:position pos:line="16" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="16" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name><name pos:line="17" pos:column="14">addrstr<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><literal type="number" pos:line="17" pos:column="22">10<pos:position pos:line="17" pos:column="24"/></literal></expr>]<pos:position pos:line="17" pos:column="25"/></index></name> <init pos:line="17" pos:column="26">= <expr><block pos:line="17" pos:column="28">{<expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal></expr>}<pos:position pos:line="17" pos:column="31"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name></type> <name><name pos:line="18" pos:column="14">hexstr<pos:position pos:line="18" pos:column="20"/></name><index pos:line="18" pos:column="20">[ <expr><literal type="number" pos:line="18" pos:column="22">16<pos:position pos:line="18" pos:column="24"/></literal><operator pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">3<pos:position pos:line="18" pos:column="26"/></literal> <operator pos:line="18" pos:column="27">+<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="29">5<pos:position pos:line="18" pos:column="30"/></literal></expr>]<pos:position pos:line="18" pos:column="31"/></index></name> <init pos:line="18" pos:column="32">= <expr><block pos:line="18" pos:column="34">{<expr><literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr>}<pos:position pos:line="18" pos:column="37"/></block></expr></init></decl>;<pos:position pos:line="18" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name></type> <name><name pos:line="19" pos:column="14">charstr<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><literal type="number" pos:line="19" pos:column="22">16<pos:position pos:line="19" pos:column="24"/></literal><operator pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal> <operator pos:line="19" pos:column="27">+<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">5<pos:position pos:line="19" pos:column="30"/></literal></expr>]<pos:position pos:line="19" pos:column="31"/></index></name> <init pos:line="19" pos:column="32">= <expr><block pos:line="19" pos:column="34">{<expr><literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>}<pos:position pos:line="19" pos:column="37"/></block></expr></init></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">n<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></init> <condition><expr><name pos:line="20" pos:column="19">n<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">&lt;=<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">size<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></condition> <incr><expr><name pos:line="20" pos:column="28">n<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">++<pos:position pos:line="20" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="32"/></control> <block pos:line="20" pos:column="33">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">n<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">%<pos:position pos:line="21" pos:column="19"/></operator><literal type="number" pos:line="21" pos:column="19">16<pos:position pos:line="21" pos:column="21"/></literal> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
                <comment type="block" pos:line="22" pos:column="17">/* store address for this line */</comment>
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">snprintf<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">addrstr<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="35">sizeof<argument_list pos:line="23" pos:column="41">(<argument><expr><name pos:line="23" pos:column="42">addrstr<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="52">"%.4x"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>,
                         <argument><expr><operator pos:line="24" pos:column="26">(<pos:position pos:line="24" pos:column="27"/></operator><operator pos:line="24" pos:column="27">(<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">unsigned<pos:position pos:line="24" pos:column="36"/></name> <name pos:line="24" pos:column="37">int<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">p<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-<pos:position pos:line="24" pos:column="43"/></operator><operator pos:line="24" pos:column="43">(<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="44">unsigned<pos:position pos:line="24" pos:column="52"/></name> <name pos:line="24" pos:column="53">int<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">)<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">data<pos:position pos:line="24" pos:column="61"/></name><operator pos:line="24" pos:column="61">)<pos:position pos:line="24" pos:column="62"/></operator></expr></argument> )<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="27" pos:column="13">c<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">p<pos:position pos:line="27" pos:column="19"/></name></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><call><name pos:line="28" pos:column="17">xisalnum<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">c<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <literal type="number" pos:line="28" pos:column="32">0<pos:position pos:line="28" pos:column="33"/></literal></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <block pos:line="28" pos:column="35">{
                <expr_stmt><expr><name pos:line="29" pos:column="17">c<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="char" pos:line="29" pos:column="21">'.'<pos:position pos:line="29" pos:column="24"/></literal></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="32" pos:column="13">/* store hex str (for left side) */</comment>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">snprintf<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">bytestr<pos:position pos:line="33" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="31">sizeof<argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">bytestr<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="48">"%02X "<pos:position pos:line="33" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="57">*<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="58">p<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">strncat<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">hexstr<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="29">bytestr<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="38">sizeof<argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">hexstr<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></sizeof><operator pos:line="34" pos:column="52">-<pos:position pos:line="34" pos:column="53"/></operator><call><name pos:line="34" pos:column="53">strlen<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><name pos:line="34" pos:column="60">hexstr<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call><operator pos:line="34" pos:column="67">-<pos:position pos:line="34" pos:column="68"/></operator><literal type="number" pos:line="34" pos:column="68">1<pos:position pos:line="34" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>

            <comment type="block" pos:line="36" pos:column="13">/* store char str (for right side) */</comment>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">snprintf<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">bytestr<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="31">sizeof<argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">bytestr<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="48">"%c"<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">c<pos:position pos:line="37" pos:column="55"/></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">strncat<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">charstr<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="30">bytestr<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="39">sizeof<argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">charstr<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></sizeof><operator pos:line="38" pos:column="54">-<pos:position pos:line="38" pos:column="55"/></operator><call><name pos:line="38" pos:column="55">strlen<pos:position pos:line="38" pos:column="61"/></name><argument_list pos:line="38" pos:column="61">(<argument><expr><name pos:line="38" pos:column="62">charstr<pos:position pos:line="38" pos:column="69"/></name></expr></argument>)<pos:position pos:line="38" pos:column="70"/></argument_list></call><operator pos:line="38" pos:column="70">-<pos:position pos:line="38" pos:column="71"/></operator><literal type="number" pos:line="38" pos:column="71">1<pos:position pos:line="38" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>

            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">n<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">%<pos:position pos:line="40" pos:column="19"/></operator><literal type="number" pos:line="40" pos:column="19">16<pos:position pos:line="40" pos:column="21"/></literal> <operator pos:line="40" pos:column="22">==<pos:position pos:line="40" pos:column="24"/></operator> <literal type="number" pos:line="40" pos:column="25">0<pos:position pos:line="40" pos:column="26"/></literal></expr>)<pos:position pos:line="40" pos:column="27"/></condition><then pos:line="40" pos:column="27"> <block pos:line="40" pos:column="28">{
                <comment type="block" pos:line="41" pos:column="17">/* line completed */</comment>
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">fprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">stderr<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="33">"[%4.4s]   %-50.50s  %s\n"<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="61">addrstr<pos:position pos:line="42" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="70">hexstr<pos:position pos:line="42" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="78">charstr<pos:position pos:line="42" pos:column="85"/></name></expr></argument>)<pos:position pos:line="42" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="87"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="43" pos:column="17">hexstr<pos:position pos:line="43" pos:column="23"/></name><index pos:line="43" pos:column="23">[<expr><literal type="number" pos:line="43" pos:column="24">0<pos:position pos:line="43" pos:column="25"/></literal></expr>]<pos:position pos:line="43" pos:column="26"/></index></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <literal type="number" pos:line="43" pos:column="29">0<pos:position pos:line="43" pos:column="30"/></literal></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="44" pos:column="17">charstr<pos:position pos:line="44" pos:column="24"/></name><index pos:line="44" pos:column="24">[<expr><literal type="number" pos:line="44" pos:column="25">0<pos:position pos:line="44" pos:column="26"/></literal></expr>]<pos:position pos:line="44" pos:column="27"/></index></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <literal type="number" pos:line="44" pos:column="30">0<pos:position pos:line="44" pos:column="31"/></literal></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></then> <elseif pos:line="45" pos:column="15">else <if pos:line="45" pos:column="20">if <condition pos:line="45" pos:column="23">(<expr><name pos:line="45" pos:column="24">n<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">%<pos:position pos:line="45" pos:column="26"/></operator><literal type="number" pos:line="45" pos:column="26">8<pos:position pos:line="45" pos:column="27"/></literal> <operator pos:line="45" pos:column="28">==<pos:position pos:line="45" pos:column="30"/></operator> <literal type="number" pos:line="45" pos:column="31">0<pos:position pos:line="45" pos:column="32"/></literal></expr>)<pos:position pos:line="45" pos:column="33"/></condition><then pos:line="45" pos:column="33"> <block pos:line="45" pos:column="34">{
                <comment type="block" pos:line="46" pos:column="17">/* half line: add whitespaces */</comment>
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">strncat<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">hexstr<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="33">"  "<pos:position pos:line="47" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="39">sizeof<argument_list pos:line="47" pos:column="45">(<argument><expr><name pos:line="47" pos:column="46">hexstr<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></sizeof><operator pos:line="47" pos:column="53">-<pos:position pos:line="47" pos:column="54"/></operator><call><name pos:line="47" pos:column="54">strlen<pos:position pos:line="47" pos:column="60"/></name><argument_list pos:line="47" pos:column="60">(<argument><expr><name pos:line="47" pos:column="61">hexstr<pos:position pos:line="47" pos:column="67"/></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call><operator pos:line="47" pos:column="68">-<pos:position pos:line="47" pos:column="69"/></operator><literal type="number" pos:line="47" pos:column="69">1<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">strncat<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">charstr<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="34">" "<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="39">sizeof<argument_list pos:line="48" pos:column="45">(<argument><expr><name pos:line="48" pos:column="46">charstr<pos:position pos:line="48" pos:column="53"/></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></sizeof><operator pos:line="48" pos:column="54">-<pos:position pos:line="48" pos:column="55"/></operator><call><name pos:line="48" pos:column="55">strlen<pos:position pos:line="48" pos:column="61"/></name><argument_list pos:line="48" pos:column="61">(<argument><expr><name pos:line="48" pos:column="62">charstr<pos:position pos:line="48" pos:column="69"/></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call><operator pos:line="48" pos:column="70">-<pos:position pos:line="48" pos:column="71"/></operator><literal type="number" pos:line="48" pos:column="71">1<pos:position pos:line="48" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="50" pos:column="13">p<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">++<pos:position pos:line="50" pos:column="16"/></operator></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt> <comment type="block" pos:line="50" pos:column="18">/* next byte */</comment>
        }<pos:position pos:line="51" pos:column="10"/></block></for>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">strlen<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">hexstr<pos:position pos:line="53" pos:column="26"/></name></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call> <operator pos:line="53" pos:column="28">&gt;<pos:position pos:line="53" pos:column="32"/></operator> <literal type="number" pos:line="53" pos:column="30">0<pos:position pos:line="53" pos:column="31"/></literal></expr>)<pos:position pos:line="53" pos:column="32"/></condition><then pos:line="53" pos:column="32"> <block pos:line="53" pos:column="33">{
            <comment type="block" pos:line="54" pos:column="13">/* print rest of buffer if not empty */</comment>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">fprintf<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">stderr<pos:position pos:line="55" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="29">"[%4.4s]   %-50.50s  %s\n"<pos:position pos:line="55" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">addrstr<pos:position pos:line="55" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="66">hexstr<pos:position pos:line="55" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="74">charstr<pos:position pos:line="55" pos:column="81"/></name></expr></argument>)<pos:position pos:line="55" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="83"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

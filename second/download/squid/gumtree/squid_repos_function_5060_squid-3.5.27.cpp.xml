<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5060_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Server<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">handleReply<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">HttpReply<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">rep<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">StoreIOBuffer<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">receivedData<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// the caller guarantees that we are dealing with the current context only</comment>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">ClientSocketContext<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">::<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">Pointer<pos:position pos:line="5" pos:column="33"/></name></name></type> <name pos:line="5" pos:column="34">context<pos:position pos:line="5" pos:column="41"/></name> <init pos:line="5" pos:column="42">= <expr><call><name pos:line="5" pos:column="44">getCurrentContext<pos:position pos:line="5" pos:column="61"/></name><argument_list pos:line="5" pos:column="61">()<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">context<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">!=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">ClientHttpRequest<pos:position pos:line="7" pos:column="28"/></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">http<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name><name pos:line="7" pos:column="37">context<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">http<pos:position pos:line="7" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">http<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">!=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>

    <comment type="line" pos:line="10" pos:column="5">// After sending Transfer-Encoding: chunked (at least), always send</comment>
    <comment type="line" pos:line="11" pos:column="5">// the last-chunk if there was no error, ignoring responseFinishedOrFailed.</comment>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">bool<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">mustSendLastChunk<pos:position pos:line="12" pos:column="33"/></name> <init pos:line="12" pos:column="34">= <expr><name><name pos:line="12" pos:column="36">http<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">request<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">flags<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">.<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="57">chunkedReply<pos:position pos:line="12" pos:column="69"/></name></name> <operator pos:line="12" pos:column="70">&amp;&amp;<pos:position pos:line="12" pos:column="80"/></operator>
                                   <operator pos:line="13" pos:column="36">!<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="37">http<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">request<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">flags<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">.<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="58">streamError<pos:position pos:line="13" pos:column="69"/></name></name> <operator pos:line="13" pos:column="70">&amp;&amp;<pos:position pos:line="13" pos:column="80"/></operator>
                                   <operator pos:line="14" pos:column="36">!<pos:position pos:line="14" pos:column="37"/></operator><call><name pos:line="14" pos:column="37">EBIT_TEST<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">(<argument><expr><call><name><name pos:line="14" pos:column="47">http<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">-&gt;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="53">storeEntry<pos:position pos:line="14" pos:column="63"/></name></name><argument_list pos:line="14" pos:column="63">()<pos:position pos:line="14" pos:column="65"/></argument_list></call><operator pos:line="14" pos:column="65">-&gt;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="67">flags<pos:position pos:line="14" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="74">ENTRY_BAD_LENGTH<pos:position pos:line="14" pos:column="90"/></name></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call> <operator pos:line="14" pos:column="92">&amp;&amp;<pos:position pos:line="14" pos:column="102"/></operator>
                                   <operator pos:line="15" pos:column="36">!<pos:position pos:line="15" pos:column="37"/></operator><call><name><name pos:line="15" pos:column="37">context<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">startOfOutput<pos:position pos:line="15" pos:column="59"/></name></name><argument_list pos:line="15" pos:column="59">()<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">bool<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">responseFinishedOrFailed<pos:position pos:line="16" pos:column="40"/></name> <init pos:line="16" pos:column="41">= <expr><operator pos:line="16" pos:column="43">!<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">rep<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">&amp;&amp;<pos:position pos:line="16" pos:column="58"/></operator>
                                          <operator pos:line="17" pos:column="43">!<pos:position pos:line="17" pos:column="44"/></operator><name><name pos:line="17" pos:column="44">receivedData<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">data<pos:position pos:line="17" pos:column="61"/></name></name> <operator pos:line="17" pos:column="62">&amp;&amp;<pos:position pos:line="17" pos:column="72"/></operator>
                                          <operator pos:line="18" pos:column="43">!<pos:position pos:line="18" pos:column="44"/></operator><name><name pos:line="18" pos:column="44">receivedData<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">length<pos:position pos:line="18" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="64"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">responseFinishedOrFailed<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">&amp;&amp;<pos:position pos:line="19" pos:column="44"/></operator> <operator pos:line="19" pos:column="37">!<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">mustSendLastChunk<pos:position pos:line="19" pos:column="55"/></name></expr>)<pos:position pos:line="19" pos:column="56"/></condition><then pos:line="19" pos:column="56"> <block pos:line="19" pos:column="57">{
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">context<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">writeComplete<pos:position pos:line="20" pos:column="31"/></name></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">context<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">clientConnection<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">NULL<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="65">0<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="68">Comm<pos:position pos:line="20" pos:column="72"/></name><operator pos:line="20" pos:column="72">::<pos:position pos:line="20" pos:column="74"/></operator><name pos:line="20" pos:column="74">OK<pos:position pos:line="20" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name><name pos:line="24" pos:column="10">context<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">startOfOutput<pos:position pos:line="24" pos:column="32"/></name></name><argument_list pos:line="24" pos:column="32">()<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">context<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">sendBody<pos:position pos:line="25" pos:column="26"/></name></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">rep<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">receivedData<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">assert<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">rep<pos:position pos:line="29" pos:column="15"/></name></expr></argument>)<pos:position pos:line="29" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">http<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">al<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">reply<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">rep<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">HTTPMSGLOCK<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name><name pos:line="31" pos:column="17">http<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">al<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">reply<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">context<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">sendStartOfMessage<pos:position pos:line="32" pos:column="32"/></name></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">rep<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">receivedData<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1377_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">String<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">stat<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">StoreEntry<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">entry<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list> <specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">entry<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="30">"%p : %d/%d \"%.*s\"\n"<pos:position pos:line="4" pos:column="53"/></literal></expr></argument>,<argument><expr><name pos:line="4" pos:column="54">this<pos:position pos:line="4" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="59">len_<pos:position pos:line="4" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="65">size_<pos:position pos:line="4" pos:column="70"/></name></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="72">size<pos:position pos:line="4" pos:column="76"/></name><argument_list pos:line="4" pos:column="76">()<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="80">rawBuf<pos:position pos:line="4" pos:column="86"/></name><argument_list pos:line="4" pos:column="86">()<pos:position pos:line="4" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="90"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

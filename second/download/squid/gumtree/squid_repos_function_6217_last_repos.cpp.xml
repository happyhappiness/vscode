<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6217_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TcpLogger<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">canFit<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">len<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// TODO: limit reporting frequency in addition to reporting only changes</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">bufferedSize<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">+<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&lt;=<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="29">bufferCapacity<pos:position pos:line="6" pos:column="43"/></name></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44"> <block pos:line="6" pos:column="45">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">drops<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
            <comment type="line" pos:line="8" pos:column="13">// We can get here if a shorter record accidentally fits after we</comment>
            <comment type="line" pos:line="9" pos:column="13">// started dropping records. When that happens, the following</comment>
            <comment type="line" pos:line="10" pos:column="13">// DBG_IMPORTANT message will mislead admin into thinking that</comment>
            <comment type="line" pos:line="11" pos:column="13">// the problem was resolved (for a brief period of time, until</comment>
            <comment type="line" pos:line="12" pos:column="13">// another record comes in and overflows the buffer). It is</comment>
            <comment type="line" pos:line="13" pos:column="13">// difficult to prevent this without also creating the opposite</comment>
            <comment type="line" pos:line="14" pos:column="13">// problem: A huge record that does not fit and is dropped blocks</comment>
            <comment type="line" pos:line="15" pos:column="13">// subsequent regular records from being buffered until we write.</comment>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debugs<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">MY_DEBUG_SECTION<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">DBG_IMPORTANT<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="53">"tcp:"<pos:position pos:line="16" pos:column="59"/></literal> <operator pos:line="16" pos:column="60">&lt;&lt;<pos:position pos:line="16" pos:column="68"/></operator> <name pos:line="16" pos:column="63">remote<pos:position pos:line="16" pos:column="69"/></name> <operator pos:line="16" pos:column="70">&lt;&lt;<pos:position pos:line="16" pos:column="78"/></operator>
                   <literal type="string" pos:line="17" pos:column="20">" logger stops dropping records after "<pos:position pos:line="17" pos:column="59"/></literal> <operator pos:line="17" pos:column="60">&lt;&lt;<pos:position pos:line="17" pos:column="68"/></operator> <name pos:line="17" pos:column="63">drops<pos:position pos:line="17" pos:column="68"/></name> <operator pos:line="17" pos:column="69">&lt;&lt;<pos:position pos:line="17" pos:column="77"/></operator> <literal type="string" pos:line="17" pos:column="72">" drops"<pos:position pos:line="17" pos:column="80"/></literal> <operator pos:line="17" pos:column="81">&lt;&lt;<pos:position pos:line="17" pos:column="89"/></operator>
                   <literal type="string" pos:line="18" pos:column="20">"; current buffer use: "<pos:position pos:line="18" pos:column="44"/></literal> <operator pos:line="18" pos:column="45">&lt;&lt;<pos:position pos:line="18" pos:column="53"/></operator> <operator pos:line="18" pos:column="48">(<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">bufferedSize<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">+<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="62">len<pos:position pos:line="18" pos:column="65"/></name><operator pos:line="18" pos:column="65">)<pos:position pos:line="18" pos:column="66"/></operator> <operator pos:line="18" pos:column="67">&lt;&lt;<pos:position pos:line="18" pos:column="75"/></operator>
                   <literal type="string" pos:line="19" pos:column="20">" out of "<pos:position pos:line="19" pos:column="30"/></literal> <operator pos:line="19" pos:column="31">&lt;&lt;<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="34">bufferCapacity<pos:position pos:line="19" pos:column="48"/></name> <operator pos:line="19" pos:column="49">&lt;&lt;<pos:position pos:line="19" pos:column="57"/></operator> <literal type="string" pos:line="19" pos:column="52">" bytes"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <return pos:line="21" pos:column="9">return <expr><literal type="boolean" pos:line="21" pos:column="16">true<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">drops<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">||<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">dieOnError<pos:position pos:line="24" pos:column="29"/></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30"> <block pos:line="24" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">MY_DEBUG_SECTION<pos:position pos:line="25" pos:column="32"/></name></expr></argument>,
               <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="16">dieOnError<pos:position pos:line="26" pos:column="26"/></name></expr> ?<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <expr><name pos:line="26" pos:column="29">DBG_CRITICAL<pos:position pos:line="26" pos:column="41"/></name></expr> <pos:position pos:line="26" pos:column="42"/></then><else pos:line="26" pos:column="42">: <expr><name pos:line="26" pos:column="44">DBG_IMPORTANT<pos:position pos:line="26" pos:column="57"/></name></expr></else></ternary></expr></argument>,
               <argument><expr><literal type="string" pos:line="27" pos:column="16">"tcp:"<pos:position pos:line="27" pos:column="22"/></literal> <operator pos:line="27" pos:column="23">&lt;&lt;<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="26">remote<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">&lt;&lt;<pos:position pos:line="27" pos:column="41"/></operator> <literal type="string" pos:line="27" pos:column="36">" logger "<pos:position pos:line="27" pos:column="46"/></literal> <operator pos:line="27" pos:column="47">&lt;&lt;<pos:position pos:line="27" pos:column="55"/></operator> <name pos:line="27" pos:column="50">bufferCapacity<pos:position pos:line="27" pos:column="64"/></name> <operator pos:line="27" pos:column="65">&lt;&lt;<pos:position pos:line="27" pos:column="73"/></operator> <literal type="string" pos:line="27" pos:column="68">"-byte "<pos:position pos:line="27" pos:column="76"/></literal> <operator pos:line="27" pos:column="77">&lt;&lt;<pos:position pos:line="27" pos:column="85"/></operator>
               <literal type="string" pos:line="28" pos:column="16">"buffer overflowed; cannot fit "<pos:position pos:line="28" pos:column="48"/></literal> <operator pos:line="28" pos:column="49">&lt;&lt;<pos:position pos:line="28" pos:column="57"/></operator>
               <operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">bufferedSize<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">+<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">len<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">bufferCapacity<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">)<pos:position pos:line="29" pos:column="49"/></operator> <operator pos:line="29" pos:column="50">&lt;&lt;<pos:position pos:line="29" pos:column="58"/></operator> <literal type="string" pos:line="29" pos:column="53">" bytes"<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">dieOnError<pos:position pos:line="32" pos:column="19"/></name></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">fatal<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><literal type="string" pos:line="33" pos:column="15">"tcp logger buffer overflowed"<pos:position pos:line="33" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">drops<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">MY_DEBUG_SECTION<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">DBG_IMPORTANT<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="49">"tcp:"<pos:position pos:line="36" pos:column="55"/></literal> <operator pos:line="36" pos:column="56">&lt;&lt;<pos:position pos:line="36" pos:column="64"/></operator> <name pos:line="36" pos:column="59">remote<pos:position pos:line="36" pos:column="65"/></name> <operator pos:line="36" pos:column="66">&lt;&lt;<pos:position pos:line="36" pos:column="74"/></operator>
               <literal type="string" pos:line="37" pos:column="16">" logger starts dropping records."<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <return pos:line="40" pos:column="5">return <expr><literal type="boolean" pos:line="40" pos:column="12">false<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1431_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBuf<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">&amp;<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">assign<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">S<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">size_type<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">n<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">Locker<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">blobKeeper<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">this<pos:position pos:line="4" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="35">S<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">24<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">6<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">id<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">&lt;&lt;<pos:position pos:line="5" pos:column="30"/></operator> <literal type="string" pos:line="5" pos:column="25">" from c-string, n="<pos:position pos:line="5" pos:column="45"/></literal> <operator pos:line="5" pos:column="46">&lt;&lt;<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="49">n<pos:position pos:line="5" pos:column="50"/></name> <operator pos:line="5" pos:column="51">&lt;&lt;<pos:position pos:line="5" pos:column="59"/></operator> <literal type="string" pos:line="5" pos:column="54">")"<pos:position pos:line="5" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">clear<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">()<pos:position pos:line="6" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="13"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">append<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">S<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="22">n<pos:position pos:line="7" pos:column="23"/></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></return> <comment type="line" pos:line="7" pos:column="26">//bounds checked in append()</comment>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

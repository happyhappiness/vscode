<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5392_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">Ftp<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">MasterState<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">&amp;<pos:position pos:line="1" pos:column="29"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Relay<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">master<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><cast type="const" pos:line="4" pos:column="12">const_cast<argument_list type="generic" pos:line="4" pos:column="22">&lt;<argument><expr><name><name pos:line="4" pos:column="23">Ftp<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">::<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">Relay<pos:position pos:line="4" pos:column="33"/></name></name><operator pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="38"/></argument_list><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">this<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></cast><operator pos:line="4" pos:column="41">-&gt;<pos:position pos:line="4" pos:column="46"/></operator><call><name pos:line="4" pos:column="43">updateMaster<pos:position pos:line="4" pos:column="55"/></name><argument_list pos:line="4" pos:column="55">()<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></return> <comment type="line" pos:line="4" pos:column="59">// avoid code dupe</comment>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

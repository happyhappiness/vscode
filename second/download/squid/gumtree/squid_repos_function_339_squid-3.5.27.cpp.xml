<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_339_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">sort<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name><name pos:line="2" pos:column="6">struct<pos:position pos:line="2" pos:column="12"/></name> <name pos:line="2" pos:column="13">hstruct<pos:position pos:line="2" pos:column="20"/></name></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">array<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">nitems<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> (<modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><name pos:line="2" pos:column="47">cmp<pos:position pos:line="2" pos:column="50"/></name>) <parameter_list pos:line="2" pos:column="52">(<parameter><decl><type><name><name pos:line="2" pos:column="53">struct<pos:position pos:line="2" pos:column="59"/></name> <name pos:line="2" pos:column="60">hstruct<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="71">struct<pos:position pos:line="2" pos:column="77"/></name> <name pos:line="2" pos:column="78">hstruct<pos:position pos:line="2" pos:column="85"/></name></name> <modifier pos:line="2" pos:column="86">*<pos:position pos:line="2" pos:column="87"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="88"/></parameter_list></function_decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="90">int<pos:position pos:line="2" pos:column="93"/></name></type> <name pos:line="2" pos:column="94">begin<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="101">int<pos:position pos:line="2" pos:column="104"/></name></type> <name pos:line="2" pos:column="105">end<pos:position pos:line="2" pos:column="108"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="109"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">end<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">&gt;<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="15">begin<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">l<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name pos:line="5" pos:column="17">begin<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">+<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="25">1<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">r<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">end<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
        <while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">l<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&lt;<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="20">r<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition> <block pos:line="7" pos:column="23">{
            <decl_stmt><decl><type><name pos:line="8" pos:column="13">int<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">pivot<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">begin<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><call><name pos:line="9" pos:column="17">cmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name><name pos:line="9" pos:column="22">array<pos:position pos:line="9" pos:column="27"/></name><index pos:line="9" pos:column="27">[<expr><name pos:line="9" pos:column="28">l<pos:position pos:line="9" pos:column="29"/></name></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="32">&amp;<pos:position pos:line="9" pos:column="37"/></operator><name><name pos:line="9" pos:column="33">array<pos:position pos:line="9" pos:column="38"/></name><index pos:line="9" pos:column="38">[<expr><name pos:line="9" pos:column="39">pivot<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call> <operator pos:line="9" pos:column="47">&lt;=<pos:position pos:line="9" pos:column="52"/></operator> <literal type="number" pos:line="9" pos:column="50">0<pos:position pos:line="9" pos:column="51"/></literal></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52"> <block pos:line="9" pos:column="53">{
                <expr_stmt><expr><name pos:line="10" pos:column="17">l<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">+=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="11" pos:column="14"/></block></then> <else pos:line="11" pos:column="15">else <block pos:line="11" pos:column="20">{
                <expr_stmt><expr><name pos:line="12" pos:column="17">r<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">-=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="22">1<pos:position pos:line="12" pos:column="23"/></literal></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">swap<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">&amp;<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="23">array<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><name pos:line="13" pos:column="29">l<pos:position pos:line="13" pos:column="30"/></name></expr>]<pos:position pos:line="13" pos:column="31"/></index></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name><name pos:line="13" pos:column="34">array<pos:position pos:line="13" pos:column="39"/></name><index pos:line="13" pos:column="39">[<expr><name pos:line="13" pos:column="40">r<pos:position pos:line="13" pos:column="41"/></name></expr>]<pos:position pos:line="13" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></else></if>
        }<pos:position pos:line="15" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="16" pos:column="9">l<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">-=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">swap<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><operator pos:line="17" pos:column="14">&amp;<pos:position pos:line="17" pos:column="19"/></operator><name><name pos:line="17" pos:column="15">array<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><name pos:line="17" pos:column="21">begin<pos:position pos:line="17" pos:column="26"/></name></expr>]<pos:position pos:line="17" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="29">&amp;<pos:position pos:line="17" pos:column="34"/></operator><name><name pos:line="17" pos:column="30">array<pos:position pos:line="17" pos:column="35"/></name><index pos:line="17" pos:column="35">[<expr><name pos:line="17" pos:column="36">l<pos:position pos:line="17" pos:column="37"/></name></expr>]<pos:position pos:line="17" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">sort<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">array<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="21">nitems<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">cmp<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">begin<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">l<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">sort<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">array<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="21">nitems<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">cmp<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">r<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">end<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

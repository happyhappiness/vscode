<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2855_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">removeConnectionHeaderEntries<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">()<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">has<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">HDR_CONNECTION<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <comment type="block" pos:line="5" pos:column="9">/* anything that matches Connection list member will be deleted */</comment>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">String<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">strConnection<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

        <expr_stmt><expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">void<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">getList<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">HDR_CONNECTION<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="40">&amp;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="41">strConnection<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">HttpHeaderEntry<pos:position pos:line="9" pos:column="30"/></name> <modifier pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></modifier></type><name pos:line="9" pos:column="32">e<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">HttpHeaderPos<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">pos<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><name pos:line="10" pos:column="29">HttpHeaderInitPos<pos:position pos:line="10" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
        <comment type="block" pos:line="11" pos:column="9">/*
         * think: on-average-best nesting of the two loops (hdrEntry
         * and strListItem) @?@
         */</comment>
        <comment type="block" pos:line="15" pos:column="9">/*
         * maybe we should delete standard stuff ("keep-alive","close")
         * from strConnection first?
         */</comment>

        <decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">headers_deleted<pos:position pos:line="20" pos:column="28"/></name> <init pos:line="20" pos:column="29">= <expr><literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>
        <while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">e<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">getEntry<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="31">pos<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator></expr>)<pos:position pos:line="21" pos:column="37"/></condition> <block pos:line="21" pos:column="38">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><call><name pos:line="22" pos:column="17">strListIsMember<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">strConnection<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><call><name><name pos:line="22" pos:column="49">e<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">name<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">.<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="57">termedBuf<pos:position pos:line="22" pos:column="66"/></name></name><argument_list pos:line="22" pos:column="66">()<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="70">','<pos:position pos:line="22" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="75"/></condition><then pos:line="22" pos:column="75">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">delAt<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">pos<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">headers_deleted<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></while>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">headers_deleted<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">refreshMask<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">()<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3341_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">clientHttpRequestStatus<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">fd<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">ClientHttpRequest<pos:position pos:line="2" pos:column="50"/></name> <specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">http<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">SIZEOF_INT64_T<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">==<pos:position pos:line="4" pos:column="22"/></operator> <literal type="number" pos:line="4" pos:column="23">4<pos:position pos:line="4" pos:column="24"/></literal></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">http<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">out<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">size<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">&gt;<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="26">0x7FFF0000<pos:position pos:line="5" pos:column="36"/></literal></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <block pos:line="5" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">88<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"WARNING: closing FD "<pos:position pos:line="6" pos:column="45"/></literal> <operator pos:line="6" pos:column="46">&lt;&lt;<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="49">fd<pos:position pos:line="6" pos:column="51"/></name> <operator pos:line="6" pos:column="52">&lt;&lt;<pos:position pos:line="6" pos:column="60"/></operator> <literal type="string" pos:line="6" pos:column="55">" to prevent out.size counter overflow"<pos:position pos:line="6" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">88<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"\tclient "<pos:position pos:line="7" pos:column="34"/></literal> <operator pos:line="7" pos:column="35">&lt;&lt;<pos:position pos:line="7" pos:column="43"/></operator> <call><name><name pos:line="7" pos:column="38">http<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="44">getConn<pos:position pos:line="7" pos:column="51"/></name></name><argument_list pos:line="7" pos:column="51">()<pos:position pos:line="7" pos:column="53"/></argument_list></call><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">peer<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">88<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">1<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"\treceived "<pos:position pos:line="8" pos:column="36"/></literal> <operator pos:line="8" pos:column="37">&lt;&lt;<pos:position pos:line="8" pos:column="45"/></operator> <name><name pos:line="8" pos:column="40">http<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">out<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">.<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">size<pos:position pos:line="8" pos:column="54"/></name></name> <operator pos:line="8" pos:column="55">&lt;&lt;<pos:position pos:line="8" pos:column="63"/></operator> <literal type="string" pos:line="8" pos:column="58">" bytes"<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">88<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"\tURI "<pos:position pos:line="9" pos:column="31"/></literal> <operator pos:line="9" pos:column="32">&lt;&lt;<pos:position pos:line="9" pos:column="40"/></operator> <name><name pos:line="9" pos:column="35">http<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">log_uri<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">SIZEOF_INT64_T<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="23">4<pos:position pos:line="14" pos:column="24"/></literal></expr></cpp:if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">http<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">out<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">offset<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">&gt;<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="28">0x7FFF0000<pos:position pos:line="15" pos:column="38"/></literal></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <block pos:line="15" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">88<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"WARNING: closing FD "<pos:position pos:line="16" pos:column="45"/></literal> <operator pos:line="16" pos:column="46">&lt;&lt;<pos:position pos:line="16" pos:column="54"/></operator> <name pos:line="16" pos:column="49">fd<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">&lt;<pos:position pos:line="16" pos:column="56"/></operator> <literal type="string" pos:line="16" pos:column="54">" to prevent out.offset counter overflow"<pos:position pos:line="16" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">88<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">1<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"\tclient "<pos:position pos:line="17" pos:column="34"/></literal> <operator pos:line="17" pos:column="35">&lt;&lt;<pos:position pos:line="17" pos:column="43"/></operator> <call><name><name pos:line="17" pos:column="38">http<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">getConn<pos:position pos:line="17" pos:column="51"/></name></name><argument_list pos:line="17" pos:column="51">()<pos:position pos:line="17" pos:column="53"/></argument_list></call><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">peer<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">88<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"\treceived "<pos:position pos:line="18" pos:column="36"/></literal> <operator pos:line="18" pos:column="37">&lt;&lt;<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="40">http<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">out<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">size<pos:position pos:line="18" pos:column="54"/></name></name> <operator pos:line="18" pos:column="55">&lt;&lt;<pos:position pos:line="18" pos:column="63"/></operator> <literal type="string" pos:line="18" pos:column="58">" bytes, offset "<pos:position pos:line="18" pos:column="75"/></literal> <operator pos:line="18" pos:column="76">&lt;&lt;<pos:position pos:line="18" pos:column="84"/></operator> <name><name pos:line="18" pos:column="79">http<pos:position pos:line="18" pos:column="83"/></name><operator pos:line="18" pos:column="83">-&gt;<pos:position pos:line="18" pos:column="88"/></operator><name pos:line="18" pos:column="85">out<pos:position pos:line="18" pos:column="88"/></name><operator pos:line="18" pos:column="88">.<pos:position pos:line="18" pos:column="89"/></operator><name pos:line="18" pos:column="89">offset<pos:position pos:line="18" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">88<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"\tURI "<pos:position pos:line="19" pos:column="31"/></literal> <operator pos:line="19" pos:column="32">&lt;&lt;<pos:position pos:line="19" pos:column="40"/></operator> <name><name pos:line="19" pos:column="35">http<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">log_uri<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

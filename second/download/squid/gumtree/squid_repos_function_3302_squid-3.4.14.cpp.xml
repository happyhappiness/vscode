<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3302_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">urlCanonicalClean<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">HttpRequest<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">request<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">MAX_URL<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">LOCAL_ARRAY<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">portbuf<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="32">32<pos:position pos:line="5" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">loginbuf<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">MAX_LOGIN_SZ<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">+<pos:position pos:line="6" pos:column="47"/></operator> <literal type="number" pos:line="6" pos:column="48">1<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">t<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">request<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">protocol<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">AnyP<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">::<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">PROTO_URN<pos:position pos:line="9" pos:column="45"/></name></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">snprintf<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">buf<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">MAX_URL<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"urn:"<pos:position pos:line="10" pos:column="38"/></literal> <name pos:line="10" pos:column="39">SQUIDSTRINGPH<pos:position pos:line="10" pos:column="52"/></name></expr></argument>,
                 <argument><expr><call><name pos:line="11" pos:column="18">SQUIDSTRINGPRINT<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">request<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">urlpath<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><call><name><name pos:line="12" pos:column="16">request<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">method<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">id<pos:position pos:line="12" pos:column="34"/></name></name><argument_list pos:line="12" pos:column="34">()<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">==<pos:position pos:line="12" pos:column="39"/></operator> <name><name pos:line="12" pos:column="40">Http<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">::<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">METHOD_CONNECT<pos:position pos:line="12" pos:column="60"/></name></name></expr>)<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61"> <block pos:line="12" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">snprintf<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">buf<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">MAX_URL<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"%s:%d"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="41">request<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">GetHost<pos:position pos:line="13" pos:column="57"/></name></name><argument_list pos:line="13" pos:column="57">()<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="61">request<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">-&gt;<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="70">port<pos:position pos:line="13" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if></elseif> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">portbuf<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>]<pos:position pos:line="15" pos:column="19"/></index></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="char" pos:line="15" pos:column="22">'\0'<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">request<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">port<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">!=<pos:position pos:line="17" pos:column="29"/></operator> <call><name pos:line="17" pos:column="30">urlDefaultPort<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name><name pos:line="17" pos:column="45">request<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">protocol<pos:position pos:line="17" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="64"/></condition><then pos:line="17" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">snprintf<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">portbuf<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="31">32<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">":%d"<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="42">request<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">port<pos:position pos:line="18" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="20" pos:column="9">loginbuf<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>]<pos:position pos:line="20" pos:column="20"/></index></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="char" pos:line="20" pos:column="23">'\0'<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">int<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">)<pos:position pos:line="22" pos:column="18"/></operator> <call><name pos:line="22" pos:column="19">strlen<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name><name pos:line="22" pos:column="26">request<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">login<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call> <operator pos:line="22" pos:column="42">&gt;<pos:position pos:line="22" pos:column="46"/></operator> <literal type="number" pos:line="22" pos:column="44">0<pos:position pos:line="22" pos:column="45"/></literal></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46"> <block pos:line="22" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">strcpy<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">loginbuf<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="30">request<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">login<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>

            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">(<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">t<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">strchr<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">loginbuf<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="39">':'<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call><operator pos:line="25" pos:column="43">)<pos:position pos:line="25" pos:column="44"/></operator></expr>)<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">t<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="char" pos:line="26" pos:column="22">'\0'<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="28" pos:column="13">strcat<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">loginbuf<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"@"<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">const<pos:position pos:line="31" pos:column="14"/></specifier> <name pos:line="31" pos:column="15">URLScheme<pos:position pos:line="31" pos:column="24"/></name></type> <name pos:line="31" pos:column="25">sch<pos:position pos:line="31" pos:column="28"/></name> <init pos:line="31" pos:column="29">= <expr><name><name pos:line="31" pos:column="31">request<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">protocol<pos:position pos:line="31" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="49"/></decl_stmt> <comment type="line" pos:line="31" pos:column="50">// temporary, until bug 1961 URL handling is fixed.</comment>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">snprintf<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">buf<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="23">MAX_URL<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="32">"%s://%s%s%s"<pos:position pos:line="32" pos:column="45"/></literal> <name pos:line="32" pos:column="46">SQUIDSTRINGPH<pos:position pos:line="32" pos:column="59"/></name></expr></argument>,
                 <argument><expr><call><name><name pos:line="33" pos:column="18">sch<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">.<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">const_str<pos:position pos:line="33" pos:column="31"/></name></name><argument_list pos:line="33" pos:column="31">()<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr></argument>,
                 <argument><expr><name pos:line="34" pos:column="18">loginbuf<pos:position pos:line="34" pos:column="26"/></name></expr></argument>,
                 <argument><expr><call><name><name pos:line="35" pos:column="18">request<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">GetHost<pos:position pos:line="35" pos:column="34"/></name></name><argument_list pos:line="35" pos:column="34">()<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr></argument>,
                 <argument><expr><name pos:line="36" pos:column="18">portbuf<pos:position pos:line="36" pos:column="25"/></name></expr></argument>,
                 <argument><expr><call><name pos:line="37" pos:column="18">SQUIDSTRINGPRINT<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name><name pos:line="37" pos:column="35">request<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">urlpath<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
        <comment type="block" pos:line="38" pos:column="9">/*
         * strip arguments AFTER a question-mark
         */</comment>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">Config<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">onoff<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">.<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">strip_query_terms<pos:position pos:line="42" pos:column="43"/></name></name></expr>)<pos:position pos:line="42" pos:column="44"/></condition><then pos:line="42" pos:column="44">
            <block type="pseudo"><if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">t<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <call><name pos:line="43" pos:column="22">strchr<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">buf<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="43" pos:column="34">'?'<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call><operator pos:line="43" pos:column="38">)<pos:position pos:line="43" pos:column="39"/></operator></expr>)<pos:position pos:line="43" pos:column="40"/></condition><then pos:line="43" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="17">*<pos:position pos:line="44" pos:column="18"/></operator><operator pos:line="44" pos:column="18">(<pos:position pos:line="44" pos:column="19"/></operator><operator pos:line="44" pos:column="19">++<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">t<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">)<pos:position pos:line="44" pos:column="23"/></operator> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <literal type="char" pos:line="44" pos:column="26">'\0'<pos:position pos:line="44" pos:column="30"/></literal></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt></block></then></if></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">stringHasCntl<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">buf<pos:position pos:line="47" pos:column="26"/></name></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="9">xstrncpy<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">buf<pos:position pos:line="48" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="23">rfc1738_escape_unescaped<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">buf<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">MAX_URL<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt></block></then></if>

    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">buf<pos:position pos:line="50" pos:column="15"/></name></expr>;<pos:position pos:line="50" pos:column="16"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

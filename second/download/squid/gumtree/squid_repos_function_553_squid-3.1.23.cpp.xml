<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_553_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">u_char<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name pos:line="2" pos:column="1">asn_build_exception<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">u_char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">data<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">datalength<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">u_char<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">type<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<comment type="block" pos:line="3" pos:column="1">/*    u_char  *data;       IN - pointer to start of object */</comment>
<comment type="block" pos:line="4" pos:column="1">/*    int     *datalength; IN/OUT - # of valid bytes left in buf */</comment>
<comment type="block" pos:line="5" pos:column="1">/*    u_char   type;       IN - ASN type of object */</comment>
<block pos:line="6" pos:column="1">{
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><call><name pos:line="7" pos:column="13">asn_build_header_with_truth<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">data<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">datalength<pos:position pos:line="7" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="59">type<pos:position pos:line="7" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="65">0<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="68">1<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call><operator pos:line="7" pos:column="70">)<pos:position pos:line="7" pos:column="71"/></operator></expr>;<pos:position pos:line="7" pos:column="72"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2647_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">enter_suid<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">21<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"enter_suid: PID "<pos:position pos:line="4" pos:column="37"/></literal> <operator pos:line="4" pos:column="38">&lt;&lt;<pos:position pos:line="4" pos:column="46"/></operator> <call><name pos:line="4" pos:column="41">getpid<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">()<pos:position pos:line="4" pos:column="49"/></argument_list></call> <operator pos:line="4" pos:column="50">&lt;&lt;<pos:position pos:line="4" pos:column="58"/></operator> <literal type="string" pos:line="4" pos:column="53">" taking root privileges"<pos:position pos:line="4" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="80"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">HAVE_SETRESUID<pos:position pos:line="5" pos:column="19"/></name></expr></cpp:if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">setresuid<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><operator pos:line="6" pos:column="19">(<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">uid_t<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator><operator pos:line="6" pos:column="26">-<pos:position pos:line="6" pos:column="27"/></operator><literal type="number" pos:line="6" pos:column="27">1<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">uid_t<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator><operator pos:line="6" pos:column="40">-<pos:position pos:line="6" pos:column="41"/></operator><literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call> <operator pos:line="6" pos:column="44">&lt;<pos:position pos:line="6" pos:column="48"/></operator> <literal type="number" pos:line="6" pos:column="46">0<pos:position pos:line="6" pos:column="47"/></literal></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><literal type="number" pos:line="7" pos:column="17">21<pos:position pos:line="7" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="21">3<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="24">"enter_suid: setresuid failed: "<pos:position pos:line="7" pos:column="56"/></literal> <operator pos:line="7" pos:column="57">&lt;&lt;<pos:position pos:line="7" pos:column="65"/></operator> <call><name pos:line="7" pos:column="60">xstrerror<pos:position pos:line="7" pos:column="69"/></name> <argument_list pos:line="7" pos:column="70">()<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="74"/></expr_stmt></block></then></if>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">setuid<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">HAVE_PRCTL<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&amp;&amp;<pos:position pos:line="12" pos:column="26"/></operator> <call><name pos:line="12" pos:column="19">defined<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">PR_SET_DUMPABLE<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="13" pos:column="5">/* Set Linux DUMPABLE flag */</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">Config<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">coredump_dir<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">&amp;&amp;<pos:position pos:line="15" pos:column="39"/></operator> <call><name pos:line="15" pos:column="32">prctl<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">PR_SET_DUMPABLE<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call> <operator pos:line="15" pos:column="58">!=<pos:position pos:line="15" pos:column="60"/></operator> <literal type="number" pos:line="15" pos:column="61">0<pos:position pos:line="15" pos:column="62"/></literal></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">50<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">2<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"ALERT: prctl: "<pos:position pos:line="16" pos:column="39"/></literal> <operator pos:line="16" pos:column="40">&lt;&lt;<pos:position pos:line="16" pos:column="48"/></operator> <call><name pos:line="16" pos:column="43">xstrerror<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">()<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt></block></then></if>

<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

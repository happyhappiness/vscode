<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4501_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">aclMatchEui<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name><name pos:line="2" pos:column="13">SplayNode<pos:position pos:line="2" pos:column="22"/></name><argument_list type="generic" pos:line="2" pos:column="22">&lt;<argument><expr><name><name pos:line="2" pos:column="23">Eui<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">Eui64<pos:position pos:line="2" pos:column="33"/></name></name> <operator pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="2" pos:column="39"/></argument_list></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">dataptr<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="48">Ip<pos:position pos:line="2" pos:column="50"/></name><operator pos:line="2" pos:column="50">::<pos:position pos:line="2" pos:column="52"/></operator><name pos:line="2" pos:column="52">Address<pos:position pos:line="2" pos:column="59"/></name></name> <modifier pos:line="2" pos:column="60">&amp;<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="61">c<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Eui<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">Eui64<pos:position pos:line="4" pos:column="15"/></name></name></type> <name pos:line="4" pos:column="16">result<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">SplayNode<pos:position pos:line="5" pos:column="14"/></name><argument_list type="generic" pos:line="5" pos:column="14">&lt;<argument><expr><name><name pos:line="5" pos:column="15">Eui<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">::<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">Eui64<pos:position pos:line="5" pos:column="25"/></name></name> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="31"/></argument_list></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">Top<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name pos:line="5" pos:column="37">dataptr<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">lookup<pos:position pos:line="7" pos:column="22"/></name></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">c<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
        <comment type="block" pos:line="8" pos:column="9">/* Do ACL match lookup */</comment>
        <expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">Top<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">Top<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">splay<pos:position pos:line="9" pos:column="29"/></name></name><argument_list pos:line="9" pos:column="29">(<argument><expr><operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="31">result<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">aclEui64Compare<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">28<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"aclMatchEui: '"<pos:position pos:line="10" pos:column="39"/></literal> <operator pos:line="10" pos:column="40">&lt;&lt;<pos:position pos:line="10" pos:column="48"/></operator> <name pos:line="10" pos:column="43">c<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">&lt;&lt;<pos:position pos:line="10" pos:column="53"/></operator> <literal type="string" pos:line="10" pos:column="48">"' "<pos:position pos:line="10" pos:column="52"/></literal> <operator pos:line="10" pos:column="53">&lt;&lt;<pos:position pos:line="10" pos:column="61"/></operator> <operator pos:line="10" pos:column="56">(<pos:position pos:line="10" pos:column="57"/></operator><ternary><condition><expr><name pos:line="10" pos:column="57">splayLastResult<pos:position pos:line="10" pos:column="72"/></name></expr> ?<pos:position pos:line="10" pos:column="74"/></condition><then pos:line="10" pos:column="74"> <expr><literal type="string" pos:line="10" pos:column="75">"NOT found"<pos:position pos:line="10" pos:column="86"/></literal></expr> <pos:position pos:line="10" pos:column="87"/></then><else pos:line="10" pos:column="87">: <expr><literal type="string" pos:line="10" pos:column="89">"found"<pos:position pos:line="10" pos:column="96"/></literal></expr></else></ternary><operator pos:line="10" pos:column="96">)<pos:position pos:line="10" pos:column="97"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="99"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">splayLastResult<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator></expr>;<pos:position pos:line="11" pos:column="39"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/*
     * Address was not found on any interface
     */</comment>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">28<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"aclMatchEui: "<pos:position pos:line="17" pos:column="34"/></literal> <operator pos:line="17" pos:column="35">&lt;&lt;<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="38">c<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">&lt;&lt;<pos:position pos:line="17" pos:column="48"/></operator> <literal type="string" pos:line="17" pos:column="43">" NOT found"<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

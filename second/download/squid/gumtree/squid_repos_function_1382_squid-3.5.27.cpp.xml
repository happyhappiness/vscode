<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1382_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StringRegistry<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">Stat<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">StoreEntry<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">entry<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">entry<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="30">"%lu entries, %lu reported from MemPool\n"<pos:position pos:line="4" pos:column="72"/></literal></expr></argument>, <argument><expr><operator pos:line="4" pos:column="74">(<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="75">unsigned<pos:position pos:line="4" pos:column="83"/></name> <name pos:line="4" pos:column="84">long<pos:position pos:line="4" pos:column="88"/></name><operator pos:line="4" pos:column="88">)<pos:position pos:line="4" pos:column="89"/></operator> <call><name pos:line="4" pos:column="90">Instance<pos:position pos:line="4" pos:column="98"/></name><argument_list pos:line="4" pos:column="98">()<pos:position pos:line="4" pos:column="100"/></argument_list></call><operator pos:line="4" pos:column="100">.<pos:position pos:line="4" pos:column="101"/></operator><name><name pos:line="4" pos:column="101">entries<pos:position pos:line="4" pos:column="108"/></name><operator pos:line="4" pos:column="108">.<pos:position pos:line="4" pos:column="109"/></operator><name pos:line="4" pos:column="109">elements<pos:position pos:line="4" pos:column="117"/></name></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="119">(<pos:position pos:line="4" pos:column="120"/></operator><name pos:line="4" pos:column="120">unsigned<pos:position pos:line="4" pos:column="128"/></name> <name pos:line="4" pos:column="129">long<pos:position pos:line="4" pos:column="133"/></name><operator pos:line="4" pos:column="133">)<pos:position pos:line="4" pos:column="134"/></operator> <call><name pos:line="4" pos:column="135">memStringCount<pos:position pos:line="4" pos:column="149"/></name><argument_list pos:line="4" pos:column="149">()<pos:position pos:line="4" pos:column="151"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="152"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="153"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Instance<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">()<pos:position pos:line="5" pos:column="15"/></argument_list></call><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><call><name><name pos:line="5" pos:column="16">entries<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">head<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">walk<pos:position pos:line="5" pos:column="34"/></name></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">Stater<pos:position pos:line="5" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">entry<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

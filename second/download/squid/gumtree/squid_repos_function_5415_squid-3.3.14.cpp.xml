<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5415_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">headersLog<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">cs<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">pq<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">HttpRequestMethod<pos:position pos:line="2" pos:column="51"/></name><modifier pos:line="2" pos:column="51">&amp;<pos:position pos:line="2" pos:column="56"/></modifier></type> <name pos:line="2" pos:column="53">method<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">void<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">data<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpReply<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">rep<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequest<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">req<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">short<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">magic<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">M<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">unsigned<pos:position pos:line="7" pos:column="32"/></name> <name pos:line="7" pos:column="33">char<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="39">m<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">short<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">S<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">hmask<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ccmask<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><literal type="number" pos:line="12" pos:column="9">0<pos:position pos:line="12" pos:column="10"/></literal> <operator pos:line="12" pos:column="11">==<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">pq<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17"> <block pos:line="12" pos:column="18">{
        <comment type="block" pos:line="13" pos:column="9">/* reply */</comment>
        <expr_stmt><expr><name pos:line="14" pos:column="9">rep<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">data<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">req<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">NULL<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">magic<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0x0050<pos:position pos:line="16" pos:column="23"/></literal></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">hmask<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name><name pos:line="17" pos:column="17">rep<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">header<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">mask<pos:position pos:line="17" pos:column="33"/></name></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">rep<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">cache_control<pos:position pos:line="19" pos:column="31"/></name></name></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">ccmask<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="22">rep<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">cache_control<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">mask<pos:position pos:line="20" pos:column="46"/></name></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
        <comment type="block" pos:line="22" pos:column="9">/* request */</comment>
        <expr_stmt><expr><name pos:line="23" pos:column="9">req<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">data<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">rep<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">magic<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0x0051<pos:position pos:line="25" pos:column="23"/></literal></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">hmask<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name><name pos:line="26" pos:column="17">req<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">header<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">mask<pos:position pos:line="26" pos:column="33"/></name></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">req<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">cache_control<pos:position pos:line="28" pos:column="31"/></name></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">ccmask<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="22">req<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">cache_control<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">mask<pos:position pos:line="29" pos:column="46"/></name></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><literal type="number" pos:line="32" pos:column="9">0<pos:position pos:line="32" pos:column="10"/></literal> <operator pos:line="32" pos:column="11">==<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">cs<pos:position pos:line="32" pos:column="16"/></name></expr>)<pos:position pos:line="32" pos:column="17"/></condition><then pos:line="32" pos:column="17"> <block pos:line="32" pos:column="18">{
        <comment type="block" pos:line="33" pos:column="9">/* client */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">magic<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">|=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0x4300<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <else pos:line="35" pos:column="7">else <block pos:line="35" pos:column="12">{
        <comment type="block" pos:line="36" pos:column="9">/* server */</comment>
        <expr_stmt><expr><name pos:line="37" pos:column="9">magic<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">|=<pos:position pos:line="37" pos:column="17"/></operator> <literal type="number" pos:line="37" pos:column="18">0x5300<pos:position pos:line="37" pos:column="24"/></literal></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">magic<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">htons<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">magic<pos:position pos:line="40" pos:column="24"/></name></expr></argument>)<pos:position pos:line="40" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">ccmask<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">htonl<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">ccmask<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><literal type="number" pos:line="43" pos:column="9">0<pos:position pos:line="43" pos:column="10"/></literal> <operator pos:line="43" pos:column="11">==<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">pq<pos:position pos:line="43" pos:column="16"/></name></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="9">S<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">unsigned<pos:position pos:line="44" pos:column="22"/></name> <name pos:line="44" pos:column="23">short<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">)<pos:position pos:line="44" pos:column="29"/></operator> <name><name pos:line="44" pos:column="30">rep<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">sline<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">.<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">status<pos:position pos:line="44" pos:column="47"/></name></name></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="45" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="9">S<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">unsigned<pos:position pos:line="46" pos:column="22"/></name> <name pos:line="46" pos:column="23">short<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">)<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">HTTP_STATUS_NONE<pos:position pos:line="46" pos:column="46"/></name></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">logfileWrite<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">headerslog<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="30">&amp;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="31">magic<pos:position pos:line="48" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="38">sizeof<argument_list pos:line="48" pos:column="44">(<argument><expr><name pos:line="48" pos:column="45">magic<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">logfileWrite<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">headerslog<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="30">&amp;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="31">M<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="34">sizeof<argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">M<pos:position pos:line="49" pos:column="42"/></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">logfileWrite<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">headerslog<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="30">&amp;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="31">S<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="34">sizeof<argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">S<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">logfileWrite<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">headerslog<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">hmask<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="37">sizeof<argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">HttpHeaderMask<pos:position pos:line="51" pos:column="58"/></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">logfileWrite<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">headerslog<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="30">&amp;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="31">ccmask<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="39">sizeof<argument_list pos:line="52" pos:column="45">(<argument><expr><name pos:line="52" pos:column="46">int<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3980_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">Host<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">Register<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">TheHost<pos:position pos:line="4" pos:column="17"/></name></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <block pos:line="4" pos:column="19">{
        <expr_stmt><expr><call><name><name pos:line="5" pos:column="9">TheHost<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">reset<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">new<pos:position pos:line="5" pos:column="26"/></operator> <name><name pos:line="5" pos:column="27">Adaptation<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">::<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">Ecap<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">::<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">Host<pos:position pos:line="5" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">libecap<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">::<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">RegisterHost<pos:position pos:line="6" pos:column="30"/></name></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">TheHost<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

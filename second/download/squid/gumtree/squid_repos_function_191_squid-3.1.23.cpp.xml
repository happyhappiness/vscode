<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_191_squid-3.1.23.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">make_challenge<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">domain<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">domain_controller<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* trying to circumvent some strange problem wih pointers in SMBLib */</comment>
    <comment type="block" pos:line="5" pos:column="5">/* Ugly as hell, but the lib is going to be dropped... */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">strcpy<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">my_domain<pos:position pos:line="6" pos:column="21"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="22">domain<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">strcpy<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">my_domain_controller<pos:position pos:line="7" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="33">domain_controller<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">init_challenge<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">my_domain<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">my_domain_controller<pos:position pos:line="8" pos:column="55"/></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call> <operator pos:line="8" pos:column="57">&gt;<pos:position pos:line="8" pos:column="61"/></operator> <literal type="number" pos:line="8" pos:column="59">0<pos:position pos:line="8" pos:column="60"/></literal></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61"> <block pos:line="8" pos:column="62">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <return pos:line="11" pos:column="5">return <expr><call><name pos:line="11" pos:column="12">ntlm_make_challenge<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">my_domain<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">my_domain_controller<pos:position pos:line="11" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="65">(<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="66">char<pos:position pos:line="11" pos:column="70"/></name> <operator pos:line="11" pos:column="71">*<pos:position pos:line="11" pos:column="72"/></operator><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator><name pos:line="11" pos:column="73">challenge<pos:position pos:line="11" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="84">NONCE_LEN<pos:position pos:line="11" pos:column="93"/></name></expr></argument>)<pos:position pos:line="11" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="95"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

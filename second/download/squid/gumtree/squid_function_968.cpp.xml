<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_968.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">AnyP<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">ProtocolVersion<pos:position pos:line="1" pos:column="29"/></name></name></type>
<name pos:line="2" pos:column="1">parsePortProtocol<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">SBuf<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">&amp;<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="31">value<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// HTTP/1.0 not supported because we are version 1.1 which contains a superset of 1.0</comment>
    <comment type="line" pos:line="5" pos:column="5">// and RFC 2616 requires us to upgrade 1.0 to 1.1</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name><name pos:line="6" pos:column="9">value<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">cmp<pos:position pos:line="6" pos:column="18"/></name></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="string" pos:line="6" pos:column="19">"HTTP"<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call> <operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator> <literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal> <operator pos:line="6" pos:column="32">||<pos:position pos:line="6" pos:column="34"/></operator> <call><name><name pos:line="6" pos:column="35">value<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">cmp<pos:position pos:line="6" pos:column="44"/></name></name><argument_list pos:line="6" pos:column="44">(<argument><expr><literal type="string" pos:line="6" pos:column="45">"HTTP/1.1"<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call> <operator pos:line="6" pos:column="57">==<pos:position pos:line="6" pos:column="59"/></operator> <literal type="number" pos:line="6" pos:column="60">0<pos:position pos:line="6" pos:column="61"/></literal></expr>)<pos:position pos:line="6" pos:column="62"/></condition><then pos:line="6" pos:column="62">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><call><name><name pos:line="7" pos:column="16">AnyP<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">::<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">ProtocolVersion<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name><name pos:line="7" pos:column="38">AnyP<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">::<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">PROTO_HTTP<pos:position pos:line="7" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="56">1<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="58">1<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">value<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">cmp<pos:position pos:line="9" pos:column="18"/></name></name><argument_list pos:line="9" pos:column="18">(<argument><expr><literal type="string" pos:line="9" pos:column="19">"HTTPS"<pos:position pos:line="9" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal> <operator pos:line="9" pos:column="33">||<pos:position pos:line="9" pos:column="35"/></operator> <call><name><name pos:line="9" pos:column="36">value<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">cmp<pos:position pos:line="9" pos:column="45"/></name></name><argument_list pos:line="9" pos:column="45">(<argument><expr><literal type="string" pos:line="9" pos:column="46">"HTTPS/1.1"<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call> <operator pos:line="9" pos:column="59">==<pos:position pos:line="9" pos:column="61"/></operator> <literal type="number" pos:line="9" pos:column="62">0<pos:position pos:line="9" pos:column="63"/></literal></expr>)<pos:position pos:line="9" pos:column="64"/></condition><then pos:line="9" pos:column="64">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><call><name><name pos:line="10" pos:column="16">AnyP<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">ProtocolVersion<pos:position pos:line="10" pos:column="37"/></name></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name><name pos:line="10" pos:column="38">AnyP<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">::<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">PROTO_HTTPS<pos:position pos:line="10" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="57">1<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="59">1<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></return></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">value<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">cmp<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">"FTP"<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call> <operator pos:line="12" pos:column="26">==<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><call><name><name pos:line="13" pos:column="16">Ftp<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">::<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">ProtocolVersion<pos:position pos:line="13" pos:column="36"/></name></name><argument_list pos:line="13" pos:column="36">()<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">fatalf<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="string" pos:line="15" pos:column="12">"%s directive does not support protocol="<pos:position pos:line="15" pos:column="53"/></literal> <name pos:line="15" pos:column="54">SQUIDSBUFPH<pos:position pos:line="15" pos:column="65"/></name> <literal type="string" pos:line="15" pos:column="66">"\n"<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="72">cfg_directive<pos:position pos:line="15" pos:column="85"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="87">SQUIDSBUFPRINT<pos:position pos:line="15" pos:column="101"/></name><argument_list pos:line="15" pos:column="101">(<argument><expr><name pos:line="15" pos:column="102">value<pos:position pos:line="15" pos:column="107"/></name></expr></argument>)<pos:position pos:line="15" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="110"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><call><name><name pos:line="16" pos:column="12">AnyP<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">::<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">ProtocolVersion<pos:position pos:line="16" pos:column="33"/></name></name><argument_list pos:line="16" pos:column="33">()<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></return> <comment type="line" pos:line="16" pos:column="37">// not reached</comment>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_998_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">Ctx<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">ctx_enter<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">descr<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">Ctx_Current_Level<pos:position pos:line="4" pos:column="24"/></name></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">Ctx_Current_Level<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;=<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="30">CTX_MAX_LEVEL<pos:position pos:line="6" pos:column="43"/></name></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="7" pos:column="9">Ctx_Descrs<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name pos:line="7" pos:column="20">Ctx_Current_Level<pos:position pos:line="7" pos:column="37"/></name></expr>]<pos:position pos:line="7" pos:column="38"/></index></name> <operator pos:line="7" pos:column="39">=<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="41">descr<pos:position pos:line="7" pos:column="46"/></name></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">Ctx_Current_Level<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">Ctx_Warn_Level<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="19">DBG_CRITICAL<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="33">"# ctx: suspiciously deep ("<pos:position pos:line="10" pos:column="61"/></literal> <operator pos:line="10" pos:column="62">&lt;&lt;<pos:position pos:line="10" pos:column="70"/></operator> <name pos:line="10" pos:column="65">Ctx_Warn_Level<pos:position pos:line="10" pos:column="79"/></name> <operator pos:line="10" pos:column="80">&lt;&lt;<pos:position pos:line="10" pos:column="88"/></operator> <literal type="string" pos:line="10" pos:column="83">") nesting:"<pos:position pos:line="10" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">Ctx_Warn_Level<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">*=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="27">2<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">Ctx_Current_Level<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

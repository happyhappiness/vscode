<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4867_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLAtStepData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">match<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Ssl<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">BumpStep<pos:position pos:line="2" pos:column="35"/></name></name></type>  <name pos:line="2" pos:column="37">toFind<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">std<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name><name pos:line="4" pos:column="15">list<pos:position pos:line="4" pos:column="19"/></name><argument_list type="generic" pos:line="4" pos:column="19">&lt;<argument><expr><name><name pos:line="4" pos:column="20">Ssl<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">::<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">BumpStep<pos:position pos:line="4" pos:column="33"/></name></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="37"/></argument_list></name><operator pos:line="4" pos:column="34">::<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">const_iterator<pos:position pos:line="4" pos:column="50"/></name></name></type> <name pos:line="4" pos:column="51">it<pos:position pos:line="4" pos:column="53"/></name> <init pos:line="4" pos:column="54">= <expr><call><name><name pos:line="4" pos:column="56">values<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">.<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="63">begin<pos:position pos:line="4" pos:column="68"/></name></name><argument_list pos:line="4" pos:column="68">()<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="71"/></init> <condition><expr><name pos:line="4" pos:column="72">it<pos:position pos:line="4" pos:column="74"/></name> <operator pos:line="4" pos:column="75">!=<pos:position pos:line="4" pos:column="77"/></operator> <call><name><name pos:line="4" pos:column="78">values<pos:position pos:line="4" pos:column="84"/></name><operator pos:line="4" pos:column="84">.<pos:position pos:line="4" pos:column="85"/></operator><name pos:line="4" pos:column="85">end<pos:position pos:line="4" pos:column="88"/></name></name><argument_list pos:line="4" pos:column="88">()<pos:position pos:line="4" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="91"/></condition> <incr><expr><operator pos:line="4" pos:column="92">++<pos:position pos:line="4" pos:column="94"/></operator><name pos:line="4" pos:column="94">it<pos:position pos:line="4" pos:column="96"/></name></expr></incr>)<pos:position pos:line="4" pos:column="97"/></control> <block pos:line="4" pos:column="98">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">it<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">toFind<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><literal type="boolean" pos:line="6" pos:column="20">true<pos:position pos:line="6" pos:column="24"/></literal></expr>;<pos:position pos:line="6" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></for>
    <return pos:line="8" pos:column="5">return <expr><literal type="boolean" pos:line="8" pos:column="12">false<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

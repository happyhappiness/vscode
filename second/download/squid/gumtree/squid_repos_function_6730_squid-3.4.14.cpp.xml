<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6730_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">gb_to_str<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">gb_t<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">g<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * it is often convenient to call gb_to_str several times for _one_ printf
     */</comment>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">max_cc_calls<pos:position pos:line="7" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="7" pos:column="22">5<pos:position pos:line="7" pos:column="23"/></cpp:value></cpp:define>
    <typedef pos:line="8" pos:column="5">typedef <type><name pos:line="8" pos:column="13">char<pos:position pos:line="8" pos:column="17"/></name></type> <name><name pos:line="8" pos:column="18">GbBuf<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><literal type="number" pos:line="8" pos:column="24">32<pos:position pos:line="8" pos:column="26"/></literal></expr>]<pos:position pos:line="8" pos:column="27"/></index></name>;<pos:position pos:line="8" pos:column="28"/></typedef>
    <decl_stmt><decl><specifier pos:line="9" pos:column="5">static<pos:position pos:line="9" pos:column="11"/></specifier> <type><name pos:line="9" pos:column="12">GbBuf<pos:position pos:line="9" pos:column="17"/></name></type> <name><name pos:line="9" pos:column="18">bufs<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><name pos:line="9" pos:column="23">max_cc_calls<pos:position pos:line="9" pos:column="35"/></name></expr>]<pos:position pos:line="9" pos:column="36"/></index></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><name pos:line="10" pos:column="12">int<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">call_id<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">double<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">value<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><call><name pos:line="11" pos:column="20">gb_to_double<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">g<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">buf<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><name><name pos:line="12" pos:column="17">bufs<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><name pos:line="12" pos:column="22">call_id<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr>]<pos:position pos:line="12" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">call_id<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="20">max_cc_calls<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">call_id<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* select format */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">value<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&lt;<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="17">1e9<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">snprintf<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">buf<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="23">sizeof<argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">GbBuf<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"%.2f MB"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">value<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">/<pos:position pos:line="19" pos:column="56"/></operator> <literal type="number" pos:line="19" pos:column="57">1e6<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">value<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&lt;<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="22">1e12<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">snprintf<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">buf<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="23">sizeof<argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">GbBuf<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="38">"%.2f GB"<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">value<pos:position pos:line="21" pos:column="54"/></name> <operator pos:line="21" pos:column="55">/<pos:position pos:line="21" pos:column="56"/></operator> <literal type="number" pos:line="21" pos:column="57">1e9<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <else pos:line="22" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">snprintf<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">buf<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="23">sizeof<argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">GbBuf<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="38">"%.2f TB"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">value<pos:position pos:line="23" pos:column="54"/></name> <operator pos:line="23" pos:column="55">/<pos:position pos:line="23" pos:column="56"/></operator> <literal type="number" pos:line="23" pos:column="57">1e12<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt></block></else></if>

    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">buf<pos:position pos:line="25" pos:column="15"/></name></expr>;<pos:position pos:line="25" pos:column="16"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

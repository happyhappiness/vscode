<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6660_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">base64_encode<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">result<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">result_size<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">data<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">int<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">data_size<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">bits<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">char_count<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">out_cnt<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">data<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">||<pos:position pos:line="8" pos:column="17"/></operator> <operator pos:line="8" pos:column="18">!<pos:position pos:line="8" pos:column="19"/></operator><operator pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">data<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">||<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">!<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">result<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">||<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">result_size<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">&lt;<pos:position pos:line="8" pos:column="55"/></operator> <literal type="number" pos:line="8" pos:column="53">1<pos:position pos:line="8" pos:column="54"/></literal> <operator pos:line="8" pos:column="55">||<pos:position pos:line="8" pos:column="57"/></operator> <name pos:line="8" pos:column="58">data_size<pos:position pos:line="8" pos:column="67"/></name> <operator pos:line="8" pos:column="68">&lt;<pos:position pos:line="8" pos:column="72"/></operator> <literal type="number" pos:line="8" pos:column="70">1<pos:position pos:line="8" pos:column="71"/></literal></expr>)<pos:position pos:line="8" pos:column="72"/></condition><then pos:line="8" pos:column="72">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">base64_initialized<pos:position pos:line="11" pos:column="28"/></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">base64_init<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">()<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt></block></then></if>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">data_size<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">--<pos:position pos:line="14" pos:column="23"/></operator></expr>)<pos:position pos:line="14" pos:column="24"/></condition> <block pos:line="14" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">c<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">unsigned<pos:position pos:line="15" pos:column="26"/></name> <name pos:line="15" pos:column="27">char<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">)<pos:position pos:line="15" pos:column="32"/></operator> <operator pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">data<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">++<pos:position pos:line="15" pos:column="40"/></operator></expr></init></decl>;<pos:position pos:line="15" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">bits<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">+=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">c<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">char_count<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">++<pos:position pos:line="17" pos:column="21"/></operator></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">char_count<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="27">3<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">out_cnt<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&gt;=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="28">result_size<pos:position pos:line="19" pos:column="39"/></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
                <block type="pseudo"><break pos:line="20" pos:column="17">break;<pos:position pos:line="20" pos:column="23"/></break></block></then></if>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">out_cnt<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">+<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">4<pos:position pos:line="21" pos:column="26"/></literal> <operator pos:line="21" pos:column="27">&lt;=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="30">result_size<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <block pos:line="21" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="22" pos:column="17">result<pos:position pos:line="22" pos:column="23"/></name><index pos:line="22" pos:column="23">[<expr><name pos:line="22" pos:column="24">out_cnt<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">++<pos:position pos:line="22" pos:column="33"/></operator></expr>]<pos:position pos:line="22" pos:column="34"/></index></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <name><name pos:line="22" pos:column="37">base64_code<pos:position pos:line="22" pos:column="48"/></name><index pos:line="22" pos:column="48">[<expr><name pos:line="22" pos:column="49">bits<pos:position pos:line="22" pos:column="53"/></name> <operator pos:line="22" pos:column="54">&gt;&gt;<pos:position pos:line="22" pos:column="59"/></operator> <literal type="number" pos:line="22" pos:column="57">18<pos:position pos:line="22" pos:column="59"/></literal></expr>]<pos:position pos:line="22" pos:column="60"/></index></name></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="23" pos:column="17">result<pos:position pos:line="23" pos:column="23"/></name><index pos:line="23" pos:column="23">[<expr><name pos:line="23" pos:column="24">out_cnt<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">++<pos:position pos:line="23" pos:column="33"/></operator></expr>]<pos:position pos:line="23" pos:column="34"/></index></name> <operator pos:line="23" pos:column="35">=<pos:position pos:line="23" pos:column="36"/></operator> <name><name pos:line="23" pos:column="37">base64_code<pos:position pos:line="23" pos:column="48"/></name><index pos:line="23" pos:column="48">[<expr><operator pos:line="23" pos:column="49">(<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">bits<pos:position pos:line="23" pos:column="54"/></name> <operator pos:line="23" pos:column="55">&gt;&gt;<pos:position pos:line="23" pos:column="60"/></operator> <literal type="number" pos:line="23" pos:column="58">12<pos:position pos:line="23" pos:column="60"/></literal><operator pos:line="23" pos:column="60">)<pos:position pos:line="23" pos:column="61"/></operator> <operator pos:line="23" pos:column="62">&amp;<pos:position pos:line="23" pos:column="67"/></operator> <literal type="number" pos:line="23" pos:column="64">0x3f<pos:position pos:line="23" pos:column="68"/></literal></expr>]<pos:position pos:line="23" pos:column="69"/></index></name></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">result<pos:position pos:line="24" pos:column="23"/></name><index pos:line="24" pos:column="23">[<expr><name pos:line="24" pos:column="24">out_cnt<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">++<pos:position pos:line="24" pos:column="33"/></operator></expr>]<pos:position pos:line="24" pos:column="34"/></index></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <name><name pos:line="24" pos:column="37">base64_code<pos:position pos:line="24" pos:column="48"/></name><index pos:line="24" pos:column="48">[<expr><operator pos:line="24" pos:column="49">(<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">bits<pos:position pos:line="24" pos:column="54"/></name> <operator pos:line="24" pos:column="55">&gt;&gt;<pos:position pos:line="24" pos:column="60"/></operator> <literal type="number" pos:line="24" pos:column="58">6<pos:position pos:line="24" pos:column="59"/></literal><operator pos:line="24" pos:column="59">)<pos:position pos:line="24" pos:column="60"/></operator> <operator pos:line="24" pos:column="61">&amp;<pos:position pos:line="24" pos:column="66"/></operator> <literal type="number" pos:line="24" pos:column="63">0x3f<pos:position pos:line="24" pos:column="67"/></literal></expr>]<pos:position pos:line="24" pos:column="68"/></index></name></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">result<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">out_cnt<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">++<pos:position pos:line="25" pos:column="33"/></operator></expr>]<pos:position pos:line="25" pos:column="34"/></index></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <name><name pos:line="25" pos:column="37">base64_code<pos:position pos:line="25" pos:column="48"/></name><index pos:line="25" pos:column="48">[<expr><name pos:line="25" pos:column="49">bits<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">&amp;<pos:position pos:line="25" pos:column="59"/></operator> <literal type="number" pos:line="25" pos:column="56">0x3f<pos:position pos:line="25" pos:column="60"/></literal></expr>]<pos:position pos:line="25" pos:column="61"/></index></name></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then> <else pos:line="26" pos:column="15">else <block pos:line="26" pos:column="20">{
                <comment type="line" pos:line="27" pos:column="17">// part-quantum goes a bit slower with per-byte checks</comment>
                <expr_stmt><expr><name><name pos:line="28" pos:column="17">result<pos:position pos:line="28" pos:column="23"/></name><index pos:line="28" pos:column="23">[<expr><name pos:line="28" pos:column="24">out_cnt<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">++<pos:position pos:line="28" pos:column="33"/></operator></expr>]<pos:position pos:line="28" pos:column="34"/></index></name> <operator pos:line="28" pos:column="35">=<pos:position pos:line="28" pos:column="36"/></operator> <name><name pos:line="28" pos:column="37">base64_code<pos:position pos:line="28" pos:column="48"/></name><index pos:line="28" pos:column="48">[<expr><name pos:line="28" pos:column="49">bits<pos:position pos:line="28" pos:column="53"/></name> <operator pos:line="28" pos:column="54">&gt;&gt;<pos:position pos:line="28" pos:column="59"/></operator> <literal type="number" pos:line="28" pos:column="57">18<pos:position pos:line="28" pos:column="59"/></literal></expr>]<pos:position pos:line="28" pos:column="60"/></index></name></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">out_cnt<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">&gt;=<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="32">result_size<pos:position pos:line="29" pos:column="43"/></name></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44">
                    <block type="pseudo"><break pos:line="30" pos:column="21">break;<pos:position pos:line="30" pos:column="27"/></break></block></then></if>
                <expr_stmt><expr><name><name pos:line="31" pos:column="17">result<pos:position pos:line="31" pos:column="23"/></name><index pos:line="31" pos:column="23">[<expr><name pos:line="31" pos:column="24">out_cnt<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">++<pos:position pos:line="31" pos:column="33"/></operator></expr>]<pos:position pos:line="31" pos:column="34"/></index></name> <operator pos:line="31" pos:column="35">=<pos:position pos:line="31" pos:column="36"/></operator> <name><name pos:line="31" pos:column="37">base64_code<pos:position pos:line="31" pos:column="48"/></name><index pos:line="31" pos:column="48">[<expr><operator pos:line="31" pos:column="49">(<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">bits<pos:position pos:line="31" pos:column="54"/></name> <operator pos:line="31" pos:column="55">&gt;&gt;<pos:position pos:line="31" pos:column="60"/></operator> <literal type="number" pos:line="31" pos:column="58">12<pos:position pos:line="31" pos:column="60"/></literal><operator pos:line="31" pos:column="60">)<pos:position pos:line="31" pos:column="61"/></operator> <operator pos:line="31" pos:column="62">&amp;<pos:position pos:line="31" pos:column="67"/></operator> <literal type="number" pos:line="31" pos:column="64">0x3f<pos:position pos:line="31" pos:column="68"/></literal></expr>]<pos:position pos:line="31" pos:column="69"/></index></name></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">out_cnt<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">&gt;=<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="32">result_size<pos:position pos:line="32" pos:column="43"/></name></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44">
                    <block type="pseudo"><break pos:line="33" pos:column="21">break;<pos:position pos:line="33" pos:column="27"/></break></block></then></if>
                <expr_stmt><expr><name><name pos:line="34" pos:column="17">result<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><name pos:line="34" pos:column="24">out_cnt<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">++<pos:position pos:line="34" pos:column="33"/></operator></expr>]<pos:position pos:line="34" pos:column="34"/></index></name> <operator pos:line="34" pos:column="35">=<pos:position pos:line="34" pos:column="36"/></operator> <name><name pos:line="34" pos:column="37">base64_code<pos:position pos:line="34" pos:column="48"/></name><index pos:line="34" pos:column="48">[<expr><operator pos:line="34" pos:column="49">(<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="50">bits<pos:position pos:line="34" pos:column="54"/></name> <operator pos:line="34" pos:column="55">&gt;&gt;<pos:position pos:line="34" pos:column="60"/></operator> <literal type="number" pos:line="34" pos:column="58">6<pos:position pos:line="34" pos:column="59"/></literal><operator pos:line="34" pos:column="59">)<pos:position pos:line="34" pos:column="60"/></operator> <operator pos:line="34" pos:column="61">&amp;<pos:position pos:line="34" pos:column="66"/></operator> <literal type="number" pos:line="34" pos:column="63">0x3f<pos:position pos:line="34" pos:column="67"/></literal></expr>]<pos:position pos:line="34" pos:column="68"/></index></name></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">out_cnt<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">&gt;=<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="32">result_size<pos:position pos:line="35" pos:column="43"/></name></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44">
                    <block type="pseudo"><break pos:line="36" pos:column="21">break;<pos:position pos:line="36" pos:column="27"/></break></block></then></if>
                <expr_stmt><expr><name><name pos:line="37" pos:column="17">result<pos:position pos:line="37" pos:column="23"/></name><index pos:line="37" pos:column="23">[<expr><name pos:line="37" pos:column="24">out_cnt<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">++<pos:position pos:line="37" pos:column="33"/></operator></expr>]<pos:position pos:line="37" pos:column="34"/></index></name> <operator pos:line="37" pos:column="35">=<pos:position pos:line="37" pos:column="36"/></operator> <name><name pos:line="37" pos:column="37">base64_code<pos:position pos:line="37" pos:column="48"/></name><index pos:line="37" pos:column="48">[<expr><name pos:line="37" pos:column="49">bits<pos:position pos:line="37" pos:column="53"/></name> <operator pos:line="37" pos:column="54">&amp;<pos:position pos:line="37" pos:column="59"/></operator> <literal type="number" pos:line="37" pos:column="56">0x3f<pos:position pos:line="37" pos:column="60"/></literal></expr>]<pos:position pos:line="37" pos:column="61"/></index></name></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="39" pos:column="13">bits<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">char_count<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">0<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then> <else pos:line="41" pos:column="11">else <block pos:line="41" pos:column="16">{
            <expr_stmt><expr><name pos:line="42" pos:column="13">bits<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">&lt;&lt;=<pos:position pos:line="42" pos:column="27"/></operator> <literal type="number" pos:line="42" pos:column="22">8<pos:position pos:line="42" pos:column="23"/></literal></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block></while>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">char_count<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">!=<pos:position pos:line="45" pos:column="22"/></operator> <literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25"> <block pos:line="45" pos:column="26">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">bits<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">&lt;&lt;=<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="18">16<pos:position pos:line="46" pos:column="20"/></literal> <operator pos:line="46" pos:column="21">-<pos:position pos:line="46" pos:column="22"/></operator> <operator pos:line="46" pos:column="23">(<pos:position pos:line="46" pos:column="24"/></operator><literal type="number" pos:line="46" pos:column="24">8<pos:position pos:line="46" pos:column="25"/></literal> <operator pos:line="46" pos:column="26">*<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">char_count<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">)<pos:position pos:line="46" pos:column="39"/></operator></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">out_cnt<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">&gt;=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="24">result_size<pos:position pos:line="47" pos:column="35"/></name></expr>)<pos:position pos:line="47" pos:column="36"/></condition><then pos:line="47" pos:column="36">
            <block type="pseudo"><return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">result_size<pos:position pos:line="48" pos:column="31"/></name></expr>;<pos:position pos:line="48" pos:column="32"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">result<pos:position pos:line="49" pos:column="15"/></name><index pos:line="49" pos:column="15">[<expr><name pos:line="49" pos:column="16">out_cnt<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">++<pos:position pos:line="49" pos:column="25"/></operator></expr>]<pos:position pos:line="49" pos:column="26"/></index></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <name><name pos:line="49" pos:column="29">base64_code<pos:position pos:line="49" pos:column="40"/></name><index pos:line="49" pos:column="40">[<expr><name pos:line="49" pos:column="41">bits<pos:position pos:line="49" pos:column="45"/></name> <operator pos:line="49" pos:column="46">&gt;&gt;<pos:position pos:line="49" pos:column="51"/></operator> <literal type="number" pos:line="49" pos:column="49">18<pos:position pos:line="49" pos:column="51"/></literal></expr>]<pos:position pos:line="49" pos:column="52"/></index></name></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">out_cnt<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">&gt;=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="24">result_size<pos:position pos:line="50" pos:column="35"/></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36">
            <block type="pseudo"><return pos:line="51" pos:column="13">return <expr><name pos:line="51" pos:column="20">result_size<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">result<pos:position pos:line="52" pos:column="15"/></name><index pos:line="52" pos:column="15">[<expr><name pos:line="52" pos:column="16">out_cnt<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">++<pos:position pos:line="52" pos:column="25"/></operator></expr>]<pos:position pos:line="52" pos:column="26"/></index></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <name><name pos:line="52" pos:column="29">base64_code<pos:position pos:line="52" pos:column="40"/></name><index pos:line="52" pos:column="40">[<expr><operator pos:line="52" pos:column="41">(<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="42">bits<pos:position pos:line="52" pos:column="46"/></name> <operator pos:line="52" pos:column="47">&gt;&gt;<pos:position pos:line="52" pos:column="52"/></operator> <literal type="number" pos:line="52" pos:column="50">12<pos:position pos:line="52" pos:column="52"/></literal><operator pos:line="52" pos:column="52">)<pos:position pos:line="52" pos:column="53"/></operator> <operator pos:line="52" pos:column="54">&amp;<pos:position pos:line="52" pos:column="59"/></operator> <literal type="number" pos:line="52" pos:column="56">0x3f<pos:position pos:line="52" pos:column="60"/></literal></expr>]<pos:position pos:line="52" pos:column="61"/></index></name></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">char_count<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">==<pos:position pos:line="53" pos:column="26"/></operator> <literal type="number" pos:line="53" pos:column="27">1<pos:position pos:line="53" pos:column="28"/></literal></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29"> <block pos:line="53" pos:column="30">{
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">out_cnt<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">&gt;=<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="28">result_size<pos:position pos:line="54" pos:column="39"/></name></expr>)<pos:position pos:line="54" pos:column="40"/></condition><then pos:line="54" pos:column="40">
                <block type="pseudo"><return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">result_size<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></return></block></then></if>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">result<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><name pos:line="56" pos:column="20">out_cnt<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">++<pos:position pos:line="56" pos:column="29"/></operator></expr>]<pos:position pos:line="56" pos:column="30"/></index></name> <operator pos:line="56" pos:column="31">=<pos:position pos:line="56" pos:column="32"/></operator> <literal type="char" pos:line="56" pos:column="33">'='<pos:position pos:line="56" pos:column="36"/></literal></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">out_cnt<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">&gt;=<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="28">result_size<pos:position pos:line="57" pos:column="39"/></name></expr>)<pos:position pos:line="57" pos:column="40"/></condition><then pos:line="57" pos:column="40">
                <block type="pseudo"><return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">result_size<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></return></block></then></if>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">result<pos:position pos:line="59" pos:column="19"/></name><index pos:line="59" pos:column="19">[<expr><name pos:line="59" pos:column="20">out_cnt<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">++<pos:position pos:line="59" pos:column="29"/></operator></expr>]<pos:position pos:line="59" pos:column="30"/></index></name> <operator pos:line="59" pos:column="31">=<pos:position pos:line="59" pos:column="32"/></operator> <literal type="char" pos:line="59" pos:column="33">'='<pos:position pos:line="59" pos:column="36"/></literal></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then> <else pos:line="60" pos:column="11">else <block pos:line="60" pos:column="16">{
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><name pos:line="61" pos:column="17">out_cnt<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">&gt;=<pos:position pos:line="61" pos:column="30"/></operator> <name pos:line="61" pos:column="28">result_size<pos:position pos:line="61" pos:column="39"/></name></expr>)<pos:position pos:line="61" pos:column="40"/></condition><then pos:line="61" pos:column="40">
                <block type="pseudo"><return pos:line="62" pos:column="17">return <expr><name pos:line="62" pos:column="24">result_size<pos:position pos:line="62" pos:column="35"/></name></expr>;<pos:position pos:line="62" pos:column="36"/></return></block></then></if>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">result<pos:position pos:line="63" pos:column="19"/></name><index pos:line="63" pos:column="19">[<expr><name pos:line="63" pos:column="20">out_cnt<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">++<pos:position pos:line="63" pos:column="29"/></operator></expr>]<pos:position pos:line="63" pos:column="30"/></index></name> <operator pos:line="63" pos:column="31">=<pos:position pos:line="63" pos:column="32"/></operator> <name><name pos:line="63" pos:column="33">base64_code<pos:position pos:line="63" pos:column="44"/></name><index pos:line="63" pos:column="44">[<expr><operator pos:line="63" pos:column="45">(<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="46">bits<pos:position pos:line="63" pos:column="50"/></name> <operator pos:line="63" pos:column="51">&gt;&gt;<pos:position pos:line="63" pos:column="56"/></operator> <literal type="number" pos:line="63" pos:column="54">6<pos:position pos:line="63" pos:column="55"/></literal><operator pos:line="63" pos:column="55">)<pos:position pos:line="63" pos:column="56"/></operator> <operator pos:line="63" pos:column="57">&amp;<pos:position pos:line="63" pos:column="62"/></operator> <literal type="number" pos:line="63" pos:column="59">0x3f<pos:position pos:line="63" pos:column="63"/></literal></expr>]<pos:position pos:line="63" pos:column="64"/></index></name></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><name pos:line="64" pos:column="17">out_cnt<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">&gt;=<pos:position pos:line="64" pos:column="30"/></operator> <name pos:line="64" pos:column="28">result_size<pos:position pos:line="64" pos:column="39"/></name></expr>)<pos:position pos:line="64" pos:column="40"/></condition><then pos:line="64" pos:column="40">
                <block type="pseudo"><return pos:line="65" pos:column="17">return <expr><name pos:line="65" pos:column="24">result_size<pos:position pos:line="65" pos:column="35"/></name></expr>;<pos:position pos:line="65" pos:column="36"/></return></block></then></if>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">result<pos:position pos:line="66" pos:column="19"/></name><index pos:line="66" pos:column="19">[<expr><name pos:line="66" pos:column="20">out_cnt<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">++<pos:position pos:line="66" pos:column="29"/></operator></expr>]<pos:position pos:line="66" pos:column="30"/></index></name> <operator pos:line="66" pos:column="31">=<pos:position pos:line="66" pos:column="32"/></operator> <literal type="char" pos:line="66" pos:column="33">'='<pos:position pos:line="66" pos:column="36"/></literal></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></else></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>
    <return pos:line="69" pos:column="5">return <expr><operator pos:line="69" pos:column="12">(<pos:position pos:line="69" pos:column="13"/></operator><ternary><condition><expr><name pos:line="69" pos:column="13">out_cnt<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">&gt;=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="24">result_size<pos:position pos:line="69" pos:column="35"/></name></expr>?<pos:position pos:line="69" pos:column="36"/></condition><then><expr><name pos:line="69" pos:column="36">result_size<pos:position pos:line="69" pos:column="47"/></name></expr></then><else pos:line="69" pos:column="47">:<expr><name pos:line="69" pos:column="48">out_cnt<pos:position pos:line="69" pos:column="55"/></name></expr></else></ternary><operator pos:line="69" pos:column="55">)<pos:position pos:line="69" pos:column="56"/></operator></expr>;<pos:position pos:line="69" pos:column="57"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

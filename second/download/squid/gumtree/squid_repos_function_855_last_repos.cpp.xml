<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_855_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parsePortSpecification<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name><name pos:line="2" pos:column="30">AnyP<pos:position pos:line="2" pos:column="34"/></name><operator pos:line="2" pos:column="34">::<pos:position pos:line="2" pos:column="36"/></operator><name pos:line="2" pos:column="36">PortCfgPointer<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">&amp;<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="52">s<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">token<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">host<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">short<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">port<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">t<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">junk<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">s<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">disable_pmtu_discovery<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">DISABLE_PMTU_OFF<pos:position pos:line="9" pos:column="49"/></name></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">name<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">xstrdup<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">token<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">s<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">connection_auth_disabled<pos:position pos:line="11" pos:column="32"/></name></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="boolean" pos:line="11" pos:column="35">false<pos:position pos:line="11" pos:column="40"/></literal></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">SBuf<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">&amp;<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="17">portType<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><call><name><name pos:line="13" pos:column="28">AnyP<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">::<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">UriScheme<pos:position pos:line="13" pos:column="43"/></name></name><argument_list pos:line="13" pos:column="43">(<argument><expr><name><name pos:line="13" pos:column="44">s<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">transport<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">.<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="57">protocol<pos:position pos:line="13" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call><operator pos:line="13" pos:column="66">.<pos:position pos:line="13" pos:column="67"/></operator><call><name pos:line="13" pos:column="67">image<pos:position pos:line="13" pos:column="72"/></name><argument_list pos:line="13" pos:column="72">()<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="75"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">token<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <literal type="char" pos:line="15" pos:column="19">'['<pos:position pos:line="15" pos:column="22"/></literal></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23"> <block pos:line="15" pos:column="24">{
        <comment type="block" pos:line="16" pos:column="9">/* [ipv6]:port */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">host<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">token<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">+<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">1<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">t<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">strchr<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">host<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="26">']'<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">t<pos:position pos:line="19" pos:column="15"/></name></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16"> <block pos:line="19" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">3<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">DBG_CRITICAL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="37">"FATAL: "<pos:position pos:line="20" pos:column="46"/></literal> <operator pos:line="20" pos:column="47">&lt;&lt;<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="50">portType<pos:position pos:line="20" pos:column="58"/></name> <operator pos:line="20" pos:column="59">&lt;&lt;<pos:position pos:line="20" pos:column="67"/></operator> <literal type="string" pos:line="20" pos:column="62">"_port: missing ']' on IPv6 address: "<pos:position pos:line="20" pos:column="100"/></literal> <operator pos:line="20" pos:column="101">&lt;&lt;<pos:position pos:line="20" pos:column="109"/></operator> <name pos:line="20" pos:column="104">token<pos:position pos:line="20" pos:column="109"/></name></expr></argument>)<pos:position pos:line="20" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="111"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">self_destruct<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">()<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
            <return pos:line="22" pos:column="13">return;<pos:position pos:line="22" pos:column="20"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">t<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="char" pos:line="24" pos:column="14">'\0'<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="25" pos:column="9">++<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">t<pos:position pos:line="25" pos:column="12"/></name></expr>;<pos:position pos:line="25" pos:column="13"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">t<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="char" pos:line="26" pos:column="19">':'<pos:position pos:line="26" pos:column="22"/></literal></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23"> <block pos:line="26" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">3<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">DBG_CRITICAL<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="37">"FATAL: "<pos:position pos:line="27" pos:column="46"/></literal> <operator pos:line="27" pos:column="47">&lt;&lt;<pos:position pos:line="27" pos:column="55"/></operator> <name pos:line="27" pos:column="50">portType<pos:position pos:line="27" pos:column="58"/></name> <operator pos:line="27" pos:column="59">&lt;&lt;<pos:position pos:line="27" pos:column="67"/></operator> <literal type="string" pos:line="27" pos:column="62">"_port: missing Port in: "<pos:position pos:line="27" pos:column="88"/></literal> <operator pos:line="27" pos:column="89">&lt;&lt;<pos:position pos:line="27" pos:column="97"/></operator> <name pos:line="27" pos:column="92">token<pos:position pos:line="27" pos:column="97"/></name></expr></argument>)<pos:position pos:line="27" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="99"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">self_destruct<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">()<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
            <return pos:line="29" pos:column="13">return;<pos:position pos:line="29" pos:column="20"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">Ip<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">::<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">EnableIpv6<pos:position pos:line="31" pos:column="28"/></name></name></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29"> <block pos:line="31" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">3<pos:position pos:line="32" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="23">DBG_CRITICAL<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="37">"FATAL: "<pos:position pos:line="32" pos:column="46"/></literal> <operator pos:line="32" pos:column="47">&lt;&lt;<pos:position pos:line="32" pos:column="55"/></operator> <name pos:line="32" pos:column="50">portType<pos:position pos:line="32" pos:column="58"/></name> <operator pos:line="32" pos:column="59">&lt;&lt;<pos:position pos:line="32" pos:column="67"/></operator> <literal type="string" pos:line="32" pos:column="62">"_port: IPv6 is not available."<pos:position pos:line="32" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">self_destruct<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">()<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
            <return pos:line="34" pos:column="13">return;<pos:position pos:line="34" pos:column="20"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="36" pos:column="9">port<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">xatos<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">t<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">+<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then> <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if <condition pos:line="37" pos:column="15">(<expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">t<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <call><name pos:line="37" pos:column="21">strchr<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">token<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="35">':'<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call><operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
        <comment type="block" pos:line="38" pos:column="9">/* host:port */</comment>
        <comment type="block" pos:line="39" pos:column="9">/* ipv4:port */</comment>
        <expr_stmt><expr><name pos:line="40" pos:column="9">host<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">token<pos:position pos:line="40" pos:column="21"/></name></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">t<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <literal type="char" pos:line="41" pos:column="14">'\0'<pos:position pos:line="41" pos:column="18"/></literal></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">port<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">xatos<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">t<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">+<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>

    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif> <elseif pos:line="44" pos:column="7">else <if pos:line="44" pos:column="12">if <condition pos:line="44" pos:column="15">(<expr><call><name pos:line="44" pos:column="16">strtol<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">token<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="30">&amp;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="31">junk<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="37">10<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call> <operator pos:line="44" pos:column="41">&amp;&amp;<pos:position pos:line="44" pos:column="51"/></operator> <operator pos:line="44" pos:column="44">!<pos:position pos:line="44" pos:column="45"/></operator><operator pos:line="44" pos:column="45">*<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">junk<pos:position pos:line="44" pos:column="50"/></name></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51"> <block pos:line="44" pos:column="52">{
        <expr_stmt><expr><name pos:line="45" pos:column="9">port<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">xatos<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">token<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">debugs<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">3<pos:position pos:line="46" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="19">3<pos:position pos:line="46" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="22">portType<pos:position pos:line="46" pos:column="30"/></name> <operator pos:line="46" pos:column="31">&lt;&lt;<pos:position pos:line="46" pos:column="39"/></operator> <literal type="string" pos:line="46" pos:column="34">"_port: found Listen on Port: "<pos:position pos:line="46" pos:column="65"/></literal> <operator pos:line="46" pos:column="66">&lt;&lt;<pos:position pos:line="46" pos:column="74"/></operator> <name pos:line="46" pos:column="69">port<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif> <else pos:line="47" pos:column="7">else <block pos:line="47" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">debugs<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="number" pos:line="48" pos:column="16">3<pos:position pos:line="48" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="19">DBG_CRITICAL<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"FATAL: "<pos:position pos:line="48" pos:column="42"/></literal> <operator pos:line="48" pos:column="43">&lt;&lt;<pos:position pos:line="48" pos:column="51"/></operator> <name pos:line="48" pos:column="46">portType<pos:position pos:line="48" pos:column="54"/></name> <operator pos:line="48" pos:column="55">&lt;&lt;<pos:position pos:line="48" pos:column="63"/></operator> <literal type="string" pos:line="48" pos:column="58">"_port: missing Port: "<pos:position pos:line="48" pos:column="81"/></literal> <operator pos:line="48" pos:column="82">&lt;&lt;<pos:position pos:line="48" pos:column="90"/></operator> <name pos:line="48" pos:column="85">token<pos:position pos:line="48" pos:column="90"/></name></expr></argument>)<pos:position pos:line="48" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">self_destruct<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">()<pos:position pos:line="49" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
        <return pos:line="50" pos:column="9">return;<pos:position pos:line="50" pos:column="16"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></else></if>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">port<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">==<pos:position pos:line="53" pos:column="16"/></operator> <literal type="number" pos:line="53" pos:column="17">0<pos:position pos:line="53" pos:column="18"/></literal> <operator pos:line="53" pos:column="19">&amp;&amp;<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="22">host<pos:position pos:line="53" pos:column="26"/></name> <operator pos:line="53" pos:column="27">!=<pos:position pos:line="53" pos:column="29"/></operator> <name pos:line="53" pos:column="30">NULL<pos:position pos:line="53" pos:column="34"/></name></expr>)<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35"> <block pos:line="53" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">3<pos:position pos:line="54" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="19">DBG_CRITICAL<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="33">"FATAL: "<pos:position pos:line="54" pos:column="42"/></literal> <operator pos:line="54" pos:column="43">&lt;&lt;<pos:position pos:line="54" pos:column="51"/></operator> <name pos:line="54" pos:column="46">portType<pos:position pos:line="54" pos:column="54"/></name> <operator pos:line="54" pos:column="55">&lt;&lt;<pos:position pos:line="54" pos:column="63"/></operator> <literal type="string" pos:line="54" pos:column="58">"_port: Port cannot be 0: "<pos:position pos:line="54" pos:column="85"/></literal> <operator pos:line="54" pos:column="86">&lt;&lt;<pos:position pos:line="54" pos:column="94"/></operator> <name pos:line="54" pos:column="89">token<pos:position pos:line="54" pos:column="94"/></name></expr></argument>)<pos:position pos:line="54" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">self_destruct<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">()<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>
        <return pos:line="56" pos:column="9">return;<pos:position pos:line="56" pos:column="16"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">NULL<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">==<pos:position pos:line="59" pos:column="16"/></operator> <name pos:line="59" pos:column="17">host<pos:position pos:line="59" pos:column="21"/></name></expr>)<pos:position pos:line="59" pos:column="22"/></condition><then pos:line="59" pos:column="22"> <block pos:line="59" pos:column="23">{
        <expr_stmt><expr><call><name><name pos:line="60" pos:column="9">s<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">s<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">.<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">setAnyAddr<pos:position pos:line="60" pos:column="24"/></name></name><argument_list pos:line="60" pos:column="24">()<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="61" pos:column="9">s<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">s<pos:position pos:line="61" pos:column="13"/></name><operator pos:line="61" pos:column="13">.<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">port<pos:position pos:line="61" pos:column="18"/></name></name><argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">port<pos:position pos:line="61" pos:column="23"/></name></expr></argument>)<pos:position pos:line="61" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name><name pos:line="62" pos:column="14">Ip<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">::<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">EnableIpv6<pos:position pos:line="62" pos:column="28"/></name></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="63" pos:column="13">s<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">s<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">.<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">setIPv4<pos:position pos:line="63" pos:column="25"/></name></name><argument_list pos:line="63" pos:column="25">()<pos:position pos:line="63" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="number" pos:line="64" pos:column="16">3<pos:position pos:line="64" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="19">3<pos:position pos:line="64" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="22">portType<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">&lt;&lt;<pos:position pos:line="64" pos:column="39"/></operator> <literal type="string" pos:line="64" pos:column="34">"_port: found Listen on wildcard address: *:"<pos:position pos:line="64" pos:column="79"/></literal> <operator pos:line="64" pos:column="80">&lt;&lt;<pos:position pos:line="64" pos:column="88"/></operator> <call><name><name pos:line="64" pos:column="83">s<pos:position pos:line="64" pos:column="84"/></name><operator pos:line="64" pos:column="84">-&gt;<pos:position pos:line="64" pos:column="89"/></operator><name pos:line="64" pos:column="86">s<pos:position pos:line="64" pos:column="87"/></name><operator pos:line="64" pos:column="87">.<pos:position pos:line="64" pos:column="88"/></operator><name pos:line="64" pos:column="88">port<pos:position pos:line="64" pos:column="92"/></name></name><argument_list pos:line="64" pos:column="92">()<pos:position pos:line="64" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="96"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then> <elseif pos:line="65" pos:column="7">else <if pos:line="65" pos:column="12">if <condition pos:line="65" pos:column="15">( <expr><operator pos:line="65" pos:column="17">(<pos:position pos:line="65" pos:column="18"/></operator><name><name pos:line="65" pos:column="18">s<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">s<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">host<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">)<pos:position pos:line="65" pos:column="30"/></operator></expr> )<pos:position pos:line="65" pos:column="32"/></condition><then pos:line="65" pos:column="32"> <block pos:line="65" pos:column="33">{ <comment type="block" pos:line="65" pos:column="35">/* check/parse numeric IPA */</comment>
        <expr_stmt><expr><call><name><name pos:line="66" pos:column="9">s<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">s<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">.<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">port<pos:position pos:line="66" pos:column="18"/></name></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">port<pos:position pos:line="66" pos:column="23"/></name></expr></argument>)<pos:position pos:line="66" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><name><name pos:line="67" pos:column="14">Ip<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">::<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">EnableIpv6<pos:position pos:line="67" pos:column="28"/></name></name></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="68" pos:column="13">s<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">s<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">.<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">setIPv4<pos:position pos:line="68" pos:column="25"/></name></name><argument_list pos:line="68" pos:column="25">()<pos:position pos:line="68" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">3<pos:position pos:line="69" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="19">3<pos:position pos:line="69" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="22">portType<pos:position pos:line="69" pos:column="30"/></name> <operator pos:line="69" pos:column="31">&lt;&lt;<pos:position pos:line="69" pos:column="39"/></operator> <literal type="string" pos:line="69" pos:column="34">"_port: Listen on Host/IP: "<pos:position pos:line="69" pos:column="62"/></literal> <operator pos:line="69" pos:column="63">&lt;&lt;<pos:position pos:line="69" pos:column="71"/></operator> <name pos:line="69" pos:column="66">host<pos:position pos:line="69" pos:column="70"/></name> <operator pos:line="69" pos:column="71">&lt;&lt;<pos:position pos:line="69" pos:column="79"/></operator> <literal type="string" pos:line="69" pos:column="74">" --&gt; "<pos:position pos:line="69" pos:column="84"/></literal> <operator pos:line="69" pos:column="82">&lt;&lt;<pos:position pos:line="69" pos:column="90"/></operator> <name><name pos:line="69" pos:column="85">s<pos:position pos:line="69" pos:column="86"/></name><operator pos:line="69" pos:column="86">-&gt;<pos:position pos:line="69" pos:column="91"/></operator><name pos:line="69" pos:column="88">s<pos:position pos:line="69" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if></elseif> <elseif pos:line="70" pos:column="7">else <if pos:line="70" pos:column="12">if <condition pos:line="70" pos:column="15">( <expr><call><name><name pos:line="70" pos:column="17">s<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">-&gt;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="20">s<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">.<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">GetHostByName<pos:position pos:line="70" pos:column="35"/></name></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name pos:line="70" pos:column="36">host<pos:position pos:line="70" pos:column="40"/></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="70" pos:column="43"/></condition><then pos:line="70" pos:column="43"> <block pos:line="70" pos:column="44">{ <comment type="block" pos:line="70" pos:column="46">/* check/parse for FQDN */</comment>
        <comment type="block" pos:line="71" pos:column="9">/* dont use ipcache */</comment>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">s<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">defaultsite<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <call><name pos:line="72" pos:column="26">xstrdup<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">(<argument><expr><name pos:line="72" pos:column="34">host<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="73" pos:column="9">s<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">-&gt;<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="12">s<pos:position pos:line="73" pos:column="13"/></name><operator pos:line="73" pos:column="13">.<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">port<pos:position pos:line="73" pos:column="18"/></name></name><argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">port<pos:position pos:line="73" pos:column="23"/></name></expr></argument>)<pos:position pos:line="73" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><name><name pos:line="74" pos:column="14">Ip<pos:position pos:line="74" pos:column="16"/></name><operator pos:line="74" pos:column="16">::<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">EnableIpv6<pos:position pos:line="74" pos:column="28"/></name></name></expr>)<pos:position pos:line="74" pos:column="29"/></condition><then pos:line="74" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="75" pos:column="13">s<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">-&gt;<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="16">s<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">setIPv4<pos:position pos:line="75" pos:column="25"/></name></name><argument_list pos:line="75" pos:column="25">()<pos:position pos:line="75" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">debugs<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="number" pos:line="76" pos:column="16">3<pos:position pos:line="76" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="19">3<pos:position pos:line="76" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="22">portType<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">&lt;&lt;<pos:position pos:line="76" pos:column="39"/></operator> <literal type="string" pos:line="76" pos:column="34">"_port: found Listen as Host "<pos:position pos:line="76" pos:column="64"/></literal> <operator pos:line="76" pos:column="65">&lt;&lt;<pos:position pos:line="76" pos:column="73"/></operator> <name><name pos:line="76" pos:column="68">s<pos:position pos:line="76" pos:column="69"/></name><operator pos:line="76" pos:column="69">-&gt;<pos:position pos:line="76" pos:column="74"/></operator><name pos:line="76" pos:column="71">defaultsite<pos:position pos:line="76" pos:column="82"/></name></name> <operator pos:line="76" pos:column="83">&lt;&lt;<pos:position pos:line="76" pos:column="91"/></operator> <literal type="string" pos:line="76" pos:column="86">" on IP: "<pos:position pos:line="76" pos:column="96"/></literal> <operator pos:line="76" pos:column="97">&lt;&lt;<pos:position pos:line="76" pos:column="105"/></operator> <name><name pos:line="76" pos:column="100">s<pos:position pos:line="76" pos:column="101"/></name><operator pos:line="76" pos:column="101">-&gt;<pos:position pos:line="76" pos:column="106"/></operator><name pos:line="76" pos:column="103">s<pos:position pos:line="76" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="106"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if></elseif> <else pos:line="77" pos:column="7">else <block pos:line="77" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">debugs<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="number" pos:line="78" pos:column="16">3<pos:position pos:line="78" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="19">DBG_CRITICAL<pos:position pos:line="78" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="33">"FATAL: "<pos:position pos:line="78" pos:column="42"/></literal> <operator pos:line="78" pos:column="43">&lt;&lt;<pos:position pos:line="78" pos:column="51"/></operator> <name pos:line="78" pos:column="46">portType<pos:position pos:line="78" pos:column="54"/></name> <operator pos:line="78" pos:column="55">&lt;&lt;<pos:position pos:line="78" pos:column="63"/></operator> <literal type="string" pos:line="78" pos:column="58">"_port: failed to resolve Host/IP: "<pos:position pos:line="78" pos:column="94"/></literal> <operator pos:line="78" pos:column="95">&lt;&lt;<pos:position pos:line="78" pos:column="103"/></operator> <name pos:line="78" pos:column="98">host<pos:position pos:line="78" pos:column="102"/></name></expr></argument>)<pos:position pos:line="78" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="104"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">self_destruct<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">()<pos:position pos:line="79" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></else></if>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4827_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">validateOptions<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">max_objsize<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&lt;=<pos:position pos:line="4" pos:column="26"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">fatal<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="string" pos:line="5" pos:column="15">"Rock store requires a positive max-size"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">int64_t<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">maxSizeRoundingWaste<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><literal type="number" pos:line="7" pos:column="42">1024<pos:position pos:line="7" pos:column="46"/></literal> <operator pos:line="7" pos:column="47">*<pos:position pos:line="7" pos:column="48"/></operator> <literal type="number" pos:line="7" pos:column="49">1024<pos:position pos:line="7" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt> <comment type="line" pos:line="7" pos:column="55">// size is configured in MB</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">int64_t<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">maxObjectSizeRoundingWaste<pos:position pos:line="8" pos:column="45"/></name> <init pos:line="8" pos:column="46">= <expr><call><name pos:line="8" pos:column="48">maxObjectSize<pos:position pos:line="8" pos:column="61"/></name><argument_list pos:line="8" pos:column="61">()<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">int64_t<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">maxRoundingWaste<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">=
        <expr><call><name pos:line="10" pos:column="9">max<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">maxSizeRoundingWaste<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">maxObjectSizeRoundingWaste<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int64_t<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">usableDiskSize<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><call><name pos:line="11" pos:column="36">diskOffset<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><call><name pos:line="11" pos:column="47">entryLimitAllowed<pos:position pos:line="11" pos:column="64"/></name><argument_list pos:line="11" pos:column="64">()<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">int64_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">diskWasteSize<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><call><name pos:line="12" pos:column="35">maxSize<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">()<pos:position pos:line="12" pos:column="44"/></argument_list></call> <operator pos:line="12" pos:column="45">-<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">usableDiskSize<pos:position pos:line="12" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="62"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Must<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">diskWasteSize<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">&gt;=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

    <comment type="line" pos:line="15" pos:column="5">// warn if maximum db size is not reachable due to sfileno limit</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">entryLimitAllowed<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">()<pos:position pos:line="16" pos:column="28"/></argument_list></call> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <call><name pos:line="16" pos:column="32">entryLimitHigh<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">()<pos:position pos:line="16" pos:column="48"/></argument_list></call> <operator pos:line="16" pos:column="49">&amp;&amp;<pos:position pos:line="16" pos:column="59"/></operator>
            <name pos:line="17" pos:column="13">diskWasteSize<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&gt;=<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="30">maxRoundingWaste<pos:position pos:line="17" pos:column="46"/></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47"> <block pos:line="17" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">47<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">DBG_CRITICAL<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"Rock store cache_dir["<pos:position pos:line="18" pos:column="57"/></literal> <operator pos:line="18" pos:column="58">&lt;&lt;<pos:position pos:line="18" pos:column="66"/></operator> <name pos:line="18" pos:column="61">index<pos:position pos:line="18" pos:column="66"/></name> <operator pos:line="18" pos:column="67">&lt;&lt;<pos:position pos:line="18" pos:column="75"/></operator> <literal type="string" pos:line="18" pos:column="70">"] '"<pos:position pos:line="18" pos:column="75"/></literal> <operator pos:line="18" pos:column="76">&lt;&lt;<pos:position pos:line="18" pos:column="84"/></operator> <name pos:line="18" pos:column="79">path<pos:position pos:line="18" pos:column="83"/></name> <operator pos:line="18" pos:column="84">&lt;&lt;<pos:position pos:line="18" pos:column="92"/></operator> <literal type="string" pos:line="18" pos:column="87">"':"<pos:position pos:line="18" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">47<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="20">DBG_CRITICAL<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"\tmaximum number of entries: "<pos:position pos:line="19" pos:column="65"/></literal> <operator pos:line="19" pos:column="66">&lt;&lt;<pos:position pos:line="19" pos:column="74"/></operator> <call><name pos:line="19" pos:column="69">entryLimitAllowed<pos:position pos:line="19" pos:column="86"/></name><argument_list pos:line="19" pos:column="86">()<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">47<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="20">DBG_CRITICAL<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"\tmaximum object size: "<pos:position pos:line="20" pos:column="59"/></literal> <operator pos:line="20" pos:column="60">&lt;&lt;<pos:position pos:line="20" pos:column="68"/></operator> <call><name pos:line="20" pos:column="63">maxObjectSize<pos:position pos:line="20" pos:column="76"/></name><argument_list pos:line="20" pos:column="76">()<pos:position pos:line="20" pos:column="78"/></argument_list></call> <operator pos:line="20" pos:column="79">&lt;&lt;<pos:position pos:line="20" pos:column="87"/></operator> <literal type="string" pos:line="20" pos:column="82">" Bytes"<pos:position pos:line="20" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">47<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="20">DBG_CRITICAL<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"\tmaximum db size: "<pos:position pos:line="21" pos:column="55"/></literal> <operator pos:line="21" pos:column="56">&lt;&lt;<pos:position pos:line="21" pos:column="64"/></operator> <call><name pos:line="21" pos:column="59">maxSize<pos:position pos:line="21" pos:column="66"/></name><argument_list pos:line="21" pos:column="66">()<pos:position pos:line="21" pos:column="68"/></argument_list></call> <operator pos:line="21" pos:column="69">&lt;&lt;<pos:position pos:line="21" pos:column="77"/></operator> <literal type="string" pos:line="21" pos:column="72">" Bytes"<pos:position pos:line="21" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">47<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">DBG_CRITICAL<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"\tusable db size:  "<pos:position pos:line="22" pos:column="55"/></literal> <operator pos:line="22" pos:column="56">&lt;&lt;<pos:position pos:line="22" pos:column="64"/></operator> <name pos:line="22" pos:column="59">usableDiskSize<pos:position pos:line="22" pos:column="73"/></name> <operator pos:line="22" pos:column="74">&lt;&lt;<pos:position pos:line="22" pos:column="82"/></operator> <literal type="string" pos:line="22" pos:column="77">" Bytes"<pos:position pos:line="22" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">47<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">DBG_CRITICAL<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"\tdisk space waste: "<pos:position pos:line="23" pos:column="56"/></literal> <operator pos:line="23" pos:column="57">&lt;&lt;<pos:position pos:line="23" pos:column="65"/></operator> <name pos:line="23" pos:column="60">diskWasteSize<pos:position pos:line="23" pos:column="73"/></name> <operator pos:line="23" pos:column="74">&lt;&lt;<pos:position pos:line="23" pos:column="82"/></operator> <literal type="string" pos:line="23" pos:column="77">" Bytes"<pos:position pos:line="23" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">47<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">DBG_CRITICAL<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"WARNING: Rock store config wastes space."<pos:position pos:line="24" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

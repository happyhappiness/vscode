<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3462_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">sendMoreData<pos:position pos:line="2" pos:column="33"/></name></name> <parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name pos:line="2" pos:column="35">StoreIOBuffer<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">result<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">deleting<pos:position pos:line="4" pos:column="17"/></name></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">StoreEntry<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">entry<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><call><name><name pos:line="7" pos:column="25">http<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">storeEntry<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ConnStateData<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type> <name pos:line="9" pos:column="21">conn<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><call><name><name pos:line="9" pos:column="28">http<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">getConn<pos:position pos:line="9" pos:column="41"/></name></name><argument_list pos:line="9" pos:column="41">()<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>

    <comment type="line" pos:line="11" pos:column="5">// too late, our conn is closing</comment>
    <comment type="line" pos:line="12" pos:column="5">// TODO: should we also quit?</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">conn<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">==<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">NULL<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22"> <block pos:line="13" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">33<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="19">3<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="22">"not sending more data to a closed connection"<pos:position pos:line="14" pos:column="68"/></literal></expr></argument> )<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name><name pos:line="17" pos:column="10">conn<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">isOpen<pos:position pos:line="17" pos:column="22"/></name></name><argument_list pos:line="17" pos:column="22">()<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25"> <block pos:line="17" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">33<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="19">3<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="22">"not sending more data to closing connection "<pos:position pos:line="18" pos:column="68"/></literal> <operator pos:line="18" pos:column="69">&lt;&lt;<pos:position pos:line="18" pos:column="77"/></operator> <name><name pos:line="18" pos:column="72">conn<pos:position pos:line="18" pos:column="76"/></name><operator pos:line="18" pos:column="76">-&gt;<pos:position pos:line="18" pos:column="81"/></operator><name pos:line="18" pos:column="78">clientConnection<pos:position pos:line="18" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="96"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">conn<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">pinning<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">.<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">zeroReply<pos:position pos:line="21" pos:column="32"/></name></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33"> <block pos:line="21" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">33<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="22" pos:column="19">3<pos:position pos:line="22" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="22">"not sending more data after a pinned zero reply "<pos:position pos:line="22" pos:column="72"/></literal> <operator pos:line="22" pos:column="73">&lt;&lt;<pos:position pos:line="22" pos:column="81"/></operator> <name><name pos:line="22" pos:column="76">conn<pos:position pos:line="22" pos:column="80"/></name><operator pos:line="22" pos:column="80">-&gt;<pos:position pos:line="22" pos:column="85"/></operator><name pos:line="22" pos:column="82">clientConnection<pos:position pos:line="22" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="100"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">buf<pos:position pos:line="26" pos:column="14"/></name> <init pos:line="26" pos:column="15">= <expr><call><name pos:line="26" pos:column="17">next<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">()<pos:position pos:line="26" pos:column="23"/></argument_list></call><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name><name pos:line="26" pos:column="25">readBuffer<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">data<pos:position pos:line="26" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="41"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">buf<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">!=<pos:position pos:line="28" pos:column="15"/></operator> <name><name pos:line="28" pos:column="16">result<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">data<pos:position pos:line="28" pos:column="27"/></name></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28"> <block pos:line="28" pos:column="29">{
        <comment type="block" pos:line="29" pos:column="9">/* we've got to copy some data */</comment>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">assert<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name><name pos:line="30" pos:column="16">result<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">length<pos:position pos:line="30" pos:column="29"/></name></name> <operator pos:line="30" pos:column="30">&lt;=<pos:position pos:line="30" pos:column="35"/></operator> <call><name pos:line="30" pos:column="33">next<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">()<pos:position pos:line="30" pos:column="39"/></argument_list></call><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name><name pos:line="30" pos:column="41">readBuffer<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">.<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="52">length<pos:position pos:line="30" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">memcpy<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">buf<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="21">result<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">data<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="34">result<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">.<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">length<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">reqofs<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator><literal type="number" pos:line="34" pos:column="17">0<pos:position pos:line="34" pos:column="18"/></literal> <operator pos:line="34" pos:column="19">&amp;&amp;<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="22">!<pos:position pos:line="34" pos:column="23"/></operator><call><name pos:line="34" pos:column="23">logTypeIsATcpHit<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name><name pos:line="34" pos:column="40">http<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">logType<pos:position pos:line="34" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call> <operator pos:line="34" pos:column="55">&amp;&amp;<pos:position pos:line="34" pos:column="65"/></operator> <call><name><name pos:line="34" pos:column="58">Comm<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">::<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="64">IsConnOpen<pos:position pos:line="34" pos:column="74"/></name></name><argument_list pos:line="34" pos:column="74">(<argument><expr><name><name pos:line="34" pos:column="75">conn<pos:position pos:line="34" pos:column="79"/></name><operator pos:line="34" pos:column="79">-&gt;<pos:position pos:line="34" pos:column="84"/></operator><name pos:line="34" pos:column="81">clientConnection<pos:position pos:line="34" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="99"/></condition><then pos:line="34" pos:column="99"> <block pos:line="34" pos:column="100">{
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name><name pos:line="35" pos:column="13">Ip<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">::<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">Qos<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">::<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">TheConfig<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">isHitTosActive<pos:position pos:line="35" pos:column="46"/></name></name><argument_list pos:line="35" pos:column="46">()<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="49"/></condition><then pos:line="35" pos:column="49"> <block pos:line="35" pos:column="50">{
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Ip<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">::<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">Qos<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">::<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">doTosLocalMiss<pos:position pos:line="36" pos:column="36"/></name></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">conn<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">-&gt;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="43">clientConnection<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="61">http<pos:position pos:line="36" pos:column="65"/></name><operator pos:line="36" pos:column="65">-&gt;<pos:position pos:line="36" pos:column="70"/></operator><name pos:line="36" pos:column="67">request<pos:position pos:line="36" pos:column="74"/></name><operator pos:line="36" pos:column="74">-&gt;<pos:position pos:line="36" pos:column="79"/></operator><name pos:line="36" pos:column="76">hier<pos:position pos:line="36" pos:column="80"/></name><operator pos:line="36" pos:column="80">.<pos:position pos:line="36" pos:column="81"/></operator><name pos:line="36" pos:column="81">code<pos:position pos:line="36" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="87"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name><name pos:line="38" pos:column="13">Ip<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">::<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">Qos<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">::<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">TheConfig<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">.<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">isHitNfmarkActive<pos:position pos:line="38" pos:column="49"/></name></name><argument_list pos:line="38" pos:column="49">()<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="52"/></condition><then pos:line="38" pos:column="52"> <block pos:line="38" pos:column="53">{
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">Ip<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">::<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">Qos<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">::<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">doNfmarkLocalMiss<pos:position pos:line="39" pos:column="39"/></name></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name><name pos:line="39" pos:column="40">conn<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">clientConnection<pos:position pos:line="39" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="64">http<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">request<pos:position pos:line="39" pos:column="77"/></name><operator pos:line="39" pos:column="77">-&gt;<pos:position pos:line="39" pos:column="82"/></operator><name pos:line="39" pos:column="79">hier<pos:position pos:line="39" pos:column="83"/></name><operator pos:line="39" pos:column="83">.<pos:position pos:line="39" pos:column="84"/></operator><name pos:line="39" pos:column="84">code<pos:position pos:line="39" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="90"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* We've got the final data to start pushing... */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">flags<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">.<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">storelogiccomplete<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="32">1<pos:position pos:line="44" pos:column="33"/></literal></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">reqofs<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">+=<pos:position pos:line="46" pos:column="14"/></operator> <name><name pos:line="46" pos:column="15">result<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">.<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">length<pos:position pos:line="46" pos:column="28"/></name></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><name pos:line="48" pos:column="12">reqofs<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">&lt;=<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="22">HTTP_REQBUF_SZ<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">||<pos:position pos:line="48" pos:column="39"/></operator> <name><name pos:line="48" pos:column="40">flags<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">headersSent<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">assert<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name><name pos:line="50" pos:column="12">http<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">request<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">!=<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">NULL<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* ESI TODO: remove this assert once everything is stable */</comment>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">assert<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name><name pos:line="53" pos:column="12">http<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">client_stream<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">head<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">-&gt;<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="38">data<pos:position pos:line="53" pos:column="42"/></name></name>
           <operator pos:line="54" pos:column="12">&amp;&amp;<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="15">cbdataReferenceValid<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name><name pos:line="54" pos:column="36">http<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">client_stream<pos:position pos:line="54" pos:column="55"/></name><operator pos:line="54" pos:column="55">.<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="56">head<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">data<pos:position pos:line="54" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">makeThisHead<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">()<pos:position pos:line="56" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">debugs<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><literal type="number" pos:line="58" pos:column="12">88<pos:position pos:line="58" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="16">5<pos:position pos:line="58" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="19">"clientReplyContext::sendMoreData: "<pos:position pos:line="58" pos:column="55"/></literal> <operator pos:line="58" pos:column="56">&lt;&lt;<pos:position pos:line="58" pos:column="64"/></operator> <name><name pos:line="58" pos:column="59">http<pos:position pos:line="58" pos:column="63"/></name><operator pos:line="58" pos:column="63">-&gt;<pos:position pos:line="58" pos:column="68"/></operator><name pos:line="58" pos:column="65">uri<pos:position pos:line="58" pos:column="68"/></name></name> <operator pos:line="58" pos:column="69">&lt;&lt;<pos:position pos:line="58" pos:column="77"/></operator> <literal type="string" pos:line="58" pos:column="72">", "<pos:position pos:line="58" pos:column="76"/></literal> <operator pos:line="58" pos:column="77">&lt;&lt;<pos:position pos:line="58" pos:column="85"/></operator>
           <name pos:line="59" pos:column="12">reqofs<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">&lt;&lt;<pos:position pos:line="59" pos:column="27"/></operator> <literal type="string" pos:line="59" pos:column="22">" bytes ("<pos:position pos:line="59" pos:column="32"/></literal> <operator pos:line="59" pos:column="33">&lt;&lt;<pos:position pos:line="59" pos:column="41"/></operator> <name><name pos:line="59" pos:column="36">result<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">.<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="43">length<pos:position pos:line="59" pos:column="49"/></name></name> <operator pos:line="59" pos:column="50">&lt;&lt;<pos:position pos:line="59" pos:column="58"/></operator>
           <literal type="string" pos:line="60" pos:column="12">" new bytes)"<pos:position pos:line="60" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">debugs<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><literal type="number" pos:line="61" pos:column="12">88<pos:position pos:line="61" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="16">5<pos:position pos:line="61" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="19">"clientReplyContext::sendMoreData:"<pos:position pos:line="61" pos:column="54"/></literal>
           <operator pos:line="62" pos:column="12">&lt;&lt;<pos:position pos:line="62" pos:column="20"/></operator> <name><name pos:line="62" pos:column="15">conn<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">-&gt;<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="21">clientConnection<pos:position pos:line="62" pos:column="37"/></name></name> <operator pos:line="62" pos:column="38">&lt;&lt;<pos:position pos:line="62" pos:column="46"/></operator>
           <literal type="string" pos:line="63" pos:column="12">" '"<pos:position pos:line="63" pos:column="16"/></literal> <operator pos:line="63" pos:column="17">&lt;&lt;<pos:position pos:line="63" pos:column="25"/></operator> <call><name><name pos:line="63" pos:column="20">entry<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">-&gt;<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="27">url<pos:position pos:line="63" pos:column="30"/></name></name><argument_list pos:line="63" pos:column="30">()<pos:position pos:line="63" pos:column="32"/></argument_list></call> <operator pos:line="63" pos:column="33">&lt;&lt;<pos:position pos:line="63" pos:column="41"/></operator> <literal type="string" pos:line="63" pos:column="36">"'"<pos:position pos:line="63" pos:column="39"/></literal> <operator pos:line="63" pos:column="40">&lt;&lt;<pos:position pos:line="63" pos:column="48"/></operator>
           <literal type="string" pos:line="64" pos:column="12">" out.offset="<pos:position pos:line="64" pos:column="26"/></literal> <operator pos:line="64" pos:column="27">&lt;&lt;<pos:position pos:line="64" pos:column="35"/></operator> <name><name pos:line="64" pos:column="30">http<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">out<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">.<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">offset<pos:position pos:line="64" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="66" pos:column="5">/* update size of the request */</comment>
    <expr_stmt><expr><name pos:line="67" pos:column="5">reqsize<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <name pos:line="67" pos:column="15">reqofs<pos:position pos:line="67" pos:column="21"/></name></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><call><name pos:line="69" pos:column="9">errorInStream<pos:position pos:line="69" pos:column="22"/></name><argument_list pos:line="69" pos:column="22">(<argument><expr><name pos:line="69" pos:column="23">result<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="31">reqofs<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="39"/></condition><then pos:line="69" pos:column="39"> <block pos:line="69" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">sendStreamError<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">result<pos:position pos:line="70" pos:column="31"/></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
        <return pos:line="71" pos:column="9">return;<pos:position pos:line="71" pos:column="16"/></return>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name><name pos:line="74" pos:column="9">flags<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">.<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">headersSent<pos:position pos:line="74" pos:column="26"/></name></name></expr>)<pos:position pos:line="74" pos:column="27"/></condition><then pos:line="74" pos:column="27"> <block pos:line="74" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">pushStreamData<pos:position pos:line="75" pos:column="23"/></name> <argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">result<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="33">buf<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
        <return pos:line="76" pos:column="9">return;<pos:position pos:line="76" pos:column="16"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="79" pos:column="5">cloneReply<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">()<pos:position pos:line="79" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="81" pos:column="5">/* handle headers */</comment>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">Config<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">.<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="16">onoff<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">.<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">log_mime_hdrs<pos:position pos:line="83" pos:column="35"/></name></name></expr>)<pos:position pos:line="83" pos:column="36"/></condition><then pos:line="83" pos:column="36"> <block pos:line="83" pos:column="37">{
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">size_t<pos:position pos:line="84" pos:column="15"/></name></type> <name pos:line="84" pos:column="16">k<pos:position pos:line="84" pos:column="17"/></name></decl>;<pos:position pos:line="84" pos:column="18"/></decl_stmt>

        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">(<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">k<pos:position pos:line="86" pos:column="15"/></name> <operator pos:line="86" pos:column="16">=<pos:position pos:line="86" pos:column="17"/></operator> <call><name pos:line="86" pos:column="18">headersEnd<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">buf<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="34">reqofs<pos:position pos:line="86" pos:column="40"/></name></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call><operator pos:line="86" pos:column="41">)<pos:position pos:line="86" pos:column="42"/></operator></expr>)<pos:position pos:line="86" pos:column="43"/></condition><then pos:line="86" pos:column="43"> <block pos:line="86" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">safe_free<pos:position pos:line="87" pos:column="22"/></name><argument_list pos:line="87" pos:column="22">(<argument><expr><name><name pos:line="87" pos:column="23">http<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">al<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">-&gt;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="33">headers<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">.<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="41">reply<pos:position pos:line="87" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">http<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">-&gt;<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="19">al<pos:position pos:line="88" pos:column="21"/></name><operator pos:line="88" pos:column="21">-&gt;<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="23">headers<pos:position pos:line="88" pos:column="30"/></name><operator pos:line="88" pos:column="30">.<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="31">reply<pos:position pos:line="88" pos:column="36"/></name></name> <operator pos:line="88" pos:column="37">=<pos:position pos:line="88" pos:column="38"/></operator> <operator pos:line="88" pos:column="39">(<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="40">char<pos:position pos:line="88" pos:column="44"/></name> <operator pos:line="88" pos:column="45">*<pos:position pos:line="88" pos:column="46"/></operator><operator pos:line="88" pos:column="46">)<pos:position pos:line="88" pos:column="47"/></operator><call><name pos:line="88" pos:column="47">xcalloc<pos:position pos:line="88" pos:column="54"/></name><argument_list pos:line="88" pos:column="54">(<argument><expr><name pos:line="88" pos:column="55">k<pos:position pos:line="88" pos:column="56"/></name> <operator pos:line="88" pos:column="57">+<pos:position pos:line="88" pos:column="58"/></operator> <literal type="number" pos:line="88" pos:column="59">1<pos:position pos:line="88" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="62">1<pos:position pos:line="88" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">xstrncpy<pos:position pos:line="89" pos:column="21"/></name><argument_list pos:line="89" pos:column="21">(<argument><expr><name><name pos:line="89" pos:column="22">http<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">-&gt;<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="28">al<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">-&gt;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="32">headers<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">.<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="40">reply<pos:position pos:line="89" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="47">buf<pos:position pos:line="89" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="52">k<pos:position pos:line="89" pos:column="53"/></name></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="93" pos:column="5">holdingBuffer<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">=<pos:position pos:line="93" pos:column="20"/></operator> <name pos:line="93" pos:column="21">result<pos:position pos:line="93" pos:column="27"/></name></expr>;<pos:position pos:line="93" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">processReplyAccess<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">()<pos:position pos:line="94" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="26"/></expr_stmt>
    <return pos:line="95" pos:column="5">return;<pos:position pos:line="95" pos:column="12"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

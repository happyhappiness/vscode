<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2305_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">accessLogCustom<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">AccessLogEntry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">al<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">customlog<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">log<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">logformat<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">lf<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">Logfile<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">logfile<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">logformat_token<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">fmt<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">MemBuf<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">mb<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">tmp<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><literal type="number" pos:line="8" pos:column="14">1024<pos:position pos:line="8" pos:column="18"/></literal></expr>]<pos:position pos:line="8" pos:column="19"/></index></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">String<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">sb<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">mb<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">reset<pos:position pos:line="11" pos:column="13"/></name></name><argument_list pos:line="11" pos:column="13">()<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">lf<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <name><name pos:line="13" pos:column="10">log<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">logFormat<pos:position pos:line="13" pos:column="24"/></name></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">logfile<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name><name pos:line="14" pos:column="15">log<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">logfile<pos:position pos:line="14" pos:column="27"/></name></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">fmt<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">lf<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">format<pos:position pos:line="16" pos:column="26"/></name></name></expr>;<pos:position pos:line="16" pos:column="27"/></init> <condition><expr><name pos:line="16" pos:column="28">fmt<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">!=<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">NULL<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></condition> <incr><expr><name pos:line="16" pos:column="41">fmt<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">=<pos:position pos:line="16" pos:column="46"/></operator> <name><name pos:line="16" pos:column="47">fmt<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">next<pos:position pos:line="16" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="57"/></control> <block pos:line="16" pos:column="58">{	<comment type="block" pos:line="16" pos:column="65">/* for each token */</comment>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">out<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">quote<pos:position pos:line="18" pos:column="18"/></name> <init pos:line="18" pos:column="19">= <expr><literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">long<pos:position pos:line="19" pos:column="13"/></name> <name pos:line="19" pos:column="14">int<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">outint<pos:position pos:line="19" pos:column="24"/></name> <init pos:line="19" pos:column="25">= <expr><literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">doint<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">dofree<pos:position pos:line="21" pos:column="19"/></name> <init pos:line="21" pos:column="20">= <expr><literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">int64_t<pos:position pos:line="22" pos:column="16"/></name></type> <name pos:line="22" pos:column="17">outoff<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">dooff<pos:position pos:line="23" pos:column="18"/></name> <init pos:line="23" pos:column="19">= <expr><literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>

        <switch pos:line="25" pos:column="9">switch <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">fmt<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">type<pos:position pos:line="25" pos:column="26"/></name></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition> <block pos:line="25" pos:column="28">{

        <case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">LFT_NONE<pos:position pos:line="27" pos:column="22"/></name></expr>:<pos:position pos:line="27" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="28" pos:column="13">out<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="string" pos:line="28" pos:column="19">""<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>

        <case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">LFT_STRING<pos:position pos:line="31" pos:column="24"/></name></expr>:<pos:position pos:line="31" pos:column="25"/></case>
            <expr_stmt><expr><name pos:line="32" pos:column="13">out<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name><name pos:line="32" pos:column="19">fmt<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">data<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">string<pos:position pos:line="32" pos:column="35"/></name></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>

        <case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">LFT_CLIENT_IP_ADDRESS<pos:position pos:line="35" pos:column="35"/></name></expr>:<pos:position pos:line="35" pos:column="36"/></case>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name><name pos:line="36" pos:column="17">al<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">cache<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">caddr<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">.<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">IsNoAddr<pos:position pos:line="36" pos:column="41"/></name></name><argument_list pos:line="36" pos:column="41">()<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <comment type="line" pos:line="36" pos:column="45">// e.g., ICAP OPTIONS lack client</comment>
                <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">out<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <literal type="string" pos:line="37" pos:column="23">"-"<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt></block></then>
            <else pos:line="38" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">out<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <call><name><name pos:line="39" pos:column="23">al<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">cache<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">caddr<pos:position pos:line="39" pos:column="38"/></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">NtoA<pos:position pos:line="39" pos:column="43"/></name></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">tmp<pos:position pos:line="39" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="39" pos:column="48">1024<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt></block></else></if>
            <break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break>

        <case pos:line="42" pos:column="9">case <expr><name pos:line="42" pos:column="14">LFT_CLIENT_FQDN<pos:position pos:line="42" pos:column="29"/></name></expr>:<pos:position pos:line="42" pos:column="30"/></case>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><call><name><name pos:line="43" pos:column="17">al<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">cache<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">.<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">caddr<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">.<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">IsAnyAddr<pos:position pos:line="43" pos:column="42"/></name></name><argument_list pos:line="43" pos:column="42">()<pos:position pos:line="43" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45"> <comment type="line" pos:line="43" pos:column="46">// e.g., ICAP OPTIONS lack client</comment>
                <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">out<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <literal type="string" pos:line="44" pos:column="23">"-"<pos:position pos:line="44" pos:column="26"/></literal></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt></block></then>
            <else pos:line="45" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">out<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">fqdncache_gethostbyaddr<pos:position pos:line="46" pos:column="46"/></name><argument_list pos:line="46" pos:column="46">(<argument><expr><name><name pos:line="46" pos:column="47">al<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">cache<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">.<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="57">caddr<pos:position pos:line="46" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">FQDN_LOOKUP_IF_MISS<pos:position pos:line="46" pos:column="83"/></name></expr></argument>)<pos:position pos:line="46" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="85"/></expr_stmt></block></else></if>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">out<pos:position pos:line="47" pos:column="21"/></name></expr>)<pos:position pos:line="47" pos:column="22"/></condition><then pos:line="47" pos:column="22"> <block pos:line="47" pos:column="23">{
                <expr_stmt><expr><name pos:line="48" pos:column="17">out<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <call><name><name pos:line="48" pos:column="23">al<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">cache<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">caddr<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">.<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">NtoA<pos:position pos:line="48" pos:column="43"/></name></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">tmp<pos:position pos:line="48" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="48" pos:column="48">1024<pos:position pos:line="48" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>

            <break pos:line="51" pos:column="13">break;<pos:position pos:line="51" pos:column="19"/></break>

        <case pos:line="53" pos:column="9">case <expr><name pos:line="53" pos:column="14">LFT_CLIENT_PORT<pos:position pos:line="53" pos:column="29"/></name></expr>:<pos:position pos:line="53" pos:column="30"/></case>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name><name pos:line="54" pos:column="17">al<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">request<pos:position pos:line="54" pos:column="28"/></name></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <block pos:line="54" pos:column="30">{
                <expr_stmt><expr><name pos:line="55" pos:column="17">outint<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <call><name><name pos:line="55" pos:column="26">al<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">request<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">client_addr<pos:position pos:line="55" pos:column="50"/></name><operator pos:line="55" pos:column="50">.<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="51">GetPort<pos:position pos:line="55" pos:column="58"/></name></name><argument_list pos:line="55" pos:column="58">()<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name pos:line="56" pos:column="17">doint<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if>
            <break pos:line="58" pos:column="13">break;<pos:position pos:line="58" pos:column="19"/></break>

            <comment type="block" pos:line="60" pos:column="13">/* case LFT_SERVER_IP_ADDRESS: */</comment>

        <case pos:line="62" pos:column="9">case <expr><name pos:line="62" pos:column="14">LFT_SERVER_IP_OR_PEER_NAME<pos:position pos:line="62" pos:column="40"/></name></expr>:<pos:position pos:line="62" pos:column="41"/></case>
            <expr_stmt><expr><name pos:line="63" pos:column="13">out<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name><name pos:line="63" pos:column="19">al<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">hier<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">host<pos:position pos:line="63" pos:column="32"/></name></name></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>

            <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>

            <comment type="block" pos:line="67" pos:column="13">/* case LFT_SERVER_PORT: */</comment>

        <case pos:line="69" pos:column="9">case <expr><name pos:line="69" pos:column="14">LFT_LOCAL_IP<pos:position pos:line="69" pos:column="26"/></name></expr>:<pos:position pos:line="69" pos:column="27"/></case>
            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name><name pos:line="70" pos:column="17">al<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">request<pos:position pos:line="70" pos:column="28"/></name></name></expr>)<pos:position pos:line="70" pos:column="29"/></condition><then pos:line="70" pos:column="29"> <block pos:line="70" pos:column="30">{
                <expr_stmt><expr><name pos:line="71" pos:column="17">out<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">=<pos:position pos:line="71" pos:column="22"/></operator> <call><name><name pos:line="71" pos:column="23">al<pos:position pos:line="71" pos:column="25"/></name><operator pos:line="71" pos:column="25">-&gt;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="27">request<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">my_addr<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">.<pos:position pos:line="71" pos:column="44"/></operator><name pos:line="71" pos:column="44">NtoA<pos:position pos:line="71" pos:column="48"/></name></name><argument_list pos:line="71" pos:column="48">(<argument><expr><name pos:line="71" pos:column="49">tmp<pos:position pos:line="71" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="71" pos:column="53">1024<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then></if>

            <break pos:line="74" pos:column="13">break;<pos:position pos:line="74" pos:column="19"/></break>

        <case pos:line="76" pos:column="9">case <expr><name pos:line="76" pos:column="14">LFT_LOCAL_PORT<pos:position pos:line="76" pos:column="28"/></name></expr>:<pos:position pos:line="76" pos:column="29"/></case>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name><name pos:line="77" pos:column="17">al<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">-&gt;<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="21">request<pos:position pos:line="77" pos:column="28"/></name></name></expr>)<pos:position pos:line="77" pos:column="29"/></condition><then pos:line="77" pos:column="29"> <block pos:line="77" pos:column="30">{
                <expr_stmt><expr><name pos:line="78" pos:column="17">outint<pos:position pos:line="78" pos:column="23"/></name> <operator pos:line="78" pos:column="24">=<pos:position pos:line="78" pos:column="25"/></operator> <call><name><name pos:line="78" pos:column="26">al<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">-&gt;<pos:position pos:line="78" pos:column="33"/></operator><name pos:line="78" pos:column="30">request<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">my_addr<pos:position pos:line="78" pos:column="46"/></name><operator pos:line="78" pos:column="46">.<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="47">GetPort<pos:position pos:line="78" pos:column="54"/></name></name><argument_list pos:line="78" pos:column="54">()<pos:position pos:line="78" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name pos:line="79" pos:column="17">doint<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <literal type="number" pos:line="79" pos:column="25">1<pos:position pos:line="79" pos:column="26"/></literal></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>

            <break pos:line="82" pos:column="13">break;<pos:position pos:line="82" pos:column="19"/></break>

            <comment type="line" pos:line="84" pos:column="13">// the fmt-&gt;type can not be LFT_PEER_LOCAL_IP_OLD_27</comment>
            <comment type="line" pos:line="85" pos:column="13">// but compiler complains if ommited</comment>
        <case pos:line="86" pos:column="9">case <expr><name pos:line="86" pos:column="14">LFT_PEER_LOCAL_IP_OLD_27<pos:position pos:line="86" pos:column="38"/></name></expr>:<pos:position pos:line="86" pos:column="39"/></case>
        <case pos:line="87" pos:column="9">case <expr><name pos:line="87" pos:column="14">LFT_PEER_LOCAL_IP<pos:position pos:line="87" pos:column="31"/></name></expr>:<pos:position pos:line="87" pos:column="32"/></case>
            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><operator pos:line="88" pos:column="17">!<pos:position pos:line="88" pos:column="18"/></operator><call><name><name pos:line="88" pos:column="18">al<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">-&gt;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="22">hier<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">.<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="27">peer_local_addr<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">.<pos:position pos:line="88" pos:column="43"/></operator><name pos:line="88" pos:column="43">IsAnyAddr<pos:position pos:line="88" pos:column="52"/></name></name><argument_list pos:line="88" pos:column="52">()<pos:position pos:line="88" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="55"/></condition><then pos:line="88" pos:column="55"> <block pos:line="88" pos:column="56">{
                <expr_stmt><expr><name pos:line="89" pos:column="17">out<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <call><name><name pos:line="89" pos:column="23">al<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">-&gt;<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="27">hier<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">.<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="32">peer_local_addr<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">.<pos:position pos:line="89" pos:column="48"/></operator><name pos:line="89" pos:column="48">NtoA<pos:position pos:line="89" pos:column="52"/></name></name><argument_list pos:line="89" pos:column="52">(<argument><expr><name pos:line="89" pos:column="53">tmp<pos:position pos:line="89" pos:column="56"/></name></expr></argument>,<argument><expr><sizeof pos:line="89" pos:column="57">sizeof<argument_list pos:line="89" pos:column="63">(<argument><expr><name pos:line="89" pos:column="64">tmp<pos:position pos:line="89" pos:column="67"/></name></expr></argument>)<pos:position pos:line="89" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="90" pos:column="14"/></block></then></if>
            <break pos:line="91" pos:column="13">break;<pos:position pos:line="91" pos:column="19"/></break>

        <case pos:line="93" pos:column="9">case <expr><name pos:line="93" pos:column="14">LFT_PEER_LOCAL_PORT<pos:position pos:line="93" pos:column="33"/></name></expr>:<pos:position pos:line="93" pos:column="34"/></case>
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><operator pos:line="94" pos:column="17">(<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">outint<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">=<pos:position pos:line="94" pos:column="26"/></operator> <call><name><name pos:line="94" pos:column="27">al<pos:position pos:line="94" pos:column="29"/></name><operator pos:line="94" pos:column="29">-&gt;<pos:position pos:line="94" pos:column="34"/></operator><name pos:line="94" pos:column="31">hier<pos:position pos:line="94" pos:column="35"/></name><operator pos:line="94" pos:column="35">.<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">peer_local_addr<pos:position pos:line="94" pos:column="51"/></name><operator pos:line="94" pos:column="51">.<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="52">GetPort<pos:position pos:line="94" pos:column="59"/></name></name><argument_list pos:line="94" pos:column="59">()<pos:position pos:line="94" pos:column="61"/></argument_list></call><operator pos:line="94" pos:column="61">)<pos:position pos:line="94" pos:column="62"/></operator></expr>)<pos:position pos:line="94" pos:column="63"/></condition><then pos:line="94" pos:column="63"> <block pos:line="94" pos:column="64">{
                <expr_stmt><expr><name pos:line="95" pos:column="17">doint<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">=<pos:position pos:line="95" pos:column="24"/></operator> <literal type="number" pos:line="95" pos:column="25">1<pos:position pos:line="95" pos:column="26"/></literal></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></then></if>

            <break pos:line="98" pos:column="13">break;<pos:position pos:line="98" pos:column="19"/></break>

        <case pos:line="100" pos:column="9">case <expr><name pos:line="100" pos:column="14">LFT_TIME_SECONDS_SINCE_EPOCH<pos:position pos:line="100" pos:column="42"/></name></expr>:<pos:position pos:line="100" pos:column="43"/></case>
            <comment type="line" pos:line="101" pos:column="13">// some platforms store time in 32-bit, some 64-bit...</comment>
            <expr_stmt><expr><name pos:line="102" pos:column="13">outoff<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator> <cast type="static" pos:line="102" pos:column="22">static_cast<argument_list type="generic" pos:line="102" pos:column="33">&lt;<argument><expr><name pos:line="102" pos:column="34">int64_t<pos:position pos:line="102" pos:column="41"/></name></expr></argument>&gt;<pos:position pos:line="102" pos:column="45"/></argument_list><argument_list pos:line="102" pos:column="42">(<argument><expr><name><name pos:line="102" pos:column="43">current_time<pos:position pos:line="102" pos:column="55"/></name><operator pos:line="102" pos:column="55">.<pos:position pos:line="102" pos:column="56"/></operator><name pos:line="102" pos:column="56">tv_sec<pos:position pos:line="102" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="63"/></argument_list></cast></expr>;<pos:position pos:line="102" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">dooff<pos:position pos:line="103" pos:column="18"/></name> <operator pos:line="103" pos:column="19">=<pos:position pos:line="103" pos:column="20"/></operator> <literal type="number" pos:line="103" pos:column="21">1<pos:position pos:line="103" pos:column="22"/></literal></expr>;<pos:position pos:line="103" pos:column="23"/></expr_stmt>
            <break pos:line="104" pos:column="13">break;<pos:position pos:line="104" pos:column="19"/></break>

        <case pos:line="106" pos:column="9">case <expr><name pos:line="106" pos:column="14">LFT_TIME_SUBSECOND<pos:position pos:line="106" pos:column="32"/></name></expr>:<pos:position pos:line="106" pos:column="33"/></case>
            <expr_stmt><expr><name pos:line="107" pos:column="13">outint<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">=<pos:position pos:line="107" pos:column="21"/></operator> <name><name pos:line="107" pos:column="22">current_time<pos:position pos:line="107" pos:column="34"/></name><operator pos:line="107" pos:column="34">.<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="35">tv_usec<pos:position pos:line="107" pos:column="42"/></name></name> <operator pos:line="107" pos:column="43">/<pos:position pos:line="107" pos:column="44"/></operator> <name><name pos:line="107" pos:column="45">fmt<pos:position pos:line="107" pos:column="48"/></name><operator pos:line="107" pos:column="48">-&gt;<pos:position pos:line="107" pos:column="53"/></operator><name pos:line="107" pos:column="50">divisor<pos:position pos:line="107" pos:column="57"/></name></name></expr>;<pos:position pos:line="107" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="108" pos:column="13">doint<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <literal type="number" pos:line="108" pos:column="21">1<pos:position pos:line="108" pos:column="22"/></literal></expr>;<pos:position pos:line="108" pos:column="23"/></expr_stmt>
            <break pos:line="109" pos:column="13">break;<pos:position pos:line="109" pos:column="19"/></break>


        <case pos:line="112" pos:column="9">case <expr><name pos:line="112" pos:column="14">LFT_TIME_LOCALTIME<pos:position pos:line="112" pos:column="32"/></name></expr>:<pos:position pos:line="112" pos:column="33"/></case>

        <case pos:line="114" pos:column="9">case <expr><name pos:line="114" pos:column="14">LFT_TIME_GMT<pos:position pos:line="114" pos:column="26"/></name></expr>:<pos:position pos:line="114" pos:column="27"/></case> <block pos:line="114" pos:column="28">{
            <decl_stmt><decl><type><specifier pos:line="115" pos:column="13">const<pos:position pos:line="115" pos:column="18"/></specifier> <name pos:line="115" pos:column="19">char<pos:position pos:line="115" pos:column="23"/></name> <modifier pos:line="115" pos:column="24">*<pos:position pos:line="115" pos:column="25"/></modifier></type><name pos:line="115" pos:column="25">spec<pos:position pos:line="115" pos:column="29"/></name></decl>;<pos:position pos:line="115" pos:column="30"/></decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="117" pos:column="13">struct<pos:position pos:line="117" pos:column="19"/></name> <name pos:line="117" pos:column="20">tm<pos:position pos:line="117" pos:column="22"/></name></name> <modifier pos:line="117" pos:column="23">*<pos:position pos:line="117" pos:column="24"/></modifier></type><name pos:line="117" pos:column="24">t<pos:position pos:line="117" pos:column="25"/></name></decl>;<pos:position pos:line="117" pos:column="26"/></decl_stmt>
            <expr_stmt><expr><name pos:line="118" pos:column="13">spec<pos:position pos:line="118" pos:column="17"/></name> <operator pos:line="118" pos:column="18">=<pos:position pos:line="118" pos:column="19"/></operator> <name><name pos:line="118" pos:column="20">fmt<pos:position pos:line="118" pos:column="23"/></name><operator pos:line="118" pos:column="23">-&gt;<pos:position pos:line="118" pos:column="28"/></operator><name pos:line="118" pos:column="25">data<pos:position pos:line="118" pos:column="29"/></name><operator pos:line="118" pos:column="29">.<pos:position pos:line="118" pos:column="30"/></operator><name pos:line="118" pos:column="30">timespec<pos:position pos:line="118" pos:column="38"/></name></name></expr>;<pos:position pos:line="118" pos:column="39"/></expr_stmt>

            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name><name pos:line="120" pos:column="17">fmt<pos:position pos:line="120" pos:column="20"/></name><operator pos:line="120" pos:column="20">-&gt;<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="22">type<pos:position pos:line="120" pos:column="26"/></name></name> <operator pos:line="120" pos:column="27">==<pos:position pos:line="120" pos:column="29"/></operator> <name pos:line="120" pos:column="30">LFT_TIME_LOCALTIME<pos:position pos:line="120" pos:column="48"/></name></expr>)<pos:position pos:line="120" pos:column="49"/></condition><then pos:line="120" pos:column="49"> <block pos:line="120" pos:column="50">{
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="22">spec<pos:position pos:line="121" pos:column="26"/></name></expr>)<pos:position pos:line="121" pos:column="27"/></condition><then pos:line="121" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="21">spec<pos:position pos:line="122" pos:column="25"/></name> <operator pos:line="122" pos:column="26">=<pos:position pos:line="122" pos:column="27"/></operator> <literal type="string" pos:line="122" pos:column="28">"%d/%b/%Y:%H:%M:%S %z"<pos:position pos:line="122" pos:column="50"/></literal></expr>;<pos:position pos:line="122" pos:column="51"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="123" pos:column="17">t<pos:position pos:line="123" pos:column="18"/></name> <operator pos:line="123" pos:column="19">=<pos:position pos:line="123" pos:column="20"/></operator> <call><name pos:line="123" pos:column="21">localtime<pos:position pos:line="123" pos:column="30"/></name><argument_list pos:line="123" pos:column="30">(<argument><expr><operator pos:line="123" pos:column="31">&amp;<pos:position pos:line="123" pos:column="36"/></operator><name pos:line="123" pos:column="32">squid_curtime<pos:position pos:line="123" pos:column="45"/></name></expr></argument>)<pos:position pos:line="123" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="124" pos:column="14"/></block></then> <else pos:line="124" pos:column="15">else <block pos:line="124" pos:column="20">{
                <if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><operator pos:line="125" pos:column="21">!<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">spec<pos:position pos:line="125" pos:column="26"/></name></expr>)<pos:position pos:line="125" pos:column="27"/></condition><then pos:line="125" pos:column="27">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="21">spec<pos:position pos:line="126" pos:column="25"/></name> <operator pos:line="126" pos:column="26">=<pos:position pos:line="126" pos:column="27"/></operator> <literal type="string" pos:line="126" pos:column="28">"%d/%b/%Y:%H:%M:%S"<pos:position pos:line="126" pos:column="47"/></literal></expr>;<pos:position pos:line="126" pos:column="48"/></expr_stmt></block></then></if>

                <expr_stmt><expr><name pos:line="128" pos:column="17">t<pos:position pos:line="128" pos:column="18"/></name> <operator pos:line="128" pos:column="19">=<pos:position pos:line="128" pos:column="20"/></operator> <call><name pos:line="128" pos:column="21">gmtime<pos:position pos:line="128" pos:column="27"/></name><argument_list pos:line="128" pos:column="27">(<argument><expr><operator pos:line="128" pos:column="28">&amp;<pos:position pos:line="128" pos:column="33"/></operator><name pos:line="128" pos:column="29">squid_curtime<pos:position pos:line="128" pos:column="42"/></name></expr></argument>)<pos:position pos:line="128" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="129" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="131" pos:column="13">strftime<pos:position pos:line="131" pos:column="21"/></name><argument_list pos:line="131" pos:column="21">(<argument><expr><name pos:line="131" pos:column="22">tmp<pos:position pos:line="131" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="27">sizeof<argument_list pos:line="131" pos:column="33">(<argument><expr><name pos:line="131" pos:column="34">tmp<pos:position pos:line="131" pos:column="37"/></name></expr></argument>)<pos:position pos:line="131" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="131" pos:column="40">spec<pos:position pos:line="131" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="46">t<pos:position pos:line="131" pos:column="47"/></name></expr></argument>)<pos:position pos:line="131" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="49"/></expr_stmt>

            <expr_stmt><expr><name pos:line="133" pos:column="13">out<pos:position pos:line="133" pos:column="16"/></name> <operator pos:line="133" pos:column="17">=<pos:position pos:line="133" pos:column="18"/></operator> <name pos:line="133" pos:column="19">tmp<pos:position pos:line="133" pos:column="22"/></name></expr>;<pos:position pos:line="133" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="134" pos:column="10"/></block>

        <break pos:line="136" pos:column="9">break;<pos:position pos:line="136" pos:column="15"/></break>

        <case pos:line="138" pos:column="9">case <expr><name pos:line="138" pos:column="14">LFT_TIME_TO_HANDLE_REQUEST<pos:position pos:line="138" pos:column="40"/></name></expr>:<pos:position pos:line="138" pos:column="41"/></case>
            <expr_stmt><expr><name pos:line="139" pos:column="13">outint<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <name><name pos:line="139" pos:column="22">al<pos:position pos:line="139" pos:column="24"/></name><operator pos:line="139" pos:column="24">-&gt;<pos:position pos:line="139" pos:column="29"/></operator><name pos:line="139" pos:column="26">cache<pos:position pos:line="139" pos:column="31"/></name><operator pos:line="139" pos:column="31">.<pos:position pos:line="139" pos:column="32"/></operator><name pos:line="139" pos:column="32">msec<pos:position pos:line="139" pos:column="36"/></name></name></expr>;<pos:position pos:line="139" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="140" pos:column="13">doint<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">=<pos:position pos:line="140" pos:column="20"/></operator> <literal type="number" pos:line="140" pos:column="21">1<pos:position pos:line="140" pos:column="22"/></literal></expr>;<pos:position pos:line="140" pos:column="23"/></expr_stmt>
            <break pos:line="141" pos:column="13">break;<pos:position pos:line="141" pos:column="19"/></break>

        <case pos:line="143" pos:column="9">case <expr><name pos:line="143" pos:column="14">LFT_PEER_RESPONSE_TIME<pos:position pos:line="143" pos:column="36"/></name></expr>:<pos:position pos:line="143" pos:column="37"/></case>
            <if pos:line="144" pos:column="13">if <condition pos:line="144" pos:column="16">(<expr><name><name pos:line="144" pos:column="17">al<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">-&gt;<pos:position pos:line="144" pos:column="24"/></operator><name pos:line="144" pos:column="21">hier<pos:position pos:line="144" pos:column="25"/></name><operator pos:line="144" pos:column="25">.<pos:position pos:line="144" pos:column="26"/></operator><name pos:line="144" pos:column="26">peer_response_time<pos:position pos:line="144" pos:column="44"/></name></name> <operator pos:line="144" pos:column="45">&lt;<pos:position pos:line="144" pos:column="49"/></operator> <literal type="number" pos:line="144" pos:column="47">0<pos:position pos:line="144" pos:column="48"/></literal></expr>)<pos:position pos:line="144" pos:column="49"/></condition><then pos:line="144" pos:column="49"> <block pos:line="144" pos:column="50">{
                <expr_stmt><expr><name pos:line="145" pos:column="17">out<pos:position pos:line="145" pos:column="20"/></name> <operator pos:line="145" pos:column="21">=<pos:position pos:line="145" pos:column="22"/></operator> <literal type="string" pos:line="145" pos:column="23">"-"<pos:position pos:line="145" pos:column="26"/></literal></expr>;<pos:position pos:line="145" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="146" pos:column="14"/></block></then> <else pos:line="146" pos:column="15">else <block pos:line="146" pos:column="20">{
                <expr_stmt><expr><name pos:line="147" pos:column="17">outoff<pos:position pos:line="147" pos:column="23"/></name> <operator pos:line="147" pos:column="24">=<pos:position pos:line="147" pos:column="25"/></operator> <name><name pos:line="147" pos:column="26">al<pos:position pos:line="147" pos:column="28"/></name><operator pos:line="147" pos:column="28">-&gt;<pos:position pos:line="147" pos:column="33"/></operator><name pos:line="147" pos:column="30">hier<pos:position pos:line="147" pos:column="34"/></name><operator pos:line="147" pos:column="34">.<pos:position pos:line="147" pos:column="35"/></operator><name pos:line="147" pos:column="35">peer_response_time<pos:position pos:line="147" pos:column="53"/></name></name></expr>;<pos:position pos:line="147" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name pos:line="148" pos:column="17">dooff<pos:position pos:line="148" pos:column="22"/></name> <operator pos:line="148" pos:column="23">=<pos:position pos:line="148" pos:column="24"/></operator> <literal type="number" pos:line="148" pos:column="25">1<pos:position pos:line="148" pos:column="26"/></literal></expr>;<pos:position pos:line="148" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></else></if>
            <break pos:line="150" pos:column="13">break;<pos:position pos:line="150" pos:column="19"/></break>

        <case pos:line="152" pos:column="9">case <expr><name pos:line="152" pos:column="14">LFT_TOTAL_SERVER_SIDE_RESPONSE_TIME<pos:position pos:line="152" pos:column="49"/></name></expr>:<pos:position pos:line="152" pos:column="50"/></case>
            <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><name><name pos:line="153" pos:column="17">al<pos:position pos:line="153" pos:column="19"/></name><operator pos:line="153" pos:column="19">-&gt;<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="21">hier<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">.<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="26">total_response_time<pos:position pos:line="153" pos:column="45"/></name></name> <operator pos:line="153" pos:column="46">&lt;<pos:position pos:line="153" pos:column="50"/></operator> <literal type="number" pos:line="153" pos:column="48">0<pos:position pos:line="153" pos:column="49"/></literal></expr>)<pos:position pos:line="153" pos:column="50"/></condition><then pos:line="153" pos:column="50"> <block pos:line="153" pos:column="51">{
                <expr_stmt><expr><name pos:line="154" pos:column="17">out<pos:position pos:line="154" pos:column="20"/></name> <operator pos:line="154" pos:column="21">=<pos:position pos:line="154" pos:column="22"/></operator> <literal type="string" pos:line="154" pos:column="23">"-"<pos:position pos:line="154" pos:column="26"/></literal></expr>;<pos:position pos:line="154" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="155" pos:column="14"/></block></then> <else pos:line="155" pos:column="15">else <block pos:line="155" pos:column="20">{
                <expr_stmt><expr><name pos:line="156" pos:column="17">outoff<pos:position pos:line="156" pos:column="23"/></name> <operator pos:line="156" pos:column="24">=<pos:position pos:line="156" pos:column="25"/></operator> <name><name pos:line="156" pos:column="26">al<pos:position pos:line="156" pos:column="28"/></name><operator pos:line="156" pos:column="28">-&gt;<pos:position pos:line="156" pos:column="33"/></operator><name pos:line="156" pos:column="30">hier<pos:position pos:line="156" pos:column="34"/></name><operator pos:line="156" pos:column="34">.<pos:position pos:line="156" pos:column="35"/></operator><name pos:line="156" pos:column="35">total_response_time<pos:position pos:line="156" pos:column="54"/></name></name></expr>;<pos:position pos:line="156" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="157" pos:column="17">dooff<pos:position pos:line="157" pos:column="22"/></name> <operator pos:line="157" pos:column="23">=<pos:position pos:line="157" pos:column="24"/></operator> <literal type="number" pos:line="157" pos:column="25">1<pos:position pos:line="157" pos:column="26"/></literal></expr>;<pos:position pos:line="157" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="158" pos:column="14"/></block></else></if>
            <break pos:line="159" pos:column="13">break;<pos:position pos:line="159" pos:column="19"/></break>

        <case pos:line="161" pos:column="9">case <expr><name pos:line="161" pos:column="14">LFT_DNS_WAIT_TIME<pos:position pos:line="161" pos:column="31"/></name></expr>:<pos:position pos:line="161" pos:column="32"/></case>
            <if pos:line="162" pos:column="13">if <condition pos:line="162" pos:column="16">(<expr><name><name pos:line="162" pos:column="17">al<pos:position pos:line="162" pos:column="19"/></name><operator pos:line="162" pos:column="19">-&gt;<pos:position pos:line="162" pos:column="24"/></operator><name pos:line="162" pos:column="21">request<pos:position pos:line="162" pos:column="28"/></name></name> <operator pos:line="162" pos:column="29">&amp;&amp;<pos:position pos:line="162" pos:column="39"/></operator> <name><name pos:line="162" pos:column="32">al<pos:position pos:line="162" pos:column="34"/></name><operator pos:line="162" pos:column="34">-&gt;<pos:position pos:line="162" pos:column="39"/></operator><name pos:line="162" pos:column="36">request<pos:position pos:line="162" pos:column="43"/></name><operator pos:line="162" pos:column="43">-&gt;<pos:position pos:line="162" pos:column="48"/></operator><name pos:line="162" pos:column="45">dnsWait<pos:position pos:line="162" pos:column="52"/></name></name> <operator pos:line="162" pos:column="53">&gt;=<pos:position pos:line="162" pos:column="58"/></operator> <literal type="number" pos:line="162" pos:column="56">0<pos:position pos:line="162" pos:column="57"/></literal></expr>)<pos:position pos:line="162" pos:column="58"/></condition><then pos:line="162" pos:column="58"> <block pos:line="162" pos:column="59">{
                <expr_stmt><expr><name pos:line="163" pos:column="17">outint<pos:position pos:line="163" pos:column="23"/></name> <operator pos:line="163" pos:column="24">=<pos:position pos:line="163" pos:column="25"/></operator> <name><name pos:line="163" pos:column="26">al<pos:position pos:line="163" pos:column="28"/></name><operator pos:line="163" pos:column="28">-&gt;<pos:position pos:line="163" pos:column="33"/></operator><name pos:line="163" pos:column="30">request<pos:position pos:line="163" pos:column="37"/></name><operator pos:line="163" pos:column="37">-&gt;<pos:position pos:line="163" pos:column="42"/></operator><name pos:line="163" pos:column="39">dnsWait<pos:position pos:line="163" pos:column="46"/></name></name></expr>;<pos:position pos:line="163" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="164" pos:column="17">doint<pos:position pos:line="164" pos:column="22"/></name> <operator pos:line="164" pos:column="23">=<pos:position pos:line="164" pos:column="24"/></operator> <literal type="number" pos:line="164" pos:column="25">1<pos:position pos:line="164" pos:column="26"/></literal></expr>;<pos:position pos:line="164" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="165" pos:column="14"/></block></then></if>
            <break pos:line="166" pos:column="13">break;<pos:position pos:line="166" pos:column="19"/></break>

        <case pos:line="168" pos:column="9">case <expr><name pos:line="168" pos:column="14">LFT_REQUEST_HEADER<pos:position pos:line="168" pos:column="32"/></name></expr>:<pos:position pos:line="168" pos:column="33"/></case>

            <if pos:line="170" pos:column="13">if <condition pos:line="170" pos:column="16">(<expr><name><name pos:line="170" pos:column="17">al<pos:position pos:line="170" pos:column="19"/></name><operator pos:line="170" pos:column="19">-&gt;<pos:position pos:line="170" pos:column="24"/></operator><name pos:line="170" pos:column="21">request<pos:position pos:line="170" pos:column="28"/></name></name></expr>)<pos:position pos:line="170" pos:column="29"/></condition><then pos:line="170" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="171" pos:column="17">sb<pos:position pos:line="171" pos:column="19"/></name> <operator pos:line="171" pos:column="20">=<pos:position pos:line="171" pos:column="21"/></operator> <call><name><name pos:line="171" pos:column="22">al<pos:position pos:line="171" pos:column="24"/></name><operator pos:line="171" pos:column="24">-&gt;<pos:position pos:line="171" pos:column="29"/></operator><name pos:line="171" pos:column="26">request<pos:position pos:line="171" pos:column="33"/></name><operator pos:line="171" pos:column="33">-&gt;<pos:position pos:line="171" pos:column="38"/></operator><name pos:line="171" pos:column="35">header<pos:position pos:line="171" pos:column="41"/></name><operator pos:line="171" pos:column="41">.<pos:position pos:line="171" pos:column="42"/></operator><name pos:line="171" pos:column="42">getByName<pos:position pos:line="171" pos:column="51"/></name></name><argument_list pos:line="171" pos:column="51">(<argument><expr><name><name pos:line="171" pos:column="52">fmt<pos:position pos:line="171" pos:column="55"/></name><operator pos:line="171" pos:column="55">-&gt;<pos:position pos:line="171" pos:column="60"/></operator><name pos:line="171" pos:column="57">data<pos:position pos:line="171" pos:column="61"/></name><operator pos:line="171" pos:column="61">.<pos:position pos:line="171" pos:column="62"/></operator><name pos:line="171" pos:column="62">header<pos:position pos:line="171" pos:column="68"/></name><operator pos:line="171" pos:column="68">.<pos:position pos:line="171" pos:column="69"/></operator><name pos:line="171" pos:column="69">header<pos:position pos:line="171" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="77"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="173" pos:column="13">out<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">=<pos:position pos:line="173" pos:column="18"/></operator> <call><name><name pos:line="173" pos:column="19">sb<pos:position pos:line="173" pos:column="21"/></name><operator pos:line="173" pos:column="21">.<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="22">termedBuf<pos:position pos:line="173" pos:column="31"/></name></name><argument_list pos:line="173" pos:column="31">()<pos:position pos:line="173" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="175" pos:column="13">quote<pos:position pos:line="175" pos:column="18"/></name> <operator pos:line="175" pos:column="19">=<pos:position pos:line="175" pos:column="20"/></operator> <literal type="number" pos:line="175" pos:column="21">1<pos:position pos:line="175" pos:column="22"/></literal></expr>;<pos:position pos:line="175" pos:column="23"/></expr_stmt>

            <break pos:line="177" pos:column="13">break;<pos:position pos:line="177" pos:column="19"/></break>

        <case pos:line="179" pos:column="9">case <expr><name pos:line="179" pos:column="14">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="179" pos:column="40"/></name></expr>:<pos:position pos:line="179" pos:column="41"/></case>

            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><name><name pos:line="181" pos:column="17">al<pos:position pos:line="181" pos:column="19"/></name><operator pos:line="181" pos:column="19">-&gt;<pos:position pos:line="181" pos:column="24"/></operator><name pos:line="181" pos:column="21">request<pos:position pos:line="181" pos:column="28"/></name></name></expr>)<pos:position pos:line="181" pos:column="29"/></condition><then pos:line="181" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="182" pos:column="17">sb<pos:position pos:line="182" pos:column="19"/></name> <operator pos:line="182" pos:column="20">=<pos:position pos:line="182" pos:column="21"/></operator> <call><name><name pos:line="182" pos:column="22">al<pos:position pos:line="182" pos:column="24"/></name><operator pos:line="182" pos:column="24">-&gt;<pos:position pos:line="182" pos:column="29"/></operator><name pos:line="182" pos:column="26">adapted_request<pos:position pos:line="182" pos:column="41"/></name><operator pos:line="182" pos:column="41">-&gt;<pos:position pos:line="182" pos:column="46"/></operator><name pos:line="182" pos:column="43">header<pos:position pos:line="182" pos:column="49"/></name><operator pos:line="182" pos:column="49">.<pos:position pos:line="182" pos:column="50"/></operator><name pos:line="182" pos:column="50">getByName<pos:position pos:line="182" pos:column="59"/></name></name><argument_list pos:line="182" pos:column="59">(<argument><expr><name><name pos:line="182" pos:column="60">fmt<pos:position pos:line="182" pos:column="63"/></name><operator pos:line="182" pos:column="63">-&gt;<pos:position pos:line="182" pos:column="68"/></operator><name pos:line="182" pos:column="65">data<pos:position pos:line="182" pos:column="69"/></name><operator pos:line="182" pos:column="69">.<pos:position pos:line="182" pos:column="70"/></operator><name pos:line="182" pos:column="70">header<pos:position pos:line="182" pos:column="76"/></name><operator pos:line="182" pos:column="76">.<pos:position pos:line="182" pos:column="77"/></operator><name pos:line="182" pos:column="77">header<pos:position pos:line="182" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="182" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="85"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="184" pos:column="13">out<pos:position pos:line="184" pos:column="16"/></name> <operator pos:line="184" pos:column="17">=<pos:position pos:line="184" pos:column="18"/></operator> <call><name><name pos:line="184" pos:column="19">sb<pos:position pos:line="184" pos:column="21"/></name><operator pos:line="184" pos:column="21">.<pos:position pos:line="184" pos:column="22"/></operator><name pos:line="184" pos:column="22">termedBuf<pos:position pos:line="184" pos:column="31"/></name></name><argument_list pos:line="184" pos:column="31">()<pos:position pos:line="184" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="186" pos:column="13">quote<pos:position pos:line="186" pos:column="18"/></name> <operator pos:line="186" pos:column="19">=<pos:position pos:line="186" pos:column="20"/></operator> <literal type="number" pos:line="186" pos:column="21">1<pos:position pos:line="186" pos:column="22"/></literal></expr>;<pos:position pos:line="186" pos:column="23"/></expr_stmt>

            <break pos:line="188" pos:column="13">break;<pos:position pos:line="188" pos:column="19"/></break>

        <case pos:line="190" pos:column="9">case <expr><name pos:line="190" pos:column="14">LFT_REPLY_HEADER<pos:position pos:line="190" pos:column="30"/></name></expr>:<pos:position pos:line="190" pos:column="31"/></case>
            <if pos:line="191" pos:column="13">if <condition pos:line="191" pos:column="16">(<expr><name><name pos:line="191" pos:column="17">al<pos:position pos:line="191" pos:column="19"/></name><operator pos:line="191" pos:column="19">-&gt;<pos:position pos:line="191" pos:column="24"/></operator><name pos:line="191" pos:column="21">reply<pos:position pos:line="191" pos:column="26"/></name></name></expr>)<pos:position pos:line="191" pos:column="27"/></condition><then pos:line="191" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="192" pos:column="17">sb<pos:position pos:line="192" pos:column="19"/></name> <operator pos:line="192" pos:column="20">=<pos:position pos:line="192" pos:column="21"/></operator> <call><name><name pos:line="192" pos:column="22">al<pos:position pos:line="192" pos:column="24"/></name><operator pos:line="192" pos:column="24">-&gt;<pos:position pos:line="192" pos:column="29"/></operator><name pos:line="192" pos:column="26">reply<pos:position pos:line="192" pos:column="31"/></name><operator pos:line="192" pos:column="31">-&gt;<pos:position pos:line="192" pos:column="36"/></operator><name pos:line="192" pos:column="33">header<pos:position pos:line="192" pos:column="39"/></name><operator pos:line="192" pos:column="39">.<pos:position pos:line="192" pos:column="40"/></operator><name pos:line="192" pos:column="40">getByName<pos:position pos:line="192" pos:column="49"/></name></name><argument_list pos:line="192" pos:column="49">(<argument><expr><name><name pos:line="192" pos:column="50">fmt<pos:position pos:line="192" pos:column="53"/></name><operator pos:line="192" pos:column="53">-&gt;<pos:position pos:line="192" pos:column="58"/></operator><name pos:line="192" pos:column="55">data<pos:position pos:line="192" pos:column="59"/></name><operator pos:line="192" pos:column="59">.<pos:position pos:line="192" pos:column="60"/></operator><name pos:line="192" pos:column="60">header<pos:position pos:line="192" pos:column="66"/></name><operator pos:line="192" pos:column="66">.<pos:position pos:line="192" pos:column="67"/></operator><name pos:line="192" pos:column="67">header<pos:position pos:line="192" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="75"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="194" pos:column="13">out<pos:position pos:line="194" pos:column="16"/></name> <operator pos:line="194" pos:column="17">=<pos:position pos:line="194" pos:column="18"/></operator> <call><name><name pos:line="194" pos:column="19">sb<pos:position pos:line="194" pos:column="21"/></name><operator pos:line="194" pos:column="21">.<pos:position pos:line="194" pos:column="22"/></operator><name pos:line="194" pos:column="22">termedBuf<pos:position pos:line="194" pos:column="31"/></name></name><argument_list pos:line="194" pos:column="31">()<pos:position pos:line="194" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="196" pos:column="13">quote<pos:position pos:line="196" pos:column="18"/></name> <operator pos:line="196" pos:column="19">=<pos:position pos:line="196" pos:column="20"/></operator> <literal type="number" pos:line="196" pos:column="21">1<pos:position pos:line="196" pos:column="22"/></literal></expr>;<pos:position pos:line="196" pos:column="23"/></expr_stmt>

            <break pos:line="198" pos:column="13">break;<pos:position pos:line="198" pos:column="19"/></break>

<cpp:if pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">if<pos:position pos:line="200" pos:column="4"/></cpp:directive> <expr><name pos:line="200" pos:column="5">USE_ADAPTATION<pos:position pos:line="200" pos:column="19"/></name></expr></cpp:if>
        <case pos:line="201" pos:column="9">case <expr><name pos:line="201" pos:column="14">LTF_ADAPTATION_SUM_XACT_TIMES<pos:position pos:line="201" pos:column="43"/></name></expr>:<pos:position pos:line="201" pos:column="44"/></case>
            <if pos:line="202" pos:column="13">if <condition pos:line="202" pos:column="16">(<expr><name><name pos:line="202" pos:column="17">al<pos:position pos:line="202" pos:column="19"/></name><operator pos:line="202" pos:column="19">-&gt;<pos:position pos:line="202" pos:column="24"/></operator><name pos:line="202" pos:column="21">request<pos:position pos:line="202" pos:column="28"/></name></name></expr>)<pos:position pos:line="202" pos:column="29"/></condition><then pos:line="202" pos:column="29"> <block pos:line="202" pos:column="30">{
                <decl_stmt><decl><type><name><name pos:line="203" pos:column="17">Adaptation<pos:position pos:line="203" pos:column="27"/></name><operator pos:line="203" pos:column="27">::<pos:position pos:line="203" pos:column="29"/></operator><name pos:line="203" pos:column="29">History<pos:position pos:line="203" pos:column="36"/></name><operator pos:line="203" pos:column="36">::<pos:position pos:line="203" pos:column="38"/></operator><name pos:line="203" pos:column="38">Pointer<pos:position pos:line="203" pos:column="45"/></name></name></type> <name pos:line="203" pos:column="46">ah<pos:position pos:line="203" pos:column="48"/></name> <init pos:line="203" pos:column="49">= <expr><call><name><name pos:line="203" pos:column="51">al<pos:position pos:line="203" pos:column="53"/></name><operator pos:line="203" pos:column="53">-&gt;<pos:position pos:line="203" pos:column="58"/></operator><name pos:line="203" pos:column="55">request<pos:position pos:line="203" pos:column="62"/></name><operator pos:line="203" pos:column="62">-&gt;<pos:position pos:line="203" pos:column="67"/></operator><name pos:line="203" pos:column="64">adaptHistory<pos:position pos:line="203" pos:column="76"/></name></name><argument_list pos:line="203" pos:column="76">()<pos:position pos:line="203" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="203" pos:column="79"/></decl_stmt>
                <if pos:line="204" pos:column="17">if <condition pos:line="204" pos:column="20">(<expr><name pos:line="204" pos:column="21">ah<pos:position pos:line="204" pos:column="23"/></name> <operator pos:line="204" pos:column="24">!=<pos:position pos:line="204" pos:column="26"/></operator> <name pos:line="204" pos:column="27">NULL<pos:position pos:line="204" pos:column="31"/></name></expr>)<pos:position pos:line="204" pos:column="32"/></condition><then pos:line="204" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="205" pos:column="21">ah<pos:position pos:line="205" pos:column="23"/></name><operator pos:line="205" pos:column="23">-&gt;<pos:position pos:line="205" pos:column="28"/></operator><name pos:line="205" pos:column="25">sumLogString<pos:position pos:line="205" pos:column="37"/></name></name><argument_list pos:line="205" pos:column="37">(<argument><expr><name><name pos:line="205" pos:column="38">fmt<pos:position pos:line="205" pos:column="41"/></name><operator pos:line="205" pos:column="41">-&gt;<pos:position pos:line="205" pos:column="46"/></operator><name pos:line="205" pos:column="43">data<pos:position pos:line="205" pos:column="47"/></name><operator pos:line="205" pos:column="47">.<pos:position pos:line="205" pos:column="48"/></operator><name pos:line="205" pos:column="48">string<pos:position pos:line="205" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="56">sb<pos:position pos:line="205" pos:column="58"/></name></expr></argument>)<pos:position pos:line="205" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="60"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="206" pos:column="17">out<pos:position pos:line="206" pos:column="20"/></name> <operator pos:line="206" pos:column="21">=<pos:position pos:line="206" pos:column="22"/></operator> <call><name><name pos:line="206" pos:column="23">sb<pos:position pos:line="206" pos:column="25"/></name><operator pos:line="206" pos:column="25">.<pos:position pos:line="206" pos:column="26"/></operator><name pos:line="206" pos:column="26">termedBuf<pos:position pos:line="206" pos:column="35"/></name></name><argument_list pos:line="206" pos:column="35">()<pos:position pos:line="206" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="207" pos:column="14"/></block></then></if>
            <break pos:line="208" pos:column="13">break;<pos:position pos:line="208" pos:column="19"/></break>

        <case pos:line="210" pos:column="9">case <expr><name pos:line="210" pos:column="14">LTF_ADAPTATION_ALL_XACT_TIMES<pos:position pos:line="210" pos:column="43"/></name></expr>:<pos:position pos:line="210" pos:column="44"/></case>
            <if pos:line="211" pos:column="13">if <condition pos:line="211" pos:column="16">(<expr><name><name pos:line="211" pos:column="17">al<pos:position pos:line="211" pos:column="19"/></name><operator pos:line="211" pos:column="19">-&gt;<pos:position pos:line="211" pos:column="24"/></operator><name pos:line="211" pos:column="21">request<pos:position pos:line="211" pos:column="28"/></name></name></expr>)<pos:position pos:line="211" pos:column="29"/></condition><then pos:line="211" pos:column="29"> <block pos:line="211" pos:column="30">{
                <decl_stmt><decl><type><name><name pos:line="212" pos:column="17">Adaptation<pos:position pos:line="212" pos:column="27"/></name><operator pos:line="212" pos:column="27">::<pos:position pos:line="212" pos:column="29"/></operator><name pos:line="212" pos:column="29">History<pos:position pos:line="212" pos:column="36"/></name><operator pos:line="212" pos:column="36">::<pos:position pos:line="212" pos:column="38"/></operator><name pos:line="212" pos:column="38">Pointer<pos:position pos:line="212" pos:column="45"/></name></name></type> <name pos:line="212" pos:column="46">ah<pos:position pos:line="212" pos:column="48"/></name> <init pos:line="212" pos:column="49">= <expr><call><name><name pos:line="212" pos:column="51">al<pos:position pos:line="212" pos:column="53"/></name><operator pos:line="212" pos:column="53">-&gt;<pos:position pos:line="212" pos:column="58"/></operator><name pos:line="212" pos:column="55">request<pos:position pos:line="212" pos:column="62"/></name><operator pos:line="212" pos:column="62">-&gt;<pos:position pos:line="212" pos:column="67"/></operator><name pos:line="212" pos:column="64">adaptHistory<pos:position pos:line="212" pos:column="76"/></name></name><argument_list pos:line="212" pos:column="76">()<pos:position pos:line="212" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="212" pos:column="79"/></decl_stmt>
                <if pos:line="213" pos:column="17">if <condition pos:line="213" pos:column="20">(<expr><name pos:line="213" pos:column="21">ah<pos:position pos:line="213" pos:column="23"/></name> <operator pos:line="213" pos:column="24">!=<pos:position pos:line="213" pos:column="26"/></operator> <name pos:line="213" pos:column="27">NULL<pos:position pos:line="213" pos:column="31"/></name></expr>)<pos:position pos:line="213" pos:column="32"/></condition><then pos:line="213" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="214" pos:column="21">ah<pos:position pos:line="214" pos:column="23"/></name><operator pos:line="214" pos:column="23">-&gt;<pos:position pos:line="214" pos:column="28"/></operator><name pos:line="214" pos:column="25">allLogString<pos:position pos:line="214" pos:column="37"/></name></name><argument_list pos:line="214" pos:column="37">(<argument><expr><name><name pos:line="214" pos:column="38">fmt<pos:position pos:line="214" pos:column="41"/></name><operator pos:line="214" pos:column="41">-&gt;<pos:position pos:line="214" pos:column="46"/></operator><name pos:line="214" pos:column="43">data<pos:position pos:line="214" pos:column="47"/></name><operator pos:line="214" pos:column="47">.<pos:position pos:line="214" pos:column="48"/></operator><name pos:line="214" pos:column="48">string<pos:position pos:line="214" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="56">sb<pos:position pos:line="214" pos:column="58"/></name></expr></argument>)<pos:position pos:line="214" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="60"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="215" pos:column="17">out<pos:position pos:line="215" pos:column="20"/></name> <operator pos:line="215" pos:column="21">=<pos:position pos:line="215" pos:column="22"/></operator> <call><name><name pos:line="215" pos:column="23">sb<pos:position pos:line="215" pos:column="25"/></name><operator pos:line="215" pos:column="25">.<pos:position pos:line="215" pos:column="26"/></operator><name pos:line="215" pos:column="26">termedBuf<pos:position pos:line="215" pos:column="35"/></name></name><argument_list pos:line="215" pos:column="35">()<pos:position pos:line="215" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="216" pos:column="14"/></block></then></if>
            <break pos:line="217" pos:column="13">break;<pos:position pos:line="217" pos:column="19"/></break>
<cpp:endif pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">endif<pos:position pos:line="218" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">if<pos:position pos:line="220" pos:column="4"/></cpp:directive> <expr><name pos:line="220" pos:column="5">ICAP_CLIENT<pos:position pos:line="220" pos:column="16"/></name></expr></cpp:if>
        <case pos:line="221" pos:column="9">case <expr><name pos:line="221" pos:column="14">LFT_ICAP_LAST_MATCHED_HEADER<pos:position pos:line="221" pos:column="42"/></name></expr>:<pos:position pos:line="221" pos:column="43"/></case>
            <if pos:line="222" pos:column="13">if <condition pos:line="222" pos:column="16">(<expr><name><name pos:line="222" pos:column="17">al<pos:position pos:line="222" pos:column="19"/></name><operator pos:line="222" pos:column="19">-&gt;<pos:position pos:line="222" pos:column="24"/></operator><name pos:line="222" pos:column="21">request<pos:position pos:line="222" pos:column="28"/></name></name></expr>)<pos:position pos:line="222" pos:column="29"/></condition><then pos:line="222" pos:column="29"> <block pos:line="222" pos:column="30">{
                <decl_stmt><decl><type><name><name pos:line="223" pos:column="17">Adaptation<pos:position pos:line="223" pos:column="27"/></name><operator pos:line="223" pos:column="27">::<pos:position pos:line="223" pos:column="29"/></operator><name pos:line="223" pos:column="29">Icap<pos:position pos:line="223" pos:column="33"/></name><operator pos:line="223" pos:column="33">::<pos:position pos:line="223" pos:column="35"/></operator><name pos:line="223" pos:column="35">History<pos:position pos:line="223" pos:column="42"/></name><operator pos:line="223" pos:column="42">::<pos:position pos:line="223" pos:column="44"/></operator><name pos:line="223" pos:column="44">Pointer<pos:position pos:line="223" pos:column="51"/></name></name></type> <name pos:line="223" pos:column="52">ih<pos:position pos:line="223" pos:column="54"/></name> <init pos:line="223" pos:column="55">= <expr><call><name><name pos:line="223" pos:column="57">al<pos:position pos:line="223" pos:column="59"/></name><operator pos:line="223" pos:column="59">-&gt;<pos:position pos:line="223" pos:column="64"/></operator><name pos:line="223" pos:column="61">request<pos:position pos:line="223" pos:column="68"/></name><operator pos:line="223" pos:column="68">-&gt;<pos:position pos:line="223" pos:column="73"/></operator><name pos:line="223" pos:column="70">icapHistory<pos:position pos:line="223" pos:column="81"/></name></name><argument_list pos:line="223" pos:column="81">()<pos:position pos:line="223" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="223" pos:column="84"/></decl_stmt>
                <if pos:line="224" pos:column="17">if <condition pos:line="224" pos:column="20">(<expr><name pos:line="224" pos:column="21">ih<pos:position pos:line="224" pos:column="23"/></name> <operator pos:line="224" pos:column="24">!=<pos:position pos:line="224" pos:column="26"/></operator> <name pos:line="224" pos:column="27">NULL<pos:position pos:line="224" pos:column="31"/></name></expr>)<pos:position pos:line="224" pos:column="32"/></condition><then pos:line="224" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="225" pos:column="21">sb<pos:position pos:line="225" pos:column="23"/></name> <operator pos:line="225" pos:column="24">=<pos:position pos:line="225" pos:column="25"/></operator> <call><name><name pos:line="225" pos:column="26">ih<pos:position pos:line="225" pos:column="28"/></name><operator pos:line="225" pos:column="28">-&gt;<pos:position pos:line="225" pos:column="33"/></operator><name pos:line="225" pos:column="30">mergeOfIcapHeaders<pos:position pos:line="225" pos:column="48"/></name><operator pos:line="225" pos:column="48">.<pos:position pos:line="225" pos:column="49"/></operator><name pos:line="225" pos:column="49">getByName<pos:position pos:line="225" pos:column="58"/></name></name><argument_list pos:line="225" pos:column="58">(<argument><expr><name><name pos:line="225" pos:column="59">fmt<pos:position pos:line="225" pos:column="62"/></name><operator pos:line="225" pos:column="62">-&gt;<pos:position pos:line="225" pos:column="67"/></operator><name pos:line="225" pos:column="64">data<pos:position pos:line="225" pos:column="68"/></name><operator pos:line="225" pos:column="68">.<pos:position pos:line="225" pos:column="69"/></operator><name pos:line="225" pos:column="69">header<pos:position pos:line="225" pos:column="75"/></name><operator pos:line="225" pos:column="75">.<pos:position pos:line="225" pos:column="76"/></operator><name pos:line="225" pos:column="76">header<pos:position pos:line="225" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="225" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="84"/></expr_stmt></block></then></if>
            }<pos:position pos:line="226" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="228" pos:column="13">out<pos:position pos:line="228" pos:column="16"/></name> <operator pos:line="228" pos:column="17">=<pos:position pos:line="228" pos:column="18"/></operator> <call><name><name pos:line="228" pos:column="19">sb<pos:position pos:line="228" pos:column="21"/></name><operator pos:line="228" pos:column="21">.<pos:position pos:line="228" pos:column="22"/></operator><name pos:line="228" pos:column="22">termedBuf<pos:position pos:line="228" pos:column="31"/></name></name><argument_list pos:line="228" pos:column="31">()<pos:position pos:line="228" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="230" pos:column="13">quote<pos:position pos:line="230" pos:column="18"/></name> <operator pos:line="230" pos:column="19">=<pos:position pos:line="230" pos:column="20"/></operator> <literal type="number" pos:line="230" pos:column="21">1<pos:position pos:line="230" pos:column="22"/></literal></expr>;<pos:position pos:line="230" pos:column="23"/></expr_stmt>

            <break pos:line="232" pos:column="13">break;<pos:position pos:line="232" pos:column="19"/></break>

        <case pos:line="234" pos:column="9">case <expr><name pos:line="234" pos:column="14">LFT_ICAP_LAST_MATCHED_HEADER_ELEM<pos:position pos:line="234" pos:column="47"/></name></expr>:<pos:position pos:line="234" pos:column="48"/></case>
            <if pos:line="235" pos:column="13">if <condition pos:line="235" pos:column="16">(<expr><name><name pos:line="235" pos:column="17">al<pos:position pos:line="235" pos:column="19"/></name><operator pos:line="235" pos:column="19">-&gt;<pos:position pos:line="235" pos:column="24"/></operator><name pos:line="235" pos:column="21">request<pos:position pos:line="235" pos:column="28"/></name></name></expr>)<pos:position pos:line="235" pos:column="29"/></condition><then pos:line="235" pos:column="29"> <block pos:line="235" pos:column="30">{
                <decl_stmt><decl><type><name><name pos:line="236" pos:column="17">Adaptation<pos:position pos:line="236" pos:column="27"/></name><operator pos:line="236" pos:column="27">::<pos:position pos:line="236" pos:column="29"/></operator><name pos:line="236" pos:column="29">Icap<pos:position pos:line="236" pos:column="33"/></name><operator pos:line="236" pos:column="33">::<pos:position pos:line="236" pos:column="35"/></operator><name pos:line="236" pos:column="35">History<pos:position pos:line="236" pos:column="42"/></name><operator pos:line="236" pos:column="42">::<pos:position pos:line="236" pos:column="44"/></operator><name pos:line="236" pos:column="44">Pointer<pos:position pos:line="236" pos:column="51"/></name></name></type> <name pos:line="236" pos:column="52">ih<pos:position pos:line="236" pos:column="54"/></name> <init pos:line="236" pos:column="55">= <expr><call><name><name pos:line="236" pos:column="57">al<pos:position pos:line="236" pos:column="59"/></name><operator pos:line="236" pos:column="59">-&gt;<pos:position pos:line="236" pos:column="64"/></operator><name pos:line="236" pos:column="61">request<pos:position pos:line="236" pos:column="68"/></name><operator pos:line="236" pos:column="68">-&gt;<pos:position pos:line="236" pos:column="73"/></operator><name pos:line="236" pos:column="70">icapHistory<pos:position pos:line="236" pos:column="81"/></name></name><argument_list pos:line="236" pos:column="81">()<pos:position pos:line="236" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="236" pos:column="84"/></decl_stmt>
                <if pos:line="237" pos:column="17">if <condition pos:line="237" pos:column="20">(<expr><name pos:line="237" pos:column="21">ih<pos:position pos:line="237" pos:column="23"/></name> <operator pos:line="237" pos:column="24">!=<pos:position pos:line="237" pos:column="26"/></operator> <name pos:line="237" pos:column="27">NULL<pos:position pos:line="237" pos:column="31"/></name></expr>)<pos:position pos:line="237" pos:column="32"/></condition><then pos:line="237" pos:column="32">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="238" pos:column="21">sb<pos:position pos:line="238" pos:column="23"/></name> <operator pos:line="238" pos:column="24">=<pos:position pos:line="238" pos:column="25"/></operator> <call><name><name pos:line="238" pos:column="26">ih<pos:position pos:line="238" pos:column="28"/></name><operator pos:line="238" pos:column="28">-&gt;<pos:position pos:line="238" pos:column="33"/></operator><name pos:line="238" pos:column="30">mergeOfIcapHeaders<pos:position pos:line="238" pos:column="48"/></name><operator pos:line="238" pos:column="48">.<pos:position pos:line="238" pos:column="49"/></operator><name pos:line="238" pos:column="49">getByNameListMember<pos:position pos:line="238" pos:column="68"/></name></name><argument_list pos:line="238" pos:column="68">(<argument><expr><name><name pos:line="238" pos:column="69">fmt<pos:position pos:line="238" pos:column="72"/></name><operator pos:line="238" pos:column="72">-&gt;<pos:position pos:line="238" pos:column="77"/></operator><name pos:line="238" pos:column="74">data<pos:position pos:line="238" pos:column="78"/></name><operator pos:line="238" pos:column="78">.<pos:position pos:line="238" pos:column="79"/></operator><name pos:line="238" pos:column="79">header<pos:position pos:line="238" pos:column="85"/></name><operator pos:line="238" pos:column="85">.<pos:position pos:line="238" pos:column="86"/></operator><name pos:line="238" pos:column="86">header<pos:position pos:line="238" pos:column="92"/></name></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="94">fmt<pos:position pos:line="238" pos:column="97"/></name><operator pos:line="238" pos:column="97">-&gt;<pos:position pos:line="238" pos:column="102"/></operator><name pos:line="238" pos:column="99">data<pos:position pos:line="238" pos:column="103"/></name><operator pos:line="238" pos:column="103">.<pos:position pos:line="238" pos:column="104"/></operator><name pos:line="238" pos:column="104">header<pos:position pos:line="238" pos:column="110"/></name><operator pos:line="238" pos:column="110">.<pos:position pos:line="238" pos:column="111"/></operator><name pos:line="238" pos:column="111">element<pos:position pos:line="238" pos:column="118"/></name></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="120">fmt<pos:position pos:line="238" pos:column="123"/></name><operator pos:line="238" pos:column="123">-&gt;<pos:position pos:line="238" pos:column="128"/></operator><name pos:line="238" pos:column="125">data<pos:position pos:line="238" pos:column="129"/></name><operator pos:line="238" pos:column="129">.<pos:position pos:line="238" pos:column="130"/></operator><name pos:line="238" pos:column="130">header<pos:position pos:line="238" pos:column="136"/></name><operator pos:line="238" pos:column="136">.<pos:position pos:line="238" pos:column="137"/></operator><name pos:line="238" pos:column="137">separator<pos:position pos:line="238" pos:column="146"/></name></name></expr></argument>)<pos:position pos:line="238" pos:column="147"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="148"/></expr_stmt></block></then></if>
            }<pos:position pos:line="239" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="241" pos:column="13">out<pos:position pos:line="241" pos:column="16"/></name> <operator pos:line="241" pos:column="17">=<pos:position pos:line="241" pos:column="18"/></operator> <call><name><name pos:line="241" pos:column="19">sb<pos:position pos:line="241" pos:column="21"/></name><operator pos:line="241" pos:column="21">.<pos:position pos:line="241" pos:column="22"/></operator><name pos:line="241" pos:column="22">termedBuf<pos:position pos:line="241" pos:column="31"/></name></name><argument_list pos:line="241" pos:column="31">()<pos:position pos:line="241" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="243" pos:column="13">quote<pos:position pos:line="243" pos:column="18"/></name> <operator pos:line="243" pos:column="19">=<pos:position pos:line="243" pos:column="20"/></operator> <literal type="number" pos:line="243" pos:column="21">1<pos:position pos:line="243" pos:column="22"/></literal></expr>;<pos:position pos:line="243" pos:column="23"/></expr_stmt>

            <break pos:line="245" pos:column="13">break;<pos:position pos:line="245" pos:column="19"/></break>

        <case pos:line="247" pos:column="9">case <expr><name pos:line="247" pos:column="14">LFT_ICAP_LAST_MATCHED_ALL_HEADERS<pos:position pos:line="247" pos:column="47"/></name></expr>:<pos:position pos:line="247" pos:column="48"/></case>
            <expr_stmt><expr><name pos:line="248" pos:column="13">out<pos:position pos:line="248" pos:column="16"/></name> <operator pos:line="248" pos:column="17">=<pos:position pos:line="248" pos:column="18"/></operator> <name><name pos:line="248" pos:column="19">al<pos:position pos:line="248" pos:column="21"/></name><operator pos:line="248" pos:column="21">-&gt;<pos:position pos:line="248" pos:column="26"/></operator><name pos:line="248" pos:column="23">headers<pos:position pos:line="248" pos:column="30"/></name><operator pos:line="248" pos:column="30">.<pos:position pos:line="248" pos:column="31"/></operator><name pos:line="248" pos:column="31">icap<pos:position pos:line="248" pos:column="35"/></name></name></expr>;<pos:position pos:line="248" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><name pos:line="250" pos:column="13">quote<pos:position pos:line="250" pos:column="18"/></name> <operator pos:line="250" pos:column="19">=<pos:position pos:line="250" pos:column="20"/></operator> <literal type="number" pos:line="250" pos:column="21">1<pos:position pos:line="250" pos:column="22"/></literal></expr>;<pos:position pos:line="250" pos:column="23"/></expr_stmt>

            <break pos:line="252" pos:column="13">break;<pos:position pos:line="252" pos:column="19"/></break>

        <case pos:line="254" pos:column="9">case <expr><name pos:line="254" pos:column="14">LFT_ICAP_ADDR<pos:position pos:line="254" pos:column="27"/></name></expr>:<pos:position pos:line="254" pos:column="28"/></case>
            <if pos:line="255" pos:column="13">if <condition pos:line="255" pos:column="16">(<expr><operator pos:line="255" pos:column="17">!<pos:position pos:line="255" pos:column="18"/></operator><name pos:line="255" pos:column="18">out<pos:position pos:line="255" pos:column="21"/></name></expr>)<pos:position pos:line="255" pos:column="22"/></condition><then pos:line="255" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="256" pos:column="17">out<pos:position pos:line="256" pos:column="20"/></name> <operator pos:line="256" pos:column="21">=<pos:position pos:line="256" pos:column="22"/></operator> <call><name><name pos:line="256" pos:column="23">al<pos:position pos:line="256" pos:column="25"/></name><operator pos:line="256" pos:column="25">-&gt;<pos:position pos:line="256" pos:column="30"/></operator><name pos:line="256" pos:column="27">icap<pos:position pos:line="256" pos:column="31"/></name><operator pos:line="256" pos:column="31">.<pos:position pos:line="256" pos:column="32"/></operator><name pos:line="256" pos:column="32">hostAddr<pos:position pos:line="256" pos:column="40"/></name><operator pos:line="256" pos:column="40">.<pos:position pos:line="256" pos:column="41"/></operator><name pos:line="256" pos:column="41">NtoA<pos:position pos:line="256" pos:column="45"/></name></name><argument_list pos:line="256" pos:column="45">(<argument><expr><name pos:line="256" pos:column="46">tmp<pos:position pos:line="256" pos:column="49"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="256" pos:column="50">1024<pos:position pos:line="256" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="56"/></expr_stmt></block></then></if>
            <break pos:line="257" pos:column="13">break;<pos:position pos:line="257" pos:column="19"/></break>

        <case pos:line="259" pos:column="9">case <expr><name pos:line="259" pos:column="14">LFT_ICAP_SERV_NAME<pos:position pos:line="259" pos:column="32"/></name></expr>:<pos:position pos:line="259" pos:column="33"/></case>
            <expr_stmt><expr><name pos:line="260" pos:column="13">out<pos:position pos:line="260" pos:column="16"/></name> <operator pos:line="260" pos:column="17">=<pos:position pos:line="260" pos:column="18"/></operator> <call><name><name pos:line="260" pos:column="19">al<pos:position pos:line="260" pos:column="21"/></name><operator pos:line="260" pos:column="21">-&gt;<pos:position pos:line="260" pos:column="26"/></operator><name pos:line="260" pos:column="23">icap<pos:position pos:line="260" pos:column="27"/></name><operator pos:line="260" pos:column="27">.<pos:position pos:line="260" pos:column="28"/></operator><name pos:line="260" pos:column="28">serviceName<pos:position pos:line="260" pos:column="39"/></name><operator pos:line="260" pos:column="39">.<pos:position pos:line="260" pos:column="40"/></operator><name pos:line="260" pos:column="40">termedBuf<pos:position pos:line="260" pos:column="49"/></name></name><argument_list pos:line="260" pos:column="49">()<pos:position pos:line="260" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="52"/></expr_stmt>
            <break pos:line="261" pos:column="13">break;<pos:position pos:line="261" pos:column="19"/></break>

        <case pos:line="263" pos:column="9">case <expr><name pos:line="263" pos:column="14">LFT_ICAP_REQUEST_URI<pos:position pos:line="263" pos:column="34"/></name></expr>:<pos:position pos:line="263" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="264" pos:column="13">out<pos:position pos:line="264" pos:column="16"/></name> <operator pos:line="264" pos:column="17">=<pos:position pos:line="264" pos:column="18"/></operator> <call><name><name pos:line="264" pos:column="19">al<pos:position pos:line="264" pos:column="21"/></name><operator pos:line="264" pos:column="21">-&gt;<pos:position pos:line="264" pos:column="26"/></operator><name pos:line="264" pos:column="23">icap<pos:position pos:line="264" pos:column="27"/></name><operator pos:line="264" pos:column="27">.<pos:position pos:line="264" pos:column="28"/></operator><name pos:line="264" pos:column="28">reqUri<pos:position pos:line="264" pos:column="34"/></name><operator pos:line="264" pos:column="34">.<pos:position pos:line="264" pos:column="35"/></operator><name pos:line="264" pos:column="35">termedBuf<pos:position pos:line="264" pos:column="44"/></name></name><argument_list pos:line="264" pos:column="44">()<pos:position pos:line="264" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="47"/></expr_stmt>
            <break pos:line="265" pos:column="13">break;<pos:position pos:line="265" pos:column="19"/></break>

        <case pos:line="267" pos:column="9">case <expr><name pos:line="267" pos:column="14">LFT_ICAP_REQUEST_METHOD<pos:position pos:line="267" pos:column="37"/></name></expr>:<pos:position pos:line="267" pos:column="38"/></case>
            <expr_stmt><expr><name pos:line="268" pos:column="13">out<pos:position pos:line="268" pos:column="16"/></name> <operator pos:line="268" pos:column="17">=<pos:position pos:line="268" pos:column="18"/></operator> <call><name><name pos:line="268" pos:column="19">Adaptation<pos:position pos:line="268" pos:column="29"/></name><operator pos:line="268" pos:column="29">::<pos:position pos:line="268" pos:column="31"/></operator><name pos:line="268" pos:column="31">Icap<pos:position pos:line="268" pos:column="35"/></name><operator pos:line="268" pos:column="35">::<pos:position pos:line="268" pos:column="37"/></operator><name pos:line="268" pos:column="37">ICAP<pos:position pos:line="268" pos:column="41"/></name><operator pos:line="268" pos:column="41">::<pos:position pos:line="268" pos:column="43"/></operator><name pos:line="268" pos:column="43">methodStr<pos:position pos:line="268" pos:column="52"/></name></name><argument_list pos:line="268" pos:column="52">(<argument><expr><name><name pos:line="268" pos:column="53">al<pos:position pos:line="268" pos:column="55"/></name><operator pos:line="268" pos:column="55">-&gt;<pos:position pos:line="268" pos:column="60"/></operator><name pos:line="268" pos:column="57">icap<pos:position pos:line="268" pos:column="61"/></name><operator pos:line="268" pos:column="61">.<pos:position pos:line="268" pos:column="62"/></operator><name pos:line="268" pos:column="62">reqMethod<pos:position pos:line="268" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="268" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="73"/></expr_stmt>
            <break pos:line="269" pos:column="13">break;<pos:position pos:line="269" pos:column="19"/></break>

        <case pos:line="271" pos:column="9">case <expr><name pos:line="271" pos:column="14">LFT_ICAP_BYTES_SENT<pos:position pos:line="271" pos:column="33"/></name></expr>:<pos:position pos:line="271" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="272" pos:column="13">outoff<pos:position pos:line="272" pos:column="19"/></name> <operator pos:line="272" pos:column="20">=<pos:position pos:line="272" pos:column="21"/></operator> <name><name pos:line="272" pos:column="22">al<pos:position pos:line="272" pos:column="24"/></name><operator pos:line="272" pos:column="24">-&gt;<pos:position pos:line="272" pos:column="29"/></operator><name pos:line="272" pos:column="26">icap<pos:position pos:line="272" pos:column="30"/></name><operator pos:line="272" pos:column="30">.<pos:position pos:line="272" pos:column="31"/></operator><name pos:line="272" pos:column="31">bytesSent<pos:position pos:line="272" pos:column="40"/></name></name></expr>;<pos:position pos:line="272" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="273" pos:column="13">dooff<pos:position pos:line="273" pos:column="18"/></name> <operator pos:line="273" pos:column="19">=<pos:position pos:line="273" pos:column="20"/></operator> <literal type="number" pos:line="273" pos:column="21">1<pos:position pos:line="273" pos:column="22"/></literal></expr>;<pos:position pos:line="273" pos:column="23"/></expr_stmt>
            <break pos:line="274" pos:column="13">break;<pos:position pos:line="274" pos:column="19"/></break>

        <case pos:line="276" pos:column="9">case <expr><name pos:line="276" pos:column="14">LFT_ICAP_BYTES_READ<pos:position pos:line="276" pos:column="33"/></name></expr>:<pos:position pos:line="276" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="277" pos:column="13">outoff<pos:position pos:line="277" pos:column="19"/></name> <operator pos:line="277" pos:column="20">=<pos:position pos:line="277" pos:column="21"/></operator> <name><name pos:line="277" pos:column="22">al<pos:position pos:line="277" pos:column="24"/></name><operator pos:line="277" pos:column="24">-&gt;<pos:position pos:line="277" pos:column="29"/></operator><name pos:line="277" pos:column="26">icap<pos:position pos:line="277" pos:column="30"/></name><operator pos:line="277" pos:column="30">.<pos:position pos:line="277" pos:column="31"/></operator><name pos:line="277" pos:column="31">bytesRead<pos:position pos:line="277" pos:column="40"/></name></name></expr>;<pos:position pos:line="277" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="278" pos:column="13">dooff<pos:position pos:line="278" pos:column="18"/></name> <operator pos:line="278" pos:column="19">=<pos:position pos:line="278" pos:column="20"/></operator> <literal type="number" pos:line="278" pos:column="21">1<pos:position pos:line="278" pos:column="22"/></literal></expr>;<pos:position pos:line="278" pos:column="23"/></expr_stmt>
            <break pos:line="279" pos:column="13">break;<pos:position pos:line="279" pos:column="19"/></break>

        <case pos:line="281" pos:column="9">case <expr><name pos:line="281" pos:column="14">LFT_ICAP_REQ_HEADER<pos:position pos:line="281" pos:column="33"/></name></expr>:<pos:position pos:line="281" pos:column="34"/></case>
            <if pos:line="282" pos:column="13">if <condition pos:line="282" pos:column="16">(<expr><name pos:line="282" pos:column="17">NULL<pos:position pos:line="282" pos:column="21"/></name> <operator pos:line="282" pos:column="22">!=<pos:position pos:line="282" pos:column="24"/></operator> <name><name pos:line="282" pos:column="25">al<pos:position pos:line="282" pos:column="27"/></name><operator pos:line="282" pos:column="27">-&gt;<pos:position pos:line="282" pos:column="32"/></operator><name pos:line="282" pos:column="29">icap<pos:position pos:line="282" pos:column="33"/></name><operator pos:line="282" pos:column="33">.<pos:position pos:line="282" pos:column="34"/></operator><name pos:line="282" pos:column="34">request<pos:position pos:line="282" pos:column="41"/></name></name></expr>)<pos:position pos:line="282" pos:column="42"/></condition><then pos:line="282" pos:column="42"> <block pos:line="282" pos:column="43">{
                <expr_stmt><expr><name pos:line="283" pos:column="17">sb<pos:position pos:line="283" pos:column="19"/></name> <operator pos:line="283" pos:column="20">=<pos:position pos:line="283" pos:column="21"/></operator> <call><name><name pos:line="283" pos:column="22">al<pos:position pos:line="283" pos:column="24"/></name><operator pos:line="283" pos:column="24">-&gt;<pos:position pos:line="283" pos:column="29"/></operator><name pos:line="283" pos:column="26">icap<pos:position pos:line="283" pos:column="30"/></name><operator pos:line="283" pos:column="30">.<pos:position pos:line="283" pos:column="31"/></operator><name pos:line="283" pos:column="31">request<pos:position pos:line="283" pos:column="38"/></name><operator pos:line="283" pos:column="38">-&gt;<pos:position pos:line="283" pos:column="43"/></operator><name pos:line="283" pos:column="40">header<pos:position pos:line="283" pos:column="46"/></name><operator pos:line="283" pos:column="46">.<pos:position pos:line="283" pos:column="47"/></operator><name pos:line="283" pos:column="47">getByName<pos:position pos:line="283" pos:column="56"/></name></name><argument_list pos:line="283" pos:column="56">(<argument><expr><name><name pos:line="283" pos:column="57">fmt<pos:position pos:line="283" pos:column="60"/></name><operator pos:line="283" pos:column="60">-&gt;<pos:position pos:line="283" pos:column="65"/></operator><name pos:line="283" pos:column="62">data<pos:position pos:line="283" pos:column="66"/></name><operator pos:line="283" pos:column="66">.<pos:position pos:line="283" pos:column="67"/></operator><name pos:line="283" pos:column="67">header<pos:position pos:line="283" pos:column="73"/></name><operator pos:line="283" pos:column="73">.<pos:position pos:line="283" pos:column="74"/></operator><name pos:line="283" pos:column="74">header<pos:position pos:line="283" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><name pos:line="284" pos:column="17">out<pos:position pos:line="284" pos:column="20"/></name> <operator pos:line="284" pos:column="21">=<pos:position pos:line="284" pos:column="22"/></operator> <call><name><name pos:line="284" pos:column="23">sb<pos:position pos:line="284" pos:column="25"/></name><operator pos:line="284" pos:column="25">.<pos:position pos:line="284" pos:column="26"/></operator><name pos:line="284" pos:column="26">termedBuf<pos:position pos:line="284" pos:column="35"/></name></name><argument_list pos:line="284" pos:column="35">()<pos:position pos:line="284" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="285" pos:column="17">quote<pos:position pos:line="285" pos:column="22"/></name> <operator pos:line="285" pos:column="23">=<pos:position pos:line="285" pos:column="24"/></operator> <literal type="number" pos:line="285" pos:column="25">1<pos:position pos:line="285" pos:column="26"/></literal></expr>;<pos:position pos:line="285" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="286" pos:column="14"/></block></then></if>
            <break pos:line="287" pos:column="13">break;<pos:position pos:line="287" pos:column="19"/></break>

        <case pos:line="289" pos:column="9">case <expr><name pos:line="289" pos:column="14">LFT_ICAP_REQ_HEADER_ELEM<pos:position pos:line="289" pos:column="38"/></name></expr>:<pos:position pos:line="289" pos:column="39"/></case>
            <if pos:line="290" pos:column="13">if <condition pos:line="290" pos:column="16">(<expr><name><name pos:line="290" pos:column="17">al<pos:position pos:line="290" pos:column="19"/></name><operator pos:line="290" pos:column="19">-&gt;<pos:position pos:line="290" pos:column="24"/></operator><name pos:line="290" pos:column="21">request<pos:position pos:line="290" pos:column="28"/></name></name></expr>)<pos:position pos:line="290" pos:column="29"/></condition><then pos:line="290" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="291" pos:column="17">sb<pos:position pos:line="291" pos:column="19"/></name> <operator pos:line="291" pos:column="20">=<pos:position pos:line="291" pos:column="21"/></operator> <call><name><name pos:line="291" pos:column="22">al<pos:position pos:line="291" pos:column="24"/></name><operator pos:line="291" pos:column="24">-&gt;<pos:position pos:line="291" pos:column="29"/></operator><name pos:line="291" pos:column="26">icap<pos:position pos:line="291" pos:column="30"/></name><operator pos:line="291" pos:column="30">.<pos:position pos:line="291" pos:column="31"/></operator><name pos:line="291" pos:column="31">request<pos:position pos:line="291" pos:column="38"/></name><operator pos:line="291" pos:column="38">-&gt;<pos:position pos:line="291" pos:column="43"/></operator><name pos:line="291" pos:column="40">header<pos:position pos:line="291" pos:column="46"/></name><operator pos:line="291" pos:column="46">.<pos:position pos:line="291" pos:column="47"/></operator><name pos:line="291" pos:column="47">getByNameListMember<pos:position pos:line="291" pos:column="66"/></name></name><argument_list pos:line="291" pos:column="66">(<argument><expr><name><name pos:line="291" pos:column="67">fmt<pos:position pos:line="291" pos:column="70"/></name><operator pos:line="291" pos:column="70">-&gt;<pos:position pos:line="291" pos:column="75"/></operator><name pos:line="291" pos:column="72">data<pos:position pos:line="291" pos:column="76"/></name><operator pos:line="291" pos:column="76">.<pos:position pos:line="291" pos:column="77"/></operator><name pos:line="291" pos:column="77">header<pos:position pos:line="291" pos:column="83"/></name><operator pos:line="291" pos:column="83">.<pos:position pos:line="291" pos:column="84"/></operator><name pos:line="291" pos:column="84">header<pos:position pos:line="291" pos:column="90"/></name></name></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="92">fmt<pos:position pos:line="291" pos:column="95"/></name><operator pos:line="291" pos:column="95">-&gt;<pos:position pos:line="291" pos:column="100"/></operator><name pos:line="291" pos:column="97">data<pos:position pos:line="291" pos:column="101"/></name><operator pos:line="291" pos:column="101">.<pos:position pos:line="291" pos:column="102"/></operator><name pos:line="291" pos:column="102">header<pos:position pos:line="291" pos:column="108"/></name><operator pos:line="291" pos:column="108">.<pos:position pos:line="291" pos:column="109"/></operator><name pos:line="291" pos:column="109">element<pos:position pos:line="291" pos:column="116"/></name></name></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="118">fmt<pos:position pos:line="291" pos:column="121"/></name><operator pos:line="291" pos:column="121">-&gt;<pos:position pos:line="291" pos:column="126"/></operator><name pos:line="291" pos:column="123">data<pos:position pos:line="291" pos:column="127"/></name><operator pos:line="291" pos:column="127">.<pos:position pos:line="291" pos:column="128"/></operator><name pos:line="291" pos:column="128">header<pos:position pos:line="291" pos:column="134"/></name><operator pos:line="291" pos:column="134">.<pos:position pos:line="291" pos:column="135"/></operator><name pos:line="291" pos:column="135">separator<pos:position pos:line="291" pos:column="144"/></name></name></expr></argument>)<pos:position pos:line="291" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="146"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="293" pos:column="13">out<pos:position pos:line="293" pos:column="16"/></name> <operator pos:line="293" pos:column="17">=<pos:position pos:line="293" pos:column="18"/></operator> <call><name><name pos:line="293" pos:column="19">sb<pos:position pos:line="293" pos:column="21"/></name><operator pos:line="293" pos:column="21">.<pos:position pos:line="293" pos:column="22"/></operator><name pos:line="293" pos:column="22">termedBuf<pos:position pos:line="293" pos:column="31"/></name></name><argument_list pos:line="293" pos:column="31">()<pos:position pos:line="293" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="295" pos:column="13">quote<pos:position pos:line="295" pos:column="18"/></name> <operator pos:line="295" pos:column="19">=<pos:position pos:line="295" pos:column="20"/></operator> <literal type="number" pos:line="295" pos:column="21">1<pos:position pos:line="295" pos:column="22"/></literal></expr>;<pos:position pos:line="295" pos:column="23"/></expr_stmt>

            <break pos:line="297" pos:column="13">break;<pos:position pos:line="297" pos:column="19"/></break>

        <case pos:line="299" pos:column="9">case <expr><name pos:line="299" pos:column="14">LFT_ICAP_REQ_ALL_HEADERS<pos:position pos:line="299" pos:column="38"/></name></expr>:<pos:position pos:line="299" pos:column="39"/></case>
            <if pos:line="300" pos:column="13">if <condition pos:line="300" pos:column="16">(<expr><name><name pos:line="300" pos:column="17">al<pos:position pos:line="300" pos:column="19"/></name><operator pos:line="300" pos:column="19">-&gt;<pos:position pos:line="300" pos:column="24"/></operator><name pos:line="300" pos:column="21">icap<pos:position pos:line="300" pos:column="25"/></name><operator pos:line="300" pos:column="25">.<pos:position pos:line="300" pos:column="26"/></operator><name pos:line="300" pos:column="26">request<pos:position pos:line="300" pos:column="33"/></name></name></expr>)<pos:position pos:line="300" pos:column="34"/></condition><then pos:line="300" pos:column="34"> <block pos:line="300" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="301" pos:column="17">HttpHeaderPos<pos:position pos:line="301" pos:column="30"/></name></type> <name pos:line="301" pos:column="31">pos<pos:position pos:line="301" pos:column="34"/></name> <init pos:line="301" pos:column="35">= <expr><name pos:line="301" pos:column="37">HttpHeaderInitPos<pos:position pos:line="301" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="301" pos:column="55"/></decl_stmt>
                <while pos:line="302" pos:column="17">while <condition pos:line="302" pos:column="23">(<decl><type><specifier pos:line="302" pos:column="24">const<pos:position pos:line="302" pos:column="29"/></specifier> <name pos:line="302" pos:column="30">HttpHeaderEntry<pos:position pos:line="302" pos:column="45"/></name> <modifier pos:line="302" pos:column="46">*<pos:position pos:line="302" pos:column="47"/></modifier></type><name pos:line="302" pos:column="47">e<pos:position pos:line="302" pos:column="48"/></name> <init pos:line="302" pos:column="49">= <expr><call><name><name pos:line="302" pos:column="51">al<pos:position pos:line="302" pos:column="53"/></name><operator pos:line="302" pos:column="53">-&gt;<pos:position pos:line="302" pos:column="58"/></operator><name pos:line="302" pos:column="55">icap<pos:position pos:line="302" pos:column="59"/></name><operator pos:line="302" pos:column="59">.<pos:position pos:line="302" pos:column="60"/></operator><name pos:line="302" pos:column="60">request<pos:position pos:line="302" pos:column="67"/></name><operator pos:line="302" pos:column="67">-&gt;<pos:position pos:line="302" pos:column="72"/></operator><name pos:line="302" pos:column="69">header<pos:position pos:line="302" pos:column="75"/></name><operator pos:line="302" pos:column="75">.<pos:position pos:line="302" pos:column="76"/></operator><name pos:line="302" pos:column="76">getEntry<pos:position pos:line="302" pos:column="84"/></name></name><argument_list pos:line="302" pos:column="84">(<argument><expr><operator pos:line="302" pos:column="85">&amp;<pos:position pos:line="302" pos:column="90"/></operator><name pos:line="302" pos:column="86">pos<pos:position pos:line="302" pos:column="89"/></name></expr></argument>)<pos:position pos:line="302" pos:column="90"/></argument_list></call></expr></init></decl>)<pos:position pos:line="302" pos:column="91"/></condition> <block pos:line="302" pos:column="92">{
                    <expr_stmt><expr><call><name><name pos:line="303" pos:column="21">sb<pos:position pos:line="303" pos:column="23"/></name><operator pos:line="303" pos:column="23">.<pos:position pos:line="303" pos:column="24"/></operator><name pos:line="303" pos:column="24">append<pos:position pos:line="303" pos:column="30"/></name></name><argument_list pos:line="303" pos:column="30">(<argument><expr><name><name pos:line="303" pos:column="31">e<pos:position pos:line="303" pos:column="32"/></name><operator pos:line="303" pos:column="32">-&gt;<pos:position pos:line="303" pos:column="37"/></operator><name pos:line="303" pos:column="34">name<pos:position pos:line="303" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="303" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="304" pos:column="21">sb<pos:position pos:line="304" pos:column="23"/></name><operator pos:line="304" pos:column="23">.<pos:position pos:line="304" pos:column="24"/></operator><name pos:line="304" pos:column="24">append<pos:position pos:line="304" pos:column="30"/></name></name><argument_list pos:line="304" pos:column="30">(<argument><expr><literal type="string" pos:line="304" pos:column="31">": "<pos:position pos:line="304" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="305" pos:column="21">sb<pos:position pos:line="305" pos:column="23"/></name><operator pos:line="305" pos:column="23">.<pos:position pos:line="305" pos:column="24"/></operator><name pos:line="305" pos:column="24">append<pos:position pos:line="305" pos:column="30"/></name></name><argument_list pos:line="305" pos:column="30">(<argument><expr><name><name pos:line="305" pos:column="31">e<pos:position pos:line="305" pos:column="32"/></name><operator pos:line="305" pos:column="32">-&gt;<pos:position pos:line="305" pos:column="37"/></operator><name pos:line="305" pos:column="34">value<pos:position pos:line="305" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="305" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="306" pos:column="21">sb<pos:position pos:line="306" pos:column="23"/></name><operator pos:line="306" pos:column="23">.<pos:position pos:line="306" pos:column="24"/></operator><name pos:line="306" pos:column="24">append<pos:position pos:line="306" pos:column="30"/></name></name><argument_list pos:line="306" pos:column="30">(<argument><expr><literal type="string" pos:line="306" pos:column="31">"\r\n"<pos:position pos:line="306" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="307" pos:column="18"/></block></while>
                <expr_stmt><expr><name pos:line="308" pos:column="17">out<pos:position pos:line="308" pos:column="20"/></name> <operator pos:line="308" pos:column="21">=<pos:position pos:line="308" pos:column="22"/></operator> <call><name><name pos:line="308" pos:column="23">sb<pos:position pos:line="308" pos:column="25"/></name><operator pos:line="308" pos:column="25">.<pos:position pos:line="308" pos:column="26"/></operator><name pos:line="308" pos:column="26">termedBuf<pos:position pos:line="308" pos:column="35"/></name></name><argument_list pos:line="308" pos:column="35">()<pos:position pos:line="308" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="309" pos:column="17">quote<pos:position pos:line="309" pos:column="22"/></name> <operator pos:line="309" pos:column="23">=<pos:position pos:line="309" pos:column="24"/></operator> <literal type="number" pos:line="309" pos:column="25">1<pos:position pos:line="309" pos:column="26"/></literal></expr>;<pos:position pos:line="309" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="310" pos:column="14"/></block></then></if>
            <break pos:line="311" pos:column="13">break;<pos:position pos:line="311" pos:column="19"/></break>

        <case pos:line="313" pos:column="9">case <expr><name pos:line="313" pos:column="14">LFT_ICAP_REP_HEADER<pos:position pos:line="313" pos:column="33"/></name></expr>:<pos:position pos:line="313" pos:column="34"/></case>
            <if pos:line="314" pos:column="13">if <condition pos:line="314" pos:column="16">(<expr><name pos:line="314" pos:column="17">NULL<pos:position pos:line="314" pos:column="21"/></name> <operator pos:line="314" pos:column="22">!=<pos:position pos:line="314" pos:column="24"/></operator> <name><name pos:line="314" pos:column="25">al<pos:position pos:line="314" pos:column="27"/></name><operator pos:line="314" pos:column="27">-&gt;<pos:position pos:line="314" pos:column="32"/></operator><name pos:line="314" pos:column="29">icap<pos:position pos:line="314" pos:column="33"/></name><operator pos:line="314" pos:column="33">.<pos:position pos:line="314" pos:column="34"/></operator><name pos:line="314" pos:column="34">reply<pos:position pos:line="314" pos:column="39"/></name></name></expr>)<pos:position pos:line="314" pos:column="40"/></condition><then pos:line="314" pos:column="40"> <block pos:line="314" pos:column="41">{
                <expr_stmt><expr><name pos:line="315" pos:column="17">sb<pos:position pos:line="315" pos:column="19"/></name> <operator pos:line="315" pos:column="20">=<pos:position pos:line="315" pos:column="21"/></operator> <call><name><name pos:line="315" pos:column="22">al<pos:position pos:line="315" pos:column="24"/></name><operator pos:line="315" pos:column="24">-&gt;<pos:position pos:line="315" pos:column="29"/></operator><name pos:line="315" pos:column="26">icap<pos:position pos:line="315" pos:column="30"/></name><operator pos:line="315" pos:column="30">.<pos:position pos:line="315" pos:column="31"/></operator><name pos:line="315" pos:column="31">reply<pos:position pos:line="315" pos:column="36"/></name><operator pos:line="315" pos:column="36">-&gt;<pos:position pos:line="315" pos:column="41"/></operator><name pos:line="315" pos:column="38">header<pos:position pos:line="315" pos:column="44"/></name><operator pos:line="315" pos:column="44">.<pos:position pos:line="315" pos:column="45"/></operator><name pos:line="315" pos:column="45">getByName<pos:position pos:line="315" pos:column="54"/></name></name><argument_list pos:line="315" pos:column="54">(<argument><expr><name><name pos:line="315" pos:column="55">fmt<pos:position pos:line="315" pos:column="58"/></name><operator pos:line="315" pos:column="58">-&gt;<pos:position pos:line="315" pos:column="63"/></operator><name pos:line="315" pos:column="60">data<pos:position pos:line="315" pos:column="64"/></name><operator pos:line="315" pos:column="64">.<pos:position pos:line="315" pos:column="65"/></operator><name pos:line="315" pos:column="65">header<pos:position pos:line="315" pos:column="71"/></name><operator pos:line="315" pos:column="71">.<pos:position pos:line="315" pos:column="72"/></operator><name pos:line="315" pos:column="72">header<pos:position pos:line="315" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="315" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name pos:line="316" pos:column="17">out<pos:position pos:line="316" pos:column="20"/></name> <operator pos:line="316" pos:column="21">=<pos:position pos:line="316" pos:column="22"/></operator> <call><name><name pos:line="316" pos:column="23">sb<pos:position pos:line="316" pos:column="25"/></name><operator pos:line="316" pos:column="25">.<pos:position pos:line="316" pos:column="26"/></operator><name pos:line="316" pos:column="26">termedBuf<pos:position pos:line="316" pos:column="35"/></name></name><argument_list pos:line="316" pos:column="35">()<pos:position pos:line="316" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="317" pos:column="17">quote<pos:position pos:line="317" pos:column="22"/></name> <operator pos:line="317" pos:column="23">=<pos:position pos:line="317" pos:column="24"/></operator> <literal type="number" pos:line="317" pos:column="25">1<pos:position pos:line="317" pos:column="26"/></literal></expr>;<pos:position pos:line="317" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="318" pos:column="14"/></block></then></if>
            <break pos:line="319" pos:column="13">break;<pos:position pos:line="319" pos:column="19"/></break>

        <case pos:line="321" pos:column="9">case <expr><name pos:line="321" pos:column="14">LFT_ICAP_REP_HEADER_ELEM<pos:position pos:line="321" pos:column="38"/></name></expr>:<pos:position pos:line="321" pos:column="39"/></case>
            <if pos:line="322" pos:column="13">if <condition pos:line="322" pos:column="16">(<expr><name pos:line="322" pos:column="17">NULL<pos:position pos:line="322" pos:column="21"/></name> <operator pos:line="322" pos:column="22">!=<pos:position pos:line="322" pos:column="24"/></operator> <name><name pos:line="322" pos:column="25">al<pos:position pos:line="322" pos:column="27"/></name><operator pos:line="322" pos:column="27">-&gt;<pos:position pos:line="322" pos:column="32"/></operator><name pos:line="322" pos:column="29">icap<pos:position pos:line="322" pos:column="33"/></name><operator pos:line="322" pos:column="33">.<pos:position pos:line="322" pos:column="34"/></operator><name pos:line="322" pos:column="34">reply<pos:position pos:line="322" pos:column="39"/></name></name></expr>)<pos:position pos:line="322" pos:column="40"/></condition><then pos:line="322" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><name pos:line="323" pos:column="17">sb<pos:position pos:line="323" pos:column="19"/></name> <operator pos:line="323" pos:column="20">=<pos:position pos:line="323" pos:column="21"/></operator> <call><name><name pos:line="323" pos:column="22">al<pos:position pos:line="323" pos:column="24"/></name><operator pos:line="323" pos:column="24">-&gt;<pos:position pos:line="323" pos:column="29"/></operator><name pos:line="323" pos:column="26">icap<pos:position pos:line="323" pos:column="30"/></name><operator pos:line="323" pos:column="30">.<pos:position pos:line="323" pos:column="31"/></operator><name pos:line="323" pos:column="31">reply<pos:position pos:line="323" pos:column="36"/></name><operator pos:line="323" pos:column="36">-&gt;<pos:position pos:line="323" pos:column="41"/></operator><name pos:line="323" pos:column="38">header<pos:position pos:line="323" pos:column="44"/></name><operator pos:line="323" pos:column="44">.<pos:position pos:line="323" pos:column="45"/></operator><name pos:line="323" pos:column="45">getByNameListMember<pos:position pos:line="323" pos:column="64"/></name></name><argument_list pos:line="323" pos:column="64">(<argument><expr><name><name pos:line="323" pos:column="65">fmt<pos:position pos:line="323" pos:column="68"/></name><operator pos:line="323" pos:column="68">-&gt;<pos:position pos:line="323" pos:column="73"/></operator><name pos:line="323" pos:column="70">data<pos:position pos:line="323" pos:column="74"/></name><operator pos:line="323" pos:column="74">.<pos:position pos:line="323" pos:column="75"/></operator><name pos:line="323" pos:column="75">header<pos:position pos:line="323" pos:column="81"/></name><operator pos:line="323" pos:column="81">.<pos:position pos:line="323" pos:column="82"/></operator><name pos:line="323" pos:column="82">header<pos:position pos:line="323" pos:column="88"/></name></name></expr></argument>, <argument><expr><name><name pos:line="323" pos:column="90">fmt<pos:position pos:line="323" pos:column="93"/></name><operator pos:line="323" pos:column="93">-&gt;<pos:position pos:line="323" pos:column="98"/></operator><name pos:line="323" pos:column="95">data<pos:position pos:line="323" pos:column="99"/></name><operator pos:line="323" pos:column="99">.<pos:position pos:line="323" pos:column="100"/></operator><name pos:line="323" pos:column="100">header<pos:position pos:line="323" pos:column="106"/></name><operator pos:line="323" pos:column="106">.<pos:position pos:line="323" pos:column="107"/></operator><name pos:line="323" pos:column="107">element<pos:position pos:line="323" pos:column="114"/></name></name></expr></argument>, <argument><expr><name><name pos:line="323" pos:column="116">fmt<pos:position pos:line="323" pos:column="119"/></name><operator pos:line="323" pos:column="119">-&gt;<pos:position pos:line="323" pos:column="124"/></operator><name pos:line="323" pos:column="121">data<pos:position pos:line="323" pos:column="125"/></name><operator pos:line="323" pos:column="125">.<pos:position pos:line="323" pos:column="126"/></operator><name pos:line="323" pos:column="126">header<pos:position pos:line="323" pos:column="132"/></name><operator pos:line="323" pos:column="132">.<pos:position pos:line="323" pos:column="133"/></operator><name pos:line="323" pos:column="133">separator<pos:position pos:line="323" pos:column="142"/></name></name></expr></argument>)<pos:position pos:line="323" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="144"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="325" pos:column="13">out<pos:position pos:line="325" pos:column="16"/></name> <operator pos:line="325" pos:column="17">=<pos:position pos:line="325" pos:column="18"/></operator> <call><name><name pos:line="325" pos:column="19">sb<pos:position pos:line="325" pos:column="21"/></name><operator pos:line="325" pos:column="21">.<pos:position pos:line="325" pos:column="22"/></operator><name pos:line="325" pos:column="22">termedBuf<pos:position pos:line="325" pos:column="31"/></name></name><argument_list pos:line="325" pos:column="31">()<pos:position pos:line="325" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="327" pos:column="13">quote<pos:position pos:line="327" pos:column="18"/></name> <operator pos:line="327" pos:column="19">=<pos:position pos:line="327" pos:column="20"/></operator> <literal type="number" pos:line="327" pos:column="21">1<pos:position pos:line="327" pos:column="22"/></literal></expr>;<pos:position pos:line="327" pos:column="23"/></expr_stmt>

            <break pos:line="329" pos:column="13">break;<pos:position pos:line="329" pos:column="19"/></break>

        <case pos:line="331" pos:column="9">case <expr><name pos:line="331" pos:column="14">LFT_ICAP_REP_ALL_HEADERS<pos:position pos:line="331" pos:column="38"/></name></expr>:<pos:position pos:line="331" pos:column="39"/></case>
            <if pos:line="332" pos:column="13">if <condition pos:line="332" pos:column="16">(<expr><name><name pos:line="332" pos:column="17">al<pos:position pos:line="332" pos:column="19"/></name><operator pos:line="332" pos:column="19">-&gt;<pos:position pos:line="332" pos:column="24"/></operator><name pos:line="332" pos:column="21">icap<pos:position pos:line="332" pos:column="25"/></name><operator pos:line="332" pos:column="25">.<pos:position pos:line="332" pos:column="26"/></operator><name pos:line="332" pos:column="26">reply<pos:position pos:line="332" pos:column="31"/></name></name></expr>)<pos:position pos:line="332" pos:column="32"/></condition><then pos:line="332" pos:column="32"> <block pos:line="332" pos:column="33">{
                <decl_stmt><decl><type><name pos:line="333" pos:column="17">HttpHeaderPos<pos:position pos:line="333" pos:column="30"/></name></type> <name pos:line="333" pos:column="31">pos<pos:position pos:line="333" pos:column="34"/></name> <init pos:line="333" pos:column="35">= <expr><name pos:line="333" pos:column="37">HttpHeaderInitPos<pos:position pos:line="333" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="333" pos:column="55"/></decl_stmt>
                <while pos:line="334" pos:column="17">while <condition pos:line="334" pos:column="23">(<decl><type><specifier pos:line="334" pos:column="24">const<pos:position pos:line="334" pos:column="29"/></specifier> <name pos:line="334" pos:column="30">HttpHeaderEntry<pos:position pos:line="334" pos:column="45"/></name> <modifier pos:line="334" pos:column="46">*<pos:position pos:line="334" pos:column="47"/></modifier></type><name pos:line="334" pos:column="47">e<pos:position pos:line="334" pos:column="48"/></name> <init pos:line="334" pos:column="49">= <expr><call><name><name pos:line="334" pos:column="51">al<pos:position pos:line="334" pos:column="53"/></name><operator pos:line="334" pos:column="53">-&gt;<pos:position pos:line="334" pos:column="58"/></operator><name pos:line="334" pos:column="55">icap<pos:position pos:line="334" pos:column="59"/></name><operator pos:line="334" pos:column="59">.<pos:position pos:line="334" pos:column="60"/></operator><name pos:line="334" pos:column="60">reply<pos:position pos:line="334" pos:column="65"/></name><operator pos:line="334" pos:column="65">-&gt;<pos:position pos:line="334" pos:column="70"/></operator><name pos:line="334" pos:column="67">header<pos:position pos:line="334" pos:column="73"/></name><operator pos:line="334" pos:column="73">.<pos:position pos:line="334" pos:column="74"/></operator><name pos:line="334" pos:column="74">getEntry<pos:position pos:line="334" pos:column="82"/></name></name><argument_list pos:line="334" pos:column="82">(<argument><expr><operator pos:line="334" pos:column="83">&amp;<pos:position pos:line="334" pos:column="88"/></operator><name pos:line="334" pos:column="84">pos<pos:position pos:line="334" pos:column="87"/></name></expr></argument>)<pos:position pos:line="334" pos:column="88"/></argument_list></call></expr></init></decl>)<pos:position pos:line="334" pos:column="89"/></condition> <block pos:line="334" pos:column="90">{
                    <expr_stmt><expr><call><name><name pos:line="335" pos:column="21">sb<pos:position pos:line="335" pos:column="23"/></name><operator pos:line="335" pos:column="23">.<pos:position pos:line="335" pos:column="24"/></operator><name pos:line="335" pos:column="24">append<pos:position pos:line="335" pos:column="30"/></name></name><argument_list pos:line="335" pos:column="30">(<argument><expr><name><name pos:line="335" pos:column="31">e<pos:position pos:line="335" pos:column="32"/></name><operator pos:line="335" pos:column="32">-&gt;<pos:position pos:line="335" pos:column="37"/></operator><name pos:line="335" pos:column="34">name<pos:position pos:line="335" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="335" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="336" pos:column="21">sb<pos:position pos:line="336" pos:column="23"/></name><operator pos:line="336" pos:column="23">.<pos:position pos:line="336" pos:column="24"/></operator><name pos:line="336" pos:column="24">append<pos:position pos:line="336" pos:column="30"/></name></name><argument_list pos:line="336" pos:column="30">(<argument><expr><literal type="string" pos:line="336" pos:column="31">": "<pos:position pos:line="336" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="336" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="337" pos:column="21">sb<pos:position pos:line="337" pos:column="23"/></name><operator pos:line="337" pos:column="23">.<pos:position pos:line="337" pos:column="24"/></operator><name pos:line="337" pos:column="24">append<pos:position pos:line="337" pos:column="30"/></name></name><argument_list pos:line="337" pos:column="30">(<argument><expr><name><name pos:line="337" pos:column="31">e<pos:position pos:line="337" pos:column="32"/></name><operator pos:line="337" pos:column="32">-&gt;<pos:position pos:line="337" pos:column="37"/></operator><name pos:line="337" pos:column="34">value<pos:position pos:line="337" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="337" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="338" pos:column="21">sb<pos:position pos:line="338" pos:column="23"/></name><operator pos:line="338" pos:column="23">.<pos:position pos:line="338" pos:column="24"/></operator><name pos:line="338" pos:column="24">append<pos:position pos:line="338" pos:column="30"/></name></name><argument_list pos:line="338" pos:column="30">(<argument><expr><literal type="string" pos:line="338" pos:column="31">"\r\n"<pos:position pos:line="338" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="338" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="339" pos:column="18"/></block></while>
                <expr_stmt><expr><name pos:line="340" pos:column="17">out<pos:position pos:line="340" pos:column="20"/></name> <operator pos:line="340" pos:column="21">=<pos:position pos:line="340" pos:column="22"/></operator> <call><name><name pos:line="340" pos:column="23">sb<pos:position pos:line="340" pos:column="25"/></name><operator pos:line="340" pos:column="25">.<pos:position pos:line="340" pos:column="26"/></operator><name pos:line="340" pos:column="26">termedBuf<pos:position pos:line="340" pos:column="35"/></name></name><argument_list pos:line="340" pos:column="35">()<pos:position pos:line="340" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="341" pos:column="17">quote<pos:position pos:line="341" pos:column="22"/></name> <operator pos:line="341" pos:column="23">=<pos:position pos:line="341" pos:column="24"/></operator> <literal type="number" pos:line="341" pos:column="25">1<pos:position pos:line="341" pos:column="26"/></literal></expr>;<pos:position pos:line="341" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="342" pos:column="14"/></block></then></if>
            <break pos:line="343" pos:column="13">break;<pos:position pos:line="343" pos:column="19"/></break>

        <case pos:line="345" pos:column="9">case <expr><name pos:line="345" pos:column="14">LFT_ICAP_TR_RESPONSE_TIME<pos:position pos:line="345" pos:column="39"/></name></expr>:<pos:position pos:line="345" pos:column="40"/></case>
            <expr_stmt><expr><name pos:line="346" pos:column="13">outint<pos:position pos:line="346" pos:column="19"/></name> <operator pos:line="346" pos:column="20">=<pos:position pos:line="346" pos:column="21"/></operator> <name><name pos:line="346" pos:column="22">al<pos:position pos:line="346" pos:column="24"/></name><operator pos:line="346" pos:column="24">-&gt;<pos:position pos:line="346" pos:column="29"/></operator><name pos:line="346" pos:column="26">icap<pos:position pos:line="346" pos:column="30"/></name><operator pos:line="346" pos:column="30">.<pos:position pos:line="346" pos:column="31"/></operator><name pos:line="346" pos:column="31">trTime<pos:position pos:line="346" pos:column="37"/></name></name></expr>;<pos:position pos:line="346" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="347" pos:column="13">doint<pos:position pos:line="347" pos:column="18"/></name> <operator pos:line="347" pos:column="19">=<pos:position pos:line="347" pos:column="20"/></operator> <literal type="number" pos:line="347" pos:column="21">1<pos:position pos:line="347" pos:column="22"/></literal></expr>;<pos:position pos:line="347" pos:column="23"/></expr_stmt>
            <break pos:line="348" pos:column="13">break;<pos:position pos:line="348" pos:column="19"/></break>

        <case pos:line="350" pos:column="9">case <expr><name pos:line="350" pos:column="14">LFT_ICAP_IO_TIME<pos:position pos:line="350" pos:column="30"/></name></expr>:<pos:position pos:line="350" pos:column="31"/></case>
            <expr_stmt><expr><name pos:line="351" pos:column="13">outint<pos:position pos:line="351" pos:column="19"/></name> <operator pos:line="351" pos:column="20">=<pos:position pos:line="351" pos:column="21"/></operator> <name><name pos:line="351" pos:column="22">al<pos:position pos:line="351" pos:column="24"/></name><operator pos:line="351" pos:column="24">-&gt;<pos:position pos:line="351" pos:column="29"/></operator><name pos:line="351" pos:column="26">icap<pos:position pos:line="351" pos:column="30"/></name><operator pos:line="351" pos:column="30">.<pos:position pos:line="351" pos:column="31"/></operator><name pos:line="351" pos:column="31">ioTime<pos:position pos:line="351" pos:column="37"/></name></name></expr>;<pos:position pos:line="351" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="352" pos:column="13">doint<pos:position pos:line="352" pos:column="18"/></name> <operator pos:line="352" pos:column="19">=<pos:position pos:line="352" pos:column="20"/></operator> <literal type="number" pos:line="352" pos:column="21">1<pos:position pos:line="352" pos:column="22"/></literal></expr>;<pos:position pos:line="352" pos:column="23"/></expr_stmt>
            <break pos:line="353" pos:column="13">break;<pos:position pos:line="353" pos:column="19"/></break>

        <case pos:line="355" pos:column="9">case <expr><name pos:line="355" pos:column="14">LFT_ICAP_STATUS_CODE<pos:position pos:line="355" pos:column="34"/></name></expr>:<pos:position pos:line="355" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="356" pos:column="13">outint<pos:position pos:line="356" pos:column="19"/></name> <operator pos:line="356" pos:column="20">=<pos:position pos:line="356" pos:column="21"/></operator> <name><name pos:line="356" pos:column="22">al<pos:position pos:line="356" pos:column="24"/></name><operator pos:line="356" pos:column="24">-&gt;<pos:position pos:line="356" pos:column="29"/></operator><name pos:line="356" pos:column="26">icap<pos:position pos:line="356" pos:column="30"/></name><operator pos:line="356" pos:column="30">.<pos:position pos:line="356" pos:column="31"/></operator><name pos:line="356" pos:column="31">resStatus<pos:position pos:line="356" pos:column="40"/></name></name></expr>;<pos:position pos:line="356" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="357" pos:column="13">doint<pos:position pos:line="357" pos:column="18"/></name>  <operator pos:line="357" pos:column="20">=<pos:position pos:line="357" pos:column="21"/></operator> <literal type="number" pos:line="357" pos:column="22">1<pos:position pos:line="357" pos:column="23"/></literal></expr>;<pos:position pos:line="357" pos:column="24"/></expr_stmt>
            <break pos:line="358" pos:column="13">break;<pos:position pos:line="358" pos:column="19"/></break>

        <case pos:line="360" pos:column="9">case <expr><name pos:line="360" pos:column="14">LFT_ICAP_OUTCOME<pos:position pos:line="360" pos:column="30"/></name></expr>:<pos:position pos:line="360" pos:column="31"/></case>
            <expr_stmt><expr><name pos:line="361" pos:column="13">out<pos:position pos:line="361" pos:column="16"/></name> <operator pos:line="361" pos:column="17">=<pos:position pos:line="361" pos:column="18"/></operator> <name><name pos:line="361" pos:column="19">al<pos:position pos:line="361" pos:column="21"/></name><operator pos:line="361" pos:column="21">-&gt;<pos:position pos:line="361" pos:column="26"/></operator><name pos:line="361" pos:column="23">icap<pos:position pos:line="361" pos:column="27"/></name><operator pos:line="361" pos:column="27">.<pos:position pos:line="361" pos:column="28"/></operator><name pos:line="361" pos:column="28">outcome<pos:position pos:line="361" pos:column="35"/></name></name></expr>;<pos:position pos:line="361" pos:column="36"/></expr_stmt>
            <break pos:line="362" pos:column="13">break;<pos:position pos:line="362" pos:column="19"/></break>

        <case pos:line="364" pos:column="9">case <expr><name pos:line="364" pos:column="14">LFT_ICAP_TOTAL_TIME<pos:position pos:line="364" pos:column="33"/></name></expr>:<pos:position pos:line="364" pos:column="34"/></case>
            <expr_stmt><expr><name pos:line="365" pos:column="13">outint<pos:position pos:line="365" pos:column="19"/></name> <operator pos:line="365" pos:column="20">=<pos:position pos:line="365" pos:column="21"/></operator> <name><name pos:line="365" pos:column="22">al<pos:position pos:line="365" pos:column="24"/></name><operator pos:line="365" pos:column="24">-&gt;<pos:position pos:line="365" pos:column="29"/></operator><name pos:line="365" pos:column="26">icap<pos:position pos:line="365" pos:column="30"/></name><operator pos:line="365" pos:column="30">.<pos:position pos:line="365" pos:column="31"/></operator><name pos:line="365" pos:column="31">processingTime<pos:position pos:line="365" pos:column="45"/></name></name></expr>;<pos:position pos:line="365" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="366" pos:column="13">doint<pos:position pos:line="366" pos:column="18"/></name> <operator pos:line="366" pos:column="19">=<pos:position pos:line="366" pos:column="20"/></operator> <literal type="number" pos:line="366" pos:column="21">1<pos:position pos:line="366" pos:column="22"/></literal></expr>;<pos:position pos:line="366" pos:column="23"/></expr_stmt>
            <break pos:line="367" pos:column="13">break;<pos:position pos:line="367" pos:column="19"/></break>
<cpp:endif pos:line="368" pos:column="1">#<cpp:directive pos:line="368" pos:column="2">endif<pos:position pos:line="368" pos:column="7"/></cpp:directive></cpp:endif>
        <case pos:line="369" pos:column="9">case <expr><name pos:line="369" pos:column="14">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="369" pos:column="37"/></name></expr>:<pos:position pos:line="369" pos:column="38"/></case>
            <if pos:line="370" pos:column="13">if <condition pos:line="370" pos:column="16">(<expr><name><name pos:line="370" pos:column="17">al<pos:position pos:line="370" pos:column="19"/></name><operator pos:line="370" pos:column="19">-&gt;<pos:position pos:line="370" pos:column="24"/></operator><name pos:line="370" pos:column="21">request<pos:position pos:line="370" pos:column="28"/></name></name></expr>)<pos:position pos:line="370" pos:column="29"/></condition><then pos:line="370" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="371" pos:column="17">sb<pos:position pos:line="371" pos:column="19"/></name> <operator pos:line="371" pos:column="20">=<pos:position pos:line="371" pos:column="21"/></operator> <call><name><name pos:line="371" pos:column="22">al<pos:position pos:line="371" pos:column="24"/></name><operator pos:line="371" pos:column="24">-&gt;<pos:position pos:line="371" pos:column="29"/></operator><name pos:line="371" pos:column="26">request<pos:position pos:line="371" pos:column="33"/></name><operator pos:line="371" pos:column="33">-&gt;<pos:position pos:line="371" pos:column="38"/></operator><name pos:line="371" pos:column="35">header<pos:position pos:line="371" pos:column="41"/></name><operator pos:line="371" pos:column="41">.<pos:position pos:line="371" pos:column="42"/></operator><name pos:line="371" pos:column="42">getByNameListMember<pos:position pos:line="371" pos:column="61"/></name></name><argument_list pos:line="371" pos:column="61">(<argument><expr><name><name pos:line="371" pos:column="62">fmt<pos:position pos:line="371" pos:column="65"/></name><operator pos:line="371" pos:column="65">-&gt;<pos:position pos:line="371" pos:column="70"/></operator><name pos:line="371" pos:column="67">data<pos:position pos:line="371" pos:column="71"/></name><operator pos:line="371" pos:column="71">.<pos:position pos:line="371" pos:column="72"/></operator><name pos:line="371" pos:column="72">header<pos:position pos:line="371" pos:column="78"/></name><operator pos:line="371" pos:column="78">.<pos:position pos:line="371" pos:column="79"/></operator><name pos:line="371" pos:column="79">header<pos:position pos:line="371" pos:column="85"/></name></name></expr></argument>, <argument><expr><name><name pos:line="371" pos:column="87">fmt<pos:position pos:line="371" pos:column="90"/></name><operator pos:line="371" pos:column="90">-&gt;<pos:position pos:line="371" pos:column="95"/></operator><name pos:line="371" pos:column="92">data<pos:position pos:line="371" pos:column="96"/></name><operator pos:line="371" pos:column="96">.<pos:position pos:line="371" pos:column="97"/></operator><name pos:line="371" pos:column="97">header<pos:position pos:line="371" pos:column="103"/></name><operator pos:line="371" pos:column="103">.<pos:position pos:line="371" pos:column="104"/></operator><name pos:line="371" pos:column="104">element<pos:position pos:line="371" pos:column="111"/></name></name></expr></argument>, <argument><expr><name><name pos:line="371" pos:column="113">fmt<pos:position pos:line="371" pos:column="116"/></name><operator pos:line="371" pos:column="116">-&gt;<pos:position pos:line="371" pos:column="121"/></operator><name pos:line="371" pos:column="118">data<pos:position pos:line="371" pos:column="122"/></name><operator pos:line="371" pos:column="122">.<pos:position pos:line="371" pos:column="123"/></operator><name pos:line="371" pos:column="123">header<pos:position pos:line="371" pos:column="129"/></name><operator pos:line="371" pos:column="129">.<pos:position pos:line="371" pos:column="130"/></operator><name pos:line="371" pos:column="130">separator<pos:position pos:line="371" pos:column="139"/></name></name></expr></argument>)<pos:position pos:line="371" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="141"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="373" pos:column="13">out<pos:position pos:line="373" pos:column="16"/></name> <operator pos:line="373" pos:column="17">=<pos:position pos:line="373" pos:column="18"/></operator> <call><name><name pos:line="373" pos:column="19">sb<pos:position pos:line="373" pos:column="21"/></name><operator pos:line="373" pos:column="21">.<pos:position pos:line="373" pos:column="22"/></operator><name pos:line="373" pos:column="22">termedBuf<pos:position pos:line="373" pos:column="31"/></name></name><argument_list pos:line="373" pos:column="31">()<pos:position pos:line="373" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="375" pos:column="13">quote<pos:position pos:line="375" pos:column="18"/></name> <operator pos:line="375" pos:column="19">=<pos:position pos:line="375" pos:column="20"/></operator> <literal type="number" pos:line="375" pos:column="21">1<pos:position pos:line="375" pos:column="22"/></literal></expr>;<pos:position pos:line="375" pos:column="23"/></expr_stmt>

            <break pos:line="377" pos:column="13">break;<pos:position pos:line="377" pos:column="19"/></break>

        <case pos:line="379" pos:column="9">case <expr><name pos:line="379" pos:column="14">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="379" pos:column="45"/></name></expr>:<pos:position pos:line="379" pos:column="46"/></case>
            <if pos:line="380" pos:column="13">if <condition pos:line="380" pos:column="16">(<expr><name><name pos:line="380" pos:column="17">al<pos:position pos:line="380" pos:column="19"/></name><operator pos:line="380" pos:column="19">-&gt;<pos:position pos:line="380" pos:column="24"/></operator><name pos:line="380" pos:column="21">adapted_request<pos:position pos:line="380" pos:column="36"/></name></name></expr>)<pos:position pos:line="380" pos:column="37"/></condition><then pos:line="380" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="381" pos:column="17">sb<pos:position pos:line="381" pos:column="19"/></name> <operator pos:line="381" pos:column="20">=<pos:position pos:line="381" pos:column="21"/></operator> <call><name><name pos:line="381" pos:column="22">al<pos:position pos:line="381" pos:column="24"/></name><operator pos:line="381" pos:column="24">-&gt;<pos:position pos:line="381" pos:column="29"/></operator><name pos:line="381" pos:column="26">adapted_request<pos:position pos:line="381" pos:column="41"/></name><operator pos:line="381" pos:column="41">-&gt;<pos:position pos:line="381" pos:column="46"/></operator><name pos:line="381" pos:column="43">header<pos:position pos:line="381" pos:column="49"/></name><operator pos:line="381" pos:column="49">.<pos:position pos:line="381" pos:column="50"/></operator><name pos:line="381" pos:column="50">getByNameListMember<pos:position pos:line="381" pos:column="69"/></name></name><argument_list pos:line="381" pos:column="69">(<argument><expr><name><name pos:line="381" pos:column="70">fmt<pos:position pos:line="381" pos:column="73"/></name><operator pos:line="381" pos:column="73">-&gt;<pos:position pos:line="381" pos:column="78"/></operator><name pos:line="381" pos:column="75">data<pos:position pos:line="381" pos:column="79"/></name><operator pos:line="381" pos:column="79">.<pos:position pos:line="381" pos:column="80"/></operator><name pos:line="381" pos:column="80">header<pos:position pos:line="381" pos:column="86"/></name><operator pos:line="381" pos:column="86">.<pos:position pos:line="381" pos:column="87"/></operator><name pos:line="381" pos:column="87">header<pos:position pos:line="381" pos:column="93"/></name></name></expr></argument>, <argument><expr><name><name pos:line="381" pos:column="95">fmt<pos:position pos:line="381" pos:column="98"/></name><operator pos:line="381" pos:column="98">-&gt;<pos:position pos:line="381" pos:column="103"/></operator><name pos:line="381" pos:column="100">data<pos:position pos:line="381" pos:column="104"/></name><operator pos:line="381" pos:column="104">.<pos:position pos:line="381" pos:column="105"/></operator><name pos:line="381" pos:column="105">header<pos:position pos:line="381" pos:column="111"/></name><operator pos:line="381" pos:column="111">.<pos:position pos:line="381" pos:column="112"/></operator><name pos:line="381" pos:column="112">element<pos:position pos:line="381" pos:column="119"/></name></name></expr></argument>, <argument><expr><name><name pos:line="381" pos:column="121">fmt<pos:position pos:line="381" pos:column="124"/></name><operator pos:line="381" pos:column="124">-&gt;<pos:position pos:line="381" pos:column="129"/></operator><name pos:line="381" pos:column="126">data<pos:position pos:line="381" pos:column="130"/></name><operator pos:line="381" pos:column="130">.<pos:position pos:line="381" pos:column="131"/></operator><name pos:line="381" pos:column="131">header<pos:position pos:line="381" pos:column="137"/></name><operator pos:line="381" pos:column="137">.<pos:position pos:line="381" pos:column="138"/></operator><name pos:line="381" pos:column="138">separator<pos:position pos:line="381" pos:column="147"/></name></name></expr></argument>)<pos:position pos:line="381" pos:column="148"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="149"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="383" pos:column="13">out<pos:position pos:line="383" pos:column="16"/></name> <operator pos:line="383" pos:column="17">=<pos:position pos:line="383" pos:column="18"/></operator> <call><name><name pos:line="383" pos:column="19">sb<pos:position pos:line="383" pos:column="21"/></name><operator pos:line="383" pos:column="21">.<pos:position pos:line="383" pos:column="22"/></operator><name pos:line="383" pos:column="22">termedBuf<pos:position pos:line="383" pos:column="31"/></name></name><argument_list pos:line="383" pos:column="31">()<pos:position pos:line="383" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="385" pos:column="13">quote<pos:position pos:line="385" pos:column="18"/></name> <operator pos:line="385" pos:column="19">=<pos:position pos:line="385" pos:column="20"/></operator> <literal type="number" pos:line="385" pos:column="21">1<pos:position pos:line="385" pos:column="22"/></literal></expr>;<pos:position pos:line="385" pos:column="23"/></expr_stmt>

            <break pos:line="387" pos:column="13">break;<pos:position pos:line="387" pos:column="19"/></break>

        <case pos:line="389" pos:column="9">case <expr><name pos:line="389" pos:column="14">LFT_REPLY_HEADER_ELEM<pos:position pos:line="389" pos:column="35"/></name></expr>:<pos:position pos:line="389" pos:column="36"/></case>
            <if pos:line="390" pos:column="13">if <condition pos:line="390" pos:column="16">(<expr><name><name pos:line="390" pos:column="17">al<pos:position pos:line="390" pos:column="19"/></name><operator pos:line="390" pos:column="19">-&gt;<pos:position pos:line="390" pos:column="24"/></operator><name pos:line="390" pos:column="21">reply<pos:position pos:line="390" pos:column="26"/></name></name></expr>)<pos:position pos:line="390" pos:column="27"/></condition><then pos:line="390" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="391" pos:column="17">sb<pos:position pos:line="391" pos:column="19"/></name> <operator pos:line="391" pos:column="20">=<pos:position pos:line="391" pos:column="21"/></operator> <call><name><name pos:line="391" pos:column="22">al<pos:position pos:line="391" pos:column="24"/></name><operator pos:line="391" pos:column="24">-&gt;<pos:position pos:line="391" pos:column="29"/></operator><name pos:line="391" pos:column="26">reply<pos:position pos:line="391" pos:column="31"/></name><operator pos:line="391" pos:column="31">-&gt;<pos:position pos:line="391" pos:column="36"/></operator><name pos:line="391" pos:column="33">header<pos:position pos:line="391" pos:column="39"/></name><operator pos:line="391" pos:column="39">.<pos:position pos:line="391" pos:column="40"/></operator><name pos:line="391" pos:column="40">getByNameListMember<pos:position pos:line="391" pos:column="59"/></name></name><argument_list pos:line="391" pos:column="59">(<argument><expr><name><name pos:line="391" pos:column="60">fmt<pos:position pos:line="391" pos:column="63"/></name><operator pos:line="391" pos:column="63">-&gt;<pos:position pos:line="391" pos:column="68"/></operator><name pos:line="391" pos:column="65">data<pos:position pos:line="391" pos:column="69"/></name><operator pos:line="391" pos:column="69">.<pos:position pos:line="391" pos:column="70"/></operator><name pos:line="391" pos:column="70">header<pos:position pos:line="391" pos:column="76"/></name><operator pos:line="391" pos:column="76">.<pos:position pos:line="391" pos:column="77"/></operator><name pos:line="391" pos:column="77">header<pos:position pos:line="391" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="85">fmt<pos:position pos:line="391" pos:column="88"/></name><operator pos:line="391" pos:column="88">-&gt;<pos:position pos:line="391" pos:column="93"/></operator><name pos:line="391" pos:column="90">data<pos:position pos:line="391" pos:column="94"/></name><operator pos:line="391" pos:column="94">.<pos:position pos:line="391" pos:column="95"/></operator><name pos:line="391" pos:column="95">header<pos:position pos:line="391" pos:column="101"/></name><operator pos:line="391" pos:column="101">.<pos:position pos:line="391" pos:column="102"/></operator><name pos:line="391" pos:column="102">element<pos:position pos:line="391" pos:column="109"/></name></name></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="111">fmt<pos:position pos:line="391" pos:column="114"/></name><operator pos:line="391" pos:column="114">-&gt;<pos:position pos:line="391" pos:column="119"/></operator><name pos:line="391" pos:column="116">data<pos:position pos:line="391" pos:column="120"/></name><operator pos:line="391" pos:column="120">.<pos:position pos:line="391" pos:column="121"/></operator><name pos:line="391" pos:column="121">header<pos:position pos:line="391" pos:column="127"/></name><operator pos:line="391" pos:column="127">.<pos:position pos:line="391" pos:column="128"/></operator><name pos:line="391" pos:column="128">separator<pos:position pos:line="391" pos:column="137"/></name></name></expr></argument>)<pos:position pos:line="391" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="139"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="393" pos:column="13">out<pos:position pos:line="393" pos:column="16"/></name> <operator pos:line="393" pos:column="17">=<pos:position pos:line="393" pos:column="18"/></operator> <call><name><name pos:line="393" pos:column="19">sb<pos:position pos:line="393" pos:column="21"/></name><operator pos:line="393" pos:column="21">.<pos:position pos:line="393" pos:column="22"/></operator><name pos:line="393" pos:column="22">termedBuf<pos:position pos:line="393" pos:column="31"/></name></name><argument_list pos:line="393" pos:column="31">()<pos:position pos:line="393" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="34"/></expr_stmt>

            <expr_stmt><expr><name pos:line="395" pos:column="13">quote<pos:position pos:line="395" pos:column="18"/></name> <operator pos:line="395" pos:column="19">=<pos:position pos:line="395" pos:column="20"/></operator> <literal type="number" pos:line="395" pos:column="21">1<pos:position pos:line="395" pos:column="22"/></literal></expr>;<pos:position pos:line="395" pos:column="23"/></expr_stmt>

            <break pos:line="397" pos:column="13">break;<pos:position pos:line="397" pos:column="19"/></break>

        <case pos:line="399" pos:column="9">case <expr><name pos:line="399" pos:column="14">LFT_REQUEST_ALL_HEADERS<pos:position pos:line="399" pos:column="37"/></name></expr>:<pos:position pos:line="399" pos:column="38"/></case>
            <expr_stmt><expr><name pos:line="400" pos:column="13">out<pos:position pos:line="400" pos:column="16"/></name> <operator pos:line="400" pos:column="17">=<pos:position pos:line="400" pos:column="18"/></operator> <name><name pos:line="400" pos:column="19">al<pos:position pos:line="400" pos:column="21"/></name><operator pos:line="400" pos:column="21">-&gt;<pos:position pos:line="400" pos:column="26"/></operator><name pos:line="400" pos:column="23">headers<pos:position pos:line="400" pos:column="30"/></name><operator pos:line="400" pos:column="30">.<pos:position pos:line="400" pos:column="31"/></operator><name pos:line="400" pos:column="31">request<pos:position pos:line="400" pos:column="38"/></name></name></expr>;<pos:position pos:line="400" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><name pos:line="402" pos:column="13">quote<pos:position pos:line="402" pos:column="18"/></name> <operator pos:line="402" pos:column="19">=<pos:position pos:line="402" pos:column="20"/></operator> <literal type="number" pos:line="402" pos:column="21">1<pos:position pos:line="402" pos:column="22"/></literal></expr>;<pos:position pos:line="402" pos:column="23"/></expr_stmt>

            <break pos:line="404" pos:column="13">break;<pos:position pos:line="404" pos:column="19"/></break>

        <case pos:line="406" pos:column="9">case <expr><name pos:line="406" pos:column="14">LFT_ADAPTED_REQUEST_ALL_HEADERS<pos:position pos:line="406" pos:column="45"/></name></expr>:<pos:position pos:line="406" pos:column="46"/></case>
            <expr_stmt><expr><name pos:line="407" pos:column="13">out<pos:position pos:line="407" pos:column="16"/></name> <operator pos:line="407" pos:column="17">=<pos:position pos:line="407" pos:column="18"/></operator> <name><name pos:line="407" pos:column="19">al<pos:position pos:line="407" pos:column="21"/></name><operator pos:line="407" pos:column="21">-&gt;<pos:position pos:line="407" pos:column="26"/></operator><name pos:line="407" pos:column="23">headers<pos:position pos:line="407" pos:column="30"/></name><operator pos:line="407" pos:column="30">.<pos:position pos:line="407" pos:column="31"/></operator><name pos:line="407" pos:column="31">adapted_request<pos:position pos:line="407" pos:column="46"/></name></name></expr>;<pos:position pos:line="407" pos:column="47"/></expr_stmt>

            <expr_stmt><expr><name pos:line="409" pos:column="13">quote<pos:position pos:line="409" pos:column="18"/></name> <operator pos:line="409" pos:column="19">=<pos:position pos:line="409" pos:column="20"/></operator> <literal type="number" pos:line="409" pos:column="21">1<pos:position pos:line="409" pos:column="22"/></literal></expr>;<pos:position pos:line="409" pos:column="23"/></expr_stmt>

            <break pos:line="411" pos:column="13">break;<pos:position pos:line="411" pos:column="19"/></break>

        <case pos:line="413" pos:column="9">case <expr><name pos:line="413" pos:column="14">LFT_REPLY_ALL_HEADERS<pos:position pos:line="413" pos:column="35"/></name></expr>:<pos:position pos:line="413" pos:column="36"/></case>
            <expr_stmt><expr><name pos:line="414" pos:column="13">out<pos:position pos:line="414" pos:column="16"/></name> <operator pos:line="414" pos:column="17">=<pos:position pos:line="414" pos:column="18"/></operator> <name><name pos:line="414" pos:column="19">al<pos:position pos:line="414" pos:column="21"/></name><operator pos:line="414" pos:column="21">-&gt;<pos:position pos:line="414" pos:column="26"/></operator><name pos:line="414" pos:column="23">headers<pos:position pos:line="414" pos:column="30"/></name><operator pos:line="414" pos:column="30">.<pos:position pos:line="414" pos:column="31"/></operator><name pos:line="414" pos:column="31">reply<pos:position pos:line="414" pos:column="36"/></name></name></expr>;<pos:position pos:line="414" pos:column="37"/></expr_stmt>

            <expr_stmt><expr><name pos:line="416" pos:column="13">quote<pos:position pos:line="416" pos:column="18"/></name> <operator pos:line="416" pos:column="19">=<pos:position pos:line="416" pos:column="20"/></operator> <literal type="number" pos:line="416" pos:column="21">1<pos:position pos:line="416" pos:column="22"/></literal></expr>;<pos:position pos:line="416" pos:column="23"/></expr_stmt>

            <break pos:line="418" pos:column="13">break;<pos:position pos:line="418" pos:column="19"/></break>

        <case pos:line="420" pos:column="9">case <expr><name pos:line="420" pos:column="14">LFT_USER_NAME<pos:position pos:line="420" pos:column="27"/></name></expr>:<pos:position pos:line="420" pos:column="28"/></case>
            <expr_stmt><expr><name pos:line="421" pos:column="13">out<pos:position pos:line="421" pos:column="16"/></name> <operator pos:line="421" pos:column="17">=<pos:position pos:line="421" pos:column="18"/></operator> <call><name pos:line="421" pos:column="19">accessLogFormatName<pos:position pos:line="421" pos:column="38"/></name><argument_list pos:line="421" pos:column="38">(<argument><expr><name><name pos:line="421" pos:column="39">al<pos:position pos:line="421" pos:column="41"/></name><operator pos:line="421" pos:column="41">-&gt;<pos:position pos:line="421" pos:column="46"/></operator><name pos:line="421" pos:column="43">cache<pos:position pos:line="421" pos:column="48"/></name><operator pos:line="421" pos:column="48">.<pos:position pos:line="421" pos:column="49"/></operator><name pos:line="421" pos:column="49">authuser<pos:position pos:line="421" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="421" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="59"/></expr_stmt>

            <if pos:line="423" pos:column="13">if <condition pos:line="423" pos:column="16">(<expr><operator pos:line="423" pos:column="17">!<pos:position pos:line="423" pos:column="18"/></operator><name pos:line="423" pos:column="18">out<pos:position pos:line="423" pos:column="21"/></name></expr>)<pos:position pos:line="423" pos:column="22"/></condition><then pos:line="423" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="424" pos:column="17">out<pos:position pos:line="424" pos:column="20"/></name> <operator pos:line="424" pos:column="21">=<pos:position pos:line="424" pos:column="22"/></operator> <call><name pos:line="424" pos:column="23">accessLogFormatName<pos:position pos:line="424" pos:column="42"/></name><argument_list pos:line="424" pos:column="42">(<argument><expr><name><name pos:line="424" pos:column="43">al<pos:position pos:line="424" pos:column="45"/></name><operator pos:line="424" pos:column="45">-&gt;<pos:position pos:line="424" pos:column="50"/></operator><name pos:line="424" pos:column="47">cache<pos:position pos:line="424" pos:column="52"/></name><operator pos:line="424" pos:column="52">.<pos:position pos:line="424" pos:column="53"/></operator><name pos:line="424" pos:column="53">extuser<pos:position pos:line="424" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="424" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="62"/></expr_stmt></block></then></if>

<cpp:if pos:line="426" pos:column="1">#<cpp:directive pos:line="426" pos:column="2">if<pos:position pos:line="426" pos:column="4"/></cpp:directive> <expr><name pos:line="426" pos:column="5">USE_SSL<pos:position pos:line="426" pos:column="12"/></name></expr></cpp:if>

            <if pos:line="428" pos:column="13">if <condition pos:line="428" pos:column="16">(<expr><operator pos:line="428" pos:column="17">!<pos:position pos:line="428" pos:column="18"/></operator><name pos:line="428" pos:column="18">out<pos:position pos:line="428" pos:column="21"/></name></expr>)<pos:position pos:line="428" pos:column="22"/></condition><then pos:line="428" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="429" pos:column="17">out<pos:position pos:line="429" pos:column="20"/></name> <operator pos:line="429" pos:column="21">=<pos:position pos:line="429" pos:column="22"/></operator> <call><name pos:line="429" pos:column="23">accessLogFormatName<pos:position pos:line="429" pos:column="42"/></name><argument_list pos:line="429" pos:column="42">(<argument><expr><name><name pos:line="429" pos:column="43">al<pos:position pos:line="429" pos:column="45"/></name><operator pos:line="429" pos:column="45">-&gt;<pos:position pos:line="429" pos:column="50"/></operator><name pos:line="429" pos:column="47">cache<pos:position pos:line="429" pos:column="52"/></name><operator pos:line="429" pos:column="52">.<pos:position pos:line="429" pos:column="53"/></operator><name pos:line="429" pos:column="53">ssluser<pos:position pos:line="429" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="429" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="62"/></expr_stmt></block></then></if>

<cpp:endif pos:line="431" pos:column="1">#<cpp:directive pos:line="431" pos:column="2">endif<pos:position pos:line="431" pos:column="7"/></cpp:directive></cpp:endif>

            <if pos:line="433" pos:column="13">if <condition pos:line="433" pos:column="16">(<expr><operator pos:line="433" pos:column="17">!<pos:position pos:line="433" pos:column="18"/></operator><name pos:line="433" pos:column="18">out<pos:position pos:line="433" pos:column="21"/></name></expr>)<pos:position pos:line="433" pos:column="22"/></condition><then pos:line="433" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="434" pos:column="17">out<pos:position pos:line="434" pos:column="20"/></name> <operator pos:line="434" pos:column="21">=<pos:position pos:line="434" pos:column="22"/></operator> <call><name pos:line="434" pos:column="23">accessLogFormatName<pos:position pos:line="434" pos:column="42"/></name><argument_list pos:line="434" pos:column="42">(<argument><expr><name><name pos:line="434" pos:column="43">al<pos:position pos:line="434" pos:column="45"/></name><operator pos:line="434" pos:column="45">-&gt;<pos:position pos:line="434" pos:column="50"/></operator><name pos:line="434" pos:column="47">cache<pos:position pos:line="434" pos:column="52"/></name><operator pos:line="434" pos:column="52">.<pos:position pos:line="434" pos:column="53"/></operator><name pos:line="434" pos:column="53">rfc931<pos:position pos:line="434" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="434" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="61"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="436" pos:column="13">dofree<pos:position pos:line="436" pos:column="19"/></name> <operator pos:line="436" pos:column="20">=<pos:position pos:line="436" pos:column="21"/></operator> <literal type="number" pos:line="436" pos:column="22">1<pos:position pos:line="436" pos:column="23"/></literal></expr>;<pos:position pos:line="436" pos:column="24"/></expr_stmt>

            <break pos:line="438" pos:column="13">break;<pos:position pos:line="438" pos:column="19"/></break>

        <case pos:line="440" pos:column="9">case <expr><name pos:line="440" pos:column="14">LFT_USER_LOGIN<pos:position pos:line="440" pos:column="28"/></name></expr>:<pos:position pos:line="440" pos:column="29"/></case>
            <expr_stmt><expr><name pos:line="441" pos:column="13">out<pos:position pos:line="441" pos:column="16"/></name> <operator pos:line="441" pos:column="17">=<pos:position pos:line="441" pos:column="18"/></operator> <call><name pos:line="441" pos:column="19">accessLogFormatName<pos:position pos:line="441" pos:column="38"/></name><argument_list pos:line="441" pos:column="38">(<argument><expr><name><name pos:line="441" pos:column="39">al<pos:position pos:line="441" pos:column="41"/></name><operator pos:line="441" pos:column="41">-&gt;<pos:position pos:line="441" pos:column="46"/></operator><name pos:line="441" pos:column="43">cache<pos:position pos:line="441" pos:column="48"/></name><operator pos:line="441" pos:column="48">.<pos:position pos:line="441" pos:column="49"/></operator><name pos:line="441" pos:column="49">authuser<pos:position pos:line="441" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="441" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="59"/></expr_stmt>

            <expr_stmt><expr><name pos:line="443" pos:column="13">dofree<pos:position pos:line="443" pos:column="19"/></name> <operator pos:line="443" pos:column="20">=<pos:position pos:line="443" pos:column="21"/></operator> <literal type="number" pos:line="443" pos:column="22">1<pos:position pos:line="443" pos:column="23"/></literal></expr>;<pos:position pos:line="443" pos:column="24"/></expr_stmt>

            <break pos:line="445" pos:column="13">break;<pos:position pos:line="445" pos:column="19"/></break>

        <case pos:line="447" pos:column="9">case <expr><name pos:line="447" pos:column="14">LFT_USER_IDENT<pos:position pos:line="447" pos:column="28"/></name></expr>:<pos:position pos:line="447" pos:column="29"/></case>
            <expr_stmt><expr><name pos:line="448" pos:column="13">out<pos:position pos:line="448" pos:column="16"/></name> <operator pos:line="448" pos:column="17">=<pos:position pos:line="448" pos:column="18"/></operator> <call><name pos:line="448" pos:column="19">accessLogFormatName<pos:position pos:line="448" pos:column="38"/></name><argument_list pos:line="448" pos:column="38">(<argument><expr><name><name pos:line="448" pos:column="39">al<pos:position pos:line="448" pos:column="41"/></name><operator pos:line="448" pos:column="41">-&gt;<pos:position pos:line="448" pos:column="46"/></operator><name pos:line="448" pos:column="43">cache<pos:position pos:line="448" pos:column="48"/></name><operator pos:line="448" pos:column="48">.<pos:position pos:line="448" pos:column="49"/></operator><name pos:line="448" pos:column="49">rfc931<pos:position pos:line="448" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="448" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="57"/></expr_stmt>

            <expr_stmt><expr><name pos:line="450" pos:column="13">dofree<pos:position pos:line="450" pos:column="19"/></name> <operator pos:line="450" pos:column="20">=<pos:position pos:line="450" pos:column="21"/></operator> <literal type="number" pos:line="450" pos:column="22">1<pos:position pos:line="450" pos:column="23"/></literal></expr>;<pos:position pos:line="450" pos:column="24"/></expr_stmt>

            <break pos:line="452" pos:column="13">break;<pos:position pos:line="452" pos:column="19"/></break>

        <case pos:line="454" pos:column="9">case <expr><name pos:line="454" pos:column="14">LFT_USER_EXTERNAL<pos:position pos:line="454" pos:column="31"/></name></expr>:<pos:position pos:line="454" pos:column="32"/></case>
            <expr_stmt><expr><name pos:line="455" pos:column="13">out<pos:position pos:line="455" pos:column="16"/></name> <operator pos:line="455" pos:column="17">=<pos:position pos:line="455" pos:column="18"/></operator> <call><name pos:line="455" pos:column="19">accessLogFormatName<pos:position pos:line="455" pos:column="38"/></name><argument_list pos:line="455" pos:column="38">(<argument><expr><name><name pos:line="455" pos:column="39">al<pos:position pos:line="455" pos:column="41"/></name><operator pos:line="455" pos:column="41">-&gt;<pos:position pos:line="455" pos:column="46"/></operator><name pos:line="455" pos:column="43">cache<pos:position pos:line="455" pos:column="48"/></name><operator pos:line="455" pos:column="48">.<pos:position pos:line="455" pos:column="49"/></operator><name pos:line="455" pos:column="49">extuser<pos:position pos:line="455" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="455" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="58"/></expr_stmt>

            <expr_stmt><expr><name pos:line="457" pos:column="13">dofree<pos:position pos:line="457" pos:column="19"/></name> <operator pos:line="457" pos:column="20">=<pos:position pos:line="457" pos:column="21"/></operator> <literal type="number" pos:line="457" pos:column="22">1<pos:position pos:line="457" pos:column="23"/></literal></expr>;<pos:position pos:line="457" pos:column="24"/></expr_stmt>

            <break pos:line="459" pos:column="13">break;<pos:position pos:line="459" pos:column="19"/></break>

            <comment type="block" pos:line="461" pos:column="13">/* case LFT_USER_REALM: */</comment>
            <comment type="block" pos:line="462" pos:column="13">/* case LFT_USER_SCHEME: */</comment>

            <comment type="line" pos:line="464" pos:column="13">// the fmt-&gt;type can not be LFT_HTTP_SENT_STATUS_CODE_OLD_30</comment>
            <comment type="line" pos:line="465" pos:column="13">// but compiler complains if ommited</comment>
        <case pos:line="466" pos:column="9">case <expr><name pos:line="466" pos:column="14">LFT_HTTP_SENT_STATUS_CODE_OLD_30<pos:position pos:line="466" pos:column="46"/></name></expr>:<pos:position pos:line="466" pos:column="47"/></case>
        <case pos:line="467" pos:column="9">case <expr><name pos:line="467" pos:column="14">LFT_HTTP_SENT_STATUS_CODE<pos:position pos:line="467" pos:column="39"/></name></expr>:<pos:position pos:line="467" pos:column="40"/></case>
            <expr_stmt><expr><name pos:line="468" pos:column="13">outint<pos:position pos:line="468" pos:column="19"/></name> <operator pos:line="468" pos:column="20">=<pos:position pos:line="468" pos:column="21"/></operator> <name><name pos:line="468" pos:column="22">al<pos:position pos:line="468" pos:column="24"/></name><operator pos:line="468" pos:column="24">-&gt;<pos:position pos:line="468" pos:column="29"/></operator><name pos:line="468" pos:column="26">http<pos:position pos:line="468" pos:column="30"/></name><operator pos:line="468" pos:column="30">.<pos:position pos:line="468" pos:column="31"/></operator><name pos:line="468" pos:column="31">code<pos:position pos:line="468" pos:column="35"/></name></name></expr>;<pos:position pos:line="468" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><name pos:line="470" pos:column="13">doint<pos:position pos:line="470" pos:column="18"/></name> <operator pos:line="470" pos:column="19">=<pos:position pos:line="470" pos:column="20"/></operator> <literal type="number" pos:line="470" pos:column="21">1<pos:position pos:line="470" pos:column="22"/></literal></expr>;<pos:position pos:line="470" pos:column="23"/></expr_stmt>

            <break pos:line="472" pos:column="13">break;<pos:position pos:line="472" pos:column="19"/></break>

        <case pos:line="474" pos:column="9">case <expr><name pos:line="474" pos:column="14">LFT_HTTP_RECEIVED_STATUS_CODE<pos:position pos:line="474" pos:column="43"/></name></expr>:<pos:position pos:line="474" pos:column="44"/></case>
            <if pos:line="475" pos:column="13">if <condition pos:line="475" pos:column="16">(<expr><name><name pos:line="475" pos:column="17">al<pos:position pos:line="475" pos:column="19"/></name><operator pos:line="475" pos:column="19">-&gt;<pos:position pos:line="475" pos:column="24"/></operator><name pos:line="475" pos:column="21">hier<pos:position pos:line="475" pos:column="25"/></name><operator pos:line="475" pos:column="25">.<pos:position pos:line="475" pos:column="26"/></operator><name pos:line="475" pos:column="26">peer_reply_status<pos:position pos:line="475" pos:column="43"/></name></name> <operator pos:line="475" pos:column="44">==<pos:position pos:line="475" pos:column="46"/></operator> <name pos:line="475" pos:column="47">HTTP_STATUS_NONE<pos:position pos:line="475" pos:column="63"/></name></expr>)<pos:position pos:line="475" pos:column="64"/></condition><then pos:line="475" pos:column="64"> <block pos:line="475" pos:column="65">{
                <expr_stmt><expr><name pos:line="476" pos:column="17">out<pos:position pos:line="476" pos:column="20"/></name> <operator pos:line="476" pos:column="21">=<pos:position pos:line="476" pos:column="22"/></operator> <literal type="string" pos:line="476" pos:column="23">"-"<pos:position pos:line="476" pos:column="26"/></literal></expr>;<pos:position pos:line="476" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="477" pos:column="14"/></block></then> <else pos:line="477" pos:column="15">else <block pos:line="477" pos:column="20">{
                <expr_stmt><expr><name pos:line="478" pos:column="17">outint<pos:position pos:line="478" pos:column="23"/></name> <operator pos:line="478" pos:column="24">=<pos:position pos:line="478" pos:column="25"/></operator> <name><name pos:line="478" pos:column="26">al<pos:position pos:line="478" pos:column="28"/></name><operator pos:line="478" pos:column="28">-&gt;<pos:position pos:line="478" pos:column="33"/></operator><name pos:line="478" pos:column="30">hier<pos:position pos:line="478" pos:column="34"/></name><operator pos:line="478" pos:column="34">.<pos:position pos:line="478" pos:column="35"/></operator><name pos:line="478" pos:column="35">peer_reply_status<pos:position pos:line="478" pos:column="52"/></name></name></expr>;<pos:position pos:line="478" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name pos:line="479" pos:column="17">doint<pos:position pos:line="479" pos:column="22"/></name> <operator pos:line="479" pos:column="23">=<pos:position pos:line="479" pos:column="24"/></operator> <literal type="number" pos:line="479" pos:column="25">1<pos:position pos:line="479" pos:column="26"/></literal></expr>;<pos:position pos:line="479" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="480" pos:column="14"/></block></else></if>
            <break pos:line="481" pos:column="13">break;<pos:position pos:line="481" pos:column="19"/></break>
            <comment type="block" pos:line="482" pos:column="13">/* case LFT_HTTP_STATUS:
             *           out = statusline-&gt;text;
             *     quote = 1;
             *     break;
             */</comment>

        <case pos:line="488" pos:column="9">case <expr><name pos:line="488" pos:column="14">LFT_SQUID_STATUS<pos:position pos:line="488" pos:column="30"/></name></expr>:<pos:position pos:line="488" pos:column="31"/></case>
            <expr_stmt><expr><name pos:line="489" pos:column="13">out<pos:position pos:line="489" pos:column="16"/></name> <operator pos:line="489" pos:column="17">=<pos:position pos:line="489" pos:column="18"/></operator> <name><name pos:line="489" pos:column="19">log_tags<pos:position pos:line="489" pos:column="27"/></name><index pos:line="489" pos:column="27">[<expr><name><name pos:line="489" pos:column="28">al<pos:position pos:line="489" pos:column="30"/></name><operator pos:line="489" pos:column="30">-&gt;<pos:position pos:line="489" pos:column="35"/></operator><name pos:line="489" pos:column="32">cache<pos:position pos:line="489" pos:column="37"/></name><operator pos:line="489" pos:column="37">.<pos:position pos:line="489" pos:column="38"/></operator><name pos:line="489" pos:column="38">code<pos:position pos:line="489" pos:column="42"/></name></name></expr>]<pos:position pos:line="489" pos:column="43"/></index></name></expr>;<pos:position pos:line="489" pos:column="44"/></expr_stmt>

            <break pos:line="491" pos:column="13">break;<pos:position pos:line="491" pos:column="19"/></break>

            <comment type="block" pos:line="493" pos:column="13">/* case LFT_SQUID_ERROR: */</comment>

        <case pos:line="495" pos:column="9">case <expr><name pos:line="495" pos:column="14">LFT_SQUID_HIERARCHY<pos:position pos:line="495" pos:column="33"/></name></expr>:<pos:position pos:line="495" pos:column="34"/></case>
            <if pos:line="496" pos:column="13">if <condition pos:line="496" pos:column="16">(<expr><name><name pos:line="496" pos:column="17">al<pos:position pos:line="496" pos:column="19"/></name><operator pos:line="496" pos:column="19">-&gt;<pos:position pos:line="496" pos:column="24"/></operator><name pos:line="496" pos:column="21">hier<pos:position pos:line="496" pos:column="25"/></name><operator pos:line="496" pos:column="25">.<pos:position pos:line="496" pos:column="26"/></operator><name pos:line="496" pos:column="26">ping<pos:position pos:line="496" pos:column="30"/></name><operator pos:line="496" pos:column="30">.<pos:position pos:line="496" pos:column="31"/></operator><name pos:line="496" pos:column="31">timedout<pos:position pos:line="496" pos:column="39"/></name></name></expr>)<pos:position pos:line="496" pos:column="40"/></condition><then pos:line="496" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="497" pos:column="17">mb<pos:position pos:line="497" pos:column="19"/></name><operator pos:line="497" pos:column="19">.<pos:position pos:line="497" pos:column="20"/></operator><name pos:line="497" pos:column="20">append<pos:position pos:line="497" pos:column="26"/></name></name><argument_list pos:line="497" pos:column="26">(<argument><expr><literal type="string" pos:line="497" pos:column="27">"TIMEOUT_"<pos:position pos:line="497" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="497" pos:column="39">8<pos:position pos:line="497" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="497" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="497" pos:column="42"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="499" pos:column="13">out<pos:position pos:line="499" pos:column="16"/></name> <operator pos:line="499" pos:column="17">=<pos:position pos:line="499" pos:column="18"/></operator> <name><name pos:line="499" pos:column="19">hier_strings<pos:position pos:line="499" pos:column="31"/></name><index pos:line="499" pos:column="31">[<expr><name><name pos:line="499" pos:column="32">al<pos:position pos:line="499" pos:column="34"/></name><operator pos:line="499" pos:column="34">-&gt;<pos:position pos:line="499" pos:column="39"/></operator><name pos:line="499" pos:column="36">hier<pos:position pos:line="499" pos:column="40"/></name><operator pos:line="499" pos:column="40">.<pos:position pos:line="499" pos:column="41"/></operator><name pos:line="499" pos:column="41">code<pos:position pos:line="499" pos:column="45"/></name></name></expr>]<pos:position pos:line="499" pos:column="46"/></index></name></expr>;<pos:position pos:line="499" pos:column="47"/></expr_stmt>

            <break pos:line="501" pos:column="13">break;<pos:position pos:line="501" pos:column="19"/></break>

        <case pos:line="503" pos:column="9">case <expr><name pos:line="503" pos:column="14">LFT_MIME_TYPE<pos:position pos:line="503" pos:column="27"/></name></expr>:<pos:position pos:line="503" pos:column="28"/></case>
            <expr_stmt><expr><name pos:line="504" pos:column="13">out<pos:position pos:line="504" pos:column="16"/></name> <operator pos:line="504" pos:column="17">=<pos:position pos:line="504" pos:column="18"/></operator> <name><name pos:line="504" pos:column="19">al<pos:position pos:line="504" pos:column="21"/></name><operator pos:line="504" pos:column="21">-&gt;<pos:position pos:line="504" pos:column="26"/></operator><name pos:line="504" pos:column="23">http<pos:position pos:line="504" pos:column="27"/></name><operator pos:line="504" pos:column="27">.<pos:position pos:line="504" pos:column="28"/></operator><name pos:line="504" pos:column="28">content_type<pos:position pos:line="504" pos:column="40"/></name></name></expr>;<pos:position pos:line="504" pos:column="41"/></expr_stmt>

            <break pos:line="506" pos:column="13">break;<pos:position pos:line="506" pos:column="19"/></break>

        <case pos:line="508" pos:column="9">case <expr><name pos:line="508" pos:column="14">LFT_REQUEST_METHOD<pos:position pos:line="508" pos:column="32"/></name></expr>:<pos:position pos:line="508" pos:column="33"/></case>
            <expr_stmt><expr><name pos:line="509" pos:column="13">out<pos:position pos:line="509" pos:column="16"/></name> <operator pos:line="509" pos:column="17">=<pos:position pos:line="509" pos:column="18"/></operator> <name><name pos:line="509" pos:column="19">al<pos:position pos:line="509" pos:column="21"/></name><operator pos:line="509" pos:column="21">-&gt;<pos:position pos:line="509" pos:column="26"/></operator><name pos:line="509" pos:column="23">_private<pos:position pos:line="509" pos:column="31"/></name><operator pos:line="509" pos:column="31">.<pos:position pos:line="509" pos:column="32"/></operator><name pos:line="509" pos:column="32">method_str<pos:position pos:line="509" pos:column="42"/></name></name></expr>;<pos:position pos:line="509" pos:column="43"/></expr_stmt>

            <break pos:line="511" pos:column="13">break;<pos:position pos:line="511" pos:column="19"/></break>

        <case pos:line="513" pos:column="9">case <expr><name pos:line="513" pos:column="14">LFT_REQUEST_URI<pos:position pos:line="513" pos:column="29"/></name></expr>:<pos:position pos:line="513" pos:column="30"/></case>
            <expr_stmt><expr><name pos:line="514" pos:column="13">out<pos:position pos:line="514" pos:column="16"/></name> <operator pos:line="514" pos:column="17">=<pos:position pos:line="514" pos:column="18"/></operator> <name><name pos:line="514" pos:column="19">al<pos:position pos:line="514" pos:column="21"/></name><operator pos:line="514" pos:column="21">-&gt;<pos:position pos:line="514" pos:column="26"/></operator><name pos:line="514" pos:column="23">url<pos:position pos:line="514" pos:column="26"/></name></name></expr>;<pos:position pos:line="514" pos:column="27"/></expr_stmt>

            <break pos:line="516" pos:column="13">break;<pos:position pos:line="516" pos:column="19"/></break>

        <case pos:line="518" pos:column="9">case <expr><name pos:line="518" pos:column="14">LFT_REQUEST_URLPATH<pos:position pos:line="518" pos:column="33"/></name></expr>:<pos:position pos:line="518" pos:column="34"/></case>
            <if pos:line="519" pos:column="13">if <condition pos:line="519" pos:column="16">(<expr><name><name pos:line="519" pos:column="17">al<pos:position pos:line="519" pos:column="19"/></name><operator pos:line="519" pos:column="19">-&gt;<pos:position pos:line="519" pos:column="24"/></operator><name pos:line="519" pos:column="21">request<pos:position pos:line="519" pos:column="28"/></name></name></expr>)<pos:position pos:line="519" pos:column="29"/></condition><then pos:line="519" pos:column="29"> <block pos:line="519" pos:column="30">{
                <expr_stmt><expr><name pos:line="520" pos:column="17">out<pos:position pos:line="520" pos:column="20"/></name> <operator pos:line="520" pos:column="21">=<pos:position pos:line="520" pos:column="22"/></operator> <call><name><name pos:line="520" pos:column="23">al<pos:position pos:line="520" pos:column="25"/></name><operator pos:line="520" pos:column="25">-&gt;<pos:position pos:line="520" pos:column="30"/></operator><name pos:line="520" pos:column="27">request<pos:position pos:line="520" pos:column="34"/></name><operator pos:line="520" pos:column="34">-&gt;<pos:position pos:line="520" pos:column="39"/></operator><name pos:line="520" pos:column="36">urlpath<pos:position pos:line="520" pos:column="43"/></name><operator pos:line="520" pos:column="43">.<pos:position pos:line="520" pos:column="44"/></operator><name pos:line="520" pos:column="44">termedBuf<pos:position pos:line="520" pos:column="53"/></name></name><argument_list pos:line="520" pos:column="53">()<pos:position pos:line="520" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name pos:line="521" pos:column="17">quote<pos:position pos:line="521" pos:column="22"/></name> <operator pos:line="521" pos:column="23">=<pos:position pos:line="521" pos:column="24"/></operator> <literal type="number" pos:line="521" pos:column="25">1<pos:position pos:line="521" pos:column="26"/></literal></expr>;<pos:position pos:line="521" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="522" pos:column="14"/></block></then></if>
            <break pos:line="523" pos:column="13">break;<pos:position pos:line="523" pos:column="19"/></break>

        <case pos:line="525" pos:column="9">case <expr><name pos:line="525" pos:column="14">LFT_REQUEST_VERSION<pos:position pos:line="525" pos:column="33"/></name></expr>:<pos:position pos:line="525" pos:column="34"/></case>
            <expr_stmt><expr><call><name pos:line="526" pos:column="13">snprintf<pos:position pos:line="526" pos:column="21"/></name><argument_list pos:line="526" pos:column="21">(<argument><expr><name pos:line="526" pos:column="22">tmp<pos:position pos:line="526" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="526" pos:column="27">sizeof<argument_list pos:line="526" pos:column="33">(<argument><expr><name pos:line="526" pos:column="34">tmp<pos:position pos:line="526" pos:column="37"/></name></expr></argument>)<pos:position pos:line="526" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="526" pos:column="40">"%d.%d"<pos:position pos:line="526" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="526" pos:column="49">(<pos:position pos:line="526" pos:column="50"/></operator><name pos:line="526" pos:column="50">int<pos:position pos:line="526" pos:column="53"/></name><operator pos:line="526" pos:column="53">)<pos:position pos:line="526" pos:column="54"/></operator> <name><name pos:line="526" pos:column="55">al<pos:position pos:line="526" pos:column="57"/></name><operator pos:line="526" pos:column="57">-&gt;<pos:position pos:line="526" pos:column="62"/></operator><name pos:line="526" pos:column="59">http<pos:position pos:line="526" pos:column="63"/></name><operator pos:line="526" pos:column="63">.<pos:position pos:line="526" pos:column="64"/></operator><name pos:line="526" pos:column="64">version<pos:position pos:line="526" pos:column="71"/></name><operator pos:line="526" pos:column="71">.<pos:position pos:line="526" pos:column="72"/></operator><name pos:line="526" pos:column="72">major<pos:position pos:line="526" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="526" pos:column="79">(<pos:position pos:line="526" pos:column="80"/></operator><name pos:line="526" pos:column="80">int<pos:position pos:line="526" pos:column="83"/></name><operator pos:line="526" pos:column="83">)<pos:position pos:line="526" pos:column="84"/></operator> <name><name pos:line="526" pos:column="85">al<pos:position pos:line="526" pos:column="87"/></name><operator pos:line="526" pos:column="87">-&gt;<pos:position pos:line="526" pos:column="92"/></operator><name pos:line="526" pos:column="89">http<pos:position pos:line="526" pos:column="93"/></name><operator pos:line="526" pos:column="93">.<pos:position pos:line="526" pos:column="94"/></operator><name pos:line="526" pos:column="94">version<pos:position pos:line="526" pos:column="101"/></name><operator pos:line="526" pos:column="101">.<pos:position pos:line="526" pos:column="102"/></operator><name pos:line="526" pos:column="102">minor<pos:position pos:line="526" pos:column="107"/></name></name></expr></argument>)<pos:position pos:line="526" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="109"/></expr_stmt>
            <expr_stmt><expr><name pos:line="527" pos:column="13">out<pos:position pos:line="527" pos:column="16"/></name> <operator pos:line="527" pos:column="17">=<pos:position pos:line="527" pos:column="18"/></operator> <name pos:line="527" pos:column="19">tmp<pos:position pos:line="527" pos:column="22"/></name></expr>;<pos:position pos:line="527" pos:column="23"/></expr_stmt>
            <break pos:line="528" pos:column="13">break;<pos:position pos:line="528" pos:column="19"/></break>

        <case pos:line="530" pos:column="9">case <expr><name pos:line="530" pos:column="14">LFT_REQUEST_SIZE_TOTAL<pos:position pos:line="530" pos:column="36"/></name></expr>:<pos:position pos:line="530" pos:column="37"/></case>
            <expr_stmt><expr><name pos:line="531" pos:column="13">outoff<pos:position pos:line="531" pos:column="19"/></name> <operator pos:line="531" pos:column="20">=<pos:position pos:line="531" pos:column="21"/></operator> <name><name pos:line="531" pos:column="22">al<pos:position pos:line="531" pos:column="24"/></name><operator pos:line="531" pos:column="24">-&gt;<pos:position pos:line="531" pos:column="29"/></operator><name pos:line="531" pos:column="26">cache<pos:position pos:line="531" pos:column="31"/></name><operator pos:line="531" pos:column="31">.<pos:position pos:line="531" pos:column="32"/></operator><name pos:line="531" pos:column="32">requestSize<pos:position pos:line="531" pos:column="43"/></name></name></expr>;<pos:position pos:line="531" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="532" pos:column="13">dooff<pos:position pos:line="532" pos:column="18"/></name> <operator pos:line="532" pos:column="19">=<pos:position pos:line="532" pos:column="20"/></operator> <literal type="number" pos:line="532" pos:column="21">1<pos:position pos:line="532" pos:column="22"/></literal></expr>;<pos:position pos:line="532" pos:column="23"/></expr_stmt>
            <break pos:line="533" pos:column="13">break;<pos:position pos:line="533" pos:column="19"/></break>

            <comment type="block" pos:line="535" pos:column="13">/*case LFT_REQUEST_SIZE_LINE: */</comment>
        <case pos:line="536" pos:column="9">case <expr><name pos:line="536" pos:column="14">LFT_REQUEST_SIZE_HEADERS<pos:position pos:line="536" pos:column="38"/></name></expr>:<pos:position pos:line="536" pos:column="39"/></case>
            <expr_stmt><expr><name pos:line="537" pos:column="13">outoff<pos:position pos:line="537" pos:column="19"/></name> <operator pos:line="537" pos:column="20">=<pos:position pos:line="537" pos:column="21"/></operator> <name><name pos:line="537" pos:column="22">al<pos:position pos:line="537" pos:column="24"/></name><operator pos:line="537" pos:column="24">-&gt;<pos:position pos:line="537" pos:column="29"/></operator><name pos:line="537" pos:column="26">cache<pos:position pos:line="537" pos:column="31"/></name><operator pos:line="537" pos:column="31">.<pos:position pos:line="537" pos:column="32"/></operator><name pos:line="537" pos:column="32">requestHeadersSize<pos:position pos:line="537" pos:column="50"/></name></name></expr>;<pos:position pos:line="537" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="538" pos:column="13">dooff<pos:position pos:line="538" pos:column="18"/></name> <operator pos:line="538" pos:column="19">=<pos:position pos:line="538" pos:column="20"/></operator><literal type="number" pos:line="538" pos:column="20">1<pos:position pos:line="538" pos:column="21"/></literal></expr>;<pos:position pos:line="538" pos:column="22"/></expr_stmt>
            <break pos:line="539" pos:column="13">break;<pos:position pos:line="539" pos:column="19"/></break>
            <comment type="block" pos:line="540" pos:column="13">/*case LFT_REQUEST_SIZE_BODY: */</comment>
            <comment type="block" pos:line="541" pos:column="13">/*case LFT_REQUEST_SIZE_BODY_NO_TE: */</comment>

        <case pos:line="543" pos:column="9">case <expr><name pos:line="543" pos:column="14">LFT_REPLY_SIZE_TOTAL<pos:position pos:line="543" pos:column="34"/></name></expr>:<pos:position pos:line="543" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="544" pos:column="13">outoff<pos:position pos:line="544" pos:column="19"/></name> <operator pos:line="544" pos:column="20">=<pos:position pos:line="544" pos:column="21"/></operator> <name><name pos:line="544" pos:column="22">al<pos:position pos:line="544" pos:column="24"/></name><operator pos:line="544" pos:column="24">-&gt;<pos:position pos:line="544" pos:column="29"/></operator><name pos:line="544" pos:column="26">cache<pos:position pos:line="544" pos:column="31"/></name><operator pos:line="544" pos:column="31">.<pos:position pos:line="544" pos:column="32"/></operator><name pos:line="544" pos:column="32">replySize<pos:position pos:line="544" pos:column="41"/></name></name></expr>;<pos:position pos:line="544" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="545" pos:column="13">dooff<pos:position pos:line="545" pos:column="18"/></name> <operator pos:line="545" pos:column="19">=<pos:position pos:line="545" pos:column="20"/></operator> <literal type="number" pos:line="545" pos:column="21">1<pos:position pos:line="545" pos:column="22"/></literal></expr>;<pos:position pos:line="545" pos:column="23"/></expr_stmt>
            <break pos:line="546" pos:column="13">break;<pos:position pos:line="546" pos:column="19"/></break>

        <case pos:line="548" pos:column="9">case <expr><name pos:line="548" pos:column="14">LFT_REPLY_HIGHOFFSET<pos:position pos:line="548" pos:column="34"/></name></expr>:<pos:position pos:line="548" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="549" pos:column="13">outoff<pos:position pos:line="549" pos:column="19"/></name> <operator pos:line="549" pos:column="20">=<pos:position pos:line="549" pos:column="21"/></operator> <name><name pos:line="549" pos:column="22">al<pos:position pos:line="549" pos:column="24"/></name><operator pos:line="549" pos:column="24">-&gt;<pos:position pos:line="549" pos:column="29"/></operator><name pos:line="549" pos:column="26">cache<pos:position pos:line="549" pos:column="31"/></name><operator pos:line="549" pos:column="31">.<pos:position pos:line="549" pos:column="32"/></operator><name pos:line="549" pos:column="32">highOffset<pos:position pos:line="549" pos:column="42"/></name></name></expr>;<pos:position pos:line="549" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><name pos:line="551" pos:column="13">dooff<pos:position pos:line="551" pos:column="18"/></name> <operator pos:line="551" pos:column="19">=<pos:position pos:line="551" pos:column="20"/></operator> <literal type="number" pos:line="551" pos:column="21">1<pos:position pos:line="551" pos:column="22"/></literal></expr>;<pos:position pos:line="551" pos:column="23"/></expr_stmt>

            <break pos:line="553" pos:column="13">break;<pos:position pos:line="553" pos:column="19"/></break>

        <case pos:line="555" pos:column="9">case <expr><name pos:line="555" pos:column="14">LFT_REPLY_OBJECTSIZE<pos:position pos:line="555" pos:column="34"/></name></expr>:<pos:position pos:line="555" pos:column="35"/></case>
            <expr_stmt><expr><name pos:line="556" pos:column="13">outoff<pos:position pos:line="556" pos:column="19"/></name> <operator pos:line="556" pos:column="20">=<pos:position pos:line="556" pos:column="21"/></operator> <name><name pos:line="556" pos:column="22">al<pos:position pos:line="556" pos:column="24"/></name><operator pos:line="556" pos:column="24">-&gt;<pos:position pos:line="556" pos:column="29"/></operator><name pos:line="556" pos:column="26">cache<pos:position pos:line="556" pos:column="31"/></name><operator pos:line="556" pos:column="31">.<pos:position pos:line="556" pos:column="32"/></operator><name pos:line="556" pos:column="32">objectSize<pos:position pos:line="556" pos:column="42"/></name></name></expr>;<pos:position pos:line="556" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><name pos:line="558" pos:column="13">dooff<pos:position pos:line="558" pos:column="18"/></name> <operator pos:line="558" pos:column="19">=<pos:position pos:line="558" pos:column="20"/></operator> <literal type="number" pos:line="558" pos:column="21">1<pos:position pos:line="558" pos:column="22"/></literal></expr>;<pos:position pos:line="558" pos:column="23"/></expr_stmt>

            <break pos:line="560" pos:column="13">break;<pos:position pos:line="560" pos:column="19"/></break>

            <comment type="block" pos:line="562" pos:column="13">/*case LFT_REPLY_SIZE_LINE: */</comment>
        <case pos:line="563" pos:column="9">case <expr><name pos:line="563" pos:column="14">LFT_REPLY_SIZE_HEADERS<pos:position pos:line="563" pos:column="36"/></name></expr>:<pos:position pos:line="563" pos:column="37"/></case>
            <expr_stmt><expr><name pos:line="564" pos:column="13">outint<pos:position pos:line="564" pos:column="19"/></name> <operator pos:line="564" pos:column="20">=<pos:position pos:line="564" pos:column="21"/></operator> <name><name pos:line="564" pos:column="22">al<pos:position pos:line="564" pos:column="24"/></name><operator pos:line="564" pos:column="24">-&gt;<pos:position pos:line="564" pos:column="29"/></operator><name pos:line="564" pos:column="26">cache<pos:position pos:line="564" pos:column="31"/></name><operator pos:line="564" pos:column="31">.<pos:position pos:line="564" pos:column="32"/></operator><name pos:line="564" pos:column="32">replyHeadersSize<pos:position pos:line="564" pos:column="48"/></name></name></expr>;<pos:position pos:line="564" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="565" pos:column="13">doint<pos:position pos:line="565" pos:column="18"/></name> <operator pos:line="565" pos:column="19">=<pos:position pos:line="565" pos:column="20"/></operator> <literal type="number" pos:line="565" pos:column="21">1<pos:position pos:line="565" pos:column="22"/></literal></expr>;<pos:position pos:line="565" pos:column="23"/></expr_stmt>
            <break pos:line="566" pos:column="13">break;<pos:position pos:line="566" pos:column="19"/></break>
            <comment type="block" pos:line="567" pos:column="13">/*case LFT_REPLY_SIZE_BODY: */</comment>
            <comment type="block" pos:line="568" pos:column="13">/*case LFT_REPLY_SIZE_BODY_NO_TE: */</comment>

        <case pos:line="570" pos:column="9">case <expr><name pos:line="570" pos:column="14">LFT_TAG<pos:position pos:line="570" pos:column="21"/></name></expr>:<pos:position pos:line="570" pos:column="22"/></case>
            <if pos:line="571" pos:column="13">if <condition pos:line="571" pos:column="16">(<expr><name><name pos:line="571" pos:column="17">al<pos:position pos:line="571" pos:column="19"/></name><operator pos:line="571" pos:column="19">-&gt;<pos:position pos:line="571" pos:column="24"/></operator><name pos:line="571" pos:column="21">request<pos:position pos:line="571" pos:column="28"/></name></name></expr>)<pos:position pos:line="571" pos:column="29"/></condition><then pos:line="571" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="572" pos:column="17">out<pos:position pos:line="572" pos:column="20"/></name> <operator pos:line="572" pos:column="21">=<pos:position pos:line="572" pos:column="22"/></operator> <call><name><name pos:line="572" pos:column="23">al<pos:position pos:line="572" pos:column="25"/></name><operator pos:line="572" pos:column="25">-&gt;<pos:position pos:line="572" pos:column="30"/></operator><name pos:line="572" pos:column="27">request<pos:position pos:line="572" pos:column="34"/></name><operator pos:line="572" pos:column="34">-&gt;<pos:position pos:line="572" pos:column="39"/></operator><name pos:line="572" pos:column="36">tag<pos:position pos:line="572" pos:column="39"/></name><operator pos:line="572" pos:column="39">.<pos:position pos:line="572" pos:column="40"/></operator><name pos:line="572" pos:column="40">termedBuf<pos:position pos:line="572" pos:column="49"/></name></name><argument_list pos:line="572" pos:column="49">()<pos:position pos:line="572" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="572" pos:column="52"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="574" pos:column="13">quote<pos:position pos:line="574" pos:column="18"/></name> <operator pos:line="574" pos:column="19">=<pos:position pos:line="574" pos:column="20"/></operator> <literal type="number" pos:line="574" pos:column="21">1<pos:position pos:line="574" pos:column="22"/></literal></expr>;<pos:position pos:line="574" pos:column="23"/></expr_stmt>

            <break pos:line="576" pos:column="13">break;<pos:position pos:line="576" pos:column="19"/></break>

        <case pos:line="578" pos:column="9">case <expr><name pos:line="578" pos:column="14">LFT_IO_SIZE_TOTAL<pos:position pos:line="578" pos:column="31"/></name></expr>:<pos:position pos:line="578" pos:column="32"/></case>
            <expr_stmt><expr><name pos:line="579" pos:column="13">outint<pos:position pos:line="579" pos:column="19"/></name> <operator pos:line="579" pos:column="20">=<pos:position pos:line="579" pos:column="21"/></operator> <name><name pos:line="579" pos:column="22">al<pos:position pos:line="579" pos:column="24"/></name><operator pos:line="579" pos:column="24">-&gt;<pos:position pos:line="579" pos:column="29"/></operator><name pos:line="579" pos:column="26">cache<pos:position pos:line="579" pos:column="31"/></name><operator pos:line="579" pos:column="31">.<pos:position pos:line="579" pos:column="32"/></operator><name pos:line="579" pos:column="32">requestSize<pos:position pos:line="579" pos:column="43"/></name></name> <operator pos:line="579" pos:column="44">+<pos:position pos:line="579" pos:column="45"/></operator> <name><name pos:line="579" pos:column="46">al<pos:position pos:line="579" pos:column="48"/></name><operator pos:line="579" pos:column="48">-&gt;<pos:position pos:line="579" pos:column="53"/></operator><name pos:line="579" pos:column="50">cache<pos:position pos:line="579" pos:column="55"/></name><operator pos:line="579" pos:column="55">.<pos:position pos:line="579" pos:column="56"/></operator><name pos:line="579" pos:column="56">replySize<pos:position pos:line="579" pos:column="65"/></name></name></expr>;<pos:position pos:line="579" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name pos:line="580" pos:column="13">doint<pos:position pos:line="580" pos:column="18"/></name> <operator pos:line="580" pos:column="19">=<pos:position pos:line="580" pos:column="20"/></operator> <literal type="number" pos:line="580" pos:column="21">1<pos:position pos:line="580" pos:column="22"/></literal></expr>;<pos:position pos:line="580" pos:column="23"/></expr_stmt>
            <break pos:line="581" pos:column="13">break;<pos:position pos:line="581" pos:column="19"/></break>

        <case pos:line="583" pos:column="9">case <expr><name pos:line="583" pos:column="14">LFT_EXT_LOG<pos:position pos:line="583" pos:column="25"/></name></expr>:<pos:position pos:line="583" pos:column="26"/></case>
            <if pos:line="584" pos:column="13">if <condition pos:line="584" pos:column="16">(<expr><name><name pos:line="584" pos:column="17">al<pos:position pos:line="584" pos:column="19"/></name><operator pos:line="584" pos:column="19">-&gt;<pos:position pos:line="584" pos:column="24"/></operator><name pos:line="584" pos:column="21">request<pos:position pos:line="584" pos:column="28"/></name></name></expr>)<pos:position pos:line="584" pos:column="29"/></condition><then pos:line="584" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="585" pos:column="17">out<pos:position pos:line="585" pos:column="20"/></name> <operator pos:line="585" pos:column="21">=<pos:position pos:line="585" pos:column="22"/></operator> <call><name><name pos:line="585" pos:column="23">al<pos:position pos:line="585" pos:column="25"/></name><operator pos:line="585" pos:column="25">-&gt;<pos:position pos:line="585" pos:column="30"/></operator><name pos:line="585" pos:column="27">request<pos:position pos:line="585" pos:column="34"/></name><operator pos:line="585" pos:column="34">-&gt;<pos:position pos:line="585" pos:column="39"/></operator><name pos:line="585" pos:column="36">extacl_log<pos:position pos:line="585" pos:column="46"/></name><operator pos:line="585" pos:column="46">.<pos:position pos:line="585" pos:column="47"/></operator><name pos:line="585" pos:column="47">termedBuf<pos:position pos:line="585" pos:column="56"/></name></name><argument_list pos:line="585" pos:column="56">()<pos:position pos:line="585" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="585" pos:column="59"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="587" pos:column="13">quote<pos:position pos:line="587" pos:column="18"/></name> <operator pos:line="587" pos:column="19">=<pos:position pos:line="587" pos:column="20"/></operator> <literal type="number" pos:line="587" pos:column="21">1<pos:position pos:line="587" pos:column="22"/></literal></expr>;<pos:position pos:line="587" pos:column="23"/></expr_stmt>

            <break pos:line="589" pos:column="13">break;<pos:position pos:line="589" pos:column="19"/></break>

        <case pos:line="591" pos:column="9">case <expr><name pos:line="591" pos:column="14">LFT_PERCENT<pos:position pos:line="591" pos:column="25"/></name></expr>:<pos:position pos:line="591" pos:column="26"/></case>
            <expr_stmt><expr><name pos:line="592" pos:column="13">out<pos:position pos:line="592" pos:column="16"/></name> <operator pos:line="592" pos:column="17">=<pos:position pos:line="592" pos:column="18"/></operator> <literal type="string" pos:line="592" pos:column="19">"%"<pos:position pos:line="592" pos:column="22"/></literal></expr>;<pos:position pos:line="592" pos:column="23"/></expr_stmt>

            <break pos:line="594" pos:column="13">break;<pos:position pos:line="594" pos:column="19"/></break>
        }<pos:position pos:line="595" pos:column="10"/></block></switch>

        <if pos:line="597" pos:column="9">if <condition pos:line="597" pos:column="12">(<expr><name pos:line="597" pos:column="13">dooff<pos:position pos:line="597" pos:column="18"/></name></expr>)<pos:position pos:line="597" pos:column="19"/></condition><then pos:line="597" pos:column="19"> <block pos:line="597" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="598" pos:column="13">snprintf<pos:position pos:line="598" pos:column="21"/></name><argument_list pos:line="598" pos:column="21">(<argument><expr><name pos:line="598" pos:column="22">tmp<pos:position pos:line="598" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="598" pos:column="27">sizeof<argument_list pos:line="598" pos:column="33">(<argument><expr><name pos:line="598" pos:column="34">tmp<pos:position pos:line="598" pos:column="37"/></name></expr></argument>)<pos:position pos:line="598" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="598" pos:column="40">"%0*"<pos:position pos:line="598" pos:column="45"/></literal> <name pos:line="598" pos:column="46">PRId64<pos:position pos:line="598" pos:column="52"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="598" pos:column="54">fmt<pos:position pos:line="598" pos:column="57"/></name><operator pos:line="598" pos:column="57">-&gt;<pos:position pos:line="598" pos:column="62"/></operator><name pos:line="598" pos:column="59">zero<pos:position pos:line="598" pos:column="63"/></name></name></expr> ?<pos:position pos:line="598" pos:column="65"/></condition><then pos:line="598" pos:column="65"> <expr><operator pos:line="598" pos:column="66">(<pos:position pos:line="598" pos:column="67"/></operator><name pos:line="598" pos:column="67">int<pos:position pos:line="598" pos:column="70"/></name><operator pos:line="598" pos:column="70">)<pos:position pos:line="598" pos:column="71"/></operator> <name><name pos:line="598" pos:column="72">fmt<pos:position pos:line="598" pos:column="75"/></name><operator pos:line="598" pos:column="75">-&gt;<pos:position pos:line="598" pos:column="80"/></operator><name pos:line="598" pos:column="77">width<pos:position pos:line="598" pos:column="82"/></name></name></expr> <pos:position pos:line="598" pos:column="83"/></then><else pos:line="598" pos:column="83">: <expr><literal type="number" pos:line="598" pos:column="85">0<pos:position pos:line="598" pos:column="86"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="598" pos:column="88">outoff<pos:position pos:line="598" pos:column="94"/></name></expr></argument>)<pos:position pos:line="598" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="598" pos:column="96"/></expr_stmt>
            <expr_stmt><expr><name pos:line="599" pos:column="13">out<pos:position pos:line="599" pos:column="16"/></name> <operator pos:line="599" pos:column="17">=<pos:position pos:line="599" pos:column="18"/></operator> <name pos:line="599" pos:column="19">tmp<pos:position pos:line="599" pos:column="22"/></name></expr>;<pos:position pos:line="599" pos:column="23"/></expr_stmt>

        }<pos:position pos:line="601" pos:column="10"/></block></then> <elseif pos:line="601" pos:column="11">else <if pos:line="601" pos:column="16">if <condition pos:line="601" pos:column="19">(<expr><name pos:line="601" pos:column="20">doint<pos:position pos:line="601" pos:column="25"/></name></expr>)<pos:position pos:line="601" pos:column="26"/></condition><then pos:line="601" pos:column="26"> <block pos:line="601" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="602" pos:column="13">snprintf<pos:position pos:line="602" pos:column="21"/></name><argument_list pos:line="602" pos:column="21">(<argument><expr><name pos:line="602" pos:column="22">tmp<pos:position pos:line="602" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="602" pos:column="27">sizeof<argument_list pos:line="602" pos:column="33">(<argument><expr><name pos:line="602" pos:column="34">tmp<pos:position pos:line="602" pos:column="37"/></name></expr></argument>)<pos:position pos:line="602" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="602" pos:column="40">"%0*ld"<pos:position pos:line="602" pos:column="47"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="602" pos:column="49">fmt<pos:position pos:line="602" pos:column="52"/></name><operator pos:line="602" pos:column="52">-&gt;<pos:position pos:line="602" pos:column="57"/></operator><name pos:line="602" pos:column="54">zero<pos:position pos:line="602" pos:column="58"/></name></name></expr> ?<pos:position pos:line="602" pos:column="60"/></condition><then pos:line="602" pos:column="60"> <expr><operator pos:line="602" pos:column="61">(<pos:position pos:line="602" pos:column="62"/></operator><name pos:line="602" pos:column="62">int<pos:position pos:line="602" pos:column="65"/></name><operator pos:line="602" pos:column="65">)<pos:position pos:line="602" pos:column="66"/></operator> <name><name pos:line="602" pos:column="67">fmt<pos:position pos:line="602" pos:column="70"/></name><operator pos:line="602" pos:column="70">-&gt;<pos:position pos:line="602" pos:column="75"/></operator><name pos:line="602" pos:column="72">width<pos:position pos:line="602" pos:column="77"/></name></name></expr> <pos:position pos:line="602" pos:column="78"/></then><else pos:line="602" pos:column="78">: <expr><literal type="number" pos:line="602" pos:column="80">0<pos:position pos:line="602" pos:column="81"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="602" pos:column="83">outint<pos:position pos:line="602" pos:column="89"/></name></expr></argument>)<pos:position pos:line="602" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="602" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><name pos:line="603" pos:column="13">out<pos:position pos:line="603" pos:column="16"/></name> <operator pos:line="603" pos:column="17">=<pos:position pos:line="603" pos:column="18"/></operator> <name pos:line="603" pos:column="19">tmp<pos:position pos:line="603" pos:column="22"/></name></expr>;<pos:position pos:line="603" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="604" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="606" pos:column="9">if <condition pos:line="606" pos:column="12">(<expr><name pos:line="606" pos:column="13">out<pos:position pos:line="606" pos:column="16"/></name> <operator pos:line="606" pos:column="17">&amp;&amp;<pos:position pos:line="606" pos:column="27"/></operator> <operator pos:line="606" pos:column="20">*<pos:position pos:line="606" pos:column="21"/></operator><name pos:line="606" pos:column="21">out<pos:position pos:line="606" pos:column="24"/></name></expr>)<pos:position pos:line="606" pos:column="25"/></condition><then pos:line="606" pos:column="25"> <block pos:line="606" pos:column="26">{
            <if pos:line="607" pos:column="13">if <condition pos:line="607" pos:column="16">(<expr><name pos:line="607" pos:column="17">quote<pos:position pos:line="607" pos:column="22"/></name> <operator pos:line="607" pos:column="23">||<pos:position pos:line="607" pos:column="25"/></operator> <name><name pos:line="607" pos:column="26">fmt<pos:position pos:line="607" pos:column="29"/></name><operator pos:line="607" pos:column="29">-&gt;<pos:position pos:line="607" pos:column="34"/></operator><name pos:line="607" pos:column="31">quote<pos:position pos:line="607" pos:column="36"/></name></name> <operator pos:line="607" pos:column="37">!=<pos:position pos:line="607" pos:column="39"/></operator> <name pos:line="607" pos:column="40">LOG_QUOTE_NONE<pos:position pos:line="607" pos:column="54"/></name></expr>)<pos:position pos:line="607" pos:column="55"/></condition><then pos:line="607" pos:column="55"> <block pos:line="607" pos:column="56">{
                <decl_stmt><decl><type><name pos:line="608" pos:column="17">char<pos:position pos:line="608" pos:column="21"/></name> <modifier pos:line="608" pos:column="22">*<pos:position pos:line="608" pos:column="23"/></modifier></type><name pos:line="608" pos:column="23">newout<pos:position pos:line="608" pos:column="29"/></name> <init pos:line="608" pos:column="30">= <expr><name pos:line="608" pos:column="32">NULL<pos:position pos:line="608" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="608" pos:column="37"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="609" pos:column="17">int<pos:position pos:line="609" pos:column="20"/></name></type> <name pos:line="609" pos:column="21">newfree<pos:position pos:line="609" pos:column="28"/></name> <init pos:line="609" pos:column="29">= <expr><literal type="number" pos:line="609" pos:column="31">0<pos:position pos:line="609" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="609" pos:column="33"/></decl_stmt>

                <switch pos:line="611" pos:column="17">switch <condition pos:line="611" pos:column="24">(<expr><name><name pos:line="611" pos:column="25">fmt<pos:position pos:line="611" pos:column="28"/></name><operator pos:line="611" pos:column="28">-&gt;<pos:position pos:line="611" pos:column="33"/></operator><name pos:line="611" pos:column="30">quote<pos:position pos:line="611" pos:column="35"/></name></name></expr>)<pos:position pos:line="611" pos:column="36"/></condition> <block pos:line="611" pos:column="37">{

                <case pos:line="613" pos:column="17">case <expr><name pos:line="613" pos:column="22">LOG_QUOTE_NONE<pos:position pos:line="613" pos:column="36"/></name></expr>:<pos:position pos:line="613" pos:column="37"/></case>
                    <expr_stmt><expr><name pos:line="614" pos:column="21">newout<pos:position pos:line="614" pos:column="27"/></name> <operator pos:line="614" pos:column="28">=<pos:position pos:line="614" pos:column="29"/></operator> <call><name pos:line="614" pos:column="30">rfc1738_escape_unescaped<pos:position pos:line="614" pos:column="54"/></name><argument_list pos:line="614" pos:column="54">(<argument><expr><name pos:line="614" pos:column="55">out<pos:position pos:line="614" pos:column="58"/></name></expr></argument>)<pos:position pos:line="614" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="60"/></expr_stmt>
                    <break pos:line="615" pos:column="21">break;<pos:position pos:line="615" pos:column="27"/></break>

                <case pos:line="617" pos:column="17">case <expr><name pos:line="617" pos:column="22">LOG_QUOTE_QUOTES<pos:position pos:line="617" pos:column="38"/></name></expr>:<pos:position pos:line="617" pos:column="39"/></case>
                    <expr_stmt><expr><name pos:line="618" pos:column="21">newout<pos:position pos:line="618" pos:column="27"/></name> <operator pos:line="618" pos:column="28">=<pos:position pos:line="618" pos:column="29"/></operator> <call><name pos:line="618" pos:column="30">log_quoted_string<pos:position pos:line="618" pos:column="47"/></name><argument_list pos:line="618" pos:column="47">(<argument><expr><name pos:line="618" pos:column="48">out<pos:position pos:line="618" pos:column="51"/></name></expr></argument>)<pos:position pos:line="618" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="53"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="619" pos:column="21">newfree<pos:position pos:line="619" pos:column="28"/></name> <operator pos:line="619" pos:column="29">=<pos:position pos:line="619" pos:column="30"/></operator> <literal type="number" pos:line="619" pos:column="31">1<pos:position pos:line="619" pos:column="32"/></literal></expr>;<pos:position pos:line="619" pos:column="33"/></expr_stmt>
                    <break pos:line="620" pos:column="21">break;<pos:position pos:line="620" pos:column="27"/></break>

                <case pos:line="622" pos:column="17">case <expr><name pos:line="622" pos:column="22">LOG_QUOTE_BRAKETS<pos:position pos:line="622" pos:column="39"/></name></expr>:<pos:position pos:line="622" pos:column="40"/></case>
                    <expr_stmt><expr><name pos:line="623" pos:column="21">newout<pos:position pos:line="623" pos:column="27"/></name> <operator pos:line="623" pos:column="28">=<pos:position pos:line="623" pos:column="29"/></operator> <call><name pos:line="623" pos:column="30">log_quote<pos:position pos:line="623" pos:column="39"/></name><argument_list pos:line="623" pos:column="39">(<argument><expr><name pos:line="623" pos:column="40">out<pos:position pos:line="623" pos:column="43"/></name></expr></argument>)<pos:position pos:line="623" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="623" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="624" pos:column="21">newfree<pos:position pos:line="624" pos:column="28"/></name> <operator pos:line="624" pos:column="29">=<pos:position pos:line="624" pos:column="30"/></operator> <literal type="number" pos:line="624" pos:column="31">1<pos:position pos:line="624" pos:column="32"/></literal></expr>;<pos:position pos:line="624" pos:column="33"/></expr_stmt>
                    <break pos:line="625" pos:column="21">break;<pos:position pos:line="625" pos:column="27"/></break>

                <case pos:line="627" pos:column="17">case <expr><name pos:line="627" pos:column="22">LOG_QUOTE_URL<pos:position pos:line="627" pos:column="35"/></name></expr>:<pos:position pos:line="627" pos:column="36"/></case>
                    <expr_stmt><expr><name pos:line="628" pos:column="21">newout<pos:position pos:line="628" pos:column="27"/></name> <operator pos:line="628" pos:column="28">=<pos:position pos:line="628" pos:column="29"/></operator> <call><name pos:line="628" pos:column="30">rfc1738_escape<pos:position pos:line="628" pos:column="44"/></name><argument_list pos:line="628" pos:column="44">(<argument><expr><name pos:line="628" pos:column="45">out<pos:position pos:line="628" pos:column="48"/></name></expr></argument>)<pos:position pos:line="628" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="628" pos:column="50"/></expr_stmt>
                    <break pos:line="629" pos:column="21">break;<pos:position pos:line="629" pos:column="27"/></break>

                <case pos:line="631" pos:column="17">case <expr><name pos:line="631" pos:column="22">LOG_QUOTE_RAW<pos:position pos:line="631" pos:column="35"/></name></expr>:<pos:position pos:line="631" pos:column="36"/></case>
                    <break pos:line="632" pos:column="21">break;<pos:position pos:line="632" pos:column="27"/></break>
                }<pos:position pos:line="633" pos:column="18"/></block></switch>

                <if pos:line="635" pos:column="17">if <condition pos:line="635" pos:column="20">(<expr><name pos:line="635" pos:column="21">newout<pos:position pos:line="635" pos:column="27"/></name></expr>)<pos:position pos:line="635" pos:column="28"/></condition><then pos:line="635" pos:column="28"> <block pos:line="635" pos:column="29">{
                    <if pos:line="636" pos:column="21">if <condition pos:line="636" pos:column="24">(<expr><name pos:line="636" pos:column="25">dofree<pos:position pos:line="636" pos:column="31"/></name></expr>)<pos:position pos:line="636" pos:column="32"/></condition><then pos:line="636" pos:column="32">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="637" pos:column="25">safe_free<pos:position pos:line="637" pos:column="34"/></name><argument_list pos:line="637" pos:column="34">(<argument><expr><name pos:line="637" pos:column="35">out<pos:position pos:line="637" pos:column="38"/></name></expr></argument>)<pos:position pos:line="637" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="637" pos:column="40"/></expr_stmt></block></then></if>

                    <expr_stmt><expr><name pos:line="639" pos:column="21">out<pos:position pos:line="639" pos:column="24"/></name> <operator pos:line="639" pos:column="25">=<pos:position pos:line="639" pos:column="26"/></operator> <name pos:line="639" pos:column="27">newout<pos:position pos:line="639" pos:column="33"/></name></expr>;<pos:position pos:line="639" pos:column="34"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="641" pos:column="21">dofree<pos:position pos:line="641" pos:column="27"/></name> <operator pos:line="641" pos:column="28">=<pos:position pos:line="641" pos:column="29"/></operator> <name pos:line="641" pos:column="30">newfree<pos:position pos:line="641" pos:column="37"/></name></expr>;<pos:position pos:line="641" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="642" pos:column="18"/></block></then></if>
            }<pos:position pos:line="643" pos:column="14"/></block></then></if>

            <if pos:line="645" pos:column="13">if <condition pos:line="645" pos:column="16">(<expr><name><name pos:line="645" pos:column="17">fmt<pos:position pos:line="645" pos:column="20"/></name><operator pos:line="645" pos:column="20">-&gt;<pos:position pos:line="645" pos:column="25"/></operator><name pos:line="645" pos:column="22">width<pos:position pos:line="645" pos:column="27"/></name></name></expr>)<pos:position pos:line="645" pos:column="28"/></condition><then pos:line="645" pos:column="28"> <block pos:line="645" pos:column="29">{
                <if pos:line="646" pos:column="17">if <condition pos:line="646" pos:column="20">(<expr><name><name pos:line="646" pos:column="21">fmt<pos:position pos:line="646" pos:column="24"/></name><operator pos:line="646" pos:column="24">-&gt;<pos:position pos:line="646" pos:column="29"/></operator><name pos:line="646" pos:column="26">left<pos:position pos:line="646" pos:column="30"/></name></name></expr>)<pos:position pos:line="646" pos:column="31"/></condition><then pos:line="646" pos:column="31">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="647" pos:column="21">mb<pos:position pos:line="647" pos:column="23"/></name><operator pos:line="647" pos:column="23">.<pos:position pos:line="647" pos:column="24"/></operator><name pos:line="647" pos:column="24">Printf<pos:position pos:line="647" pos:column="30"/></name></name><argument_list pos:line="647" pos:column="30">(<argument><expr><literal type="string" pos:line="647" pos:column="31">"%-*s"<pos:position pos:line="647" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="647" pos:column="39">(<pos:position pos:line="647" pos:column="40"/></operator><name pos:line="647" pos:column="40">int<pos:position pos:line="647" pos:column="43"/></name><operator pos:line="647" pos:column="43">)<pos:position pos:line="647" pos:column="44"/></operator> <name><name pos:line="647" pos:column="45">fmt<pos:position pos:line="647" pos:column="48"/></name><operator pos:line="647" pos:column="48">-&gt;<pos:position pos:line="647" pos:column="53"/></operator><name pos:line="647" pos:column="50">width<pos:position pos:line="647" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="647" pos:column="57">out<pos:position pos:line="647" pos:column="60"/></name></expr></argument>)<pos:position pos:line="647" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="647" pos:column="62"/></expr_stmt></block></then>
                <else pos:line="648" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="649" pos:column="21">mb<pos:position pos:line="649" pos:column="23"/></name><operator pos:line="649" pos:column="23">.<pos:position pos:line="649" pos:column="24"/></operator><name pos:line="649" pos:column="24">Printf<pos:position pos:line="649" pos:column="30"/></name></name><argument_list pos:line="649" pos:column="30">(<argument><expr><literal type="string" pos:line="649" pos:column="31">"%*s"<pos:position pos:line="649" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="649" pos:column="38">(<pos:position pos:line="649" pos:column="39"/></operator><name pos:line="649" pos:column="39">int<pos:position pos:line="649" pos:column="42"/></name><operator pos:line="649" pos:column="42">)<pos:position pos:line="649" pos:column="43"/></operator> <name><name pos:line="649" pos:column="44">fmt<pos:position pos:line="649" pos:column="47"/></name><operator pos:line="649" pos:column="47">-&gt;<pos:position pos:line="649" pos:column="52"/></operator><name pos:line="649" pos:column="49">width<pos:position pos:line="649" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="649" pos:column="56">out<pos:position pos:line="649" pos:column="59"/></name></expr></argument>)<pos:position pos:line="649" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="649" pos:column="61"/></expr_stmt></block></else></if>
            }<pos:position pos:line="650" pos:column="14"/></block></then> <else pos:line="650" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="651" pos:column="17">mb<pos:position pos:line="651" pos:column="19"/></name><operator pos:line="651" pos:column="19">.<pos:position pos:line="651" pos:column="20"/></operator><name pos:line="651" pos:column="20">append<pos:position pos:line="651" pos:column="26"/></name></name><argument_list pos:line="651" pos:column="26">(<argument><expr><name pos:line="651" pos:column="27">out<pos:position pos:line="651" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="651" pos:column="32">strlen<pos:position pos:line="651" pos:column="38"/></name><argument_list pos:line="651" pos:column="38">(<argument><expr><name pos:line="651" pos:column="39">out<pos:position pos:line="651" pos:column="42"/></name></expr></argument>)<pos:position pos:line="651" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="651" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="651" pos:column="45"/></expr_stmt></block></else></if>
        }<pos:position pos:line="652" pos:column="10"/></block></then> <else pos:line="652" pos:column="11">else <block pos:line="652" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="653" pos:column="13">mb<pos:position pos:line="653" pos:column="15"/></name><operator pos:line="653" pos:column="15">.<pos:position pos:line="653" pos:column="16"/></operator><name pos:line="653" pos:column="16">append<pos:position pos:line="653" pos:column="22"/></name></name><argument_list pos:line="653" pos:column="22">(<argument><expr><literal type="string" pos:line="653" pos:column="23">"-"<pos:position pos:line="653" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="653" pos:column="28">1<pos:position pos:line="653" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="653" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="653" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="654" pos:column="10"/></block></else></if>

        <if pos:line="656" pos:column="9">if <condition pos:line="656" pos:column="12">(<expr><name><name pos:line="656" pos:column="13">fmt<pos:position pos:line="656" pos:column="16"/></name><operator pos:line="656" pos:column="16">-&gt;<pos:position pos:line="656" pos:column="21"/></operator><name pos:line="656" pos:column="18">space<pos:position pos:line="656" pos:column="23"/></name></name></expr>)<pos:position pos:line="656" pos:column="24"/></condition><then pos:line="656" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="657" pos:column="13">mb<pos:position pos:line="657" pos:column="15"/></name><operator pos:line="657" pos:column="15">.<pos:position pos:line="657" pos:column="16"/></operator><name pos:line="657" pos:column="16">append<pos:position pos:line="657" pos:column="22"/></name></name><argument_list pos:line="657" pos:column="22">(<argument><expr><literal type="string" pos:line="657" pos:column="23">" "<pos:position pos:line="657" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="657" pos:column="28">1<pos:position pos:line="657" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="657" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="657" pos:column="31"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="659" pos:column="9">sb<pos:position pos:line="659" pos:column="11"/></name><operator pos:line="659" pos:column="11">.<pos:position pos:line="659" pos:column="12"/></operator><name pos:line="659" pos:column="12">clean<pos:position pos:line="659" pos:column="17"/></name></name><argument_list pos:line="659" pos:column="17">()<pos:position pos:line="659" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="659" pos:column="20"/></expr_stmt>

        <if pos:line="661" pos:column="9">if <condition pos:line="661" pos:column="12">(<expr><name pos:line="661" pos:column="13">dofree<pos:position pos:line="661" pos:column="19"/></name></expr>)<pos:position pos:line="661" pos:column="20"/></condition><then pos:line="661" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="662" pos:column="13">safe_free<pos:position pos:line="662" pos:column="22"/></name><argument_list pos:line="662" pos:column="22">(<argument><expr><name pos:line="662" pos:column="23">out<pos:position pos:line="662" pos:column="26"/></name></expr></argument>)<pos:position pos:line="662" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="662" pos:column="28"/></expr_stmt></block></then></if>
    }<pos:position pos:line="663" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="665" pos:column="5">logfilePrintf<pos:position pos:line="665" pos:column="18"/></name><argument_list pos:line="665" pos:column="18">(<argument><expr><name pos:line="665" pos:column="19">logfile<pos:position pos:line="665" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="665" pos:column="28">"%s\n"<pos:position pos:line="665" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="665" pos:column="36">mb<pos:position pos:line="665" pos:column="38"/></name><operator pos:line="665" pos:column="38">.<pos:position pos:line="665" pos:column="39"/></operator><name pos:line="665" pos:column="39">buf<pos:position pos:line="665" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="665" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="665" pos:column="44"/></expr_stmt>
}<pos:position pos:line="666" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3067_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">initiateTunneledRequest<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name><name pos:line="2" pos:column="40">HttpRequest<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">Pointer<pos:position pos:line="2" pos:column="60"/></name></name> <specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <modifier pos:line="2" pos:column="67">&amp;<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="68">cause<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="75">Http<pos:position pos:line="2" pos:column="79"/></name><operator pos:line="2" pos:column="79">::<pos:position pos:line="2" pos:column="81"/></operator><name pos:line="2" pos:column="81">MethodType<pos:position pos:line="2" pos:column="91"/></name></name> <specifier pos:line="2" pos:column="92">const<pos:position pos:line="2" pos:column="97"/></specifier></type> <name pos:line="2" pos:column="98">method<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="106">const<pos:position pos:line="2" pos:column="111"/></specifier> <name pos:line="2" pos:column="112">char<pos:position pos:line="2" pos:column="116"/></name> <modifier pos:line="2" pos:column="117">*<pos:position pos:line="2" pos:column="118"/></modifier></type><name pos:line="2" pos:column="118">reason<pos:position pos:line="2" pos:column="124"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="126">const<pos:position pos:line="2" pos:column="131"/></specifier> <name pos:line="2" pos:column="132">SBuf<pos:position pos:line="2" pos:column="136"/></name> <modifier pos:line="2" pos:column="137">&amp;<pos:position pos:line="2" pos:column="142"/></modifier></type><name pos:line="2" pos:column="138">payload<pos:position pos:line="2" pos:column="145"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="146"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// fake a CONNECT request to force connState to tunnel</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SBuf<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">connectHost<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">short<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">connectPort<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><literal type="number" pos:line="6" pos:column="34">0<pos:position pos:line="6" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">pinning<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">serverConnection<pos:position pos:line="8" pos:column="33"/></name></name> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <literal type="null" pos:line="8" pos:column="37">nullptr<pos:position pos:line="8" pos:column="44"/></literal></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <block pos:line="8" pos:column="46">{
        <decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">char<pos:position pos:line="9" pos:column="20"/></name></type> <name><name pos:line="9" pos:column="21">ip<pos:position pos:line="9" pos:column="23"/></name><index pos:line="9" pos:column="23">[<expr><name pos:line="9" pos:column="24">MAX_IPSTRLEN<pos:position pos:line="9" pos:column="36"/></name></expr>]<pos:position pos:line="9" pos:column="37"/></index></name></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">pinning<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">serverConnection<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">remote<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">toHostStr<pos:position pos:line="10" pos:column="51"/></name></name><argument_list pos:line="10" pos:column="51">(<argument><expr><name pos:line="10" pos:column="52">ip<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="56">sizeof<argument_list pos:line="10" pos:column="62">(<argument><expr><name pos:line="10" pos:column="63">ip<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">connectHost<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">assign<pos:position pos:line="11" pos:column="27"/></name></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">ip<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">connectPort<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name><name pos:line="12" pos:column="23">pinning<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">serverConnection<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">remote<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">.<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="56">port<pos:position pos:line="12" pos:column="60"/></name></name><argument_list pos:line="12" pos:column="60">()<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if <condition pos:line="13" pos:column="15">(<expr><name pos:line="13" pos:column="16">cause<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <name><name pos:line="13" pos:column="25">cause<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">method<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">==<pos:position pos:line="13" pos:column="41"/></operator> <name><name pos:line="13" pos:column="42">Http<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">::<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">METHOD_CONNECT<pos:position pos:line="13" pos:column="62"/></name></name></expr>)<pos:position pos:line="13" pos:column="63"/></condition><then pos:line="13" pos:column="63"> <block pos:line="13" pos:column="64">{
        <comment type="line" pos:line="14" pos:column="9">// We are inside a (not fully established) CONNECT request</comment>
        <expr_stmt><expr><name pos:line="15" pos:column="9">connectHost<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name><name pos:line="15" pos:column="23">cause<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">url<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">.<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">host<pos:position pos:line="15" pos:column="38"/></name></name><argument_list pos:line="15" pos:column="38">()<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">connectPort<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name><name pos:line="16" pos:column="23">cause<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">url<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">.<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">port<pos:position pos:line="16" pos:column="38"/></name></name><argument_list pos:line="16" pos:column="38">()<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">33<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">2<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"Not able to compute URL, abort request tunneling for "<pos:position pos:line="18" pos:column="78"/></literal> <operator pos:line="18" pos:column="79">&lt;&lt;<pos:position pos:line="18" pos:column="87"/></operator> <name pos:line="18" pos:column="82">reason<pos:position pos:line="18" pos:column="88"/></name></expr></argument>)<pos:position pos:line="18" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="90"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><literal type="boolean" pos:line="19" pos:column="16">false<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">33<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">2<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"Request tunneling for "<pos:position pos:line="22" pos:column="43"/></literal> <operator pos:line="22" pos:column="44">&lt;&lt;<pos:position pos:line="22" pos:column="52"/></operator> <name pos:line="22" pos:column="47">reason<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">ClientHttpRequest<pos:position pos:line="23" pos:column="22"/></name> <modifier pos:line="23" pos:column="23">*<pos:position pos:line="23" pos:column="24"/></modifier></type><name pos:line="23" pos:column="24">http<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><call><name pos:line="23" pos:column="31">buildFakeRequest<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">method<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">connectHost<pos:position pos:line="23" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="69">connectPort<pos:position pos:line="23" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="82">payload<pos:position pos:line="23" pos:column="89"/></name></expr></argument>)<pos:position pos:line="23" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="91"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">HttpRequest<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">::<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">Pointer<pos:position pos:line="24" pos:column="25"/></name></name></type> <name pos:line="24" pos:column="26">request<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><name><name pos:line="24" pos:column="36">http<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">request<pos:position pos:line="24" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">request<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">flags<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">forceTunnel<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <literal type="boolean" pos:line="25" pos:column="34">true<pos:position pos:line="25" pos:column="38"/></literal></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">http<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">calloutContext<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <operator pos:line="26" pos:column="28">new<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">ClientRequestContext<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><name pos:line="26" pos:column="53">http<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">http<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">doCallouts<pos:position pos:line="27" pos:column="21"/></name></name><argument_list pos:line="27" pos:column="21">()<pos:position pos:line="27" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">clientProcessRequestFinished<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">this<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">request<pos:position pos:line="28" pos:column="47"/></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><literal type="boolean" pos:line="29" pos:column="12">true<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3790_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Address<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">getInAddr<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">in_addr<pos:position pos:line="2" pos:column="38"/></name></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">buf<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">( <expr><call><name pos:line="4" pos:column="10">isIPv4<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr> )<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">map6to4<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name><name pos:line="5" pos:column="17">mSocketAddr_<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">sin6_addr<pos:position pos:line="5" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">buf<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">true<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// default:</comment>
    <comment type="line" pos:line="10" pos:column="5">// non-compatible IPv6 Pure Address</comment>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">14<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="16">DBG_IMPORTANT<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">HERE<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">&lt;&lt;<pos:position pos:line="12" pos:column="44"/></operator> <literal type="string" pos:line="12" pos:column="39">"Ip::Address::getInAddr : Cannot convert non-IPv4 to IPv4. IPA="<pos:position pos:line="12" pos:column="103"/></literal> <operator pos:line="12" pos:column="104">&lt;&lt;<pos:position pos:line="12" pos:column="112"/></operator> <operator pos:line="12" pos:column="107">*<pos:position pos:line="12" pos:column="108"/></operator><name pos:line="12" pos:column="108">this<pos:position pos:line="12" pos:column="112"/></name></expr></argument>)<pos:position pos:line="12" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memset<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><operator pos:line="13" pos:column="12">&amp;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="13">buf<pos:position pos:line="13" pos:column="16"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="17">0xFFFFFFFF<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>,<argument><expr><sizeof pos:line="13" pos:column="28">sizeof<argument_list pos:line="13" pos:column="34">(<argument><expr pos:line="13" pos:column="35">struct <name pos:line="13" pos:column="42">in_addr<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="boolean" pos:line="14" pos:column="12">false<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><literal type="boolean" pos:line="15" pos:column="12">false<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

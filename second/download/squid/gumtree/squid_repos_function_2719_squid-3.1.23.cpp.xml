<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2719_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">tunnelStart<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">ClientHttpRequest<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">http<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int64_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">size_ptr<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">int<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">status_ptr<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Create state structure. */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">TunnelStateData<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">tunnelState<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">sock<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ErrorState<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">err<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">answer<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">fd<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><call><name><name pos:line="9" pos:column="14">http<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">getConn<pos:position pos:line="9" pos:column="27"/></name></name><argument_list pos:line="9" pos:column="27">()<pos:position pos:line="9" pos:column="29"/></argument_list></call><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">fd<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">HttpRequest<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">request<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name><name pos:line="10" pos:column="28">http<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">request<pos:position pos:line="10" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">url<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><name><name pos:line="11" pos:column="17">http<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">uri<pos:position pos:line="11" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <comment type="block" pos:line="12" pos:column="5">/*
     * client_addr.IsNoAddr()  indicates this is an "internal" request
     * from peer_digest.c, asn.c, netdb.c, etc and should always
     * be allowed.  yuck, I know.
     */</comment>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name><name pos:line="18" pos:column="10">request<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">client_addr<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">IsNoAddr<pos:position pos:line="18" pos:column="39"/></name></name><argument_list pos:line="18" pos:column="39">()<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">&amp;&amp;<pos:position pos:line="18" pos:column="52"/></operator> <name><name pos:line="18" pos:column="45">Config<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">.<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">accessList<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">.<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">miss<pos:position pos:line="18" pos:column="67"/></name></name></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68"> <block pos:line="18" pos:column="69">{
        <comment type="block" pos:line="19" pos:column="9">/*
         * Check if this host is allowed to fetch MISSES from us (miss_access)
         * default is to allow.
         */</comment>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">ACLFilledChecklist<pos:position pos:line="23" pos:column="27"/></name></type> <name pos:line="23" pos:column="28">ch<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name><name pos:line="23" pos:column="31">Config<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">.<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">accessList<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">miss<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">request<pos:position pos:line="23" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">NULL<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></decl>;<pos:position pos:line="23" pos:column="70"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">ch<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">src_addr<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name><name pos:line="24" pos:column="23">request<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">client_addr<pos:position pos:line="24" pos:column="43"/></name></name></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ch<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">my_addr<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="22">request<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">my_addr<pos:position pos:line="25" pos:column="38"/></name></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">answer<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name><name pos:line="26" pos:column="18">ch<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">fastCheck<pos:position pos:line="26" pos:column="30"/></name></name><argument_list pos:line="26" pos:column="30">()<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">answer<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">==<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25"> <block pos:line="28" pos:column="26">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">err<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">errorCon<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">ERR_FORWARDING_DENIED<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">HTTP_FORBIDDEN<pos:position pos:line="29" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="67">request<pos:position pos:line="29" pos:column="74"/></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">status_ptr<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">HTTP_FORBIDDEN<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">errorSend<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">fd<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">err<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
            <return pos:line="32" pos:column="13">return;<pos:position pos:line="32" pos:column="20"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">debugs<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">26<pos:position pos:line="36" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="16">3<pos:position pos:line="36" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="19">"tunnelStart: '"<pos:position pos:line="36" pos:column="35"/></literal> <operator pos:line="36" pos:column="36">&lt;&lt;<pos:position pos:line="36" pos:column="44"/></operator> <call><name pos:line="36" pos:column="39">RequestMethodStr<pos:position pos:line="36" pos:column="55"/></name><argument_list pos:line="36" pos:column="55">(<argument><expr><name><name pos:line="36" pos:column="56">request<pos:position pos:line="36" pos:column="63"/></name><operator pos:line="36" pos:column="63">-&gt;<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="65">method<pos:position pos:line="36" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="72"/></argument_list></call> <operator pos:line="36" pos:column="73">&lt;&lt;<pos:position pos:line="36" pos:column="81"/></operator> <literal type="string" pos:line="36" pos:column="76">" "<pos:position pos:line="36" pos:column="79"/></literal> <operator pos:line="36" pos:column="80">&lt;&lt;<pos:position pos:line="36" pos:column="88"/></operator> <name pos:line="36" pos:column="83">url<pos:position pos:line="36" pos:column="86"/></name> <operator pos:line="36" pos:column="87">&lt;&lt;<pos:position pos:line="36" pos:column="95"/></operator> <literal type="string" pos:line="36" pos:column="90">"'"<pos:position pos:line="36" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">statCounter<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">.<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">server<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">all<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">requests<pos:position pos:line="37" pos:column="36"/></name></name><operator pos:line="37" pos:column="36">++<pos:position pos:line="37" pos:column="38"/></operator></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">statCounter<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">.<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">server<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">.<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">other<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">.<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">requests<pos:position pos:line="38" pos:column="38"/></name></name><operator pos:line="38" pos:column="38">++<pos:position pos:line="38" pos:column="40"/></operator></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="39" pos:column="5">/* Create socket. */</comment>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">IpAddress<pos:position pos:line="40" pos:column="14"/></name></type> <name pos:line="40" pos:column="15">temp<pos:position pos:line="40" pos:column="19"/></name> <init pos:line="40" pos:column="20">= <expr><call><name pos:line="40" pos:column="22">getOutgoingAddr<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">request<pos:position pos:line="40" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="40" pos:column="46">NULL<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="52"/></decl_stmt>

    <comment type="line" pos:line="42" pos:column="5">// if IPv6 is disabled try to force IPv4-only outgoing.</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">!<pos:position pos:line="43" pos:column="10"/></operator><name><name pos:line="43" pos:column="10">Ip<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">::<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">EnableIpv6<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">&amp;&amp;<pos:position pos:line="43" pos:column="35"/></operator> <operator pos:line="43" pos:column="28">!<pos:position pos:line="43" pos:column="29"/></operator><call><name><name pos:line="43" pos:column="29">temp<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">.<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">SetIPv4<pos:position pos:line="43" pos:column="41"/></name></name><argument_list pos:line="43" pos:column="41">()<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">50<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="20">4<pos:position pos:line="44" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="23">"tunnelStart: IPv6 is Disabled. Tunnel failed from "<pos:position pos:line="44" pos:column="75"/></literal> <operator pos:line="44" pos:column="76">&lt;&lt;<pos:position pos:line="44" pos:column="84"/></operator> <name pos:line="44" pos:column="79">temp<pos:position pos:line="44" pos:column="83"/></name></expr></argument>)<pos:position pos:line="44" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="85"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">ErrorState<pos:position pos:line="45" pos:column="19"/></name> <modifier pos:line="45" pos:column="20">*<pos:position pos:line="45" pos:column="21"/></modifier></type><name pos:line="45" pos:column="21">anErr<pos:position pos:line="45" pos:column="26"/></name> <init pos:line="45" pos:column="27">= <expr><call><name pos:line="45" pos:column="29">errorCon<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><name pos:line="45" pos:column="38">ERR_CONNECT_FAIL<pos:position pos:line="45" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="56">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="45" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="82">request<pos:position pos:line="45" pos:column="89"/></name></expr></argument>)<pos:position pos:line="45" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="91"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">anErr<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">xerrno<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <name pos:line="46" pos:column="25">EAFNOSUPPORT<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">errorSend<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">fd<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">anErr<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
        <return pos:line="48" pos:column="9">return;<pos:position pos:line="48" pos:column="16"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="51" pos:column="5">// if IPv6 is split-stack, prefer IPv4</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">Ip<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">::<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">EnableIpv6<pos:position pos:line="52" pos:column="23"/></name></name><operator pos:line="52" pos:column="23">&amp;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="52" pos:column="47"/></name></expr>)<pos:position pos:line="52" pos:column="48"/></condition><then pos:line="52" pos:column="48"> <block pos:line="52" pos:column="49">{
        <comment type="line" pos:line="53" pos:column="9">// NP: This is not a great choice of default,</comment>
        <comment type="line" pos:line="54" pos:column="9">// but with the current Internet being IPv4-majority has a higher success rate.</comment>
        <comment type="line" pos:line="55" pos:column="9">// if setting to IPv4 fails we dont care, that just means to use IPv6 outgoing.</comment>
        <expr_stmt><expr><call><name><name pos:line="56" pos:column="9">temp<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">.<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">SetIPv4<pos:position pos:line="56" pos:column="21"/></name></name><argument_list pos:line="56" pos:column="21">()<pos:position pos:line="56" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="59" pos:column="5">int<pos:position pos:line="59" pos:column="8"/></name></type> <name pos:line="59" pos:column="9">flags<pos:position pos:line="59" pos:column="14"/></name> <init pos:line="59" pos:column="15">= <expr><name pos:line="59" pos:column="17">COMM_NONBLOCKING<pos:position pos:line="59" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="34"/></decl_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">request<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">flags<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">.<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="24">spoof_client_ip<pos:position pos:line="60" pos:column="39"/></name></name></expr>)<pos:position pos:line="60" pos:column="40"/></condition><then pos:line="60" pos:column="40"> <block pos:line="60" pos:column="41">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">flags<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">|=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">COMM_TRANSPARENT<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="63" pos:column="5">sock<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">comm_openex<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">SOCK_STREAM<pos:position pos:line="63" pos:column="35"/></name></expr></argument>,
                       <argument><expr><name pos:line="64" pos:column="24">IPPROTO_TCP<pos:position pos:line="64" pos:column="35"/></name></expr></argument>,
                       <argument><expr><name pos:line="65" pos:column="24">temp<pos:position pos:line="65" pos:column="28"/></name></expr></argument>,
                       <argument><expr><name pos:line="66" pos:column="24">flags<pos:position pos:line="66" pos:column="29"/></name></expr></argument>,
                       <argument><expr><call><name pos:line="67" pos:column="24">getOutgoingTOS<pos:position pos:line="67" pos:column="38"/></name><argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">request<pos:position pos:line="67" pos:column="46"/></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr></argument>,
                       <argument><expr><name pos:line="68" pos:column="24">url<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">sock<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">==<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="17">COMM_ERROR<pos:position pos:line="70" pos:column="27"/></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">debugs<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><literal type="number" pos:line="71" pos:column="16">26<pos:position pos:line="71" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="20">4<pos:position pos:line="71" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="23">"tunnelStart: Failed because we're out of sockets."<pos:position pos:line="71" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">err<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">=<pos:position pos:line="72" pos:column="14"/></operator> <call><name pos:line="72" pos:column="15">errorCon<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><name pos:line="72" pos:column="24">ERR_SOCKET_FAILURE<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="72" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="72">request<pos:position pos:line="72" pos:column="79"/></name></expr></argument>)<pos:position pos:line="72" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="73" pos:column="9">*<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">status_ptr<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="73" pos:column="49"/></name></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">err<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">xerrno<pos:position pos:line="74" pos:column="20"/></name></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <name pos:line="74" pos:column="23">errno<pos:position pos:line="74" pos:column="28"/></name></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">errorSend<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">fd<pos:position pos:line="75" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="23">err<pos:position pos:line="75" pos:column="26"/></name></expr></argument>)<pos:position pos:line="75" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
        <return pos:line="76" pos:column="9">return;<pos:position pos:line="76" pos:column="16"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="79" pos:column="5">// record local IP:port for %&lt;la and %&lt;lp logging</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><call><name pos:line="80" pos:column="9">comm_local_port<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">sock<pos:position pos:line="80" pos:column="29"/></name></expr></argument>)<pos:position pos:line="80" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="31"/></condition><then pos:line="80" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="9">request<pos:position pos:line="81" pos:column="16"/></name><operator pos:line="81" pos:column="16">-&gt;<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="18">hier<pos:position pos:line="81" pos:column="22"/></name><operator pos:line="81" pos:column="22">.<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="23">peer_local_addr<pos:position pos:line="81" pos:column="38"/></name></name> <operator pos:line="81" pos:column="39">=<pos:position pos:line="81" pos:column="40"/></operator> <name><name pos:line="81" pos:column="41">fd_table<pos:position pos:line="81" pos:column="49"/></name><index pos:line="81" pos:column="49">[<expr><name pos:line="81" pos:column="50">sock<pos:position pos:line="81" pos:column="54"/></name></expr>]<pos:position pos:line="81" pos:column="55"/></index></name><operator pos:line="81" pos:column="55">.<pos:position pos:line="81" pos:column="56"/></operator><name pos:line="81" pos:column="56">local_addr<pos:position pos:line="81" pos:column="66"/></name></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="83" pos:column="5">tunnelState<pos:position pos:line="83" pos:column="16"/></name> <operator pos:line="83" pos:column="17">=<pos:position pos:line="83" pos:column="18"/></operator> <operator pos:line="83" pos:column="19">new<pos:position pos:line="83" pos:column="22"/></operator> <name pos:line="83" pos:column="23">TunnelStateData<pos:position pos:line="83" pos:column="38"/></name></expr>;<pos:position pos:line="83" pos:column="39"/></expr_stmt>
<cpp:if pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">if<pos:position pos:line="84" pos:column="4"/></cpp:directive> <expr><name pos:line="84" pos:column="5">DELAY_POOLS<pos:position pos:line="84" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name><name pos:line="86" pos:column="5">tunnelState<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">-&gt;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="18">server<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">.<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="25">setDelayId<pos:position pos:line="86" pos:column="35"/></name></name><argument_list pos:line="86" pos:column="35">(<argument><expr><call><name><name pos:line="86" pos:column="36">DelayId<pos:position pos:line="86" pos:column="43"/></name><operator pos:line="86" pos:column="43">::<pos:position pos:line="86" pos:column="45"/></operator><name pos:line="86" pos:column="45">DelayClient<pos:position pos:line="86" pos:column="56"/></name></name><argument_list pos:line="86" pos:column="56">(<argument><expr><name pos:line="86" pos:column="57">http<pos:position pos:line="86" pos:column="61"/></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="89" pos:column="5">tunnelState<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">-&gt;<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="18">url<pos:position pos:line="89" pos:column="21"/></name></name> <operator pos:line="89" pos:column="22">=<pos:position pos:line="89" pos:column="23"/></operator> <call><name pos:line="89" pos:column="24">xstrdup<pos:position pos:line="89" pos:column="31"/></name><argument_list pos:line="89" pos:column="31">(<argument><expr><name pos:line="89" pos:column="32">url<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="90" pos:column="5">tunnelState<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">request<pos:position pos:line="90" pos:column="25"/></name></name> <operator pos:line="90" pos:column="26">=<pos:position pos:line="90" pos:column="27"/></operator> <call><name pos:line="90" pos:column="28">HTTPMSGLOCK<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><name pos:line="90" pos:column="40">request<pos:position pos:line="90" pos:column="47"/></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">tunnelState<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">server<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">.<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="25">size_ptr<pos:position pos:line="91" pos:column="33"/></name></name> <operator pos:line="91" pos:column="34">=<pos:position pos:line="91" pos:column="35"/></operator> <name pos:line="91" pos:column="36">size_ptr<pos:position pos:line="91" pos:column="44"/></name></expr>;<pos:position pos:line="91" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">tunnelState<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">-&gt;<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="18">status_ptr<pos:position pos:line="92" pos:column="28"/></name></name> <operator pos:line="92" pos:column="29">=<pos:position pos:line="92" pos:column="30"/></operator> <name pos:line="92" pos:column="31">status_ptr<pos:position pos:line="92" pos:column="41"/></name></expr>;<pos:position pos:line="92" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="93" pos:column="5">tunnelState<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">client<pos:position pos:line="93" pos:column="24"/></name><operator pos:line="93" pos:column="24">.<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="25">fd<pos:position pos:line="93" pos:column="27"/></name></name><argument_list pos:line="93" pos:column="27">(<argument><expr><name pos:line="93" pos:column="28">fd<pos:position pos:line="93" pos:column="30"/></name></expr></argument>)<pos:position pos:line="93" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="94" pos:column="5">tunnelState<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">server<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">.<pos:position pos:line="94" pos:column="25"/></operator><name pos:line="94" pos:column="25">fd<pos:position pos:line="94" pos:column="27"/></name></name><argument_list pos:line="94" pos:column="27">(<argument><expr><name pos:line="94" pos:column="28">sock<pos:position pos:line="94" pos:column="32"/></name></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">comm_add_close_handler<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><call><name><name pos:line="95" pos:column="28">tunnelState<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">-&gt;<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="41">server<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">.<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="48">fd<pos:position pos:line="95" pos:column="50"/></name></name><argument_list pos:line="95" pos:column="50">()<pos:position pos:line="95" pos:column="52"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="96" pos:column="28">tunnelServerClosed<pos:position pos:line="96" pos:column="46"/></name></expr></argument>,
                           <argument><expr><name pos:line="97" pos:column="28">tunnelState<pos:position pos:line="97" pos:column="39"/></name></expr></argument>)<pos:position pos:line="97" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">comm_add_close_handler<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">(<argument><expr><call><name><name pos:line="98" pos:column="28">tunnelState<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">-&gt;<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="41">client<pos:position pos:line="98" pos:column="47"/></name><operator pos:line="98" pos:column="47">.<pos:position pos:line="98" pos:column="48"/></operator><name pos:line="98" pos:column="48">fd<pos:position pos:line="98" pos:column="50"/></name></name><argument_list pos:line="98" pos:column="50">()<pos:position pos:line="98" pos:column="52"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="99" pos:column="28">tunnelClientClosed<pos:position pos:line="99" pos:column="46"/></name></expr></argument>,
                           <argument><expr><name pos:line="100" pos:column="28">tunnelState<pos:position pos:line="100" pos:column="39"/></name></expr></argument>)<pos:position pos:line="100" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">commSetTimeout<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><call><name><name pos:line="101" pos:column="20">tunnelState<pos:position pos:line="101" pos:column="31"/></name><operator pos:line="101" pos:column="31">-&gt;<pos:position pos:line="101" pos:column="36"/></operator><name pos:line="101" pos:column="33">client<pos:position pos:line="101" pos:column="39"/></name><operator pos:line="101" pos:column="39">.<pos:position pos:line="101" pos:column="40"/></operator><name pos:line="101" pos:column="40">fd<pos:position pos:line="101" pos:column="42"/></name></name><argument_list pos:line="101" pos:column="42">()<pos:position pos:line="101" pos:column="44"/></argument_list></call></expr></argument>,
                   <argument><expr><name><name pos:line="102" pos:column="20">Config<pos:position pos:line="102" pos:column="26"/></name><operator pos:line="102" pos:column="26">.<pos:position pos:line="102" pos:column="27"/></operator><name pos:line="102" pos:column="27">Timeout<pos:position pos:line="102" pos:column="34"/></name><operator pos:line="102" pos:column="34">.<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="35">lifetime<pos:position pos:line="102" pos:column="43"/></name></name></expr></argument>,
                   <argument><expr><name pos:line="103" pos:column="20">tunnelTimeout<pos:position pos:line="103" pos:column="33"/></name></expr></argument>,
                   <argument><expr><name pos:line="104" pos:column="20">tunnelState<pos:position pos:line="104" pos:column="31"/></name></expr></argument>)<pos:position pos:line="104" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">commSetTimeout<pos:position pos:line="105" pos:column="19"/></name><argument_list pos:line="105" pos:column="19">(<argument><expr><call><name><name pos:line="105" pos:column="20">tunnelState<pos:position pos:line="105" pos:column="31"/></name><operator pos:line="105" pos:column="31">-&gt;<pos:position pos:line="105" pos:column="36"/></operator><name pos:line="105" pos:column="33">server<pos:position pos:line="105" pos:column="39"/></name><operator pos:line="105" pos:column="39">.<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="40">fd<pos:position pos:line="105" pos:column="42"/></name></name><argument_list pos:line="105" pos:column="42">()<pos:position pos:line="105" pos:column="44"/></argument_list></call></expr></argument>,
                   <argument><expr><name><name pos:line="106" pos:column="20">Config<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">.<pos:position pos:line="106" pos:column="27"/></operator><name pos:line="106" pos:column="27">Timeout<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">.<pos:position pos:line="106" pos:column="35"/></operator><name pos:line="106" pos:column="35">connect<pos:position pos:line="106" pos:column="42"/></name></name></expr></argument>,
                   <argument><expr><name pos:line="107" pos:column="20">tunnelConnectTimeout<pos:position pos:line="107" pos:column="40"/></name></expr></argument>,
                   <argument><expr><name pos:line="108" pos:column="20">tunnelState<pos:position pos:line="108" pos:column="31"/></name></expr></argument>)<pos:position pos:line="108" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">peerSelect<pos:position pos:line="109" pos:column="15"/></name><argument_list pos:line="109" pos:column="15">(<argument><expr><name pos:line="109" pos:column="16">request<pos:position pos:line="109" pos:column="23"/></name></expr></argument>,
               <argument><expr><name pos:line="110" pos:column="16">NULL<pos:position pos:line="110" pos:column="20"/></name></expr></argument>,
               <argument><expr><name pos:line="111" pos:column="16">tunnelPeerSelectComplete<pos:position pos:line="111" pos:column="40"/></name></expr></argument>,
               <argument><expr><name pos:line="112" pos:column="16">tunnelState<pos:position pos:line="112" pos:column="27"/></name></expr></argument>)<pos:position pos:line="112" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="29"/></expr_stmt>
}<pos:position pos:line="113" pos:column="2"/></block></function></unit>

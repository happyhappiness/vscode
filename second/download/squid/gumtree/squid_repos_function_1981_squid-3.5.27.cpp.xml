<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1981_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">neighborIgnoreNonPeer<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name><name pos:line="2" pos:column="29">Ip<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">Address<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="42">from<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">icp_opcode<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">opcode<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">np<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">np<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">non_peers<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></init> <condition><expr><name pos:line="6" pos:column="26">np<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></condition> <incr><expr><name pos:line="6" pos:column="30">np<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">=<pos:position pos:line="6" pos:column="34"/></operator> <name><name pos:line="6" pos:column="35">np<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">next<pos:position pos:line="6" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="44"/></control> <block pos:line="6" pos:column="45">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">np<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">in_addr<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">!=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">from<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
            <block type="pseudo"><continue pos:line="8" pos:column="13">continue;<pos:position pos:line="8" pos:column="22"/></continue></block></then></if>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name><name pos:line="10" pos:column="13">np<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">in_addr<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">port<pos:position pos:line="10" pos:column="29"/></name></name><argument_list pos:line="10" pos:column="29">()<pos:position pos:line="10" pos:column="31"/></argument_list></call> <operator pos:line="10" pos:column="32">!=<pos:position pos:line="10" pos:column="34"/></operator> <call><name><name pos:line="10" pos:column="35">from<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">.<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">port<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
            <block type="pseudo"><continue pos:line="11" pos:column="13">continue;<pos:position pos:line="11" pos:column="22"/></continue></block></then></if>

        <break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break>
    }<pos:position pos:line="14" pos:column="6"/></block></for>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">np<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">NULL<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">np<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="14">(<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">CachePeer<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator><call><name pos:line="17" pos:column="27">xcalloc<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><literal type="number" pos:line="17" pos:column="35">1<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="38">sizeof<argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">CachePeer<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">np<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">in_addr<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">from<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">np<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">icp<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">port<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name><name pos:line="19" pos:column="24">from<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">port<pos:position pos:line="19" pos:column="33"/></name></name><argument_list pos:line="19" pos:column="33">()<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">np<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">type<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">PEER_NONE<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">np<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">host<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">new<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">char<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><name pos:line="21" pos:column="29">MAX_IPSTRLEN<pos:position pos:line="21" pos:column="41"/></name></expr>]<pos:position pos:line="21" pos:column="42"/></index></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">from<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">toStr<pos:position pos:line="22" pos:column="19"/></name></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name><name pos:line="22" pos:column="20">np<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">host<pos:position pos:line="22" pos:column="28"/></name></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="29">MAX_IPSTRLEN<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">np<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">next<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">non_peers<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">non_peers<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">np<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="27" pos:column="5">++<pos:position pos:line="27" pos:column="7"/></operator> <name><name pos:line="27" pos:column="8">np<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">icp<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">.<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">counts<pos:position pos:line="27" pos:column="22"/></name><index pos:line="27" pos:column="22">[<expr><name pos:line="27" pos:column="23">opcode<pos:position pos:line="27" pos:column="29"/></name></expr>]<pos:position pos:line="27" pos:column="30"/></index></name></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">isPowTen<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><operator pos:line="29" pos:column="18">++<pos:position pos:line="29" pos:column="20"/></operator><name><name pos:line="29" pos:column="20">np<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">stats<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">ignored_replies<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">15<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="20">DBG_IMPORTANT<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"WARNING: Ignored "<pos:position pos:line="30" pos:column="54"/></literal> <operator pos:line="30" pos:column="55">&lt;&lt;<pos:position pos:line="30" pos:column="63"/></operator> <name><name pos:line="30" pos:column="58">np<pos:position pos:line="30" pos:column="60"/></name><operator pos:line="30" pos:column="60">-&gt;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="62">stats<pos:position pos:line="30" pos:column="67"/></name><operator pos:line="30" pos:column="67">.<pos:position pos:line="30" pos:column="68"/></operator><name pos:line="30" pos:column="68">ignored_replies<pos:position pos:line="30" pos:column="83"/></name></name> <operator pos:line="30" pos:column="84">&lt;&lt;<pos:position pos:line="30" pos:column="92"/></operator> <literal type="string" pos:line="30" pos:column="87">" replies from non-peer "<pos:position pos:line="30" pos:column="112"/></literal> <operator pos:line="30" pos:column="113">&lt;&lt;<pos:position pos:line="30" pos:column="121"/></operator> <name><name pos:line="30" pos:column="116">np<pos:position pos:line="30" pos:column="118"/></name><operator pos:line="30" pos:column="118">-&gt;<pos:position pos:line="30" pos:column="123"/></operator><name pos:line="30" pos:column="120">host<pos:position pos:line="30" pos:column="124"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="126"/></expr_stmt></block></then></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

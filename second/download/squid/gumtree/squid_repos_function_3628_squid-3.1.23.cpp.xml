<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3628_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">IpIntercept<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">PfInterception<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">fd<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">IpAddress<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="54">me<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">IpAddress<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">&amp;<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="69">client<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">IpAddress<pos:position pos:line="2" pos:column="86"/></name> <modifier pos:line="2" pos:column="87">&amp;<pos:position pos:line="2" pos:column="92"/></modifier></type><name pos:line="2" pos:column="88">dst<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="93">int<pos:position pos:line="2" pos:column="96"/></name></type> <name pos:line="2" pos:column="97">silent<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="104"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">PF_TRANSPARENT<pos:position pos:line="4" pos:column="19"/></name></expr></cpp:if>  <comment type="block" pos:line="4" pos:column="21">/* --enable-pf-transparent */</comment>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">pfioc_natlook<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">nl<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">int<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">pffd<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><operator pos:line="7" pos:column="23">-<pos:position pos:line="7" pos:column="24"/></operator><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">pffd<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&lt;<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">pffd<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">open<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"/dev/pf"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">O_RDONLY<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">pffd<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&lt;<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">silent<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">89<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="24">DBG_IMPORTANT<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">HERE<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">&lt;&lt;<pos:position pos:line="14" pos:column="52"/></operator> <literal type="string" pos:line="14" pos:column="47">"PF open failed: "<pos:position pos:line="14" pos:column="65"/></literal> <operator pos:line="14" pos:column="66">&lt;&lt;<pos:position pos:line="14" pos:column="74"/></operator> <call><name pos:line="14" pos:column="69">xstrerror<pos:position pos:line="14" pos:column="78"/></name><argument_list pos:line="14" pos:column="78">()<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">last_reported<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">squid_curtime<pos:position pos:line="15" pos:column="42"/></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memset<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><operator pos:line="20" pos:column="12">&amp;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="13">nl<pos:position pos:line="20" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="20">sizeof<argument_list pos:line="20" pos:column="26">(<argument><expr pos:line="20" pos:column="27">struct <name pos:line="20" pos:column="34">pfioc_natlook<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">dst<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">GetInAddr<pos:position pos:line="21" pos:column="18"/></name></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">nl<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">saddr<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">v4<pos:position pos:line="21" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">nl<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">.<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">sport<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">htons<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><call><name><name pos:line="22" pos:column="22">dst<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">GetPort<pos:position pos:line="22" pos:column="33"/></name></name><argument_list pos:line="22" pos:column="33">()<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">me<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">.<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">GetInAddr<pos:position pos:line="24" pos:column="17"/></name></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name><name pos:line="24" pos:column="18">nl<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">daddr<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">v4<pos:position pos:line="24" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">nl<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">.<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">dport<pos:position pos:line="25" pos:column="13"/></name></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">htons<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><call><name><name pos:line="25" pos:column="22">me<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">GetPort<pos:position pos:line="25" pos:column="32"/></name></name><argument_list pos:line="25" pos:column="32">()<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">nl<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">.<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">af<pos:position pos:line="27" pos:column="10"/></name></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">AF_INET<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">nl<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">.<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">proto<pos:position pos:line="28" pos:column="13"/></name></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">IPPROTO_TCP<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">nl<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">.<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">direction<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">PF_OUT<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">ioctl<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">pffd<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="21">DIOCNATLOOK<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">nl<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39"> <block pos:line="31" pos:column="40">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">errno<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">!=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">ENOENT<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29"> <block pos:line="32" pos:column="30">{
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">!<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">silent<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">debugs<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="number" pos:line="34" pos:column="24">89<pos:position pos:line="34" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="28">DBG_IMPORTANT<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">HERE<pos:position pos:line="34" pos:column="47"/></name> <operator pos:line="34" pos:column="48">&lt;&lt;<pos:position pos:line="34" pos:column="56"/></operator> <literal type="string" pos:line="34" pos:column="51">"PF lookup failed: ioctl(DIOCNATLOOK)"<pos:position pos:line="34" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="91"/></expr_stmt>
                <expr_stmt><expr><name pos:line="35" pos:column="17">last_reported<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="33">squid_curtime<pos:position pos:line="35" pos:column="46"/></name></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">close<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">pffd<pos:position pos:line="37" pos:column="23"/></name></expr></argument>)<pos:position pos:line="37" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">pffd<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="20">-<pos:position pos:line="38" pos:column="21"/></operator><literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then> <else pos:line="40" pos:column="7">else <block pos:line="40" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">int<pos:position pos:line="41" pos:column="12"/></name></type> <name pos:line="41" pos:column="13">natted<pos:position pos:line="41" pos:column="19"/></name> <init pos:line="41" pos:column="20">= <expr><operator pos:line="41" pos:column="22">(<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">client<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">!=<pos:position pos:line="41" pos:column="32"/></operator> <name><name pos:line="41" pos:column="33">nl<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">.<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">rdaddr<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">.<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">v4<pos:position pos:line="41" pos:column="45"/></name></name><operator pos:line="41" pos:column="45">)<pos:position pos:line="41" pos:column="46"/></operator></expr></init></decl>;<pos:position pos:line="41" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">client<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name><name pos:line="42" pos:column="18">nl<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">.<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">rdaddr<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">v4<pos:position pos:line="42" pos:column="30"/></name></name></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="43" pos:column="9">client<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">.<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">SetPort<pos:position pos:line="43" pos:column="23"/></name></name><argument_list pos:line="43" pos:column="23">(<argument><expr><call><name pos:line="43" pos:column="24">ntohs<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name><name pos:line="43" pos:column="30">nl<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">.<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">rdport<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">natted<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20"> <block pos:line="45" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">debugs<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><literal type="number" pos:line="46" pos:column="20">89<pos:position pos:line="46" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="24">5<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">HERE<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">&lt;&lt;<pos:position pos:line="46" pos:column="40"/></operator> <literal type="string" pos:line="46" pos:column="35">"address NAT: me= "<pos:position pos:line="46" pos:column="54"/></literal> <operator pos:line="46" pos:column="55">&lt;&lt;<pos:position pos:line="46" pos:column="63"/></operator> <name pos:line="46" pos:column="58">me<pos:position pos:line="46" pos:column="60"/></name> <operator pos:line="46" pos:column="61">&lt;&lt;<pos:position pos:line="46" pos:column="69"/></operator> <literal type="string" pos:line="46" pos:column="64">", client= "<pos:position pos:line="46" pos:column="76"/></literal> <operator pos:line="46" pos:column="77">&lt;&lt;<pos:position pos:line="46" pos:column="85"/></operator> <name pos:line="46" pos:column="80">client<pos:position pos:line="46" pos:column="86"/></name> <operator pos:line="46" pos:column="87">&lt;&lt;<pos:position pos:line="46" pos:column="95"/></operator> <literal type="string" pos:line="46" pos:column="90">", dst= "<pos:position pos:line="46" pos:column="99"/></literal> <operator pos:line="46" pos:column="100">&lt;&lt;<pos:position pos:line="46" pos:column="108"/></operator> <name pos:line="46" pos:column="103">dst<pos:position pos:line="46" pos:column="106"/></name></expr></argument>)<pos:position pos:line="46" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="108"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">debugs<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><literal type="number" pos:line="51" pos:column="12">89<pos:position pos:line="51" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="16">9<pos:position pos:line="51" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="19">HERE<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">&lt;&lt;<pos:position pos:line="51" pos:column="32"/></operator> <literal type="string" pos:line="51" pos:column="27">"address: me= "<pos:position pos:line="51" pos:column="42"/></literal> <operator pos:line="51" pos:column="43">&lt;&lt;<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="46">me<pos:position pos:line="51" pos:column="48"/></name> <operator pos:line="51" pos:column="49">&lt;&lt;<pos:position pos:line="51" pos:column="57"/></operator> <literal type="string" pos:line="51" pos:column="52">", client= "<pos:position pos:line="51" pos:column="64"/></literal> <operator pos:line="51" pos:column="65">&lt;&lt;<pos:position pos:line="51" pos:column="73"/></operator> <name pos:line="51" pos:column="68">client<pos:position pos:line="51" pos:column="74"/></name> <operator pos:line="51" pos:column="75">&lt;&lt;<pos:position pos:line="51" pos:column="83"/></operator> <literal type="string" pos:line="51" pos:column="78">", dst= "<pos:position pos:line="51" pos:column="87"/></literal> <operator pos:line="51" pos:column="88">&lt;&lt;<pos:position pos:line="51" pos:column="96"/></operator> <name pos:line="51" pos:column="91">dst<pos:position pos:line="51" pos:column="94"/></name></expr></argument>)<pos:position pos:line="51" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="96"/></expr_stmt>

<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="53" pos:column="8">/* --enable-pf-transparent */</comment>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">-<pos:position pos:line="54" pos:column="13"/></operator><literal type="number" pos:line="54" pos:column="13">1<pos:position pos:line="54" pos:column="14"/></literal></expr>;<pos:position pos:line="54" pos:column="15"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3400_squid-3.1.23.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">operator <name pos:line="2" pos:column="31">new<pos:position pos:line="2" pos:column="34"/></name></name></name> <parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name pos:line="2" pos:column="36">size_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">byteCount<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* derived classes with different sizes must implement their own new */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">byteCount<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">==<pos:position pos:line="5" pos:column="25"/></operator> <sizeof pos:line="5" pos:column="26">sizeof <argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">ClientSocketContext<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">ClientSocketContext<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">cbdataAlloc<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">ClientSocketContext<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

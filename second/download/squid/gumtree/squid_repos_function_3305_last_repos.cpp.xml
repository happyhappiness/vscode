<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3305_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">AccessCheck<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">checkCandidates<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">()<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">4<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"has "<pos:position pos:line="4" pos:column="33"/></literal> <operator pos:line="4" pos:column="34">&lt;&lt;<pos:position pos:line="4" pos:column="42"/></operator> <call><name><name pos:line="4" pos:column="37">candidates<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">.<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">size<pos:position pos:line="4" pos:column="52"/></name></name><argument_list pos:line="4" pos:column="52">()<pos:position pos:line="4" pos:column="54"/></argument_list></call> <operator pos:line="4" pos:column="55">&lt;&lt;<pos:position pos:line="4" pos:column="63"/></operator> <literal type="string" pos:line="4" pos:column="58">" rules"<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="68"/></expr_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">!<pos:position pos:line="6" pos:column="13"/></operator><call><name><name pos:line="6" pos:column="13">candidates<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">empty<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="32"/></condition> <block pos:line="6" pos:column="33">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<decl><type><name pos:line="7" pos:column="13">AccessRule<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">r<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><call><name pos:line="7" pos:column="29">FindRule<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><call><name pos:line="7" pos:column="38">topCandidate<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">()<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></init></decl>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54"> <block pos:line="7" pos:column="55">{
            <comment type="block" pos:line="8" pos:column="13">/* BUG 2526: what to do when r-&gt;acl is empty?? */</comment>
            <comment type="line" pos:line="9" pos:column="13">// XXX: we do not have access to conn-&gt;rfc931 here.</comment>
            <expr_stmt><expr><name pos:line="10" pos:column="13">acl_checklist<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">new<pos:position pos:line="10" pos:column="32"/></operator> <call><name pos:line="10" pos:column="33">ACLFilledChecklist<pos:position pos:line="10" pos:column="51"/></name><argument_list pos:line="10" pos:column="51">(<argument><expr><name><name pos:line="10" pos:column="52">r<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">acl<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="60">filter<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">.<pos:position pos:line="10" pos:column="67"/></operator><name pos:line="10" pos:column="67">request<pos:position pos:line="10" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="76">dash_str<pos:position pos:line="10" pos:column="84"/></name></expr></argument>)<pos:position pos:line="10" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="86"/></expr_stmt>
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="18">acl_checklist<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">reply<pos:position pos:line="11" pos:column="38"/></name></name> <operator pos:line="11" pos:column="39">=<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="41">filter<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">.<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">reply<pos:position pos:line="11" pos:column="53"/></name></name><operator pos:line="11" pos:column="53">)<pos:position pos:line="11" pos:column="54"/></operator></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">HTTPMSGLOCK<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">acl_checklist<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">reply<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">acl_checklist<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">al<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <name><name pos:line="13" pos:column="33">filter<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">al<pos:position pos:line="13" pos:column="42"/></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="14" pos:column="13">acl_checklist<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">nonBlockingCheck<pos:position pos:line="14" pos:column="44"/></name></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">AccessCheckCallbackWrapper<pos:position pos:line="14" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="73">this<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>
            <return pos:line="15" pos:column="13">return;<pos:position pos:line="15" pos:column="20"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">candidates<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">erase<pos:position pos:line="18" pos:column="25"/></name></name><argument_list pos:line="18" pos:column="25">(<argument><expr><call><name><name pos:line="18" pos:column="26">candidates<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">begin<pos:position pos:line="18" pos:column="42"/></name></name><argument_list pos:line="18" pos:column="42">()<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt> <comment type="line" pos:line="18" pos:column="47">// the rule apparently went away (reconfigure)</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">93<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">4<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">HERE<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">&lt;&lt;<pos:position pos:line="21" pos:column="32"/></operator> <literal type="string" pos:line="21" pos:column="27">"NO candidates left"<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">callBack<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">NULL<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">Must<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><call><name pos:line="23" pos:column="10">done<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">()<pos:position pos:line="23" pos:column="16"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1364_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">icpConnectionsOpen<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">u_int16_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">port<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">IpAddress<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">addr<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">addrinfo<pos:position pos:line="8" pos:column="20"/></name></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">xai<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">x<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">wordlist<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">s<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">port<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">Config<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">Port<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">icp<pos:position pos:line="12" pos:column="32"/></name></name><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">&lt;=<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
        <block type="pseudo"><return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">enter_suid<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">()<pos:position pos:line="15" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">addr<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name><name pos:line="17" pos:column="12">Config<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">.<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">Addrs<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">udp_incoming<pos:position pos:line="17" pos:column="37"/></name></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">addr<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">.<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">SetPort<pos:position pos:line="18" pos:column="17"/></name></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">port<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">Ip<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">::<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">EnableIpv6<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">&amp;&amp;<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="28">!<pos:position pos:line="20" pos:column="29"/></operator><call><name><name pos:line="20" pos:column="29">addr<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">SetIPv4<pos:position pos:line="20" pos:column="41"/></name></name><argument_list pos:line="20" pos:column="41">()<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">12<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="20">DBG_CRITICAL<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="34">"ERROR: IPv6 is disabled. "<pos:position pos:line="21" pos:column="61"/></literal> <operator pos:line="21" pos:column="62">&lt;&lt;<pos:position pos:line="21" pos:column="70"/></operator> <name pos:line="21" pos:column="65">addr<pos:position pos:line="21" pos:column="69"/></name> <operator pos:line="21" pos:column="70">&lt;&lt;<pos:position pos:line="21" pos:column="78"/></operator> <literal type="string" pos:line="21" pos:column="73">" is not an IPv4 address."<pos:position pos:line="21" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="101"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">fatal<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"ICP port cannot be opened."<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="24" pos:column="5">/* split-stack for now requires default IPv4-only ICP */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">Ip<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">::<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">EnableIpv6<pos:position pos:line="25" pos:column="23"/></name></name><operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">&amp;&amp;<pos:position pos:line="25" pos:column="58"/></operator> <call><name><name pos:line="25" pos:column="51">addr<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">.<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">IsAnyAddr<pos:position pos:line="25" pos:column="65"/></name></name><argument_list pos:line="25" pos:column="65">()<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="68"/></condition><then pos:line="25" pos:column="68"> <block pos:line="25" pos:column="69">{
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">addr<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">.<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">SetIPv4<pos:position pos:line="26" pos:column="21"/></name></name><argument_list pos:line="26" pos:column="21">()<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">theInIcpConnection<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <call><name pos:line="29" pos:column="26">comm_open_listener<pos:position pos:line="29" pos:column="44"/></name><argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">SOCK_DGRAM<pos:position pos:line="29" pos:column="55"/></name></expr></argument>,
                                            <argument><expr><name pos:line="30" pos:column="45">IPPROTO_UDP<pos:position pos:line="30" pos:column="56"/></name></expr></argument>,
                                            <argument><expr><name pos:line="31" pos:column="45">addr<pos:position pos:line="31" pos:column="49"/></name></expr></argument>,
                                            <argument><expr><name pos:line="32" pos:column="45">COMM_NONBLOCKING<pos:position pos:line="32" pos:column="61"/></name></expr></argument>,
                                            <argument><expr><literal type="string" pos:line="33" pos:column="45">"ICP Socket"<pos:position pos:line="33" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">leave_suid<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">()<pos:position pos:line="34" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">theInIcpConnection<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&lt;<pos:position pos:line="36" pos:column="32"/></operator> <literal type="number" pos:line="36" pos:column="30">0<pos:position pos:line="36" pos:column="31"/></literal></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">fatal<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="string" pos:line="37" pos:column="15">"Cannot open ICP Port"<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">commSetSelect<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">theInIcpConnection<pos:position pos:line="39" pos:column="37"/></name></expr></argument>,
                  <argument><expr><name pos:line="40" pos:column="19">COMM_SELECT_READ<pos:position pos:line="40" pos:column="35"/></name></expr></argument>,
                  <argument><expr><name pos:line="41" pos:column="19">icpHandleUdp<pos:position pos:line="41" pos:column="31"/></name></expr></argument>,
                  <argument><expr><name pos:line="42" pos:column="19">NULL<pos:position pos:line="42" pos:column="23"/></name></expr></argument>,
                  <argument><expr><literal type="number" pos:line="43" pos:column="19">0<pos:position pos:line="43" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>

    <for pos:line="45" pos:column="5">for <control pos:line="45" pos:column="9">(<init><expr><name pos:line="45" pos:column="10">s<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name><name pos:line="45" pos:column="14">Config<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">.<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">mcast_group_list<pos:position pos:line="45" pos:column="37"/></name></name></expr>;<pos:position pos:line="45" pos:column="38"/></init> <condition><expr><name pos:line="45" pos:column="39">s<pos:position pos:line="45" pos:column="40"/></name></expr>;<pos:position pos:line="45" pos:column="41"/></condition> <incr><expr><name pos:line="45" pos:column="42">s<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">=<pos:position pos:line="45" pos:column="45"/></operator> <name><name pos:line="45" pos:column="46">s<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">-&gt;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="49">next<pos:position pos:line="45" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="45" pos:column="54"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="9">ipcache_nbgethostbyname<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">s<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">key<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">mcastJoinGroups<pos:position pos:line="46" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="58">NULL<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">debugs<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="number" pos:line="48" pos:column="12">12<pos:position pos:line="48" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="16">1<pos:position pos:line="48" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="19">"Accepting ICP messages at "<pos:position pos:line="48" pos:column="47"/></literal> <operator pos:line="48" pos:column="48">&lt;&lt;<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="51">addr<pos:position pos:line="48" pos:column="55"/></name> <operator pos:line="48" pos:column="56">&lt;&lt;<pos:position pos:line="48" pos:column="64"/></operator> <literal type="string" pos:line="48" pos:column="59">", FD "<pos:position pos:line="48" pos:column="66"/></literal> <operator pos:line="48" pos:column="67">&lt;&lt;<pos:position pos:line="48" pos:column="75"/></operator> <name pos:line="48" pos:column="70">theInIcpConnection<pos:position pos:line="48" pos:column="88"/></name> <operator pos:line="48" pos:column="89">&lt;&lt;<pos:position pos:line="48" pos:column="97"/></operator> <literal type="string" pos:line="48" pos:column="92">"."<pos:position pos:line="48" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="97"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="50" pos:column="5">addr<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">.<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">SetEmpty<pos:position pos:line="50" pos:column="18"/></name></name><argument_list pos:line="50" pos:column="18">()<pos:position pos:line="50" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt> <comment type="line" pos:line="50" pos:column="22">// clear for next use.</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">addr<pos:position pos:line="51" pos:column="9"/></name> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <name><name pos:line="51" pos:column="12">Config<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">.<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">Addrs<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">.<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="25">udp_outgoing<pos:position pos:line="51" pos:column="37"/></name></name></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">( <expr><operator pos:line="52" pos:column="10">!<pos:position pos:line="52" pos:column="11"/></operator><call><name><name pos:line="52" pos:column="11">addr<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">.<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="16">IsNoAddr<pos:position pos:line="52" pos:column="24"/></name></name><argument_list pos:line="52" pos:column="24">()<pos:position pos:line="52" pos:column="26"/></argument_list></call></expr> )<pos:position pos:line="52" pos:column="28"/></condition><then pos:line="52" pos:column="28"> <block pos:line="52" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">enter_suid<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">()<pos:position pos:line="53" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="54" pos:column="9">addr<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">.<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">SetPort<pos:position pos:line="54" pos:column="21"/></name></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">port<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name><name pos:line="56" pos:column="14">Ip<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">::<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="18">EnableIpv6<pos:position pos:line="56" pos:column="28"/></name></name> <operator pos:line="56" pos:column="29">&amp;&amp;<pos:position pos:line="56" pos:column="39"/></operator> <operator pos:line="56" pos:column="32">!<pos:position pos:line="56" pos:column="33"/></operator><call><name><name pos:line="56" pos:column="33">addr<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">SetIPv4<pos:position pos:line="56" pos:column="45"/></name></name><argument_list pos:line="56" pos:column="45">()<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48"> <block pos:line="56" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">49<pos:position pos:line="57" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="24">DBG_CRITICAL<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="38">"ERROR: IPv6 is disabled. "<pos:position pos:line="57" pos:column="65"/></literal> <operator pos:line="57" pos:column="66">&lt;&lt;<pos:position pos:line="57" pos:column="74"/></operator> <name pos:line="57" pos:column="69">addr<pos:position pos:line="57" pos:column="73"/></name> <operator pos:line="57" pos:column="74">&lt;&lt;<pos:position pos:line="57" pos:column="82"/></operator> <literal type="string" pos:line="57" pos:column="77">" is not an IPv4 address."<pos:position pos:line="57" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">fatal<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><literal type="string" pos:line="58" pos:column="19">"ICP port cannot be opened."<pos:position pos:line="58" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="60" pos:column="9">/* split-stack for now requires default IPv4-only ICP */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">Ip<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">::<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">EnableIpv6<pos:position pos:line="61" pos:column="27"/></name></name><operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="28">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="61" pos:column="51"/></name> <operator pos:line="61" pos:column="52">&amp;&amp;<pos:position pos:line="61" pos:column="62"/></operator> <call><name><name pos:line="61" pos:column="55">addr<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">.<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="60">IsAnyAddr<pos:position pos:line="61" pos:column="69"/></name></name><argument_list pos:line="61" pos:column="69">()<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="72"/></condition><then pos:line="61" pos:column="72"> <block pos:line="61" pos:column="73">{
            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">addr<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">.<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">SetIPv4<pos:position pos:line="62" pos:column="25"/></name></name><argument_list pos:line="62" pos:column="25">()<pos:position pos:line="62" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="65" pos:column="9">theOutIcpConnection<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <call><name pos:line="65" pos:column="31">comm_open_listener<pos:position pos:line="65" pos:column="49"/></name><argument_list pos:line="65" pos:column="49">(<argument><expr><name pos:line="65" pos:column="50">SOCK_DGRAM<pos:position pos:line="65" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="66" pos:column="31">IPPROTO_UDP<pos:position pos:line="66" pos:column="42"/></name></expr></argument>,
                              <argument><expr><name pos:line="67" pos:column="31">addr<pos:position pos:line="67" pos:column="35"/></name></expr></argument>,
                              <argument><expr><name pos:line="68" pos:column="31">COMM_NONBLOCKING<pos:position pos:line="68" pos:column="47"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="69" pos:column="31">"ICP Port"<pos:position pos:line="69" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">leave_suid<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">()<pos:position pos:line="70" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>

        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">theOutIcpConnection<pos:position pos:line="72" pos:column="32"/></name> <operator pos:line="72" pos:column="33">&lt;<pos:position pos:line="72" pos:column="37"/></operator> <literal type="number" pos:line="72" pos:column="35">0<pos:position pos:line="72" pos:column="36"/></literal></expr>)<pos:position pos:line="72" pos:column="37"/></condition><then pos:line="72" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="13">fatal<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><literal type="string" pos:line="73" pos:column="19">"Cannot open Outgoing ICP Port"<pos:position pos:line="73" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="75" pos:column="9">commSetSelect<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><name pos:line="75" pos:column="23">theOutIcpConnection<pos:position pos:line="75" pos:column="42"/></name></expr></argument>,
                      <argument><expr><name pos:line="76" pos:column="23">COMM_SELECT_READ<pos:position pos:line="76" pos:column="39"/></name></expr></argument>,
                      <argument><expr><name pos:line="77" pos:column="23">icpHandleUdp<pos:position pos:line="77" pos:column="35"/></name></expr></argument>,
                      <argument><expr><name pos:line="78" pos:column="23">NULL<pos:position pos:line="78" pos:column="27"/></name></expr></argument>,
                      <argument><expr><literal type="number" pos:line="79" pos:column="23">0<pos:position pos:line="79" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="81" pos:column="9">debugs<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><literal type="number" pos:line="81" pos:column="16">12<pos:position pos:line="81" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="20">1<pos:position pos:line="81" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="23">"Outgoing ICP messages on port "<pos:position pos:line="81" pos:column="55"/></literal> <operator pos:line="81" pos:column="56">&lt;&lt;<pos:position pos:line="81" pos:column="64"/></operator> <call><name><name pos:line="81" pos:column="59">addr<pos:position pos:line="81" pos:column="63"/></name><operator pos:line="81" pos:column="63">.<pos:position pos:line="81" pos:column="64"/></operator><name pos:line="81" pos:column="64">GetPort<pos:position pos:line="81" pos:column="71"/></name></name><argument_list pos:line="81" pos:column="71">()<pos:position pos:line="81" pos:column="73"/></argument_list></call> <operator pos:line="81" pos:column="74">&lt;&lt;<pos:position pos:line="81" pos:column="82"/></operator> <literal type="string" pos:line="81" pos:column="77">", FD "<pos:position pos:line="81" pos:column="84"/></literal> <operator pos:line="81" pos:column="85">&lt;&lt;<pos:position pos:line="81" pos:column="93"/></operator> <name pos:line="81" pos:column="88">theOutIcpConnection<pos:position pos:line="81" pos:column="107"/></name> <operator pos:line="81" pos:column="108">&lt;&lt;<pos:position pos:line="81" pos:column="116"/></operator> <literal type="string" pos:line="81" pos:column="111">"."<pos:position pos:line="81" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="116"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="83" pos:column="9">fd_note<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><name pos:line="83" pos:column="17">theOutIcpConnection<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="38">"Outgoing ICP socket"<pos:position pos:line="83" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="85" pos:column="9">fd_note<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><name pos:line="85" pos:column="17">theInIcpConnection<pos:position pos:line="85" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="37">"Incoming ICP socket"<pos:position pos:line="85" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then> <else pos:line="86" pos:column="7">else <block pos:line="86" pos:column="12">{
        <expr_stmt><expr><name pos:line="87" pos:column="9">theOutIcpConnection<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">=<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="31">theInIcpConnection<pos:position pos:line="87" pos:column="49"/></name></expr>;<pos:position pos:line="87" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="90" pos:column="5">theOutICPAddr<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">.<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">SetEmpty<pos:position pos:line="90" pos:column="27"/></name></name><argument_list pos:line="90" pos:column="27">()<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="92" pos:column="5">theOutICPAddr<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">.<pos:position pos:line="92" pos:column="19"/></operator><name pos:line="92" pos:column="19">InitAddrInfo<pos:position pos:line="92" pos:column="31"/></name></name><argument_list pos:line="92" pos:column="31">(<argument><expr><name pos:line="92" pos:column="32">xai<pos:position pos:line="92" pos:column="35"/></name></expr></argument>)<pos:position pos:line="92" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="94" pos:column="5">x<pos:position pos:line="94" pos:column="6"/></name> <operator pos:line="94" pos:column="7">=<pos:position pos:line="94" pos:column="8"/></operator> <call><name pos:line="94" pos:column="9">getsockname<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">theOutIcpConnection<pos:position pos:line="94" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="42">xai<pos:position pos:line="94" pos:column="45"/></name><operator pos:line="94" pos:column="45">-&gt;<pos:position pos:line="94" pos:column="50"/></operator><name pos:line="94" pos:column="47">ai_addr<pos:position pos:line="94" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="56">&amp;<pos:position pos:line="94" pos:column="61"/></operator><name><name pos:line="94" pos:column="57">xai<pos:position pos:line="94" pos:column="60"/></name><operator pos:line="94" pos:column="60">-&gt;<pos:position pos:line="94" pos:column="65"/></operator><name pos:line="94" pos:column="62">ai_addrlen<pos:position pos:line="94" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="74"/></expr_stmt>

    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">x<pos:position pos:line="96" pos:column="10"/></name> <operator pos:line="96" pos:column="11">&lt;<pos:position pos:line="96" pos:column="15"/></operator> <literal type="number" pos:line="96" pos:column="13">0<pos:position pos:line="96" pos:column="14"/></literal></expr>)<pos:position pos:line="96" pos:column="15"/></condition><then pos:line="96" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="9">debugs<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><literal type="number" pos:line="97" pos:column="16">50<pos:position pos:line="97" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="20">1<pos:position pos:line="97" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="23">"theOutIcpConnection FD "<pos:position pos:line="97" pos:column="48"/></literal> <operator pos:line="97" pos:column="49">&lt;&lt;<pos:position pos:line="97" pos:column="57"/></operator> <name pos:line="97" pos:column="52">theOutIcpConnection<pos:position pos:line="97" pos:column="71"/></name> <operator pos:line="97" pos:column="72">&lt;&lt;<pos:position pos:line="97" pos:column="80"/></operator> <literal type="string" pos:line="97" pos:column="75">": getsockname: "<pos:position pos:line="97" pos:column="92"/></literal> <operator pos:line="97" pos:column="93">&lt;&lt;<pos:position pos:line="97" pos:column="101"/></operator> <call><name pos:line="97" pos:column="96">xstrerror<pos:position pos:line="97" pos:column="105"/></name><argument_list pos:line="97" pos:column="105">()<pos:position pos:line="97" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="109"/></expr_stmt></block></then>
    <else pos:line="98" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="9">theOutICPAddr<pos:position pos:line="99" pos:column="22"/></name> <operator pos:line="99" pos:column="23">=<pos:position pos:line="99" pos:column="24"/></operator> <operator pos:line="99" pos:column="25">*<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">xai<pos:position pos:line="99" pos:column="29"/></name></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="101" pos:column="5">theOutICPAddr<pos:position pos:line="101" pos:column="18"/></name><operator pos:line="101" pos:column="18">.<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="19">FreeAddrInfo<pos:position pos:line="101" pos:column="31"/></name></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">xai<pos:position pos:line="101" pos:column="35"/></name></expr></argument>)<pos:position pos:line="101" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="37"/></expr_stmt>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

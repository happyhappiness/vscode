<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3861_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">missingChainCertificatesUrls<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name><name pos:line="2" pos:column="35">std<pos:position pos:line="2" pos:column="38"/></name><operator pos:line="2" pos:column="38">::<pos:position pos:line="2" pos:column="40"/></operator><name><name pos:line="2" pos:column="40">queue<pos:position pos:line="2" pos:column="45"/></name><argument_list type="generic" pos:line="2" pos:column="45">&lt;<argument><expr><name pos:line="2" pos:column="46">SBuf<pos:position pos:line="2" pos:column="50"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="54"/></argument_list></name></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">URIs<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="59">Security<pos:position pos:line="2" pos:column="67"/></name><operator pos:line="2" pos:column="67">::<pos:position pos:line="2" pos:column="69"/></operator><name pos:line="2" pos:column="69">CertList<pos:position pos:line="2" pos:column="77"/></name></name> <specifier pos:line="2" pos:column="78">const<pos:position pos:line="2" pos:column="83"/></specifier> <modifier pos:line="2" pos:column="84">&amp;<pos:position pos:line="2" pos:column="89"/></modifier></type><name pos:line="2" pos:column="85">serverCertificates<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="104"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">serverCertificates<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">.<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">size<pos:position pos:line="4" pos:column="33"/></name></name><argument_list pos:line="4" pos:column="33">()<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="36"/></condition><then pos:line="4" pos:column="36">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><specifier pos:line="7" pos:column="10">const<pos:position pos:line="7" pos:column="15"/></specifier> <specifier pos:line="7" pos:column="16">auto<pos:position pos:line="7" pos:column="20"/></specifier> <modifier pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="22">i<pos:position pos:line="7" pos:column="23"/></name> <range pos:line="7" pos:column="24">: <expr><name pos:line="7" pos:column="26">serverCertificates<pos:position pos:line="7" pos:column="44"/></name></expr></range></decl></init>)<pos:position pos:line="7" pos:column="45"/></control> <block pos:line="7" pos:column="46">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<decl><type><specifier pos:line="8" pos:column="13">const<pos:position pos:line="8" pos:column="18"/></specifier> <name pos:line="8" pos:column="19">char<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">issuerUri<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><call><name pos:line="8" pos:column="37">uriOfIssuerIfMissing<pos:position pos:line="8" pos:column="57"/></name><argument_list pos:line="8" pos:column="57">(<argument><expr><call><name><name pos:line="8" pos:column="58">i<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">get<pos:position pos:line="8" pos:column="63"/></name></name><argument_list pos:line="8" pos:column="63">()<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">serverCertificates<pos:position pos:line="8" pos:column="85"/></name></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr></init></decl>)<pos:position pos:line="8" pos:column="87"/></condition><then pos:line="8" pos:column="87">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="13">URIs<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">push<pos:position pos:line="9" pos:column="22"/></name></name><argument_list pos:line="9" pos:column="22">(<argument><expr><call><name pos:line="9" pos:column="23">SBuf<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">issuerUri<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

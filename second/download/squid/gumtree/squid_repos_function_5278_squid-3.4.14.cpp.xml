<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5278_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Vector<pos:position pos:line="1" pos:column="7"/></name><argument_list type="generic" pos:line="1" pos:column="7">&lt;<argument><expr><name><name pos:line="1" pos:column="8">Auth<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">Scheme<pos:position pos:line="1" pos:column="20"/></name><operator pos:line="1" pos:column="20">::<pos:position pos:line="1" pos:column="22"/></operator><name pos:line="1" pos:column="22">Pointer<pos:position pos:line="1" pos:column="29"/></name></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="33"/></argument_list></name> <modifier pos:line="1" pos:column="31">&amp;<pos:position pos:line="1" pos:column="36"/></modifier></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Scheme<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">GetSchemes<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">_Schemes<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">_Schemes<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">new<pos:position pos:line="5" pos:column="23"/></operator> <name><name pos:line="5" pos:column="24">Vector<pos:position pos:line="5" pos:column="30"/></name><argument_list type="generic" pos:line="5" pos:column="30">&lt;<argument><expr><name><name pos:line="5" pos:column="31">Auth<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">::<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">Scheme<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">::<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">Pointer<pos:position pos:line="5" pos:column="52"/></name></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="56"/></argument_list></name></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt></block></then></if>

    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">_Schemes<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

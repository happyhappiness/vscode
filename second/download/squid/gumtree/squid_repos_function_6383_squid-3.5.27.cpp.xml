<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6383_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IcmpPinger<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">SendResult<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">pingerReplyData<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">preply<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">len<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">42<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">2<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"return result to squid. len="<pos:position pos:line="4" pos:column="57"/></literal> <operator pos:line="4" pos:column="58">&lt;&lt;<pos:position pos:line="4" pos:column="66"/></operator> <name pos:line="4" pos:column="61">len<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="66"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">send<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">socket_to_squid<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="31">&amp;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="32">preply<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">len<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call> <operator pos:line="6" pos:column="48">&lt;<pos:position pos:line="6" pos:column="52"/></operator> <literal type="number" pos:line="6" pos:column="50">0<pos:position pos:line="6" pos:column="51"/></literal></expr>)<pos:position pos:line="6" pos:column="52"/></condition><then pos:line="6" pos:column="52"> <block pos:line="6" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">42<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_CRITICAL<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"pinger: FATAL error on send: "<pos:position pos:line="7" pos:column="65"/></literal> <operator pos:line="7" pos:column="66">&lt;&lt;<pos:position pos:line="7" pos:column="74"/></operator> <call><name pos:line="7" pos:column="69">xstrerror<pos:position pos:line="7" pos:column="78"/></name><argument_list pos:line="7" pos:column="78">()<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">Close<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">()<pos:position pos:line="8" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">exit<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_299_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">user<pos:position pos:line="4" pos:column="15"/></name></decl>, <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="18">suser<pos:position pos:line="4" pos:column="23"/></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">p<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">HELPER_INPUT_BUFFER<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier><modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">grents<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">check_pw<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="23">ch<pos:position pos:line="7" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="27">ngroups<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="40">i<pos:position pos:line="7" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="43">j<pos:position pos:line="7" pos:column="44"/></name> <init pos:line="7" pos:column="45">= <expr><literal type="number" pos:line="7" pos:column="47">0<pos:position pos:line="7" pos:column="48"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="50">strip_dm<pos:position pos:line="7" pos:column="58"/></name> <init pos:line="7" pos:column="59">= <expr><literal type="number" pos:line="7" pos:column="61">0<pos:position pos:line="7" pos:column="62"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* make standard output line buffered */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">setvbuf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stdout<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">_IOLBF<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* get user options */</comment>
    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">ch<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">getopt<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">argc<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">argv<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="37">"dspg:"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator> <operator pos:line="13" pos:column="47">!=<pos:position pos:line="13" pos:column="49"/></operator> <operator pos:line="13" pos:column="50">-<pos:position pos:line="13" pos:column="51"/></operator><literal type="number" pos:line="13" pos:column="51">1<pos:position pos:line="13" pos:column="52"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition> <block pos:line="13" pos:column="54">{
        <switch pos:line="14" pos:column="9">switch <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">ch<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition> <block pos:line="14" pos:column="21">{
        <case pos:line="15" pos:column="9">case <expr><literal type="char" pos:line="15" pos:column="14">'d'<pos:position pos:line="15" pos:column="17"/></literal></expr>:<pos:position pos:line="15" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="16" pos:column="13">debug_enabled<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>
        <case pos:line="18" pos:column="9">case <expr><literal type="char" pos:line="18" pos:column="14">'s'<pos:position pos:line="18" pos:column="17"/></literal></expr>:<pos:position pos:line="18" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="19" pos:column="13">strip_dm<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">1<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
        <case pos:line="21" pos:column="9">case <expr><literal type="char" pos:line="21" pos:column="14">'p'<pos:position pos:line="21" pos:column="17"/></literal></expr>:<pos:position pos:line="21" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="22" pos:column="13">check_pw<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
        <case pos:line="24" pos:column="9">case <expr><literal type="char" pos:line="24" pos:column="14">'g'<pos:position pos:line="24" pos:column="17"/></literal></expr>:<pos:position pos:line="24" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="25" pos:column="13">grents<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">char<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></operator><operator pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></operator><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">realloc<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">grents<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="46">sizeof<argument_list pos:line="25" pos:column="52">(<argument><expr><operator pos:line="25" pos:column="53">*<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">grents<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></sizeof> <operator pos:line="25" pos:column="62">*<pos:position pos:line="25" pos:column="63"/></operator> <operator pos:line="25" pos:column="64">(<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="65">ngroups<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">+<pos:position pos:line="25" pos:column="73"/></operator><literal type="number" pos:line="25" pos:column="73">1<pos:position pos:line="25" pos:column="74"/></literal><operator pos:line="25" pos:column="74">)<pos:position pos:line="25" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">grents<pos:position pos:line="26" pos:column="19"/></name><index pos:line="26" pos:column="19">[<expr><name pos:line="26" pos:column="20">ngroups<pos:position pos:line="26" pos:column="27"/></name></expr>]<pos:position pos:line="26" pos:column="28"/></index></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">optarg<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="27" pos:column="13">++<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">ngroups<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
            <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>
        <case pos:line="29" pos:column="9">case <expr><literal type="char" pos:line="29" pos:column="14">'?'<pos:position pos:line="29" pos:column="17"/></literal></expr>:<pos:position pos:line="29" pos:column="18"/></case>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><call><name pos:line="30" pos:column="17">xisprint<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">optopt<pos:position pos:line="30" pos:column="32"/></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block pos:line="30" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">fprintf<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">stderr<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"Unknown option '-%c'.\n"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">optopt<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then> <else pos:line="32" pos:column="15">else <block pos:line="32" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">fprintf<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">stderr<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="33">"Unknown option character `\\x%x'.\n"<pos:position pos:line="33" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="72">optopt<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></else></if>
        <comment type="line" pos:line="35" pos:column="9">// fall through to display help texts.</comment>

        <default pos:line="37" pos:column="9">default:<pos:position pos:line="37" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">usage<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name><name pos:line="38" pos:column="19">argv<pos:position pos:line="38" pos:column="23"/></name><index pos:line="38" pos:column="23">[<expr><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal></expr>]<pos:position pos:line="38" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">exit<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></switch>
    }<pos:position pos:line="41" pos:column="6"/></block></while>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">optind<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">&lt;<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="18">argc<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">fprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">stderr<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"FATAL: Unknown option '%s'\n"<pos:position pos:line="43" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="57">argv<pos:position pos:line="43" pos:column="61"/></name><index pos:line="43" pos:column="61">[<expr><name pos:line="43" pos:column="62">optind<pos:position pos:line="43" pos:column="68"/></name></expr>]<pos:position pos:line="43" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">usage<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name><name pos:line="44" pos:column="15">argv<pos:position pos:line="44" pos:column="19"/></name><index pos:line="44" pos:column="19">[<expr><literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>]<pos:position pos:line="44" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">exit<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <while pos:line="47" pos:column="5">while <condition pos:line="47" pos:column="11">(<expr><call><name pos:line="47" pos:column="12">fgets<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">buf<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">HELPER_INPUT_BUFFER<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">stdin<pos:position pos:line="47" pos:column="49"/></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="51"/></condition> <block pos:line="47" pos:column="52">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">j<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <literal type="number" pos:line="48" pos:column="13">0<pos:position pos:line="48" pos:column="14"/></literal></expr>;<pos:position pos:line="48" pos:column="15"/></expr_stmt>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">p<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">strchr<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">buf<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="30">'\n'<pos:position pos:line="49" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call><operator pos:line="49" pos:column="35">)<pos:position pos:line="49" pos:column="36"/></operator> <operator pos:line="49" pos:column="37">==<pos:position pos:line="49" pos:column="39"/></operator> <name pos:line="49" pos:column="40">NULL<pos:position pos:line="49" pos:column="44"/></name></expr>)<pos:position pos:line="49" pos:column="45"/></condition><then pos:line="49" pos:column="45"> <block pos:line="49" pos:column="46">{
            <comment type="block" pos:line="50" pos:column="13">/* too large message received.. skip and deny */</comment>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">fprintf<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">stderr<pos:position pos:line="51" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="29">"ERROR: %s: Too large: %s\n"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="59">argv<pos:position pos:line="51" pos:column="63"/></name><index pos:line="51" pos:column="63">[<expr><literal type="number" pos:line="51" pos:column="64">0<pos:position pos:line="51" pos:column="65"/></literal></expr>]<pos:position pos:line="51" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="68">buf<pos:position pos:line="51" pos:column="71"/></name></expr></argument>)<pos:position pos:line="51" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="73"/></expr_stmt>
            <while pos:line="52" pos:column="13">while <condition pos:line="52" pos:column="19">(<expr><call><name pos:line="52" pos:column="20">fgets<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">buf<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="31">sizeof<argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">buf<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">stdin<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="51"/></condition> <block pos:line="52" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">fprintf<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">stderr<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="33">"ERROR: %s: Too large..: %s\n"<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="65">argv<pos:position pos:line="53" pos:column="69"/></name><index pos:line="53" pos:column="69">[<expr><literal type="number" pos:line="53" pos:column="70">0<pos:position pos:line="53" pos:column="71"/></literal></expr>]<pos:position pos:line="53" pos:column="72"/></index></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="74">buf<pos:position pos:line="53" pos:column="77"/></name></expr></argument>)<pos:position pos:line="53" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="79"/></expr_stmt>
                <if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><call><name pos:line="54" pos:column="21">strchr<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">buf<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="54" pos:column="33">'\n'<pos:position pos:line="54" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call> <operator pos:line="54" pos:column="39">!=<pos:position pos:line="54" pos:column="41"/></operator> <name pos:line="54" pos:column="42">NULL<pos:position pos:line="54" pos:column="46"/></name></expr>)<pos:position pos:line="54" pos:column="47"/></condition><then pos:line="54" pos:column="47">
                    <block type="pseudo"><break pos:line="55" pos:column="21">break;<pos:position pos:line="55" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="56" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">SEND_BH<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><call><name pos:line="57" pos:column="21">HLP_MSG<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><literal type="string" pos:line="57" pos:column="29">"Username Input too large."<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="59"/></expr_stmt>
            <continue pos:line="58" pos:column="13">continue;<pos:position pos:line="58" pos:column="22"/></continue>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">p<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <literal type="char" pos:line="60" pos:column="14">'\0'<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">p<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">strtok<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">buf<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="30">" "<pos:position pos:line="61" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call><operator pos:line="61" pos:column="34">)<pos:position pos:line="61" pos:column="35"/></operator> <operator pos:line="61" pos:column="36">==<pos:position pos:line="61" pos:column="38"/></operator> <name pos:line="61" pos:column="39">NULL<pos:position pos:line="61" pos:column="43"/></name></expr>)<pos:position pos:line="61" pos:column="44"/></condition><then pos:line="61" pos:column="44"> <block pos:line="61" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">SEND_BH<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><call><name pos:line="62" pos:column="21">HLP_MSG<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><literal type="string" pos:line="62" pos:column="29">"No username given."<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
            <continue pos:line="63" pos:column="13">continue;<pos:position pos:line="63" pos:column="22"/></continue>
        }<pos:position pos:line="64" pos:column="10"/></block></then> <else pos:line="64" pos:column="11">else <block pos:line="64" pos:column="16">{
            <expr_stmt><expr><name pos:line="65" pos:column="13">user<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">=<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">p<pos:position pos:line="65" pos:column="21"/></name></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">rfc1738_unescape<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name pos:line="66" pos:column="30">user<pos:position pos:line="66" pos:column="34"/></name></expr></argument>)<pos:position pos:line="66" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name pos:line="67" pos:column="17">strip_dm<pos:position pos:line="67" pos:column="25"/></name></expr>)<pos:position pos:line="67" pos:column="26"/></condition><then pos:line="67" pos:column="26"> <block pos:line="67" pos:column="27">{
                <expr_stmt><expr><name pos:line="68" pos:column="17">suser<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">=<pos:position pos:line="68" pos:column="24"/></operator> <call><name pos:line="68" pos:column="25">strchr<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">user<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="68" pos:column="38">'\\'<pos:position pos:line="68" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
                <if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">suser<pos:position pos:line="69" pos:column="27"/></name></expr>)<pos:position pos:line="69" pos:column="28"/></condition><then pos:line="69" pos:column="28"> <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="29">suser<pos:position pos:line="69" pos:column="34"/></name> <operator pos:line="69" pos:column="35">=<pos:position pos:line="69" pos:column="36"/></operator> <call><name pos:line="69" pos:column="37">strchr<pos:position pos:line="69" pos:column="43"/></name><argument_list pos:line="69" pos:column="43">(<argument><expr><name pos:line="69" pos:column="44">user<pos:position pos:line="69" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="50">'/'<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt></block></then></if>
                <if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">suser<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">&amp;&amp;<pos:position pos:line="70" pos:column="37"/></operator> <name><name pos:line="70" pos:column="30">suser<pos:position pos:line="70" pos:column="35"/></name><index pos:line="70" pos:column="35">[<expr><literal type="number" pos:line="70" pos:column="36">1<pos:position pos:line="70" pos:column="37"/></literal></expr>]<pos:position pos:line="70" pos:column="38"/></index></name></expr>)<pos:position pos:line="70" pos:column="39"/></condition><then pos:line="70" pos:column="39"> <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="40">user<pos:position pos:line="70" pos:column="44"/></name> <operator pos:line="70" pos:column="45">=<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="47">suser<pos:position pos:line="70" pos:column="52"/></name> <operator pos:line="70" pos:column="53">+<pos:position pos:line="70" pos:column="54"/></operator> <literal type="number" pos:line="70" pos:column="55">1<pos:position pos:line="70" pos:column="56"/></literal></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt></block></then></if>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="72" pos:column="13">/* check groups supplied by Squid */</comment>
            <while pos:line="73" pos:column="13">while <condition pos:line="73" pos:column="19">(<expr><operator pos:line="73" pos:column="20">(<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="21">p<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <call><name pos:line="73" pos:column="25">strtok<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">NULL<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="38">" "<pos:position pos:line="73" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="42"/></argument_list></call><operator pos:line="73" pos:column="42">)<pos:position pos:line="73" pos:column="43"/></operator> <operator pos:line="73" pos:column="44">!=<pos:position pos:line="73" pos:column="46"/></operator> <name pos:line="73" pos:column="47">NULL<pos:position pos:line="73" pos:column="51"/></name></expr>)<pos:position pos:line="73" pos:column="52"/></condition> <block pos:line="73" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">rfc1738_unescape<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">p<pos:position pos:line="74" pos:column="35"/></name></expr></argument>)<pos:position pos:line="74" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">check_pw<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">==<pos:position pos:line="75" pos:column="32"/></operator> <literal type="number" pos:line="75" pos:column="33">1<pos:position pos:line="75" pos:column="34"/></literal></expr>)<pos:position pos:line="75" pos:column="35"/></condition><then pos:line="75" pos:column="35">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="21">j<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">+=<pos:position pos:line="76" pos:column="25"/></operator> <call><name pos:line="76" pos:column="26">validate_user_pw<pos:position pos:line="76" pos:column="42"/></name><argument_list pos:line="76" pos:column="42">(<argument><expr><name pos:line="76" pos:column="43">user<pos:position pos:line="76" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="49">p<pos:position pos:line="76" pos:column="50"/></name></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="52"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="77" pos:column="17">j<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">+=<pos:position pos:line="77" pos:column="21"/></operator> <call><name pos:line="77" pos:column="22">validate_user_gr<pos:position pos:line="77" pos:column="38"/></name><argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">user<pos:position pos:line="77" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="45">p<pos:position pos:line="77" pos:column="46"/></name></expr></argument>)<pos:position pos:line="77" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></while>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="81" pos:column="9">/* check groups supplied on the command line */</comment>
        <for pos:line="82" pos:column="9">for <control pos:line="82" pos:column="13">(<init><expr><name pos:line="82" pos:column="14">i<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <literal type="number" pos:line="82" pos:column="18">0<pos:position pos:line="82" pos:column="19"/></literal></expr>;<pos:position pos:line="82" pos:column="20"/></init> <condition><expr><name pos:line="82" pos:column="21">i<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">&lt;<pos:position pos:line="82" pos:column="27"/></operator> <name pos:line="82" pos:column="25">ngroups<pos:position pos:line="82" pos:column="32"/></name></expr>;<pos:position pos:line="82" pos:column="33"/></condition> <incr><expr><operator pos:line="82" pos:column="34">++<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="36">i<pos:position pos:line="82" pos:column="37"/></name></expr></incr>)<pos:position pos:line="82" pos:column="38"/></control> <block pos:line="82" pos:column="39">{
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">check_pw<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">==<pos:position pos:line="83" pos:column="28"/></operator> <literal type="number" pos:line="83" pos:column="29">1<pos:position pos:line="83" pos:column="30"/></literal></expr>)<pos:position pos:line="83" pos:column="31"/></condition><then pos:line="83" pos:column="31"> <block pos:line="83" pos:column="32">{
                <expr_stmt><expr><name pos:line="84" pos:column="17">j<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">+=<pos:position pos:line="84" pos:column="21"/></operator> <call><name pos:line="84" pos:column="22">validate_user_pw<pos:position pos:line="84" pos:column="38"/></name><argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">user<pos:position pos:line="84" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="45">grents<pos:position pos:line="84" pos:column="51"/></name><index pos:line="84" pos:column="51">[<expr><name pos:line="84" pos:column="52">i<pos:position pos:line="84" pos:column="53"/></name></expr>]<pos:position pos:line="84" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="84" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="86" pos:column="13">j<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">+=<pos:position pos:line="86" pos:column="17"/></operator> <call><name pos:line="86" pos:column="18">validate_user_gr<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">(<argument><expr><name pos:line="86" pos:column="35">user<pos:position pos:line="86" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="41">grents<pos:position pos:line="86" pos:column="47"/></name><index pos:line="86" pos:column="47">[<expr><name pos:line="86" pos:column="48">i<pos:position pos:line="86" pos:column="49"/></name></expr>]<pos:position pos:line="86" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></for>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">j<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">&gt;<pos:position pos:line="89" pos:column="19"/></operator> <literal type="number" pos:line="89" pos:column="17">0<pos:position pos:line="89" pos:column="18"/></literal></expr>)<pos:position pos:line="89" pos:column="19"/></condition><then pos:line="89" pos:column="19"> <block pos:line="89" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">SEND_OK<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><literal type="string" pos:line="90" pos:column="21">""<pos:position pos:line="90" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></then> <else pos:line="91" pos:column="11">else <block pos:line="91" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">SEND_ERR<pos:position pos:line="92" pos:column="21"/></name><argument_list pos:line="92" pos:column="21">(<argument><expr><literal type="string" pos:line="92" pos:column="22">""<pos:position pos:line="92" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="93" pos:column="10"/></block></else></if>
    }<pos:position pos:line="94" pos:column="6"/></block></while>
    <return pos:line="95" pos:column="5">return <expr><literal type="number" pos:line="95" pos:column="12">0<pos:position pos:line="95" pos:column="13"/></literal></expr>;<pos:position pos:line="95" pos:column="14"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

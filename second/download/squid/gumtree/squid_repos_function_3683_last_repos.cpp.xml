<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3683_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">announceStatusChange<pos:position pos:line="1" pos:column="56"/></name></name><parameter_list pos:line="1" pos:column="56">(<parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">downPhrase<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="81">bool<pos:position pos:line="1" pos:column="85"/></name></type> <name pos:line="1" pos:column="86">important<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list> <specifier pos:line="1" pos:column="97">const<pos:position pos:line="1" pos:column="102"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">wasAnnouncedUp<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">==<pos:position pos:line="3" pos:column="26"/></operator> <call><name pos:line="3" pos:column="27">up<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">()<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <comment type="line" pos:line="3" pos:column="33">// no significant changes to announce</comment>
        <block type="pseudo"><return pos:line="4" pos:column="9">return;<pos:position pos:line="4" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">what<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><ternary><condition><expr><call><name pos:line="6" pos:column="24">cfg<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call><operator pos:line="6" pos:column="29">.<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">bypass<pos:position pos:line="6" pos:column="36"/></name></expr> ?<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38"> <expr><literal type="string" pos:line="6" pos:column="39">"optional"<pos:position pos:line="6" pos:column="49"/></literal></expr> <pos:position pos:line="6" pos:column="50"/></then><else pos:line="6" pos:column="50">: <expr><literal type="string" pos:line="6" pos:column="52">"essential"<pos:position pos:line="6" pos:column="63"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">state<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><ternary><condition><expr><name pos:line="7" pos:column="25">wasAnnouncedUp<pos:position pos:line="7" pos:column="39"/></name></expr> ?<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <expr><name pos:line="7" pos:column="42">downPhrase<pos:position pos:line="7" pos:column="52"/></name></expr> <pos:position pos:line="7" pos:column="53"/></then><else pos:line="7" pos:column="53">: <expr><literal type="string" pos:line="7" pos:column="55">"up"<pos:position pos:line="7" pos:column="59"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">int<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">level<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><ternary><condition><expr><name pos:line="8" pos:column="23">important<pos:position pos:line="8" pos:column="32"/></name></expr> ?<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <expr><literal type="number" pos:line="8" pos:column="35">1<pos:position pos:line="8" pos:column="36"/></literal></expr> <pos:position pos:line="8" pos:column="37"/></then><else pos:line="8" pos:column="37">:<expr><literal type="number" pos:line="8" pos:column="38">2<pos:position pos:line="8" pos:column="39"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">93<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>,<argument><expr><name pos:line="9" pos:column="15">level<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">what<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">&lt;&lt;<pos:position pos:line="9" pos:column="35"/></operator> <literal type="string" pos:line="9" pos:column="30">" ICAP service is "<pos:position pos:line="9" pos:column="49"/></literal> <operator pos:line="9" pos:column="50">&lt;&lt;<pos:position pos:line="9" pos:column="58"/></operator> <name pos:line="9" pos:column="53">state<pos:position pos:line="9" pos:column="58"/></name> <operator pos:line="9" pos:column="59">&lt;&lt;<pos:position pos:line="9" pos:column="67"/></operator> <literal type="string" pos:line="9" pos:column="62">": "<pos:position pos:line="9" pos:column="66"/></literal> <operator pos:line="9" pos:column="67">&lt;&lt;<pos:position pos:line="9" pos:column="75"/></operator>
           <call><name pos:line="10" pos:column="12">cfg<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">()<pos:position pos:line="10" pos:column="17"/></argument_list></call><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">uri<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&lt;&lt;<pos:position pos:line="10" pos:column="30"/></operator> <literal type="char" pos:line="10" pos:column="25">' '<pos:position pos:line="10" pos:column="28"/></literal> <operator pos:line="10" pos:column="29">&lt;&lt;<pos:position pos:line="10" pos:column="37"/></operator> <call><name pos:line="10" pos:column="32">status<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">wasAnnouncedUp<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">!<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">wasAnnouncedUp<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

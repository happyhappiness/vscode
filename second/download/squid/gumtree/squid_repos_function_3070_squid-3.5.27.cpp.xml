<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3070_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">storeGetMemSpace<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">size<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">storeGetMemSpace<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">released<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">time_t<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">last_check<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">pages_needed<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">RemovalPurgeWalker<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">walker<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">squid_curtime<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">last_check<pos:position pos:line="11" pos:column="36"/></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">PROF_stop<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">storeGetMemSpace<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">last_check<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">squid_curtime<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">pages_needed<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">size<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">+<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">SM_PAGE_SIZE<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-<pos:position pos:line="18" pos:column="41"/></operator><literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator> <operator pos:line="18" pos:column="44">/<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="46">SM_PAGE_SIZE<pos:position pos:line="18" pos:column="58"/></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name><name pos:line="20" pos:column="9">mem_node<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">::<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">InUseCount<pos:position pos:line="20" pos:column="29"/></name></name><argument_list pos:line="20" pos:column="29">()<pos:position pos:line="20" pos:column="31"/></argument_list></call> <operator pos:line="20" pos:column="32">+<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">pages_needed<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">&lt;<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="49">store_pages_max<pos:position pos:line="20" pos:column="64"/></name></expr>)<pos:position pos:line="20" pos:column="65"/></condition><then pos:line="20" pos:column="65"> <block pos:line="20" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">PROF_stop<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">storeGetMemSpace<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">debugs<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">20<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="16">2<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="19">"storeGetMemSpace: Starting, need "<pos:position pos:line="25" pos:column="54"/></literal> <operator pos:line="25" pos:column="55">&lt;&lt;<pos:position pos:line="25" pos:column="63"/></operator> <name pos:line="25" pos:column="58">pages_needed<pos:position pos:line="25" pos:column="70"/></name> <operator pos:line="25" pos:column="71">&lt;&lt;<pos:position pos:line="25" pos:column="79"/></operator>
           <literal type="string" pos:line="26" pos:column="12">" pages"<pos:position pos:line="26" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* XXX what to set as max_scan here? */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">walker<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name><name pos:line="29" pos:column="14">mem_policy<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">PurgeInit<pos:position pos:line="29" pos:column="35"/></name></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">mem_policy<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="48">100000<pos:position pos:line="29" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>

    <while pos:line="31" pos:column="5">while <condition pos:line="31" pos:column="11">(<expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">e<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <call><name><name pos:line="31" pos:column="17">walker<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">Next<pos:position pos:line="31" pos:column="29"/></name></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">walker<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call><operator pos:line="31" pos:column="37">)<pos:position pos:line="31" pos:column="38"/></operator></expr>)<pos:position pos:line="31" pos:column="39"/></condition> <block pos:line="31" pos:column="40">{
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">e<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">purgeMem<pos:position pos:line="32" pos:column="20"/></name></name><argument_list pos:line="32" pos:column="20">()<pos:position pos:line="32" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">++<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">released<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name><name pos:line="35" pos:column="13">mem_node<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">::<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">InUseCount<pos:position pos:line="35" pos:column="33"/></name></name><argument_list pos:line="35" pos:column="33">()<pos:position pos:line="35" pos:column="35"/></argument_list></call> <operator pos:line="35" pos:column="36">+<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">pages_needed<pos:position pos:line="35" pos:column="50"/></name> <operator pos:line="35" pos:column="51">&lt;<pos:position pos:line="35" pos:column="55"/></operator> <name pos:line="35" pos:column="53">store_pages_max<pos:position pos:line="35" pos:column="68"/></name></expr>)<pos:position pos:line="35" pos:column="69"/></condition><then pos:line="35" pos:column="69">
            <block type="pseudo"><break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">walker<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">Done<pos:position pos:line="39" pos:column="17"/></name></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">walker<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">debugs<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><literal type="number" pos:line="40" pos:column="12">20<pos:position pos:line="40" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="16">3<pos:position pos:line="40" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="19">"storeGetMemSpace stats:"<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">debugs<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="number" pos:line="41" pos:column="12">20<pos:position pos:line="41" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="16">3<pos:position pos:line="41" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"  "<pos:position pos:line="41" pos:column="23"/></literal> <operator pos:line="41" pos:column="24">&lt;&lt;<pos:position pos:line="41" pos:column="32"/></operator> <call><name><name pos:line="41" pos:column="27">std<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">::<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">setw<pos:position pos:line="41" pos:column="36"/></name></name><argument_list pos:line="41" pos:column="36">(<argument><expr><literal type="number" pos:line="41" pos:column="37">6<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call> <operator pos:line="41" pos:column="40">&lt;&lt;<pos:position pos:line="41" pos:column="48"/></operator> <name pos:line="41" pos:column="43">hot_obj_count<pos:position pos:line="41" pos:column="56"/></name>  <operator pos:line="41" pos:column="58">&lt;&lt;<pos:position pos:line="41" pos:column="66"/></operator> <literal type="string" pos:line="41" pos:column="61">" HOT objects"<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">debugs<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><literal type="number" pos:line="42" pos:column="12">20<pos:position pos:line="42" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="16">3<pos:position pos:line="42" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="19">"  "<pos:position pos:line="42" pos:column="23"/></literal> <operator pos:line="42" pos:column="24">&lt;&lt;<pos:position pos:line="42" pos:column="32"/></operator> <call><name><name pos:line="42" pos:column="27">std<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">::<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">setw<pos:position pos:line="42" pos:column="36"/></name></name><argument_list pos:line="42" pos:column="36">(<argument><expr><literal type="number" pos:line="42" pos:column="37">6<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call> <operator pos:line="42" pos:column="40">&lt;&lt;<pos:position pos:line="42" pos:column="48"/></operator> <name pos:line="42" pos:column="43">released<pos:position pos:line="42" pos:column="51"/></name>  <operator pos:line="42" pos:column="53">&lt;&lt;<pos:position pos:line="42" pos:column="61"/></operator> <literal type="string" pos:line="42" pos:column="56">" were released"<pos:position pos:line="42" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">PROF_stop<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">storeGetMemSpace<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

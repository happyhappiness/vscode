<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1802_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">external_acl<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">trimCache<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">cache_size<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&amp;&amp;<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="23">cache_entries<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">&gt;=<pos:position pos:line="4" pos:column="42"/></operator> <name pos:line="4" pos:column="40">cache_size<pos:position pos:line="4" pos:column="50"/></name></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">external_acl_cache_delete<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">this<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="5" pos:column="41">static_cast<argument_list type="generic" pos:line="5" pos:column="52">&lt;<argument><expr><name pos:line="5" pos:column="53">external_acl_entry<pos:position pos:line="5" pos:column="71"/></name> <operator pos:line="5" pos:column="72">*<pos:position pos:line="5" pos:column="73"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="77"/></argument_list><argument_list pos:line="5" pos:column="74">(<argument><expr><name><name pos:line="5" pos:column="75">lru_list<pos:position pos:line="5" pos:column="83"/></name><operator pos:line="5" pos:column="83">.<pos:position pos:line="5" pos:column="84"/></operator><name pos:line="5" pos:column="84">tail<pos:position pos:line="5" pos:column="88"/></name><operator pos:line="5" pos:column="88">-&gt;<pos:position pos:line="5" pos:column="93"/></operator><name pos:line="5" pos:column="90">data<pos:position pos:line="5" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="95"/></argument_list></cast></expr></argument>)<pos:position pos:line="5" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="97"/></expr_stmt></block></then></if>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

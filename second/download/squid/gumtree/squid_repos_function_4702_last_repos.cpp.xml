<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4702_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">SBufToCstring<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">d<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">SBuf<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">&amp;<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="36">s<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">s<pos:position pos:line="4" pos:column="6"/></name><operator pos:line="4" pos:column="6">.<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">copy<pos:position pos:line="4" pos:column="11"/></name></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">d<pos:position pos:line="4" pos:column="13"/></name></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">length<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">d<pos:position pos:line="5" pos:column="6"/></name><index pos:line="5" pos:column="6">[<expr><call><name><name pos:line="5" pos:column="7">s<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">length<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">()<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>]<pos:position pos:line="5" pos:column="18"/></index></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <literal type="char" pos:line="5" pos:column="21">'\0'<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt> <comment type="line" pos:line="5" pos:column="27">// 0-terminate the destination</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">1<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="15">DBG_DATA<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="25">"built c-string '"<pos:position pos:line="6" pos:column="43"/></literal> <operator pos:line="6" pos:column="44">&lt;&lt;<pos:position pos:line="6" pos:column="52"/></operator> <name pos:line="6" pos:column="47">d<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">&lt;&lt;<pos:position pos:line="6" pos:column="57"/></operator> <literal type="string" pos:line="6" pos:column="52">"' from "<pos:position pos:line="6" pos:column="61"/></literal> <operator pos:line="6" pos:column="62">&lt;&lt;<pos:position pos:line="6" pos:column="70"/></operator> <name pos:line="6" pos:column="65">s<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

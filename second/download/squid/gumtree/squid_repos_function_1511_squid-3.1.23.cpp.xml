<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1511_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPools<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Stats<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">sentry<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">short<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">i<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">storeAppendPrintf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">sentry<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="31">"Delay pools configured: %d\n\n"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="65">DelayPools<pos:position pos:line="6" pos:column="75"/></name><operator pos:line="6" pos:column="75">::<pos:position pos:line="6" pos:column="77"/></operator><name pos:line="6" pos:column="77">pools<pos:position pos:line="6" pos:column="82"/></name></name><argument_list pos:line="6" pos:column="82">()<pos:position pos:line="6" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="86"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <call><name><name pos:line="8" pos:column="21">DelayPools<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">::<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">pools<pos:position pos:line="8" pos:column="38"/></name></name><argument_list pos:line="8" pos:column="38">()<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></condition> <incr><expr><operator pos:line="8" pos:column="42">++<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">i<pos:position pos:line="8" pos:column="45"/></name></expr></incr>)<pos:position pos:line="8" pos:column="46"/></control> <block pos:line="8" pos:column="47">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">DelayPools<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">::<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">delay_data<pos:position pos:line="9" pos:column="35"/></name><index pos:line="9" pos:column="35">[<expr><name pos:line="9" pos:column="36">i<pos:position pos:line="9" pos:column="37"/></name></expr>]<pos:position pos:line="9" pos:column="38"/></index></name><operator pos:line="9" pos:column="38">.<pos:position pos:line="9" pos:column="39"/></operator><call><name pos:line="9" pos:column="39">theComposite<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">()<pos:position pos:line="9" pos:column="53"/></argument_list></call><operator pos:line="9" pos:column="53">.<pos:position pos:line="9" pos:column="54"/></operator><call><name pos:line="9" pos:column="54">getRaw<pos:position pos:line="9" pos:column="60"/></name><argument_list pos:line="9" pos:column="60">()<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63"> <block pos:line="9" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">storeAppendPrintf<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">sentry<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"Pool: %d\n\tClass: %s\n\n"<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="68">i<pos:position pos:line="10" pos:column="69"/></name> <operator pos:line="10" pos:column="70">+<pos:position pos:line="10" pos:column="71"/></operator> <literal type="number" pos:line="10" pos:column="72">1<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="75">DelayPools<pos:position pos:line="10" pos:column="85"/></name><operator pos:line="10" pos:column="85">::<pos:position pos:line="10" pos:column="87"/></operator><name pos:line="10" pos:column="87">delay_data<pos:position pos:line="10" pos:column="97"/></name><index pos:line="10" pos:column="97">[<expr><name pos:line="10" pos:column="98">i<pos:position pos:line="10" pos:column="99"/></name></expr>]<pos:position pos:line="10" pos:column="100"/></index></name><operator pos:line="10" pos:column="100">.<pos:position pos:line="10" pos:column="101"/></operator><call><name><name pos:line="10" pos:column="101">pool<pos:position pos:line="10" pos:column="105"/></name><operator pos:line="10" pos:column="105">-&gt;<pos:position pos:line="10" pos:column="110"/></operator><name pos:line="10" pos:column="107">theClassTypeLabel<pos:position pos:line="10" pos:column="124"/></name></name><argument_list pos:line="10" pos:column="124">()<pos:position pos:line="10" pos:column="126"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="128"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">DelayPools<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">::<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">delay_data<pos:position pos:line="11" pos:column="35"/></name><index pos:line="11" pos:column="35">[<expr><name pos:line="11" pos:column="36">i<pos:position pos:line="11" pos:column="37"/></name></expr>]<pos:position pos:line="11" pos:column="38"/></index></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><call><name pos:line="11" pos:column="39">theComposite<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">()<pos:position pos:line="11" pos:column="53"/></argument_list></call><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><call><name pos:line="11" pos:column="55">stats<pos:position pos:line="11" pos:column="60"/></name> <argument_list pos:line="11" pos:column="61">(<argument><expr><name pos:line="11" pos:column="62">sentry<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then> <else pos:line="12" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="13">storeAppendPrintf<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">sentry<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="39">"\tMisconfigured pool.\n\n"<pos:position pos:line="13" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt></block></else></if>
    }<pos:position pos:line="14" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">storeAppendPrintf<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">sentry<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"Memory Used: %d bytes\n"<pos:position pos:line="16" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">(<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">int<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">)<pos:position pos:line="16" pos:column="63"/></operator> <name><name pos:line="16" pos:column="64">DelayPools<pos:position pos:line="16" pos:column="74"/></name><operator pos:line="16" pos:column="74">::<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="76">MemoryUsed<pos:position pos:line="16" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="88"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

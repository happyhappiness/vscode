<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5370_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiTry<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">notifyParent<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">flags<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">.<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">attemptfailed<pos:position pos:line="4" pos:column="28"/></name></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">flags<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">exceptok<pos:position pos:line="5" pos:column="27"/></name></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
            <expr_stmt><expr><call><name><name pos:line="6" pos:column="13">parent<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">provideData<pos:position pos:line="6" pos:column="32"/></name></name> <argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">exceptbuffer<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">this<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="7" pos:column="13">exceptbuffer<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="8" pos:column="10"/></block></then> <elseif pos:line="8" pos:column="11">else <if pos:line="8" pos:column="16">if <condition pos:line="8" pos:column="19">(<expr><name><name pos:line="8" pos:column="20">flags<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">exceptfailed<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">||<pos:position pos:line="8" pos:column="41"/></operator> <call><name><name pos:line="8" pos:column="42">except<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">.<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="49">getRaw<pos:position pos:line="8" pos:column="55"/></name></name><argument_list pos:line="8" pos:column="55">()<pos:position pos:line="8" pos:column="57"/></argument_list></call> <operator pos:line="8" pos:column="58">==<pos:position pos:line="8" pos:column="60"/></operator> <name pos:line="8" pos:column="61">NULL<pos:position pos:line="8" pos:column="65"/></name></expr>)<pos:position pos:line="8" pos:column="66"/></condition><then pos:line="8" pos:column="66"> <block pos:line="8" pos:column="67">{
            <expr_stmt><expr><call><name><name pos:line="9" pos:column="13">parent<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">fail<pos:position pos:line="9" pos:column="25"/></name></name> <argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">this<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"esi:try - except claused failed, or no except clause found"<pos:position pos:line="9" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="95"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* nothing to do when except fails and attempt hasn't */</comment>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>
